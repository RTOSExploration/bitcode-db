; ModuleID = './build/flash_read_write_data.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.9 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !92
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !279
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !342
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !339
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !294
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !316
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !343
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !626
@.str.35 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.36 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !737
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !755
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !769
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !780
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !750
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !781
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !853
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !858
@.str.81 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.82 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !866
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !957
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !944
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.87 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !962
@.str.97 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.98 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1041
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1043
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1045
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1047
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1049
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1051
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1053
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1055
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1057
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1059
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1061
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1374
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1376
@.str.101 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.102 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1385
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1378
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1386
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1438
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1441
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1474
@nor_egid = dso_local local_unnamed_addr global %struct.anon.9* null, align 4, !dbg !1485
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1801
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1672
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1700
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1803
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1510
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1696
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1698
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1522
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1783
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1786
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !1816
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !1675
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1688
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1659
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1663
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1661
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1512
@.str.117 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.118 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1788
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1667
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1684
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1686
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !1843
@.str.123 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.124 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !1903
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1790
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1904
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1918
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1920
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1922
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1924
@.str.139 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.140 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !1926
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !1980
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !1982
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !1984
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1996
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1998
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2000
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2002
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2105
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2107
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2109
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2111
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2113
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2115
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2117
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2119
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2121
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2123
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2125
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2127
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2129
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2131
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2103
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2150
@.str.151 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.152 = private unnamed_addr constant [20 x i8] c"Welcome to main()\0D\0A\00", align 1
@__const.flash_sample.data = private unnamed_addr constant [8 x i32] [i32 1515870810, i32 -1515870811, i32 1432760836, i32 623007832, i32 -2245735, i32 -288576888, i32 1432760836, i32 623007832], align 4
@.str.2 = private unnamed_addr constant [32 x i8] c"\0D\0A ---flash_example begins---\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"Flash erase failed! \0A\0D\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"Flash write failed! \0A\0D\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"Data comparison failed! \0A\0D\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"Flash example is successful! \0A\0D\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"example project test success.\0A\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"\0D\0A ---flash_example finished!!!---\0D\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2162
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2366
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2474
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 07:59:55 GMT +00:00\00", align 1, !dbg !2476
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2481
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2487

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !2584 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2592
  call void @llvm.dbg.value(metadata i32 %1, metadata !2591, metadata !DIExpression()), !dbg !2593
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !2594, !range !2596
  %3 = icmp eq i8 %2, 0, !dbg !2594
  br i1 %3, label %5, label %4, !dbg !2597

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !2598
  br label %15, !dbg !2600

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !2601
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !2603
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #22, !dbg !2604
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2605
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2606
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2607
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2608
  call void @llvm.dbg.value(metadata i32 0, metadata !2589, metadata !DIExpression()), !dbg !2593
  br label %7, !dbg !2609

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !2589, metadata !DIExpression()), !dbg !2593
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !2611
  store volatile i32 0, i32* %9, align 4, !dbg !2614
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !2615
  store volatile i32 0, i32* %10, align 4, !dbg !2616
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !2617
  store i32 0, i32* %11, align 4, !dbg !2618
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !2619
  store i32 0, i32* %12, align 4, !dbg !2620
  %13 = add nuw nsw i32 %8, 1, !dbg !2621
  call void @llvm.dbg.value(metadata i32 %13, metadata !2589, metadata !DIExpression()), !dbg !2593
  %14 = icmp eq i32 %13, 16, !dbg !2622
  br i1 %14, label %15, label %7, !dbg !2609, !llvm.loop !2623

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !2593
  ret i32 %16, !dbg !2625
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2626 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2629
  call void @llvm.dbg.value(metadata i32 %1, metadata !2628, metadata !DIExpression()), !dbg !2630
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2631
  %3 = and i32 %2, -31, !dbg !2631
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2631
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2632
  %5 = or i32 %4, 19, !dbg !2632
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2632
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2633
  %7 = and i32 %6, -31, !dbg !2633
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2633
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2634
  %9 = or i32 %8, 3, !dbg !2634
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2634
  tail call void asm sideeffect "isb", ""() #23, !dbg !2635, !srcloc !2639
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !2640
  ret i32 0, !dbg !2641
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !2642 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #22, !dbg !2645
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2646
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2647
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2648
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2649
  call void @llvm.dbg.value(metadata i32 0, metadata !2644, metadata !DIExpression()), !dbg !2650
  br label %2, !dbg !2651

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2644, metadata !DIExpression()), !dbg !2650
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !2653
  store volatile i32 0, i32* %4, align 4, !dbg !2656
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !2657
  store volatile i32 0, i32* %5, align 4, !dbg !2658
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !2659
  store i32 0, i32* %6, align 4, !dbg !2660
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !2661
  store i32 0, i32* %7, align 4, !dbg !2662
  %8 = add nuw nsw i32 %3, 1, !dbg !2663
  call void @llvm.dbg.value(metadata i32 %8, metadata !2644, metadata !DIExpression()), !dbg !2650
  %9 = icmp eq i32 %8, 16, !dbg !2664
  br i1 %9, label %10, label %2, !dbg !2651, !llvm.loop !2665

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !2667
  ret i32 0, !dbg !2668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !2669 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2670
  %2 = and i32 %1, 768, !dbg !2672
  %3 = icmp eq i32 %2, 0, !dbg !2672
  br i1 %3, label %8, label %4, !dbg !2673

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2674
  %6 = or i32 %5, 13, !dbg !2674
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2674
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2675
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2676
  br label %8, !dbg !2677

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !2678
  ret i32 %9, !dbg !2679
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !2680 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2683
  call void @llvm.dbg.value(metadata i32 %1, metadata !2682, metadata !DIExpression()), !dbg !2684
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2685
  %3 = and i32 %2, 1, !dbg !2687
  %4 = icmp eq i32 %3, 0, !dbg !2687
  br i1 %4, label %7, label %5, !dbg !2688

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #22, !dbg !2689
  br label %7, !dbg !2691

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2692
  %9 = and i32 %8, -2, !dbg !2692
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2692
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2693
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2694
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !2695
  ret i32 0, !dbg !2696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !2697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2701, metadata !DIExpression()), !dbg !2702
  %2 = icmp ugt i32 %0, 15, !dbg !2703
  br i1 %2, label %13, label %3, !dbg !2705

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2706
  %5 = load volatile i32, i32* %4, align 4, !dbg !2706
  %6 = and i32 %5, 256, !dbg !2708
  %7 = icmp eq i32 %6, 0, !dbg !2708
  br i1 %7, label %13, label %8, !dbg !2709

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !2710
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2712
  %11 = or i32 %10, %9, !dbg !2712
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2712
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2713
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !2714
  br label %13, !dbg !2715

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !2702
  ret i32 %14, !dbg !2716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !2717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2719, metadata !DIExpression()), !dbg !2720
  %2 = icmp ugt i32 %0, 15, !dbg !2721
  br i1 %2, label %11, label %3, !dbg !2723

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !2724
  %5 = xor i32 %4, -1, !dbg !2725
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2726
  %7 = and i32 %6, %5, !dbg !2726
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2726
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2727
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !2728
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2729
  store i32 0, i32* %9, align 4, !dbg !2730
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2731
  store i32 0, i32* %10, align 4, !dbg !2732
  br label %11, !dbg !2733

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !2720
  ret i32 %12, !dbg !2734
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !2735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2740, metadata !DIExpression()), !dbg !2741
  %2 = icmp ugt i32 %0, 3, !dbg !2742
  br i1 %2, label %13, label %3, !dbg !2744

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2745
  %5 = and i32 %4, -769, !dbg !2745
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2745
  %6 = shl nuw nsw i32 %0, 8, !dbg !2746
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2747
  %8 = or i32 %7, %6, !dbg !2747
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2747
  %9 = icmp eq i32 %0, 0, !dbg !2748
  br i1 %9, label %10, label %11, !dbg !2750

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2751
  br label %11, !dbg !2753

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2754
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2755
  br label %13, !dbg !2756

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !2741
  ret i32 %14, !dbg !2757
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !2758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2769, metadata !DIExpression()), !dbg !2771
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !2770, metadata !DIExpression()), !dbg !2771
  %3 = icmp ugt i32 %0, 15, !dbg !2772
  br i1 %3, label %30, label %4, !dbg !2774

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !2775
  br i1 %5, label %30, label %6, !dbg !2777

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !2778
  %8 = load i32, i32* %7, align 4, !dbg !2778
  %9 = and i32 %8, 4095, !dbg !2780
  %10 = icmp eq i32 %9, 0, !dbg !2780
  br i1 %10, label %12, label %11, !dbg !2781

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !2782
  unreachable, !dbg !2782

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !2784
  %14 = load i32, i32* %13, align 4, !dbg !2784
  %15 = and i32 %14, 4095, !dbg !2786
  %16 = icmp eq i32 %15, 0, !dbg !2786
  br i1 %16, label %18, label %17, !dbg !2787

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !2788
  unreachable, !dbg !2788

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2790
  store volatile i32 %8, i32* %19, align 4, !dbg !2791
  %20 = load i32, i32* %7, align 4, !dbg !2792
  %21 = load i32, i32* %13, align 4, !dbg !2793
  %22 = add i32 %21, %20, !dbg !2794
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !2795
  store volatile i32 %22, i32* %23, align 4, !dbg !2796
  %24 = load volatile i32, i32* %19, align 4, !dbg !2797
  %25 = or i32 %24, 256, !dbg !2797
  store volatile i32 %25, i32* %19, align 4, !dbg !2797
  %26 = load volatile i32, i32* %19, align 4, !dbg !2798
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2799
  store i32 %26, i32* %27, align 4, !dbg !2800
  %28 = load volatile i32, i32* %23, align 4, !dbg !2801
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2802
  store i32 %28, i32* %29, align 4, !dbg !2803
  br label %30, !dbg !2804

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !2771
  ret i32 %31, !dbg !2805
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2810, metadata !DIExpression()), !dbg !2812
  %2 = and i32 %0, 31, !dbg !2813
  %3 = icmp eq i32 %2, 0, !dbg !2813
  br i1 %3, label %4, label %9, !dbg !2815

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2816
  call void @llvm.dbg.value(metadata i32 %5, metadata !2811, metadata !DIExpression()), !dbg !2812
  %6 = and i32 %0, -32, !dbg !2817
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2818
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2819
  %8 = or i32 %7, 5, !dbg !2819
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2819
  tail call void asm sideeffect "isb", ""() #23, !dbg !2820, !srcloc !2639
  tail call void @restore_interrupt_mask(i32 noundef %5) #21, !dbg !2822
  br label %9, !dbg !2823

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2812
  ret i32 %10, !dbg !2824
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2829, metadata !DIExpression()), !dbg !2833
  call void @llvm.dbg.value(metadata i32 %1, metadata !2830, metadata !DIExpression()), !dbg !2833
  %3 = add i32 %1, %0, !dbg !2834
  call void @llvm.dbg.value(metadata i32 %3, metadata !2832, metadata !DIExpression()), !dbg !2833
  %4 = or i32 %1, %0, !dbg !2835
  %5 = and i32 %4, 31, !dbg !2835
  %6 = icmp eq i32 %5, 0, !dbg !2835
  br i1 %6, label %7, label %16, !dbg !2835

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2837
  call void @llvm.dbg.value(metadata i32 %8, metadata !2831, metadata !DIExpression()), !dbg !2833
  call void @llvm.dbg.value(metadata i32 %0, metadata !2829, metadata !DIExpression()), !dbg !2833
  %9 = icmp ugt i32 %3, %0, !dbg !2838
  br i1 %9, label %10, label %15, !dbg !2839

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2829, metadata !DIExpression()), !dbg !2833
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #22, !dbg !2840
  %13 = add i32 %11, 32, !dbg !2842
  call void @llvm.dbg.value(metadata i32 %13, metadata !2829, metadata !DIExpression()), !dbg !2833
  %14 = icmp ult i32 %13, %3, !dbg !2838
  br i1 %14, label %10, label %15, !dbg !2839, !llvm.loop !2843

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #23, !dbg !2845, !srcloc !2639
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !2847
  br label %16, !dbg !2848

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !2833
  ret i32 %17, !dbg !2849
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2852, metadata !DIExpression()), !dbg !2854
  %2 = and i32 %0, 31, !dbg !2855
  %3 = icmp eq i32 %2, 0, !dbg !2855
  br i1 %3, label %4, label %9, !dbg !2857

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2858
  call void @llvm.dbg.value(metadata i32 %5, metadata !2853, metadata !DIExpression()), !dbg !2854
  %6 = and i32 %0, -32, !dbg !2859
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2860
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2861
  %8 = or i32 %7, 21, !dbg !2861
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2861
  tail call void asm sideeffect "isb", ""() #23, !dbg !2862, !srcloc !2639
  tail call void @restore_interrupt_mask(i32 noundef %5) #21, !dbg !2864
  br label %9, !dbg !2865

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2854
  ret i32 %10, !dbg !2866
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2869, metadata !DIExpression()), !dbg !2873
  call void @llvm.dbg.value(metadata i32 %1, metadata !2870, metadata !DIExpression()), !dbg !2873
  %3 = add i32 %1, %0, !dbg !2874
  call void @llvm.dbg.value(metadata i32 %3, metadata !2872, metadata !DIExpression()), !dbg !2873
  %4 = or i32 %1, %0, !dbg !2875
  %5 = and i32 %4, 31, !dbg !2875
  %6 = icmp eq i32 %5, 0, !dbg !2875
  br i1 %6, label %7, label %16, !dbg !2875

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2877
  call void @llvm.dbg.value(metadata i32 %8, metadata !2871, metadata !DIExpression()), !dbg !2873
  call void @llvm.dbg.value(metadata i32 %0, metadata !2869, metadata !DIExpression()), !dbg !2873
  %9 = icmp ugt i32 %3, %0, !dbg !2878
  br i1 %9, label %10, label %15, !dbg !2879

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2869, metadata !DIExpression()), !dbg !2873
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #22, !dbg !2880
  %13 = add i32 %11, 32, !dbg !2882
  call void @llvm.dbg.value(metadata i32 %13, metadata !2869, metadata !DIExpression()), !dbg !2873
  %14 = icmp ult i32 %13, %3, !dbg !2878
  br i1 %14, label %10, label %15, !dbg !2879, !llvm.loop !2883

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #23, !dbg !2885, !srcloc !2639
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !2887
  br label %16, !dbg !2888

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !2873
  ret i32 %17, !dbg !2889
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2890 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2893
  call void @llvm.dbg.value(metadata i32 %1, metadata !2892, metadata !DIExpression()), !dbg !2894
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2895
  %3 = and i32 %2, -31, !dbg !2895
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2895
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2896
  %5 = or i32 %4, 19, !dbg !2896
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2896
  tail call void asm sideeffect "isb", ""() #23, !dbg !2897, !srcloc !2639
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !2899
  ret i32 0, !dbg !2900
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !2901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2905, metadata !DIExpression()), !dbg !2907
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2908
  %3 = and i32 %2, 8, !dbg !2910
  %4 = icmp eq i32 %3, 0, !dbg !2910
  br i1 %4, label %23, label %5, !dbg !2911

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !2906, metadata !DIExpression()), !dbg !2907
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2912
  %8 = shl nuw nsw i32 1, %6, !dbg !2917
  %9 = and i32 %7, %8, !dbg !2918
  %10 = icmp eq i32 %9, 0, !dbg !2918
  br i1 %10, label %20, label %11, !dbg !2919

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !2920
  %13 = load volatile i32, i32* %12, align 4, !dbg !2920
  %14 = and i32 %13, -257, !dbg !2923
  %15 = icmp ugt i32 %14, %0, !dbg !2924
  br i1 %15, label %20, label %16, !dbg !2925

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !2926
  %18 = load volatile i32, i32* %17, align 4, !dbg !2926
  %19 = icmp ugt i32 %18, %0, !dbg !2927
  br i1 %19, label %23, label %20, !dbg !2928

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !2929
  call void @llvm.dbg.value(metadata i32 %21, metadata !2906, metadata !DIExpression()), !dbg !2907
  %22 = icmp eq i32 %21, 16, !dbg !2930
  br i1 %22, label %23, label %5, !dbg !2931, !llvm.loop !2932

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !2907
  ret i1 %24, !dbg !2934
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !2935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2941, metadata !DIExpression()), !dbg !2942
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !2943
  br i1 %2, label %3, label %26, !dbg !2945

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !2946
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !2948
  %6 = load i32, i32* %5, align 4, !dbg !2948
  %7 = icmp eq i32 %6, 1, !dbg !2949
  br i1 %7, label %26, label %8, !dbg !2950

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2951
  %10 = load i8, i8* %9, align 4, !dbg !2951, !range !2596
  %11 = icmp eq i8 %10, 0, !dbg !2951
  br i1 %11, label %12, label %26, !dbg !2952

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !2953
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #21, !dbg !2954
  tail call void @gpt_open_clock_source() #21, !dbg !2955
  store i8 1, i8* %9, align 4, !dbg !2956
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2957
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !2957
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !2958
  %18 = load volatile i32, i32* %17, align 4, !dbg !2959
  %19 = and i32 %18, -2, !dbg !2959
  store volatile i32 %19, i32* %17, align 4, !dbg !2959
  %20 = shl nuw i32 1, %0, !dbg !2960
  %21 = xor i32 %20, -1, !dbg !2961
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !2962
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !2963
  %24 = load volatile i32, i32* %23, align 4, !dbg !2964
  %25 = and i32 %24, %21, !dbg !2964
  store volatile i32 %25, i32* %23, align 4, !dbg !2964
  br label %26, !dbg !2965

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !2942
  ret i32 %27, !dbg !2966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !2967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2971, metadata !DIExpression()), !dbg !2972
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !2973, !range !2596
  %3 = icmp ne i8 %2, 0, !dbg !2975
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !2976
  %7 = and i1 %5, %6, !dbg !2976
  ret i1 %7, !dbg !2977
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !2978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2980, metadata !DIExpression()), !dbg !2981
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !2982
  br i1 %2, label %3, label %14, !dbg !2984

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !2985
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !2987
  %6 = load i32, i32* %5, align 4, !dbg !2987
  %7 = icmp eq i32 %6, 1, !dbg !2988
  br i1 %7, label %14, label %8, !dbg !2989

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !2990
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #21, !dbg !2991
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2992
  store i8 0, i8* %11, align 4, !dbg !2993
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2994
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !2994
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #21, !dbg !2995
  br label %14, !dbg !2996

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !2981
  ret i32 %15, !dbg !2997
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2998 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3003, metadata !DIExpression()), !dbg !3005
  call void @llvm.dbg.value(metadata i32* %1, metadata !3004, metadata !DIExpression()), !dbg !3005
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3006

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3007
  %5 = icmp eq i32 %4, 1, !dbg !3011
  br i1 %5, label %8, label %6, !dbg !3012

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3013
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #21, !dbg !3015
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3016
  br label %8, !dbg !3017

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3018
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #21, !dbg !3019
  br label %20, !dbg !3020

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3021
  %13 = icmp eq i32 %12, 1, !dbg !3025
  br i1 %13, label %16, label %14, !dbg !3026

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3027
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #21, !dbg !3029
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3030
  br label %16, !dbg !3031

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3032
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #21, !dbg !3033
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #21, !dbg !3034
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3035
  store i32 %21, i32* %1, align 4, !dbg !3035
  br label %22, !dbg !3036

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3005
  ret i32 %23, !dbg !3037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3042, metadata !DIExpression()), !dbg !3045
  call void @llvm.dbg.value(metadata i32 %1, metadata !3043, metadata !DIExpression()), !dbg !3045
  call void @llvm.dbg.value(metadata i32* %2, metadata !3044, metadata !DIExpression()), !dbg !3045
  %4 = icmp eq i32* %2, null, !dbg !3046
  br i1 %4, label %7, label %5, !dbg !3048

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3049
  store i32 %6, i32* %2, align 4, !dbg !3049
  br label %7, !dbg !3051

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3045
  ret i32 %8, !dbg !3052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3058, metadata !DIExpression()), !dbg !3060
  call void @llvm.dbg.value(metadata i32* %1, metadata !3059, metadata !DIExpression()), !dbg !3060
  %3 = icmp ugt i32 %0, 5, !dbg !3061
  br i1 %3, label %7, label %4, !dbg !3063

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3064
  %6 = load i32, i32* %5, align 4, !dbg !3064
  store i32 %6, i32* %1, align 4, !dbg !3065
  br label %7, !dbg !3066

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3060
  ret i32 %8, !dbg !3067
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3072, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3073, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i8* %2, metadata !3074, metadata !DIExpression()), !dbg !3075
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !3076
  br i1 %4, label %5, label %18, !dbg !3078

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3079
  %7 = load i32, i32* %6, align 4, !dbg !3079
  %8 = icmp eq i32 %7, 1, !dbg !3081
  br i1 %8, label %18, label %9, !dbg !3082

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3083
  %11 = load i8, i8* %10, align 4, !dbg !3083, !range !2596
  %12 = icmp eq i8 %11, 1, !dbg !3084
  br i1 %12, label %13, label %18, !dbg !3085

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3086
  br i1 %14, label %18, label %15, !dbg !3088

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3089
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3090
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3091
  store i8* %2, i8** %17, align 4, !dbg !3092
  tail call void @gpt_nvic_register() #21, !dbg !3093
  br label %18, !dbg !3094

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3075
  ret i32 %19, !dbg !3095
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3096 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3101, metadata !DIExpression()), !dbg !3105
  call void @llvm.dbg.value(metadata i32 %1, metadata !3102, metadata !DIExpression()), !dbg !3105
  call void @llvm.dbg.value(metadata i32 %2, metadata !3103, metadata !DIExpression()), !dbg !3105
  %5 = bitcast i32* %4 to i8*, !dbg !3106
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3106
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3104, metadata !DIExpression()), !dbg !3107
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !3108
  br i1 %6, label %7, label %51, !dbg !3110

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3111
  %9 = load i32, i32* %8, align 4, !dbg !3111
  %10 = icmp eq i32 %9, 1, !dbg !3113
  br i1 %10, label %51, label %11, !dbg !3114

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3115
  %13 = load i8, i8* %12, align 4, !dbg !3115, !range !2596
  %14 = icmp eq i8 %13, 1, !dbg !3116
  br i1 %14, label %15, label %51, !dbg !3117

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3118
  br i1 %16, label %51, label %17, !dbg !3120

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3121
  store volatile i32 %18, i32* %4, align 4, !dbg !3122
  tail call void @gpt_open_clock_source() #21, !dbg !3123
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3124
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3124
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3125
  %22 = load volatile i32, i32* %21, align 4, !dbg !3126
  %23 = and i32 %22, -2, !dbg !3126
  store volatile i32 %23, i32* %21, align 4, !dbg !3126
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3127
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3128
  %26 = load volatile i32, i32* %25, align 4, !dbg !3129
  %27 = and i32 %26, -2, !dbg !3129
  store volatile i32 %27, i32* %25, align 4, !dbg !3129
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3130
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3131
  store volatile i32 16, i32* %29, align 4, !dbg !3132
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #21, !dbg !3133
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3134
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3135
  store volatile i32 %30, i32* %32, align 4, !dbg !3136
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3137
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3138
  store volatile i32 1, i32* %34, align 4, !dbg !3139
  %35 = shl i32 %2, 4, !dbg !3140
  %36 = or i32 %35, 2, !dbg !3141
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3142
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3143
  store volatile i32 %36, i32* %38, align 4, !dbg !3144
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3145

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3146
  %43 = icmp eq i32 %42, 0, !dbg !3145
  br i1 %43, label %44, label %41, !dbg !3145, !llvm.loop !3147

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3149
  %46 = load volatile i32, i32* %45, align 4, !dbg !3150
  %47 = or i32 %46, 1, !dbg !3150
  store volatile i32 %47, i32* %45, align 4, !dbg !3150
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3151
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3152
  store volatile i32 1, i32* %49, align 4, !dbg !3153
  store i32 1, i32* %8, align 4, !dbg !3154
  %50 = load volatile i32, i32* %4, align 4, !dbg !3155
  tail call void @restore_interrupt_mask(i32 noundef %50) #21, !dbg !3156
  br label %51, !dbg !3157

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3105
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3158
  ret i32 %52, !dbg !3158
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3163, metadata !DIExpression()), !dbg !3164
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3165
  %3 = icmp eq i32 %2, 1, !dbg !3167
  br i1 %3, label %6, label %4, !dbg !3168

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3169
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #21, !dbg !3171
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3172
  br label %6, !dbg !3173

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3174
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #21, !dbg !3175
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #21, !dbg !3176
  ret i32 0, !dbg !3177
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3178 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3180, metadata !DIExpression()), !dbg !3184
  call void @llvm.dbg.value(metadata i32 %1, metadata !3181, metadata !DIExpression()), !dbg !3184
  call void @llvm.dbg.value(metadata i32 %2, metadata !3182, metadata !DIExpression()), !dbg !3184
  %5 = bitcast i32* %4 to i8*, !dbg !3185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3185
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3183, metadata !DIExpression()), !dbg !3186
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !3187
  br i1 %6, label %7, label %50, !dbg !3189

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3190
  %9 = load i32, i32* %8, align 4, !dbg !3190
  %10 = icmp eq i32 %9, 1, !dbg !3192
  br i1 %10, label %50, label %11, !dbg !3193

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3194
  %13 = load i8, i8* %12, align 4, !dbg !3194, !range !2596
  %14 = icmp eq i8 %13, 1, !dbg !3195
  br i1 %14, label %15, label %50, !dbg !3196

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3197
  store i8 1, i8* %16, align 1, !dbg !3198
  %17 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3199
  store volatile i32 %17, i32* %4, align 4, !dbg !3200
  tail call void @gpt_open_clock_source() #21, !dbg !3201
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3202
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3202
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !3203
  %21 = load volatile i32, i32* %20, align 4, !dbg !3204
  %22 = and i32 %21, -2, !dbg !3204
  store volatile i32 %22, i32* %20, align 4, !dbg !3204
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3205
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !3206
  %25 = load volatile i32, i32* %24, align 4, !dbg !3207
  %26 = and i32 %25, -2, !dbg !3207
  store volatile i32 %26, i32* %24, align 4, !dbg !3207
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3208
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !3209
  store volatile i32 12, i32* %28, align 4, !dbg !3210
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #21, !dbg !3211
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3212
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !3213
  store volatile i32 %29, i32* %31, align 4, !dbg !3214
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3215
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !3216
  store volatile i32 1, i32* %33, align 4, !dbg !3217
  %34 = shl i32 %2, 4, !dbg !3218
  %35 = or i32 %34, 2, !dbg !3219
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3220
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !3221
  store volatile i32 %35, i32* %37, align 4, !dbg !3222
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !3223

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !3224
  %42 = icmp eq i32 %41, 0, !dbg !3223
  br i1 %42, label %43, label %40, !dbg !3223, !llvm.loop !3225

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !3227
  %45 = load volatile i32, i32* %44, align 4, !dbg !3228
  %46 = or i32 %45, 1, !dbg !3228
  store volatile i32 %46, i32* %44, align 4, !dbg !3228
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3229
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !3230
  store volatile i32 1, i32* %48, align 4, !dbg !3231
  %49 = load volatile i32, i32* %4, align 4, !dbg !3232
  tail call void @restore_interrupt_mask(i32 noundef %49) #21, !dbg !3233
  store i32 1, i32* %8, align 4, !dbg !3234
  br label %50, !dbg !3235

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3184
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3236
  ret i32 %51, !dbg !3236
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3239, metadata !DIExpression()), !dbg !3240
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3241
  %3 = icmp eq i32 %2, 1, !dbg !3243
  br i1 %3, label %6, label %4, !dbg !3244

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3245
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #21, !dbg !3247
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3248
  br label %6, !dbg !3249

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3250
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #21, !dbg !3251
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #21, !dbg !3252
  ret i32 0, !dbg !3253
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3254 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3256, metadata !DIExpression()), !dbg !3258
  %3 = bitcast i32* %2 to i8*, !dbg !3259
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3259
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3257, metadata !DIExpression()), !dbg !3260
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #22, !dbg !3261
  br i1 %4, label %5, label %24, !dbg !3263

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3264
  store volatile i32 %6, i32* %2, align 4, !dbg !3265
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3266
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3266
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3267
  %10 = load volatile i32, i32* %9, align 4, !dbg !3268
  %11 = and i32 %10, -2, !dbg !3268
  store volatile i32 %11, i32* %9, align 4, !dbg !3268
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3269
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3270
  %14 = load volatile i32, i32* %13, align 4, !dbg !3271
  %15 = and i32 %14, -2, !dbg !3271
  store volatile i32 %15, i32* %13, align 4, !dbg !3271
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3272
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3273
  store volatile i32 1, i32* %17, align 4, !dbg !3274
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3275
  store i32 0, i32* %18, align 4, !dbg !3276
  %19 = load volatile i32, i32* %2, align 4, !dbg !3277
  tail call void @restore_interrupt_mask(i32 noundef %19) #21, !dbg !3278
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3279
  %21 = load i8, i8* %20, align 1, !dbg !3279, !range !2596
  %22 = icmp eq i8 %21, 0, !dbg !3279
  br i1 %22, label %24, label %23, !dbg !3281

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !3282
  br label %24, !dbg !3284

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3258
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3285
  ret i32 %25, !dbg !3285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3286 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3290, metadata !DIExpression()), !dbg !3293
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3294
  %3 = icmp ugt i32 %2, 31, !dbg !3296
  br i1 %3, label %13, label %4, !dbg !3297

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3298
  br i1 %5, label %13, label %6, !dbg !3300

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3301
  call void @llvm.dbg.value(metadata i32 %7, metadata !3292, metadata !DIExpression()), !dbg !3293
  %8 = tail call i32 @gpt_sw_get_free_timer() #21, !dbg !3302
  call void @llvm.dbg.value(metadata i32 %8, metadata !3291, metadata !DIExpression()), !dbg !3293
  %9 = or i32 %8, -559087616, !dbg !3303
  store i32 %9, i32* %0, align 4, !dbg !3304
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3305
  store i8 1, i8* %10, align 4, !dbg !3306
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3307
  %12 = add i32 %11, 1, !dbg !3307
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3307
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !3308
  br label %13, !dbg !3309

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3293
  ret i32 %14, !dbg !3310
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !3311 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3313, metadata !DIExpression()), !dbg !3315
  %3 = bitcast i32* %2 to i8*, !dbg !3316
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3316
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3314, metadata !DIExpression()), !dbg !3317
  %4 = and i32 %0, -559087616, !dbg !3318
  %5 = icmp eq i32 %4, -559087616, !dbg !3320
  br i1 %5, label %6, label %24, !dbg !3321

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3322
  store volatile i32 %7, i32* %2, align 4, !dbg !3323
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3324
  %9 = icmp eq i32 %8, 0, !dbg !3326
  br i1 %9, label %24, label %10, !dbg !3327

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3328
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3330
  %13 = load i8, i8* %12, align 1, !dbg !3330, !range !2596
  %14 = icmp eq i8 %13, 0, !dbg !3330
  br i1 %14, label %15, label %24, !dbg !3331

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3332
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3334
  %18 = load i8, i8* %17, align 4, !dbg !3334, !range !2596
  %19 = icmp eq i8 %18, 1, !dbg !3335
  br i1 %19, label %20, label %24, !dbg !3336

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3337
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3338
  store i8 0, i8* %22, align 4, !dbg !3339
  %23 = add i32 %8, -1, !dbg !3340
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3340
  br label %24, !dbg !3341

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3315
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3342
  ret i32 %25, !dbg !3342
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3347, metadata !DIExpression()), !dbg !3354
  call void @llvm.dbg.value(metadata i32 %1, metadata !3348, metadata !DIExpression()), !dbg !3354
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3349, metadata !DIExpression()), !dbg !3354
  call void @llvm.dbg.value(metadata i8* %3, metadata !3350, metadata !DIExpression()), !dbg !3354
  %5 = and i32 %0, -559087616, !dbg !3355
  %6 = icmp ne i32 %5, -559087616, !dbg !3357
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3358
  call void @llvm.dbg.value(metadata i32 %0, metadata !3353, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3354
  br i1 %8, label %44, label %9, !dbg !3358

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3359
  call void @llvm.dbg.value(metadata i32 %10, metadata !3353, metadata !DIExpression()), !dbg !3354
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3360
  %12 = load i8, i8* %11, align 1, !dbg !3360, !range !2596
  %13 = icmp eq i8 %12, 0, !dbg !3360
  br i1 %13, label %14, label %44, !dbg !3362

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3363
  %16 = load i8, i8* %15, align 4, !dbg !3363, !range !2596
  %17 = icmp eq i8 %16, 1, !dbg !3365
  br i1 %17, label %18, label %44, !dbg !3366

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3367
  br i1 %19, label %44, label %20, !dbg !3369

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3370
  call void @llvm.dbg.value(metadata i32 %21, metadata !3352, metadata !DIExpression()), !dbg !3354
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3371
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3372, !range !2596
  %23 = icmp eq i8 %22, 0, !dbg !3374
  br i1 %23, label %24, label %27, !dbg !3375

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #22, !dbg !3376
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #22, !dbg !3378
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3379
  br label %27, !dbg !3380

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #22, !dbg !3381
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3382, !range !2596
  %30 = icmp eq i8 %29, 0, !dbg !3384
  br i1 %30, label %31, label %34, !dbg !3385

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3386
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #21, !dbg !3388
  call void @llvm.dbg.value(metadata i32 %33, metadata !3351, metadata !DIExpression()), !dbg !3354
  br label %34, !dbg !3389

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3390
  call void @llvm.dbg.value(metadata i32 %35, metadata !3351, metadata !DIExpression()), !dbg !3354
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3391
  %37 = add i32 %36, %35, !dbg !3391
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3391
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3392
  %39 = add i32 %38, 1, !dbg !3392
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3392
  store i8 1, i8* %11, align 1, !dbg !3393
  %40 = add i32 %37, %1, !dbg !3394
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3395
  store i32 %40, i32* %41, align 4, !dbg !3396
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3397
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3398
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3399
  store i8* %3, i8** %43, align 4, !dbg !3400
  tail call void @gpt_sw_start_timer() #21, !dbg !3401
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3402
  tail call void @restore_interrupt_mask(i32 noundef %21) #21, !dbg !3403
  br label %44, !dbg !3404

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3354
  ret i32 %45, !dbg !3405
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3408, metadata !DIExpression()), !dbg !3412
  %2 = and i32 %0, -559087616, !dbg !3413
  %3 = icmp eq i32 %2, -559087616, !dbg !3415
  br i1 %3, label %4, label %31, !dbg !3416

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3417
  call void @llvm.dbg.value(metadata i32 %5, metadata !3411, metadata !DIExpression()), !dbg !3412
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3418
  %7 = load i8, i8* %6, align 1, !dbg !3418, !range !2596
  %8 = icmp eq i8 %7, 1, !dbg !3420
  br i1 %8, label %9, label %31, !dbg !3421

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3422
  %11 = load i8, i8* %10, align 4, !dbg !3422, !range !2596
  %12 = icmp eq i8 %11, 1, !dbg !3424
  br i1 %12, label %13, label %31, !dbg !3425

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3426
  call void @llvm.dbg.value(metadata i32 %14, metadata !3410, metadata !DIExpression()), !dbg !3412
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3427
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #22, !dbg !3428
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3429
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3430, !range !2596
  %17 = icmp eq i8 %16, 0, !dbg !3432
  br i1 %17, label %18, label %21, !dbg !3433

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3434
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #21, !dbg !3436
  call void @llvm.dbg.value(metadata i32 %20, metadata !3409, metadata !DIExpression()), !dbg !3412
  br label %21, !dbg !3437

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3438
  call void @llvm.dbg.value(metadata i32 %22, metadata !3409, metadata !DIExpression()), !dbg !3412
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3439
  %24 = add i32 %23, %22, !dbg !3439
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3439
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3440
  %26 = add i32 %25, -1, !dbg !3440
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3440
  store i8 0, i8* %6, align 1, !dbg !3441
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3442
  %28 = icmp eq i32 %27, 0, !dbg !3444
  br i1 %28, label %30, label %29, !dbg !3445

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #21, !dbg !3446
  br label %30, !dbg !3448

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3449
  tail call void @restore_interrupt_mask(i32 noundef %14) #21, !dbg !3450
  br label %31, !dbg !3451

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3412
  ret i32 %32, !dbg !3452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3457, metadata !DIExpression()), !dbg !3462
  call void @llvm.dbg.value(metadata i32* %1, metadata !3458, metadata !DIExpression()), !dbg !3462
  %3 = and i32 %0, -559087616, !dbg !3463
  %4 = icmp eq i32 %3, -559087616, !dbg !3465
  br i1 %4, label %5, label %20, !dbg !3466

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3467
  call void @llvm.dbg.value(metadata i32 %6, metadata !3461, metadata !DIExpression()), !dbg !3462
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3468
  %8 = load i8, i8* %7, align 4, !dbg !3468, !range !2596
  %9 = icmp eq i8 %8, 1, !dbg !3470
  br i1 %9, label %10, label %20, !dbg !3471

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3472
  call void @llvm.dbg.value(metadata i32 %11, metadata !3460, metadata !DIExpression()), !dbg !3462
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3473
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3474
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3475
  %15 = load volatile i32, i32* %14, align 4, !dbg !3475
  %16 = add i32 %15, %12, !dbg !3476
  call void @llvm.dbg.value(metadata i32 %16, metadata !3459, metadata !DIExpression()), !dbg !3462
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3477
  %18 = load i32, i32* %17, align 4, !dbg !3477
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3479
  store i32 %19, i32* %1, align 4, !dbg !3480
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !3481
  br label %20, !dbg !3482

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3462
  ret i32 %21, !dbg !3483
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !3484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3488, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i32 %1, metadata !3489, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i32 %2, metadata !3490, metadata !DIExpression()), !dbg !3495
  %4 = and i32 %0, 65535, !dbg !3496
  %5 = mul i32 %4, %1, !dbg !3497
  call void @llvm.dbg.value(metadata i32 %5, metadata !3491, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3495
  %6 = lshr i32 %0, 16, !dbg !3498
  %7 = mul i32 %6, %1, !dbg !3499
  call void @llvm.dbg.value(metadata i32 %7, metadata !3491, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3495
  %8 = and i32 %5, 65535, !dbg !3500
  call void @llvm.dbg.value(metadata i32 %8, metadata !3493, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3495
  %9 = lshr i32 %5, 16, !dbg !3501
  %10 = add i32 %9, %7, !dbg !3502
  call void @llvm.dbg.value(metadata i32 %10, metadata !3493, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3495
  %11 = udiv i32 %10, %2, !dbg !3503
  call void @llvm.dbg.value(metadata i32 %11, metadata !3494, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3495
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3504
  %15 = or i32 %14, %8, !dbg !3505
  %16 = udiv i32 %15, %2, !dbg !3506
  call void @llvm.dbg.value(metadata i32 %16, metadata !3494, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3495
  %17 = shl i32 %11, 16, !dbg !3507
  %18 = add i32 %16, %17, !dbg !3508
  ret i32 %18, !dbg !3509
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !3510 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3514, metadata !DIExpression()), !dbg !3515
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3516
  %3 = load volatile i32, i32* %2, align 4, !dbg !3516
  ret i32 %3, !dbg !3517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3522, metadata !DIExpression()), !dbg !3523
  %2 = shl i32 %0, 5, !dbg !3524
  %3 = mul i32 %0, 7, !dbg !3525
  %4 = udiv i32 %3, 10, !dbg !3526
  %5 = add i32 %4, %2, !dbg !3527
  %6 = mul i32 %0, 6, !dbg !3528
  %7 = udiv i32 %6, 100, !dbg !3529
  %8 = add i32 %5, %7, !dbg !3530
  %9 = shl i32 %0, 3, !dbg !3531
  %10 = udiv i32 %9, 1000, !dbg !3532
  %11 = add i32 %8, %10, !dbg !3533
  ret i32 %11, !dbg !3534
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !290 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3535
  br i1 %1, label %10, label %2, !dbg !3537

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3538
  br i1 %3, label %4, label %6, !dbg !3541

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #21, !dbg !3542
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3544
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3545

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3547
  br label %8, !dbg !3547

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3547
  br label %10, !dbg !3548

10:                                               ; preds = %8, %0
  ret void, !dbg !3548
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3549 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #21, !dbg !3550
  br i1 %1, label %4, label %2, !dbg !3552

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #21, !dbg !3553
  br label %4, !dbg !3555

4:                                                ; preds = %2, %0
  ret void, !dbg !3556
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3559, metadata !DIExpression()), !dbg !3560
  tail call void @gpt_get_lfosc_clock() #22, !dbg !3561
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3562
  br i1 %2, label %3, label %6, !dbg !3564

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3565
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #22, !dbg !3567
  br label %6, !dbg !3568

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3569
  ret i32 %7, !dbg !3570
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3573, metadata !DIExpression()), !dbg !3574
  tail call void @gpt_get_lfosc_clock() #22, !dbg !3575
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3576
  br i1 %2, label %3, label %6, !dbg !3578

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3579
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #22, !dbg !3581
  br label %6, !dbg !3582

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3583
  ret i32 %7, !dbg !3584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3585 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3589, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i32 %1, metadata !3590, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i32 %2, metadata !3591, metadata !DIExpression()), !dbg !3592
  tail call void @gpt_open_clock_source() #22, !dbg !3593
  %4 = or i32 %2, %1, !dbg !3594
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3595
  store volatile i32 %4, i32* %5, align 4, !dbg !3596
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3597
  store volatile i32 49, i32* %6, align 4, !dbg !3598
  ret void, !dbg !3599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !3600 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3604, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 %1, metadata !3605, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 0, metadata !3606, metadata !DIExpression()), !dbg !3608
  call void @llvm.dbg.value(metadata i32 0, metadata !3607, metadata !DIExpression()), !dbg !3608
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #22, !dbg !3609
  call void @llvm.dbg.value(metadata i32 %3, metadata !3607, metadata !DIExpression()), !dbg !3608
  %4 = add i32 %1, 1, !dbg !3610
  %5 = add i32 %4, %3, !dbg !3611
  call void @llvm.dbg.value(metadata i32 %5, metadata !3606, metadata !DIExpression()), !dbg !3608
  %6 = icmp ugt i32 %5, %3, !dbg !3612
  br i1 %6, label %7, label %10, !dbg !3614

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #22, !dbg !3615
  %9 = icmp ult i32 %8, %5, !dbg !3617
  br i1 %9, label %7, label %16, !dbg !3618, !llvm.loop !3619

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #22, !dbg !3621
  %12 = icmp ult i32 %11, %3, !dbg !3623
  br i1 %12, label %13, label %10, !dbg !3624, !llvm.loop !3625

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #22, !dbg !3627
  %15 = icmp ult i32 %14, %5, !dbg !3628
  br i1 %15, label %13, label %16, !dbg !3629, !llvm.loop !3630

16:                                               ; preds = %13, %7
  ret void, !dbg !3632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !3633 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3637, metadata !DIExpression()), !dbg !3638
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3639
  store volatile i32 0, i32* %2, align 4, !dbg !3640
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3641
  store volatile i32 0, i32* %3, align 4, !dbg !3642
  %4 = load volatile i32, i32* %3, align 4, !dbg !3643
  %5 = or i32 %4, 2, !dbg !3643
  store volatile i32 %5, i32* %3, align 4, !dbg !3643
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3644

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3645
  %9 = icmp eq i32 %8, 0, !dbg !3644
  br i1 %9, label %10, label %7, !dbg !3644, !llvm.loop !3646

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3648
  store volatile i32 16, i32* %11, align 4, !dbg !3649
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3650
  store volatile i32 1, i32* %12, align 4, !dbg !3651
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3652
  store volatile i32 -1, i32* %13, align 4, !dbg !3653
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3654
  br i1 %14, label %15, label %16, !dbg !3656

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3657
  br label %16, !dbg !3659

16:                                               ; preds = %15, %10
  ret void, !dbg !3660
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3661 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3663, metadata !DIExpression()), !dbg !3665
  %3 = bitcast i32* %2 to i8*, !dbg !3666
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3666
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3664, metadata !DIExpression()), !dbg !3667
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3668
  %5 = load volatile i32, i32* %4, align 4, !dbg !3668
  store volatile i32 %5, i32* %2, align 4, !dbg !3669
  %6 = load volatile i32, i32* %4, align 4, !dbg !3670
  %7 = and i32 %6, -2, !dbg !3670
  store volatile i32 %7, i32* %4, align 4, !dbg !3670
  %8 = load volatile i32, i32* %2, align 4, !dbg !3671
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3672
  ret i32 %8, !dbg !3673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3674 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3678, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.value(metadata i32 %1, metadata !3679, metadata !DIExpression()), !dbg !3680
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3681
  store volatile i32 %1, i32* %3, align 4, !dbg !3682
  ret void, !dbg !3683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3684 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3686, metadata !DIExpression()), !dbg !3691
  %5 = bitcast i32* %2 to i8*, !dbg !3692
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3692
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3688, metadata !DIExpression()), !dbg !3693
  %6 = bitcast i32* %3 to i8*, !dbg !3694
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3694
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3689, metadata !DIExpression()), !dbg !3695
  %7 = bitcast i32* %4 to i8*, !dbg !3696
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3696
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3690, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 undef, metadata !3686, metadata !DIExpression()), !dbg !3691
  call void @llvm.dbg.value(metadata i32 0, metadata !3687, metadata !DIExpression()), !dbg !3691
  br label %8, !dbg !3698

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3687, metadata !DIExpression()), !dbg !3691
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3700
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3700
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3703
  %13 = load volatile i32, i32* %12, align 4, !dbg !3703
  store volatile i32 %13, i32* %3, align 4, !dbg !3704
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3705
  %15 = load volatile i32, i32* %14, align 4, !dbg !3705
  store volatile i32 %15, i32* %4, align 4, !dbg !3706
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #22, !dbg !3707
  store volatile i32 %16, i32* %2, align 4, !dbg !3708
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3709
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3710
  store volatile i32 1, i32* %18, align 4, !dbg !3711
  %19 = load volatile i32, i32* %3, align 4, !dbg !3712
  %20 = and i32 %19, 1, !dbg !3714
  %21 = icmp eq i32 %20, 0, !dbg !3714
  br i1 %21, label %33, label %22, !dbg !3715

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3716
  %24 = and i32 %23, 1, !dbg !3717
  %25 = icmp eq i32 %24, 0, !dbg !3717
  br i1 %25, label %33, label %26, !dbg !3718

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3719
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3719
  %29 = icmp eq void (i8*)* %28, null, !dbg !3722
  br i1 %29, label %33, label %30, !dbg !3723

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3724
  %32 = load i8*, i8** %31, align 4, !dbg !3724
  tail call void %28(i8* noundef %32) #21, !dbg !3726
  br label %33, !dbg !3727

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3728
  %35 = load volatile i32, i32* %2, align 4, !dbg !3729
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #22, !dbg !3730
  %36 = add nuw nsw i32 %9, 1, !dbg !3731
  call void @llvm.dbg.value(metadata i32 %36, metadata !3687, metadata !DIExpression()), !dbg !3691
  %37 = icmp eq i32 %36, 6, !dbg !3732
  br i1 %37, label %38, label %8, !dbg !3698, !llvm.loop !3733

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3735
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3735
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3735
  ret void, !dbg !3735
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3736 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #21, !dbg !3737
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #21, !dbg !3738
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #21, !dbg !3739
  ret void, !dbg !3740
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3741 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3743, metadata !DIExpression()), !dbg !3748
  %3 = bitcast i32* %2 to i8*, !dbg !3749
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3749
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3744, metadata !DIExpression()), !dbg !3750
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #22, !dbg !3751
  call void @llvm.dbg.value(metadata i32 %4, metadata !3745, metadata !DIExpression()), !dbg !3748
  %5 = lshr i32 %4, 15, !dbg !3752
  call void @llvm.dbg.value(metadata i32 %5, metadata !3746, metadata !DIExpression()), !dbg !3748
  %6 = and i32 %4, 32767, !dbg !3753
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3754
  %8 = add nuw nsw i32 %7, 16384, !dbg !3755
  %9 = lshr i32 %8, 15, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %9, metadata !3747, metadata !DIExpression()), !dbg !3748
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3757
  %11 = add nuw nsw i32 %9, %10, !dbg !3758
  store volatile i32 %11, i32* %2, align 4, !dbg !3759
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3760
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3761
  %14 = load volatile i32, i32* %13, align 4, !dbg !3762
  %15 = or i32 %14, 2, !dbg !3762
  store volatile i32 %15, i32* %13, align 4, !dbg !3762
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3763

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3764
  %20 = icmp eq i32 %19, 0, !dbg !3763
  br i1 %20, label %21, label %18, !dbg !3763, !llvm.loop !3765

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3767
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3768
  ret i32 %22, !dbg !3769
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !3770 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3774, metadata !DIExpression()), !dbg !3775
  br label %1, !dbg !3776

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3774, metadata !DIExpression()), !dbg !3775
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3778
  %4 = load i8, i8* %3, align 4, !dbg !3778, !range !2596
  %5 = icmp eq i8 %4, 1, !dbg !3782
  br i1 %5, label %6, label %9, !dbg !3783

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !3784
  call void @llvm.dbg.value(metadata i32 %7, metadata !3774, metadata !DIExpression()), !dbg !3775
  %8 = icmp eq i32 %7, 32, !dbg !3785
  br i1 %8, label %9, label %1, !dbg !3776, !llvm.loop !3786

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3775
  ret i32 %10, !dbg !3788
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !3789 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3793
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3793
  %4 = bitcast i32* %2 to i8*, !dbg !3793
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !3793
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3794, !range !2596
  %6 = icmp eq i8 %5, 0, !dbg !3794
  br i1 %6, label %7, label %11, !dbg !3796

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !3791, metadata !DIExpression(DW_OP_deref)), !dbg !3797
  call void @llvm.dbg.value(metadata i32* %2, metadata !3792, metadata !DIExpression(DW_OP_deref)), !dbg !3797
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #22, !dbg !3798
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3799
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3800
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3801
  %9 = load i32, i32* %1, align 4, !dbg !3802
  call void @llvm.dbg.value(metadata i32 %9, metadata !3791, metadata !DIExpression()), !dbg !3797
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #21, !dbg !3803
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3804
  br label %11, !dbg !3805

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !3805
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3805
  ret void, !dbg !3805
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !3806 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3810, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32* %1, metadata !3811, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32 -1, metadata !3813, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32 0, metadata !3812, metadata !DIExpression()), !dbg !3815
  br label %3, !dbg !3816

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !3812, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32 %5, metadata !3813, metadata !DIExpression()), !dbg !3815
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !3818
  %7 = load i8, i8* %6, align 1, !dbg !3818, !range !2596
  %8 = icmp eq i8 %7, 0, !dbg !3818
  br i1 %8, label %13, label %9, !dbg !3822

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #22, !dbg !3823
  call void @llvm.dbg.value(metadata i32 %10, metadata !3814, metadata !DIExpression()), !dbg !3815
  %11 = icmp ult i32 %10, %5, !dbg !3825
  br i1 %11, label %12, label %13, !dbg !3827

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !3813, metadata !DIExpression()), !dbg !3815
  store i32 %4, i32* %1, align 4, !dbg !3828
  br label %13, !dbg !3830

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !3815
  call void @llvm.dbg.value(metadata i32 %14, metadata !3813, metadata !DIExpression()), !dbg !3815
  %15 = add nuw nsw i32 %4, 1, !dbg !3831
  call void @llvm.dbg.value(metadata i32 %15, metadata !3812, metadata !DIExpression()), !dbg !3815
  %16 = icmp eq i32 %15, 32, !dbg !3832
  br i1 %16, label %17, label %3, !dbg !3816, !llvm.loop !3833

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !3835
  ret void, !dbg !3836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !3837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3839, metadata !DIExpression()), !dbg !3843
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !3844
  %3 = load i32, i32* %2, align 4, !dbg !3844
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3844
  %5 = sub i32 %3, %4, !dbg !3844
  call void @llvm.dbg.value(metadata i32 %5, metadata !3840, metadata !DIExpression()), !dbg !3843
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3845
  %7 = sub i32 %6, %4, !dbg !3845
  call void @llvm.dbg.value(metadata i32 %7, metadata !3841, metadata !DIExpression()), !dbg !3843
  %8 = icmp ugt i32 %5, %7, !dbg !3846
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !3848
  call void @llvm.dbg.value(metadata i32 %10, metadata !3842, metadata !DIExpression()), !dbg !3843
  ret i32 %10, !dbg !3849
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !3850 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3852, metadata !DIExpression()), !dbg !3856
  %4 = bitcast i32* %2 to i8*, !dbg !3857
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !3857
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3854, metadata !DIExpression()), !dbg !3858
  %5 = bitcast i32* %3 to i8*, !dbg !3859
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3859
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3855, metadata !DIExpression()), !dbg !3860
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3861
  %7 = icmp eq i32 %6, 0, !dbg !3863
  br i1 %7, label %38, label %8, !dbg !3864

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3865
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3867
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3868
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3869
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #22, !dbg !3870
  store volatile i32 %11, i32* %2, align 4, !dbg !3871
  %12 = load volatile i32, i32* %2, align 4, !dbg !3872
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3873
  %14 = add i32 %13, %12, !dbg !3873
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3873
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3874
  call void @llvm.dbg.value(metadata i32 0, metadata !3853, metadata !DIExpression()), !dbg !3856
  br label %15, !dbg !3875

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3853, metadata !DIExpression()), !dbg !3856
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !3877
  %18 = load i8, i8* %17, align 1, !dbg !3877, !range !2596
  %19 = icmp eq i8 %18, 0, !dbg !3877
  br i1 %19, label %31, label %20, !dbg !3881

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #22, !dbg !3882
  store volatile i32 %21, i32* %3, align 4, !dbg !3884
  %22 = load volatile i32, i32* %3, align 4, !dbg !3885
  %23 = icmp eq i32 %22, 0, !dbg !3887
  br i1 %23, label %24, label %31, !dbg !3888

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !3889
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3891
  %26 = add i32 %25, -1, !dbg !3891
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3891
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !3892
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3892
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !3893
  %30 = load i8*, i8** %29, align 4, !dbg !3893
  tail call void %28(i8* noundef %30) #21, !dbg !3894
  br label %31, !dbg !3895

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !3896
  call void @llvm.dbg.value(metadata i32 %32, metadata !3853, metadata !DIExpression()), !dbg !3856
  %33 = icmp eq i32 %32, 32, !dbg !3897
  br i1 %33, label %34, label %15, !dbg !3875, !llvm.loop !3898

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3900
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3901
  %36 = icmp eq i32 %35, 0, !dbg !3903
  br i1 %36, label %38, label %37, !dbg !3904

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #22, !dbg !3905
  br label %38, !dbg !3907

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3908
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !3908
  ret void, !dbg !3908
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !3909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3914, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !3916, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i32 0, metadata !3915, metadata !DIExpression()), !dbg !3917
  br label %5, !dbg !3919

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !3921
  call void @llvm.dbg.value(metadata i32 %3, metadata !3915, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.value(metadata i32 %6, metadata !3915, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3917
  %4 = icmp eq i32 %3, 5, !dbg !3923
  br i1 %4, label %10, label %5, !dbg !3919, !llvm.loop !3924

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3915, metadata !DIExpression()), !dbg !3917
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !3926
  %8 = load i32, i32* %7, align 4, !dbg !3926
  %9 = icmp eq i32 %8, %0, !dbg !3929
  call void @llvm.dbg.value(metadata i32 %6, metadata !3915, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3917
  br i1 %9, label %10, label %2, !dbg !3930

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !3917
  ret i32 %11, !dbg !3931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !3932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3937, metadata !DIExpression()), !dbg !3938
  ret i32 0, !dbg !3939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !3940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3942, metadata !DIExpression()), !dbg !3943
  ret i32 0, !dbg !3944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3949, metadata !DIExpression()), !dbg !3953
  call void @llvm.dbg.value(metadata i32 %1, metadata !3950, metadata !DIExpression()), !dbg !3953
  %3 = icmp ugt i32 %0, 48, !dbg !3954
  br i1 %3, label %13, label %4, !dbg !3956

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !3957
  call void @llvm.dbg.value(metadata i32 %5, metadata !3951, metadata !DIExpression()), !dbg !3953
  %6 = and i32 %0, 31, !dbg !3958
  call void @llvm.dbg.value(metadata i32 %6, metadata !3952, metadata !DIExpression()), !dbg !3953
  %7 = icmp eq i32 %1, 0, !dbg !3959
  %8 = shl nuw i32 1, %6, !dbg !3961
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3961
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !3962
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !3962
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !3962
  store volatile i32 %8, i32* %12, align 4, !dbg !3961
  br label %13, !dbg !3963

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !3953
  ret i32 %14, !dbg !3963
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !3964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3969, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.value(metadata i32* %1, metadata !3970, metadata !DIExpression()), !dbg !3974
  %3 = icmp ugt i32 %0, 48, !dbg !3975
  br i1 %3, label %15, label %4, !dbg !3977

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3978
  br i1 %5, label %15, label %6, !dbg !3980

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !3981
  call void @llvm.dbg.value(metadata i32 %7, metadata !3971, metadata !DIExpression()), !dbg !3974
  %8 = and i32 %0, 31, !dbg !3982
  call void @llvm.dbg.value(metadata i32 %8, metadata !3972, metadata !DIExpression()), !dbg !3974
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3983
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !3984
  %11 = load volatile i32, i32* %10, align 4, !dbg !3984
  call void @llvm.dbg.value(metadata i32 %11, metadata !3973, metadata !DIExpression()), !dbg !3974
  %12 = shl nuw i32 1, %8, !dbg !3985
  %13 = and i32 %11, %12, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %13, metadata !3973, metadata !DIExpression()), !dbg !3974
  %14 = lshr i32 %13, %8, !dbg !3987
  store i32 %14, i32* %1, align 4, !dbg !3988
  br label %15, !dbg !3989

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3974
  ret i32 %16, !dbg !3990
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !3991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3996, metadata !DIExpression()), !dbg !4001
  call void @llvm.dbg.value(metadata i8 %1, metadata !3997, metadata !DIExpression()), !dbg !4001
  %3 = icmp ugt i32 %0, 48, !dbg !4002
  br i1 %3, label %18, label %4, !dbg !4004

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !4005
  br i1 %5, label %18, label %6, !dbg !4007

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !4008
  %8 = lshr i32 %0, 3, !dbg !4009
  call void @llvm.dbg.value(metadata i32 %8, metadata !3998, metadata !DIExpression()), !dbg !4001
  call void @llvm.dbg.value(metadata i32 %0, metadata !3999, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4001
  %9 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4010
  call void @llvm.dbg.value(metadata i32 %9, metadata !4000, metadata !DIExpression()), !dbg !4001
  %10 = shl nuw nsw i32 %0, 2, !dbg !4011
  %11 = and i32 %10, 28, !dbg !4011
  %12 = shl nuw i32 15, %11, !dbg !4012
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4013
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !4014
  store volatile i32 %12, i32* %14, align 4, !dbg !4015
  %15 = shl nuw i32 %7, %11, !dbg !4016
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4017
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !4018
  store volatile i32 %15, i32* %17, align 4, !dbg !4019
  tail call void @restore_interrupt_mask(i32 noundef %9) #21, !dbg !4020
  br label %18, !dbg !4021

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4001
  ret i32 %19, !dbg !4022
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4028, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.value(metadata i32* %1, metadata !4029, metadata !DIExpression()), !dbg !4033
  %3 = icmp ugt i32 %0, 48, !dbg !4034
  br i1 %3, label %15, label %4, !dbg !4036

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4037
  br i1 %5, label %15, label %6, !dbg !4039

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %7, metadata !4030, metadata !DIExpression()), !dbg !4033
  %8 = and i32 %0, 31, !dbg !4041
  call void @llvm.dbg.value(metadata i32 %8, metadata !4031, metadata !DIExpression()), !dbg !4033
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4042
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !4043
  %11 = load volatile i32, i32* %10, align 4, !dbg !4043
  call void @llvm.dbg.value(metadata i32 %11, metadata !4032, metadata !DIExpression()), !dbg !4033
  %12 = shl nuw i32 1, %8, !dbg !4044
  %13 = and i32 %11, %12, !dbg !4045
  call void @llvm.dbg.value(metadata i32 %13, metadata !4032, metadata !DIExpression()), !dbg !4033
  %14 = lshr i32 %13, %8, !dbg !4046
  store i32 %14, i32* %1, align 4, !dbg !4047
  br label %15, !dbg !4048

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4033
  ret i32 %16, !dbg !4049
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i32 %1, metadata !4055, metadata !DIExpression()), !dbg !4058
  %3 = icmp ugt i32 %0, 48, !dbg !4059
  br i1 %3, label %13, label %4, !dbg !4061

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4062
  call void @llvm.dbg.value(metadata i32 %5, metadata !4056, metadata !DIExpression()), !dbg !4058
  %6 = and i32 %0, 31, !dbg !4063
  call void @llvm.dbg.value(metadata i32 %6, metadata !4057, metadata !DIExpression()), !dbg !4058
  %7 = icmp eq i32 %1, 0, !dbg !4064
  %8 = shl nuw i32 1, %6, !dbg !4066
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4066
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !4067
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !4067
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !4067
  store volatile i32 %8, i32* %12, align 4, !dbg !4066
  br label %13, !dbg !4068

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4058
  ret i32 %14, !dbg !4068
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4071, metadata !DIExpression()), !dbg !4076
  call void @llvm.dbg.value(metadata i32* %1, metadata !4072, metadata !DIExpression()), !dbg !4076
  %3 = icmp ugt i32 %0, 48, !dbg !4077
  br i1 %3, label %15, label %4, !dbg !4079

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4080
  br i1 %5, label %15, label %6, !dbg !4082

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %7, metadata !4073, metadata !DIExpression()), !dbg !4076
  %8 = and i32 %0, 31, !dbg !4084
  call void @llvm.dbg.value(metadata i32 %8, metadata !4074, metadata !DIExpression()), !dbg !4076
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4085
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !4086
  %11 = load volatile i32, i32* %10, align 4, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %11, metadata !4075, metadata !DIExpression()), !dbg !4076
  %12 = shl nuw i32 1, %8, !dbg !4087
  %13 = and i32 %11, %12, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %13, metadata !4075, metadata !DIExpression()), !dbg !4076
  %14 = lshr i32 %13, %8, !dbg !4089
  store i32 %14, i32* %1, align 4, !dbg !4090
  br label %15, !dbg !4091

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4076
  ret i32 %16, !dbg !4092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !4093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4095, metadata !DIExpression()), !dbg !4099
  %2 = icmp ugt i32 %0, 48, !dbg !4100
  br i1 %2, label %16, label %3, !dbg !4102

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %4, metadata !4096, metadata !DIExpression()), !dbg !4099
  %5 = and i32 %0, 31, !dbg !4104
  call void @llvm.dbg.value(metadata i32 %5, metadata !4097, metadata !DIExpression()), !dbg !4099
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4105
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !4106
  %8 = load volatile i32, i32* %7, align 4, !dbg !4106
  call void @llvm.dbg.value(metadata i32 %8, metadata !4098, metadata !DIExpression()), !dbg !4099
  %9 = shl nuw i32 1, %5, !dbg !4107
  %10 = and i32 %8, %9, !dbg !4108
  call void @llvm.dbg.value(metadata i32 %10, metadata !4098, metadata !DIExpression()), !dbg !4099
  %11 = lshr i32 %10, %5, !dbg !4109
  %12 = icmp eq i32 %11, 0, !dbg !4109
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !4111
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !4111
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !4111
  store volatile i32 %9, i32* %15, align 4, !dbg !4112
  br label %16, !dbg !4113

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !4099
  ret i32 %17, !dbg !4113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4116, metadata !DIExpression()), !dbg !4119
  %2 = icmp ugt i32 %0, 48, !dbg !4120
  br i1 %2, label %9, label %3, !dbg !4122

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4123
  call void @llvm.dbg.value(metadata i32 %4, metadata !4117, metadata !DIExpression()), !dbg !4119
  %5 = and i32 %0, 31, !dbg !4124
  call void @llvm.dbg.value(metadata i32 %5, metadata !4118, metadata !DIExpression()), !dbg !4119
  %6 = shl nuw i32 1, %5, !dbg !4125
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4126
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !4127
  store volatile i32 %6, i32* %8, align 4, !dbg !4128
  br label %9, !dbg !4129

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4119
  ret i32 %10, !dbg !4130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4133, metadata !DIExpression()), !dbg !4136
  %2 = icmp ugt i32 %0, 48, !dbg !4137
  br i1 %2, label %9, label %3, !dbg !4139

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4140
  call void @llvm.dbg.value(metadata i32 %4, metadata !4134, metadata !DIExpression()), !dbg !4136
  %5 = and i32 %0, 31, !dbg !4141
  call void @llvm.dbg.value(metadata i32 %5, metadata !4135, metadata !DIExpression()), !dbg !4136
  %6 = shl nuw i32 1, %5, !dbg !4142
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4143
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !4144
  store volatile i32 %6, i32* %8, align 4, !dbg !4145
  br label %9, !dbg !4146

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4136
  ret i32 %10, !dbg !4147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !4148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4150, metadata !DIExpression()), !dbg !4153
  %2 = icmp ugt i32 %0, 48, !dbg !4154
  br i1 %2, label %14, label %3, !dbg !4156

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #22, !dbg !4157
  %5 = icmp eq i32 %4, 0, !dbg !4157
  br i1 %5, label %14, label %6, !dbg !4158

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %7, metadata !4151, metadata !DIExpression()), !dbg !4153
  %8 = and i32 %0, 31, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %8, metadata !4152, metadata !DIExpression()), !dbg !4153
  %9 = shl nuw i32 1, %8, !dbg !4161
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4162
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4163
  store volatile i32 %9, i32* %11, align 4, !dbg !4164
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4165
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !4166
  store volatile i32 %9, i32* %13, align 4, !dbg !4167
  br label %14, !dbg !4168

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4153
  ret i32 %15, !dbg !4169
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !4170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4172, metadata !DIExpression()), !dbg !4175
  %2 = icmp ugt i32 %0, 48, !dbg !4176
  br i1 %2, label %14, label %3, !dbg !4178

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #22, !dbg !4179
  %5 = icmp eq i32 %4, 0, !dbg !4179
  br i1 %5, label %14, label %6, !dbg !4180

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4181
  call void @llvm.dbg.value(metadata i32 %7, metadata !4173, metadata !DIExpression()), !dbg !4175
  %8 = and i32 %0, 31, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %8, metadata !4174, metadata !DIExpression()), !dbg !4175
  %9 = shl nuw i32 1, %8, !dbg !4183
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4184
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4185
  store volatile i32 %9, i32* %11, align 4, !dbg !4186
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4187
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !4188
  store volatile i32 %9, i32* %13, align 4, !dbg !4189
  br label %14, !dbg !4190

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4175
  ret i32 %15, !dbg !4191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !4192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4194, metadata !DIExpression()), !dbg !4197
  %2 = icmp ugt i32 %0, 48, !dbg !4198
  br i1 %2, label %12, label %3, !dbg !4200

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #22, !dbg !4201
  %5 = icmp eq i32 %4, 0, !dbg !4201
  br i1 %5, label %12, label %6, !dbg !4202

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4203
  call void @llvm.dbg.value(metadata i32 %7, metadata !4195, metadata !DIExpression()), !dbg !4197
  %8 = and i32 %0, 31, !dbg !4204
  call void @llvm.dbg.value(metadata i32 %8, metadata !4196, metadata !DIExpression()), !dbg !4197
  %9 = shl nuw i32 1, %8, !dbg !4205
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4206
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !4207
  store volatile i32 %9, i32* %11, align 4, !dbg !4208
  br label %12, !dbg !4209

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4197
  ret i32 %13, !dbg !4210
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4217, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i32 %1, metadata !4218, metadata !DIExpression()), !dbg !4219
  %3 = icmp ugt i32 %0, 5, !dbg !4220
  br i1 %3, label %7, label %4, !dbg !4222

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4223
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !4224
  store volatile i32 %1, i32* %6, align 4, !dbg !4225
  br label %7, !dbg !4226

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !4219
  ret i32 %8, !dbg !4227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !4228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4232, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i8 %1, metadata !4233, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i8 %2, metadata !4234, metadata !DIExpression()), !dbg !4238
  call void @llvm.dbg.value(metadata i8 %3, metadata !4235, metadata !DIExpression()), !dbg !4238
  %5 = icmp ugt i32 %0, 48, !dbg !4239
  br i1 %5, label %30, label %6, !dbg !4241

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #22, !dbg !4242
  %8 = icmp eq i32 %7, 0, !dbg !4242
  br i1 %8, label %9, label %30, !dbg !4243

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %10, metadata !4236, metadata !DIExpression()), !dbg !4238
  %11 = and i32 %0, 31, !dbg !4245
  call void @llvm.dbg.value(metadata i32 %11, metadata !4237, metadata !DIExpression()), !dbg !4238
  %12 = icmp eq i8 %1, 0, !dbg !4246
  %13 = shl nuw i32 1, %11, !dbg !4248
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4248
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !4249
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !4249
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !4249
  store volatile i32 %13, i32* %17, align 4, !dbg !4248
  %18 = icmp eq i8 %2, 0, !dbg !4250
  %19 = shl nuw i32 1, %11, !dbg !4252
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4252
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !4253
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !4253
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !4253
  store volatile i32 %19, i32* %23, align 4, !dbg !4252
  %24 = icmp eq i8 %3, 0, !dbg !4254
  %25 = shl nuw i32 1, %11, !dbg !4256
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4256
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !4257
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !4257
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !4257
  store volatile i32 %25, i32* %29, align 4, !dbg !4256
  br label %30, !dbg !4258

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !4238
  ret i32 %31, !dbg !4258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4261, metadata !DIExpression()), !dbg !4268
  %2 = icmp ugt i32 %0, 48, !dbg !4269
  br i1 %2, label %40, label %3, !dbg !4271

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %4, metadata !4262, metadata !DIExpression()), !dbg !4268
  %5 = and i32 %0, 31, !dbg !4273
  call void @llvm.dbg.value(metadata i32 %5, metadata !4265, metadata !DIExpression()), !dbg !4268
  %6 = lshr i32 %0, 4, !dbg !4274
  call void @llvm.dbg.value(metadata i32 %6, metadata !4263, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i32 %0, metadata !4266, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4268
  %7 = lshr i32 %0, 3, !dbg !4275
  call void @llvm.dbg.value(metadata i32 %7, metadata !4264, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i32 %0, metadata !4267, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4268
  %8 = shl nuw nsw i32 %0, 2, !dbg !4276
  %9 = and i32 %8, 28, !dbg !4276
  %10 = shl nuw i32 15, %9, !dbg !4277
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4278
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !4279
  store volatile i32 %10, i32* %12, align 4, !dbg !4280
  %13 = shl nuw i32 1, %5, !dbg !4281
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4282
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !4283
  store volatile i32 %13, i32* %15, align 4, !dbg !4284
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4285
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !4286
  store volatile i32 %13, i32* %17, align 4, !dbg !4287
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #22, !dbg !4288
  %19 = icmp eq i32 %18, 0, !dbg !4288
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4290
  br i1 %19, label %23, label %21, !dbg !4291

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !4292
  br label %29, !dbg !4294

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !4295
  store volatile i32 %13, i32* %24, align 4, !dbg !4297
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4298
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !4299
  store volatile i32 %13, i32* %26, align 4, !dbg !4300
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4301
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !4302
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !4290
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4303
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !4304
  store volatile i32 %13, i32* %32, align 4, !dbg !4305
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4306
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !4307
  store volatile i32 %13, i32* %34, align 4, !dbg !4308
  %35 = shl nuw nsw i32 %0, 1, !dbg !4309
  %36 = and i32 %35, 30, !dbg !4309
  %37 = shl nuw i32 3, %36, !dbg !4310
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4311
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !4312
  store volatile i32 %37, i32* %39, align 4, !dbg !4313
  br label %40, !dbg !4314

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !4268
  ret i32 %41, !dbg !4315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4318, metadata !DIExpression()), !dbg !4323
  %2 = icmp ugt i32 %0, 48, !dbg !4324
  br i1 %2, label %34, label %3, !dbg !4326

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4327
  call void @llvm.dbg.value(metadata i32 %4, metadata !4319, metadata !DIExpression()), !dbg !4323
  %5 = and i32 %0, 31, !dbg !4328
  call void @llvm.dbg.value(metadata i32 %5, metadata !4321, metadata !DIExpression()), !dbg !4323
  %6 = lshr i32 %0, 3, !dbg !4329
  call void @llvm.dbg.value(metadata i32 %6, metadata !4320, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.value(metadata i32 %0, metadata !4322, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4323
  %7 = shl nuw nsw i32 %0, 2, !dbg !4330
  %8 = and i32 %7, 28, !dbg !4330
  %9 = shl nuw i32 15, %8, !dbg !4331
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4332
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !4333
  store volatile i32 %9, i32* %11, align 4, !dbg !4334
  %12 = shl nuw i32 1, %5, !dbg !4335
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4336
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !4337
  store volatile i32 %12, i32* %14, align 4, !dbg !4338
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #22, !dbg !4339
  %16 = icmp eq i32 %15, 0, !dbg !4339
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4341
  br i1 %16, label %22, label %18, !dbg !4342

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !4343
  store volatile i32 %12, i32* %19, align 4, !dbg !4345
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4346
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !4347
  br label %28, !dbg !4348

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !4349
  store volatile i32 %12, i32* %23, align 4, !dbg !4351
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4352
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !4353
  store volatile i32 %12, i32* %25, align 4, !dbg !4354
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4355
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !4356
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !4341
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4357
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !4358
  store volatile i32 %12, i32* %31, align 4, !dbg !4359
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4360
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !4361
  store volatile i32 %12, i32* %33, align 4, !dbg !4362
  br label %34, !dbg !4363

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !4323
  ret i32 %35, !dbg !4364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4369, metadata !DIExpression()), !dbg !4373
  call void @llvm.dbg.value(metadata i32 %1, metadata !4370, metadata !DIExpression()), !dbg !4373
  %3 = icmp ugt i32 %0, 48, !dbg !4374
  br i1 %3, label %14, label %4, !dbg !4376

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !4377
  call void @llvm.dbg.value(metadata i32 %5, metadata !4371, metadata !DIExpression()), !dbg !4373
  call void @llvm.dbg.value(metadata i32 %0, metadata !4372, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4373
  %6 = shl nuw nsw i32 %0, 1, !dbg !4378
  %7 = and i32 %6, 30, !dbg !4378
  %8 = shl nuw i32 3, %7, !dbg !4379
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4380
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !4381
  store volatile i32 %8, i32* %10, align 4, !dbg !4382
  %11 = shl i32 %1, %7, !dbg !4383
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4384
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !4385
  store volatile i32 %11, i32* %13, align 4, !dbg !4386
  br label %14, !dbg !4387

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !4373
  ret i32 %15, !dbg !4388
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4394, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32* %1, metadata !4395, metadata !DIExpression()), !dbg !4399
  %3 = icmp ugt i32 %0, 48, !dbg !4400
  br i1 %3, label %18, label %4, !dbg !4402

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4403
  br i1 %5, label %18, label %6, !dbg !4405

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !4406
  call void @llvm.dbg.value(metadata i32 %7, metadata !4396, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 %0, metadata !4397, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4399
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4407
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !4408
  %10 = load volatile i32, i32* %9, align 4, !dbg !4408
  call void @llvm.dbg.value(metadata i32 %10, metadata !4398, metadata !DIExpression()), !dbg !4399
  %11 = shl nuw nsw i32 %0, 1, !dbg !4409
  %12 = and i32 %11, 30, !dbg !4409
  %13 = shl nuw i32 3, %12, !dbg !4410
  %14 = and i32 %10, %13, !dbg !4411
  call void @llvm.dbg.value(metadata i32 %14, metadata !4398, metadata !DIExpression()), !dbg !4399
  %15 = lshr i32 %14, %12, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %15, metadata !4398, metadata !DIExpression()), !dbg !4399
  %16 = shl i32 %15, 2, !dbg !4413
  %17 = add i32 %16, 4, !dbg !4413
  store i32 %17, i32* %1, align 4, !dbg !4414
  br label %18, !dbg !4415

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4399
  ret i32 %19, !dbg !4416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4417 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4421, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.value(metadata i1 %1, metadata !4422, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4486
  %4 = bitcast i32* %3 to i8*, !dbg !4487
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4487
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4488
  %6 = load volatile i32, i32* %5, align 4, !dbg !4488
  %7 = icmp eq i32 %6, 2, !dbg !4490
  br i1 %7, label %9, label %8, !dbg !4491

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4492
  unreachable, !dbg !4492

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4494
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4494
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4428, metadata !DIExpression()), !dbg !4486
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4495
  call void @llvm.dbg.value(metadata i32 %12, metadata !4423, metadata !DIExpression()), !dbg !4486
  br i1 %1, label %13, label %14, !dbg !4496

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #21, !dbg !4497
  br label %14, !dbg !4500

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4486
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #21, !dbg !4501
  call void @llvm.dbg.value(metadata i32 %15, metadata !4484, metadata !DIExpression()), !dbg !4486
  %16 = icmp eq i32 %15, 0, !dbg !4502
  br i1 %16, label %18, label %17, !dbg !4504

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4505
  unreachable, !dbg !4505

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4507
  call void @llvm.dbg.value(metadata i32 %19, metadata !4425, metadata !DIExpression()), !dbg !4486
  %20 = icmp eq i32 %19, 0, !dbg !4509
  br i1 %20, label %43, label %21, !dbg !4510

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4511
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4511
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4426, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.value(metadata i8* undef, metadata !4427, metadata !DIExpression()), !dbg !4486
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4512
  br i1 %24, label %25, label %26, !dbg !4514

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4515
  unreachable, !dbg !4515

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4517
  %28 = load i8*, i8** %27, align 4, !dbg !4517
  call void @llvm.dbg.value(metadata i8* %28, metadata !4427, metadata !DIExpression()), !dbg !4486
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #21, !dbg !4518
  call void %23(i32 noundef 1, i8* noundef %28) #21, !dbg !4519
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #21, !dbg !4520
  call void @llvm.dbg.value(metadata i32* %3, metadata !4425, metadata !DIExpression(DW_OP_deref)), !dbg !4486
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #21, !dbg !4521
  call void @llvm.dbg.value(metadata i32 %31, metadata !4484, metadata !DIExpression()), !dbg !4486
  %32 = icmp eq i32 %31, 0, !dbg !4522
  br i1 %32, label %34, label %33, !dbg !4524

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4525
  unreachable, !dbg !4525

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4527
  call void @llvm.dbg.value(metadata i32 %35, metadata !4425, metadata !DIExpression()), !dbg !4486
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4529
  %37 = load i32, i32* %36, align 4, !dbg !4529
  %38 = icmp ult i32 %35, %37, !dbg !4530
  br i1 %38, label %43, label %39, !dbg !4531

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #21, !dbg !4532
  call void @llvm.dbg.value(metadata i32 %40, metadata !4484, metadata !DIExpression()), !dbg !4486
  %41 = icmp eq i32 %40, 0, !dbg !4534
  br i1 %41, label %43, label %42, !dbg !4536

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4537
  unreachable, !dbg !4537

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4539
  ret void, !dbg !4539
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4540 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4542, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i1 %1, metadata !4543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4550
  %4 = bitcast i32* %3 to i8*, !dbg !4551
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4551
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4552
  %6 = load volatile i32, i32* %5, align 4, !dbg !4552
  %7 = icmp eq i32 %6, 2, !dbg !4554
  br i1 %7, label %9, label %8, !dbg !4555

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4556
  unreachable, !dbg !4556

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4558
  call void @llvm.dbg.value(metadata i32 %10, metadata !4544, metadata !DIExpression()), !dbg !4550
  br i1 %1, label %36, label %11, !dbg !4559

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4560
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !4560
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !4548, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i8* undef, metadata !4549, metadata !DIExpression()), !dbg !4550
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4563
  br i1 %14, label %15, label %16, !dbg !4565

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4566
  unreachable, !dbg !4566

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4568
  %18 = load i8*, i8** %17, align 4, !dbg !4568
  call void @llvm.dbg.value(metadata i8* %18, metadata !4549, metadata !DIExpression()), !dbg !4550
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #21, !dbg !4569
  tail call void %13(i32 noundef 2, i8* noundef %18) #21, !dbg !4570
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #21, !dbg !4571
  call void @llvm.dbg.value(metadata i32* %3, metadata !4547, metadata !DIExpression(DW_OP_deref)), !dbg !4550
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #21, !dbg !4572
  call void @llvm.dbg.value(metadata i32 %21, metadata !4545, metadata !DIExpression()), !dbg !4550
  %22 = icmp eq i32 %21, 0, !dbg !4573
  br i1 %22, label %24, label %23, !dbg !4575

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4576
  unreachable, !dbg !4576

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4578
  %26 = load i32, i32* %25, align 4, !dbg !4578
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4579
  %28 = load i32, i32* %27, align 4, !dbg !4579
  %29 = sub i32 %26, %28, !dbg !4580
  call void @llvm.dbg.value(metadata i32 %29, metadata !4546, metadata !DIExpression()), !dbg !4550
  %30 = load i32, i32* %3, align 4, !dbg !4581
  call void @llvm.dbg.value(metadata i32 %30, metadata !4547, metadata !DIExpression()), !dbg !4550
  %31 = icmp ult i32 %30, %29, !dbg !4583
  br i1 %31, label %36, label %32, !dbg !4584

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #21, !dbg !4585
  call void @llvm.dbg.value(metadata i32 %33, metadata !4545, metadata !DIExpression()), !dbg !4550
  %34 = icmp eq i32 %33, 0, !dbg !4587
  br i1 %34, label %36, label %35, !dbg !4589

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4590
  unreachable, !dbg !4590

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4592
  ret void, !dbg !4592
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4597, metadata !DIExpression()), !dbg !4601
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4602
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4602
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4598, metadata !DIExpression()), !dbg !4601
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !4603
  %5 = icmp eq i32 %4, 0, !dbg !4603
  br i1 %5, label %6, label %14, !dbg !4605

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #21, !dbg !4606
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #21, !dbg !4608
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4609
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4609
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4599, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata i8* undef, metadata !4600, metadata !DIExpression()), !dbg !4601
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4610
  br i1 %9, label %10, label %11, !dbg !4612

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4613
  unreachable, !dbg !4613

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4615
  %13 = load i8*, i8** %12, align 4, !dbg !4615
  call void @llvm.dbg.value(metadata i8* %13, metadata !4600, metadata !DIExpression()), !dbg !4601
  tail call void %8(i32 noundef -1, i8* noundef %13) #21, !dbg !4616
  br label %14, !dbg !4617

14:                                               ; preds = %11, %1
  ret void, !dbg !4618
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4625, metadata !DIExpression()), !dbg !4630
  call void @llvm.dbg.value(metadata i32 %1, metadata !4626, metadata !DIExpression()), !dbg !4630
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !4631
  br i1 %3, label %4, label %16, !dbg !4633

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #22, !dbg !4634
  br i1 %5, label %6, label %16, !dbg !4635

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4636
  %8 = load volatile i32, i32* %7, align 4, !dbg !4636
  %9 = icmp eq i32 %8, 0, !dbg !4638
  br i1 %9, label %16, label %10, !dbg !4639

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %11, metadata !4628, metadata !DIExpression()), !dbg !4630
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !4641
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4642
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4642
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4629, metadata !DIExpression()), !dbg !4630
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !4643
  %15 = load i32, i32* %14, align 4, !dbg !4643
  call void @llvm.dbg.value(metadata i32 %15, metadata !4627, metadata !DIExpression()), !dbg !4630
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #21, !dbg !4644
  br label %16, !dbg !4645

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4630
  ret i32 %17, !dbg !4646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4647 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4651, metadata !DIExpression()), !dbg !4652
  %2 = icmp ult i32 %0, 4, !dbg !4653
  ret i1 %2, !dbg !4654
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4659, metadata !DIExpression()), !dbg !4660
  %2 = icmp ult i32 %0, 13, !dbg !4661
  ret i1 %2, !dbg !4662
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4679, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4680, metadata !DIExpression()), !dbg !4683
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !4684
  br i1 %3, label %4, label %23, !dbg !4686

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #22, !dbg !4687
  br i1 %5, label %6, label %23, !dbg !4688

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4689
  %8 = load volatile i32, i32* %7, align 4, !dbg !4689
  %9 = icmp eq i32 %8, 0, !dbg !4691
  br i1 %9, label %23, label %10, !dbg !4692

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4693
  call void @llvm.dbg.value(metadata i32 %11, metadata !4681, metadata !DIExpression()), !dbg !4683
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !4694
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4695
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4695
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4682, metadata !DIExpression()), !dbg !4683
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4696
  %15 = load i32, i32* %14, align 4, !dbg !4696
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #22, !dbg !4697
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4698
  %18 = load i32, i32* %17, align 4, !dbg !4698
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4699
  %20 = load i32, i32* %19, align 4, !dbg !4699
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4700
  %22 = load i32, i32* %21, align 4, !dbg !4700
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #21, !dbg !4701
  br label %23, !dbg !4702

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4683
  ret i32 %24, !dbg !4703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !4704 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !4708, metadata !DIExpression()), !dbg !4709
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !4710
  %3 = load i32, i32* %2, align 4, !dbg !4710
  %4 = icmp ult i32 %3, 13, !dbg !4711
  br i1 %4, label %5, label %17, !dbg !4712

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !4713
  %7 = load i32, i32* %6, align 4, !dbg !4713
  %8 = icmp ult i32 %7, 4, !dbg !4714
  br i1 %8, label %9, label %17, !dbg !4715

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !4716
  %11 = load i32, i32* %10, align 4, !dbg !4716
  %12 = icmp ult i32 %11, 2, !dbg !4717
  br i1 %12, label %13, label %17, !dbg !4718

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !4719
  %15 = load i32, i32* %14, align 4, !dbg !4719
  %16 = icmp ult i32 %15, 3, !dbg !4720
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !4709
  ret i1 %18, !dbg !4721
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4727, metadata !DIExpression()), !dbg !4735
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4728, metadata !DIExpression()), !dbg !4735
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !4736
  br i1 %3, label %4, label %41, !dbg !4738

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #22, !dbg !4739
  br i1 %5, label %6, label %41, !dbg !4740

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %7, metadata !4732, metadata !DIExpression()), !dbg !4735
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4742
  %9 = load volatile i32, i32* %8, align 4, !dbg !4742
  %10 = icmp eq i32 %9, 0, !dbg !4744
  br i1 %10, label %12, label %11, !dbg !4745

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !4746
  br label %41, !dbg !4748

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !4749
  br i1 %13, label %22, label %14, !dbg !4751

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !4730, metadata !DIExpression()), !dbg !4735
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !4752
  store volatile i32 0, i32* %16, align 4, !dbg !4757
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !4758
  store i8* null, i8** %17, align 4, !dbg !4759
  %18 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !4760
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !4761
  %19 = add nuw nsw i32 %15, 1, !dbg !4762
  call void @llvm.dbg.value(metadata i32 %19, metadata !4730, metadata !DIExpression()), !dbg !4735
  %20 = icmp eq i32 %19, 4, !dbg !4763
  br i1 %20, label %21, label %14, !dbg !4764, !llvm.loop !4765

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !4767
  br label %22, !dbg !4768

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !4769
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !4770
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4771
  %24 = load i32, i32* %23, align 4, !dbg !4771
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #21, !dbg !4772
  call void @llvm.dbg.value(metadata i32 %25, metadata !4733, metadata !DIExpression()), !dbg !4735
  %26 = icmp eq i32 %25, 0, !dbg !4773
  br i1 %26, label %28, label %27, !dbg !4775

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4776
  unreachable, !dbg !4776

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4778
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !4778
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !4729, metadata !DIExpression()), !dbg !4735
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #21, !dbg !4779
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4780
  %32 = load i32, i32* %31, align 4, !dbg !4780
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !4781
  %34 = load i32, i32* %33, align 4, !dbg !4781
  call void @llvm.dbg.value(metadata i32 %34, metadata !4731, metadata !DIExpression()), !dbg !4735
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #21, !dbg !4782
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4783
  %36 = load i32, i32* %35, align 4, !dbg !4783
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4784
  %38 = load i32, i32* %37, align 4, !dbg !4784
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4785
  %40 = load i32, i32* %39, align 4, !dbg !4785
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #21, !dbg !4786
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #21, !dbg !4787
  br label %41, !dbg !4788

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !4735
  ret i32 %42, !dbg !4789
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4794, metadata !DIExpression()), !dbg !4801
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !4802
  br i1 %2, label %3, label %54, !dbg !4804

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4805
  call void @llvm.dbg.value(metadata i32 %4, metadata !4798, metadata !DIExpression()), !dbg !4801
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4806
  %6 = load volatile i32, i32* %5, align 4, !dbg !4806
  %7 = icmp eq i32 %6, 0, !dbg !4808
  br i1 %7, label %52, label %8, !dbg !4809

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4810
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4810
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4795, metadata !DIExpression()), !dbg !4801
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #21, !dbg !4811
  %11 = load volatile i32, i32* %5, align 4, !dbg !4812
  %12 = icmp eq i32 %11, 2, !dbg !4814
  br i1 %12, label %13, label %43, !dbg !4815

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4816
  call void @llvm.dbg.value(metadata i32 %14, metadata !4796, metadata !DIExpression()), !dbg !4801
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %15, metadata !4797, metadata !DIExpression()), !dbg !4801
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #21, !dbg !4819
  call void @llvm.dbg.value(metadata i32 %16, metadata !4799, metadata !DIExpression()), !dbg !4801
  %17 = icmp eq i32 %16, 0, !dbg !4820
  br i1 %17, label %19, label %18, !dbg !4822

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4823
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4825
  unreachable, !dbg !4825

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #21, !dbg !4826
  call void @llvm.dbg.value(metadata i32 %20, metadata !4799, metadata !DIExpression()), !dbg !4801
  %21 = icmp eq i32 %20, 0, !dbg !4827
  br i1 %21, label %23, label %22, !dbg !4829

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4830
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4832
  unreachable, !dbg !4832

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #21, !dbg !4833
  call void @llvm.dbg.value(metadata i32 %24, metadata !4799, metadata !DIExpression()), !dbg !4801
  %25 = icmp eq i32 %24, 0, !dbg !4834
  br i1 %25, label %27, label %26, !dbg !4836

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4837
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4839
  unreachable, !dbg !4839

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #21, !dbg !4840
  call void @llvm.dbg.value(metadata i32 %28, metadata !4799, metadata !DIExpression()), !dbg !4801
  %29 = icmp eq i32 %28, 0, !dbg !4841
  br i1 %29, label %31, label %30, !dbg !4843

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4844
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4846
  unreachable, !dbg !4846

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #21, !dbg !4847
  call void @llvm.dbg.value(metadata i32 %32, metadata !4799, metadata !DIExpression()), !dbg !4801
  %33 = icmp eq i32 %32, 0, !dbg !4848
  br i1 %33, label %35, label %34, !dbg !4850

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4851
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4853
  unreachable, !dbg !4853

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #21, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %36, metadata !4799, metadata !DIExpression()), !dbg !4801
  %37 = icmp eq i32 %36, 0, !dbg !4855
  br i1 %37, label %39, label %38, !dbg !4857

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4858
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4860
  unreachable, !dbg !4860

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !4861
  %41 = load i32, i32* %40, align 4, !dbg !4861
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #21, !dbg !4862
  br label %43, !dbg !4863

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #21, !dbg !4864
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4865
  %45 = load i32, i32* %44, align 4, !dbg !4865
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #21, !dbg !4866
  call void @llvm.dbg.value(metadata i32 %46, metadata !4800, metadata !DIExpression()), !dbg !4801
  %47 = icmp eq i32 %46, 0, !dbg !4867
  br i1 %47, label %49, label %48, !dbg !4869

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4870
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4872
  unreachable, !dbg !4872

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4873
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !4874
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4875
  store i8* null, i8** %51, align 4, !dbg !4876
  store volatile i32 0, i32* %5, align 4, !dbg !4877
  br label %52, !dbg !4878

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4801
  br label %54, !dbg !4879

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !4801
  ret i32 %55, !dbg !4879
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4884, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.value(metadata i8 %1, metadata !4885, metadata !DIExpression()), !dbg !4887
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !4888
  br i1 %3, label %4, label %11, !dbg !4890

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4891
  %6 = load volatile i32, i32* %5, align 4, !dbg !4891
  %7 = icmp eq i32 %6, 1, !dbg !4893
  br i1 %7, label %8, label %11, !dbg !4894

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4895
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4895
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4886, metadata !DIExpression()), !dbg !4887
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #21, !dbg !4896
  br label %11, !dbg !4897

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !4897
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4904, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i8* %1, metadata !4905, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i32 %2, metadata !4906, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i32 0, metadata !4907, metadata !DIExpression()), !dbg !4908
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !4909
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !4911
  br i1 %6, label %7, label %20, !dbg !4911

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4912
  %9 = load volatile i32, i32* %8, align 4, !dbg !4912
  %10 = icmp ne i32 %9, 1, !dbg !4914
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !4915
  call void @llvm.dbg.value(metadata i32 0, metadata !4907, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i8* %1, metadata !4905, metadata !DIExpression()), !dbg !4908
  br i1 %12, label %20, label %13, !dbg !4915

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4907, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i8* %15, metadata !4905, metadata !DIExpression()), !dbg !4908
  %16 = load i8, i8* %15, align 1, !dbg !4916
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #22, !dbg !4920
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !4921
  call void @llvm.dbg.value(metadata i8* %17, metadata !4905, metadata !DIExpression()), !dbg !4908
  %18 = add nuw i32 %14, 1, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %18, metadata !4907, metadata !DIExpression()), !dbg !4908
  %19 = icmp eq i32 %18, %2, !dbg !4923
  br i1 %19, label %20, label %13, !dbg !4924, !llvm.loop !4925

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !4908
  ret i32 %21, !dbg !4927
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4928 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4930, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i8* %1, metadata !4931, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %2, metadata !4932, metadata !DIExpression()), !dbg !4938
  %5 = bitcast i32* %4 to i8*, !dbg !4939
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4939
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !4940
  %7 = xor i1 %6, true, !dbg !4942
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !4942
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !4942
  br i1 %11, label %45, label %12, !dbg !4942

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4943
  %14 = load volatile i32, i32* %13, align 4, !dbg !4943
  %15 = icmp eq i32 %14, 2, !dbg !4945
  br i1 %15, label %16, label %45, !dbg !4946

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %17, metadata !4933, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32* %4, metadata !4936, metadata !DIExpression(DW_OP_deref)), !dbg !4938
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #21, !dbg !4948
  call void @llvm.dbg.value(metadata i32 %18, metadata !4937, metadata !DIExpression()), !dbg !4938
  %19 = icmp eq i32 %18, 0, !dbg !4949
  br i1 %19, label %21, label %20, !dbg !4951

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4952
  unreachable, !dbg !4952

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %22, metadata !4936, metadata !DIExpression()), !dbg !4938
  %23 = icmp ult i32 %22, %2, !dbg !4956
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !4935, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 0, metadata !4934, metadata !DIExpression()), !dbg !4938
  %25 = icmp eq i32 %24, 0, !dbg !4957
  br i1 %25, label %38, label %28, !dbg !4960

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !4934, metadata !DIExpression()), !dbg !4938
  %27 = icmp eq i32 %34, %24, !dbg !4957
  br i1 %27, label %36, label %28, !dbg !4960, !llvm.loop !4961

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !4934, metadata !DIExpression()), !dbg !4938
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !4963
  %31 = load i8, i8* %30, align 1, !dbg !4963
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #21, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %32, metadata !4937, metadata !DIExpression()), !dbg !4938
  %33 = icmp eq i32 %32, 0, !dbg !4966
  %34 = add nuw i32 %29, 1, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %34, metadata !4934, metadata !DIExpression()), !dbg !4938
  br i1 %33, label %26, label %35, !dbg !4969

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4970
  unreachable, !dbg !4970

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !4972
  br label %38, !dbg !4972

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !4972
  call void @llvm.dbg.value(metadata i32 %39, metadata !4936, metadata !DIExpression()), !dbg !4938
  %40 = icmp eq i32 %24, %39, !dbg !4974
  br i1 %40, label %41, label %45, !dbg !4975

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #21, !dbg !4976
  call void @llvm.dbg.value(metadata i32 %42, metadata !4937, metadata !DIExpression()), !dbg !4938
  %43 = icmp eq i32 %42, 0, !dbg !4978
  br i1 %43, label %45, label %44, !dbg !4980

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !4981
  unreachable, !dbg !4981

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !4938
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4983
  ret i32 %46, !dbg !4983
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !4984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4988, metadata !DIExpression()), !dbg !4991
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !4992
  br i1 %2, label %3, label %11, !dbg !4994

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4995
  %5 = load volatile i32, i32* %4, align 4, !dbg !4995
  %6 = icmp eq i32 %5, 1, !dbg !4997
  br i1 %6, label %7, label %11, !dbg !4998

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4999
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4999
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4990, metadata !DIExpression()), !dbg !4991
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !5000
  call void @llvm.dbg.value(metadata i8 %10, metadata !4989, metadata !DIExpression()), !dbg !4991
  br label %11, !dbg !5001

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !4991
  ret i8 %12, !dbg !5002
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !5003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5007, metadata !DIExpression()), !dbg !5010
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5011
  br i1 %2, label %3, label %11, !dbg !5013

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5014
  %5 = load volatile i32, i32* %4, align 4, !dbg !5014
  %6 = icmp eq i32 %5, 1, !dbg !5016
  br i1 %6, label %7, label %11, !dbg !5017

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5018
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5018
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5009, metadata !DIExpression()), !dbg !5010
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %10, metadata !5008, metadata !DIExpression()), !dbg !5010
  br label %11, !dbg !5020

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5010
  ret i32 %12, !dbg !5021
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5026, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i8* %1, metadata !5027, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i32 %2, metadata !5028, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i8* %1, metadata !5030, metadata !DIExpression()), !dbg !5031
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5032
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5034
  br i1 %6, label %7, label %19, !dbg !5034

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5035
  %9 = load volatile i32, i32* %8, align 4, !dbg !5035
  %10 = icmp ne i32 %9, 1, !dbg !5037
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5038
  call void @llvm.dbg.value(metadata i32 0, metadata !5029, metadata !DIExpression()), !dbg !5031
  br i1 %12, label %19, label %13, !dbg !5038

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5029, metadata !DIExpression()), !dbg !5031
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #22, !dbg !5039
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !5043
  store i8 %15, i8* %16, align 1, !dbg !5044
  %17 = add nuw i32 %14, 1, !dbg !5045
  call void @llvm.dbg.value(metadata i32 %17, metadata !5029, metadata !DIExpression()), !dbg !5031
  %18 = icmp eq i32 %17, %2, !dbg !5046
  br i1 %18, label %19, label %13, !dbg !5047, !llvm.loop !5048

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5031
  ret i32 %20, !dbg !5050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5051 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5053, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata i8* %1, metadata !5054, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata i32 %2, metadata !5055, metadata !DIExpression()), !dbg !5061
  %5 = bitcast i32* %4 to i8*, !dbg !5062
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5062
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5063
  %7 = xor i1 %6, true, !dbg !5065
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5065
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5065
  br i1 %11, label %44, label %12, !dbg !5065

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5066
  %14 = load volatile i32, i32* %13, align 4, !dbg !5066
  %15 = icmp eq i32 %14, 2, !dbg !5068
  br i1 %15, label %16, label %44, !dbg !5069

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %17, metadata !5056, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata i32* %4, metadata !5058, metadata !DIExpression(DW_OP_deref)), !dbg !5061
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #21, !dbg !5071
  call void @llvm.dbg.value(metadata i32 %18, metadata !5060, metadata !DIExpression()), !dbg !5061
  %19 = icmp eq i32 %18, 0, !dbg !5072
  br i1 %19, label %21, label %20, !dbg !5074

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5075
  unreachable, !dbg !5075

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5077
  call void @llvm.dbg.value(metadata i32 %22, metadata !5058, metadata !DIExpression()), !dbg !5061
  %23 = icmp ult i32 %22, %2, !dbg !5079
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5057, metadata !DIExpression()), !dbg !5061
  call void @llvm.dbg.value(metadata i32 0, metadata !5059, metadata !DIExpression()), !dbg !5061
  %25 = icmp eq i32 %24, 0, !dbg !5080
  br i1 %25, label %37, label %28, !dbg !5083

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !5059, metadata !DIExpression()), !dbg !5061
  %27 = icmp eq i32 %33, %24, !dbg !5080
  br i1 %27, label %35, label %28, !dbg !5083, !llvm.loop !5084

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5059, metadata !DIExpression()), !dbg !5061
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5086
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #21, !dbg !5088
  call void @llvm.dbg.value(metadata i32 %31, metadata !5060, metadata !DIExpression()), !dbg !5061
  %32 = icmp eq i32 %31, 0, !dbg !5089
  %33 = add nuw i32 %29, 1, !dbg !5091
  call void @llvm.dbg.value(metadata i32 %33, metadata !5059, metadata !DIExpression()), !dbg !5061
  br i1 %32, label %26, label %34, !dbg !5092

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5093
  unreachable, !dbg !5093

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !5095
  br label %37, !dbg !5095

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !5095
  call void @llvm.dbg.value(metadata i32 %38, metadata !5058, metadata !DIExpression()), !dbg !5061
  %39 = icmp eq i32 %24, %38, !dbg !5097
  br i1 %39, label %40, label %44, !dbg !5098

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #21, !dbg !5099
  call void @llvm.dbg.value(metadata i32 %41, metadata !5060, metadata !DIExpression()), !dbg !5061
  %42 = icmp eq i32 %41, 0, !dbg !5101
  br i1 %42, label %44, label %43, !dbg !5103

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5104
  unreachable, !dbg !5104

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !5061
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5106
  ret i32 %45, !dbg !5106
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5111, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5112, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i8* %2, metadata !5113, metadata !DIExpression()), !dbg !5119
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5120
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !5122
  br i1 %6, label %7, label %39, !dbg !5122

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5123
  call void @llvm.dbg.value(metadata i32 %8, metadata !5116, metadata !DIExpression()), !dbg !5119
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5124
  %10 = load volatile i32, i32* %9, align 4, !dbg !5124
  %11 = icmp eq i32 %10, 1, !dbg !5126
  br i1 %11, label %12, label %37, !dbg !5127

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !5128
  call void @llvm.dbg.value(metadata i32 %13, metadata !5114, metadata !DIExpression()), !dbg !5119
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !5129
  call void @llvm.dbg.value(metadata i32 %14, metadata !5115, metadata !DIExpression()), !dbg !5119
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5130
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !5131
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5132
  store i8* %2, i8** %16, align 4, !dbg !5133
  %17 = shl i32 %0, 1, !dbg !5134
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !5135
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #21, !dbg !5136
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !5137
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #21, !dbg !5138
  call void @llvm.dbg.value(metadata i32 %20, metadata !5117, metadata !DIExpression()), !dbg !5119
  %21 = icmp eq i32 %20, 0, !dbg !5139
  br i1 %21, label %23, label %22, !dbg !5141

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !5142
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5144
  unreachable, !dbg !5144

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !5145
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !5146
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #21, !dbg !5147
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !5148
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #21, !dbg !5149
  call void @llvm.dbg.value(metadata i32 %27, metadata !5117, metadata !DIExpression()), !dbg !5119
  %28 = icmp eq i32 %27, 0, !dbg !5150
  br i1 %28, label %30, label %29, !dbg !5152

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !5153
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5155
  unreachable, !dbg !5155

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5156
  %32 = load i32, i32* %31, align 4, !dbg !5156
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #21, !dbg !5157
  call void @llvm.dbg.value(metadata i32 %33, metadata !5118, metadata !DIExpression()), !dbg !5119
  %34 = icmp eq i32 %33, 0, !dbg !5158
  br i1 %34, label %36, label %35, !dbg !5160

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !5161
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5163
  unreachable, !dbg !5163

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #22, !dbg !5164
  store volatile i32 2, i32* %9, align 4, !dbg !5165
  br label %37, !dbg !5166

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !5119
  br label %39, !dbg !5167

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !5119
  ret i32 %40, !dbg !5167
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !5168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5173, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata i8* %1, metadata !5174, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata i8* %1, metadata !5175, metadata !DIExpression()), !dbg !5176
  %3 = load i8, i8* %1, align 4, !dbg !5177, !range !2596
  %4 = icmp eq i8 %3, 0, !dbg !5177
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !5179
  %6 = bitcast i8* %5 to i32*, !dbg !5179
  %7 = load i32, i32* %6, align 4, !dbg !5179
  br i1 %4, label %9, label %8, !dbg !5180

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5175, metadata !DIExpression()), !dbg !5176
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #22, !dbg !5181
  br label %10, !dbg !5183

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #22, !dbg !5184
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !5186
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !5187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5189, metadata !DIExpression()), !dbg !5194
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5195
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5195
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5190, metadata !DIExpression()), !dbg !5194
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !5196
  call void @llvm.dbg.value(metadata i32 %4, metadata !5191, metadata !DIExpression()), !dbg !5194
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !5197
  call void @llvm.dbg.value(metadata i32 %5, metadata !5192, metadata !DIExpression()), !dbg !5194
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !5198
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5199
  %7 = load i32, i32* %6, align 4, !dbg !5199
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #21, !dbg !5200
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #21, !dbg !5201
  call void @llvm.dbg.value(metadata i32 %9, metadata !5193, metadata !DIExpression()), !dbg !5194
  %10 = icmp eq i32 %9, 0, !dbg !5202
  br i1 %10, label %12, label %11, !dbg !5204

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5205
  unreachable, !dbg !5205

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #21, !dbg !5207
  call void @llvm.dbg.value(metadata i32 %13, metadata !5193, metadata !DIExpression()), !dbg !5194
  %14 = icmp eq i32 %13, 0, !dbg !5208
  br i1 %14, label %16, label %15, !dbg !5210

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5211
  unreachable, !dbg !5211

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #21, !dbg !5213
  call void @llvm.dbg.value(metadata i32 %17, metadata !5193, metadata !DIExpression()), !dbg !5194
  %18 = icmp eq i32 %17, 0, !dbg !5214
  br i1 %18, label %20, label %19, !dbg !5216

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5217
  unreachable, !dbg !5217

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #21, !dbg !5219
  call void @llvm.dbg.value(metadata i32 %21, metadata !5193, metadata !DIExpression()), !dbg !5194
  %22 = icmp eq i32 %21, 0, !dbg !5220
  br i1 %22, label %24, label %23, !dbg !5222

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5223
  unreachable, !dbg !5223

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !5225
  ret void, !dbg !5226
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !5227 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5229, metadata !DIExpression()), !dbg !5233
  %3 = bitcast i32* %2 to i8*, !dbg !5234
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5234
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5235
  br i1 %4, label %5, label %16, !dbg !5237

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5238
  %7 = load volatile i32, i32* %6, align 4, !dbg !5238
  %8 = icmp eq i32 %7, 2, !dbg !5240
  br i1 %8, label %9, label %16, !dbg !5241

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !5242
  call void @llvm.dbg.value(metadata i32 %10, metadata !5230, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata i32* %2, metadata !5231, metadata !DIExpression(DW_OP_deref)), !dbg !5233
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #21, !dbg !5243
  call void @llvm.dbg.value(metadata i32 %11, metadata !5232, metadata !DIExpression()), !dbg !5233
  %12 = icmp eq i32 %11, 0, !dbg !5244
  br i1 %12, label %14, label %13, !dbg !5246

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5247
  unreachable, !dbg !5247

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5249
  call void @llvm.dbg.value(metadata i32 %15, metadata !5231, metadata !DIExpression()), !dbg !5233
  br label %16, !dbg !5250

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5233
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5251
  ret i32 %17, !dbg !5251
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !5252 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5254, metadata !DIExpression()), !dbg !5258
  %3 = bitcast i32* %2 to i8*, !dbg !5259
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5259
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5260
  br i1 %4, label %5, label %16, !dbg !5262

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5263
  %7 = load volatile i32, i32* %6, align 4, !dbg !5263
  %8 = icmp eq i32 %7, 2, !dbg !5265
  br i1 %8, label %9, label %16, !dbg !5266

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !5267
  call void @llvm.dbg.value(metadata i32 %10, metadata !5255, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata i32* %2, metadata !5256, metadata !DIExpression(DW_OP_deref)), !dbg !5258
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #21, !dbg !5268
  call void @llvm.dbg.value(metadata i32 %11, metadata !5257, metadata !DIExpression()), !dbg !5258
  %12 = icmp eq i32 %11, 0, !dbg !5269
  br i1 %12, label %14, label %13, !dbg !5271

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5272
  unreachable, !dbg !5272

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5274
  call void @llvm.dbg.value(metadata i32 %15, metadata !5256, metadata !DIExpression()), !dbg !5258
  br label %16, !dbg !5275

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5258
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5276
  ret i32 %17, !dbg !5276
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5279, metadata !DIExpression()), !dbg !5281
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5282
  br i1 %2, label %3, label %10, !dbg !5284

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5285
  %5 = load volatile i32, i32* %4, align 4, !dbg !5285
  %6 = icmp eq i32 %5, 0, !dbg !5287
  br i1 %6, label %10, label %7, !dbg !5288

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5289
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5289
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5280, metadata !DIExpression()), !dbg !5281
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !5290
  br label %10, !dbg !5291

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5281
  ret i32 %11, !dbg !5292
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !5293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5297, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.value(metadata i8 %1, metadata !5298, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.value(metadata i8 %2, metadata !5299, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.value(metadata i8 %3, metadata !5300, metadata !DIExpression()), !dbg !5302
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5303
  br i1 %5, label %6, label %13, !dbg !5305

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5306
  %8 = load volatile i32, i32* %7, align 4, !dbg !5306
  %9 = icmp eq i32 %8, 0, !dbg !5308
  br i1 %9, label %13, label %10, !dbg !5309

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5310
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !5310
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !5301, metadata !DIExpression()), !dbg !5302
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #21, !dbg !5311
  br label %13, !dbg !5312

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !5302
  ret i32 %14, !dbg !5313
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5316, metadata !DIExpression()), !dbg !5318
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5319
  br i1 %2, label %3, label %10, !dbg !5321

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5322
  %5 = load volatile i32, i32* %4, align 4, !dbg !5322
  %6 = icmp eq i32 %5, 0, !dbg !5324
  br i1 %6, label %10, label %7, !dbg !5325

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5326
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5326
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5317, metadata !DIExpression()), !dbg !5318
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !5327
  br label %10, !dbg !5328

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5318
  ret i32 %11, !dbg !5329
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5330 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5336, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !5337, metadata !DIExpression()), !dbg !5348
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !5349
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !5349
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !5339, metadata !DIExpression()), !dbg !5350
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #22, !dbg !5351
  br i1 %5, label %6, label %101, !dbg !5353

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !5354
  %8 = load i8*, i8** %7, align 4, !dbg !5354
  %9 = icmp eq i8* %8, null, !dbg !5356
  br i1 %9, label %101, label %10, !dbg !5357

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !5358
  %12 = load i8*, i8** %11, align 4, !dbg !5358
  %13 = icmp eq i8* %12, null, !dbg !5359
  br i1 %13, label %101, label %14, !dbg !5360

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !5361
  %16 = load i32, i32* %15, align 4, !dbg !5361
  %17 = icmp ugt i32 %16, 131071, !dbg !5363
  br i1 %17, label %101, label %18, !dbg !5364

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !5365
  %20 = load i32, i32* %19, align 4, !dbg !5365
  %21 = icmp ugt i32 %20, 131071, !dbg !5366
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !5367
  br i1 %23, label %101, label %24, !dbg !5367

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !5368
  %26 = load i32, i32* %25, align 4, !dbg !5368
  %27 = icmp ugt i32 %26, 131071, !dbg !5370
  br i1 %27, label %101, label %28, !dbg !5371

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !5372
  %30 = load i32, i32* %29, align 4, !dbg !5372
  %31 = icmp ugt i32 %30, 131071, !dbg !5373
  br i1 %31, label %101, label %32, !dbg !5374

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !5375
  %34 = load i32, i32* %33, align 4, !dbg !5375
  %35 = icmp ugt i32 %34, 131071, !dbg !5376
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !5377
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !5377
  br i1 %39, label %101, label %40, !dbg !5377

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5378
  %42 = load volatile i32, i32* %41, align 4, !dbg !5378
  %43 = icmp eq i32 %42, 1, !dbg !5380
  br i1 %43, label %44, label %101, !dbg !5381

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !5382
  call void @llvm.dbg.value(metadata i32 %45, metadata !5345, metadata !DIExpression()), !dbg !5348
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !5383
  call void @llvm.dbg.value(metadata i32 %46, metadata !5346, metadata !DIExpression()), !dbg !5348
  %47 = tail call i32 @vdma_init(i32 noundef %45) #21, !dbg !5384
  call void @llvm.dbg.value(metadata i32 %47, metadata !5347, metadata !DIExpression()), !dbg !5348
  %48 = icmp eq i32 %47, 0, !dbg !5385
  br i1 %48, label %50, label %49, !dbg !5387

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5388
  unreachable, !dbg !5388

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !5390
  %52 = ptrtoint i8* %51 to i32, !dbg !5391
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !5392
  store i32 %52, i32* %53, align 4, !dbg !5393
  %54 = load i32, i32* %15, align 4, !dbg !5394
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !5395
  store i32 %54, i32* %55, align 4, !dbg !5396
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !5397
  call void @llvm.dbg.value(metadata i32 %56, metadata !5347, metadata !DIExpression()), !dbg !5348
  %57 = icmp eq i32 %56, 0, !dbg !5398
  br i1 %57, label %59, label %58, !dbg !5400

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5401
  unreachable, !dbg !5401

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !5403
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #21, !dbg !5404
  call void @llvm.dbg.value(metadata i32 %61, metadata !5347, metadata !DIExpression()), !dbg !5348
  %62 = icmp eq i32 %61, 0, !dbg !5405
  br i1 %62, label %64, label %63, !dbg !5407

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5408
  unreachable, !dbg !5408

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #21, !dbg !5410
  call void @llvm.dbg.value(metadata i32 %65, metadata !5347, metadata !DIExpression()), !dbg !5348
  %66 = icmp eq i32 %65, 0, !dbg !5411
  br i1 %66, label %68, label %67, !dbg !5413

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5414
  unreachable, !dbg !5414

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5416
  %70 = ptrtoint i8* %69 to i32, !dbg !5417
  store i32 %70, i32* %53, align 4, !dbg !5418
  %71 = load i32, i32* %25, align 4, !dbg !5419
  store i32 %71, i32* %55, align 4, !dbg !5420
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !5421
  call void @llvm.dbg.value(metadata i32 %72, metadata !5347, metadata !DIExpression()), !dbg !5348
  %73 = icmp eq i32 %72, 0, !dbg !5422
  br i1 %73, label %75, label %74, !dbg !5424

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5425
  unreachable, !dbg !5425

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5427
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #21, !dbg !5428
  call void @llvm.dbg.value(metadata i32 %77, metadata !5347, metadata !DIExpression()), !dbg !5348
  %78 = icmp eq i32 %77, 0, !dbg !5429
  br i1 %78, label %80, label %79, !dbg !5431

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5432
  unreachable, !dbg !5432

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5434
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #21, !dbg !5435
  call void @llvm.dbg.value(metadata i32 %82, metadata !5347, metadata !DIExpression()), !dbg !5348
  %83 = icmp eq i32 %82, 0, !dbg !5436
  br i1 %83, label %85, label %84, !dbg !5438

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #24, !dbg !5439
  unreachable, !dbg !5439

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #21, !dbg !5441
  call void @llvm.dbg.value(metadata i32 %86, metadata !5338, metadata !DIExpression()), !dbg !5348
  %87 = load i8*, i8** %7, align 4, !dbg !5442
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5443
  store i8* %87, i8** %88, align 4, !dbg !5444
  %89 = load i32, i32* %15, align 4, !dbg !5445
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5446
  store i32 %89, i32* %90, align 4, !dbg !5447
  %91 = load i32, i32* %19, align 4, !dbg !5448
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5449
  store i32 %91, i32* %92, align 4, !dbg !5450
  %93 = load i32, i32* %33, align 4, !dbg !5451
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5452
  store i32 %93, i32* %94, align 4, !dbg !5453
  %95 = load i8*, i8** %11, align 4, !dbg !5454
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5455
  store i8* %95, i8** %96, align 4, !dbg !5456
  %97 = load i32, i32* %25, align 4, !dbg !5457
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5458
  store i32 %97, i32* %98, align 4, !dbg !5459
  %99 = load i32, i32* %29, align 4, !dbg !5460
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5461
  store i32 %99, i32* %100, align 4, !dbg !5462
  call void @restore_interrupt_mask(i32 noundef %86) #21, !dbg !5463
  br label %101, !dbg !5464

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !5348
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !5465
  ret i32 %102, !dbg !5465
}

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.hal_cache_region_config_t* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5466 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5525, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.value(metadata i32 %1, metadata !5526, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !5535, metadata !DIExpression()), !dbg !5541
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !5542
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #23, !dbg !5542
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !5539, metadata !DIExpression()), !dbg !5543
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !5543
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !5543
  store i32 1, i32* %5, align 4, !dbg !5543
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !5543
  store i32 1, i32* %6, align 4, !dbg !5543
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !5543
  store i32 1, i32* %7, align 4, !dbg !5543
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !5543
  store i32 1, i32* %8, align 4, !dbg !5543
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !5543
  store i32 1, i32* %9, align 4, !dbg !5543
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5544
  store volatile i32 0, i32* %10, align 4, !dbg !5545
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5546
  store volatile i32 0, i32* %11, align 4, !dbg !5547
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5548
  store volatile i32 0, i32* %12, align 4, !dbg !5549
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !5550
  br i1 %13, label %14, label %17, !dbg !5552

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #21, !dbg !5553
  %16 = mul i32 %15, 1000, !dbg !5555
  call void @llvm.dbg.value(metadata i32 %16, metadata !5527, metadata !DIExpression()), !dbg !5540
  br label %17, !dbg !5556

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !5557
  call void @llvm.dbg.value(metadata i32 %18, metadata !5527, metadata !DIExpression()), !dbg !5540
  %19 = shl i32 %1, 8, !dbg !5558
  %20 = udiv i32 %18, %19, !dbg !5559
  call void @llvm.dbg.value(metadata i32 %20, metadata !5528, metadata !DIExpression()), !dbg !5540
  %21 = mul i32 %18, 10, !dbg !5560
  %22 = udiv i32 %21, %19, !dbg !5561
  %23 = urem i32 %22, 10, !dbg !5562
  call void @llvm.dbg.value(metadata i32 %23, metadata !5529, metadata !DIExpression()), !dbg !5540
  %24 = icmp ne i32 %23, 0, !dbg !5563
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !5565
  %27 = zext i1 %26 to i32, !dbg !5565
  %28 = add i32 %20, %27, !dbg !5565
  call void @llvm.dbg.value(metadata i32 %28, metadata !5528, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.value(metadata i32 %28, metadata !5531, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.value(metadata i32 undef, metadata !5532, metadata !DIExpression()), !dbg !5540
  br label %29, !dbg !5566

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !5540
  %31 = mul i32 %30, %1, !dbg !5540
  %32 = udiv i32 %18, %31, !dbg !5540
  call void @llvm.dbg.value(metadata i32 %32, metadata !5532, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.value(metadata i32 %30, metadata !5531, metadata !DIExpression()), !dbg !5540
  %33 = icmp ugt i32 %32, 256, !dbg !5567
  %34 = add i32 %30, 1, !dbg !5568
  call void @llvm.dbg.value(metadata i32 %34, metadata !5531, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.value(metadata i32 undef, metadata !5532, metadata !DIExpression()), !dbg !5540
  br i1 %33, label %29, label %35, !dbg !5566, !llvm.loop !5570

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !5572
  %37 = urem i32 %36, 10, !dbg !5573
  call void @llvm.dbg.value(metadata i32 %37, metadata !5530, metadata !DIExpression()), !dbg !5540
  %38 = add nsw i32 %32, -1, !dbg !5574
  call void @llvm.dbg.value(metadata i32 %38, metadata !5532, metadata !DIExpression()), !dbg !5540
  %39 = add nsw i32 %32, -2, !dbg !5575
  %40 = lshr i32 %39, 1, !dbg !5576
  call void @llvm.dbg.value(metadata i32 %40, metadata !5533, metadata !DIExpression()), !dbg !5540
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5577
  store volatile i32 3, i32* %41, align 4, !dbg !5578
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5579
  %43 = load volatile i32, i32* %42, align 4, !dbg !5579
  call void @llvm.dbg.value(metadata i32 %43, metadata !5534, metadata !DIExpression()), !dbg !5540
  %44 = or i32 %43, 128, !dbg !5580
  store volatile i32 %44, i32* %42, align 4, !dbg !5581
  %45 = and i32 %30, 255, !dbg !5582
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5583
  store volatile i32 %45, i32* %46, align 4, !dbg !5584
  %47 = lshr i32 %30, 8, !dbg !5585
  %48 = and i32 %47, 255, !dbg !5586
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5587
  store volatile i32 %48, i32* %49, align 4, !dbg !5588
  store volatile i32 %43, i32* %42, align 4, !dbg !5589
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5590
  store volatile i32 %38, i32* %50, align 4, !dbg !5591
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5592
  store volatile i32 %40, i32* %51, align 4, !dbg !5593
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !5594
  %53 = load i32, i32* %52, align 4, !dbg !5594
  store volatile i32 %53, i32* %11, align 4, !dbg !5595
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !5596
  %55 = load i32, i32* %54, align 4, !dbg !5596
  store volatile i32 %55, i32* %12, align 4, !dbg !5597
  %56 = icmp ugt i32 %1, 2999999, !dbg !5598
  br i1 %56, label %57, label %59, !dbg !5600

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5601
  store volatile i32 18, i32* %58, align 4, !dbg !5603
  br label %59, !dbg !5604

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #23, !dbg !5605
  ret void, !dbg !5605
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !5606 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5610, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i32 %1, metadata !5611, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i32 %2, metadata !5612, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.value(metadata i32 %3, metadata !5613, metadata !DIExpression()), !dbg !5615
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5616
  %6 = load volatile i32, i32* %5, align 4, !dbg !5616
  call void @llvm.dbg.value(metadata i32 %6, metadata !5614, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5615
  store volatile i32 128, i32* %5, align 4, !dbg !5617
  %7 = trunc i32 %6 to i16, !dbg !5618
  %8 = and i16 %7, -4, !dbg !5618
  call void @llvm.dbg.value(metadata i16 %7, metadata !5614, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !5615
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5619

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !5620
  call void @llvm.dbg.value(metadata i16 %10, metadata !5614, metadata !DIExpression()), !dbg !5615
  br label %15, !dbg !5622

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !5623
  call void @llvm.dbg.value(metadata i16 %12, metadata !5614, metadata !DIExpression()), !dbg !5615
  br label %15, !dbg !5624

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !5625
  call void @llvm.dbg.value(metadata i16 %14, metadata !5614, metadata !DIExpression()), !dbg !5615
  br label %15, !dbg !5626

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !5615
  call void @llvm.dbg.value(metadata i16 %16, metadata !5614, metadata !DIExpression()), !dbg !5615
  %17 = and i16 %16, -61, !dbg !5627
  call void @llvm.dbg.value(metadata i16 %16, metadata !5614, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !5615
  %18 = icmp eq i32 %2, 1, !dbg !5628
  %19 = select i1 %18, i16 4, i16 0, !dbg !5628
  %20 = or i16 %17, %19, !dbg !5628
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !5614, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5615
  call void @llvm.dbg.value(metadata i16 %20, metadata !5614, metadata !DIExpression()), !dbg !5615
  %21 = icmp eq i32 %3, 2, !dbg !5629
  %22 = or i16 %20, 16, !dbg !5629
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !5629
  call void @llvm.dbg.value(metadata i16 %23, metadata !5614, metadata !DIExpression()), !dbg !5615
  %24 = zext i16 %23 to i32, !dbg !5630
  store volatile i32 %24, i32* %5, align 4, !dbg !5631
  ret void, !dbg !5632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !5633 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5637, metadata !DIExpression()), !dbg !5640
  call void @llvm.dbg.value(metadata i8 %1, metadata !5638, metadata !DIExpression()), !dbg !5640
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !5641

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !5642
  call void @llvm.dbg.value(metadata i32 %5, metadata !5639, metadata !DIExpression()), !dbg !5640
  %6 = and i32 %5, 32, !dbg !5644
  %7 = icmp eq i32 %6, 0, !dbg !5644
  br i1 %7, label %4, label %8, !dbg !5646, !llvm.loop !5647

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !5649
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5651
  store volatile i32 %9, i32* %10, align 4, !dbg !5652
  ret void, !dbg !5653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5654 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5658, metadata !DIExpression()), !dbg !5661
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5662

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5663
  call void @llvm.dbg.value(metadata i32 %4, metadata !5659, metadata !DIExpression()), !dbg !5661
  %5 = and i32 %4, 1, !dbg !5665
  %6 = icmp eq i32 %5, 0, !dbg !5665
  br i1 %6, label %3, label %7, !dbg !5667, !llvm.loop !5668

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5670
  %9 = load volatile i32, i32* %8, align 4, !dbg !5670
  %10 = trunc i32 %9 to i8, !dbg !5672
  call void @llvm.dbg.value(metadata i8 %10, metadata !5660, metadata !DIExpression()), !dbg !5661
  ret i8 %10, !dbg !5673
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5674 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5678, metadata !DIExpression()), !dbg !5681
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5682
  %3 = load volatile i32, i32* %2, align 4, !dbg !5682
  call void @llvm.dbg.value(metadata i32 %3, metadata !5679, metadata !DIExpression()), !dbg !5681
  %4 = and i32 %3, 1, !dbg !5683
  %5 = icmp eq i32 %4, 0, !dbg !5683
  br i1 %5, label %9, label %6, !dbg !5685

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5686
  %8 = load volatile i32, i32* %7, align 4, !dbg !5686
  call void @llvm.dbg.value(metadata i32 %8, metadata !5680, metadata !DIExpression()), !dbg !5681
  br label %9, !dbg !5688

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !5689
  call void @llvm.dbg.value(metadata i32 %10, metadata !5680, metadata !DIExpression()), !dbg !5681
  ret i32 %10, !dbg !5690
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5691 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5695, metadata !DIExpression()), !dbg !5698
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5699
  %3 = load volatile i32, i32* %2, align 4, !dbg !5699
  call void @llvm.dbg.value(metadata i32 %3, metadata !5697, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5698
  store volatile i32 191, i32* %2, align 4, !dbg !5700
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5701
  %5 = load volatile i32, i32* %4, align 4, !dbg !5701
  call void @llvm.dbg.value(metadata i32 %5, metadata !5696, metadata !DIExpression()), !dbg !5698
  %6 = and i32 %5, 65343, !dbg !5702
  %7 = or i32 %6, 192, !dbg !5702
  call void @llvm.dbg.value(metadata i32 %5, metadata !5696, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !5698
  store volatile i32 %7, i32* %4, align 4, !dbg !5703
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5704
  store volatile i32 0, i32* %8, align 4, !dbg !5705
  store volatile i32 0, i32* %2, align 4, !dbg !5706
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5707
  store volatile i32 2, i32* %9, align 4, !dbg !5708
  %10 = and i32 %3, 65535, !dbg !5709
  store volatile i32 %10, i32* %2, align 4, !dbg !5710
  ret void, !dbg !5711
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !5712 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5716, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8 %1, metadata !5717, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8 %2, metadata !5718, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i8 %3, metadata !5719, metadata !DIExpression()), !dbg !5722
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5723
  %6 = load volatile i32, i32* %5, align 4, !dbg !5723
  call void @llvm.dbg.value(metadata i32 %6, metadata !5721, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5722
  store volatile i32 191, i32* %5, align 4, !dbg !5724
  %7 = zext i8 %1 to i32, !dbg !5725
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5726
  store volatile i32 %7, i32* %8, align 4, !dbg !5727
  %9 = zext i8 %2 to i32, !dbg !5728
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5729
  store volatile i32 %9, i32* %10, align 4, !dbg !5730
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5731
  %12 = load volatile i32, i32* %11, align 4, !dbg !5731
  call void @llvm.dbg.value(metadata i32 %12, metadata !5720, metadata !DIExpression()), !dbg !5722
  %13 = and i32 %12, 65509, !dbg !5732
  %14 = or i32 %13, 26, !dbg !5732
  call void @llvm.dbg.value(metadata i32 %12, metadata !5720, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !5722
  store volatile i32 %14, i32* %11, align 4, !dbg !5733
  %15 = zext i8 %3 to i32, !dbg !5734
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5735
  store volatile i32 %15, i32* %16, align 4, !dbg !5736
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5737
  store volatile i32 1, i32* %17, align 4, !dbg !5738
  %18 = and i32 %6, 65535, !dbg !5739
  store volatile i32 %18, i32* %5, align 4, !dbg !5740
  ret void, !dbg !5741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5742 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5744, metadata !DIExpression()), !dbg !5746
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5747
  %3 = load volatile i32, i32* %2, align 4, !dbg !5747
  call void @llvm.dbg.value(metadata i32 %3, metadata !5745, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5746
  store volatile i32 191, i32* %2, align 4, !dbg !5748
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5749
  store volatile i32 0, i32* %4, align 4, !dbg !5750
  store volatile i32 0, i32* %2, align 4, !dbg !5751
  %5 = and i32 %3, 65535, !dbg !5752
  store volatile i32 %5, i32* %2, align 4, !dbg !5753
  ret void, !dbg !5754
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5755 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5757, metadata !DIExpression()), !dbg !5760
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5761
  %3 = load volatile i32, i32* %2, align 4, !dbg !5761
  call void @llvm.dbg.value(metadata i32 %3, metadata !5759, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5760
  store volatile i32 191, i32* %2, align 4, !dbg !5762
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5763
  %5 = load volatile i32, i32* %4, align 4, !dbg !5763
  call void @llvm.dbg.value(metadata i32 %5, metadata !5758, metadata !DIExpression()), !dbg !5760
  %6 = and i32 %5, 65519, !dbg !5764
  %7 = or i32 %6, 16, !dbg !5764
  call void @llvm.dbg.value(metadata i32 %5, metadata !5758, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !5760
  store volatile i32 %7, i32* %4, align 4, !dbg !5765
  store volatile i32 0, i32* %2, align 4, !dbg !5766
  store volatile i32 135, i32* %4, align 4, !dbg !5767
  %8 = and i32 %3, 65535, !dbg !5768
  store volatile i32 %8, i32* %2, align 4, !dbg !5769
  ret void, !dbg !5770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5771 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5773, metadata !DIExpression()), !dbg !5776
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5777
  %3 = load volatile i32, i32* %2, align 4, !dbg !5777
  call void @llvm.dbg.value(metadata i32 %3, metadata !5775, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5776
  %4 = load volatile i32, i32* %2, align 4, !dbg !5778
  %5 = and i32 %4, -129, !dbg !5778
  store volatile i32 %5, i32* %2, align 4, !dbg !5778
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5779
  %7 = load volatile i32, i32* %6, align 4, !dbg !5779
  call void @llvm.dbg.value(metadata i32 %7, metadata !5774, metadata !DIExpression()), !dbg !5776
  %8 = and i32 %7, 65530, !dbg !5780
  %9 = or i32 %8, 5, !dbg !5780
  call void @llvm.dbg.value(metadata i32 %7, metadata !5774, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !5776
  store volatile i32 %9, i32* %6, align 4, !dbg !5781
  %10 = and i32 %3, 65535, !dbg !5782
  %11 = load volatile i32, i32* %2, align 4, !dbg !5783
  %12 = and i32 %10, %11, !dbg !5783
  store volatile i32 %12, i32* %2, align 4, !dbg !5783
  ret void, !dbg !5784
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5785 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5789, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i32 %1, metadata !5790, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i16 145, metadata !5791, metadata !DIExpression()), !dbg !5792
  %3 = icmp eq i32 %1, 0, !dbg !5793
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !5791, metadata !DIExpression()), !dbg !5792
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5795
  store volatile i32 %4, i32* %5, align 4, !dbg !5796
  ret void, !dbg !5797
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5798 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5803, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata i32 0, metadata !5806, metadata !DIExpression()), !dbg !5807
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5808
  %3 = load volatile i32, i32* %2, align 4, !dbg !5808
  call void @llvm.dbg.value(metadata i32 %3, metadata !5804, metadata !DIExpression()), !dbg !5807
  %4 = and i32 %3, 1, !dbg !5809
  %5 = icmp eq i32 %4, 0, !dbg !5809
  br i1 %5, label %6, label %16, !dbg !5811

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !5812
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !5813

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !5806, metadata !DIExpression()), !dbg !5807
  br label %16, !dbg !5814

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5816
  %11 = load volatile i32, i32* %10, align 4, !dbg !5816
  call void @llvm.dbg.value(metadata i32 %11, metadata !5805, metadata !DIExpression()), !dbg !5807
  %12 = and i32 %11, 16, !dbg !5817
  %13 = icmp eq i32 %12, 0, !dbg !5817
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !5806, metadata !DIExpression()), !dbg !5807
  br label %16, !dbg !5819

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !5807
  ret i32 %17, !dbg !5820
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5821 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5825, metadata !DIExpression()), !dbg !5828
  call void @llvm.dbg.value(metadata i32 0, metadata !5827, metadata !DIExpression()), !dbg !5828
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5829
  %3 = load volatile i32, i32* %2, align 4, !dbg !5829
  call void @llvm.dbg.value(metadata i32 %3, metadata !5826, metadata !DIExpression()), !dbg !5828
  %4 = and i32 %3, 14, !dbg !5830
  %5 = icmp eq i32 %4, 0, !dbg !5830
  %6 = sext i1 %5 to i32, !dbg !5832
  call void @llvm.dbg.value(metadata i32 %6, metadata !5827, metadata !DIExpression()), !dbg !5828
  ret i32 %6, !dbg !5833
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5834 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5836, metadata !DIExpression()), !dbg !5838
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5839
  %3 = load volatile i32, i32* %2, align 4, !dbg !5839
  call void @llvm.dbg.value(metadata i32 %3, metadata !5837, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5838
  call void @llvm.dbg.value(metadata i32 %3, metadata !5837, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5838
  ret void, !dbg !5840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5841 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5843, metadata !DIExpression()), !dbg !5844
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5845
  store volatile i32 191, i32* %2, align 4, !dbg !5846
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5847
  store volatile i32 16, i32* %3, align 4, !dbg !5848
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5849
  store volatile i32 0, i32* %4, align 4, !dbg !5850
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5851
  store volatile i32 0, i32* %5, align 4, !dbg !5852
  store volatile i32 128, i32* %2, align 4, !dbg !5853
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5854
  store volatile i32 0, i32* %6, align 4, !dbg !5855
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5856
  store volatile i32 0, i32* %7, align 4, !dbg !5857
  store volatile i32 0, i32* %2, align 4, !dbg !5858
  store volatile i32 0, i32* %7, align 4, !dbg !5859
  store volatile i32 0, i32* %3, align 4, !dbg !5860
  store volatile i32 191, i32* %2, align 4, !dbg !5861
  store volatile i32 0, i32* %3, align 4, !dbg !5862
  store volatile i32 0, i32* %2, align 4, !dbg !5863
  store volatile i32 0, i32* %4, align 4, !dbg !5864
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !5865
  store volatile i32 0, i32* %8, align 4, !dbg !5866
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !5867
  store volatile i32 0, i32* %9, align 4, !dbg !5868
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5869
  store volatile i32 0, i32* %10, align 4, !dbg !5870
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5871
  store volatile i32 0, i32* %11, align 4, !dbg !5872
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5873
  store volatile i32 0, i32* %12, align 4, !dbg !5874
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5875
  store volatile i32 0, i32* %13, align 4, !dbg !5876
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !5877
  store volatile i32 0, i32* %14, align 4, !dbg !5878
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5879
  store volatile i32 0, i32* %15, align 4, !dbg !5880
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5881
  store volatile i32 0, i32* %16, align 4, !dbg !5882
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5883
  store volatile i32 0, i32* %17, align 4, !dbg !5884
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !5885
  store volatile i32 0, i32* %18, align 4, !dbg !5886
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5887
  store volatile i32 0, i32* %19, align 4, !dbg !5888
  store volatile i32 0, i32* %13, align 4, !dbg !5889
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5890
  store volatile i32 0, i32* %20, align 4, !dbg !5891
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5892
  store volatile i32 0, i32* %21, align 4, !dbg !5893
  ret void, !dbg !5894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5895 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5897, metadata !DIExpression()), !dbg !5898
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5899

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5900
  %5 = and i32 %4, 64, !dbg !5901
  %6 = icmp eq i32 %5, 0, !dbg !5902
  br i1 %6, label %3, label %7, !dbg !5899, !llvm.loop !5903

7:                                                ; preds = %3
  ret void, !dbg !5905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !5906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5910, metadata !DIExpression()), !dbg !5913
  call void @llvm.dbg.value(metadata i32 %1, metadata !5911, metadata !DIExpression()), !dbg !5913
  call void @llvm.dbg.value(metadata i32 15, metadata !5912, metadata !DIExpression()), !dbg !5913
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !5914

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !5915
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !5918
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !5920
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !5922
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !5913
  call void @llvm.dbg.value(metadata i32 %16, metadata !5912, metadata !DIExpression()), !dbg !5913
  ret i32 %16, !dbg !5924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !5925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5935, metadata !DIExpression()), !dbg !5937
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !5936, metadata !DIExpression()), !dbg !5937
  %3 = add i32 %0, -8, !dbg !5938
  %4 = icmp ult i32 %3, 8, !dbg !5938
  br i1 %4, label %5, label %12, !dbg !5938

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !5938
  %7 = load i8, i8* %6, align 1, !dbg !5938
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !5938
  %9 = load i32, i32* %8, align 4, !dbg !5938
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !5939
  store i8 %7, i8* %10, align 4, !dbg !5939
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !5939
  store i32 %9, i32* %11, align 4, !dbg !5939
  br label %12, !dbg !5941

12:                                               ; preds = %2, %5
  ret void, !dbg !5941
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5942 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5946, metadata !DIExpression()), !dbg !5947
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5948
  store volatile i32 3, i32* %2, align 4, !dbg !5949
  ret void, !dbg !5950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !5951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5953, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !5956, metadata !DIExpression()), !dbg !5957
  %2 = add i32 %0, -30, !dbg !5958
  %3 = icmp ult i32 %2, 3, !dbg !5958
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !5958
  call void @llvm.dbg.value(metadata i32 %5, metadata !5954, metadata !DIExpression()), !dbg !5957
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !5959
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !5959
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !5956, metadata !DIExpression()), !dbg !5957
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #21, !dbg !5960
  call void @llvm.dbg.value(metadata i32 %8, metadata !5955, metadata !DIExpression()), !dbg !5957
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !5961

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #21, !dbg !5962
  br label %13, !dbg !5964

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #21, !dbg !5965
  br label %13, !dbg !5966

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #21, !dbg !5967
  br label %13, !dbg !5968

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.81, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.82, i32 0, i32 0)) #24, !dbg !5969
  unreachable, !dbg !5969

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !5970
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !868 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !5971
  br i1 %1, label %9, label %2, !dbg !5973

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !961, metadata !DIExpression()), !dbg !5974
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !5975
  %5 = load i32, i32* %4, align 4, !dbg !5975
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #22, !dbg !5980
  %6 = add nuw nsw i32 %3, 1, !dbg !5981
  call void @llvm.dbg.value(metadata i32 %6, metadata !961, metadata !DIExpression()), !dbg !5974
  %7 = icmp eq i32 %6, 64, !dbg !5982
  br i1 %7, label %8, label %2, !dbg !5983, !llvm.loop !5984

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !5986
  br label %9, !dbg !5987

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !5988
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !5989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5993, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata i32 %1, metadata !5994, metadata !DIExpression()), !dbg !5995
  %3 = trunc i32 %1 to i8, !dbg !5996
  %4 = shl i8 %3, 2, !dbg !5996
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5999
  store volatile i8 %4, i8* %5, align 1, !dbg !6000
  ret void, !dbg !6001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6006, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.value(metadata i32 -1, metadata !6007, metadata !DIExpression()), !dbg !6008
  %2 = icmp ugt i32 %0, 63, !dbg !6009
  br i1 %2, label %4, label %3, !dbg !6009

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #22, !dbg !6011
  call void @llvm.dbg.value(metadata i32 0, metadata !6007, metadata !DIExpression()), !dbg !6008
  br label %4, !dbg !6013

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6008
  ret i32 %5, !dbg !6014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6019, metadata !DIExpression()), !dbg !6020
  %2 = and i32 %0, 31, !dbg !6021
  %3 = shl nuw i32 1, %2, !dbg !6022
  %4 = lshr i32 %0, 5, !dbg !6023
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6024
  store volatile i32 %3, i32* %5, align 4, !dbg !6025
  ret void, !dbg !6026
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6029, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.value(metadata i32 -1, metadata !6030, metadata !DIExpression()), !dbg !6031
  %2 = icmp ugt i32 %0, 63, !dbg !6032
  br i1 %2, label %4, label %3, !dbg !6032

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #22, !dbg !6034
  call void @llvm.dbg.value(metadata i32 0, metadata !6030, metadata !DIExpression()), !dbg !6031
  br label %4, !dbg !6036

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6031
  ret i32 %5, !dbg !6037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6040, metadata !DIExpression()), !dbg !6041
  %2 = and i32 %0, 31, !dbg !6042
  %3 = shl nuw i32 1, %2, !dbg !6043
  %4 = lshr i32 %0, 5, !dbg !6044
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6045
  store volatile i32 %3, i32* %5, align 4, !dbg !6046
  ret void, !dbg !6047
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !6048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6052, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i32 255, metadata !6053, metadata !DIExpression()), !dbg !6054
  %2 = icmp ugt i32 %0, 63, !dbg !6055
  br i1 %2, label %5, label %3, !dbg !6055

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #22, !dbg !6057
  call void @llvm.dbg.value(metadata i32 %4, metadata !6053, metadata !DIExpression()), !dbg !6054
  br label %5, !dbg !6059

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !6054
  ret i32 %6, !dbg !6060
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !6061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6065, metadata !DIExpression()), !dbg !6066
  %2 = lshr i32 %0, 5, !dbg !6067
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !6068
  %4 = load volatile i32, i32* %3, align 4, !dbg !6068
  %5 = and i32 %0, 31, !dbg !6069
  %6 = lshr i32 %4, %5, !dbg !6070
  %7 = and i32 %6, 1, !dbg !6070
  ret i32 %7, !dbg !6071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6074, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.value(metadata i32 -1, metadata !6075, metadata !DIExpression()), !dbg !6076
  %2 = icmp ugt i32 %0, 63, !dbg !6077
  br i1 %2, label %4, label %3, !dbg !6077

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #22, !dbg !6079
  call void @llvm.dbg.value(metadata i32 0, metadata !6075, metadata !DIExpression()), !dbg !6076
  br label %4, !dbg !6081

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6076
  ret i32 %5, !dbg !6082
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6085, metadata !DIExpression()), !dbg !6086
  %2 = and i32 %0, 31, !dbg !6087
  %3 = shl nuw i32 1, %2, !dbg !6088
  %4 = lshr i32 %0, 5, !dbg !6089
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !6090
  store volatile i32 %3, i32* %5, align 4, !dbg !6091
  ret void, !dbg !6092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6095, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 -1, metadata !6096, metadata !DIExpression()), !dbg !6097
  %2 = icmp ugt i32 %0, 63, !dbg !6098
  br i1 %2, label %4, label %3, !dbg !6098

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #22, !dbg !6100
  call void @llvm.dbg.value(metadata i32 0, metadata !6096, metadata !DIExpression()), !dbg !6097
  br label %4, !dbg !6102

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6097
  ret i32 %5, !dbg !6103
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6106, metadata !DIExpression()), !dbg !6107
  %2 = and i32 %0, 31, !dbg !6108
  %3 = shl nuw i32 1, %2, !dbg !6109
  %4 = lshr i32 %0, 5, !dbg !6110
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6111
  store volatile i32 %3, i32* %5, align 4, !dbg !6112
  ret void, !dbg !6113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6118, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata i32 %1, metadata !6119, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.value(metadata i32 -1, metadata !6120, metadata !DIExpression()), !dbg !6121
  %3 = icmp ugt i32 %0, 63, !dbg !6122
  br i1 %3, label %5, label %4, !dbg !6122

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #22, !dbg !6124
  call void @llvm.dbg.value(metadata i32 0, metadata !6120, metadata !DIExpression()), !dbg !6121
  br label %5, !dbg !6126

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !6121
  ret i32 %6, !dbg !6127
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !6128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6130, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata i32 68, metadata !6131, metadata !DIExpression()), !dbg !6132
  %2 = icmp ugt i32 %0, 63, !dbg !6133
  br i1 %2, label %5, label %3, !dbg !6133

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #22, !dbg !6135
  call void @llvm.dbg.value(metadata i32 %4, metadata !6131, metadata !DIExpression()), !dbg !6132
  br label %5, !dbg !6137

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !6132
  ret i32 %6, !dbg !6138
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !6139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6141, metadata !DIExpression()), !dbg !6142
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6143
  %3 = load volatile i8, i8* %2, align 1, !dbg !6143
  %4 = lshr i8 %3, 2, !dbg !6146
  %5 = zext i8 %4 to i32, !dbg !6146
  ret i32 %5, !dbg !6147
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !6148 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !6150, metadata !DIExpression()), !dbg !6152
  tail call void @Flash_ReturnReady() #21, !dbg !6153
  %1 = tail call fastcc i32 @get_current_irq() #22, !dbg !6154
  call void @llvm.dbg.value(metadata i32 %1, metadata !6151, metadata !DIExpression()), !dbg !6152
  %2 = icmp ugt i32 %1, 63, !dbg !6155
  br i1 %2, label %12, label %3, !dbg !6155

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !6157
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !6157
  %6 = icmp eq void (i32)* %5, null, !dbg !6159
  br i1 %6, label %7, label %8, !dbg !6160

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !6150, metadata !DIExpression()), !dbg !6152
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.87, i32 0, i32 0)) #21, !dbg !6161
  br label %12, !dbg !6163

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #22, !dbg !6164
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !6166
  store i32 %9, i32* %10, align 4, !dbg !6167
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !6168
  tail call void %11(i32 noundef %1) #21, !dbg !6169
  call void @llvm.dbg.value(metadata i32 0, metadata !6150, metadata !DIExpression()), !dbg !6152
  br label %12, !dbg !6170

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !6152
  ret i32 %13, !dbg !6171
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !6172 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6175
  %2 = and i32 %1, 511, !dbg !6176
  call void @llvm.dbg.value(metadata i32 %2, metadata !6174, metadata !DIExpression()), !dbg !6177
  %3 = add nsw i32 %2, -16, !dbg !6178
  ret i32 %3, !dbg !6179
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !6180 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6181
  %2 = lshr i32 %1, 22, !dbg !6182
  %3 = and i32 %2, 1, !dbg !6182
  ret i32 %3, !dbg !6183
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !6184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6189, metadata !DIExpression()), !dbg !6192
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !6190, metadata !DIExpression()), !dbg !6192
  %3 = icmp ugt i32 %0, 63, !dbg !6193
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !6193
  br i1 %5, label %10, label %6, !dbg !6193

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6195
  call void @llvm.dbg.value(metadata i32 %7, metadata !6191, metadata !DIExpression()), !dbg !6192
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #22, !dbg !6196
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !6197
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !6198
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !6199
  store i32 0, i32* %9, align 4, !dbg !6200
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !6201
  br label %10, !dbg !6202

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !6192
  ret i32 %11, !dbg !6203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !6204 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !6208, metadata !DIExpression()), !dbg !6209
  %2 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6210
  store i32 %2, i32* %0, align 4, !dbg !6211
  ret i32 0, !dbg !6212
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !6213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6217, metadata !DIExpression()), !dbg !6218
  tail call void @restore_interrupt_mask(i32 noundef %0) #21, !dbg !6219
  ret i32 0, !dbg !6220
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !6221 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #23, !dbg !6225, !srcloc !6231
  call void @llvm.dbg.value(metadata i32 %1, metadata !6229, metadata !DIExpression()) #23, !dbg !6232
  call void @llvm.dbg.value(metadata i32 %1, metadata !6223, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 1, metadata !6224, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 4, metadata !6234, metadata !DIExpression()) #23, !dbg !6239
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #23, !dbg !6241, !srcloc !6242
  tail call void asm sideeffect "dmb", ""() #23, !dbg !6243, !srcloc !6246
  tail call void asm sideeffect "isb", ""() #23, !dbg !6247, !srcloc !6250
  ret i32 %1, !dbg !6251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6254, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.value(metadata i32 %0, metadata !6234, metadata !DIExpression()) #23, !dbg !6256
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #23, !dbg !6258, !srcloc !6242
  tail call void asm sideeffect "dmb", ""() #23, !dbg !6259, !srcloc !6246
  tail call void asm sideeffect "isb", ""() #23, !dbg !6261, !srcloc !6250
  ret void, !dbg !6263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !6264 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !6268
  call void @llvm.dbg.value(metadata i32 %1, metadata !6267, metadata !DIExpression()), !dbg !6269
  call void @llvm.dbg.value(metadata i32 0, metadata !6266, metadata !DIExpression()), !dbg !6269
  br label %2, !dbg !6270

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6266, metadata !DIExpression()), !dbg !6269
  tail call fastcc void @NVIC_DisableIRQ.94(i32 noundef %3) #22, !dbg !6272
  %4 = add nuw nsw i32 %3, 1, !dbg !6275
  call void @llvm.dbg.value(metadata i32 %4, metadata !6266, metadata !DIExpression()), !dbg !6269
  %5 = icmp eq i32 %4, 64, !dbg !6276
  br i1 %5, label %6, label %2, !dbg !6270, !llvm.loop !6277

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #22, !dbg !6279
  ret void, !dbg !6280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.94(i32 noundef %0) unnamed_addr #2 !dbg !6281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6283, metadata !DIExpression()), !dbg !6284
  %2 = and i32 %0, 31, !dbg !6285
  %3 = shl nuw i32 1, %2, !dbg !6286
  %4 = lshr i32 %0, 5, !dbg !6287
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6288
  store volatile i32 %3, i32* %5, align 4, !dbg !6289
  ret void, !dbg !6290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !6291 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !6295
  call void @llvm.dbg.value(metadata i32 %1, metadata !6294, metadata !DIExpression()), !dbg !6296
  call void @llvm.dbg.value(metadata i32 0, metadata !6293, metadata !DIExpression()), !dbg !6296
  br label %2, !dbg !6297

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6293, metadata !DIExpression()), !dbg !6296
  tail call fastcc void @NVIC_EnableIRQ.95(i32 noundef %3) #22, !dbg !6299
  %4 = add nuw nsw i32 %3, 1, !dbg !6302
  call void @llvm.dbg.value(metadata i32 %4, metadata !6293, metadata !DIExpression()), !dbg !6296
  %5 = icmp eq i32 %4, 64, !dbg !6303
  br i1 %5, label %6, label %2, !dbg !6297, !llvm.loop !6304

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #22, !dbg !6306
  ret void, !dbg !6307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.95(i32 noundef %0) unnamed_addr #2 !dbg !6308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6310, metadata !DIExpression()), !dbg !6311
  %2 = and i32 %0, 31, !dbg !6312
  %3 = shl nuw i32 1, %2, !dbg !6313
  %4 = lshr i32 %0, 5, !dbg !6314
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6315
  store volatile i32 %3, i32* %5, align 4, !dbg !6316
  ret void, !dbg !6317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !6318 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6320, metadata !DIExpression()), !dbg !6321
  br label %1, !dbg !6322

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6320, metadata !DIExpression()), !dbg !6321
  tail call fastcc void @NVIC_ClearPendingIRQ.96(i32 noundef %2) #22, !dbg !6324
  %3 = add nuw nsw i32 %2, 1, !dbg !6327
  call void @llvm.dbg.value(metadata i32 %3, metadata !6320, metadata !DIExpression()), !dbg !6321
  %4 = icmp eq i32 %3, 64, !dbg !6328
  br i1 %4, label %5, label %1, !dbg !6322, !llvm.loop !6329

5:                                                ; preds = %1
  ret void, !dbg !6331
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.96(i32 noundef %0) unnamed_addr #2 !dbg !6332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6334, metadata !DIExpression()), !dbg !6335
  %2 = and i32 %0, 31, !dbg !6336
  %3 = shl nuw i32 1, %2, !dbg !6337
  %4 = lshr i32 %0, 5, !dbg !6338
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6339
  store volatile i32 %3, i32* %5, align 4, !dbg !6340
  ret void, !dbg !6341
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !6342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6344, metadata !DIExpression()), !dbg !6345
  %2 = icmp ugt i32 %0, 63, !dbg !6346
  br i1 %2, label %4, label %3, !dbg !6346

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #22, !dbg !6348
  br label %4, !dbg !6349

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !6345
  ret i32 %5, !dbg !6350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !6351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6353, metadata !DIExpression()), !dbg !6354
  %2 = and i32 %0, 511, !dbg !6355
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !6356
  tail call void asm sideeffect "dsb", ""() #23, !dbg !6357, !srcloc !6360
  ret void, !dbg !6361
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !6362 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6363
  %2 = and i32 %1, 511, !dbg !6364
  ret i32 %2, !dbg !6365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !6366 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6370, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i32 %1, metadata !6371, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i8* %0, metadata !6372, metadata !DIExpression()), !dbg !6469
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #21, !dbg !6470
  call void @llvm.dbg.value(metadata i32 %3, metadata !6467, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !6469
  call void @llvm.dbg.value(metadata i32 0, metadata !6466, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i32* undef, metadata !6468, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i32 0, metadata !6466, metadata !DIExpression()), !dbg !6469
  %4 = icmp ult i32 %3, 4, !dbg !6471
  br i1 %4, label %20, label %5, !dbg !6474

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !6475
  %7 = bitcast i8* %6 to i32**, !dbg !6475
  %8 = load i32*, i32** %7, align 4, !dbg !6475
  call void @llvm.dbg.value(metadata i32* %8, metadata !6468, metadata !DIExpression()), !dbg !6469
  %9 = lshr i32 %3, 2, !dbg !6476
  call void @llvm.dbg.value(metadata i32 %9, metadata !6467, metadata !DIExpression()), !dbg !6469
  br label %10, !dbg !6474

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !6468, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i32 %12, metadata !6466, metadata !DIExpression()), !dbg !6469
  %13 = load i32, i32* %11, align 4, !dbg !6477
  %14 = icmp eq i32 %13, -1, !dbg !6480
  br i1 %14, label %16, label %15, !dbg !6481

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #21, !dbg !6482
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.97, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.98, i32 0, i32 0)) #24, !dbg !6482
  unreachable, !dbg !6482

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !6487
  call void @llvm.dbg.value(metadata i32 %17, metadata !6466, metadata !DIExpression()), !dbg !6469
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !6488
  call void @llvm.dbg.value(metadata i32* %18, metadata !6468, metadata !DIExpression()), !dbg !6469
  %19 = icmp eq i32 %17, %9, !dbg !6471
  br i1 %19, label %20, label %10, !dbg !6474, !llvm.loop !6489

20:                                               ; preds = %16, %2
  ret void, !dbg !6491
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !6492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6494, metadata !DIExpression()), !dbg !6496
  call void @llvm.dbg.value(metadata i32 0, metadata !6495, metadata !DIExpression()), !dbg !6496
  call void @llvm.dbg.value(metadata i32 %0, metadata !6495, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !6496
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !6495, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6496
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !6495, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6496
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !6497
  call void @llvm.dbg.value(metadata i32 %2, metadata !6495, metadata !DIExpression()), !dbg !6496
  ret i32 %2, !dbg !6498
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6499 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6504, metadata !DIExpression()), !dbg !6506
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6507
  %3 = or i32 %2, 512, !dbg !6507
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6507
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6510
  call void @llvm.dbg.value(metadata i32 %4, metadata !6505, metadata !DIExpression()), !dbg !6506
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !6511

5:                                                ; preds = %1
  br label %7, !dbg !6512

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !6516
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.97, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.98, i32 0, i32 0)) #24, !dbg !6516
  unreachable, !dbg !6516

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !6521
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6506
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6506
  br label %10, !dbg !6522

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6523
  %12 = and i32 %11, 8192, !dbg !6524
  %13 = icmp eq i32 %12, 0, !dbg !6525
  br i1 %13, label %10, label %14, !dbg !6522, !llvm.loop !6526

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6528
  %16 = and i32 %15, 256, !dbg !6529
  %17 = icmp eq i32 %16, 0, !dbg !6530
  br i1 %17, label %14, label %18, !dbg !6531, !llvm.loop !6532

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !6521
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !6505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6506
  %20 = and i32 %19, 16, !dbg !6521
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !6505, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6506
  call void @llvm.dbg.value(metadata i32 undef, metadata !6505, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6506
  %21 = or i32 %4, %20, !dbg !6534
  %22 = or i32 %21, 8, !dbg !6534
  call void @llvm.dbg.value(metadata i32 %22, metadata !6505, metadata !DIExpression()), !dbg !6506
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6535
  ret void, !dbg !6536
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6537 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !6539, metadata !DIExpression()), !dbg !6541
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6542
  call void @llvm.dbg.value(metadata i32 %2, metadata !6540, metadata !DIExpression()), !dbg !6541
  %3 = and i32 %2, -268435477, !dbg !6543
  call void @llvm.dbg.value(metadata i32 %3, metadata !6540, metadata !DIExpression()), !dbg !6541
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6544
  br label %4, !dbg !6545

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6546
  %6 = and i32 %5, 2, !dbg !6547
  %7 = icmp eq i32 %6, 0, !dbg !6545
  br i1 %7, label %8, label %4, !dbg !6545, !llvm.loop !6548

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6550
  call void @llvm.dbg.value(metadata i32 %9, metadata !6540, metadata !DIExpression()), !dbg !6541
  %10 = and i32 %9, -9, !dbg !6551
  call void @llvm.dbg.value(metadata i32 %10, metadata !6540, metadata !DIExpression()), !dbg !6541
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6552
  br label %11, !dbg !6553

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6554
  %13 = and i32 %12, 8, !dbg !6555
  %14 = icmp eq i32 %13, 0, !dbg !6553
  br i1 %14, label %15, label %11, !dbg !6553, !llvm.loop !6556

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !6558, !range !2596
  %17 = icmp eq i8 %16, 0, !dbg !6560
  br i1 %17, label %18, label %21, !dbg !6561

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6562
  %20 = and i32 %19, -513, !dbg !6562
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6562
  br label %21, !dbg !6566

21:                                               ; preds = %18, %15
  ret void, !dbg !6567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6568 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6572, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i32 0, metadata !6573, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i32 0, metadata !6574, metadata !DIExpression()), !dbg !6575
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6576
  call void @llvm.dbg.value(metadata i32 %2, metadata !6573, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i32 %2, metadata !6573, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !6575
  %3 = icmp eq i16 %0, 1, !dbg !6577
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !6579
  %5 = or i32 %2, %4, !dbg !6579
  call void @llvm.dbg.value(metadata i32 %5, metadata !6573, metadata !DIExpression()), !dbg !6575
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6580
  br label %6, !dbg !6581

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6582
  %8 = and i32 %7, 2, !dbg !6583
  %9 = icmp eq i32 %8, 0, !dbg !6584
  br i1 %9, label %6, label %10, !dbg !6581, !llvm.loop !6585

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6587
  %12 = and i32 %11, 1, !dbg !6588
  %13 = icmp eq i32 %12, 0, !dbg !6589
  br i1 %13, label %14, label %10, !dbg !6589, !llvm.loop !6590

14:                                               ; preds = %10
  ret i32 0, !dbg !6592
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6593 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6595, metadata !DIExpression()), !dbg !6596
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #22, !dbg !6597
  tail call void @SFI_MacLeave(i16 zeroext undef) #22, !dbg !6598
  ret void, !dbg !6599
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !6600 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6604, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i32 %1, metadata !6605, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i32 %1, metadata !6606, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i8 0, metadata !6608, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i32 0, metadata !6607, metadata !DIExpression()), !dbg !6609
  %3 = icmp eq i32 %1, 0, !dbg !6610
  br i1 %3, label %16, label %4, !dbg !6613

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !6608, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i32 %6, metadata !6607, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i32 %7, metadata !6606, metadata !DIExpression()), !dbg !6609
  %8 = shl i32 %6, 8, !dbg !6614
  %9 = and i32 %7, 255, !dbg !6616
  %10 = or i32 %8, %9, !dbg !6617
  call void @llvm.dbg.value(metadata i32 %10, metadata !6607, metadata !DIExpression()), !dbg !6609
  %11 = lshr i32 %7, 8, !dbg !6618
  call void @llvm.dbg.value(metadata i32 %11, metadata !6606, metadata !DIExpression()), !dbg !6609
  %12 = add nuw nsw i8 %5, 1, !dbg !6619
  call void @llvm.dbg.value(metadata i8 %12, metadata !6608, metadata !DIExpression()), !dbg !6609
  %13 = icmp ult i32 %7, 256, !dbg !6610
  br i1 %13, label %14, label %4, !dbg !6613, !llvm.loop !6620

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !6622
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #22, !dbg !6624
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6625
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6626
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6627
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #22, !dbg !6628
  br label %16, !dbg !6629

16:                                               ; preds = %2, %14
  ret void, !dbg !6630
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !6631 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6635, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i8 %1, metadata !6636, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i32 %2, metadata !6637, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i32 %3, metadata !6638, metadata !DIExpression()), !dbg !6641
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #22, !dbg !6642
  call void @llvm.dbg.value(metadata i32 %5, metadata !6640, metadata !DIExpression()), !dbg !6641
  %6 = icmp eq i32 %3, 3, !dbg !6643
  br i1 %6, label %7, label %11, !dbg !6645

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !6646
  %9 = zext i8 %1 to i32, !dbg !6648
  %10 = or i32 %8, %9, !dbg !6649
  call void @llvm.dbg.value(metadata i32 %10, metadata !6639, metadata !DIExpression()), !dbg !6641
  br label %16, !dbg !6650

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !6651
  %13 = zext i8 %1 to i32, !dbg !6653
  %14 = or i32 %12, %13, !dbg !6654
  call void @llvm.dbg.value(metadata i32 %14, metadata !6639, metadata !DIExpression()), !dbg !6641
  %15 = lshr i32 %5, 24, !dbg !6655
  call void @llvm.dbg.value(metadata i32 %15, metadata !6640, metadata !DIExpression()), !dbg !6641
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !6656
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !6641
  call void @llvm.dbg.value(metadata i32 %18, metadata !6640, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i32 %17, metadata !6639, metadata !DIExpression()), !dbg !6641
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6657
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6658
  %19 = add i32 %3, 1, !dbg !6659
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6660
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6661
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #22, !dbg !6662
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #22, !dbg !6663
  ret void, !dbg !6664
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !6665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6669, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i32 %1, metadata !6670, metadata !DIExpression()), !dbg !6671
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #22, !dbg !6672
  %4 = and i32 %3, -256, !dbg !6673
  %5 = and i32 %0, 255, !dbg !6674
  %6 = or i32 %4, %5, !dbg !6675
  ret i32 %6, !dbg !6676
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !6677 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6682, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i32 %1, metadata !6683, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i8** %2, metadata !6684, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i32* %3, metadata !6685, metadata !DIExpression()), !dbg !6697
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !6698
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !6698
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !6686, metadata !DIExpression()), !dbg !6699
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #22, !dbg !6700
  call void @llvm.dbg.value(metadata i32 %7, metadata !6695, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !6694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6697
  %8 = lshr i32 %7, 24, !dbg !6701
  call void @llvm.dbg.value(metadata i32 %8, metadata !6695, metadata !DIExpression()), !dbg !6697
  %9 = trunc i32 %8 to i8, !dbg !6702
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !6703
  store i8 %9, i8* %6, align 4, !dbg !6704
  call void @llvm.dbg.value(metadata i32 1, metadata !6696, metadata !DIExpression()), !dbg !6697
  %11 = load i8*, i8** %2, align 4, !dbg !6705
  br label %12, !dbg !6709

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !6705
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6696, metadata !DIExpression()), !dbg !6697
  %15 = load i8, i8* %13, align 1, !dbg !6710
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !6711
  store i8 %15, i8* %16, align 1, !dbg !6712
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6713
  store i8* %17, i8** %2, align 4, !dbg !6713
  %18 = add nuw nsw i32 %14, 1, !dbg !6714
  call void @llvm.dbg.value(metadata i32 %18, metadata !6696, metadata !DIExpression()), !dbg !6697
  %19 = icmp eq i32 %18, 4, !dbg !6715
  br i1 %19, label %20, label %12, !dbg !6709, !llvm.loop !6716

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !6718
  %22 = load i32, i32* %21, align 4, !dbg !6718
  call void @llvm.dbg.value(metadata i32 %22, metadata !6695, metadata !DIExpression()), !dbg !6697
  %23 = load i32, i32* %3, align 4, !dbg !6719
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !6720
  %25 = shl i32 %7, 8, !dbg !6721
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !6694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6697
  %26 = and i32 %0, 255, !dbg !6722
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !6694, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6697
  %27 = or i32 %25, %26, !dbg !6723
  call void @llvm.dbg.value(metadata i32 %27, metadata !6694, metadata !DIExpression()), !dbg !6697
  store i32 %24, i32* %3, align 4, !dbg !6724
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6725
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !6726
  ret i32 %27, !dbg !6727
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !6728 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6732, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i8* %1, metadata !6733, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %2, metadata !6734, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i8* %1, metadata !6736, metadata !DIExpression()), !dbg !6738
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !6739
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !6739
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !6737, metadata !DIExpression()), !dbg !6740
  %6 = add i32 %0, -1610348544, !dbg !6741
  call void @llvm.dbg.value(metadata i32 %6, metadata !6732, metadata !DIExpression()), !dbg !6738
  %7 = ptrtoint i8* %1 to i32, !dbg !6742
  %8 = and i32 %7, 3, !dbg !6744
  %9 = icmp eq i32 %8, 0, !dbg !6745
  br i1 %9, label %10, label %23, !dbg !6746

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6736, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %2, metadata !6734, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %6, metadata !6732, metadata !DIExpression()), !dbg !6738
  %11 = icmp sgt i32 %2, 0, !dbg !6747
  br i1 %11, label %12, label %72, !dbg !6751

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6736, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %14, metadata !6734, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %15, metadata !6732, metadata !DIExpression()), !dbg !6738
  %16 = bitcast i8* %13 to i32*, !dbg !6752
  %17 = load i32, i32* %16, align 4, !dbg !6752
  %18 = inttoptr i32 %15 to i32*, !dbg !6752
  store volatile i32 %17, i32* %18, align 4, !dbg !6752
  %19 = add i32 %15, 4, !dbg !6754
  call void @llvm.dbg.value(metadata i32 %19, metadata !6732, metadata !DIExpression()), !dbg !6738
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !6755
  call void @llvm.dbg.value(metadata i8* %20, metadata !6736, metadata !DIExpression()), !dbg !6738
  %21 = add nsw i32 %14, -4, !dbg !6756
  call void @llvm.dbg.value(metadata i32 %21, metadata !6734, metadata !DIExpression()), !dbg !6738
  %22 = icmp ugt i32 %14, 4, !dbg !6747
  br i1 %22, label %12, label %72, !dbg !6751, !llvm.loop !6757

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !6759
  %25 = icmp eq i32 %24, 0, !dbg !6761
  call void @llvm.dbg.value(metadata i8* %1, metadata !6736, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i8* %1, metadata !6736, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %2, metadata !6734, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %2, metadata !6734, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %6, metadata !6732, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %6, metadata !6732, metadata !DIExpression()), !dbg !6738
  %26 = icmp sgt i32 %2, 0, !dbg !6762
  br i1 %25, label %31, label %27, !dbg !6763

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !6764

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !6764

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !6767

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !6767

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !6736, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %39, metadata !6734, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %40, metadata !6732, metadata !DIExpression()), !dbg !6738
  %41 = bitcast i8* %38 to i16*, !dbg !6770
  %42 = load i16, i16* %41, align 2, !dbg !6770
  store i16 %42, i16* %34, align 4, !dbg !6773
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !6774
  %44 = bitcast i8* %43 to i16*, !dbg !6774
  %45 = load i16, i16* %44, align 2, !dbg !6775
  store i16 %45, i16* %35, align 2, !dbg !6776
  %46 = load i32, i32* %36, align 4, !dbg !6777
  %47 = inttoptr i32 %40 to i32*, !dbg !6777
  store volatile i32 %46, i32* %47, align 4, !dbg !6777
  %48 = add i32 %40, 4, !dbg !6778
  call void @llvm.dbg.value(metadata i32 %48, metadata !6732, metadata !DIExpression()), !dbg !6738
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !6779
  call void @llvm.dbg.value(metadata i8* %49, metadata !6736, metadata !DIExpression()), !dbg !6738
  %50 = add nsw i32 %39, -4, !dbg !6780
  call void @llvm.dbg.value(metadata i32 %50, metadata !6734, metadata !DIExpression()), !dbg !6738
  %51 = icmp ugt i32 %39, 4, !dbg !6781
  br i1 %51, label %37, label %72, !dbg !6767, !llvm.loop !6782

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !6736, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %54, metadata !6734, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %55, metadata !6732, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i8* %53, metadata !6736, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 0, metadata !6735, metadata !DIExpression()), !dbg !6738
  br label %56, !dbg !6784

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6736, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %58, metadata !6735, metadata !DIExpression()), !dbg !6738
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !6788
  call void @llvm.dbg.value(metadata i8* %59, metadata !6736, metadata !DIExpression()), !dbg !6738
  %60 = load i8, i8* %57, align 1, !dbg !6791
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !6792
  store i8 %60, i8* %61, align 1, !dbg !6793
  %62 = add nuw nsw i32 %58, 1, !dbg !6794
  call void @llvm.dbg.value(metadata i32 %62, metadata !6735, metadata !DIExpression()), !dbg !6738
  %63 = icmp ult i32 %58, 3, !dbg !6795
  %64 = icmp ult i32 %62, %54, !dbg !6796
  %65 = select i1 %63, i1 %64, i1 false, !dbg !6796
  br i1 %65, label %56, label %66, !dbg !6784, !llvm.loop !6797

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !6799
  %68 = inttoptr i32 %55 to i32*, !dbg !6799
  store volatile i32 %67, i32* %68, align 4, !dbg !6799
  %69 = add i32 %55, 4, !dbg !6800
  call void @llvm.dbg.value(metadata i32 %69, metadata !6732, metadata !DIExpression()), !dbg !6738
  %70 = add nsw i32 %54, -4, !dbg !6801
  call void @llvm.dbg.value(metadata i8* %59, metadata !6736, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.value(metadata i32 %70, metadata !6734, metadata !DIExpression()), !dbg !6738
  %71 = icmp sgt i32 %54, 4, !dbg !6802
  br i1 %71, label %52, label %72, !dbg !6764, !llvm.loop !6803

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !6805
  ret void, !dbg !6805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !6806 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !6810, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8* %1, metadata !6811, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8* %2, metadata !6812, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i16 %3, metadata !6813, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i16 %4, metadata !6814, metadata !DIExpression()), !dbg !6820
  %7 = bitcast i32* %6 to i8*, !dbg !6821
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !6821
  call void @llvm.dbg.value(metadata i8* %7, metadata !6819, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i32 0, metadata !6816, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !6818, metadata !DIExpression()), !dbg !6820
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !6818, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i32 0, metadata !6816, metadata !DIExpression()), !dbg !6820
  %9 = icmp eq i16 %3, 0, !dbg !6822
  br i1 %9, label %33, label %10, !dbg !6825

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !6818, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i32 %12, metadata !6816, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i32 0, metadata !6817, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i32 0, metadata !6815, metadata !DIExpression()), !dbg !6820
  store i32 0, i32* %6, align 4, !dbg !6826
  call void @llvm.dbg.value(metadata i32 0, metadata !6817, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i32 %12, metadata !6816, metadata !DIExpression()), !dbg !6820
  %13 = icmp ult i32 %12, %8, !dbg !6829
  br i1 %13, label %14, label %27, !dbg !6831

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !6817, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i32 %16, metadata !6816, metadata !DIExpression()), !dbg !6820
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !6832
  %18 = load i8, i8* %17, align 1, !dbg !6832
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !6834
  store i8 %18, i8* %19, align 1, !dbg !6835
  %20 = add nuw nsw i32 %16, 1, !dbg !6836
  call void @llvm.dbg.value(metadata i32 %20, metadata !6816, metadata !DIExpression()), !dbg !6820
  %21 = add nuw nsw i32 %15, 1, !dbg !6837
  call void @llvm.dbg.value(metadata i32 %21, metadata !6817, metadata !DIExpression()), !dbg !6820
  %22 = icmp ult i32 %20, %8, !dbg !6829
  %23 = icmp ult i32 %15, 3, !dbg !6838
  %24 = select i1 %22, i1 %23, i1 false, !dbg !6838
  br i1 %24, label %14, label %25, !dbg !6831, !llvm.loop !6839

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !6841
  br label %27, !dbg !6841

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !6841
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !6842
  call void @llvm.dbg.value(metadata i32 %28, metadata !6815, metadata !DIExpression()), !dbg !6820
  %30 = bitcast i8* %11 to i32*, !dbg !6841
  store volatile i32 %28, i32* %30, align 4, !dbg !6841
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !6843
  call void @llvm.dbg.value(metadata i8* %31, metadata !6818, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i32 %29, metadata !6816, metadata !DIExpression()), !dbg !6820
  %32 = icmp ult i32 %29, %8, !dbg !6822
  br i1 %32, label %10, label %33, !dbg !6825, !llvm.loop !6844

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6846
  %34 = zext i16 %4 to i32, !dbg !6847
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6848
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #22, !dbg !6849
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #22, !dbg !6850
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !6818, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !6820
  call void @llvm.dbg.value(metadata i8* %2, metadata !6812, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i32 0, metadata !6816, metadata !DIExpression()), !dbg !6820
  %35 = icmp eq i16 %4, 0, !dbg !6851
  br i1 %35, label %47, label %36, !dbg !6854

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !6855
  call void @llvm.dbg.value(metadata i8* %37, metadata !6818, metadata !DIExpression()), !dbg !6820
  br label %38, !dbg !6854

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !6812, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i8* %40, metadata !6818, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i32 %41, metadata !6816, metadata !DIExpression()), !dbg !6820
  %42 = load volatile i8, i8* %40, align 1, !dbg !6856
  store i8 %42, i8* %39, align 1, !dbg !6858
  %43 = add nuw nsw i32 %41, 1, !dbg !6859
  call void @llvm.dbg.value(metadata i32 %43, metadata !6816, metadata !DIExpression()), !dbg !6820
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !6860
  call void @llvm.dbg.value(metadata i8* %44, metadata !6812, metadata !DIExpression()), !dbg !6820
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !6861
  call void @llvm.dbg.value(metadata i8* %45, metadata !6818, metadata !DIExpression()), !dbg !6820
  %46 = icmp eq i32 %43, %34, !dbg !6851
  br i1 %46, label %47, label %38, !dbg !6854, !llvm.loop !6862

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !6864
  ret void, !dbg !6864
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !6865 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !6869, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i8* %1, metadata !6870, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i32 0, metadata !6871, metadata !DIExpression()), !dbg !6877
  %4 = icmp eq i8* %1, null, !dbg !6878
  br i1 %4, label %67, label %5, !dbg !6880

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6881
  call void @llvm.dbg.value(metadata i32 %27, metadata !6872, metadata !DIExpression()), !dbg !6877
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !6882

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !6877
  call void @llvm.dbg.value(metadata i32 %9, metadata !6871, metadata !DIExpression()), !dbg !6877
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !6883
  %11 = load i8, i8* %10, align 1, !dbg !6883
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !6884

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !6885

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6888
  %15 = and i32 %14, -2, !dbg !6888
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6888
  br label %41, !dbg !6892

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6893
  %18 = and i32 %17, -2, !dbg !6893
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6893
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !6896

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6898
  %22 = or i32 %21, 1, !dbg !6898
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6898
  br label %41, !dbg !6902

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6903
  %25 = or i32 %24, 1, !dbg !6903
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6903
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !6881
  %28 = icmp eq i32 %27, 0, !dbg !6906
  br i1 %7, label %29, label %35, !dbg !6909

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6910
  br i1 %28, label %33, label %31, !dbg !6913

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !6910
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6910
  br label %67, !dbg !6910

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !6910
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6910
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6914
  br i1 %28, label %39, label %37, !dbg !6917

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !6914
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6914
  br label %67, !dbg !6914

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !6914
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6914
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !6918
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !6919
  %44 = load i8, i8* %43, align 1, !dbg !6919
  %45 = icmp eq i8 %44, 5, !dbg !6920
  br i1 %45, label %46, label %56, !dbg !6921

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #23, !dbg !6922
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !6923

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !6873, metadata !DIExpression(DW_OP_deref)), !dbg !6924
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #22, !dbg !6925
  %50 = load i8, i8* %3, align 1, !dbg !6927
  call void @llvm.dbg.value(metadata i8 %50, metadata !6873, metadata !DIExpression()), !dbg !6924
  %51 = load i8, i8* %48, align 1, !dbg !6928
  %52 = and i8 %51, %50, !dbg !6929
  %53 = icmp eq i8 %52, 0, !dbg !6930
  br i1 %53, label %54, label %49, !dbg !6930, !llvm.loop !6931

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #23, !dbg !6933
  %55 = add i32 %9, 1, !dbg !6934
  br label %61, !dbg !6935

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !6936
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !6938
  %59 = load i8, i8* %58, align 1, !dbg !6938
  %60 = zext i8 %59 to i16, !dbg !6938
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #22, !dbg !6939
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !6934
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !6940
  %64 = load i8, i8* %63, align 1, !dbg !6940
  %65 = zext i8 %64 to i32, !dbg !6940
  %66 = add i32 %42, %65, !dbg !6941
  call void @llvm.dbg.value(metadata i32 %66, metadata !6871, metadata !DIExpression()), !dbg !6877
  br label %8, !dbg !6882, !llvm.loop !6942

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !6944
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !6945 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !6949, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.value(metadata i8* %1, metadata !6950, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.value(metadata i8 %2, metadata !6951, metadata !DIExpression()), !dbg !6952
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !6951, metadata !DIExpression(DW_OP_deref)), !dbg !6952
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #22, !dbg !6953
  ret void, !dbg !6954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !6955 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6959, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.value(metadata i8* %1, metadata !6960, metadata !DIExpression()), !dbg !6961
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #22, !dbg !6962
  ret void, !dbg !6963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !6964 {
  ret i32 78, !dbg !6968
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !6969 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6973
  %2 = and i32 %1, 7340032, !dbg !6975
  %3 = icmp ult i32 %2, 2097153, !dbg !6976
  %4 = select i1 %3, i32 30, i32 18, !dbg !6977
  ret i32 %4, !dbg !6978
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !6979 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6983, metadata !DIExpression()), !dbg !6985
  call void @llvm.dbg.value(metadata i32 0, metadata !6984, metadata !DIExpression()), !dbg !6985
  call void @llvm.dbg.value(metadata i32 0, metadata !6984, metadata !DIExpression()), !dbg !6985
  br label %2, !dbg !6986

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6984, metadata !DIExpression()), !dbg !6985
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6988
  store i8 -1, i8* %4, align 1, !dbg !6991
  %5 = add nuw nsw i32 %3, 1, !dbg !6992
  call void @llvm.dbg.value(metadata i32 %5, metadata !6984, metadata !DIExpression()), !dbg !6985
  %6 = icmp eq i32 %5, 8, !dbg !6993
  br i1 %6, label %7, label %2, !dbg !6986, !llvm.loop !6994

7:                                                ; preds = %2
  ret i1 true, !dbg !6996
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !6997 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !6999, metadata !DIExpression()), !dbg !7000
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7001
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !7002
  %3 = load i8, i8* %2, align 1, !dbg !7002
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7003
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !7004
  %5 = ptrtoint i8* %4 to i32, !dbg !7005
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7006
  %6 = bitcast i8* %4 to i32*, !dbg !7007
  %7 = load volatile i32, i32* %6, align 4, !dbg !7008
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7009
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7010
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7011
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7012
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7013
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7014
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7015
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7016
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7017
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7018
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7019
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7020
  %14 = or i32 %13, 986880, !dbg !7021
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7022
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7023
  %16 = or i32 %15, 252645135, !dbg !7024
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7025
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !7026
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7027
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !7028
  %20 = load i8, i8* %19, align 1, !dbg !7028
  %21 = zext i8 %20 to i32, !dbg !7029
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #22, !dbg !7030
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #21, !dbg !7031
  ret void, !dbg !7032
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !7033 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7034
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7035
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7036
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7037
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7038
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7039
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7040
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7041
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7042
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7043
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7044
  %7 = and i32 %6, -252645136, !dbg !7045
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7046
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7047
  %9 = zext i8 %8 to i32, !dbg !7047
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #22, !dbg !7048
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #21, !dbg !7049
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7050
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7052
  %13 = inttoptr i32 %12 to i32*, !dbg !7053
  %14 = load volatile i32, i32* %13, align 4, !dbg !7054
  %15 = icmp eq i32 %11, %14, !dbg !7055
  br i1 %15, label %17, label %16, !dbg !7056

16:                                               ; preds = %0, %16
  br label %16, !dbg !7057, !llvm.loop !7058

17:                                               ; preds = %0
  ret void, !dbg !7060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7061 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7062
  %2 = icmp eq i32 %1, 0, !dbg !7064
  br i1 %2, label %3, label %5, !dbg !7065

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7066
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7068
  br label %5, !dbg !7069

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7070
  %7 = icmp eq i32 %6, 0, !dbg !7072
  br i1 %7, label %8, label %10, !dbg !7073

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7074
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7076
  br label %10, !dbg !7077

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7078
  %12 = and i32 %11, -256, !dbg !7079
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7080
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7081
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #21, !dbg !7082
  ret void, !dbg !7083
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7084 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7085
  %2 = icmp eq i32 %1, 0, !dbg !7087
  br i1 %2, label %4, label %3, !dbg !7088

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7089
  br label %4, !dbg !7091

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7092
  %6 = icmp eq i32 %5, 0, !dbg !7094
  br i1 %6, label %8, label %7, !dbg !7095

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7096
  br label %8, !dbg !7098

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #21, !dbg !7099
  ret void, !dbg !7100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !7101 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7103, metadata !DIExpression()), !dbg !7104
  ret i32 0, !dbg !7105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !7106 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7108, metadata !DIExpression()), !dbg !7109
  ret i32 0, !dbg !7110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7113, metadata !DIExpression()), !dbg !7114
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #21, !dbg !7115
  ret void, !dbg !7116
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !7117 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7120
  call void @llvm.dbg.value(metadata i32 %1, metadata !7119, metadata !DIExpression()), !dbg !7121
  ret i32 %1, !dbg !7122
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7125, metadata !DIExpression()), !dbg !7126
  tail call void @restore_interrupt_mask(i32 noundef %0) #21, !dbg !7127
  ret void, !dbg !7128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !7129 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !7131, metadata !DIExpression()), !dbg !7132
  ret i32 0, !dbg !7133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !7134 {
  ret i32 0, !dbg !7137
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !7138 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7142, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i8* %1, metadata !7143, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 %2, metadata !7144, metadata !DIExpression()), !dbg !7157
  %4 = ptrtoint i8* %0 to i32, !dbg !7158
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !7159
  %7 = and i32 %6, 3, !dbg !7159
  %8 = icmp eq i32 %7, 0, !dbg !7159
  br i1 %8, label %9, label %26, !dbg !7159

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !7160
  call void @llvm.dbg.value(metadata i32* %10, metadata !7146, metadata !DIExpression()), !dbg !7161
  %11 = bitcast i8* %1 to i32*, !dbg !7162
  call void @llvm.dbg.value(metadata i32* %11, metadata !7149, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.value(metadata i32 0, metadata !7145, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 0, metadata !7145, metadata !DIExpression()), !dbg !7157
  %12 = icmp ult i32 %2, 4, !dbg !7163
  br i1 %12, label %65, label %13, !dbg !7166

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !7166

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7145, metadata !DIExpression()), !dbg !7157
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !7167
  %18 = load i32, i32* %17, align 4, !dbg !7167
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !7170
  %20 = load i32, i32* %19, align 4, !dbg !7170
  %21 = icmp eq i32 %18, %20, !dbg !7171
  %22 = add nuw nsw i32 %16, 1, !dbg !7172
  call void @llvm.dbg.value(metadata i32 %22, metadata !7145, metadata !DIExpression()), !dbg !7157
  %23 = xor i1 %21, true, !dbg !7173
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !7173
  call void @llvm.dbg.value(metadata i32 %22, metadata !7145, metadata !DIExpression()), !dbg !7157
  br i1 %25, label %59, label %15, !dbg !7173, !llvm.loop !7174

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !7176
  %28 = icmp eq i32 %27, 0, !dbg !7176
  br i1 %28, label %31, label %29, !dbg !7176

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !7145, metadata !DIExpression()), !dbg !7157
  %30 = icmp eq i32 %2, 0, !dbg !7177
  br i1 %30, label %65, label %48, !dbg !7180

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !7181
  call void @llvm.dbg.value(metadata i16* %32, metadata !7150, metadata !DIExpression()), !dbg !7182
  %33 = bitcast i8* %1 to i16*, !dbg !7183
  call void @llvm.dbg.value(metadata i16* %33, metadata !7153, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.value(metadata i32 0, metadata !7145, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 0, metadata !7145, metadata !DIExpression()), !dbg !7157
  %34 = icmp ult i32 %2, 2, !dbg !7184
  br i1 %34, label %65, label %35, !dbg !7187

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !7187

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7145, metadata !DIExpression()), !dbg !7157
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !7188
  %40 = load i16, i16* %39, align 2, !dbg !7188
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !7191
  %42 = load i16, i16* %41, align 2, !dbg !7191
  %43 = icmp eq i16 %40, %42, !dbg !7192
  %44 = add nuw nsw i32 %38, 1, !dbg !7193
  call void @llvm.dbg.value(metadata i32 %44, metadata !7145, metadata !DIExpression()), !dbg !7157
  %45 = xor i1 %43, true, !dbg !7194
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !7194
  call void @llvm.dbg.value(metadata i32 %44, metadata !7145, metadata !DIExpression()), !dbg !7157
  br i1 %47, label %61, label %37, !dbg !7194, !llvm.loop !7195

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7145, metadata !DIExpression()), !dbg !7157
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !7197
  %51 = load i8, i8* %50, align 1, !dbg !7197
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !7200
  %53 = load i8, i8* %52, align 1, !dbg !7200
  %54 = icmp eq i8 %51, %53, !dbg !7201
  %55 = add nuw i32 %49, 1, !dbg !7202
  call void @llvm.dbg.value(metadata i32 %55, metadata !7145, metadata !DIExpression()), !dbg !7157
  %56 = xor i1 %54, true, !dbg !7203
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !7203
  call void @llvm.dbg.value(metadata i32 %55, metadata !7145, metadata !DIExpression()), !dbg !7157
  br i1 %58, label %63, label %48, !dbg !7203, !llvm.loop !7204

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !7206
  br label %65, !dbg !7206

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !7206
  br label %65, !dbg !7206

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !7206
  br label %65, !dbg !7206

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !7157
  ret i1 %66, !dbg !7206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !7207 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7211, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.value(metadata i8* %1, metadata !7212, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.value(metadata i32 %2, metadata !7213, metadata !DIExpression()), !dbg !7222
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7223
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !7214, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.value(metadata i8* %0, metadata !7215, metadata !DIExpression()), !dbg !7222
  %7 = bitcast i8** %4 to i8*, !dbg !7224
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !7224
  call void @llvm.dbg.value(metadata i8* %1, metadata !7216, metadata !DIExpression()), !dbg !7222
  store i8* %1, i8** %4, align 4, !dbg !7225
  call void @llvm.dbg.value(metadata i32 0, metadata !7217, metadata !DIExpression()), !dbg !7222
  %8 = bitcast i32* %5 to i8*, !dbg !7226
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #23, !dbg !7226
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !7227
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !7228
  store i8 1, i8* %9, align 4, !dbg !7229
  call void @llvm.dbg.value(metadata i32 %2, metadata !7213, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.value(metadata i8* %0, metadata !7215, metadata !DIExpression()), !dbg !7222
  %10 = icmp eq i32 %2, 0, !dbg !7230
  br i1 %10, label %73, label %11, !dbg !7231

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !7232
  call void @llvm.dbg.value(metadata i32 %12, metadata !7215, metadata !DIExpression()), !dbg !7222
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !7231

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !7213, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.value(metadata i32 %20, metadata !7215, metadata !DIExpression()), !dbg !7222
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7233
  %22 = shl i32 %21, 1, !dbg !7235
  %23 = add i32 %22, -1, !dbg !7236
  %24 = and i32 %23, %20, !dbg !7237
  %25 = sub i32 %22, %24, !dbg !7238
  %26 = icmp ugt i32 %19, %25, !dbg !7239
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !7240
  call void @llvm.dbg.value(metadata i32 %27, metadata !7219, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.value(metadata i32 %27, metadata !7218, metadata !DIExpression()), !dbg !7222
  store i32 %27, i32* %5, align 4, !dbg !7241
  %28 = load i32, i32* %13, align 4, !dbg !7242
  %29 = and i32 %28, 16, !dbg !7244
  %30 = icmp eq i32 %29, 0, !dbg !7244
  br i1 %30, label %31, label %32, !dbg !7245

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #22, !dbg !7246
  br label %32, !dbg !7248

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !7249
  %34 = icmp eq i8 %33, 4, !dbg !7251
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7252
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !7252
  %37 = load i8, i8* %36, align 1, !dbg !7252
  %38 = zext i8 %37 to i32, !dbg !7252
  br i1 %34, label %39, label %43, !dbg !7253

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !7216, metadata !DIExpression(DW_OP_deref)), !dbg !7222
  call void @llvm.dbg.value(metadata i32* %5, metadata !7218, metadata !DIExpression(DW_OP_deref)), !dbg !7222
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #21, !dbg !7254
  call void @llvm.dbg.value(metadata i32 %40, metadata !7217, metadata !DIExpression()), !dbg !7222
  %41 = load i8*, i8** %4, align 4, !dbg !7256
  call void @llvm.dbg.value(metadata i8* %41, metadata !7216, metadata !DIExpression()), !dbg !7222
  %42 = load i32, i32* %5, align 4, !dbg !7257
  call void @llvm.dbg.value(metadata i32 %42, metadata !7218, metadata !DIExpression()), !dbg !7222
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #21, !dbg !7258
  br label %47, !dbg !7259

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #21, !dbg !7260
  call void @llvm.dbg.value(metadata i32 %44, metadata !7217, metadata !DIExpression()), !dbg !7222
  %45 = load i8*, i8** %4, align 4, !dbg !7262
  call void @llvm.dbg.value(metadata i8* %45, metadata !7216, metadata !DIExpression()), !dbg !7222
  %46 = load i32, i32* %5, align 4, !dbg !7263
  call void @llvm.dbg.value(metadata i32 %46, metadata !7218, metadata !DIExpression()), !dbg !7222
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #21, !dbg !7264
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !7252
  call void @llvm.dbg.value(metadata i32 %48, metadata !7217, metadata !DIExpression()), !dbg !7222
  %49 = call i32 @SaveAndSetIRQMask() #22, !dbg !7265
  call void @llvm.dbg.value(metadata i32 %49, metadata !7221, metadata !DIExpression()), !dbg !7222
  %50 = load i8, i8* %14, align 1, !dbg !7266
  %51 = zext i8 %50 to i32, !dbg !7267
  %52 = add i32 %27, 1, !dbg !7268
  %53 = add i32 %52, %51, !dbg !7269
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7270
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7271
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7272
  call void @SF_DAL_FLAG_BUSY_SET() #22, !dbg !7273
  %54 = load i16, i16* %16, align 2, !dbg !7274
  call void @SFI_MacEnable(i16 noundef zeroext %54) #21, !dbg !7275
  %55 = load i16, i16* %16, align 2, !dbg !7276
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #21, !dbg !7277
  call void @RestoreIRQMask(i32 noundef %49) #22, !dbg !7278
  br label %56, !dbg !7279

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7280
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !7282
  %59 = load i8, i8* %58, align 1, !dbg !7282
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #22, !dbg !7283
  call void @llvm.dbg.value(metadata i32 %60, metadata !7220, metadata !DIExpression()), !dbg !7222
  %61 = load i8*, i8** %17, align 4, !dbg !7284
  %62 = load i8, i8* %61, align 1, !dbg !7286
  %63 = zext i8 %62 to i32, !dbg !7286
  %64 = and i32 %60, %63, !dbg !7287
  %65 = icmp eq i32 %64, 0, !dbg !7288
  br i1 %65, label %66, label %56, !dbg !7289, !llvm.loop !7290

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !7292
  %67 = load i32, i32* %5, align 4, !dbg !7293
  call void @llvm.dbg.value(metadata i32 %67, metadata !7218, metadata !DIExpression()), !dbg !7222
  %68 = load i8*, i8** %4, align 4, !dbg !7294
  call void @llvm.dbg.value(metadata i8* %68, metadata !7216, metadata !DIExpression()), !dbg !7222
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !7294
  call void @llvm.dbg.value(metadata i8* %69, metadata !7216, metadata !DIExpression()), !dbg !7222
  store i8* %69, i8** %4, align 4, !dbg !7294
  %70 = sub i32 %19, %27, !dbg !7295
  call void @llvm.dbg.value(metadata i32 %70, metadata !7213, metadata !DIExpression()), !dbg !7222
  %71 = add i32 %27, %20, !dbg !7296
  call void @llvm.dbg.value(metadata i32 %71, metadata !7215, metadata !DIExpression()), !dbg !7222
  %72 = icmp eq i32 %70, 0, !dbg !7230
  br i1 %72, label %73, label %18, !dbg !7231, !llvm.loop !7297

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !7299
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !7300
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #23, !dbg !7301
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !7301
  ret void, !dbg !7301
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7302 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7306, metadata !DIExpression()), !dbg !7308
  br label %2, !dbg !7309

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #22, !dbg !7310
  call void @llvm.dbg.value(metadata i32 %3, metadata !7307, metadata !DIExpression()), !dbg !7308
  %4 = icmp eq i32 %3, 0, !dbg !7312
  br i1 %4, label %5, label %2, !dbg !7313, !llvm.loop !7314

5:                                                ; preds = %2
  ret void, !dbg !7316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7317 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7319, metadata !DIExpression()), !dbg !7320
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7321
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !7321
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !7322
  %5 = load i8, i8* %4, align 1, !dbg !7322
  %6 = zext i8 %5 to i32, !dbg !7323
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #22, !dbg !7324
  ret void, !dbg !7325
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7326 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !7329
  call void @llvm.dbg.value(metadata i32 %1, metadata !7328, metadata !DIExpression()), !dbg !7330
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !7331
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !7332
  ret void, !dbg !7333
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !7334 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7338, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.value(metadata i8 %1, metadata !7339, metadata !DIExpression()), !dbg !7342
  %3 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !7343
  call void @llvm.dbg.value(metadata i32 %3, metadata !7340, metadata !DIExpression()), !dbg !7342
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7344
  %5 = load i16, i16* %4, align 2, !dbg !7344
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #21, !dbg !7345
  %6 = zext i8 %1 to i32, !dbg !7346
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7347
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7348
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7349
  %7 = load i16, i16* %4, align 2, !dbg !7350
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #21, !dbg !7351
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7352
  %9 = lshr i32 %8, 8, !dbg !7353
  %10 = and i32 %9, 255, !dbg !7354
  call void @llvm.dbg.value(metadata i32 %10, metadata !7341, metadata !DIExpression()), !dbg !7342
  tail call void @RestoreIRQMask(i32 noundef %3) #22, !dbg !7355
  ret i32 %10, !dbg !7356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7357 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !7360
  call void @llvm.dbg.value(metadata i32 %1, metadata !7359, metadata !DIExpression()), !dbg !7361
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !7362
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7363
  %3 = and i32 %2, -513, !dbg !7363
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7363
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !7366
  ret void, !dbg !7367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7368 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7370, metadata !DIExpression()), !dbg !7372
  %2 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !7373
  call void @llvm.dbg.value(metadata i32 %2, metadata !7371, metadata !DIExpression()), !dbg !7372
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !7374
  br i1 %3, label %4, label %5, !dbg !7376

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !7377
  tail call void @RestoreIRQMask(i32 noundef %2) #22, !dbg !7379
  ret void, !dbg !7380

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #22, !dbg !7381
  tail call void @Flash_ReturnReady() #22, !dbg !7383
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !7383
  unreachable, !dbg !7383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !7387 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !7389, metadata !DIExpression()), !dbg !7394
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !7395
  call void @llvm.dbg.value(metadata i32 %1, metadata !7391, metadata !DIExpression()), !dbg !7394
  %2 = tail call i32 @get_NOR_init_status() #21, !dbg !7396
  %3 = icmp eq i32 %2, 0, !dbg !7398
  br i1 %3, label %4, label %125, !dbg !7399

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7400
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7401
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !7389, metadata !DIExpression()), !dbg !7394
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !7403
  %7 = load i32, i32* %6, align 4, !dbg !7403
  %8 = xor i32 %7, -1, !dbg !7403
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !7403
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !7403
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !7403
  %12 = icmp eq i32 %8, %11, !dbg !7403
  br i1 %12, label %14, label %13, !dbg !7406

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #22, !dbg !7407
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !7407
  unreachable, !dbg !7407

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7409
  %16 = icmp ult i32 %15, 16, !dbg !7411
  br i1 %16, label %17, label %34, !dbg !7412

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7413
  %19 = load i8, i8* %18, align 4, !dbg !7413
  %20 = icmp eq i8 %19, 1, !dbg !7414
  br i1 %20, label %21, label %34, !dbg !7415

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !7416

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7418
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !7420
  %27 = load i8, i8* %26, align 1, !dbg !7420
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #22, !dbg !7421
  call void @llvm.dbg.value(metadata i32 %28, metadata !7390, metadata !DIExpression()), !dbg !7394
  %29 = load i8*, i8** %23, align 4, !dbg !7422
  %30 = load i8, i8* %29, align 1, !dbg !7424
  %31 = zext i8 %30 to i32, !dbg !7424
  %32 = and i32 %28, %31, !dbg !7425
  %33 = icmp eq i32 %32, 0, !dbg !7426
  br i1 %33, label %34, label %24, !dbg !7427, !llvm.loop !7428

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7430, !range !2596
  %36 = icmp ne i8 %35, 0, !dbg !7430
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !7432
  br i1 %39, label %116, label %40, !dbg !7432

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !7433
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7433
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !7435
  %44 = load i8, i8* %43, align 1, !dbg !7435
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #22, !dbg !7436
  call void @llvm.dbg.value(metadata i32 %45, metadata !7390, metadata !DIExpression()), !dbg !7394
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !7437
  %47 = load i8*, i8** %46, align 4, !dbg !7437
  %48 = load i8, i8* %47, align 1, !dbg !7439
  %49 = zext i8 %48 to i32, !dbg !7439
  %50 = and i32 %45, %49, !dbg !7440
  %51 = icmp eq i32 %50, 0, !dbg !7441
  br i1 %51, label %85, label %52, !dbg !7442

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #22, !dbg !7443
  br label %53, !dbg !7445

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7446
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !7448
  %56 = load i8, i8* %55, align 1, !dbg !7448
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #22, !dbg !7449
  call void @llvm.dbg.value(metadata i32 %57, metadata !7390, metadata !DIExpression()), !dbg !7394
  %58 = load i8*, i8** %46, align 4, !dbg !7450
  %59 = load i8, i8* %58, align 1, !dbg !7452
  %60 = zext i8 %59 to i32, !dbg !7452
  %61 = and i32 %57, %60, !dbg !7453
  %62 = icmp eq i32 %61, 0, !dbg !7454
  br i1 %62, label %63, label %53, !dbg !7455, !llvm.loop !7456

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7458
  %65 = load i32, i32* %64, align 4, !dbg !7458
  %66 = and i32 %65, 4, !dbg !7460
  %67 = icmp eq i32 %66, 0, !dbg !7460
  br i1 %67, label %84, label %68, !dbg !7461

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7462
  %70 = load i8, i8* %69, align 4, !dbg !7462
  %71 = icmp eq i8 %70, 2, !dbg !7463
  br i1 %71, label %72, label %84, !dbg !7464

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7465
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7467
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7468
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7469
  %74 = load i16, i16* %73, align 2, !dbg !7469
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #21, !dbg !7470
  %75 = load i16, i16* %73, align 2, !dbg !7471
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #21, !dbg !7472
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7473
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7474
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7475
  %76 = load i16, i16* %73, align 2, !dbg !7476
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #21, !dbg !7477
  %77 = load i16, i16* %73, align 2, !dbg !7478
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #21, !dbg !7479
  br label %78, !dbg !7480

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7481
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7483
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7484
  %79 = load i16, i16* %73, align 2, !dbg !7485
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #21, !dbg !7486
  %80 = load i16, i16* %73, align 2, !dbg !7487
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #21, !dbg !7488
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7489
  call void @llvm.dbg.value(metadata i32 %81, metadata !7390, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !7394
  %82 = and i32 %81, 256, !dbg !7490
  %83 = icmp eq i32 %82, 0, !dbg !7490
  br i1 %83, label %84, label %78, !dbg !7490, !llvm.loop !7491

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #22, !dbg !7493
  br label %116, !dbg !7494

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7495
  %87 = load i32, i32* %86, align 4, !dbg !7495
  %88 = and i32 %87, 2, !dbg !7498
  %89 = icmp eq i32 %88, 0, !dbg !7498
  br i1 %89, label %115, label %90, !dbg !7499

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !7500
  %92 = load %struct.anon.9*, %struct.anon.9** %91, align 4, !dbg !7500
  %93 = icmp eq %struct.anon.9* %92, null, !dbg !7501
  br i1 %93, label %94, label %115, !dbg !7502

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7503
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !7505
  %97 = load i8, i8* %96, align 1, !dbg !7505
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #22, !dbg !7506
  call void @llvm.dbg.value(metadata i32 %98, metadata !7390, metadata !DIExpression()), !dbg !7394
  %99 = load i8*, i8** %46, align 4, !dbg !7507
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !7509
  %101 = load i8, i8* %100, align 1, !dbg !7509
  %102 = zext i8 %101 to i32, !dbg !7509
  %103 = and i32 %98, %102, !dbg !7510
  %104 = icmp eq i32 %103, 0, !dbg !7511
  br i1 %104, label %105, label %115, !dbg !7512

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !7513
  %107 = load i8, i8* %106, align 1, !dbg !7513
  %108 = zext i8 %107 to i32, !dbg !7513
  %109 = and i32 %98, %108, !dbg !7514
  %110 = icmp eq i32 %109, 0, !dbg !7515
  br i1 %110, label %111, label %115, !dbg !7516

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7517
  %113 = load i16, i16* %112, align 2, !dbg !7517
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #21, !dbg !7519
  %114 = load i16, i16* %112, align 2, !dbg !7520
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #21, !dbg !7521
  br label %115, !dbg !7522

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !7523
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !7524
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7525
  %118 = sub i32 0, %117, !dbg !7525
  call void @llvm.dbg.value(metadata i32 %118, metadata !7392, metadata !DIExpression()), !dbg !7526
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7527
  %120 = icmp ult i32 %119, %118, !dbg !7529
  br i1 %120, label %121, label %122, !dbg !7530

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7531
  br label %122, !dbg !7533

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7534
  %124 = and i32 %123, -513, !dbg !7534
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7534
  br label %125, !dbg !7537

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !7394
  ret void, !dbg !7538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7539 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7541, metadata !DIExpression()), !dbg !7545
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !7546
  %3 = icmp eq i32 %2, -1, !dbg !7548
  br i1 %3, label %12, label %4, !dbg !7549

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !7543, metadata !DIExpression()), !dbg !7545
  %5 = sub i32 0, %2, !dbg !7550
  call void @llvm.dbg.value(metadata i32 %5, metadata !7544, metadata !DIExpression()), !dbg !7545
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7552
  %7 = load i8, i8* %6, align 4, !dbg !7552
  %8 = zext i8 %7 to i32, !dbg !7554
  %9 = icmp ugt i32 %8, %5, !dbg !7555
  br i1 %9, label %10, label %12, !dbg !7556

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !7557
  tail call void @DelayAWhile_UST(i32 noundef %11) #21, !dbg !7559
  br label %12, !dbg !7560

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !7561
  call void @llvm.dbg.value(metadata i32 %13, metadata !7542, metadata !DIExpression()), !dbg !7545
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7562
  %15 = load i16, i16* %14, align 2, !dbg !7562
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7563
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !7563
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !7564
  %19 = load i8, i8* %18, align 1, !dbg !7564
  %20 = zext i8 %19 to i32, !dbg !7565
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #21, !dbg !7566
  tail call void @RestoreIRQMask(i32 noundef %13) #22, !dbg !7567
  ret void, !dbg !7568
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7569 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !7572
  call void @llvm.dbg.value(metadata i32 %1, metadata !7571, metadata !DIExpression()), !dbg !7573
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7574
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7575
  %3 = and i32 %2, -513, !dbg !7575
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7575
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !7578
  ret void, !dbg !7579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7580 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7584, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i32 %1, metadata !7585, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i8 %2, metadata !7586, metadata !DIExpression()), !dbg !7588
  %4 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !7589
  call void @llvm.dbg.value(metadata i32 %4, metadata !7587, metadata !DIExpression()), !dbg !7588
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7590
  %6 = load i16, i16* %5, align 2, !dbg !7590
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #21, !dbg !7591
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7592
  %7 = zext i8 %2 to i32, !dbg !7593
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7594
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7595
  %8 = load i16, i16* %5, align 2, !dbg !7596
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #21, !dbg !7597
  tail call void @RestoreIRQMask(i32 noundef %4) #22, !dbg !7598
  ret void, !dbg !7599
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !7600 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !7605
  call void @llvm.dbg.value(metadata i32 %1, metadata !7604, metadata !DIExpression()), !dbg !7606
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !7607
  br i1 %2, label %4, label %3, !dbg !7609

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !7610
  br label %4, !dbg !7612

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !7613
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !7613
  ret i32 %5, !dbg !7614
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !7615 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7622
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7619, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i8 0, metadata !7621, metadata !DIExpression()), !dbg !7623
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7624
  %3 = load i32, i32* %2, align 4, !dbg !7624
  %4 = xor i32 %3, -1, !dbg !7624
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7624
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !7624
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !7624
  %8 = icmp eq i32 %4, %7, !dbg !7624
  br i1 %8, label %10, label %9, !dbg !7627

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #22, !dbg !7628
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !7628
  unreachable, !dbg !7628

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !7630
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7631
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7631
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !7632
  %14 = load i8, i8* %13, align 1, !dbg !7632
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #22, !dbg !7633
  call void @llvm.dbg.value(metadata i32 %15, metadata !7620, metadata !DIExpression()), !dbg !7623
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7634
  %17 = load i8*, i8** %16, align 4, !dbg !7634
  %18 = load i8, i8* %17, align 1, !dbg !7636
  %19 = zext i8 %18 to i32, !dbg !7636
  %20 = and i32 %15, %19, !dbg !7637
  %21 = icmp eq i32 %20, 0, !dbg !7638
  br i1 %21, label %22, label %23, !dbg !7639

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !7640
  call void @llvm.dbg.value(metadata i8 1, metadata !7621, metadata !DIExpression()), !dbg !7623
  br label %23, !dbg !7642

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !7621, metadata !DIExpression()), !dbg !7623
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !7643
  ret i1 %21, !dbg !7644
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7645 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7647, metadata !DIExpression()), !dbg !7648
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7649, !range !2596
  %2 = icmp eq i8 %1, 0, !dbg !7649
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7649
  %4 = icmp eq i8 %3, 0, !dbg !7649
  %5 = select i1 %2, i1 true, i1 %4, !dbg !7649
  br i1 %5, label %6, label %7, !dbg !7649

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #22, !dbg !7652
  tail call void @Flash_ReturnReady() #22, !dbg !7654
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !7654
  unreachable, !dbg !7654

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7658
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !7647, metadata !DIExpression()), !dbg !7648
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #22, !dbg !7659
  ret void, !dbg !7660
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7661 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7663, metadata !DIExpression()), !dbg !7665
  %2 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !7666
  call void @llvm.dbg.value(metadata i32 %2, metadata !7664, metadata !DIExpression()), !dbg !7665
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7667
  %4 = load i16, i16* %3, align 2, !dbg !7667
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7668
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !7668
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !7669
  %8 = load i8, i8* %7, align 1, !dbg !7669
  %9 = zext i8 %8 to i32, !dbg !7670
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #21, !dbg !7671
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7672
  %11 = load i8, i8* %10, align 4, !dbg !7672
  %12 = icmp eq i8 %11, 0, !dbg !7674
  br i1 %12, label %14, label %13, !dbg !7675

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !7676
  br label %14, !dbg !7678

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #22, !dbg !7679
  tail call void @RestoreIRQMask(i32 noundef %2) #22, !dbg !7680
  ret void, !dbg !7681
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7682 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !7685
  call void @llvm.dbg.value(metadata i32 %1, metadata !7684, metadata !DIExpression()), !dbg !7686
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7687
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !7688
  ret void, !dbg !7689
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7690 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7694
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7692, metadata !DIExpression()), !dbg !7695
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7696, !range !2596
  %3 = icmp ne i8 %2, 0, !dbg !7696
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7696
  %5 = icmp eq i8 %4, 0, !dbg !7696
  %6 = select i1 %3, i1 %5, i1 false, !dbg !7696
  br i1 %6, label %8, label %7, !dbg !7696

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #22, !dbg !7699
  tail call void @Flash_ReturnReady() #22, !dbg !7701
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !7701
  unreachable, !dbg !7701

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7705
  %10 = load i32, i32* %9, align 4, !dbg !7705
  %11 = xor i32 %10, -1, !dbg !7705
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7705
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !7705
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !7705
  %15 = icmp eq i32 %11, %14, !dbg !7705
  br i1 %15, label %17, label %16, !dbg !7708

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #22, !dbg !7709
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !7709
  unreachable, !dbg !7709

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #22, !dbg !7711
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !7712

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !7713
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !7715
  %23 = load i8, i8* %22, align 1, !dbg !7715
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #22, !dbg !7716
  call void @llvm.dbg.value(metadata i32 %24, metadata !7693, metadata !DIExpression()), !dbg !7695
  %25 = load i8*, i8** %19, align 4, !dbg !7717
  %26 = load i8, i8* %25, align 1, !dbg !7719
  %27 = zext i8 %26 to i32, !dbg !7719
  %28 = and i32 %24, %27, !dbg !7720
  %29 = icmp eq i32 %28, 0, !dbg !7721
  br i1 %29, label %30, label %20, !dbg !7722, !llvm.loop !7723

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #22, !dbg !7725
  ret void, !dbg !7726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !7727 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7729, metadata !DIExpression()), !dbg !7730
  ret void, !dbg !7731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !7732 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7755, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7756, metadata !DIExpression()), !dbg !7758
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7759
  %4 = load i8*, i8** %3, align 4, !dbg !7759
  call void @llvm.dbg.value(metadata i8* %4, metadata !7757, metadata !DIExpression()), !dbg !7758
  store i8 1, i8* %4, align 1, !dbg !7760
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7761
  store i8 2, i8* %5, align 1, !dbg !7762
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !7763
  store i8 8, i8* %6, align 1, !dbg !7764
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !7765
  store i8 4, i8* %7, align 1, !dbg !7766
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !7767
  store i8 60, i8* %8, align 1, !dbg !7768
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !7769
  store i8 -128, i8* %9, align 1, !dbg !7770
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !7771
  store i8 96, i8* %10, align 1, !dbg !7772
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7773
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7773
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !7774
  store i8 43, i8* %13, align 1, !dbg !7775
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7776
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !7777
  store i8 43, i8* %15, align 1, !dbg !7778
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7779
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !7780
  store i8 47, i8* %17, align 1, !dbg !7781
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7782
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !7783
  store i8 5, i8* %19, align 1, !dbg !7784
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7785
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !7786
  store i8 1, i8* %21, align 1, !dbg !7787
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7788
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !7789
  store i8 43, i8* %23, align 1, !dbg !7790
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !7791
  store i8 22, i8* %24, align 4, !dbg !7792
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !7793
  %26 = load i8, i8* %25, align 1, !dbg !7793
  %27 = icmp eq i8 %26, 32, !dbg !7795
  br i1 %27, label %28, label %49, !dbg !7796

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !7797
  %30 = load i8, i8* %29, align 1, !dbg !7797
  %31 = icmp eq i8 %30, 24, !dbg !7798
  br i1 %31, label %32, label %41, !dbg !7799

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7800
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !7802
  store i8 117, i8* %34, align 1, !dbg !7803
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7804
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !7805
  store i8 122, i8* %36, align 1, !dbg !7806
  %37 = load i8, i8* %25, align 1, !dbg !7807
  %38 = icmp eq i8 %37, 32, !dbg !7809
  br i1 %38, label %39, label %49, !dbg !7810

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !7812
  br label %41, !dbg !7812

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !7812
  %43 = icmp eq i8 %42, 22, !dbg !7813
  br i1 %43, label %44, label %49, !dbg !7814

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7815
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !7817
  store i8 117, i8* %46, align 1, !dbg !7818
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7819
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !7820
  store i8 122, i8* %48, align 1, !dbg !7821
  br label %49, !dbg !7822

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !7823
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !7824
  ret i32 0, !dbg !7825
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !7826 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7828, metadata !DIExpression()), !dbg !7832
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7833
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !7829, metadata !DIExpression()), !dbg !7832
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #23, !dbg !7834
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !7835
  %5 = load i8, i8* %4, align 1, !dbg !7837
  %6 = icmp eq i8 %5, -62, !dbg !7838
  br i1 %6, label %7, label %15, !dbg !7839

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !7840
  %9 = load i8, i8* %8, align 1, !dbg !7840
  %10 = icmp eq i8 %9, 32, !dbg !7841
  br i1 %10, label %11, label %15, !dbg !7842

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !7843
  %13 = load i8, i8* %12, align 1, !dbg !7843
  %14 = icmp eq i8 %13, 22, !dbg !7844
  br i1 %14, label %48, label %15, !dbg !7845

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !7846
  %17 = bitcast i8* %16 to i16*, !dbg !7846
  %18 = load i16, i16* %17, align 2, !dbg !7846
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7847
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !7847
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !7847
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !7848
  %23 = load i8, i8* %22, align 1, !dbg !7848
  %24 = zext i8 %23 to i32, !dbg !7849
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #21, !dbg !7850
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #22, !dbg !7851
  %25 = load i16, i16* %17, align 2, !dbg !7852
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !7853
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !7854
  call void @llvm.dbg.value(metadata i8* %2, metadata !7831, metadata !DIExpression(DW_OP_deref)), !dbg !7832
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !7855
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !7856
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !7857
  %30 = load i8, i8* %29, align 1, !dbg !7857
  %31 = zext i8 %30 to i32, !dbg !7858
  call void @llvm.dbg.value(metadata i32 %31, metadata !7830, metadata !DIExpression()), !dbg !7832
  %32 = shl nuw nsw i32 %31, 8, !dbg !7859
  %33 = load i8, i8* %2, align 1, !dbg !7860
  call void @llvm.dbg.value(metadata i8 %33, metadata !7831, metadata !DIExpression()), !dbg !7832
  %34 = zext i8 %33 to i32, !dbg !7860
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !7861
  %36 = bitcast i8* %35 to i8**, !dbg !7861
  %37 = load i8*, i8** %36, align 4, !dbg !7861
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !7862
  %39 = load i8, i8* %38, align 1, !dbg !7862
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !7863
  %41 = load i8, i8* %40, align 1, !dbg !7863
  %42 = or i8 %41, %39, !dbg !7864
  %43 = zext i8 %42 to i32, !dbg !7864
  %44 = xor i32 %43, -1, !dbg !7865
  %45 = and i32 %44, %34, !dbg !7866
  %46 = or i32 %45, %32, !dbg !7867
  call void @llvm.dbg.value(metadata i32 %46, metadata !7830, metadata !DIExpression()), !dbg !7832
  %47 = load i16, i16* %17, align 2, !dbg !7868
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #21, !dbg !7869
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #22, !dbg !7870
  br label %48, !dbg !7871

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #23, !dbg !7872
  ret i32 0, !dbg !7872
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7873 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7875, metadata !DIExpression()), !dbg !7877
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #23, !dbg !7878
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !7879

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !7880
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !7882
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !7883
  call void @llvm.dbg.value(metadata i8* %2, metadata !7876, metadata !DIExpression(DW_OP_deref)), !dbg !7877
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !7884
  %10 = load i8, i8* %2, align 1, !dbg !7885
  call void @llvm.dbg.value(metadata i8 %10, metadata !7876, metadata !DIExpression()), !dbg !7877
  %11 = load i8*, i8** %5, align 4, !dbg !7886
  %12 = load i8, i8* %11, align 1, !dbg !7887
  %13 = and i8 %12, %10, !dbg !7888
  %14 = icmp eq i8 %13, 0, !dbg !7889
  br i1 %14, label %15, label %6, !dbg !7890, !llvm.loop !7891

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #23, !dbg !7893
  ret void, !dbg !7893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !7894 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7896, metadata !DIExpression()), !dbg !7899
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7897, metadata !DIExpression()), !dbg !7899
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7900
  %4 = load i8*, i8** %3, align 4, !dbg !7900
  call void @llvm.dbg.value(metadata i8* %4, metadata !7898, metadata !DIExpression()), !dbg !7899
  store i8 1, i8* %4, align 1, !dbg !7901
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7902
  store i8 2, i8* %5, align 1, !dbg !7903
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !7904
  store i8 -128, i8* %6, align 1, !dbg !7905
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !7906
  store i8 -128, i8* %7, align 1, !dbg !7907
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !7908
  store i8 60, i8* %8, align 1, !dbg !7909
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !7910
  store i8 -128, i8* %9, align 1, !dbg !7911
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7912
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7912
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !7913
  store i8 -97, i8* %12, align 1, !dbg !7914
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7915
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !7916
  store i8 53, i8* %14, align 1, !dbg !7917
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7918
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !7919
  store i8 53, i8* %16, align 1, !dbg !7920
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7921
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !7922
  store i8 5, i8* %18, align 1, !dbg !7923
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7924
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !7925
  store i8 1, i8* %20, align 1, !dbg !7926
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7927
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !7928
  store i8 117, i8* %22, align 1, !dbg !7929
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7930
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !7931
  store i8 122, i8* %24, align 1, !dbg !7932
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !7933
  store i8 22, i8* %25, align 4, !dbg !7934
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !7935
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !7936
  ret i32 0, !dbg !7937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !7938 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7940, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7941, metadata !DIExpression()), !dbg !7942
  ret i32 0, !dbg !7943
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !7944 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !7946, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7947, metadata !DIExpression()), !dbg !7948
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !7949
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !7950
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !7951
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !7952
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !7953
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !7954
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !7955
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !7956
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !7957
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !7958
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !7959
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !7960
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !7961
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !7962
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !7963
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !7964
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !7965
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !7966
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !7967
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !7968
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !7969
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !7970
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !7971
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !7972
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !7973
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !7974
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !7975
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !7976
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !7977
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !7978
  %18 = tail call i32 @custom_get_NORFLASH_Size() #21, !dbg !7979
  %19 = icmp ugt i32 %18, 16777216, !dbg !7981
  %20 = select i1 %19, i8 4, i8 3, !dbg !7982
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !7983
  store i8 %20, i8* %21, align 1, !dbg !7985
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7986
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7986
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !7987
  store i8 0, i8* %24, align 1, !dbg !7988
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7989
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !7990
  store i8 -81, i8* %26, align 1, !dbg !7991
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7992
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !7993
  store i8 -97, i8* %28, align 1, !dbg !7994
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7995
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !7996
  store i8 2, i8* %30, align 1, !dbg !7997
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7998
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !7999
  store i8 32, i8* %32, align 1, !dbg !8000
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8001
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !8002
  store i8 82, i8* %34, align 1, !dbg !8003
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8004
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !8005
  store i8 -40, i8* %36, align 1, !dbg !8006
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8007
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !8008
  store i8 -80, i8* %38, align 1, !dbg !8009
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8010
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !8011
  store i8 48, i8* %40, align 1, !dbg !8012
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8013
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !8014
  store i8 6, i8* %42, align 1, !dbg !8015
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8016
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !8017
  store i8 -71, i8* %44, align 1, !dbg !8018
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8019
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !8020
  store i8 -85, i8* %46, align 1, !dbg !8021
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8022
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !8023
  store i8 5, i8* %48, align 1, !dbg !8024
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !8025
  store i16 0, i16* %49, align 4, !dbg !8026
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !8027
  store %struct.anon.9* null, %struct.anon.9** %50, align 4, !dbg !8028
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !8029
  store %struct.anon.9* null, %struct.anon.9** %51, align 4, !dbg !8030
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !8031
  store i8 0, i8* %52, align 4, !dbg !8032
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8033
  store i8 5, i8* %53, align 4, !dbg !8034
  ret i32 0, !dbg !8035
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !8036 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8038, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i8* %1, metadata !8039, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i8* %1, metadata !8040, metadata !DIExpression()), !dbg !8056
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8057
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8053, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata i32 0, metadata !8054, metadata !DIExpression()), !dbg !8056
  %4 = bitcast i8* %1 to i32*, !dbg !8058
  store i32 0, i32* %4, align 4, !dbg !8059
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !8054, metadata !DIExpression()), !dbg !8056
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8060
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !8061
  %9 = load i32, i32* %8, align 4, !dbg !8061
  %10 = icmp eq i32 %9, 0, !dbg !8062
  br i1 %10, label %34, label %11, !dbg !8063

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !8063

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !8054, metadata !DIExpression()), !dbg !8056
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !8064
  store i32 %17, i32* %19, align 4, !dbg !8066
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8067
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !8068
  %22 = load i32, i32* %21, align 4, !dbg !8068
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !8069
  store i32 %22, i32* %23, align 4, !dbg !8070
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8071
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !8072
  %26 = load i32, i32* %25, align 4, !dbg !8072
  %27 = load i32, i32* %4, align 4, !dbg !8073
  %28 = add i32 %27, %26, !dbg !8073
  store i32 %28, i32* %4, align 4, !dbg !8073
  %29 = add i32 %18, 1, !dbg !8074
  call void @llvm.dbg.value(metadata i32 %29, metadata !8054, metadata !DIExpression()), !dbg !8056
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8060
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !8061
  %32 = load i32, i32* %31, align 4, !dbg !8061
  %33 = icmp eq i32 %32, 0, !dbg !8062
  br i1 %33, label %34, label %16, !dbg !8063, !llvm.loop !8075

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !8056
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !8077
  %37 = bitcast i8* %36 to i32*, !dbg !8077
  store i32 %35, i32* %37, align 4, !dbg !8078
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !8079
  %39 = bitcast i8* %38 to i16*, !dbg !8079
  store i16 512, i16* %39, align 4, !dbg !8080
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #22, !dbg !8081
  br label %40, !dbg !8082

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #22, !dbg !8083
  call void @llvm.dbg.value(metadata i32 %41, metadata !8055, metadata !DIExpression()), !dbg !8056
  %42 = icmp eq i32 %41, -121, !dbg !8085
  br i1 %42, label %40, label %43, !dbg !8086, !llvm.loop !8087

43:                                               ; preds = %40
  ret i32 0, !dbg !8089
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !8090 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8092, metadata !DIExpression()), !dbg !8096
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8097
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !8093, metadata !DIExpression()), !dbg !8096
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !8098
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !8099

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8100
  call void @llvm.dbg.value(metadata i32 %8, metadata !8095, metadata !DIExpression()), !dbg !8096
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8102, !range !2596
  %10 = icmp eq i8 %9, 0, !dbg !8102
  br i1 %10, label %12, label %11, !dbg !8104

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #22, !dbg !8105
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8107
  br label %12, !dbg !8108

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8109
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !8110
  %15 = load i8, i8* %14, align 1, !dbg !8110
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #22, !dbg !8111
  call void @llvm.dbg.value(metadata i32 %16, metadata !8094, metadata !DIExpression()), !dbg !8096
  %17 = load i8*, i8** %6, align 4, !dbg !8112
  %18 = load i8, i8* %17, align 1, !dbg !8114
  %19 = zext i8 %18 to i32, !dbg !8114
  %20 = and i32 %16, %19, !dbg !8115
  %21 = icmp eq i32 %20, 0, !dbg !8116
  br i1 %21, label %22, label %25, !dbg !8117

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !8118
  tail call void @RestoreIRQMask(i32 noundef %8) #22, !dbg !8120
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8121
  %24 = bitcast i8* %23 to i8**, !dbg !8121
  store i8* null, i8** %24, align 4, !dbg !8122
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !8123
  ret i32 0, !dbg !8124

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #22, !dbg !8125
  br label %7, !dbg !8099, !llvm.loop !8127
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !8129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8131, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %1, metadata !8132, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 0, metadata !8133, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 1, metadata !8137, metadata !DIExpression()), !dbg !8145
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8146
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8138, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 0, metadata !8139, metadata !DIExpression()), !dbg !8145
  %4 = bitcast i8* %0 to i32*, !dbg !8147
  %5 = load i32, i32* %4, align 4, !dbg !8147
  %6 = xor i32 %5, -1, !dbg !8147
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8147
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !8147
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !8147
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !8147
  %11 = icmp eq i32 %6, %10, !dbg !8147
  br i1 %11, label %13, label %12, !dbg !8150

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #22, !dbg !8151
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !8151
  unreachable, !dbg !8151

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !8153
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8154
  store i8 2, i8* %14, align 4, !dbg !8155
  call void @llvm.dbg.value(metadata i32 %19, metadata !8139, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %1, metadata !8132, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !8145
  br label %15, !dbg !8156

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #22, !dbg !8157
  call void @llvm.dbg.value(metadata i32 %16, metadata !8133, metadata !DIExpression()), !dbg !8145
  %17 = icmp eq i32 %16, -121, !dbg !8159
  br i1 %17, label %15, label %18, !dbg !8160, !llvm.loop !8161

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !8163
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8164
  %21 = bitcast i8* %20 to i8**, !dbg !8164
  %22 = load i8*, i8** %21, align 4, !dbg !8164
  %23 = ptrtoint i8* %22 to i32, !dbg !8165
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #21, !dbg !8166
  call void @llvm.dbg.value(metadata i32 %24, metadata !8134, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %24, metadata !8135, metadata !DIExpression()), !dbg !8145
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !8167
  %26 = bitcast i8* %25 to i16*, !dbg !8167
  %27 = load i16, i16* %26, align 2, !dbg !8167
  %28 = zext i16 %27 to i32, !dbg !8168
  call void @llvm.dbg.value(metadata i32 %28, metadata !8140, metadata !DIExpression()), !dbg !8169
  %29 = lshr i32 %24, 10, !dbg !8170
  call void @llvm.dbg.value(metadata i32 %29, metadata !8143, metadata !DIExpression()), !dbg !8169
  %30 = and i32 %29, %28, !dbg !8171
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !8173
  %33 = icmp eq i32 %32, 0, !dbg !8173
  call void @llvm.dbg.value(metadata i32 0, metadata !8144, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32 %29, metadata !8143, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32 %28, metadata !8140, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32 1, metadata !8137, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %24, metadata !8135, metadata !DIExpression()), !dbg !8145
  br i1 %33, label %34, label %51, !dbg !8173

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !8144, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32 %36, metadata !8143, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32 %37, metadata !8140, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32 %38, metadata !8137, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %39, metadata !8135, metadata !DIExpression()), !dbg !8145
  %40 = and i32 %37, 1, !dbg !8174
  %41 = icmp eq i32 %40, 0, !dbg !8174
  %42 = add i32 %35, 10, !dbg !8180
  %43 = shl nuw i32 1, %42, !dbg !8180
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !8180
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !8180
  call void @llvm.dbg.value(metadata i32 %45, metadata !8137, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %44, metadata !8135, metadata !DIExpression()), !dbg !8145
  %46 = lshr i32 %37, 1, !dbg !8181
  call void @llvm.dbg.value(metadata i32 %46, metadata !8140, metadata !DIExpression()), !dbg !8169
  %47 = lshr i32 %36, 1, !dbg !8182
  call void @llvm.dbg.value(metadata i32 %47, metadata !8143, metadata !DIExpression()), !dbg !8169
  %48 = add i32 %35, 1, !dbg !8183
  call void @llvm.dbg.value(metadata i32 %48, metadata !8144, metadata !DIExpression()), !dbg !8169
  %49 = and i32 %36, 2, !dbg !8184
  %50 = icmp eq i32 %49, 0, !dbg !8184
  br i1 %50, label %34, label %51, !dbg !8185, !llvm.loop !8186

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !8188
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !8189
  call void @llvm.dbg.value(metadata i32 %53, metadata !8137, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %52, metadata !8135, metadata !DIExpression()), !dbg !8145
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !8190

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8191
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !8191
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !8191
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !8193
  br label %70, !dbg !8194

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8195
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !8195
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !8195
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !8196
  br label %70, !dbg !8197

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8198
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !8198
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !8198
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !8199
  br label %70, !dbg !8200

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #22, !dbg !8201
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !8201
  unreachable, !dbg !8201

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !8205
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !8205
  store i8 %73, i8* %74, align 1, !dbg !8205
  call void @llvm.dbg.value(metadata i32 %53, metadata !8137, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %52, metadata !8135, metadata !DIExpression()), !dbg !8145
  %75 = trunc i32 %19 to i8, !dbg !8206
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !8206

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8207
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !8207
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !8207
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !8209
  br label %91, !dbg !8210

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8211
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !8211
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !8211
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !8212
  br label %91, !dbg !8213

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8214
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !8214
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !8214
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !8215
  br label %91, !dbg !8216

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !8217
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !8217
  store i8 %94, i8* %95, align 1, !dbg !8217
  br label %96, !dbg !8218

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !8136, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %53, metadata !8137, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %16, metadata !8133, metadata !DIExpression()), !dbg !8145
  %97 = icmp eq i32 %53, 0, !dbg !8218
  br i1 %97, label %111, label %98, !dbg !8221

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !8222
  call void @llvm.dbg.value(metadata i8* %99, metadata !8136, metadata !DIExpression()), !dbg !8145
  %100 = ptrtoint i8* %99 to i32, !dbg !8223
  call void @llvm.dbg.value(metadata i32 %100, metadata !8136, metadata !DIExpression()), !dbg !8145
  br label %101, !dbg !8221

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !8137, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %103, metadata !8136, metadata !DIExpression()), !dbg !8145
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #22, !dbg !8224
  br label %104, !dbg !8226

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #22, !dbg !8227
  call void @llvm.dbg.value(metadata i32 %105, metadata !8133, metadata !DIExpression()), !dbg !8145
  %106 = icmp eq i32 %105, -121, !dbg !8229
  br i1 %106, label %104, label %107, !dbg !8231, !llvm.loop !8232

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !8234
  call void @llvm.dbg.value(metadata i32 %108, metadata !8137, metadata !DIExpression()), !dbg !8145
  %109 = add i32 %103, %52, !dbg !8235
  call void @llvm.dbg.value(metadata i32 %109, metadata !8136, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %105, metadata !8133, metadata !DIExpression()), !dbg !8145
  %110 = icmp eq i32 %108, 0, !dbg !8218
  br i1 %110, label %111, label %101, !dbg !8221, !llvm.loop !8236

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !8145
  store i8 0, i8* %14, align 4, !dbg !8238
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !8239
  ret i32 %112, !dbg !8240
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !8241 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8243, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i8* %1, metadata !8244, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i8* %2, metadata !8245, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i32 %3, metadata !8246, metadata !DIExpression()), !dbg !8260
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8261
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !8247, metadata !DIExpression()), !dbg !8260
  %8 = ptrtoint i8* %1 to i32, !dbg !8262
  call void @llvm.dbg.value(metadata i32 %8, metadata !8249, metadata !DIExpression()), !dbg !8260
  %9 = bitcast i8** %5 to i8*, !dbg !8263
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #23, !dbg !8263
  call void @llvm.dbg.value(metadata i8* %2, metadata !8250, metadata !DIExpression()), !dbg !8260
  store i8* %2, i8** %5, align 4, !dbg !8264
  call void @llvm.dbg.value(metadata i32 0, metadata !8252, metadata !DIExpression()), !dbg !8260
  %10 = bitcast i32* %6 to i8*, !dbg !8265
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8265
  %11 = bitcast i8* %0 to i32*, !dbg !8266
  %12 = load i32, i32* %11, align 4, !dbg !8266
  %13 = xor i32 %12, -1, !dbg !8266
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8266
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !8266
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !8266
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !8266
  %18 = icmp eq i32 %13, %17, !dbg !8266
  br i1 %18, label %20, label %19, !dbg !8269

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #22, !dbg !8270
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !8270
  unreachable, !dbg !8270

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !8272
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8273
  store i8 1, i8* %21, align 4, !dbg !8274
  br label %22, !dbg !8275

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #22, !dbg !8276
  call void @llvm.dbg.value(metadata i32 %23, metadata !8252, metadata !DIExpression()), !dbg !8260
  %24 = icmp eq i32 %23, -121, !dbg !8278
  br i1 %24, label %22, label %25, !dbg !8279, !llvm.loop !8280

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !8282
  br i1 %26, label %104, label %27, !dbg !8283

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !8283

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !8284
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !8260
  call void @llvm.dbg.value(metadata i32 %38, metadata !8249, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i32 %37, metadata !8246, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i8* %36, metadata !8250, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i8* %36, metadata !8251, metadata !DIExpression()), !dbg !8260
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8285
  %40 = shl i32 %39, 1, !dbg !8286
  %41 = add i32 %40, -1, !dbg !8287
  %42 = and i32 %41, %38, !dbg !8288
  %43 = sub i32 %40, %42, !dbg !8289
  %44 = icmp ugt i32 %37, %43, !dbg !8290
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !8291
  call void @llvm.dbg.value(metadata i32 %45, metadata !8253, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i32 %45, metadata !8254, metadata !DIExpression()), !dbg !8260
  store i32 %45, i32* %6, align 4, !dbg !8292
  call void @llvm.dbg.value(metadata i8* %36, metadata !8250, metadata !DIExpression()), !dbg !8260
  %46 = ptrtoint i8* %36 to i32, !dbg !8293
  %47 = and i32 %46, 134217728, !dbg !8294
  %48 = icmp eq i32 %47, 0, !dbg !8294
  br i1 %48, label %58, label %49, !dbg !8295

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !8256, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.value(metadata i32 %45, metadata !8254, metadata !DIExpression()), !dbg !8260
  %50 = icmp eq i32 %45, 0, !dbg !8297
  br i1 %50, label %58, label %51, !dbg !8300

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !8256, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.value(metadata i8* %36, metadata !8250, metadata !DIExpression()), !dbg !8260
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !8301
  %54 = load i8, i8* %53, align 1, !dbg !8301
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !8303
  store i8 %54, i8* %55, align 1, !dbg !8304
  %56 = add nuw i32 %52, 1, !dbg !8305
  call void @llvm.dbg.value(metadata i32 %56, metadata !8256, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.value(metadata i32 %45, metadata !8254, metadata !DIExpression()), !dbg !8260
  %57 = icmp eq i32 %56, %45, !dbg !8297
  br i1 %57, label %58, label %51, !dbg !8300, !llvm.loop !8306

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !8308
  call void @llvm.dbg.value(metadata i8* %59, metadata !8251, metadata !DIExpression()), !dbg !8260
  %60 = load i32, i32* %29, align 4, !dbg !8309
  %61 = and i32 %60, 16, !dbg !8311
  %62 = icmp eq i32 %61, 0, !dbg !8311
  br i1 %62, label %63, label %64, !dbg !8312

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #22, !dbg !8313
  br label %64, !dbg !8315

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !8316
  %66 = icmp eq i8 %65, 4, !dbg !8318
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !8319
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !8319
  %69 = load i8, i8* %68, align 1, !dbg !8319
  %70 = zext i8 %69 to i32, !dbg !8319
  br i1 %66, label %71, label %75, !dbg !8320

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !8250, metadata !DIExpression(DW_OP_deref)), !dbg !8260
  call void @llvm.dbg.value(metadata i32* %6, metadata !8254, metadata !DIExpression(DW_OP_deref)), !dbg !8260
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #21, !dbg !8321
  call void @llvm.dbg.value(metadata i32 %72, metadata !8255, metadata !DIExpression()), !dbg !8260
  %73 = load i8*, i8** %5, align 4, !dbg !8323
  call void @llvm.dbg.value(metadata i8* %73, metadata !8250, metadata !DIExpression()), !dbg !8260
  %74 = load i32, i32* %6, align 4, !dbg !8324
  call void @llvm.dbg.value(metadata i32 %74, metadata !8254, metadata !DIExpression()), !dbg !8260
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #21, !dbg !8325
  br label %79, !dbg !8326

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #21, !dbg !8327
  call void @llvm.dbg.value(metadata i32 %76, metadata !8255, metadata !DIExpression()), !dbg !8260
  %77 = load i8*, i8** %5, align 4, !dbg !8329
  call void @llvm.dbg.value(metadata i8* %77, metadata !8250, metadata !DIExpression()), !dbg !8260
  %78 = load i32, i32* %6, align 4, !dbg !8330
  call void @llvm.dbg.value(metadata i32 %78, metadata !8254, metadata !DIExpression()), !dbg !8260
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #21, !dbg !8331
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !8319
  call void @llvm.dbg.value(metadata i32 %80, metadata !8255, metadata !DIExpression()), !dbg !8260
  %81 = call i32 @SaveAndSetIRQMask() #22, !dbg !8332
  call void @llvm.dbg.value(metadata i32 %81, metadata !8248, metadata !DIExpression()), !dbg !8260
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8333
  %82 = load i8, i8* %30, align 1, !dbg !8334
  %83 = zext i8 %82 to i32, !dbg !8335
  %84 = add i32 %45, 1, !dbg !8336
  %85 = add i32 %84, %83, !dbg !8337
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8338
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8339
  call void @SF_DAL_FLAG_BUSY_SET() #22, !dbg !8340
  %86 = load i16, i16* %34, align 2, !dbg !8341
  call void @SFI_MacEnable(i16 noundef zeroext %86) #21, !dbg !8342
  %87 = load i16, i16* %34, align 2, !dbg !8343
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #21, !dbg !8344
  call void @RestoreIRQMask(i32 noundef %81) #22, !dbg !8345
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !8346

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !8347
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #22, !dbg !8349
  call void @llvm.dbg.value(metadata i32 %94, metadata !8252, metadata !DIExpression()), !dbg !8260
  %95 = icmp eq i32 %94, 0, !dbg !8350
  br i1 %95, label %92, label %96, !dbg !8351, !llvm.loop !8352

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !8354
  call void @llvm.dbg.value(metadata i32 %97, metadata !8254, metadata !DIExpression()), !dbg !8260
  %98 = load i8*, i8** %5, align 4, !dbg !8355
  call void @llvm.dbg.value(metadata i8* %98, metadata !8250, metadata !DIExpression()), !dbg !8260
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !8355
  call void @llvm.dbg.value(metadata i8* %99, metadata !8250, metadata !DIExpression()), !dbg !8260
  store i8* %99, i8** %5, align 4, !dbg !8355
  %100 = sub i32 %37, %45, !dbg !8356
  call void @llvm.dbg.value(metadata i32 %100, metadata !8246, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.value(metadata i32 undef, metadata !8249, metadata !DIExpression()), !dbg !8260
  %101 = icmp eq i32 %94, 1, !dbg !8357
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !8359
  br i1 %103, label %35, label %104, !dbg !8359, !llvm.loop !8360

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !8260
  call void @llvm.dbg.value(metadata i32 %105, metadata !8252, metadata !DIExpression()), !dbg !8260
  store i8 0, i8* %21, align 4, !dbg !8362
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !8363
  %106 = icmp eq i32 %105, 1, !dbg !8364
  %107 = select i1 %106, i32 0, i32 %105, !dbg !8260
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8366
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #23, !dbg !8366
  ret i32 %107, !dbg !8366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !8367 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8369, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 undef, metadata !8370, metadata !DIExpression()), !dbg !8371
  ret i32 -12, !dbg !8372
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8373 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8375, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 undef, metadata !8376, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 0, metadata !8378, metadata !DIExpression()), !dbg !8385
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8386
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8379, metadata !DIExpression()), !dbg !8385
  %4 = bitcast i8* %0 to i32*, !dbg !8387
  %5 = load i32, i32* %4, align 4, !dbg !8387
  %6 = xor i32 %5, -1, !dbg !8387
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8387
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !8387
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !8387
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !8387
  %11 = icmp eq i32 %6, %10, !dbg !8387
  br i1 %11, label %13, label %12, !dbg !8390

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #22, !dbg !8391
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !8391
  unreachable, !dbg !8391

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8393
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !8393
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8393
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !8394
  %18 = load i8, i8* %17, align 1, !dbg !8394
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #22, !dbg !8395
  call void @llvm.dbg.value(metadata i32 %19, metadata !8380, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8385
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8396
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !8397
  %22 = load i8, i8* %21, align 1, !dbg !8397
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #22, !dbg !8398
  call void @llvm.dbg.value(metadata i32 %23, metadata !8381, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8385
  %24 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8399
  call void @llvm.dbg.value(metadata i32 %24, metadata !8378, metadata !DIExpression()), !dbg !8385
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8400
  %26 = bitcast i8* %25 to i8**, !dbg !8400
  %27 = load i8*, i8** %26, align 4, !dbg !8400
  %28 = load i8, i8* %27, align 1, !dbg !8401
  %29 = zext i8 %28 to i32, !dbg !8401
  %30 = and i32 %19, %29, !dbg !8402
  %31 = icmp eq i32 %30, 0, !dbg !8403
  br i1 %31, label %32, label %62, !dbg !8404

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !8381, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8385
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !8405
  %34 = load i8, i8* %33, align 1, !dbg !8405
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !8406
  %36 = load i8, i8* %35, align 1, !dbg !8406
  %37 = or i8 %36, %34, !dbg !8407
  call void @llvm.dbg.value(metadata i8 %37, metadata !8382, metadata !DIExpression()), !dbg !8408
  %38 = zext i8 %37 to i32, !dbg !8409
  %39 = and i32 %23, %38, !dbg !8411
  %40 = icmp eq i32 %39, 0, !dbg !8412
  br i1 %40, label %41, label %46, !dbg !8413

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !8414
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !8415
  br i1 %45, label %51, label %46, !dbg !8415

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8416, !range !2596
  %48 = icmp eq i8 %47, 0, !dbg !8416
  br i1 %48, label %49, label %50, !dbg !8420

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #22, !dbg !8421
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !8421
  unreachable, !dbg !8421

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #22, !dbg !8423
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8424
  call void @llvm.dbg.value(metadata i32 -121, metadata !8377, metadata !DIExpression()), !dbg !8385
  br label %62, !dbg !8425

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !8426
  %53 = bitcast i8* %52 to i32*, !dbg !8426
  %54 = load i32, i32* %53, align 4, !dbg !8426
  %55 = and i32 %54, 2, !dbg !8429
  %56 = icmp eq i32 %55, 0, !dbg !8429
  br i1 %56, label %63, label %57, !dbg !8430

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8431
  %59 = bitcast i8* %58 to i16*, !dbg !8431
  %60 = load i16, i16* %59, align 2, !dbg !8431
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #21, !dbg !8433
  %61 = load i16, i16* %59, align 2, !dbg !8434
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #21, !dbg !8435
  br label %63, !dbg !8436

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !8377, metadata !DIExpression()), !dbg !8385
  tail call void @RestoreIRQMask(i32 noundef %24) #22, !dbg !8437
  br label %65, !dbg !8438

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !8439
  tail call void @SF_DAL_FLAG_SUS_CLR() #22, !dbg !8440
  call void @llvm.dbg.value(metadata i32 0, metadata !8377, metadata !DIExpression()), !dbg !8385
  tail call void @RestoreIRQMask(i32 noundef %24) #22, !dbg !8437
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #22, !dbg !8441
  call void @llvm.dbg.value(metadata i32 %64, metadata !8377, metadata !DIExpression()), !dbg !8385
  br label %65, !dbg !8444

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !8385
  call void @llvm.dbg.value(metadata i32 %66, metadata !8377, metadata !DIExpression()), !dbg !8385
  ret i32 %66, !dbg !8445
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8448, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32 undef, metadata !8449, metadata !DIExpression()), !dbg !8453
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8454
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8450, metadata !DIExpression()), !dbg !8453
  %4 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8455
  call void @llvm.dbg.value(metadata i32 %4, metadata !8452, metadata !DIExpression()), !dbg !8453
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #22, !dbg !8456
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !8457

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8458
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !8460
  %12 = load i8, i8* %11, align 1, !dbg !8460
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #22, !dbg !8461
  call void @llvm.dbg.value(metadata i32 %13, metadata !8451, metadata !DIExpression()), !dbg !8453
  %14 = load i8*, i8** %8, align 4, !dbg !8462
  %15 = load i8, i8* %14, align 1, !dbg !8464
  %16 = zext i8 %15 to i32, !dbg !8464
  %17 = and i32 %13, %16, !dbg !8465
  %18 = icmp eq i32 %17, 0, !dbg !8466
  br i1 %18, label %19, label %9, !dbg !8467, !llvm.loop !8468

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #22, !dbg !8470
  tail call void @RestoreIRQMask(i32 noundef %4) #22, !dbg !8471
  ret i32 0, !dbg !8472
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8473 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8475, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.value(metadata i32 undef, metadata !8476, metadata !DIExpression()), !dbg !8478
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8479
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8477, metadata !DIExpression()), !dbg !8478
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !8480
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #22, !dbg !8481
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #22, !dbg !8482
  ret i32 0, !dbg !8483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !8484 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8486, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i8* undef, metadata !8487, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i32 undef, metadata !8488, metadata !DIExpression()), !dbg !8489
  ret i32 0, !dbg !8490
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !8491 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8493, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i32 %1, metadata !8494, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i8* undef, metadata !8495, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i8* %0, metadata !8496, metadata !DIExpression()), !dbg !8497
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !8498

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !8496, metadata !DIExpression()), !dbg !8497
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !8499
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !8499
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !8499
  %8 = tail call i32 %7(i8* noundef %0) #21, !dbg !8502
  br label %21, !dbg !8503

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8504
  %11 = load i8, i8* %10, align 1, !dbg !8508
  %12 = icmp eq i8 %11, -62, !dbg !8509
  br i1 %12, label %13, label %21, !dbg !8510

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8511
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !8511
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !8511
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !8512
  %18 = load i32, i32* %17, align 4, !dbg !8512
  %19 = icmp eq i32 %18, 262144, !dbg !8513
  br i1 %19, label %22, label %21, !dbg !8514

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #22, !dbg !8515
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !8515
  unreachable, !dbg !8515

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !8520

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !8497
  ret i32 %23, !dbg !8521
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8522 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8524, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.value(metadata i8* %0, metadata !8525, metadata !DIExpression()), !dbg !8527
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8528
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !8528
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !8528
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !8530
  %6 = load i8, i8* %5, align 1, !dbg !8530
  %7 = icmp eq i8 %6, 0, !dbg !8531
  br i1 %7, label %19, label %8, !dbg !8532

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8533
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !8525, metadata !DIExpression()), !dbg !8527
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #22, !dbg !8534
  call void @llvm.dbg.value(metadata i32 %10, metadata !8526, metadata !DIExpression()), !dbg !8527
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8536
  %12 = bitcast i8* %11 to i8**, !dbg !8536
  %13 = load i8*, i8** %12, align 4, !dbg !8536
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !8538
  %15 = load i8, i8* %14, align 1, !dbg !8538
  %16 = zext i8 %15 to i32, !dbg !8538
  %17 = and i32 %10, %16, !dbg !8539
  %18 = icmp eq i32 %17, 0, !dbg !8539
  br i1 %18, label %19, label %20, !dbg !8540

19:                                               ; preds = %8, %1
  br label %20, !dbg !8541

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !8527
  ret i32 %21, !dbg !8542
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8543 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8547, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata i32 %1, metadata !8548, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata i8 %2, metadata !8549, metadata !DIExpression()), !dbg !8555
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8556
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !8551, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata i32 0, metadata !8552, metadata !DIExpression()), !dbg !8555
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8557
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !8557
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8557
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !8558
  %9 = load i8, i8* %8, align 1, !dbg !8558
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #22, !dbg !8559
  call void @llvm.dbg.value(metadata i32 %10, metadata !8554, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8555
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8560, !range !2596
  %12 = icmp eq i8 %11, 0, !dbg !8560
  br i1 %12, label %18, label %13, !dbg !8562

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8563, !range !2596
  %15 = icmp eq i8 %14, 0, !dbg !8563
  br i1 %15, label %16, label %17, !dbg !8567

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #22, !dbg !8568
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !8568
  unreachable, !dbg !8568

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #22, !dbg !8570
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8571
  br label %42, !dbg !8572

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !8554, metadata !DIExpression()), !dbg !8555
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8573
  %20 = bitcast i8* %19 to i8**, !dbg !8573
  %21 = load i8*, i8** %20, align 4, !dbg !8573
  %22 = load i8, i8* %21, align 1, !dbg !8575
  %23 = zext i8 %22 to i32, !dbg !8575
  %24 = and i32 %10, %23, !dbg !8576
  %25 = icmp eq i32 %24, 0, !dbg !8577
  br i1 %25, label %26, label %42, !dbg !8578

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8579
  call void @llvm.dbg.value(metadata i32 %27, metadata !8550, metadata !DIExpression()), !dbg !8555
  tail call void @SF_DAL_FLAG_BUSY_CLR() #22, !dbg !8581
  %28 = inttoptr i32 %1 to i8*, !dbg !8582
  %29 = load volatile i8, i8* %28, align 1, !dbg !8583
  call void @llvm.dbg.value(metadata i8 %29, metadata !8553, metadata !DIExpression()), !dbg !8555
  %30 = icmp eq i8 %29, %2, !dbg !8584
  br i1 %30, label %39, label %31, !dbg !8586

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !8552, metadata !DIExpression()), !dbg !8555
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #21, !dbg !8587
  br i1 %32, label %33, label %38, !dbg !8590

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !8591
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #21, !dbg !8593
  %36 = load volatile i8, i8* %28, align 1, !dbg !8594
  %37 = icmp eq i8 %36, %2, !dbg !8596
  br i1 %37, label %39, label %38, !dbg !8597

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !8552, metadata !DIExpression()), !dbg !8555
  tail call void @RestoreIRQMask(i32 noundef %27) #22, !dbg !8598
  br label %42, !dbg !8599

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !8552, metadata !DIExpression()), !dbg !8555
  tail call void @RestoreIRQMask(i32 noundef %27) #22, !dbg !8598
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #22, !dbg !8600
  %41 = icmp eq i32 %40, 0, !dbg !8603
  br i1 %41, label %42, label %44, !dbg !8604

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !8605

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !8555
  ret i32 %45, !dbg !8606
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8607 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8611, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.value(metadata i32 %1, metadata !8612, metadata !DIExpression()), !dbg !8614
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !8615
  %4 = load i32, i32* %3, align 4, !dbg !8615
  %5 = and i32 %4, 16, !dbg !8617
  %6 = icmp eq i32 %5, 0, !dbg !8617
  br i1 %6, label %7, label %8, !dbg !8618

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #22, !dbg !8619
  br label %8, !dbg !8621

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8622
  call void @llvm.dbg.value(metadata i32 %9, metadata !8613, metadata !DIExpression()), !dbg !8614
  tail call void @SF_DAL_FLAG_BUSY_SET() #22, !dbg !8623
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8624
  %11 = load i16, i16* %10, align 2, !dbg !8624
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8625
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !8625
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !8626
  %15 = load i8, i8* %14, align 1, !dbg !8626
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !8627
  %17 = load i8, i8* %16, align 1, !dbg !8627
  %18 = zext i8 %17 to i32, !dbg !8628
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #21, !dbg !8629
  tail call void @RestoreIRQMask(i32 noundef %9) #22, !dbg !8630
  ret void, !dbg !8631
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8632 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8634, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8635, metadata !DIExpression()), !dbg !8637
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8638
  %4 = load i8, i8* %3, align 1, !dbg !8638
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !8639

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8640
  %7 = load i32, i32* %6, align 4, !dbg !8642
  %8 = or i32 %7, 4, !dbg !8642
  store i32 %8, i32* %6, align 4, !dbg !8642
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #22, !dbg !8643
  call void @llvm.dbg.value(metadata i32 0, metadata !8636, metadata !DIExpression()), !dbg !8637
  br label %18, !dbg !8644

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8645
  %12 = load i32, i32* %11, align 4, !dbg !8646
  %13 = or i32 %12, 2, !dbg !8646
  store i32 %13, i32* %11, align 4, !dbg !8646
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #22, !dbg !8647
  call void @llvm.dbg.value(metadata i32 0, metadata !8636, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.value(metadata i32 0, metadata !8636, metadata !DIExpression()), !dbg !8637
  br label %18, !dbg !8648

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #22, !dbg !8649
  call void @llvm.dbg.value(metadata i32 0, metadata !8636, metadata !DIExpression()), !dbg !8637
  br label %18, !dbg !8650

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !8636, metadata !DIExpression()), !dbg !8637
  tail call void @Flash_ReturnReady() #22, !dbg !8651
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #24, !dbg !8651
  unreachable, !dbg !8651

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !8636, metadata !DIExpression()), !dbg !8637
  ret i32 0, !dbg !8655
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !8656 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8660, metadata !DIExpression()), !dbg !8665
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8661, metadata !DIExpression()), !dbg !8665
  call void @llvm.dbg.value(metadata i32 %2, metadata !8662, metadata !DIExpression()), !dbg !8665
  call void @llvm.dbg.value(metadata i32 %3, metadata !8663, metadata !DIExpression()), !dbg !8665
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !8666
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !8668
  br i1 %7, label %33, label %8, !dbg !8668

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8669
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8669
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !8671
  br i1 %11, label %33, label %12, !dbg !8672

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8673
  %14 = load i8*, i8** %13, align 4, !dbg !8673
  %15 = icmp eq i8* %14, null, !dbg !8674
  br i1 %15, label %33, label %16, !dbg !8675

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !8676
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !8677
  store i8* %17, i8** %18, align 4, !dbg !8678
  %19 = trunc i32 %3 to i16, !dbg !8679
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !8680
  store i16 %19, i16* %20, align 2, !dbg !8681
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #22, !dbg !8682
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8683
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !8684
  store i8 -81, i8* %23, align 1, !dbg !8685
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8686
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #22, !dbg !8687
  %25 = load i8, i8* %24, align 1, !dbg !8688
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !8690

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #21, !dbg !8691
  br i1 %27, label %31, label %28, !dbg !8692

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8693
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !8695
  store i8 -97, i8* %30, align 1, !dbg !8696
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #22, !dbg !8697
  br label %31, !dbg !8698

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #22, !dbg !8699
  call void @llvm.dbg.value(metadata i32 0, metadata !8664, metadata !DIExpression()), !dbg !8665
  br label %33, !dbg !8700

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !8665
  ret i32 %34, !dbg !8701
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8702 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8706, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8* %1, metadata !8707, metadata !DIExpression()), !dbg !8709
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #23, !dbg !8710
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8711
  %5 = and i32 %4, 1, !dbg !8711
  %6 = icmp eq i32 %5, 0, !dbg !8713
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8714
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !8714
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !8715
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !8715
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !8715
  %12 = load i8, i8* %11, align 1, !dbg !8714
  store i8 %12, i8* %3, align 1, !dbg !8714
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8716
  %14 = load i16, i16* %13, align 2, !dbg !8716
  call void @llvm.dbg.value(metadata i8* %3, metadata !8708, metadata !DIExpression(DW_OP_deref)), !dbg !8709
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #22, !dbg !8717
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #23, !dbg !8718
  ret void, !dbg !8718
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !8719 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8723, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i8* %1, metadata !8724, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i8* %2, metadata !8725, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i16 %3, metadata !8726, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i16 %4, metadata !8727, metadata !DIExpression()), !dbg !8729
  %6 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8730
  call void @llvm.dbg.value(metadata i32 %6, metadata !8728, metadata !DIExpression()), !dbg !8729
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #21, !dbg !8731
  tail call void @RestoreIRQMask(i32 noundef %6) #22, !dbg !8732
  ret void, !dbg !8733
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !8734 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8736, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8739, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.value(metadata i32 0, metadata !8737, metadata !DIExpression()), !dbg !8742
  br label %6, !dbg !8743

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !8745
  call void @llvm.dbg.value(metadata i32 %3, metadata !8737, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.value(metadata i32 %8, metadata !8737, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8742
  %4 = icmp ult i32 %8, 4, !dbg !8747
  %5 = icmp eq i32 %3, 5, !dbg !8747
  br i1 %5, label %26, label %6, !dbg !8743, !llvm.loop !8748

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8737, metadata !DIExpression()), !dbg !8742
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8738, metadata !DIExpression()), !dbg !8742
  %12 = icmp eq i8 %10, 0, !dbg !8750
  br i1 %12, label %23, label %13, !dbg !8754

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8738, metadata !DIExpression()), !dbg !8742
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8755
  %16 = load i8, i8* %15, align 1, !dbg !8755
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !8758
  %18 = load i8, i8* %17, align 1, !dbg !8758
  %19 = icmp eq i8 %16, %18, !dbg !8759
  br i1 %19, label %20, label %23, !dbg !8760

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !8761
  call void @llvm.dbg.value(metadata i32 %21, metadata !8738, metadata !DIExpression()), !dbg !8742
  %22 = icmp eq i32 %21, %11, !dbg !8750
  br i1 %22, label %26, label %13, !dbg !8754, !llvm.loop !8762

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !8764
  %25 = icmp eq i32 %24, %11, !dbg !8765
  call void @llvm.dbg.value(metadata i32 %8, metadata !8737, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8742
  br i1 %25, label %26, label %2, !dbg !8767

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !8747
  ret i1 %27, !dbg !8768
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !8769 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !8781
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #23, !dbg !8781
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !8773, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8780, metadata !DIExpression()), !dbg !8783
  %3 = load i16, i16* @cmem_index, align 2, !dbg !8784
  %4 = icmp sgt i16 %3, -1, !dbg !8786
  br i1 %4, label %34, label %5, !dbg !8787

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !8788
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #21, !dbg !8789
  call void @llvm.dbg.value(metadata i32 0, metadata !8771, metadata !DIExpression()), !dbg !8783
  br label %7, !dbg !8790

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8771, metadata !DIExpression()), !dbg !8783
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8772, metadata !DIExpression()), !dbg !8783
  %12 = icmp eq i8 %10, 0, !dbg !8792
  br i1 %12, label %24, label %13, !dbg !8797

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8772, metadata !DIExpression()), !dbg !8783
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8798
  %16 = load i8, i8* %15, align 1, !dbg !8798
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !8801
  %18 = load i16, i16* %17, align 2, !dbg !8801
  %19 = zext i8 %16 to i16, !dbg !8802
  %20 = icmp eq i16 %18, %19, !dbg !8802
  br i1 %20, label %21, label %24, !dbg !8803

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !8804
  call void @llvm.dbg.value(metadata i32 %22, metadata !8772, metadata !DIExpression()), !dbg !8783
  %23 = icmp eq i32 %22, %11, !dbg !8792
  br i1 %23, label %27, label %13, !dbg !8797, !llvm.loop !8805

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !8807
  %26 = icmp eq i32 %25, %11, !dbg !8808
  br i1 %26, label %27, label %29, !dbg !8810

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !8811
  store i16 %28, i16* @cmem_index, align 2, !dbg !8813
  br label %34, !dbg !8814

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !8815
  call void @llvm.dbg.value(metadata i32 %30, metadata !8771, metadata !DIExpression()), !dbg !8783
  %31 = icmp eq i32 %30, 5, !dbg !8816
  br i1 %31, label %32, label %7, !dbg !8790, !llvm.loop !8817

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !8819
  br label %34, !dbg !8819

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !8783
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #23, !dbg !8820
  ret i32 %36, !dbg !8820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !8821 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8825, metadata !DIExpression()), !dbg !8826
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !8827
  ret %struct.CMEMEntryID* %2, !dbg !8828
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !8829 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8833, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i8* undef, metadata !8834, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i16* %2, metadata !8835, metadata !DIExpression()), !dbg !8840
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #23, !dbg !8841
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !8841
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #23, !dbg !8841
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !8838, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.value(metadata i8 -81, metadata !8836, metadata !DIExpression()), !dbg !8843
  store i8 -81, i8* %4, align 1, !dbg !8844
  call void @llvm.dbg.value(metadata i8* %4, metadata !8836, metadata !DIExpression(DW_OP_deref)), !dbg !8843
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8845
  %7 = load i8, i8* %6, align 1, !dbg !8846
  %8 = add i8 %7, 1, !dbg !8848
  %9 = icmp ult i8 %8, 2, !dbg !8848
  br i1 %9, label %12, label %10, !dbg !8848

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #22, !dbg !8849
  br i1 %11, label %13, label %12, !dbg !8850

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !8836, metadata !DIExpression()), !dbg !8843
  store i8 -97, i8* %4, align 1, !dbg !8851
  call void @llvm.dbg.value(metadata i8* %4, metadata !8836, metadata !DIExpression(DW_OP_deref)), !dbg !8843
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8853
  br label %13, !dbg !8854

13:                                               ; preds = %12, %10
  br label %14, !dbg !8855

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8839, metadata !DIExpression()), !dbg !8843
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !8857
  %17 = load i8, i8* %16, align 1, !dbg !8857
  %18 = zext i8 %17 to i16, !dbg !8857
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !8860
  store i16 %18, i16* %19, align 2, !dbg !8861
  %20 = add nuw nsw i32 %15, 1, !dbg !8862
  call void @llvm.dbg.value(metadata i32 %20, metadata !8839, metadata !DIExpression()), !dbg !8843
  %21 = icmp eq i32 %20, 3, !dbg !8863
  br i1 %21, label %22, label %14, !dbg !8855, !llvm.loop !8864

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #23, !dbg !8866
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #23, !dbg !8866
  ret void, !dbg !8867
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !8868 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8870, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8873, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata i32 0, metadata !8871, metadata !DIExpression()), !dbg !8874
  br label %6, !dbg !8875

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !8877
  call void @llvm.dbg.value(metadata i32 %3, metadata !8871, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata i32 %8, metadata !8871, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8874
  %4 = icmp ult i32 %8, 4, !dbg !8879
  %5 = icmp eq i32 %3, 5, !dbg !8879
  br i1 %5, label %26, label %6, !dbg !8875, !llvm.loop !8880

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8871, metadata !DIExpression()), !dbg !8874
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8872, metadata !DIExpression()), !dbg !8874
  %12 = icmp eq i8 %10, 0, !dbg !8882
  br i1 %12, label %23, label %13, !dbg !8886

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8872, metadata !DIExpression()), !dbg !8874
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8887
  %16 = load i8, i8* %15, align 1, !dbg !8887
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !8890
  %18 = load i8, i8* %17, align 1, !dbg !8890
  %19 = icmp eq i8 %16, %18, !dbg !8891
  br i1 %19, label %20, label %23, !dbg !8892

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !8893
  call void @llvm.dbg.value(metadata i32 %21, metadata !8872, metadata !DIExpression()), !dbg !8874
  %22 = icmp eq i32 %21, %11, !dbg !8882
  br i1 %22, label %26, label %13, !dbg !8886, !llvm.loop !8894

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !8896
  %25 = icmp eq i32 %24, %11, !dbg !8897
  call void @llvm.dbg.value(metadata i32 %8, metadata !8871, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8874
  br i1 %25, label %26, label %2, !dbg !8899

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !8879
  ret i1 %27, !dbg !8900
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !8901 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !8907
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #23, !dbg !8907
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !8905, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8906, metadata !DIExpression()), !dbg !8909
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !8910
  %4 = icmp sgt i16 %3, -1, !dbg !8912
  br i1 %4, label %34, label %5, !dbg !8913

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !8914
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #22, !dbg !8915
  call void @llvm.dbg.value(metadata i32 0, metadata !8903, metadata !DIExpression()), !dbg !8909
  br label %7, !dbg !8916

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8903, metadata !DIExpression()), !dbg !8909
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8904, metadata !DIExpression()), !dbg !8909
  %12 = icmp eq i8 %10, 0, !dbg !8918
  br i1 %12, label %24, label %13, !dbg !8923

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8904, metadata !DIExpression()), !dbg !8909
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8924
  %16 = load i8, i8* %15, align 1, !dbg !8924
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !8927
  %18 = load i16, i16* %17, align 2, !dbg !8927
  %19 = zext i8 %16 to i16, !dbg !8928
  %20 = icmp eq i16 %18, %19, !dbg !8928
  br i1 %20, label %21, label %24, !dbg !8929

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !8930
  call void @llvm.dbg.value(metadata i32 %22, metadata !8904, metadata !DIExpression()), !dbg !8909
  %23 = icmp eq i32 %22, %11, !dbg !8918
  br i1 %23, label %27, label %13, !dbg !8923, !llvm.loop !8931

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !8933
  %26 = icmp eq i32 %25, %11, !dbg !8934
  br i1 %26, label %27, label %29, !dbg !8936

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !8937
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !8939
  br label %34, !dbg !8940

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !8941
  call void @llvm.dbg.value(metadata i32 %30, metadata !8903, metadata !DIExpression()), !dbg !8909
  %31 = icmp eq i32 %30, 5, !dbg !8942
  br i1 %31, label %32, label %7, !dbg !8916, !llvm.loop !8943

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !8945
  br label %34, !dbg !8945

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !8909
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #23, !dbg !8946
  ret i32 %36, !dbg !8946
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !8947 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8955, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata i16* %1, metadata !8956, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata i16* %2, metadata !8957, metadata !DIExpression()), !dbg !8963
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #23, !dbg !8964
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !8964
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #23, !dbg !8964
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !8961, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.value(metadata i8 -81, metadata !8959, metadata !DIExpression()), !dbg !8966
  store i8 -81, i8* %4, align 1, !dbg !8967
  %7 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8968
  call void @llvm.dbg.value(metadata i32 %7, metadata !8958, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata i8* %4, metadata !8959, metadata !DIExpression(DW_OP_deref)), !dbg !8966
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8969
  call void @RestoreIRQMask(i32 noundef %7) #21, !dbg !8970
  %8 = load i8, i8* %6, align 1, !dbg !8971
  %9 = add i8 %8, 1, !dbg !8973
  %10 = icmp ult i8 %9, 2, !dbg !8973
  br i1 %10, label %13, label %11, !dbg !8973

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !8974
  br i1 %12, label %15, label %13, !dbg !8975

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !8959, metadata !DIExpression()), !dbg !8966
  store i8 -97, i8* %4, align 1, !dbg !8976
  %14 = call i32 @SaveAndSetIRQMask() #21, !dbg !8978
  call void @llvm.dbg.value(metadata i32 %14, metadata !8958, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata i8* %4, metadata !8959, metadata !DIExpression(DW_OP_deref)), !dbg !8966
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8979
  call void @RestoreIRQMask(i32 noundef %14) #21, !dbg !8980
  br label %15, !dbg !8981

15:                                               ; preds = %13, %11
  br label %16, !dbg !8982

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !8962, metadata !DIExpression()), !dbg !8966
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !8984
  %19 = load i8, i8* %18, align 1, !dbg !8984
  %20 = zext i8 %19 to i16, !dbg !8984
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !8987
  store i16 %20, i16* %21, align 2, !dbg !8988
  %22 = add nuw nsw i32 %17, 1, !dbg !8989
  call void @llvm.dbg.value(metadata i32 %22, metadata !8962, metadata !DIExpression()), !dbg !8966
  %23 = icmp eq i32 %22, 3, !dbg !8990
  br i1 %23, label %24, label %16, !dbg !8982, !llvm.loop !8991

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #23, !dbg !8993
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #23, !dbg !8993
  ret void, !dbg !8994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !8995 {
  ret i32 3932160, !dbg !8996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !8997 {
  ret i32 4194304, !dbg !8998
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !8999 {
  %1 = tail call i32 @ComboMem_Initialize() #21, !dbg !9000
  ret void, !dbg !9001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !9002 {
  ret void, !dbg !9003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !9004 {
  ret void, !dbg !9005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !9006 {
  ret i32 3932160, !dbg !9007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !9008 {
  ret i32 262144, !dbg !9009
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !9010 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #21, !dbg !9011
  ret void, !dbg !9012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !9013 {
  ret i32 134217728, !dbg !9014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !9015 {
  ret i32 4194304, !dbg !9016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !9017 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9018
  ret i32 134217728, !dbg !9019
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !9020 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !9021
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9022
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9023
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9024
  %4 = load i16, i16* %3, align 2, !dbg !9024
  %5 = zext i16 %4 to i32, !dbg !9022
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9025
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #21, !dbg !9026
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #22, !dbg !9027
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !9028
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !9029
  ret i32 0, !dbg !9030
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !9031 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !9034
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !9035
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !9036
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !9037
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #22, !dbg !9038
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9039
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !9040
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !9041
  %5 = load i32, i32* %4, align 4, !dbg !9041
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #21, !dbg !9042
  call void @llvm.dbg.value(metadata i32 %6, metadata !9033, metadata !DIExpression()), !dbg !9043
  %7 = icmp eq i32 %6, -120, !dbg !9044
  %8 = select i1 %7, i32 5, i32 0, !dbg !9043
  ret i32 %8, !dbg !9046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !9047 {
  ret i8 1, !dbg !9049
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !9050 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9054, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9056, metadata !DIExpression()), !dbg !9057
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !9058
  call void @llvm.dbg.value(metadata i32 %2, metadata !9055, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9056, metadata !DIExpression()), !dbg !9057
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !9059
  %4 = load i32, i32* %3, align 4, !dbg !9059
  ret i32 %4, !dbg !9060
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !9061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9065, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !9066, metadata !DIExpression()), !dbg !9068
  %3 = and i32 %0, 134217727, !dbg !9069
  call void @llvm.dbg.value(metadata i32 %3, metadata !9065, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.value(metadata i16 0, metadata !9067, metadata !DIExpression()), !dbg !9068
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !9070
  %5 = load i32, i32* %4, align 4, !dbg !9070
  %6 = icmp eq i32 %5, 0, !dbg !9073
  br i1 %6, label %25, label %7, !dbg !9074

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !9067, metadata !DIExpression()), !dbg !9068
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !9075
  %12 = load i32, i32* %11, align 4, !dbg !9075
  %13 = icmp ult i32 %3, %12, !dbg !9078
  br i1 %13, label %18, label %14, !dbg !9079

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !9080
  %16 = load i32, i32* %15, align 4, !dbg !9080
  %17 = icmp ult i32 %3, %16, !dbg !9081
  br i1 %17, label %25, label %18, !dbg !9082

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !9083
  call void @llvm.dbg.value(metadata i16 %19, metadata !9067, metadata !DIExpression()), !dbg !9068
  %20 = zext i16 %19 to i32, !dbg !9084
  %21 = add nuw nsw i32 %20, 1, !dbg !9085
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !9070
  %23 = load i32, i32* %22, align 4, !dbg !9070
  %24 = icmp eq i32 %23, 0, !dbg !9073
  br i1 %24, label %25, label %7, !dbg !9074, !llvm.loop !9086

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !9084
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !9088
  %28 = load i32, i32* %27, align 4, !dbg !9088
  ret i32 %28, !dbg !9089
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !9090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9092, metadata !DIExpression()), !dbg !9093
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9094
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #22, !dbg !9095
  ret i32 %3, !dbg !9096
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !9097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9099, metadata !DIExpression()), !dbg !9102
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !9103
  call void @llvm.dbg.value(metadata i32 %2, metadata !9100, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9101, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9101, metadata !DIExpression()), !dbg !9102
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !9104
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #22, !dbg !9105
  ret i32 %4, !dbg !9106
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !9107 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !9113, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.value(metadata i32 0, metadata !9114, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.value(metadata i32 0, metadata !9115, metadata !DIExpression()), !dbg !9116
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !9117
  %3 = load i32, i32* %2, align 4, !dbg !9117
  %4 = icmp eq i32 %3, 0, !dbg !9120
  br i1 %4, label %17, label %5, !dbg !9121

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9115, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.value(metadata i32 %8, metadata !9114, metadata !DIExpression()), !dbg !9116
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !9122
  %10 = load i32, i32* %9, align 4, !dbg !9122
  %11 = mul i32 %10, %6, !dbg !9124
  %12 = add i32 %11, %8, !dbg !9125
  call void @llvm.dbg.value(metadata i32 %12, metadata !9114, metadata !DIExpression()), !dbg !9116
  %13 = add i32 %7, 1, !dbg !9126
  call void @llvm.dbg.value(metadata i32 %13, metadata !9115, metadata !DIExpression()), !dbg !9116
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !9117
  %15 = load i32, i32* %14, align 4, !dbg !9117
  %16 = icmp eq i32 %15, 0, !dbg !9120
  br i1 %16, label %17, label %5, !dbg !9121, !llvm.loop !9127

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !9116
  ret i32 %18, !dbg !9129
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !9130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9134, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 %1, metadata !9135, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9136, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !9137, metadata !DIExpression()), !dbg !9143
  %5 = add i32 %1, %0, !dbg !9144
  call void @llvm.dbg.value(metadata i32 %5, metadata !9142, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 %0, metadata !9138, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 0, metadata !9139, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 0, metadata !9141, metadata !DIExpression()), !dbg !9143
  %6 = icmp ugt i32 %5, %0, !dbg !9145
  br i1 %6, label %7, label %34, !dbg !9148

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9141, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 %9, metadata !9138, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 %10, metadata !9139, metadata !DIExpression()), !dbg !9143
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #22, !dbg !9149
  call void @llvm.dbg.value(metadata i32 %11, metadata !9140, metadata !DIExpression()), !dbg !9143
  %12 = icmp eq i32 %8, 0, !dbg !9151
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !9153
  br i1 %12, label %14, label %16, !dbg !9154

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !9155
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !9157
  store i32 1, i32* %15, align 4, !dbg !9158
  br label %29, !dbg !9159

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !9160
  %18 = icmp eq i32 %11, %17, !dbg !9162
  br i1 %18, label %19, label %23, !dbg !9163

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !9164
  %21 = load i32, i32* %20, align 4, !dbg !9166
  %22 = add i32 %21, 1, !dbg !9166
  store i32 %22, i32* %20, align 4, !dbg !9166
  br label %29, !dbg !9167

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !9168
  call void @llvm.dbg.value(metadata i32 %24, metadata !9139, metadata !DIExpression()), !dbg !9143
  %25 = icmp eq i32 %24, 9, !dbg !9170
  br i1 %25, label %34, label %26, !dbg !9172

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !9173
  store i32 %11, i32* %27, align 4, !dbg !9174
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !9175
  store i32 1, i32* %28, align 4, !dbg !9176
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !9177
  call void @llvm.dbg.value(metadata i32 %30, metadata !9139, metadata !DIExpression()), !dbg !9143
  %31 = add i32 %11, %9, !dbg !9178
  call void @llvm.dbg.value(metadata i32 %31, metadata !9138, metadata !DIExpression()), !dbg !9143
  %32 = add i32 %8, 1, !dbg !9179
  call void @llvm.dbg.value(metadata i32 %32, metadata !9141, metadata !DIExpression()), !dbg !9143
  %33 = icmp ult i32 %31, %5, !dbg !9145
  br i1 %33, label %7, label %34, !dbg !9148, !llvm.loop !9180

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !9143
  ret i32 %35, !dbg !9182
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !9183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9187, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata i32 %1, metadata !9188, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9189, metadata !DIExpression()), !dbg !9190
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !9191
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #21, !dbg !9192
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9193
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #22, !dbg !9194
  ret i32 %7, !dbg !9195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !9196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9198, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i32 %1, metadata !9199, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9200, metadata !DIExpression()), !dbg !9201
  ret i32 0, !dbg !9202
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !9203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9205, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.value(metadata i32 %1, metadata !9206, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9207, metadata !DIExpression()), !dbg !9210
  %4 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !9211
  call void @llvm.dbg.value(metadata i32 %4, metadata !9208, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9209, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9209, metadata !DIExpression()), !dbg !9210
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !9212
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #22, !dbg !9213
  ret i32 %6, !dbg !9214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !9215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9217, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.value(metadata i32 %1, metadata !9218, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9219, metadata !DIExpression()), !dbg !9220
  ret i32 0, !dbg !9221
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !9222 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9224, metadata !DIExpression()), !dbg !9227
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !9228
  call void @llvm.dbg.value(metadata i32 %2, metadata !9225, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9226, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9226, metadata !DIExpression()), !dbg !9227
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !9229
  %4 = load i32, i32* %3, align 4, !dbg !9229
  ret i32 %4, !dbg !9230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !9231 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !9235, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata i32* %1, metadata !9236, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata i32 %2, metadata !9237, metadata !DIExpression()), !dbg !9238
  %4 = load i32, i32* %1, align 4, !dbg !9239
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !9241
  %6 = load i32, i32* %5, align 4, !dbg !9241
  %7 = icmp eq i32 %6, %2, !dbg !9242
  br i1 %7, label %8, label %12, !dbg !9243

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !9244
  %10 = load i32, i32* %9, align 4, !dbg !9246
  %11 = add i32 %10, 1, !dbg !9246
  store i32 %11, i32* %9, align 4, !dbg !9246
  br label %17, !dbg !9247

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !9248
  store i32 %13, i32* %1, align 4, !dbg !9248
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !9250
  store i32 1, i32* %14, align 4, !dbg !9251
  %15 = load i32, i32* %1, align 4, !dbg !9252
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !9253
  store i32 %2, i32* %16, align 4, !dbg !9254
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !9255
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !9256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9260, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %1, metadata !9261, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9262, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !9263, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 0, metadata !9264, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 0, metadata !9265, metadata !DIExpression()), !dbg !9269
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !9270
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #21, !dbg !9271
  call void @llvm.dbg.value(metadata i32 0, metadata !9268, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 0, metadata !9267, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 0, metadata !9265, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 0, metadata !9264, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %0, metadata !9260, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %1, metadata !9261, metadata !DIExpression()), !dbg !9269
  %7 = icmp eq i32 %1, 0, !dbg !9272
  br i1 %7, label %53, label %8, !dbg !9275

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9268, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %10, metadata !9267, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %11, metadata !9265, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %12, metadata !9264, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %13, metadata !9260, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %14, metadata !9261, metadata !DIExpression()), !dbg !9269
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !9276
  %16 = load i32, i32* %15, align 4, !dbg !9276
  %17 = icmp ult i32 %9, %16, !dbg !9279
  %18 = xor i1 %17, true, !dbg !9280
  %19 = zext i1 %18 to i32, !dbg !9280
  %20 = add i32 %12, %19, !dbg !9280
  call void @llvm.dbg.value(metadata i32 undef, metadata !9268, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %20, metadata !9264, metadata !DIExpression()), !dbg !9269
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !9281
  %22 = load i32, i32* %21, align 4, !dbg !9281
  %23 = add i32 %22, %10, !dbg !9282
  call void @llvm.dbg.value(metadata i32 %23, metadata !9267, metadata !DIExpression()), !dbg !9269
  %24 = icmp ult i32 %23, %13, !dbg !9283
  br i1 %24, label %46, label %25, !dbg !9285

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !9286
  call void @llvm.dbg.value(metadata i32 %26, metadata !9266, metadata !DIExpression()), !dbg !9269
  %27 = icmp ult i32 %14, %26, !dbg !9288
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !9290
  call void @llvm.dbg.value(metadata i32 %28, metadata !9266, metadata !DIExpression()), !dbg !9269
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !9291
  %30 = load i32, i32* %29, align 4, !dbg !9291
  %31 = icmp eq i32 %30, %28, !dbg !9293
  br i1 %31, label %32, label %36, !dbg !9294

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !9295
  %34 = load i32, i32* %33, align 4, !dbg !9297
  %35 = add i32 %34, 1, !dbg !9297
  store i32 %35, i32* %33, align 4, !dbg !9297
  br label %42, !dbg !9298

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !9299
  %38 = zext i1 %37 to i32, !dbg !9302
  %39 = add nsw i32 %11, %38, !dbg !9302
  call void @llvm.dbg.value(metadata i32 %39, metadata !9265, metadata !DIExpression()), !dbg !9269
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !9303
  store i32 1, i32* %40, align 4, !dbg !9304
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !9305
  store i32 %28, i32* %41, align 4, !dbg !9306
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !9269
  call void @llvm.dbg.value(metadata i32 %43, metadata !9265, metadata !DIExpression()), !dbg !9269
  %44 = add i32 %28, %13, !dbg !9307
  call void @llvm.dbg.value(metadata i32 %44, metadata !9260, metadata !DIExpression()), !dbg !9269
  %45 = sub i32 %14, %28, !dbg !9308
  call void @llvm.dbg.value(metadata i32 %45, metadata !9261, metadata !DIExpression()), !dbg !9269
  br label %46, !dbg !9309

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !9310
  call void @llvm.dbg.value(metadata i32 %49, metadata !9265, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %48, metadata !9260, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %47, metadata !9261, metadata !DIExpression()), !dbg !9269
  %50 = add nuw i32 %9, 1, !dbg !9311
  %51 = select i1 %17, i32 %50, i32 1, !dbg !9311
  call void @llvm.dbg.value(metadata i32 %51, metadata !9268, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %23, metadata !9267, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.value(metadata i32 %20, metadata !9264, metadata !DIExpression()), !dbg !9269
  %52 = icmp eq i32 %47, 0, !dbg !9272
  br i1 %52, label %53, label %8, !dbg !9275, !llvm.loop !9312

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !9314
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !9315 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9319
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9320
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9319
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9321
  %4 = tail call i32 @custom_get_fat_addr() #21, !dbg !9322
  %5 = tail call i32 @custom_get_fat_len() #21, !dbg !9323
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9324
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !9325
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !9324
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #22, !dbg !9326
  %10 = tail call i32 @custom_get_fat_addr() #21, !dbg !9327
  %11 = tail call i32 @custom_get_fat_len() #21, !dbg !9328
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #22, !dbg !9329
  call void @llvm.dbg.value(metadata i32 %12, metadata !9317, metadata !DIExpression()), !dbg !9330
  %13 = icmp eq i32 %12, 0, !dbg !9331
  br i1 %13, label %14, label %46, !dbg !9333

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !9318, metadata !DIExpression()), !dbg !9330
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !9334
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9336
  call void @llvm.dbg.value(metadata i32 0, metadata !9318, metadata !DIExpression()), !dbg !9330
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !9337
  %16 = icmp eq i32 %15, 0, !dbg !9339
  br i1 %16, label %34, label %17, !dbg !9340

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !9318, metadata !DIExpression()), !dbg !9330
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !9341
  %23 = load i32, i32* %22, align 4, !dbg !9341
  %24 = add i32 %20, %23, !dbg !9343
  %25 = icmp ugt i32 %18, %21, !dbg !9344
  br i1 %25, label %26, label %27, !dbg !9346

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9347
  br label %27, !dbg !9349

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !9350
  call void @llvm.dbg.value(metadata i32 %29, metadata !9318, metadata !DIExpression()), !dbg !9330
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !9337
  %31 = load i32, i32* %30, align 4, !dbg !9337
  %32 = icmp eq i32 %31, 0, !dbg !9339
  br i1 %32, label %33, label %17, !dbg !9340, !llvm.loop !9351

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !9343
  br label %34, !dbg !9340

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !9353
  %36 = mul i32 %35, -5, !dbg !9354
  %37 = add i32 %36, 262144, !dbg !9355
  %38 = lshr i32 %37, 9, !dbg !9356
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !9357
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #22, !dbg !9358
  call void @llvm.dbg.value(metadata i32 0, metadata !9317, metadata !DIExpression()), !dbg !9330
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9359
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !9360
  %42 = load i8, i8* %41, align 1, !dbg !9360
  %43 = icmp eq i8 %42, 3, !dbg !9361
  br i1 %43, label %44, label %46, !dbg !9361

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #22, !dbg !9362
  call void @llvm.dbg.value(metadata i32 %45, metadata !9317, metadata !DIExpression()), !dbg !9330
  br label %46, !dbg !9364

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !9330
  ret i32 %47, !dbg !9365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !9366 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9370, metadata !DIExpression()), !dbg !9371
  %2 = icmp eq i32 %0, 0, !dbg !9372
  br i1 %2, label %3, label %9, !dbg !9374

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #21, !dbg !9375
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !9377
  %5 = icmp slt i32 %4, 0, !dbg !9378
  br i1 %5, label %6, label %7, !dbg !9380

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !9381
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.117, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #24, !dbg !9381
  unreachable, !dbg !9381

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #21, !dbg !9386
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9387
  br label %9, !dbg !9388

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9389
  ret void, !dbg !9390
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !9391 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #22, !dbg !9392
  %1 = tail call i32 @CMEM_Init_NOR() #22, !dbg !9393
  ret i32 %1, !dbg !9394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !9395 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #22, !dbg !9398
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9399
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9400
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9401
  %4 = load i16, i16* %3, align 2, !dbg !9401
  %5 = zext i16 %4 to i32, !dbg !9399
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9402
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9403
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9404
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !9405
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !9405
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #21, !dbg !9406
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !9407
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !9408
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !9409
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !9410
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9411
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9412
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !9413
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !9414
  %13 = load i32, i32* %12, align 4, !dbg !9414
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #21, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %14, metadata !9397, metadata !DIExpression()), !dbg !9416
  %15 = icmp eq i32 %14, -120, !dbg !9417
  br i1 %15, label %16, label %17, !dbg !9420

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9421
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.117, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #24, !dbg !9421
  unreachable, !dbg !9421

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #22, !dbg !9423
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !9424
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #22, !dbg !9425
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !9426
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !9427
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9428
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !9429
  ret i32 0, !dbg !9430
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !9431 {
  ret void, !dbg !9432
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !9433 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9436
  call void @llvm.dbg.value(metadata i32 %1, metadata !9435, metadata !DIExpression()), !dbg !9437
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9438
  br i1 %2, label %4, label %3, !dbg !9440

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !9441
  br label %4, !dbg !9443

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9444
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9444
  ret i32 %5, !dbg !9445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !9446 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9449
  call void @llvm.dbg.value(metadata i32 %1, metadata !9448, metadata !DIExpression()), !dbg !9450
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9451
  br i1 %2, label %3, label %4, !dbg !9453

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !9454
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9456
  ret void, !dbg !9457

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9458
  tail call void @Flash_ReturnReady() #21, !dbg !9460
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.123, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #24, !dbg !9460
  unreachable, !dbg !9460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !9464 {
  ret void, !dbg !9465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !9466 {
  br label %1, !dbg !9469

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #22, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %2, metadata !9468, metadata !DIExpression()), !dbg !9472
  %3 = icmp eq i32 %2, 0, !dbg !9473
  br i1 %3, label %4, label %1, !dbg !9474, !llvm.loop !9475

4:                                                ; preds = %1
  ret void, !dbg !9477
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !9478 {
  tail call void @FreeFDMLock() #22, !dbg !9479
  ret void, !dbg !9480
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9481 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9524, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i32 %1, metadata !9525, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i8* %2, metadata !9526, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i32 %3, metadata !9527, metadata !DIExpression()), !dbg !9530
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9531
  %6 = load i32, i32* %5, align 4, !dbg !9531
  call void @llvm.dbg.value(metadata i32 %6, metadata !9529, metadata !DIExpression()), !dbg !9530
  %7 = icmp ule i32 %6, %1, !dbg !9532
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !9534
  br i1 %10, label %26, label %11, !dbg !9534

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9535
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !9535
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !9535
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !9536
  %16 = load i8*, i8** %15, align 4, !dbg !9536
  %17 = ptrtoint i8* %16 to i32, !dbg !9537
  %18 = add i32 %17, %1, !dbg !9538
  call void @llvm.dbg.value(metadata i32 %18, metadata !9528, metadata !DIExpression()), !dbg !9530
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9539
  %20 = load i8, i8* %19, align 4, !dbg !9539, !range !2596
  %21 = icmp eq i8 %20, 0, !dbg !9539
  br i1 %21, label %22, label %23, !dbg !9541

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #22, !dbg !9542
  br label %23, !dbg !9544

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #22, !dbg !9545
  %24 = inttoptr i32 %18 to i8*, !dbg !9546
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #21, !dbg !9547
  tail call void @release_FDM_lock() #22, !dbg !9548
  br label %26, !dbg !9549

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !9530
  ret i32 %27, !dbg !9550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !9551 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9555, metadata !DIExpression()), !dbg !9557
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9558
  %3 = load i8, i8* %2, align 4, !dbg !9558, !range !2596
  %4 = icmp eq i8 %3, 0, !dbg !9558
  br i1 %4, label %5, label %18, !dbg !9560

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #22, !dbg !9561
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9562
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !9562
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !9563
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !9563
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9564
  %11 = load i8*, i8** %10, align 4, !dbg !9564
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !9565
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !9566
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #21, !dbg !9567
  call void @llvm.dbg.value(metadata i32 %14, metadata !9556, metadata !DIExpression()), !dbg !9557
  tail call void @release_FDM_lock() #22, !dbg !9568
  %15 = icmp slt i32 %14, 0, !dbg !9569
  br i1 %15, label %16, label %17, !dbg !9571

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #21, !dbg !9572
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.123, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #24, !dbg !9572
  unreachable, !dbg !9572

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !9577
  br label %18, !dbg !9578

18:                                               ; preds = %1, %17
  ret void, !dbg !9578
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9579 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9581, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 %1, metadata !9582, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i8* %2, metadata !9583, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 %3, metadata !9584, metadata !DIExpression()), !dbg !9602
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9603
  %7 = load i32, i32* %6, align 4, !dbg !9603
  call void @llvm.dbg.value(metadata i32 %7, metadata !9587, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 0, metadata !9588, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 0, metadata !9589, metadata !DIExpression()), !dbg !9602
  %8 = icmp ugt i32 %7, %1, !dbg !9604
  br i1 %8, label %9, label %101, !dbg !9606

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !9607
  %11 = icmp ugt i32 %10, %7, !dbg !9609
  br i1 %11, label %101, label %12, !dbg !9610

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9611
  %14 = load i8, i8* %13, align 4, !dbg !9611, !range !2596
  %15 = icmp eq i8 %14, 0, !dbg !9611
  br i1 %15, label %16, label %17, !dbg !9613

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #22, !dbg !9614
  br label %17, !dbg !9616

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #22, !dbg !9617
  %18 = bitcast i16* %5 to i8*, !dbg !9618
  call void @llvm.dbg.value(metadata i32 0, metadata !9588, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 0, metadata !9589, metadata !DIExpression()), !dbg !9602
  %19 = icmp eq i32 %3, 0, !dbg !9619
  br i1 %19, label %99, label %20, !dbg !9620

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !9620

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !9589, metadata !DIExpression()), !dbg !9602
  %27 = load i8*, i8** %21, align 4, !dbg !9621
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !9622
  %29 = bitcast i8* %28 to i8**, !dbg !9622
  %30 = load i8*, i8** %29, align 4, !dbg !9622
  %31 = ptrtoint i8* %30 to i32, !dbg !9623
  %32 = add i32 %31, %1, !dbg !9624
  %33 = add i32 %32, %26, !dbg !9625
  call void @llvm.dbg.value(metadata i32 %33, metadata !9585, metadata !DIExpression()), !dbg !9602
  %34 = add i32 %26, %22, !dbg !9626
  call void @llvm.dbg.value(metadata i32 %34, metadata !9586, metadata !DIExpression()), !dbg !9602
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9627
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !9628
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !9628
  %38 = add i32 %26, %1, !dbg !9629
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #21, !dbg !9630
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #21, !dbg !9631
  %41 = and i32 %33, 1, !dbg !9632
  %42 = icmp eq i32 %41, 0, !dbg !9632
  br i1 %42, label %43, label %46, !dbg !9633

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !9634
  %45 = icmp eq i32 %44, 1, !dbg !9635
  br i1 %45, label %46, label %57, !dbg !9636

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9637
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !9639
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !9639
  %50 = load i8*, i8** %21, align 4, !dbg !9640
  %51 = inttoptr i32 %33 to i8*, !dbg !9641
  %52 = inttoptr i32 %34 to i8*, !dbg !9642
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #21, !dbg !9643
  call void @llvm.dbg.value(metadata i32 %53, metadata !9588, metadata !DIExpression()), !dbg !9602
  %54 = icmp eq i32 %53, 0, !dbg !9644
  br i1 %54, label %55, label %99, !dbg !9646

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !9647
  call void @llvm.dbg.value(metadata i32 %56, metadata !9589, metadata !DIExpression()), !dbg !9602
  br label %96, !dbg !9648

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !9649
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #21, !dbg !9650
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #21, !dbg !9651
  call void @llvm.dbg.value(metadata i32 %60, metadata !9590, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.value(metadata i32 %44, metadata !9594, metadata !DIExpression()), !dbg !9652
  %61 = add i32 %60, %33, !dbg !9653
  %62 = sub i32 0, %60, !dbg !9654
  %63 = and i32 %61, %62, !dbg !9655
  call void @llvm.dbg.value(metadata i32 %63, metadata !9595, metadata !DIExpression()), !dbg !9652
  %64 = add i32 %32, %3, !dbg !9656
  %65 = icmp ugt i32 %64, %63, !dbg !9658
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !9659
  call void @llvm.dbg.value(metadata i32 %67, metadata !9594, metadata !DIExpression()), !dbg !9652
  %68 = and i32 %67, -2, !dbg !9660
  call void @llvm.dbg.value(metadata i32 %68, metadata !9594, metadata !DIExpression()), !dbg !9652
  %69 = icmp ne i32 %68, 2, !dbg !9661
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !9662
  br i1 %72, label %85, label %73, !dbg !9662

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #23, !dbg !9618
  call void @llvm.dbg.value(metadata i8* %18, metadata !9601, metadata !DIExpression()), !dbg !9663
  %74 = inttoptr i32 %34 to i8*, !dbg !9664
  %75 = load i8, i8* %74, align 1, !dbg !9665
  call void @llvm.dbg.value(metadata i8 undef, metadata !9596, metadata !DIExpression()), !dbg !9663
  store i8 %75, i8* %18, align 2, !dbg !9666
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !9667
  %77 = load i8, i8* %76, align 1, !dbg !9668
  store i8 %77, i8* %24, align 1, !dbg !9669
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9670
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !9671
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !9671
  %81 = load i8*, i8** %21, align 4, !dbg !9672
  %82 = inttoptr i32 %33 to i8*, !dbg !9673
  call void @llvm.dbg.value(metadata i16* %5, metadata !9596, metadata !DIExpression(DW_OP_deref)), !dbg !9663
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #21, !dbg !9674
  call void @llvm.dbg.value(metadata i32 %83, metadata !9588, metadata !DIExpression()), !dbg !9602
  %84 = icmp eq i32 %83, 0, !dbg !9675
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #23, !dbg !9677
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9678
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !9682
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !9682
  %89 = load i8*, i8** %21, align 4, !dbg !9683
  %90 = inttoptr i32 %33 to i8*, !dbg !9684
  %91 = inttoptr i32 %34 to i8*, !dbg !9685
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #21, !dbg !9686
  call void @llvm.dbg.value(metadata i32 %92, metadata !9588, metadata !DIExpression()), !dbg !9602
  %93 = icmp eq i32 %92, 0, !dbg !9687
  br i1 %93, label %94, label %99, !dbg !9689

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !9588, metadata !DIExpression()), !dbg !9602
  %95 = add i32 %68, %26, !dbg !9690
  call void @llvm.dbg.value(metadata i32 %83, metadata !9588, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 %26, metadata !9589, metadata !DIExpression()), !dbg !9602
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !9691
  call void @llvm.dbg.value(metadata i32 0, metadata !9588, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 %97, metadata !9589, metadata !DIExpression()), !dbg !9602
  %98 = icmp ult i32 %97, %3, !dbg !9619
  br i1 %98, label %25, label %99, !dbg !9620, !llvm.loop !9692

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #22, !dbg !9694
  br label %101, !dbg !9695

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !9602
  ret i32 %102, !dbg !9695
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9696 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9700, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.value(metadata i32 %1, metadata !9701, metadata !DIExpression()), !dbg !9704
  %3 = and i32 %1, 16777215, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %3, metadata !9703, metadata !DIExpression()), !dbg !9704
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9706
  %5 = load i8, i8* %4, align 4, !dbg !9706, !range !2596
  %6 = icmp eq i8 %5, 0, !dbg !9706
  br i1 %6, label %7, label %8, !dbg !9708

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #22, !dbg !9709
  br label %8, !dbg !9711

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !9712
  %10 = load i32, i32* %9, align 4, !dbg !9712
  %11 = icmp ult i32 %3, %10, !dbg !9714
  br i1 %11, label %12, label %27, !dbg !9715

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #22, !dbg !9716
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9717
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !9717
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !9718
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !9718
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9719
  %18 = load i8*, i8** %17, align 4, !dbg !9719
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #21, !dbg !9720
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !9721
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !9722
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !9722
  %23 = load i8*, i8** %17, align 4, !dbg !9723
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #21, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %24, metadata !9702, metadata !DIExpression()), !dbg !9704
  tail call void @release_FDM_lock() #22, !dbg !9725
  %25 = icmp eq i32 %24, 0, !dbg !9726
  %26 = select i1 %25, i32 0, i32 6, !dbg !9704
  br label %27, !dbg !9704

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !9704
  ret i32 %28, !dbg !9728
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !9729 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !9730
  br i1 %1, label %3, label %2, !dbg !9732

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #21, !dbg !9733
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #22, !dbg !9735
  store i1 true, i1* @flash_init_status, align 4, !dbg !9736
  br label %3, !dbg !9737

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !9738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !9739 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !9740
  %2 = select i1 %1, i32 0, i32 -5, !dbg !9740
  ret i32 %2, !dbg !9741
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9746, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i32 %1, metadata !9747, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i8* %2, metadata !9748, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9749, metadata !DIExpression()), !dbg !9753
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9754
  call void @llvm.dbg.value(metadata i8* %4, metadata !9750, metadata !DIExpression()), !dbg !9753
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !9755
  %6 = ptrtoint i8* %5 to i32, !dbg !9756
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9757
  %8 = bitcast i8* %7 to i8**, !dbg !9757
  %9 = load i8*, i8** %8, align 4, !dbg !9757
  %10 = ptrtoint i8* %9 to i32, !dbg !9758
  %11 = shl i32 %1, 9, !dbg !9759
  %12 = add i32 %11, %6, !dbg !9760
  %13 = sub i32 %12, %10, !dbg !9761
  call void @llvm.dbg.value(metadata i32 %13, metadata !9752, metadata !DIExpression()), !dbg !9753
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #22, !dbg !9762
  call void @llvm.dbg.value(metadata i32 %14, metadata !9751, metadata !DIExpression()), !dbg !9753
  %15 = icmp eq i32 %14, 0, !dbg !9763
  %16 = select i1 %15, i32 0, i32 -13, !dbg !9753
  ret i32 %16, !dbg !9765
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9768, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i32 %1, metadata !9769, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata i8* %2, metadata !9770, metadata !DIExpression()), !dbg !9775
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9771, metadata !DIExpression()), !dbg !9775
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9776
  call void @llvm.dbg.value(metadata i8* %4, metadata !9772, metadata !DIExpression()), !dbg !9775
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !9777
  %6 = ptrtoint i8* %5 to i32, !dbg !9778
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9779
  %8 = bitcast i8* %7 to i8**, !dbg !9779
  %9 = load i8*, i8** %8, align 4, !dbg !9779
  %10 = ptrtoint i8* %9 to i32, !dbg !9780
  %11 = shl i32 %1, 9, !dbg !9781
  %12 = add i32 %11, %6, !dbg !9782
  %13 = sub i32 %12, %10, !dbg !9783
  call void @llvm.dbg.value(metadata i32 %13, metadata !9774, metadata !DIExpression()), !dbg !9775
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #22, !dbg !9784
  call void @llvm.dbg.value(metadata i32 %14, metadata !9773, metadata !DIExpression()), !dbg !9775
  %15 = icmp eq i32 %14, 0, !dbg !9785
  %16 = select i1 %15, i32 0, i32 -14, !dbg !9775
  ret i32 %16, !dbg !9787
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !9788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9792, metadata !DIExpression()), !dbg !9794
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #22, !dbg !9795
  call void @llvm.dbg.value(metadata i32 %2, metadata !9793, metadata !DIExpression()), !dbg !9794
  %3 = icmp eq i32 %2, 0, !dbg !9796
  %4 = select i1 %3, i32 0, i32 -15, !dbg !9794
  ret i32 %4, !dbg !9798
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !9799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9801, metadata !DIExpression()), !dbg !9804
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9802, metadata !DIExpression()), !dbg !9804
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9805
  call void @llvm.dbg.value(metadata i8* %2, metadata !9803, metadata !DIExpression()), !dbg !9804
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #21, !dbg !9806
  ret i32 %3, !dbg !9807
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !9808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9810, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9811, metadata !DIExpression()), !dbg !9813
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9814
  call void @llvm.dbg.value(metadata i8* %2, metadata !9812, metadata !DIExpression()), !dbg !9813
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #21, !dbg !9815
  ret i32 %3, !dbg !9816
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !9817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9821, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %1, metadata !9822, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %2, metadata !9823, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9824, metadata !DIExpression()), !dbg !9826
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9827
  call void @llvm.dbg.value(metadata i8* %4, metadata !9825, metadata !DIExpression()), !dbg !9826
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #21, !dbg !9828
  store i32 %5, i32* %1, align 4, !dbg !9829
  %6 = icmp eq i32 %5, -1, !dbg !9830
  br i1 %6, label %10, label %7, !dbg !9832

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #21, !dbg !9833
  %9 = urem i32 %0, %8, !dbg !9834
  store i32 %9, i32* %2, align 4, !dbg !9835
  br label %10, !dbg !9836

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !9826
  ret i32 %11, !dbg !9837
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !9838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9842, metadata !DIExpression()), !dbg !9847
  call void @llvm.dbg.value(metadata i32 %1, metadata !9843, metadata !DIExpression()), !dbg !9847
  call void @llvm.dbg.value(metadata i32* %2, metadata !9844, metadata !DIExpression()), !dbg !9847
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9845, metadata !DIExpression()), !dbg !9847
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9848
  call void @llvm.dbg.value(metadata i8* %4, metadata !9846, metadata !DIExpression()), !dbg !9847
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !9849
  %6 = ptrtoint i8* %5 to i32, !dbg !9850
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9851
  %8 = bitcast i8* %7 to i8**, !dbg !9851
  %9 = load i8*, i8** %8, align 4, !dbg !9851
  %10 = ptrtoint i8* %9 to i32, !dbg !9852
  %11 = add i32 %6, %1, !dbg !9853
  %12 = sub i32 %11, %10, !dbg !9854
  store i32 %12, i32* %2, align 4, !dbg !9855
  ret i32 0, !dbg !9856
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !9857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9861, metadata !DIExpression()), !dbg !9862
  %2 = add i32 %0, 2, !dbg !9863
  %3 = icmp ult i32 %2, 9, !dbg !9863
  br i1 %3, label %5, label %4, !dbg !9863

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #21, !dbg !9864
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.123, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #24, !dbg !9864
  unreachable, !dbg !9864

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !9863
  %7 = lshr i16 433, %6, !dbg !9863
  %8 = and i16 %7, 1, !dbg !9863
  %9 = icmp eq i16 %8, 0, !dbg !9863
  br i1 %9, label %4, label %10, !dbg !9863

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !9863
  %12 = load i32, i32* %11, align 4, !dbg !9863
  ret i32 %12, !dbg !9874
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !9875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9880, metadata !DIExpression()), !dbg !9883
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #22, !dbg !9884
  call void @llvm.dbg.value(metadata i32 %2, metadata !9882, metadata !DIExpression()), !dbg !9883
  %3 = icmp eq i32 %2, -1, !dbg !9885
  br i1 %3, label %4, label %5, !dbg !9887

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !9888
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.123, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #24, !dbg !9888
  unreachable, !dbg !9888

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #22, !dbg !9893
  call void @llvm.dbg.value(metadata i32 %6, metadata !9881, metadata !DIExpression()), !dbg !9883
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !9894

7:                                                ; preds = %5
  br label %10, !dbg !9895

8:                                                ; preds = %5
  br label %10, !dbg !9899

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #21, !dbg !9902
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.123, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #24, !dbg !9902
  unreachable, !dbg !9902

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !9907
  ret i32 %11, !dbg !9908
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !9909 {
  %1 = tail call i32 @NOR_init() #22, !dbg !9910
  ret i32 0, !dbg !9911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !9912 {
  ret i32 0, !dbg !9913
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9914 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9918, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i32 %1, metadata !9919, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.value(metadata i32 0, metadata !9922, metadata !DIExpression()), !dbg !9923
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !9924

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !9925
  %5 = icmp eq i32 %4, 0, !dbg !9929
  br i1 %5, label %12, label %22, !dbg !9930

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !9931
  %8 = icmp eq i32 %7, 0, !dbg !9935
  br i1 %8, label %12, label %22, !dbg !9936

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !9937
  %11 = icmp eq i32 %10, 0, !dbg !9941
  br i1 %11, label %12, label %22, !dbg !9942

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !9943
  call void @llvm.dbg.value(metadata i32 %13, metadata !9922, metadata !DIExpression()), !dbg !9923
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #22, !dbg !9944
  call void @llvm.dbg.value(metadata i32 %14, metadata !9921, metadata !DIExpression()), !dbg !9923
  %15 = icmp eq i32 %14, -1, !dbg !9945
  br i1 %15, label %22, label %16, !dbg !9947

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !9948
  call void @llvm.dbg.value(metadata i32 %17, metadata !9921, metadata !DIExpression()), !dbg !9923
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #22, !dbg !9949
  call void @llvm.dbg.value(metadata i32 %18, metadata !9920, metadata !DIExpression()), !dbg !9923
  %19 = icmp eq i32 %18, 0, !dbg !9950
  br i1 %19, label %22, label %20, !dbg !9952

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #22, !dbg !9953
  br label %22, !dbg !9955

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !9923
  ret i32 %23, !dbg !9956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9961, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata i8* %1, metadata !9962, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata i32 %2, metadata !9963, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9964, metadata !DIExpression()), !dbg !9966
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #22, !dbg !9967
  call void @llvm.dbg.value(metadata i32 %4, metadata !9965, metadata !DIExpression()), !dbg !9966
  %5 = icmp eq i32 %4, 0, !dbg !9968
  br i1 %5, label %8, label %6, !dbg !9970

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #22, !dbg !9971
  br label %8, !dbg !9973

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !9966
  ret i32 %9, !dbg !9974
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9979, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.value(metadata i8* %1, metadata !9980, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.value(metadata i32 %2, metadata !9981, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9982, metadata !DIExpression()), !dbg !9987
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #22, !dbg !9988
  call void @llvm.dbg.value(metadata i32 %4, metadata !9983, metadata !DIExpression()), !dbg !9987
  %5 = icmp eq i32 %4, 0, !dbg !9989
  br i1 %5, label %8, label %6, !dbg !9991

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #22, !dbg !9992
  br label %21, !dbg !9994

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #21, !dbg !9995
  br i1 %9, label %10, label %21, !dbg !9996

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !9997
  call void @llvm.dbg.value(metadata i32 %11, metadata !9984, metadata !DIExpression()), !dbg !9999
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !9984, metadata !DIExpression()), !dbg !9999
  %15 = icmp ugt i32 %11, %14, !dbg !10000
  br i1 %15, label %21, label %16, !dbg !10002

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !9984, metadata !DIExpression()), !dbg !9999
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #21, !dbg !10003
  %19 = add i32 %17, 32, !dbg !10005
  call void @llvm.dbg.value(metadata i32 %19, metadata !9984, metadata !DIExpression()), !dbg !9999
  %20 = icmp ugt i32 %19, %14, !dbg !10000
  br i1 %20, label %21, label %16, !dbg !10002, !llvm.loop !10006

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !9987
  ret i32 %22, !dbg !10008
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10009 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10013, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 %1, metadata !10014, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i8* %0, metadata !10015, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 0, metadata !10016, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 0, metadata !10017, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 0, metadata !10018, metadata !DIExpression()), !dbg !10019
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10020
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10020
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10020
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10021
  %7 = load i32, i32* %6, align 4, !dbg !10021
  call void @llvm.dbg.value(metadata i32 %7, metadata !10018, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 0, metadata !10017, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 0, metadata !10016, metadata !DIExpression()), !dbg !10019
  %8 = icmp ugt i32 %7, %1, !dbg !10022
  br i1 %8, label %23, label %9, !dbg !10023

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !10024
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10018, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 %12, metadata !10017, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 %13, metadata !10016, metadata !DIExpression()), !dbg !10019
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !10026
  %15 = load i32, i32* %14, align 4, !dbg !10026
  %16 = mul i32 %15, %10, !dbg !10027
  %17 = add i32 %16, %13, !dbg !10028
  call void @llvm.dbg.value(metadata i32 %17, metadata !10016, metadata !DIExpression()), !dbg !10019
  %18 = add i32 %12, 1, !dbg !10029
  call void @llvm.dbg.value(metadata i32 %18, metadata !10017, metadata !DIExpression()), !dbg !10019
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !10030
  %20 = load i32, i32* %19, align 4, !dbg !10030
  %21 = add i32 %20, %11, !dbg !10031
  call void @llvm.dbg.value(metadata i32 %21, metadata !10018, metadata !DIExpression()), !dbg !10019
  %22 = icmp ugt i32 %21, %1, !dbg !10022
  br i1 %22, label %23, label %9, !dbg !10023, !llvm.loop !10032

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !10034
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !10019
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !10019
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !10019
  call void @llvm.dbg.value(metadata i8* %0, metadata !10015, metadata !DIExpression()), !dbg !10019
  %28 = sub i32 %1, %27, !dbg !10035
  %29 = add i32 %28, %24, !dbg !10036
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !10037
  %31 = load i32, i32* %30, align 4, !dbg !10037
  %32 = mul i32 %29, %31, !dbg !10038
  %33 = add i32 %32, %25, !dbg !10039
  call void @llvm.dbg.value(metadata i32 %33, metadata !10016, metadata !DIExpression()), !dbg !10019
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10040
  %35 = bitcast i8* %34 to i8**, !dbg !10040
  %36 = load i8*, i8** %35, align 4, !dbg !10040
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !10041
  ret i8* %37, !dbg !10042
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !10043 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10045, metadata !DIExpression()), !dbg !10049
  call void @llvm.dbg.value(metadata i32 %1, metadata !10046, metadata !DIExpression()), !dbg !10049
  call void @llvm.dbg.value(metadata i32 %2, metadata !10047, metadata !DIExpression()), !dbg !10049
  call void @llvm.dbg.value(metadata i8* %0, metadata !10048, metadata !DIExpression()), !dbg !10049
  %4 = icmp eq i32 %2, 0, !dbg !10050
  br i1 %4, label %6, label %5, !dbg !10053

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !10054
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.139, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.140, i32 0, i32 0)) #24, !dbg !10054
  unreachable, !dbg !10054

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !10048, metadata !DIExpression()), !dbg !10049
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #22, !dbg !10056
  %8 = inttoptr i32 %7 to i8*, !dbg !10057
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10058
  %10 = bitcast i8* %9 to i8**, !dbg !10058
  store i8* %8, i8** %10, align 4, !dbg !10059
  ret i8* %8, !dbg !10060
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !1928 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1932, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i32 %1, metadata !1933, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i8* %0, metadata !1934, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i32 0, metadata !1979, metadata !DIExpression()), !dbg !10061
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !10062
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !10062
  %5 = and i32 %1, 7, !dbg !10064
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !10065
  %7 = load i32, i32* %6, align 4, !dbg !10065
  %8 = icmp eq i32 %7, -1, !dbg !10066
  br i1 %8, label %62, label %9, !dbg !10067

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !10068
  br i1 %10, label %54, label %11, !dbg !10071

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !10072
  %13 = load i32, i32* %12, align 4, !dbg !10072
  %14 = icmp eq i32 %13, -1, !dbg !10075
  br i1 %14, label %44, label %15, !dbg !10076

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !10077
  br i1 %16, label %35, label %17, !dbg !10080

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10081
  %19 = add i32 %18, 1, !dbg !10081
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !10081
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10083
  %21 = shl nuw nsw i32 1, %5, !dbg !10085
  %22 = and i32 %20, %21, !dbg !10086
  %23 = icmp eq i32 %22, 0, !dbg !10086
  br i1 %23, label %30, label %24, !dbg !10087

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !10088
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #22, !dbg !10090
  %26 = ptrtoint i8* %25 to i32, !dbg !10091
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10092
  store i32 %26, i32* %27, align 4, !dbg !10093
  call void @llvm.dbg.value(metadata i32 %26, metadata !1979, metadata !DIExpression()), !dbg !10061
  %28 = xor i32 %21, -1, !dbg !10094
  %29 = and i32 %20, %28, !dbg !10095
  br label %71, !dbg !10096

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !10097
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #22, !dbg !10099
  %32 = ptrtoint i8* %31 to i32, !dbg !10100
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10101
  store i32 %32, i32* %33, align 4, !dbg !10102
  call void @llvm.dbg.value(metadata i32 %32, metadata !1979, metadata !DIExpression()), !dbg !10061
  %34 = or i32 %20, %21, !dbg !10103
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10104
  %37 = add i32 %36, 1, !dbg !10104
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !10104
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10106
  %39 = load i32, i32* %38, align 4, !dbg !10106
  call void @llvm.dbg.value(metadata i32 %39, metadata !1979, metadata !DIExpression()), !dbg !10061
  %40 = shl nuw nsw i32 1, %5, !dbg !10107
  %41 = xor i32 %40, -1, !dbg !10108
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10109
  %43 = and i32 %42, %41, !dbg !10109
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10110
  %46 = add i32 %45, 1, !dbg !10110
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !10110
  store i32 %1, i32* %12, align 4, !dbg !10112
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #22, !dbg !10113
  %48 = ptrtoint i8* %47 to i32, !dbg !10114
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10115
  store i32 %48, i32* %49, align 4, !dbg !10116
  call void @llvm.dbg.value(metadata i32 %48, metadata !1979, metadata !DIExpression()), !dbg !10061
  %50 = shl nuw nsw i32 1, %5, !dbg !10117
  %51 = xor i32 %50, -1, !dbg !10118
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10119
  %53 = and i32 %52, %51, !dbg !10119
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10120
  %56 = add i32 %55, 1, !dbg !10120
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !10120
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10122
  %58 = load i32, i32* %57, align 4, !dbg !10122
  call void @llvm.dbg.value(metadata i32 %58, metadata !1979, metadata !DIExpression()), !dbg !10061
  %59 = shl nuw nsw i32 1, %5, !dbg !10123
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10124
  %61 = or i32 %60, %59, !dbg !10124
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10125
  %64 = add i32 %63, 1, !dbg !10125
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !10125
  store i32 %1, i32* %6, align 4, !dbg !10127
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #22, !dbg !10128
  %66 = ptrtoint i8* %65 to i32, !dbg !10129
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10130
  store i32 %66, i32* %67, align 4, !dbg !10131
  call void @llvm.dbg.value(metadata i32 %66, metadata !1979, metadata !DIExpression()), !dbg !10061
  %68 = shl nuw nsw i32 1, %5, !dbg !10132
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10133
  %70 = or i32 %69, %68, !dbg !10133
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !10134
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !10134
  call void @llvm.dbg.value(metadata i32 %73, metadata !1979, metadata !DIExpression()), !dbg !10061
  ret i32 %73, !dbg !10135
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10136 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10138, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i32 %1, metadata !10139, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i8* %0, metadata !10140, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i32 0, metadata !10141, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i32 0, metadata !10142, metadata !DIExpression()), !dbg !10143
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10144
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10144
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10144
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10145
  %7 = load i32, i32* %6, align 4, !dbg !10145
  call void @llvm.dbg.value(metadata i32 %7, metadata !10142, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i32 0, metadata !10141, metadata !DIExpression()), !dbg !10143
  %8 = icmp ugt i32 %7, %1, !dbg !10146
  br i1 %8, label %17, label %9, !dbg !10147

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10142, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i32 %11, metadata !10141, metadata !DIExpression()), !dbg !10143
  %12 = add i32 %11, 1, !dbg !10148
  call void @llvm.dbg.value(metadata i32 %12, metadata !10141, metadata !DIExpression()), !dbg !10143
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !10150
  %14 = load i32, i32* %13, align 4, !dbg !10150
  %15 = add i32 %14, %10, !dbg !10151
  call void @llvm.dbg.value(metadata i32 %15, metadata !10142, metadata !DIExpression()), !dbg !10143
  %16 = icmp ugt i32 %15, %1, !dbg !10146
  br i1 %16, label %17, label %9, !dbg !10147, !llvm.loop !10152

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !10143
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !10154
  %20 = load i32, i32* %19, align 4, !dbg !10154
  ret i32 %20, !dbg !10155
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10156 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10158, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %1, metadata !10159, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i8* %0, metadata !10160, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 0, metadata !10161, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 0, metadata !10162, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 0, metadata !10163, metadata !DIExpression()), !dbg !10164
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10165
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10165
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10165
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10166
  %7 = load i32, i32* %6, align 4, !dbg !10166
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !10167
  %9 = load i32, i32* %8, align 4, !dbg !10167
  %10 = mul i32 %9, %7, !dbg !10168
  call void @llvm.dbg.value(metadata i32 %10, metadata !10162, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 0, metadata !10163, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 0, metadata !10161, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %1, metadata !10159, metadata !DIExpression()), !dbg !10164
  %11 = icmp ult i32 %10, %1, !dbg !10169
  br i1 %11, label %12, label %30, !dbg !10170

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !10171
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10163, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %16, metadata !10162, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %17, metadata !10161, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %18, metadata !10159, metadata !DIExpression()), !dbg !10164
  %19 = icmp eq i32 %14, 0, !dbg !10170
  br i1 %19, label %36, label %20, !dbg !10172

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !10173
  call void @llvm.dbg.value(metadata i32 %21, metadata !10163, metadata !DIExpression()), !dbg !10164
  %22 = sub i32 %18, %16, !dbg !10175
  call void @llvm.dbg.value(metadata i32 %22, metadata !10159, metadata !DIExpression()), !dbg !10164
  %23 = add i32 %17, 1, !dbg !10176
  call void @llvm.dbg.value(metadata i32 %23, metadata !10161, metadata !DIExpression()), !dbg !10164
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !10177
  %25 = load i32, i32* %24, align 4, !dbg !10177
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !10178
  %27 = load i32, i32* %26, align 4, !dbg !10178
  %28 = mul i32 %27, %25, !dbg !10179
  call void @llvm.dbg.value(metadata i32 %28, metadata !10162, metadata !DIExpression()), !dbg !10164
  %29 = icmp ugt i32 %22, %28, !dbg !10169
  br i1 %29, label %12, label %30, !dbg !10170, !llvm.loop !10180

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !10182
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !10164
  %34 = udiv i32 %32, %31, !dbg !10185
  %35 = add i32 %34, %33, !dbg !10186
  call void @llvm.dbg.value(metadata i32 %35, metadata !10163, metadata !DIExpression()), !dbg !10164
  br label %36, !dbg !10187

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !10188
  call void @llvm.dbg.value(metadata i32 %37, metadata !10163, metadata !DIExpression()), !dbg !10164
  ret i32 %37, !dbg !10189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !10190 {
  ret i32 134217728, !dbg !10191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !10192 {
  ret i32 3932160, !dbg !10193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !10194 {
  ret i32 0, !dbg !10195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !10196 {
  ret i32 262144, !dbg !10197
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !10198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10200, metadata !DIExpression()), !dbg !10202
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #21, !dbg !10203
  call void @llvm.dbg.value(metadata i32 %2, metadata !10201, metadata !DIExpression()), !dbg !10202
  %3 = icmp eq i32 %2, 0, !dbg !10204
  br i1 %3, label %5, label %4, !dbg !10206

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !10207
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.139, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.140, i32 0, i32 0)) #24, !dbg !10207
  unreachable, !dbg !10207

5:                                                ; preds = %1
  ret void, !dbg !10212
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10213 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10217, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 %1, metadata !10218, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i8* %2, metadata !10219, metadata !DIExpression()), !dbg !10230
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10231
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !10231
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10220, metadata !DIExpression()), !dbg !10232
  %7 = bitcast i32* %5 to i8*, !dbg !10233
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !10233
  call void @llvm.dbg.value(metadata i32* %5, metadata !10229, metadata !DIExpression(DW_OP_deref)), !dbg !10230
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !10234
  call void @llvm.va_start(i8* nonnull %6), !dbg !10235
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10236
  %10 = load i32, i32* %9, align 4, !dbg !10236
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10236
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !10236
  call void @llvm.va_end(i8* nonnull %6), !dbg !10237
  %13 = load i32, i32* %5, align 4, !dbg !10238
  call void @llvm.dbg.value(metadata i32 %13, metadata !10229, metadata !DIExpression()), !dbg !10230
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !10239
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !10240
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !10240
  ret void, !dbg !10240
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10241 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10243, metadata !DIExpression()), !dbg !10248
  call void @llvm.dbg.value(metadata i32 %1, metadata !10244, metadata !DIExpression()), !dbg !10248
  call void @llvm.dbg.value(metadata i8* %2, metadata !10245, metadata !DIExpression()), !dbg !10248
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10249
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !10249
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10246, metadata !DIExpression()), !dbg !10250
  %7 = bitcast i32* %5 to i8*, !dbg !10251
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !10251
  call void @llvm.dbg.value(metadata i32* %5, metadata !10247, metadata !DIExpression(DW_OP_deref)), !dbg !10248
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !10252
  call void @llvm.va_start(i8* nonnull %6), !dbg !10253
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10254
  %10 = load i32, i32* %9, align 4, !dbg !10254
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10254
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !10254
  call void @llvm.va_end(i8* nonnull %6), !dbg !10255
  %13 = load i32, i32* %5, align 4, !dbg !10256
  call void @llvm.dbg.value(metadata i32 %13, metadata !10247, metadata !DIExpression()), !dbg !10248
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !10257
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !10258
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !10258
  ret void, !dbg !10258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10259 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10261, metadata !DIExpression()), !dbg !10266
  call void @llvm.dbg.value(metadata i32 %1, metadata !10262, metadata !DIExpression()), !dbg !10266
  call void @llvm.dbg.value(metadata i8* %2, metadata !10263, metadata !DIExpression()), !dbg !10266
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10267
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !10267
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10264, metadata !DIExpression()), !dbg !10268
  %7 = bitcast i32* %5 to i8*, !dbg !10269
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !10269
  call void @llvm.dbg.value(metadata i32* %5, metadata !10265, metadata !DIExpression(DW_OP_deref)), !dbg !10266
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !10270
  call void @llvm.va_start(i8* nonnull %6), !dbg !10271
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10272
  %10 = load i32, i32* %9, align 4, !dbg !10272
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10272
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !10272
  call void @llvm.va_end(i8* nonnull %6), !dbg !10273
  %13 = load i32, i32* %5, align 4, !dbg !10274
  call void @llvm.dbg.value(metadata i32 %13, metadata !10265, metadata !DIExpression()), !dbg !10266
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !10275
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !10276
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !10276
  ret void, !dbg !10276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !10277 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10283, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata i32 %1, metadata !10284, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata i8* %2, metadata !10285, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata i8* %3, metadata !10286, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata i32 %4, metadata !10287, metadata !DIExpression()), !dbg !10288
  ret void, !dbg !10289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !10290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10292, metadata !DIExpression()), !dbg !10294
  %2 = shl i32 %0, 20, !dbg !10295
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10296
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !10297
  store volatile i32 %2, i32* %4, align 4, !dbg !10298
  %5 = load volatile i32, i32* %4, align 4, !dbg !10299
  %6 = or i32 %5, 65536, !dbg !10300
  store volatile i32 %6, i32* %4, align 4, !dbg !10301
  br label %7, !dbg !10302

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !10303
  %9 = and i32 %8, 1, !dbg !10304
  %10 = icmp eq i32 %9, 0, !dbg !10305
  br i1 %10, label %7, label %11, !dbg !10302, !llvm.loop !10306

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !10308
  %13 = lshr i32 %12, 8, !dbg !10309
  %14 = and i32 %13, 255, !dbg !10309
  call void @llvm.dbg.value(metadata i32 %14, metadata !10293, metadata !DIExpression()), !dbg !10294
  ret i32 %14, !dbg !10310
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !10311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10315, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 %1, metadata !10316, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 %1, metadata !10316, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10317
  %3 = shl i32 %1, 24, !dbg !10318
  %4 = shl i32 %0, 20, !dbg !10319
  %5 = or i32 %4, %3, !dbg !10320
  %6 = or i32 %5, 131072, !dbg !10320
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10321
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !10322
  store volatile i32 %6, i32* %8, align 4, !dbg !10323
  %9 = load volatile i32, i32* %8, align 4, !dbg !10324
  %10 = or i32 %9, 65536, !dbg !10325
  store volatile i32 %10, i32* %8, align 4, !dbg !10326
  br label %11, !dbg !10327

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !10328
  %13 = and i32 %12, 1, !dbg !10329
  %14 = icmp eq i32 %13, 0, !dbg !10330
  br i1 %14, label %11, label %15, !dbg !10327, !llvm.loop !10331

15:                                               ; preds = %11
  ret void, !dbg !10333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !10334 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !10335
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !10336
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !10337
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !10338
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !10339
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !10340
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !10341
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !10342
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !10343
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !10344
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !10345
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !10346
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !10347
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !10348
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !10349
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !10350
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !10351
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !10352
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !10353
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !10354
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !10355
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !10356
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !10357
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !10358
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !10359
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !10360
  ret void, !dbg !10361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !10362 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10365
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10366
  store volatile i32 21553, i32* %2, align 4, !dbg !10367
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10368
  store volatile i32 20489, i32* %3, align 4, !dbg !10369
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10370
  store volatile i32 20550, i32* %4, align 4, !dbg !10371
  ret i32 0, !dbg !10372
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !10373 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !10377, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.value(metadata i32 0, metadata !10375, metadata !DIExpression()), !dbg !10382
  call void @llvm.dbg.value(metadata i32 16384, metadata !10376, metadata !DIExpression()), !dbg !10382
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10383
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !10384
  store volatile i32 0, i32* %2, align 4, !dbg !10385
  call void @llvm.dbg.value(metadata i32 0, metadata !10379, metadata !DIExpression()), !dbg !10382
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !10379, metadata !DIExpression()), !dbg !10382
  br label %5, !dbg !10386

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !10379, metadata !DIExpression()), !dbg !10382
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !10378, metadata !DIExpression()), !dbg !10382
  br label %8, !dbg !10388

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10378, metadata !DIExpression()), !dbg !10382
  call void @llvm.dbg.value(metadata i32 0, metadata !10380, metadata !DIExpression()), !dbg !10382
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !10392

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !10380, metadata !DIExpression()), !dbg !10382
  %12 = icmp eq i32 %30, 2, !dbg !10396
  br i1 %12, label %31, label %13, !dbg !10392, !llvm.loop !10398

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10380, metadata !DIExpression()), !dbg !10382
  store volatile i32 0, i32* %2, align 4, !dbg !10400
  store volatile i32 63, i32* %3, align 4, !dbg !10402
  %15 = load i32, i32* %10, align 4, !dbg !10403
  %16 = shl i32 %15, 16, !dbg !10404
  %17 = shl nuw nsw i32 %14, 13, !dbg !10405
  %18 = or i32 %17, %7, !dbg !10406
  %19 = or i32 %18, %16, !dbg !10407
  store volatile i32 %19, i32* %2, align 4, !dbg !10408
  %20 = load volatile i32, i32* %2, align 4, !dbg !10409
  %21 = or i32 %20, 805, !dbg !10409
  store volatile i32 %21, i32* %2, align 4, !dbg !10409
  br label %22, !dbg !10410

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !10411
  %24 = and i32 %23, 2, !dbg !10412
  %25 = icmp eq i32 %24, 0, !dbg !10413
  br i1 %25, label %22, label %26, !dbg !10410, !llvm.loop !10414

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !10416
  %28 = and i32 %27, 1, !dbg !10418
  %29 = icmp eq i32 %28, 0, !dbg !10419
  %30 = add nuw nsw i32 %14, 1, !dbg !10420
  call void @llvm.dbg.value(metadata i32 %30, metadata !10380, metadata !DIExpression()), !dbg !10382
  br i1 %29, label %11, label %37, !dbg !10421

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !10422
  call void @llvm.dbg.value(metadata i32 %32, metadata !10378, metadata !DIExpression()), !dbg !10382
  %33 = icmp eq i32 %32, 2, !dbg !10423
  br i1 %33, label %34, label %8, !dbg !10388, !llvm.loop !10424

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !10426
  call void @llvm.dbg.value(metadata i32 %35, metadata !10379, metadata !DIExpression()), !dbg !10382
  %36 = icmp eq i32 %35, 2, !dbg !10427
  br i1 %36, label %37, label %5, !dbg !10386, !llvm.loop !10428

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !10382
  store volatile i32 0, i32* %2, align 4, !dbg !10382
  ret i32 %38, !dbg !10430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !10431 {
  %1 = tail call i32 @TestCase_MBIST() #22, !dbg !10432
  %2 = icmp ne i32 %1, 0, !dbg !10434
  %3 = sext i1 %2 to i32, !dbg !10435
  ret i32 %3, !dbg !10436
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !10437 {
  call void @llvm.dbg.value(metadata i32 31, metadata !10439, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i32 0, metadata !10440, metadata !DIExpression()), !dbg !10441
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10442
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10443
  store volatile i32 0, i32* %2, align 4, !dbg !10444
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10445
  store volatile i32 0, i32* %3, align 4, !dbg !10446
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10447
  store volatile i32 0, i32* %4, align 4, !dbg !10448
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10449
  store volatile i32 0, i32* %5, align 4, !dbg !10450
  call void @llvm.dbg.value(metadata i32 31, metadata !10439, metadata !DIExpression()), !dbg !10441
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10451
  store volatile i32 522133279, i32* %6, align 4, !dbg !10455
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10456
  store volatile i32 522133279, i32* %7, align 4, !dbg !10457
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #22, !dbg !10458
  %9 = icmp eq i32 %8, 0, !dbg !10460
  call void @llvm.dbg.value(metadata i32 31, metadata !10439, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10441
  br i1 %9, label %36, label %10, !dbg !10461

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10439, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i32 %11, metadata !10439, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10441
  call void @llvm.dbg.value(metadata i32 %11, metadata !10439, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10441
  %12 = icmp eq i32 %11, 0, !dbg !10462
  br i1 %12, label %26, label %13, !dbg !10463, !llvm.loop !10464

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !10466
  call void @llvm.dbg.value(metadata i32 %14, metadata !10439, metadata !DIExpression()), !dbg !10441
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10467
  %16 = shl i32 %14, 24, !dbg !10468
  %17 = shl i32 %14, 16, !dbg !10469
  %18 = shl i32 %14, 8, !dbg !10470
  %19 = or i32 %17, %14, !dbg !10471
  %20 = or i32 %19, %16, !dbg !10472
  %21 = or i32 %20, %18, !dbg !10473
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !10451
  store volatile i32 %21, i32* %22, align 4, !dbg !10455
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !10456
  store volatile i32 %21, i32* %23, align 4, !dbg !10457
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #22, !dbg !10458
  %25 = icmp eq i32 %24, 0, !dbg !10460
  call void @llvm.dbg.value(metadata i32 %14, metadata !10439, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10441
  br i1 %25, label %36, label %10, !dbg !10461

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !10440, metadata !DIExpression()), !dbg !10441
  %28 = shl nuw nsw i32 %27, 16, !dbg !10474
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10480
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !10481
  store volatile i32 %28, i32* %30, align 4, !dbg !10482
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #22, !dbg !10483
  %32 = icmp eq i32 %31, 0, !dbg !10485
  call void @llvm.dbg.value(metadata i32 %27, metadata !10440, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10441
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !10486
  call void @llvm.dbg.value(metadata i32 %33, metadata !10440, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i32 %27, metadata !10440, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10441
  br i1 %35, label %36, label %26, !dbg !10486, !llvm.loop !10487

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !10490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !10491 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !10492
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10493
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10494
  store volatile i32 1, i32* %2, align 4, !dbg !10495
  br label %3, !dbg !10496

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10497
  %5 = and i32 %4, 2, !dbg !10498
  %6 = icmp eq i32 %5, 0, !dbg !10498
  br i1 %6, label %3, label %7, !dbg !10496, !llvm.loop !10499

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !10501
  br label %8, !dbg !10502

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !10503
  %10 = and i32 %9, 2, !dbg !10504
  %11 = icmp eq i32 %10, 0, !dbg !10504
  br i1 %11, label %12, label %8, !dbg !10502, !llvm.loop !10505

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !10507
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !10508
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !10509

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !10510
  %17 = and i32 %16, 1, !dbg !10511
  %18 = icmp eq i32 %17, 0, !dbg !10512
  br i1 %18, label %15, label %19, !dbg !10509, !llvm.loop !10513

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #22, !dbg !10515
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #22, !dbg !10516
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !10517

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !10518
  %24 = and i32 %23, 1, !dbg !10519
  %25 = icmp eq i32 %24, 0, !dbg !10520
  br i1 %25, label %22, label %26, !dbg !10517, !llvm.loop !10521

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !10523
  %28 = icmp eq i32 %27, 9507, !dbg !10525
  br i1 %28, label %29, label %37, !dbg !10526

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !10527
  %31 = and i32 %30, 15, !dbg !10530
  %32 = icmp eq i32 %31, 2, !dbg !10531
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10532
  %34 = and i32 %33, -128, !dbg !10532
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !10532
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10532
  br label %37, !dbg !10533

37:                                               ; preds = %29, %26
  ret void, !dbg !10533
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !10534 {
  tail call void @EMI_PowerOn_Init() #22, !dbg !10537
  tail call void @__EMI_SetRegValfromCMCP() #22, !dbg !10538
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #22, !dbg !10539
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !10540
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #22, !dbg !10541
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !10542
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #22, !dbg !10543
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !10544
  ret i8 0, !dbg !10545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !10546 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !10547
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10548
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !10549
  store volatile i32 %1, i32* %3, align 4, !dbg !10550
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !10551
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !10552
  store volatile i32 %4, i32* %5, align 4, !dbg !10553
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !10554
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !10555
  store volatile i32 %6, i32* %7, align 4, !dbg !10556
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !10557
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !10558
  store volatile i32 %8, i32* %9, align 4, !dbg !10559
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !10560
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !10561
  store volatile i32 %10, i32* %11, align 4, !dbg !10562
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !10563
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !10564
  store volatile i32 %12, i32* %13, align 4, !dbg !10565
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !10566
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !10567
  store volatile i32 %14, i32* %15, align 4, !dbg !10568
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !10569
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !10570
  store volatile i32 %16, i32* %17, align 4, !dbg !10571
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !10572
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !10573
  store volatile i32 %18, i32* %19, align 4, !dbg !10574
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !10575
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !10576
  store volatile i32 %20, i32* %21, align 4, !dbg !10577
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !10578
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !10579
  store volatile i32 %22, i32* %23, align 4, !dbg !10580
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !10581
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !10582
  store volatile i32 %24, i32* %25, align 4, !dbg !10583
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !10584
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !10585
  store volatile i32 %26, i32* %27, align 4, !dbg !10586
  tail call void @__EMI_EnableDataAutoTracking() #22, !dbg !10587
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10588
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !10589
  store volatile i32 806289408, i32* %29, align 4, !dbg !10590
  br label %30, !dbg !10591

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !10592
  %32 = and i32 %31, 128, !dbg !10593
  %33 = icmp eq i32 %32, 0, !dbg !10593
  br i1 %33, label %30, label %34, !dbg !10591, !llvm.loop !10594

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !10596
  br label %35, !dbg !10597

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !10598
  %37 = and i32 %36, 128, !dbg !10599
  %38 = icmp eq i32 %37, 0, !dbg !10599
  br i1 %38, label %39, label %35, !dbg !10597, !llvm.loop !10600

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !10602
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #22, !dbg !10603
  ret i8 0, !dbg !10604
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !10605 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10606
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10607
  %3 = load volatile i32, i32* %2, align 4, !dbg !10607
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10608
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10609
  %5 = load volatile i32, i32* %4, align 4, !dbg !10609
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10610
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10611
  %7 = load volatile i32, i32* %6, align 4, !dbg !10611
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10612
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10613
  %9 = load volatile i32, i32* %8, align 4, !dbg !10613
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10614
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10615
  %11 = load volatile i32, i32* %10, align 4, !dbg !10615
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10616
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10617
  %13 = load volatile i32, i32* %12, align 4, !dbg !10617
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10618
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10619
  %15 = load volatile i32, i32* %14, align 4, !dbg !10619
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10620
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10621
  %17 = load volatile i32, i32* %16, align 4, !dbg !10621
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10622
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10623
  %19 = load volatile i32, i32* %18, align 4, !dbg !10623
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10624
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10625
  %21 = load volatile i32, i32* %20, align 4, !dbg !10625
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10626
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10627
  %23 = load volatile i32, i32* %22, align 4, !dbg !10627
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10628
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10629
  %25 = load volatile i32, i32* %24, align 4, !dbg !10629
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10630
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10631
  %27 = load volatile i32, i32* %26, align 4, !dbg !10631
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10632
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10633
  %29 = load volatile i32, i32* %28, align 4, !dbg !10633
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10634
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10635
  %31 = load volatile i32, i32* %30, align 4, !dbg !10635
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10636
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10637
  %33 = load volatile i32, i32* %32, align 4, !dbg !10637
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10638
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10639
  %35 = load volatile i32, i32* %34, align 4, !dbg !10639
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10640
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10641
  %37 = load volatile i32, i32* %36, align 4, !dbg !10641
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10642
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10643
  %39 = load volatile i32, i32* %38, align 4, !dbg !10643
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10644
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10645
  %41 = load volatile i32, i32* %40, align 4, !dbg !10645
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10646
  ret void, !dbg !10647
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !10648 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10649

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10650
  %5 = and i32 %4, 17, !dbg !10651
  %6 = icmp eq i32 %5, 17, !dbg !10652
  br i1 %6, label %7, label %3, !dbg !10649, !llvm.loop !10653

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10655
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10656
  store volatile i32 %8, i32* %9, align 4, !dbg !10657
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10658
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10659
  store volatile i32 %10, i32* %11, align 4, !dbg !10660
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10661
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10662
  store volatile i32 %12, i32* %13, align 4, !dbg !10663
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10664
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10665
  store volatile i32 %14, i32* %15, align 4, !dbg !10666
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10667
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10668
  store volatile i32 %16, i32* %17, align 4, !dbg !10669
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10670
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10671
  store volatile i32 %18, i32* %19, align 4, !dbg !10672
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10673
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10674
  store volatile i32 %20, i32* %21, align 4, !dbg !10675
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10676
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10677
  store volatile i32 %22, i32* %23, align 4, !dbg !10678
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10679
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10680
  store volatile i32 %24, i32* %25, align 4, !dbg !10681
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10682
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10683
  store volatile i32 %26, i32* %27, align 4, !dbg !10684
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10685
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10686
  store volatile i32 %28, i32* %29, align 4, !dbg !10687
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10688
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10689
  store volatile i32 %30, i32* %31, align 4, !dbg !10690
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10691
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10692
  store volatile i32 %32, i32* %33, align 4, !dbg !10693
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10694
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10695
  store volatile i32 %34, i32* %35, align 4, !dbg !10696
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10697
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10698
  store volatile i32 %36, i32* %37, align 4, !dbg !10699
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10700
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10701
  store volatile i32 %38, i32* %39, align 4, !dbg !10702
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10703
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10704
  store volatile i32 %40, i32* %41, align 4, !dbg !10705
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10706
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10707
  store volatile i32 %42, i32* %43, align 4, !dbg !10708
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10709
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10710
  store volatile i32 %44, i32* %45, align 4, !dbg !10711
  ret void, !dbg !10712
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !10713 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10714
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10715
  %3 = load volatile i32, i32* %2, align 4, !dbg !10715
  %4 = and i32 %3, -2097185, !dbg !10716
  store volatile i32 %4, i32* %2, align 4, !dbg !10717
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10718
  store volatile i32 1, i32* %5, align 4, !dbg !10719
  br label %6, !dbg !10720

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !10721
  %8 = and i32 %7, 2, !dbg !10722
  %9 = icmp eq i32 %8, 0, !dbg !10722
  br i1 %9, label %6, label %10, !dbg !10720, !llvm.loop !10723

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !10725
  br label %11, !dbg !10726

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !10727
  %13 = and i32 %12, 2, !dbg !10728
  %14 = icmp eq i32 %13, 0, !dbg !10728
  br i1 %14, label %15, label %11, !dbg !10726, !llvm.loop !10729

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #22, !dbg !10731
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10732
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !10733
  store volatile i32 806289408, i32* %17, align 4, !dbg !10734
  br label %18, !dbg !10735

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !10736
  %20 = and i32 %19, 128, !dbg !10737
  %21 = icmp eq i32 %20, 0, !dbg !10737
  br i1 %21, label %18, label %22, !dbg !10735, !llvm.loop !10738

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !10740
  br label %23, !dbg !10741

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !10742
  %25 = and i32 %24, 128, !dbg !10743
  %26 = icmp eq i32 %25, 0, !dbg !10743
  br i1 %26, label %27, label %23, !dbg !10741, !llvm.loop !10744

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !10746
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10747
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !10748
  store volatile i32 %28, i32* %29, align 4, !dbg !10749
  ret void, !dbg !10750
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !10751 {
  tail call void @EMI_Setting_Save() #22, !dbg !10752
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10753

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10754
  %5 = and i32 %4, 17, !dbg !10755
  %6 = icmp eq i32 %5, 17, !dbg !10756
  br i1 %6, label %7, label %3, !dbg !10753, !llvm.loop !10757

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !10759
  %9 = or i32 %8, 1792, !dbg !10760
  store volatile i32 %9, i32* %2, align 4, !dbg !10761
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !10762
  store volatile i32 -261685248, i32* %10, align 4, !dbg !10763
  br label %11, !dbg !10764

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !10765
  %13 = and i32 %12, 1, !dbg !10766
  %14 = icmp eq i32 %13, 0, !dbg !10767
  br i1 %14, label %11, label %15, !dbg !10764, !llvm.loop !10768

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10770
  store volatile i32 0, i32* %16, align 4, !dbg !10771
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !10772

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !10773
  %20 = and i32 %19, 16, !dbg !10774
  %21 = icmp eq i32 %20, 0, !dbg !10774
  br i1 %21, label %18, label %22, !dbg !10772, !llvm.loop !10775

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10777
  %24 = load volatile i32, i32* %23, align 4, !dbg !10777
  %25 = or i32 %24, 2097184, !dbg !10778
  store volatile i32 %25, i32* %23, align 4, !dbg !10779
  ret void, !dbg !10780
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !10781 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10786, metadata !DIExpression()), !dbg !10788
  %3 = bitcast i32* %2 to i8*, !dbg !10789
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10789
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10787, metadata !DIExpression()), !dbg !10790
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !10791

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10792
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !10795
  store volatile i32 0, i32* %6, align 4, !dbg !10796
  store volatile i32 806289408, i32* %6, align 4, !dbg !10797
  br label %7, !dbg !10798

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !10799
  %9 = and i32 %8, 128, !dbg !10800
  %10 = icmp eq i32 %9, 0, !dbg !10800
  br i1 %10, label %7, label %11, !dbg !10798, !llvm.loop !10801

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !10803
  br label %12, !dbg !10804

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !10805
  %14 = and i32 %13, 128, !dbg !10806
  %15 = icmp eq i32 %14, 0, !dbg !10806
  br i1 %15, label %16, label %12, !dbg !10804, !llvm.loop !10807

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !10809
  store volatile i32 0, i32* %2, align 4, !dbg !10810
  %17 = load volatile i32, i32* %2, align 4, !dbg !10812
  %18 = icmp ult i32 %17, 255, !dbg !10814
  br i1 %18, label %19, label %25, !dbg !10815

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !10816
  %21 = add i32 %20, 1, !dbg !10816
  store volatile i32 %21, i32* %2, align 4, !dbg !10816
  %22 = load volatile i32, i32* %2, align 4, !dbg !10812
  %23 = icmp ult i32 %22, 255, !dbg !10814
  br i1 %23, label %19, label %25, !dbg !10815, !llvm.loop !10817

24:                                               ; preds = %1
  br label %25, !dbg !10819

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !10788
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10822
  ret i32 %26, !dbg !10822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !10823 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10824
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10825
  %3 = load volatile i32, i32* %2, align 4, !dbg !10825
  %4 = or i32 %3, 1792, !dbg !10826
  store volatile i32 %4, i32* %2, align 4, !dbg !10827
  ret void, !dbg !10828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !10829 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10830
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10831
  %3 = load volatile i32, i32* %2, align 4, !dbg !10831
  %4 = and i32 %3, -1793, !dbg !10832
  store volatile i32 %4, i32* %2, align 4, !dbg !10833
  ret void, !dbg !10834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !10835 {
  ret i1 false, !dbg !10836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !10837 {
  ret i1 false, !dbg !10838
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !10839 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #21, !dbg !10840
  ret void, !dbg !10843
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !10844 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #21, !dbg !10845
  ret void, !dbg !10848
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !10849 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #21, !dbg !10850
  ret void, !dbg !10853
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !10854 {
  tail call void @peri_26m_dcxo() #21, !dbg !10855
  ret void, !dbg !10858
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !10859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10863, metadata !DIExpression()), !dbg !10864
  %2 = trunc i32 %0 to i8, !dbg !10865
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #21, !dbg !10866
  ret i32 %0, !dbg !10867
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !10868 {
  tail call fastcc void @SystemClock_Config() #22, !dbg !10869
  tail call void @SystemCoreClockUpdate() #21, !dbg !10870
  tail call fastcc void @prvSetupHardware() #22, !dbg !10871
  tail call void asm sideeffect "cpsie i", "~{memory}"() #23, !dbg !10872, !srcloc !10875
  tail call void asm sideeffect "cpsie f", "~{memory}"() #23, !dbg !10876, !srcloc !10879
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0)) #21, !dbg !10880
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.152, i32 0, i32 0)) #21, !dbg !10881
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0)) #21, !dbg !10882
  tail call fastcc void @flash_sample() #22, !dbg !10883
  br label %4, !dbg !10884

4:                                                ; preds = %0, %4
  br label %4, !dbg !10884, !llvm.loop !10885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !10887 {
  %1 = tail call i32 @hal_clock_init() #21, !dbg !10888
  ret void, !dbg !10889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !10890 {
  tail call fastcc void @log_uart_init() #22, !dbg !10891
  %1 = tail call i32 @hal_flash_init() #21, !dbg !10892
  %2 = tail call i32 @hal_nvic_init() #21, !dbg !10893
  ret void, !dbg !10894
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_sample() unnamed_addr #0 !dbg !10895 {
  %1 = alloca [8 x i32], align 4
  %2 = alloca [8 x i32], align 4
  %3 = bitcast [8 x i32]* %1 to i8*, !dbg !10903
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !10903
  call void @llvm.dbg.declare(metadata [8 x i32]* %1, metadata !10898, metadata !DIExpression()), !dbg !10904
  call void @llvm.dbg.value(metadata i32 2064384, metadata !10901, metadata !DIExpression()), !dbg !10905
  %4 = bitcast [8 x i32]* %2 to i8*, !dbg !10906
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #23, !dbg !10906
  call void @llvm.dbg.declare(metadata [8 x i32]* %2, metadata !10902, metadata !DIExpression()), !dbg !10907
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %4, i8* noundef nonnull align 4 dereferenceable(32) bitcast ([8 x i32]* @__const.flash_sample.data to i8*), i32 32, i1 false), !dbg !10907
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i32 0, i32 0)) #21, !dbg !10908
  %6 = tail call i32 @hal_flash_erase(i32 noundef 2064384, i32 noundef 0) #21, !dbg !10909
  call void @llvm.dbg.value(metadata i32 %6, metadata !10897, metadata !DIExpression()), !dbg !10905
  %7 = icmp eq i32 %6, 0, !dbg !10910
  br i1 %7, label %10, label %8, !dbg !10912

8:                                                ; preds = %0
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0)) #21, !dbg !10913
  br label %33, !dbg !10915

10:                                               ; preds = %0
  %11 = call i32 @hal_flash_write(i32 noundef 2064384, i8* noundef nonnull %4, i32 noundef 32) #21, !dbg !10916
  call void @llvm.dbg.value(metadata i32 %11, metadata !10897, metadata !DIExpression()), !dbg !10905
  %12 = icmp eq i32 %11, 0, !dbg !10917
  br i1 %12, label %15, label %13, !dbg !10919

13:                                               ; preds = %10
  %14 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0)) #21, !dbg !10920
  br label %33, !dbg !10922

15:                                               ; preds = %10
  %16 = call i32 @hal_flash_read(i32 noundef 2064384, i8* noundef nonnull %3, i32 noundef 32) #21, !dbg !10923
  call void @llvm.dbg.value(metadata i32 0, metadata !10900, metadata !DIExpression()), !dbg !10905
  br label %20, !dbg !10924

17:                                               ; preds = %20
  %18 = add nuw nsw i32 %21, 1, !dbg !10926
  call void @llvm.dbg.value(metadata i32 %18, metadata !10900, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32 %21, metadata !10900, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10905
  %19 = icmp eq i32 %18, 8, !dbg !10928
  br i1 %19, label %29, label %20, !dbg !10924, !llvm.loop !10929

20:                                               ; preds = %15, %17
  %21 = phi i32 [ 0, %15 ], [ %18, %17 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !10900, metadata !DIExpression()), !dbg !10905
  %22 = getelementptr inbounds [8 x i32], [8 x i32]* %1, i32 0, i32 %21, !dbg !10931
  %23 = load i32, i32* %22, align 4, !dbg !10931
  %24 = getelementptr inbounds [8 x i32], [8 x i32]* %2, i32 0, i32 %21, !dbg !10934
  %25 = load i32, i32* %24, align 4, !dbg !10934
  %26 = icmp eq i32 %23, %25, !dbg !10935
  call void @llvm.dbg.value(metadata i32 %21, metadata !10900, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10905
  br i1 %26, label %17, label %27, !dbg !10936

27:                                               ; preds = %20
  %28 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i32 0, i32 0)) #21, !dbg !10937
  call void @llvm.dbg.value(metadata i32 -6, metadata !10897, metadata !DIExpression()), !dbg !10905
  br label %33, !dbg !10939

29:                                               ; preds = %17
  %30 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i32 0, i32 0)) #21, !dbg !10940
  %31 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i32 0, i32 0)) #21, !dbg !10943
  %32 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !10944
  br label %33, !dbg !10945

33:                                               ; preds = %29, %27, %13, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #23, !dbg !10946
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #23, !dbg !10946
  ret void, !dbg !10946
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #20

; Function Attrs: noinline nounwind optsize
define internal fastcc void @log_uart_init() unnamed_addr #0 !dbg !10947 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !10957
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #23, !dbg !10957
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !10949, metadata !DIExpression()), !dbg !10958
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #21, !dbg !10959
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #21, !dbg !10960
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #21, !dbg !10961
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #21, !dbg !10962
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !10963
  store i32 9, i32* %7, align 4, !dbg !10964
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !10965
  store i32 3, i32* %8, align 4, !dbg !10966
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !10967
  store i32 0, i32* %9, align 4, !dbg !10968
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !10969
  store i32 0, i32* %10, align 4, !dbg !10970
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #21, !dbg !10971
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #23, !dbg !10972
  ret void, !dbg !10972
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !10973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10975, metadata !DIExpression()), !dbg !10976
  ret i32 0, !dbg !10977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !10978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11028, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !11029, metadata !DIExpression()), !dbg !11030
  ret i32 0, !dbg !11031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !11032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11034, metadata !DIExpression()), !dbg !11035
  ret i32 1, !dbg !11036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11041, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 %1, metadata !11042, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 %2, metadata !11043, metadata !DIExpression()), !dbg !11044
  ret i32 0, !dbg !11045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11046 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11050, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i32 %1, metadata !11051, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i32 %2, metadata !11052, metadata !DIExpression()), !dbg !11053
  ret i32 -1, !dbg !11054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11059, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i8* %1, metadata !11060, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %2, metadata !11061, metadata !DIExpression()), !dbg !11062
  ret i32 0, !dbg !11063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !11064 {
  ret i32 1, !dbg !11065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !11066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11070, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32 %1, metadata !11071, metadata !DIExpression()), !dbg !11072
  ret i32 -1, !dbg !11073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !11074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11076, metadata !DIExpression()), !dbg !11077
  ret i32 -1, !dbg !11078
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2164 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2362, metadata !DIExpression()), !dbg !11079
  call void @llvm.dbg.value(metadata i32 %1, metadata !2363, metadata !DIExpression()), !dbg !11079
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #23, !dbg !11080, !srcloc !11081
  call void @llvm.dbg.value(metadata i8* %3, metadata !2365, metadata !DIExpression()), !dbg !11079
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !11082
  %5 = icmp eq i8* %4, null, !dbg !11084
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !11085
  call void @llvm.dbg.value(metadata i8* %6, metadata !2364, metadata !DIExpression()), !dbg !11079
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !11086
  %8 = icmp ult i8* %3, %7, !dbg !11088
  %9 = xor i1 %8, true, !dbg !11089
  %10 = or i1 %5, %9, !dbg !11089
  br i1 %10, label %11, label %13, !dbg !11089

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !11090
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !11089
  br label %13, !dbg !11089

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !11090
  ret i8* %14, !dbg !11089
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !11091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11093, metadata !DIExpression()), !dbg !11097
  call void @llvm.dbg.value(metadata i8* %1, metadata !11094, metadata !DIExpression()), !dbg !11097
  call void @llvm.dbg.value(metadata i32 %2, metadata !11095, metadata !DIExpression()), !dbg !11097
  call void @llvm.dbg.value(metadata i32 0, metadata !11096, metadata !DIExpression()), !dbg !11097
  %4 = icmp sgt i32 %2, 0, !dbg !11098
  br i1 %4, label %5, label %14, !dbg !11101

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11096, metadata !DIExpression()), !dbg !11097
  call void @llvm.dbg.value(metadata i8* %7, metadata !11094, metadata !DIExpression()), !dbg !11097
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !11102
  call void @llvm.dbg.value(metadata i8* %8, metadata !11094, metadata !DIExpression()), !dbg !11097
  %9 = load i8, i8* %7, align 1, !dbg !11104
  %10 = zext i8 %9 to i32, !dbg !11104
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #21, !dbg !11105
  %12 = add nuw nsw i32 %6, 1, !dbg !11106
  call void @llvm.dbg.value(metadata i32 %12, metadata !11096, metadata !DIExpression()), !dbg !11097
  %13 = icmp eq i32 %12, %2, !dbg !11098
  br i1 %13, label %14, label %5, !dbg !11101, !llvm.loop !11107

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !11109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !11110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11112, metadata !DIExpression()), !dbg !11114
  %2 = add i32 %0, -1, !dbg !11115
  %3 = icmp ugt i32 %2, 16777215, !dbg !11117
  br i1 %3, label %8, label %4, !dbg !11118

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11119
  call void @llvm.dbg.value(metadata i32 %5, metadata !11113, metadata !DIExpression()), !dbg !11114
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11120
  %7 = and i32 %6, -4, !dbg !11120
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11120
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11121
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11122
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11123
  br label %8, !dbg !11124

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !11114
  ret i32 %9, !dbg !11125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !11126 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !11127
  ret void, !dbg !11128
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !11129 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !11130
  ret i32 %1, !dbg !11131
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !11132 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !11135
  %2 = lshr i32 %1, 3, !dbg !11136
  %3 = and i32 %2, 15, !dbg !11136
  call void @llvm.dbg.value(metadata i32 %3, metadata !11134, metadata !DIExpression()), !dbg !11137
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !11138

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !11139

5:                                                ; preds = %0, %0
  br label %9, !dbg !11141

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !11142
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11143
  br label %15, !dbg !11145

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !11142
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11143
  %12 = and i32 %11, 1024, !dbg !11146
  %13 = icmp eq i32 %12, 0, !dbg !11146
  br i1 %13, label %15, label %14, !dbg !11145

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !11147
  br label %15, !dbg !11149

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !11150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !11151 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11152
  %2 = or i32 %1, 15728640, !dbg !11152
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11152
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !11153
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11154
  %4 = or i32 %3, 458752, !dbg !11154
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11154
  ret void, !dbg !11155
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !11156 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11157
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11158
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11159
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !11160
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !11161
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11162
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11163
  ret void, !dbg !11164
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { argmemonly nofree nounwind willreturn }
attributes #21 = { nobuiltin nounwind optsize "no-builtins" }
attributes #22 = { nobuiltin optsize "no-builtins" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !2490, !94, !345, !628, !2516, !783, !873, !2520, !964, !1063, !1388, !2566, !1476, !1487, !1845, !1906, !2568, !1986, !2152, !2570, !2357, !2368, !2478}
!llvm.ident = !{!2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574, !2574}
!llvm.module.flags = !{!2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !94, file: !95, line: 48, type: !341, isLocal: false, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !263, globals: !278, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!96 = !{!97, !157, !162, !168, !245, !254, !259}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 1170, baseType: !18, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!100 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!101 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!102 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!103 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!104 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!105 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!106 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!107 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!108 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!109 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!110 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!111 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!112 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!113 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!114 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!115 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!116 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!117 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!118 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!119 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!120 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!121 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!122 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!123 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!124 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!125 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!126 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!127 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!128 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!129 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!130 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!131 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!132 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!133 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!134 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!135 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!136 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!137 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!138 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!139 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!140 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!141 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!142 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!143 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!144 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!145 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!146 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!147 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!148 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!149 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!150 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!151 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!152 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!153 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!154 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!155 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!156 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 82, baseType: !18, size: 32, elements: !159)
!158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!159 = !{!160, !161}
!160 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!161 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 75, baseType: !18, size: 32, elements: !163)
!163 = !{!164, !165, !166, !167}
!164 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!165 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!166 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!167 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !169)
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!170 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!171 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!172 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!173 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!174 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!175 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!176 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!177 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!178 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!179 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!180 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!181 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!182 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!183 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!184 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!185 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!186 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!187 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!188 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!189 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!190 = !DIEnumerator(name: "KP_IRQn", value: 10)
!191 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!192 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!193 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!194 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!195 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!196 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!197 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!198 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!199 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!200 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!201 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!202 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!203 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!204 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!205 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!206 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!207 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!208 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!209 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!210 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!211 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!212 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!213 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!214 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!215 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!216 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!217 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!218 = !DIEnumerator(name: "SF_IRQn", value: 38)
!219 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!220 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!221 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!222 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!223 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!224 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!225 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!226 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!227 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!228 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!229 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!230 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!231 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!232 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!233 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!234 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!235 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!236 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!237 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!238 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!239 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!240 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!241 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!242 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!243 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!244 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 846, baseType: !18, size: 32, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252, !253}
!247 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!248 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!249 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!250 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!251 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!252 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!253 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 380, baseType: !18, size: 32, elements: !256)
!255 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!258 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 397, baseType: !18, size: 32, elements: !260)
!260 = !{!261, !262}
!261 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!262 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!263 = !{!61, !264, !88}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !267)
!267 = !{!268, !269, !270, !271, !273, !274, !275, !276, !277}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !266, file: !56, line: 1263, baseType: !60, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !266, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !266, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !266, file: !56, line: 1266, baseType: !272, size: 32, offset: 96)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !266, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !266, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !266, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !266, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !266, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!278 = !{!92, !279, !288, !294, !316, !339}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !94, file: !95, line: 49, type: !281, isLocal: false, isDefinition: true)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !284)
!284 = !{!285, !286, !287}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !283, file: !56, line: 1257, baseType: !272, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !283, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !283, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "flag", scope: !290, file: !95, line: 88, type: !91, isLocal: true, isDefinition: true)
!290 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !95, file: !95, line: 86, type: !291, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{null}
!293 = !{}
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !94, file: !95, line: 51, type: !296, isLocal: false, isDefinition: true)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 768, elements: !314)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !158, line: 116, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 111, size: 128, elements: !299)
!299 = !{!300, !302, !312, !313}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !298, file: !158, line: 112, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !255, line: 400, baseType: !259)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !298, file: !158, line: 113, baseType: !303, size: 64, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !158, line: 109, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 106, size: 64, elements: !305)
!305 = !{!306, !311}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !304, file: !158, line: 107, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !255, line: 371, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !88}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !304, file: !158, line: 108, baseType: !88, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !298, file: !158, line: 114, baseType: !91, size: 8, offset: 96)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !298, file: !158, line: 115, baseType: !91, size: 8, offset: 104)
!314 = !{!315}
!315 = !DISubrange(count: 6)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !94, file: !95, line: 52, type: !318, isLocal: false, isDefinition: true)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !158, line: 134, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 125, size: 4256, elements: !320)
!320 = !{!321, !332, !333, !334, !335, !336, !337, !338}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !319, file: !158, line: 126, baseType: !322, size: 4096)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 4096, elements: !330)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !158, line: 123, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 118, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !324, file: !158, line: 119, baseType: !303, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !324, file: !158, line: 120, baseType: !61, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !324, file: !158, line: 121, baseType: !91, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !324, file: !158, line: 122, baseType: !91, size: 8, offset: 104)
!330 = !{!331}
!331 = !DISubrange(count: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !319, file: !158, line: 127, baseType: !61, size: 32, offset: 4096)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !319, file: !158, line: 128, baseType: !61, size: 32, offset: 4128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !319, file: !158, line: 129, baseType: !61, size: 32, offset: 4160)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !319, file: !158, line: 130, baseType: !61, size: 32, offset: 4192)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !319, file: !158, line: 131, baseType: !91, size: 8, offset: 4224)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !319, file: !158, line: 132, baseType: !91, size: 8, offset: 4232)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !319, file: !158, line: 133, baseType: !91, size: 8, offset: 4240)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !94, file: !95, line: 53, type: !61, isLocal: false, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 192, elements: !314)
!342 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !345, file: !346, line: 64, type: !446, isLocal: false, isDefinition: true)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !347, retainedTypes: !441, globals: !445, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!347 = !{!348, !400, !407, !411, !417, !421, !430, !435}
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 339, baseType: !18, size: 32, elements: !349)
!349 = !{!350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399}
!350 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!351 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!352 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!353 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!354 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!355 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!356 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!357 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!358 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!359 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!360 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!361 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!362 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!363 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!364 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!365 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!366 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!367 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!368 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!369 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!370 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!371 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!372 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!373 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!374 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!375 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!376 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!377 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!378 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!379 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!380 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!381 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!382 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!383 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!384 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!385 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!386 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!387 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!388 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!389 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!390 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!391 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!392 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!393 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!394 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!395 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!396 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!397 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!398 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!399 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 224, baseType: !7, size: 32, elements: !402)
!401 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!402 = !{!403, !404, !405, !406}
!403 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!404 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!405 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!406 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 210, baseType: !18, size: 32, elements: !408)
!408 = !{!409, !410}
!409 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!410 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!411 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 233, baseType: !7, size: 32, elements: !412)
!412 = !{!413, !414, !415, !416}
!413 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!414 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!415 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!416 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 217, baseType: !18, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!420 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!421 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 415, baseType: !18, size: 32, elements: !422)
!422 = !{!423, !424, !425, !426, !427, !428, !429}
!423 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!424 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!425 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!426 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!427 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!428 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!429 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!430 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 427, baseType: !18, size: 32, elements: !431)
!431 = !{!432, !433, !434}
!432 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!433 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!434 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!435 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 242, baseType: !18, size: 32, elements: !436)
!436 = !{!437, !438, !439, !440}
!437 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!438 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!439 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!440 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!441 = !{!88, !442, !443, !444}
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !401, line: 213, baseType: !407)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !401, line: 220, baseType: !417)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !401, line: 247, baseType: !435)
!445 = !{!343}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !448)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !449)
!449 = !{!450, !467, !471, !480, !481, !490, !491, !500, !501, !511, !512, !521, !522, !531, !532, !541, !542, !551, !555, !564, !565, !574, !575, !584, !593, !594, !605, !609, !618, !619}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !448, file: !56, line: 1523, baseType: !451, size: 256)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !465)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !454)
!454 = !{!455, !456, !457, !458}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !453, file: !56, line: 1396, baseType: !60, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !453, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !453, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !453, file: !56, line: 1399, baseType: !459, size: 32, offset: 96)
!459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 32, elements: !463)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !461)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !462)
!462 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!463 = !{!464}
!464 = !DISubrange(count: 4)
!465 = !{!466}
!466 = !DISubrange(count: 2)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !448, file: !56, line: 1524, baseType: !468, size: 1792, offset: 256)
!468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1792, elements: !469)
!469 = !{!470}
!470 = !DISubrange(count: 224)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !448, file: !56, line: 1525, baseType: !472, size: 256, offset: 2048)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 256, elements: !465)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !475)
!475 = !{!476, !477, !478, !479}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !474, file: !56, line: 1405, baseType: !60, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !474, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !474, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !474, file: !56, line: 1408, baseType: !459, size: 32, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !448, file: !56, line: 1526, baseType: !468, size: 1792, offset: 2304)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !448, file: !56, line: 1527, baseType: !482, size: 256, offset: 4096)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 256, elements: !465)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !484)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !485)
!485 = !{!486, !487, !488, !489}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !484, file: !56, line: 1413, baseType: !60, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !484, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !484, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !484, file: !56, line: 1416, baseType: !459, size: 32, offset: 96)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !448, file: !56, line: 1528, baseType: !468, size: 1792, offset: 4352)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !448, file: !56, line: 1529, baseType: !492, size: 256, offset: 6144)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !465)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !495)
!495 = !{!496, !497, !498, !499}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !494, file: !56, line: 1422, baseType: !60, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !494, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !494, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !494, file: !56, line: 1425, baseType: !459, size: 32, offset: 96)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !448, file: !56, line: 1530, baseType: !468, size: 1792, offset: 6400)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !448, file: !56, line: 1531, baseType: !502, size: 256, offset: 8192)
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !503, size: 256, elements: !465)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !504)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !504, file: !56, line: 1430, baseType: !60, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !504, file: !56, line: 1431, baseType: !508, size: 96, offset: 32)
!508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 96, elements: !509)
!509 = !{!510}
!510 = !DISubrange(count: 12)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !448, file: !56, line: 1532, baseType: !468, size: 1792, offset: 8448)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !448, file: !56, line: 1533, baseType: !513, size: 256, offset: 10240)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 256, elements: !465)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !516)
!516 = !{!517, !518, !519, !520}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !515, file: !56, line: 1436, baseType: !60, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !515, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !515, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !515, file: !56, line: 1439, baseType: !459, size: 32, offset: 96)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !448, file: !56, line: 1534, baseType: !468, size: 1792, offset: 10496)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !448, file: !56, line: 1535, baseType: !523, size: 256, offset: 12288)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !524, size: 256, elements: !465)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !525)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !526)
!526 = !{!527, !528, !529, !530}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !525, file: !56, line: 1444, baseType: !60, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !525, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !525, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !525, file: !56, line: 1447, baseType: !459, size: 32, offset: 96)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !448, file: !56, line: 1536, baseType: !468, size: 1792, offset: 12544)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !448, file: !56, line: 1537, baseType: !533, size: 256, offset: 14336)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, size: 256, elements: !465)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !536)
!536 = !{!537, !538, !539, !540}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !535, file: !56, line: 1451, baseType: !60, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !535, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !535, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !535, file: !56, line: 1454, baseType: !459, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !448, file: !56, line: 1538, baseType: !468, size: 1792, offset: 14592)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !448, file: !56, line: 1539, baseType: !543, size: 512, offset: 16384)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 512, elements: !463)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !546)
!546 = !{!547, !548, !549, !550}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !545, file: !56, line: 1459, baseType: !60, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !545, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !545, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !545, file: !56, line: 1462, baseType: !459, size: 32, offset: 96)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !448, file: !56, line: 1540, baseType: !552, size: 1536, offset: 16896)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1536, elements: !553)
!553 = !{!554}
!554 = !DISubrange(count: 192)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !448, file: !56, line: 1541, baseType: !556, size: 256, offset: 18432)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 256, elements: !465)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !559)
!559 = !{!560, !561, !562, !563}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !558, file: !56, line: 1467, baseType: !60, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !558, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !558, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !558, file: !56, line: 1470, baseType: !459, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !448, file: !56, line: 1542, baseType: !468, size: 1792, offset: 18688)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !448, file: !56, line: 1543, baseType: !566, size: 256, offset: 20480)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 256, elements: !465)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !569)
!569 = !{!570, !571, !572, !573}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !568, file: !56, line: 1476, baseType: !60, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !568, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !568, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !568, file: !56, line: 1479, baseType: !459, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !448, file: !56, line: 1544, baseType: !468, size: 1792, offset: 20736)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !448, file: !56, line: 1545, baseType: !576, size: 256, offset: 22528)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 256, elements: !465)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !579)
!579 = !{!580, !581, !582, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !578, file: !56, line: 1485, baseType: !60, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !578, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !578, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !578, file: !56, line: 1488, baseType: !459, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !448, file: !56, line: 1546, baseType: !585, size: 256, offset: 22784)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 256, elements: !465)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !588)
!588 = !{!589, !590, !591, !592}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !587, file: !56, line: 1493, baseType: !60, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !587, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !587, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !587, file: !56, line: 1496, baseType: !459, size: 32, offset: 96)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !448, file: !56, line: 1547, baseType: !552, size: 1536, offset: 23040)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !448, file: !56, line: 1548, baseType: !595, size: 896, offset: 24576)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 896, elements: !603)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !597)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !598)
!598 = !{!599, !600, !601, !602}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !597, file: !56, line: 1501, baseType: !60, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !597, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !597, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !597, file: !56, line: 1504, baseType: !459, size: 32, offset: 96)
!603 = !{!604}
!604 = !DISubrange(count: 7)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !448, file: !56, line: 1549, baseType: !606, size: 1152, offset: 25472)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1152, elements: !607)
!607 = !{!608}
!608 = !DISubrange(count: 144)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !448, file: !56, line: 1550, baseType: !610, size: 512, offset: 26624)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 512, elements: !463)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !612)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !613)
!613 = !{!614, !615, !616, !617}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !612, file: !56, line: 1509, baseType: !60, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !612, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !612, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !612, file: !56, line: 1512, baseType: !459, size: 32, offset: 96)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !448, file: !56, line: 1551, baseType: !552, size: 1536, offset: 27136)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !448, file: !56, line: 1552, baseType: !620, size: 768, offset: 28672)
!620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !621, size: 768, elements: !314)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !623)
!623 = !{!624, !625}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !622, file: !56, line: 1517, baseType: !60, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !622, file: !56, line: 1518, baseType: !508, size: 96, offset: 32)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !628, file: !629, line: 101, type: !777, isLocal: true, isDefinition: true)
!628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !630, retainedTypes: !727, globals: !736, splitDebugInlining: false, nameTableKind: None)
!629 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!630 = !{!631, !638, !653, !659, !665, !670, !677, !693, !699, !703, !708, !715, !723}
!631 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 180, baseType: !18, size: 32, elements: !632)
!632 = !{!633, !634, !635, !636, !637}
!633 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!634 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!635 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!636 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!637 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!638 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 189, baseType: !18, size: 32, elements: !640)
!639 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652}
!641 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!642 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!643 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!644 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!645 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!646 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!647 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!648 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!649 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!650 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!651 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!652 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 355, baseType: !7, size: 32, elements: !655)
!654 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!655 = !{!656, !657, !658}
!656 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!657 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!658 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!659 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 206, baseType: !7, size: 32, elements: !660)
!660 = !{!661, !662, !663, !664}
!661 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!662 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!663 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!664 = !DIEnumerator(name: "VDMA_OK", value: 0)
!665 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !629, line: 65, baseType: !18, size: 32, elements: !666)
!666 = !{!667, !668, !669}
!667 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!668 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!669 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 345, baseType: !7, size: 32, elements: !671)
!671 = !{!672, !673, !674, !675, !676}
!672 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!673 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!674 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!675 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!676 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!677 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 302, baseType: !18, size: 32, elements: !678)
!678 = !{!679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692}
!679 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!680 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!681 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!682 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!683 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!684 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!685 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!686 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!687 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!688 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!689 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!690 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!691 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!692 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!693 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 321, baseType: !18, size: 32, elements: !694)
!694 = !{!695, !696, !697, !698}
!695 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!696 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!697 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!698 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!699 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 330, baseType: !18, size: 32, elements: !700)
!700 = !{!701, !702}
!701 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!702 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!703 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 337, baseType: !18, size: 32, elements: !704)
!704 = !{!705, !706, !707}
!705 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!706 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!707 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!708 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !709, line: 101, baseType: !7, size: 32, elements: !710)
!709 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!710 = !{!711, !712, !713, !714}
!711 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!712 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!713 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!714 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!715 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !716, line: 152, baseType: !7, size: 32, elements: !717)
!716 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!717 = !{!718, !719, !720, !721, !722}
!718 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!719 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!720 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!721 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!722 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!723 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 222, baseType: !7, size: 32, elements: !724)
!724 = !{!725, !726}
!725 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!726 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!727 = !{!88, !61, !728}
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !730, line: 96, baseType: !731)
!730 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !730, line: 93, size: 64, elements: !732)
!732 = !{!733, !734}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !731, file: !730, line: 94, baseType: !91, size: 8)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !731, file: !730, line: 95, baseType: !735, size: 32, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !98, line: 186, baseType: !631)
!736 = !{!626, !737, !750, !755, !769, !775}
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !628, file: !629, line: 102, type: !739, isLocal: true, isDefinition: true)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !740, size: 256, elements: !463)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !629, line: 74, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !629, line: 71, size: 64, elements: !742)
!742 = !{!743, !749}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !741, file: !629, line: 72, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !654, line: 410, baseType: !745)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DISubroutineType(types: !747)
!747 = !{null, !748, !88}
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !654, line: 359, baseType: !653)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !741, file: !629, line: 73, baseType: !88, size: 32, offset: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !628, file: !629, line: 103, type: !752, isLocal: true, isDefinition: true)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 512, elements: !753)
!753 = !{!754}
!754 = !DISubrange(count: 8)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !628, file: !629, line: 104, type: !757, isLocal: true, isDefinition: true)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 896, elements: !463)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !654, line: 390, baseType: !759)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 382, size: 224, elements: !760)
!760 = !{!761, !763, !764, !765, !766, !767, !768}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !759, file: !654, line: 383, baseType: !762, size: 32)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !759, file: !654, line: 384, baseType: !61, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !759, file: !654, line: 385, baseType: !61, size: 32, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !759, file: !654, line: 386, baseType: !762, size: 32, offset: 96)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !759, file: !654, line: 387, baseType: !61, size: 32, offset: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !759, file: !654, line: 388, baseType: !61, size: 32, offset: 160)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !759, file: !654, line: 389, baseType: !61, size: 32, offset: 192)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !628, file: !629, line: 105, type: !771, isLocal: true, isDefinition: true)
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 416, elements: !773)
!772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!773 = !{!774}
!774 = !DISubrange(count: 13)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !628, file: !629, line: 90, type: !91, isLocal: true, isDefinition: true)
!777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, size: 128, elements: !463)
!778 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !779)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !629, line: 69, baseType: !665)
!780 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !783, file: !784, line: 53, type: !864, isLocal: false, isDefinition: true)
!783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !785, retainedTypes: !796, globals: !852, splitDebugInlining: false, nameTableKind: None)
!784 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!785 = !{!97, !168, !638, !631, !786}
!786 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !730, line: 46, baseType: !18, size: 32, elements: !787)
!787 = !{!788, !789, !790, !791, !792, !793, !794, !795}
!788 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!789 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!790 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!791 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!792 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!793 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!794 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!795 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!796 = !{!797}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !800)
!800 = !{!801, !807, !812, !818, !819, !824, !829, !830, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !799, file: !56, line: 547, baseType: !802, size: 32)
!802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 543, size: 32, elements: !803)
!803 = !{!804, !805, !806}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !802, file: !56, line: 544, baseType: !272, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !802, file: !56, line: 545, baseType: !60, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !802, file: !56, line: 546, baseType: !60, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !799, file: !56, line: 551, baseType: !808, size: 32, offset: 32)
!808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 548, size: 32, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !808, file: !56, line: 549, baseType: !60, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !808, file: !56, line: 550, baseType: !60, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !799, file: !56, line: 556, baseType: !813, size: 32, offset: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 552, size: 32, elements: !814)
!814 = !{!815, !816, !817}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !813, file: !56, line: 553, baseType: !272, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !813, file: !56, line: 554, baseType: !60, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !813, file: !56, line: 555, baseType: !60, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !799, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !799, file: !56, line: 561, baseType: !820, size: 32, offset: 128)
!820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 558, size: 32, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !820, file: !56, line: 559, baseType: !60, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !820, file: !56, line: 560, baseType: !60, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !799, file: !56, line: 565, baseType: !825, size: 32, offset: 160)
!825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 562, size: 32, elements: !826)
!826 = !{!827, !828}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !825, file: !56, line: 563, baseType: !272, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !825, file: !56, line: 564, baseType: !60, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !799, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !799, file: !56, line: 570, baseType: !831, size: 32, offset: 224)
!831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 567, size: 32, elements: !832)
!832 = !{!833, !834}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !831, file: !56, line: 568, baseType: !60, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !831, file: !56, line: 569, baseType: !60, size: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !799, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !799, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !799, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !799, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !799, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !799, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !799, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !799, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !799, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !799, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !799, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !799, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !799, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !799, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !799, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !799, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !799, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!852 = !{!781, !853, !858}
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !783, file: !784, line: 54, type: !855, isLocal: false, isDefinition: true)
!855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 128, elements: !463)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !98, line: 1237, baseType: !97)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !783, file: !784, line: 55, type: !860, isLocal: false, isDefinition: true)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !861, size: 128, elements: !463)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !863)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !168)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 128, elements: !463)
!865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!867 = distinct !DIGlobalVariable(name: "priority_set", scope: !868, file: !869, line: 128, type: !61, isLocal: true, isDefinition: true)
!868 = distinct !DISubprogram(name: "hal_nvic_init", scope: !869, file: !869, line: 126, type: !870, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !960)
!869 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!870 = !DISubroutineType(types: !871)
!871 = !{!872}
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !716, line: 158, baseType: !715)
!873 = distinct !DICompileUnit(language: DW_LANG_C99, file: !869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !874, retainedTypes: !875, globals: !942, splitDebugInlining: false, nameTableKind: None)
!874 = !{!715, !168}
!875 = !{!862, !876, !61, !910, !940}
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !878, line: 418, baseType: !879)
!878 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 395, size: 1120, elements: !880)
!880 = !{!881, !882, !883, !884, !885, !886, !887, !890, !891, !892, !893, !894, !895, !896, !897, !899, !900, !901, !903, !907, !909}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !879, file: !878, line: 397, baseType: !272, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !879, file: !878, line: 398, baseType: !60, size: 32, offset: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !879, file: !878, line: 399, baseType: !60, size: 32, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !879, file: !878, line: 400, baseType: !60, size: 32, offset: 96)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !879, file: !878, line: 401, baseType: !60, size: 32, offset: 128)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !879, file: !878, line: 402, baseType: !60, size: 32, offset: 160)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !879, file: !878, line: 403, baseType: !888, size: 96, offset: 192)
!888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !889, size: 96, elements: !509)
!889 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !460)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !879, file: !878, line: 404, baseType: !60, size: 32, offset: 288)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !879, file: !878, line: 405, baseType: !60, size: 32, offset: 320)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !879, file: !878, line: 406, baseType: !60, size: 32, offset: 352)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !879, file: !878, line: 407, baseType: !60, size: 32, offset: 384)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !879, file: !878, line: 408, baseType: !60, size: 32, offset: 416)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !879, file: !878, line: 409, baseType: !60, size: 32, offset: 448)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !879, file: !878, line: 410, baseType: !60, size: 32, offset: 480)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !879, file: !878, line: 411, baseType: !898, size: 64, offset: 512)
!898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 64, elements: !465)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !879, file: !878, line: 412, baseType: !272, size: 32, offset: 576)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !879, file: !878, line: 413, baseType: !272, size: 32, offset: 608)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !879, file: !878, line: 414, baseType: !902, size: 128, offset: 640)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 128, elements: !463)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !879, file: !878, line: 415, baseType: !904, size: 160, offset: 768)
!904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 160, elements: !905)
!905 = !{!906}
!906 = !DISubrange(count: 5)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !879, file: !878, line: 416, baseType: !908, size: 160, offset: 928)
!908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !905)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !879, file: !878, line: 417, baseType: !60, size: 32, offset: 1088)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !878, line: 378, baseType: !912)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 363, size: 28704, elements: !913)
!913 = !{!914, !916, !920, !921, !922, !923, !924, !925, !926, !927, !931, !935, !939}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !912, file: !878, line: 365, baseType: !915, size: 256)
!915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !753)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !912, file: !878, line: 366, baseType: !917, size: 768, offset: 256)
!917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !918)
!918 = !{!919}
!919 = !DISubrange(count: 24)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !912, file: !878, line: 367, baseType: !915, size: 256, offset: 1024)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !912, file: !878, line: 368, baseType: !917, size: 768, offset: 1280)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !912, file: !878, line: 369, baseType: !915, size: 256, offset: 2048)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !912, file: !878, line: 370, baseType: !917, size: 768, offset: 2304)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !912, file: !878, line: 371, baseType: !915, size: 256, offset: 3072)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !912, file: !878, line: 372, baseType: !917, size: 768, offset: 3328)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !912, file: !878, line: 373, baseType: !915, size: 256, offset: 4096)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !912, file: !878, line: 374, baseType: !928, size: 1792, offset: 4352)
!928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !929)
!929 = !{!930}
!930 = !DISubrange(count: 56)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !912, file: !878, line: 375, baseType: !932, size: 1920, offset: 6144)
!932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !889, size: 1920, elements: !933)
!933 = !{!934}
!934 = !DISubrange(count: 240)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !912, file: !878, line: 376, baseType: !936, size: 20608, offset: 8064)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !937)
!937 = !{!938}
!938 = !DISubrange(count: 644)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !912, file: !878, line: 377, baseType: !60, size: 32, offset: 28672)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !941)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!942 = !{!943, !944, !957}
!943 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !873, file: !869, line: 119, type: !946, isLocal: false, isDefinition: true)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !947, size: 4096, elements: !955)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !869, line: 50, baseType: !948)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !869, line: 47, size: 64, elements: !949)
!949 = !{!950, !954}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !948, file: !869, line: 48, baseType: !951, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DISubroutineType(types: !953)
!953 = !{null, !862}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !948, file: !869, line: 49, baseType: !61, size: 32, offset: 32)
!955 = !{!956}
!956 = !DISubrange(count: 64)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !873, file: !869, line: 52, type: !959, isLocal: true, isDefinition: true)
!959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 2048, elements: !955)
!960 = !{!961}
!961 = !DILocalVariable(name: "i", scope: !868, file: !869, line: 129, type: !61)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "DelayResume", scope: !964, file: !965, line: 55, type: !91, isLocal: false, isDefinition: true)
!964 = distinct !DICompileUnit(language: DW_LANG_C99, file: !965, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !966, retainedTypes: !1001, globals: !1040, splitDebugInlining: false, nameTableKind: None)
!965 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!966 = !{!967, !975, !980}
!967 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !968, line: 51, baseType: !18, size: 32, elements: !969)
!968 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!969 = !{!970, !971, !972, !973, !974}
!970 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!971 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!972 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!973 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!974 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!975 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !968, line: 62, baseType: !18, size: 32, elements: !976)
!976 = !{!977, !978, !979}
!977 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!978 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!979 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!980 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !981, line: 228, baseType: !18, size: 32, elements: !982)
!981 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!982 = !{!983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000}
!983 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!984 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!985 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!986 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!987 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!988 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!989 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!990 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!991 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!992 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!993 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!994 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!995 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!996 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!997 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!998 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!999 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1000 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1001 = !{!1002, !1003, !1025, !762, !61, !18, !1031, !1033, !1037, !1039}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1005)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1006)
!1006 = !{!1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1005, file: !56, line: 2759, baseType: !60, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1005, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1005, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1005, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1005, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1005, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1005, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1005, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1005, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1005, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1005, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1005, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1005, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1005, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1005, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1005, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1005, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1005, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1027)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1028)
!1028 = !{!1029, !1030}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1027, file: !56, line: 2799, baseType: !60, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1027, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !1035)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !1036)
!1036 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !462)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!1040 = !{!962, !1041, !1043, !1045, !1047, !1049, !1051, !1053, !1055, !1057, !1059}
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !964, file: !965, line: 604, type: !460, isLocal: false, isDefinition: true)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !964, file: !965, line: 605, type: !61, isLocal: false, isDefinition: true)
!1045 = !DIGlobalVariableExpression(var: !1046, expr: !DIExpression())
!1046 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !964, file: !965, line: 606, type: !61, isLocal: false, isDefinition: true)
!1047 = !DIGlobalVariableExpression(var: !1048, expr: !DIExpression())
!1048 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !964, file: !965, line: 607, type: !61, isLocal: false, isDefinition: true)
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !964, file: !965, line: 608, type: !61, isLocal: false, isDefinition: true)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !964, file: !965, line: 609, type: !61, isLocal: false, isDefinition: true)
!1053 = !DIGlobalVariableExpression(var: !1054, expr: !DIExpression())
!1054 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !964, file: !965, line: 610, type: !61, isLocal: false, isDefinition: true)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !964, file: !965, line: 611, type: !61, isLocal: false, isDefinition: true)
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !964, file: !965, line: 665, type: !61, isLocal: false, isDefinition: true)
!1059 = !DIGlobalVariableExpression(var: !1060, expr: !DIExpression())
!1060 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !964, file: !965, line: 666, type: !61, isLocal: false, isDefinition: true)
!1061 = !DIGlobalVariableExpression(var: !1062, expr: !DIExpression())
!1062 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1063, file: !1064, line: 334, type: !91, isLocal: false, isDefinition: true)
!1063 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1064, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1065, retainedTypes: !1233, globals: !1373, splitDebugInlining: false, nameTableKind: None)
!1064 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1065 = !{!1066, !1157, !1163, !1170, !1182, !1193, !1202, !1211, !1215, !1219}
!1066 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1067, line: 58, baseType: !7, size: 32, elements: !1068)
!1067 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1068 = !{!1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156}
!1069 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1070 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1071 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1072 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1073 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1074 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1075 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1076 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1077 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1078 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1079 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1080 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1081 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1082 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1083 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1084 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1085 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1086 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1087 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1088 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1089 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1090 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1091 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1092 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1093 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1094 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1095 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1096 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1097 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1098 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1099 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1100 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1101 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1102 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1103 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1104 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1105 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1106 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1107 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1108 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1109 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1110 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1111 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1112 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1113 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1114 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1115 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1116 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1117 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1118 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1119 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1120 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1121 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1122 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1123 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1124 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1125 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1126 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1127 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1128 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1129 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1130 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1131 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1132 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1133 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1134 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1135 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1136 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1137 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1138 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1139 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1140 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1141 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1142 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1143 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1144 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1145 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1146 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1147 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1148 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1149 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1150 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1151 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1152 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1153 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1154 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1155 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1156 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1158, line: 81, baseType: !18, size: 32, elements: !1159)
!1158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1159 = !{!1160, !1161, !1162}
!1160 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1161 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1162 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1163 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1064, line: 298, baseType: !18, size: 32, elements: !1164)
!1164 = !{!1165, !1166, !1167, !1168, !1169}
!1165 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1166 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1167 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1168 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1169 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1170 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1171, line: 51, baseType: !18, size: 32, elements: !1172)
!1171 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1172 = !{!1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181}
!1173 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1174 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1175 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1176 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1177 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1178 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1179 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1180 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1181 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1182 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1183, line: 110, baseType: !7, size: 32, elements: !1184)
!1183 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1184 = !{!1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192}
!1185 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1186 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1187 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1188 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1189 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1190 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1191 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1192 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1193 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1171, line: 73, baseType: !18, size: 32, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1198, !1199, !1200, !1201}
!1195 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1196 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1197 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1198 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1199 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1200 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1201 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1202 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1171, line: 83, baseType: !18, size: 32, elements: !1203)
!1203 = !{!1204, !1205, !1206, !1207, !1208, !1209, !1210}
!1204 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1205 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1206 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1207 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1208 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1209 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1210 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1211 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1171, line: 98, baseType: !18, size: 32, elements: !1212)
!1212 = !{!1213, !1214}
!1213 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1214 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1215 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1158, line: 76, baseType: !18, size: 32, elements: !1216)
!1216 = !{!1217, !1218}
!1217 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1218 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1219 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1158, line: 208, baseType: !18, size: 32, elements: !1220)
!1220 = !{!1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232}
!1221 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1222 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1223 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1224 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1225 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1226 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1227 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1228 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1229 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1230 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1231 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1232 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1233 = !{!61, !1002, !1033, !762, !1234, !1344, !1366, !88, !1372, !462}
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1158, line: 193, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1158, line: 134, size: 1824, elements: !1237)
!1237 = !{!1238, !1239, !1240, !1247, !1253, !1257, !1265, !1266, !1273, !1274, !1275, !1276, !1284, !1287, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1338, !1339, !1343}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1236, file: !1158, line: 136, baseType: !61, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1236, file: !1158, line: 137, baseType: !762, size: 32, offset: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1236, file: !1158, line: 138, baseType: !1241, size: 32, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1242, line: 56, baseType: !1243)
!1242 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1242, line: 54, size: 8, elements: !1245)
!1245 = !{!1246}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1244, file: !1242, line: 55, baseType: !460, size: 8)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1236, file: !1158, line: 139, baseType: !1248, size: 32, offset: 96)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1242, line: 46, baseType: !1249)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 32)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1242, line: 44, size: 8, elements: !1251)
!1251 = !{!1252}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1250, file: !1242, line: 45, baseType: !460, size: 8)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1236, file: !1158, line: 140, baseType: !1254, size: 8, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1255)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1256)
!1256 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1236, file: !1158, line: 143, baseType: !1258, size: 32, offset: 160)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1260, line: 146, baseType: !1261)
!1260 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 143, size: 64, elements: !1262)
!1262 = !{!1263, !1264}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1261, file: !1260, line: 144, baseType: !61, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1261, file: !1260, line: 145, baseType: !61, size: 32, offset: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1236, file: !1158, line: 144, baseType: !762, size: 32, offset: 192)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1236, file: !1158, line: 145, baseType: !1267, size: 32, offset: 224)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1260, line: 152, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 149, size: 64, elements: !1270)
!1270 = !{!1271, !1272}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1269, file: !1260, line: 150, baseType: !61, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1269, file: !1260, line: 151, baseType: !61, size: 32, offset: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1236, file: !1158, line: 146, baseType: !762, size: 32, offset: 256)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1236, file: !1158, line: 147, baseType: !61, size: 32, offset: 288)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1236, file: !1158, line: 148, baseType: !762, size: 32, offset: 320)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1236, file: !1158, line: 151, baseType: !1277, size: 1024, offset: 352)
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1278, size: 1024, elements: !1283)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1260, line: 170, baseType: !1279)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 167, size: 64, elements: !1280)
!1280 = !{!1281, !1282}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1279, file: !1260, line: 168, baseType: !61, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1279, file: !1260, line: 169, baseType: !61, size: 32, offset: 32)
!1283 = !{!754, !466}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1236, file: !1158, line: 155, baseType: !1285, size: 32, offset: 1376)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1171, line: 120, baseType: !460)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1236, file: !1158, line: 156, baseType: !1288, size: 32, offset: 1408)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1158, line: 124, baseType: !1290)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1158, line: 90, size: 200, elements: !1291)
!1291 = !{!1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1290, file: !1158, line: 91, baseType: !460, size: 8)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1290, file: !1158, line: 92, baseType: !460, size: 8, offset: 8)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1290, file: !1158, line: 94, baseType: !460, size: 8, offset: 16)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1290, file: !1158, line: 95, baseType: !460, size: 8, offset: 24)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1290, file: !1158, line: 96, baseType: !460, size: 8, offset: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1290, file: !1158, line: 98, baseType: !460, size: 8, offset: 40)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1290, file: !1158, line: 99, baseType: !460, size: 8, offset: 48)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1290, file: !1158, line: 100, baseType: !460, size: 8, offset: 56)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1290, file: !1158, line: 101, baseType: !460, size: 8, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1290, file: !1158, line: 103, baseType: !460, size: 8, offset: 72)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1290, file: !1158, line: 104, baseType: !460, size: 8, offset: 80)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1290, file: !1158, line: 106, baseType: !460, size: 8, offset: 88)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1290, file: !1158, line: 107, baseType: !460, size: 8, offset: 96)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1290, file: !1158, line: 108, baseType: !460, size: 8, offset: 104)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1290, file: !1158, line: 109, baseType: !460, size: 8, offset: 112)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1290, file: !1158, line: 110, baseType: !460, size: 8, offset: 120)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1290, file: !1158, line: 111, baseType: !460, size: 8, offset: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1290, file: !1158, line: 112, baseType: !460, size: 8, offset: 136)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1290, file: !1158, line: 114, baseType: !460, size: 8, offset: 144)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1290, file: !1158, line: 115, baseType: !460, size: 8, offset: 152)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1290, file: !1158, line: 118, baseType: !460, size: 8, offset: 160)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1290, file: !1158, line: 119, baseType: !460, size: 8, offset: 168)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1290, file: !1158, line: 120, baseType: !460, size: 8, offset: 176)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1290, file: !1158, line: 121, baseType: !460, size: 8, offset: 184)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1290, file: !1158, line: 122, baseType: !460, size: 8, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1236, file: !1158, line: 157, baseType: !61, size: 32, offset: 1440)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1236, file: !1158, line: 158, baseType: !1034, size: 16, offset: 1472)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1236, file: !1158, line: 159, baseType: !1034, size: 16, offset: 1488)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1236, file: !1158, line: 163, baseType: !1034, size: 16, offset: 1504)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1236, file: !1158, line: 164, baseType: !1034, size: 16, offset: 1520)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1236, file: !1158, line: 167, baseType: !460, size: 8, offset: 1536)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1236, file: !1158, line: 168, baseType: !1324, size: 24, offset: 1544)
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 24, elements: !1325)
!1325 = !{!1326}
!1326 = !DISubrange(count: 3)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1236, file: !1158, line: 169, baseType: !460, size: 8, offset: 1568)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1236, file: !1158, line: 170, baseType: !460, size: 8, offset: 1576)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1236, file: !1158, line: 173, baseType: !1034, size: 16, offset: 1584)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1236, file: !1158, line: 174, baseType: !61, size: 32, offset: 1600)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1236, file: !1158, line: 175, baseType: !61, size: 32, offset: 1632)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1236, file: !1158, line: 178, baseType: !91, size: 8, offset: 1664)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1236, file: !1158, line: 179, baseType: !91, size: 8, offset: 1672)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1236, file: !1158, line: 182, baseType: !1335, size: 32, offset: 1696)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!7, !88}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1236, file: !1158, line: 186, baseType: !1335, size: 32, offset: 1728)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1236, file: !1158, line: 187, baseType: !1340, size: 32, offset: 1760)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 32)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!7, !88, !61, !88, !61}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1236, file: !1158, line: 188, baseType: !1340, size: 32, offset: 1792)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 32)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1346)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1347)
!1347 = !{!1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1346, file: !56, line: 2759, baseType: !60, size: 32)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1346, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1346, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1346, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1346, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1346, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1346, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1346, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1346, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1346, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1346, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1346, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1346, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1346, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1346, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1346, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1346, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1346, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 32)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1368, file: !56, line: 2799, baseType: !60, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1368, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!1373 = !{!1061, !1374, !1376, !1378, !1383}
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1063, file: !1064, line: 382, type: !61, isLocal: false, isDefinition: true)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1063, file: !1064, line: 383, type: !61, isLocal: false, isDefinition: true)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1063, file: !1064, line: 369, type: !1380, isLocal: true, isDefinition: true)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1024, elements: !1381)
!1381 = !{!1382}
!1382 = !DISubrange(count: 128)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1063, file: !1064, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1385 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1388, file: !1443, line: 35, type: !1444, isLocal: false, isDefinition: true)
!1388 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1389, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1390, retainedTypes: !1436, globals: !1437, splitDebugInlining: false, nameTableKind: None)
!1389 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1390 = !{!1391}
!1391 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1392, line: 77, baseType: !18, size: 32, elements: !1393)
!1392 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1393 = !{!1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435}
!1394 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1395 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1396 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1397 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1398 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1399 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1400 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1401 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1402 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1403 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1404 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1405 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1406 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1407 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1408 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1409 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1410 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1411 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1412 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1413 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1414 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1415 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1416 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1417 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1418 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1419 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1420 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1421 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1422 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1423 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1424 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1425 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1426 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1427 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1428 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1429 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1430 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1431 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1432 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1433 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1434 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1435 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1436 = !{!88}
!1437 = !{!1386, !1438, !1441}
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1388, file: !1389, line: 96, type: !1440, isLocal: true, isDefinition: true)
!1440 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1388, file: !1389, line: 94, type: !1440, isLocal: true, isDefinition: true)
!1443 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1445)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1389, line: 54, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1389, line: 51, size: 576, elements: !1447)
!1447 = !{!1448, !1458}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1446, file: !1389, line: 52, baseType: !1449, size: 96)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1392, line: 152, baseType: !1450)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1392, line: 144, size: 96, elements: !1451)
!1451 = !{!1452, !1454, !1456}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1450, file: !1392, line: 145, baseType: !1453, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1392, line: 61, baseType: !18)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1450, file: !1392, line: 146, baseType: !1455, size: 16, offset: 32)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1392, line: 62, baseType: !1036)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1450, file: !1392, line: 150, baseType: !1457, size: 32, offset: 64)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1392, line: 127, baseType: !1391)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1446, file: !1389, line: 53, baseType: !1459, size: 480, offset: 96)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1460, line: 107, baseType: !1461)
!1460 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1460, line: 103, size: 480, elements: !1462)
!1462 = !{!1463, !1464, !1465}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1461, file: !1460, line: 104, baseType: !18, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1461, file: !1460, line: 105, baseType: !18, size: 32, offset: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1461, file: !1460, line: 106, baseType: !1466, size: 400, offset: 64)
!1466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1467, size: 400, elements: !905)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1460, line: 100, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1460, line: 92, size: 80, elements: !1469)
!1469 = !{!1470, !1471, !1472}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1468, file: !1460, line: 93, baseType: !460, size: 8)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1468, file: !1460, line: 94, baseType: !460, size: 8, offset: 8)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1468, file: !1460, line: 96, baseType: !1473, size: 64, offset: 16)
!1473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 64, elements: !753)
!1474 = !DIGlobalVariableExpression(var: !1475, expr: !DIExpression())
!1475 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1476, file: !1479, line: 96, type: !1480, isLocal: false, isDefinition: true)
!1476 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1477, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1478, splitDebugInlining: false, nameTableKind: None)
!1477 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1478 = !{!1474}
!1479 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1481, size: 152, elements: !1483)
!1481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1482)
!1482 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1483 = !{!1484}
!1484 = !DISubrange(count: 19)
!1485 = !DIGlobalVariableExpression(var: !1486, expr: !DIExpression())
!1486 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1487, file: !1488, line: 168, type: !1838, isLocal: false, isDefinition: true)
!1487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1489, retainedTypes: !1500, globals: !1509, splitDebugInlining: false, nameTableKind: None)
!1488 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1489 = !{!1490, !1066, !1391}
!1490 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1491, line: 49, baseType: !18, size: 32, elements: !1492)
!1491 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498, !1499}
!1493 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1494 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1495 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1496 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1497 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1498 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1499 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1500 = !{!1501, !61, !1503}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1067, line: 47, baseType: !462)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1260, line: 146, baseType: !1505)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 143, size: 64, elements: !1506)
!1506 = !{!1507, !1508}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1505, file: !1260, line: 144, baseType: !61, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1505, file: !1260, line: 145, baseType: !61, size: 32, offset: 32)
!1509 = !{!1485, !1510, !1512, !1522, !1659, !1661, !1663, !1665, !1667, !1672, !1675, !1684, !1686, !1688, !1696, !1698, !1700, !1783, !1786, !1788, !1790, !1801, !1803, !1816}
!1510 = !DIGlobalVariableExpression(var: !1511, expr: !DIExpression())
!1511 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1487, file: !1488, line: 94, type: !940, isLocal: true, isDefinition: true)
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1487, file: !1488, line: 95, type: !1514, isLocal: false, isDefinition: true)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1516)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1460, line: 100, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1460, line: 92, size: 80, elements: !1518)
!1518 = !{!1519, !1520, !1521}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1517, file: !1460, line: 93, baseType: !460, size: 8)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1517, file: !1460, line: 94, baseType: !460, size: 8, offset: 8)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1517, file: !1460, line: 96, baseType: !1473, size: 64, offset: 16)
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1487, file: !1488, line: 127, type: !1524, isLocal: false, isDefinition: true)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1260, line: 317, baseType: !1525)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1260, line: 237, size: 2720, elements: !1526)
!1526 = !{!1527, !1528, !1580, !1581, !1584, !1585, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1626, !1627, !1628, !1633, !1634, !1635, !1636, !1637, !1641, !1645, !1652, !1653, !1654, !1655, !1656, !1657, !1658}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1525, file: !1260, line: 238, baseType: !61, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1525, file: !1260, line: 239, baseType: !1529, size: 32, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1260, line: 121, baseType: !1531)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 105, size: 480, elements: !1532)
!1532 = !{!1533, !1537, !1538, !1542, !1546, !1550, !1551, !1555, !1556, !1557, !1558, !1563, !1568, !1572, !1576}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1531, file: !1260, line: 106, baseType: !1534, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!7, !88, !88}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1531, file: !1260, line: 107, baseType: !1335, size: 32, offset: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1531, file: !1260, line: 108, baseType: !1539, size: 32, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!88, !88, !61, !61}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1531, file: !1260, line: 109, baseType: !1543, size: 32, offset: 96)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{!7, !88, !61}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1531, file: !1260, line: 110, baseType: !1547, size: 32, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!7, !88, !88, !88, !61}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1531, file: !1260, line: 111, baseType: !1543, size: 32, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1531, file: !1260, line: 112, baseType: !1552, size: 32, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 32)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{!940, !88, !61}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1531, file: !1260, line: 113, baseType: !1543, size: 32, offset: 224)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1531, file: !1260, line: 114, baseType: !1543, size: 32, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1531, file: !1260, line: 115, baseType: !1543, size: 32, offset: 288)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1531, file: !1260, line: 116, baseType: !1559, size: 32, offset: 320)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 32)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{!7, !88, !7, !1562, !88, !1562}
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1067, line: 50, baseType: !18)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1531, file: !1260, line: 117, baseType: !1564, size: 32, offset: 352)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!7, !88, !1567}
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1531, file: !1260, line: 118, baseType: !1569, size: 32, offset: 384)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!7, !88, !88, !61}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1531, file: !1260, line: 119, baseType: !1573, size: 32, offset: 416)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!91, !88, !61}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1531, file: !1260, line: 120, baseType: !1577, size: 32, offset: 448)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!7, !88, !61, !88}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1525, file: !1260, line: 240, baseType: !88, size: 32, offset: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1525, file: !1260, line: 241, baseType: !1582, size: 32, offset: 96)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1067, line: 46, baseType: !1036)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1525, file: !1260, line: 242, baseType: !1582, size: 32, offset: 128)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1525, file: !1260, line: 243, baseType: !1586, size: 928, offset: 160)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1260, line: 99, baseType: !1587)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 90, size: 928, elements: !1588)
!1588 = !{!1589, !1590, !1592, !1593, !1594, !1595, !1596, !1597}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1587, file: !1260, line: 91, baseType: !61, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1587, file: !1260, line: 92, baseType: !1591, size: 256, offset: 32)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !753)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1587, file: !1260, line: 93, baseType: !1591, size: 256, offset: 288)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1587, file: !1260, line: 94, baseType: !1591, size: 256, offset: 544)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1587, file: !1260, line: 95, baseType: !61, size: 32, offset: 800)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1587, file: !1260, line: 96, baseType: !1583, size: 16, offset: 832)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1587, file: !1260, line: 97, baseType: !61, size: 32, offset: 864)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1587, file: !1260, line: 98, baseType: !61, size: 32, offset: 896)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1525, file: !1260, line: 244, baseType: !1591, size: 256, offset: 1088)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1525, file: !1260, line: 245, baseType: !1591, size: 256, offset: 1344)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1525, file: !1260, line: 246, baseType: !61, size: 32, offset: 1600)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1525, file: !1260, line: 247, baseType: !61, size: 32, offset: 1632)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1525, file: !1260, line: 248, baseType: !61, size: 32, offset: 1664)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1525, file: !1260, line: 249, baseType: !61, size: 32, offset: 1696)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1525, file: !1260, line: 250, baseType: !61, size: 32, offset: 1728)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1525, file: !1260, line: 252, baseType: !61, size: 32, offset: 1760)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1525, file: !1260, line: 255, baseType: !61, size: 32, offset: 1792)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1525, file: !1260, line: 256, baseType: !61, size: 32, offset: 1824)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1525, file: !1260, line: 257, baseType: !61, size: 32, offset: 1856)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1525, file: !1260, line: 261, baseType: !61, size: 32, offset: 1888)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1525, file: !1260, line: 262, baseType: !61, size: 32, offset: 1920)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1525, file: !1260, line: 263, baseType: !61, size: 32, offset: 1952)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1525, file: !1260, line: 264, baseType: !61, size: 32, offset: 1984)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1525, file: !1260, line: 265, baseType: !61, size: 32, offset: 2016)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1525, file: !1260, line: 266, baseType: !61, size: 32, offset: 2048)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1525, file: !1260, line: 267, baseType: !61, size: 32, offset: 2080)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1525, file: !1260, line: 268, baseType: !61, size: 32, offset: 2112)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1525, file: !1260, line: 270, baseType: !61, size: 32, offset: 2144)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1525, file: !1260, line: 271, baseType: !61, size: 32, offset: 2176)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1525, file: !1260, line: 272, baseType: !1620, size: 32, offset: 2208)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1260, line: 229, baseType: !1622)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 226, size: 64, elements: !1623)
!1623 = !{!1624, !1625}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1622, file: !1260, line: 227, baseType: !61, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1622, file: !1260, line: 228, baseType: !61, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1525, file: !1260, line: 273, baseType: !1501, size: 32, offset: 2240)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1525, file: !1260, line: 274, baseType: !1501, size: 32, offset: 2272)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1525, file: !1260, line: 276, baseType: !1629, size: 32, offset: 2304)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{null, !1632}
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1525, file: !1260, line: 278, baseType: !61, size: 32, offset: 2336)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1525, file: !1260, line: 280, baseType: !1629, size: 32, offset: 2368)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1525, file: !1260, line: 281, baseType: !1629, size: 32, offset: 2400)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1525, file: !1260, line: 283, baseType: !61, size: 32, offset: 2432)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1525, file: !1260, line: 284, baseType: !1638, size: 32, offset: 2464)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1639 = !DISubroutineType(types: !1640)
!1640 = !{!61, !1632}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1525, file: !1260, line: 285, baseType: !1642, size: 32, offset: 2496)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 32)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{!61, !1632, !61, !61}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1525, file: !1260, line: 293, baseType: !1646, size: 32, offset: 2528)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1260, line: 162, baseType: !1648)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 159, size: 64, elements: !1649)
!1649 = !{!1650, !1651}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1648, file: !1260, line: 160, baseType: !61, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1648, file: !1260, line: 161, baseType: !61, size: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1525, file: !1260, line: 295, baseType: !61, size: 32, offset: 2560)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1525, file: !1260, line: 296, baseType: !61, size: 32, offset: 2592)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1525, file: !1260, line: 297, baseType: !61, size: 32, offset: 2624)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1525, file: !1260, line: 298, baseType: !1583, size: 16, offset: 2656)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1525, file: !1260, line: 302, baseType: !1583, size: 16, offset: 2672)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1525, file: !1260, line: 310, baseType: !91, size: 8, offset: 2688)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1525, file: !1260, line: 313, baseType: !91, size: 8, offset: 2696)
!1659 = !DIGlobalVariableExpression(var: !1660, expr: !DIExpression())
!1660 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1487, file: !1488, line: 129, type: !61, isLocal: false, isDefinition: true)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1487, file: !1488, line: 130, type: !61, isLocal: false, isDefinition: true)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1487, file: !1488, line: 131, type: !61, isLocal: false, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1487, file: !1488, line: 132, type: !1034, isLocal: true, isDefinition: true)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1487, file: !1488, line: 136, type: !1669, isLocal: false, isDefinition: true)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 4096, elements: !1670)
!1670 = !{!1671}
!1671 = !DISubrange(count: 512)
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1487, file: !1488, line: 146, type: !1674, isLocal: true, isDefinition: true)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1504, size: 512, elements: !753)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1487, file: !1488, line: 152, type: !1677, isLocal: true, isDefinition: true)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1679)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1460, line: 116, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1460, line: 113, size: 64, elements: !1681)
!1681 = !{!1682, !1683}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1680, file: !1460, line: 114, baseType: !61, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1680, file: !1460, line: 115, baseType: !61, size: 32, offset: 32)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1487, file: !1488, line: 156, type: !61, isLocal: false, isDefinition: true)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1487, file: !1488, line: 157, type: !61, isLocal: false, isDefinition: true)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1487, file: !1488, line: 160, type: !1690, isLocal: true, isDefinition: true)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1691, size: 512, elements: !753)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1260, line: 152, baseType: !1692)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 149, size: 64, elements: !1693)
!1693 = !{!1694, !1695}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1692, file: !1260, line: 150, baseType: !61, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1692, file: !1260, line: 151, baseType: !61, size: 32, offset: 32)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1487, file: !1488, line: 173, type: !61, isLocal: false, isDefinition: true)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1487, file: !1488, line: 176, type: !1530, isLocal: false, isDefinition: true)
!1700 = !DIGlobalVariableExpression(var: !1701, expr: !DIExpression())
!1701 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1487, file: !1488, line: 177, type: !1702, isLocal: false, isDefinition: true)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1158, line: 193, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1158, line: 134, size: 1824, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1713, !1719, !1720, !1721, !1722, !1724, !1725, !1726, !1727, !1734, !1735, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1703, file: !1158, line: 136, baseType: !61, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1703, file: !1158, line: 137, baseType: !762, size: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1703, file: !1158, line: 138, baseType: !1708, size: 32, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1242, line: 56, baseType: !1709)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1242, line: 54, size: 8, elements: !1711)
!1711 = !{!1712}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1710, file: !1242, line: 55, baseType: !460, size: 8)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1703, file: !1158, line: 139, baseType: !1714, size: 32, offset: 96)
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1242, line: 46, baseType: !1715)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 32)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1242, line: 44, size: 8, elements: !1717)
!1717 = !{!1718}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1716, file: !1242, line: 45, baseType: !460, size: 8)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1703, file: !1158, line: 140, baseType: !1254, size: 8, offset: 128)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1703, file: !1158, line: 143, baseType: !1503, size: 32, offset: 160)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1703, file: !1158, line: 144, baseType: !762, size: 32, offset: 192)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1703, file: !1158, line: 145, baseType: !1723, size: 32, offset: 224)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1703, file: !1158, line: 146, baseType: !762, size: 32, offset: 256)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1703, file: !1158, line: 147, baseType: !61, size: 32, offset: 288)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1703, file: !1158, line: 148, baseType: !762, size: 32, offset: 320)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1703, file: !1158, line: 151, baseType: !1728, size: 1024, offset: 352)
!1728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1729, size: 1024, elements: !1283)
!1729 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1260, line: 170, baseType: !1730)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 167, size: 64, elements: !1731)
!1731 = !{!1732, !1733}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1730, file: !1260, line: 168, baseType: !61, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1730, file: !1260, line: 169, baseType: !61, size: 32, offset: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1703, file: !1158, line: 155, baseType: !1285, size: 32, offset: 1376)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1703, file: !1158, line: 156, baseType: !1736, size: 32, offset: 1408)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1158, line: 124, baseType: !1738)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1158, line: 90, size: 200, elements: !1739)
!1739 = !{!1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1738, file: !1158, line: 91, baseType: !460, size: 8)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1738, file: !1158, line: 92, baseType: !460, size: 8, offset: 8)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1738, file: !1158, line: 94, baseType: !460, size: 8, offset: 16)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1738, file: !1158, line: 95, baseType: !460, size: 8, offset: 24)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1738, file: !1158, line: 96, baseType: !460, size: 8, offset: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1738, file: !1158, line: 98, baseType: !460, size: 8, offset: 40)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1738, file: !1158, line: 99, baseType: !460, size: 8, offset: 48)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1738, file: !1158, line: 100, baseType: !460, size: 8, offset: 56)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1738, file: !1158, line: 101, baseType: !460, size: 8, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1738, file: !1158, line: 103, baseType: !460, size: 8, offset: 72)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1738, file: !1158, line: 104, baseType: !460, size: 8, offset: 80)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1738, file: !1158, line: 106, baseType: !460, size: 8, offset: 88)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1738, file: !1158, line: 107, baseType: !460, size: 8, offset: 96)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1738, file: !1158, line: 108, baseType: !460, size: 8, offset: 104)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1738, file: !1158, line: 109, baseType: !460, size: 8, offset: 112)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1738, file: !1158, line: 110, baseType: !460, size: 8, offset: 120)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1738, file: !1158, line: 111, baseType: !460, size: 8, offset: 128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1738, file: !1158, line: 112, baseType: !460, size: 8, offset: 136)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1738, file: !1158, line: 114, baseType: !460, size: 8, offset: 144)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1738, file: !1158, line: 115, baseType: !460, size: 8, offset: 152)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1738, file: !1158, line: 118, baseType: !460, size: 8, offset: 160)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1738, file: !1158, line: 119, baseType: !460, size: 8, offset: 168)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1738, file: !1158, line: 120, baseType: !460, size: 8, offset: 176)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1738, file: !1158, line: 121, baseType: !460, size: 8, offset: 184)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1738, file: !1158, line: 122, baseType: !460, size: 8, offset: 192)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1703, file: !1158, line: 157, baseType: !61, size: 32, offset: 1440)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1703, file: !1158, line: 158, baseType: !1034, size: 16, offset: 1472)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1703, file: !1158, line: 159, baseType: !1034, size: 16, offset: 1488)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1703, file: !1158, line: 163, baseType: !1034, size: 16, offset: 1504)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1703, file: !1158, line: 164, baseType: !1034, size: 16, offset: 1520)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1703, file: !1158, line: 167, baseType: !460, size: 8, offset: 1536)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1703, file: !1158, line: 168, baseType: !1324, size: 24, offset: 1544)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1703, file: !1158, line: 169, baseType: !460, size: 8, offset: 1568)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1703, file: !1158, line: 170, baseType: !460, size: 8, offset: 1576)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1703, file: !1158, line: 173, baseType: !1034, size: 16, offset: 1584)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1703, file: !1158, line: 174, baseType: !61, size: 32, offset: 1600)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1703, file: !1158, line: 175, baseType: !61, size: 32, offset: 1632)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1703, file: !1158, line: 178, baseType: !91, size: 8, offset: 1664)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1703, file: !1158, line: 179, baseType: !91, size: 8, offset: 1672)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1703, file: !1158, line: 182, baseType: !1335, size: 32, offset: 1696)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1703, file: !1158, line: 186, baseType: !1335, size: 32, offset: 1728)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1703, file: !1158, line: 187, baseType: !1340, size: 32, offset: 1760)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1703, file: !1158, line: 188, baseType: !1340, size: 32, offset: 1792)
!1783 = !DIGlobalVariableExpression(var: !1784, expr: !DIExpression())
!1784 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1487, file: !1488, line: 178, type: !1785, isLocal: false, isDefinition: true)
!1785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1286, size: 64, elements: !753)
!1786 = !DIGlobalVariableExpression(var: !1787, expr: !DIExpression())
!1787 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1487, file: !1488, line: 179, type: !1737, isLocal: false, isDefinition: true)
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression())
!1789 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1487, file: !1488, line: 204, type: !1674, isLocal: true, isDefinition: true)
!1790 = !DIGlobalVariableExpression(var: !1791, expr: !DIExpression())
!1791 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1487, file: !1488, line: 205, type: !1792, isLocal: false, isDefinition: true)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1793, line: 93, baseType: !1794)
!1793 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 83, size: 1056, elements: !1795)
!1795 = !{!1796, !1797, !1798, !1799, !1800}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1794, file: !1793, line: 84, baseType: !61, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1794, file: !1793, line: 85, baseType: !1529, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1794, file: !1793, line: 86, baseType: !88, size: 32, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1794, file: !1793, line: 87, baseType: !1586, size: 928, offset: 96)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1794, file: !1793, line: 92, baseType: !91, size: 8, offset: 1024)
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1487, file: !1488, line: 208, type: !1702, isLocal: false, isDefinition: true)
!1803 = !DIGlobalVariableExpression(var: !1804, expr: !DIExpression())
!1804 = distinct !DIGlobalVariable(name: "nor_list", scope: !1487, file: !1488, line: 114, type: !1805, isLocal: true, isDefinition: true)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1807)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1460, line: 125, baseType: !1808)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1460, line: 119, size: 1088, elements: !1809)
!1809 = !{!1810, !1811, !1812, !1813, !1815}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1808, file: !1460, line: 120, baseType: !1034, size: 16)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1808, file: !1460, line: 121, baseType: !1034, size: 16, offset: 16)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1808, file: !1460, line: 122, baseType: !61, size: 32, offset: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1808, file: !1460, line: 123, baseType: !1814, size: 512, offset: 64)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1679, size: 512, elements: !753)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1808, file: !1460, line: 124, baseType: !1690, size: 512, offset: 576)
!1816 = !DIGlobalVariableExpression(var: !1817, expr: !DIExpression())
!1817 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1487, file: !1818, line: 42, type: !1819, isLocal: true, isDefinition: true)
!1818 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1820 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1488, line: 66, baseType: !1821)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1488, line: 63, size: 5600, elements: !1822)
!1822 = !{!1823, !1830}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1821, file: !1488, line: 64, baseType: !1824, size: 96)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1392, line: 152, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1392, line: 144, size: 96, elements: !1826)
!1826 = !{!1827, !1828, !1829}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1825, file: !1392, line: 145, baseType: !1453, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1825, file: !1392, line: 146, baseType: !1455, size: 16, offset: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1825, file: !1392, line: 150, baseType: !1457, size: 32, offset: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1821, file: !1488, line: 65, baseType: !1831, size: 5504, offset: 96)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1460, line: 132, baseType: !1832)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1460, line: 128, size: 5504, elements: !1833)
!1833 = !{!1834, !1835, !1836}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1832, file: !1460, line: 129, baseType: !18, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1832, file: !1460, line: 130, baseType: !18, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1832, file: !1460, line: 131, baseType: !1837, size: 5440, offset: 64)
!1837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1807, size: 5440, elements: !905)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1242, line: 79, baseType: !1839)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1242, line: 77, size: 8, elements: !1841)
!1841 = !{!1842}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1840, file: !1242, line: 78, baseType: !460, size: 8)
!1843 = !DIGlobalVariableExpression(var: !1844, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1844 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !1845, file: !1846, line: 82, type: !7, isLocal: true, isDefinition: true)
!1845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1846, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1847, retainedTypes: !1853, globals: !1898, splitDebugInlining: false, nameTableKind: None)
!1846 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1847 = !{!1182, !1066, !1848}
!1848 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1183, line: 123, baseType: !18, size: 32, elements: !1849)
!1849 = !{!1850, !1851, !1852}
!1850 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!1851 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!1852 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!1853 = !{!61, !1854, !88, !762}
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1260, line: 190, baseType: !1856)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 173, size: 1376, elements: !1857)
!1857 = !{!1858, !1859, !1860, !1866, !1872, !1873, !1880, !1881, !1888, !1889, !1890, !1891}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1856, file: !1260, line: 174, baseType: !61, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1856, file: !1260, line: 175, baseType: !1501, size: 32, offset: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1856, file: !1260, line: 176, baseType: !1861, size: 32, offset: 64)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1242, line: 56, baseType: !1862)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 32)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1242, line: 54, size: 8, elements: !1864)
!1864 = !{!1865}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1863, file: !1242, line: 55, baseType: !460, size: 8)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1856, file: !1260, line: 177, baseType: !1867, size: 32, offset: 96)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1242, line: 46, baseType: !1868)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1242, line: 44, size: 8, elements: !1870)
!1870 = !{!1871}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1869, file: !1242, line: 45, baseType: !460, size: 8)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1856, file: !1260, line: 178, baseType: !1254, size: 8, offset: 128)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1856, file: !1260, line: 180, baseType: !1874, size: 32, offset: 160)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1260, line: 146, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 143, size: 64, elements: !1877)
!1877 = !{!1878, !1879}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1876, file: !1260, line: 144, baseType: !61, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1876, file: !1260, line: 145, baseType: !61, size: 32, offset: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1856, file: !1260, line: 181, baseType: !1501, size: 32, offset: 192)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1856, file: !1260, line: 182, baseType: !1882, size: 32, offset: 224)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1260, line: 152, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 149, size: 64, elements: !1885)
!1885 = !{!1886, !1887}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1884, file: !1260, line: 150, baseType: !61, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1884, file: !1260, line: 151, baseType: !61, size: 32, offset: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1856, file: !1260, line: 183, baseType: !1501, size: 32, offset: 256)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1856, file: !1260, line: 184, baseType: !61, size: 32, offset: 288)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1856, file: !1260, line: 185, baseType: !1501, size: 32, offset: 320)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1856, file: !1260, line: 188, baseType: !1892, size: 1024, offset: 352)
!1892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1893, size: 1024, elements: !1283)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1260, line: 170, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 167, size: 64, elements: !1895)
!1895 = !{!1896, !1897}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1894, file: !1260, line: 168, baseType: !61, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1894, file: !1260, line: 169, baseType: !61, size: 32, offset: 32)
!1898 = !{!1899, !1900}
!1899 = !DIGlobalVariableExpression(var: !1844, expr: !DIExpression())
!1900 = !DIGlobalVariableExpression(var: !1901, expr: !DIExpression())
!1901 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !1845, file: !1846, line: 432, type: !1902, isLocal: true, isDefinition: true)
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1183, line: 119, baseType: !1182)
!1903 = !DIGlobalVariableExpression(var: !1901, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!1904 = !DIGlobalVariableExpression(var: !1905, expr: !DIExpression())
!1905 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !1906, file: !1907, line: 60, type: !61, isLocal: false, isDefinition: true)
!1906 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1907, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1908, retainedTypes: !1916, globals: !1917, splitDebugInlining: false, nameTableKind: None)
!1907 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1908 = !{!1909}
!1909 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 387, baseType: !7, size: 32, elements: !1910)
!1910 = !{!1911, !1912, !1913, !1914, !1915}
!1911 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!1912 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!1913 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!1914 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!1915 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!1916 = !{!88, !61}
!1917 = !{!1904, !1918, !1920, !1922, !1924, !1926, !1980, !1982}
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !1906, file: !1907, line: 61, type: !61, isLocal: false, isDefinition: true)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !1906, file: !1907, line: 107, type: !61, isLocal: false, isDefinition: true)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !1906, file: !1907, line: 132, type: !91, isLocal: false, isDefinition: true)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !1906, file: !1907, line: 133, type: !91, isLocal: false, isDefinition: true)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "replaced", scope: !1928, file: !1907, line: 139, type: !61, isLocal: true, isDefinition: true)
!1928 = distinct !DISubprogram(name: "LookupAddress", scope: !1907, file: !1907, line: 135, type: !1929, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1906, retainedNodes: !1931)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!61, !88, !61}
!1931 = !{!1932, !1933, !1934, !1979}
!1932 = !DILocalVariable(name: "DriveData", arg: 1, scope: !1928, file: !1907, line: 135, type: !88)
!1933 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !1928, file: !1907, line: 135, type: !61)
!1934 = !DILocalVariable(name: "D", scope: !1928, file: !1907, line: 137, type: !1935)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1260, line: 190, baseType: !1937)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 173, size: 1376, elements: !1938)
!1938 = !{!1939, !1940, !1941, !1947, !1953, !1954, !1961, !1962, !1969, !1970, !1971, !1972}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1937, file: !1260, line: 174, baseType: !61, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1937, file: !1260, line: 175, baseType: !1501, size: 32, offset: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1937, file: !1260, line: 176, baseType: !1942, size: 32, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1242, line: 56, baseType: !1943)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 32)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1242, line: 54, size: 8, elements: !1945)
!1945 = !{!1946}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1944, file: !1242, line: 55, baseType: !460, size: 8)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1937, file: !1260, line: 177, baseType: !1948, size: 32, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1242, line: 46, baseType: !1949)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 32)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1242, line: 44, size: 8, elements: !1951)
!1951 = !{!1952}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1950, file: !1242, line: 45, baseType: !460, size: 8)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1937, file: !1260, line: 178, baseType: !1254, size: 8, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1937, file: !1260, line: 180, baseType: !1955, size: 32, offset: 160)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1260, line: 146, baseType: !1957)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 143, size: 64, elements: !1958)
!1958 = !{!1959, !1960}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1957, file: !1260, line: 144, baseType: !61, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1957, file: !1260, line: 145, baseType: !61, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1937, file: !1260, line: 181, baseType: !1501, size: 32, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1937, file: !1260, line: 182, baseType: !1963, size: 32, offset: 224)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1260, line: 152, baseType: !1965)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 149, size: 64, elements: !1966)
!1966 = !{!1967, !1968}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1965, file: !1260, line: 150, baseType: !61, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1965, file: !1260, line: 151, baseType: !61, size: 32, offset: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1937, file: !1260, line: 183, baseType: !1501, size: 32, offset: 256)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1937, file: !1260, line: 184, baseType: !61, size: 32, offset: 288)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1937, file: !1260, line: 185, baseType: !1501, size: 32, offset: 320)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1937, file: !1260, line: 188, baseType: !1973, size: 1024, offset: 352)
!1973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1974, size: 1024, elements: !1283)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1260, line: 170, baseType: !1975)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 167, size: 64, elements: !1976)
!1976 = !{!1977, !1978}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1975, file: !1260, line: 168, baseType: !61, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1975, file: !1260, line: 169, baseType: !61, size: 32, offset: 32)
!1979 = !DILocalVariable(name: "addr", scope: !1928, file: !1907, line: 138, type: !61)
!1980 = !DIGlobalVariableExpression(var: !1981, expr: !DIExpression())
!1981 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !1928, file: !1907, line: 140, type: !61, isLocal: true, isDefinition: true)
!1982 = !DIGlobalVariableExpression(var: !1983, expr: !DIExpression())
!1983 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !1928, file: !1907, line: 141, type: !61, isLocal: true, isDefinition: true)
!1984 = !DIGlobalVariableExpression(var: !1985, expr: !DIExpression())
!1985 = distinct !DIGlobalVariable(name: "emi_settings", scope: !1986, file: !1987, line: 44, type: !2133, isLocal: false, isDefinition: true)
!1986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1988, retainedTypes: !1994, globals: !1995, splitDebugInlining: false, nameTableKind: None)
!1987 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1988 = !{!1989}
!1989 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !1990, line: 40, baseType: !18, size: 32, elements: !1991)
!1990 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!1991 = !{!1992, !1993}
!1992 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!1993 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!1994 = !{!1039}
!1995 = !{!1984, !1996, !1998, !2000, !2002, !2103, !2105, !2107, !2109, !2111, !2113, !2115, !2117, !2119, !2121, !2123, !2125, !2127, !2129, !2131}
!1996 = !DIGlobalVariableExpression(var: !1997, expr: !DIExpression())
!1997 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !1986, file: !1987, line: 65, type: !61, isLocal: false, isDefinition: true)
!1998 = !DIGlobalVariableExpression(var: !1999, expr: !DIExpression())
!1999 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !1986, file: !1987, line: 66, type: !61, isLocal: false, isDefinition: true)
!2000 = !DIGlobalVariableExpression(var: !2001, expr: !DIExpression())
!2001 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !1986, file: !1987, line: 67, type: !61, isLocal: false, isDefinition: true)
!2002 = !DIGlobalVariableExpression(var: !2003, expr: !DIExpression())
!2003 = distinct !DIGlobalVariable(name: "emi_register", scope: !1986, file: !1987, line: 83, type: !2004, isLocal: false, isDefinition: true)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2007)
!2007 = !{!2008, !2012, !2013, !2014, !2015, !2019, !2020, !2022, !2023, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2006, file: !56, line: 2448, baseType: !2009, size: 768)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !889, size: 768, elements: !2010)
!2010 = !{!2011}
!2011 = !DISubrange(count: 96)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2006, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2006, file: !56, line: 2450, baseType: !888, size: 96, offset: 800)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2006, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2006, file: !56, line: 2452, baseType: !2016, size: 160, offset: 928)
!2016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !889, size: 160, elements: !2017)
!2017 = !{!2018}
!2018 = !DISubrange(count: 20)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2006, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2006, file: !56, line: 2454, baseType: !2021, size: 32, offset: 1120)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !889, size: 32, elements: !463)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2006, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2006, file: !56, line: 2456, baseType: !2024, size: 480, offset: 1184)
!2024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !889, size: 480, elements: !2025)
!2025 = !{!2026}
!2026 = !DISubrange(count: 60)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2006, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2006, file: !56, line: 2458, baseType: !2021, size: 32, offset: 1696)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2006, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2006, file: !56, line: 2460, baseType: !2021, size: 32, offset: 1760)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2006, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2006, file: !56, line: 2462, baseType: !2016, size: 160, offset: 1824)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2006, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2006, file: !56, line: 2464, baseType: !2021, size: 32, offset: 2016)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2006, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2006, file: !56, line: 2466, baseType: !2021, size: 32, offset: 2080)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2006, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2006, file: !56, line: 2468, baseType: !2021, size: 32, offset: 2144)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2006, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2006, file: !56, line: 2470, baseType: !2041, size: 224, offset: 2208)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !889, size: 224, elements: !2042)
!2042 = !{!2043}
!2043 = !DISubrange(count: 28)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2006, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2006, file: !56, line: 2472, baseType: !2021, size: 32, offset: 2464)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2006, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2006, file: !56, line: 2474, baseType: !888, size: 96, offset: 2528)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2006, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2006, file: !56, line: 2476, baseType: !2021, size: 32, offset: 2656)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2006, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2006, file: !56, line: 2478, baseType: !2021, size: 32, offset: 2720)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2006, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2006, file: !56, line: 2480, baseType: !2021, size: 32, offset: 2784)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2006, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2006, file: !56, line: 2482, baseType: !888, size: 96, offset: 2848)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2006, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2006, file: !56, line: 2484, baseType: !2021, size: 32, offset: 2976)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2006, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2006, file: !56, line: 2486, baseType: !2021, size: 32, offset: 3040)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2006, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2006, file: !56, line: 2488, baseType: !2016, size: 160, offset: 3104)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2006, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2006, file: !56, line: 2490, baseType: !2021, size: 32, offset: 3296)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2006, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2006, file: !56, line: 2492, baseType: !2066, size: 736, offset: 3360)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !889, size: 736, elements: !2067)
!2067 = !{!2068}
!2068 = !DISubrange(count: 92)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2006, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2006, file: !56, line: 2494, baseType: !2021, size: 32, offset: 4128)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2006, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2006, file: !56, line: 2496, baseType: !2021, size: 32, offset: 4192)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2006, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2006, file: !56, line: 2498, baseType: !2021, size: 32, offset: 4256)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2006, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2006, file: !56, line: 2500, baseType: !2021, size: 32, offset: 4320)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2006, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2006, file: !56, line: 2502, baseType: !2021, size: 32, offset: 4384)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2006, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2006, file: !56, line: 2504, baseType: !2021, size: 32, offset: 4448)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2006, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2006, file: !56, line: 2506, baseType: !2021, size: 32, offset: 4512)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2006, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2006, file: !56, line: 2508, baseType: !2021, size: 32, offset: 4576)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2006, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2006, file: !56, line: 2510, baseType: !2024, size: 480, offset: 4640)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2006, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2006, file: !56, line: 2512, baseType: !2089, size: 992, offset: 5152)
!2089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !889, size: 992, elements: !2090)
!2090 = !{!2091}
!2091 = !DISubrange(count: 124)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2006, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2006, file: !56, line: 2514, baseType: !2021, size: 32, offset: 6176)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2006, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2006, file: !56, line: 2516, baseType: !2021, size: 32, offset: 6240)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2006, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2006, file: !56, line: 2518, baseType: !2021, size: 32, offset: 6304)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2006, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2006, file: !56, line: 2520, baseType: !2016, size: 160, offset: 6368)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2006, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2006, file: !56, line: 2522, baseType: !2016, size: 160, offset: 6560)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2006, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression())
!2104 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !1986, file: !1987, line: 485, type: !60, isLocal: false, isDefinition: true)
!2105 = !DIGlobalVariableExpression(var: !2106, expr: !DIExpression())
!2106 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !1986, file: !1987, line: 68, type: !61, isLocal: false, isDefinition: true)
!2107 = !DIGlobalVariableExpression(var: !2108, expr: !DIExpression())
!2108 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !1986, file: !1987, line: 69, type: !61, isLocal: false, isDefinition: true)
!2109 = !DIGlobalVariableExpression(var: !2110, expr: !DIExpression())
!2110 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !1986, file: !1987, line: 70, type: !61, isLocal: false, isDefinition: true)
!2111 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression())
!2112 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !1986, file: !1987, line: 71, type: !61, isLocal: false, isDefinition: true)
!2113 = !DIGlobalVariableExpression(var: !2114, expr: !DIExpression())
!2114 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !1986, file: !1987, line: 72, type: !61, isLocal: false, isDefinition: true)
!2115 = !DIGlobalVariableExpression(var: !2116, expr: !DIExpression())
!2116 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !1986, file: !1987, line: 73, type: !61, isLocal: false, isDefinition: true)
!2117 = !DIGlobalVariableExpression(var: !2118, expr: !DIExpression())
!2118 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !1986, file: !1987, line: 74, type: !61, isLocal: false, isDefinition: true)
!2119 = !DIGlobalVariableExpression(var: !2120, expr: !DIExpression())
!2120 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !1986, file: !1987, line: 75, type: !61, isLocal: false, isDefinition: true)
!2121 = !DIGlobalVariableExpression(var: !2122, expr: !DIExpression())
!2122 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !1986, file: !1987, line: 76, type: !61, isLocal: false, isDefinition: true)
!2123 = !DIGlobalVariableExpression(var: !2124, expr: !DIExpression())
!2124 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !1986, file: !1987, line: 77, type: !61, isLocal: false, isDefinition: true)
!2125 = !DIGlobalVariableExpression(var: !2126, expr: !DIExpression())
!2126 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !1986, file: !1987, line: 78, type: !61, isLocal: false, isDefinition: true)
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !1986, file: !1987, line: 79, type: !61, isLocal: false, isDefinition: true)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !1986, file: !1987, line: 80, type: !61, isLocal: false, isDefinition: true)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !1986, file: !1987, line: 84, type: !2005, isLocal: false, isDefinition: true)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2134, size: 416, elements: !76)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !1990, line: 60, baseType: !2135)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1990, line: 45, size: 416, elements: !2136)
!2136 = !{!2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2135, file: !1990, line: 46, baseType: !61, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2135, file: !1990, line: 47, baseType: !61, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2135, file: !1990, line: 48, baseType: !61, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2135, file: !1990, line: 49, baseType: !61, size: 32, offset: 96)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2135, file: !1990, line: 50, baseType: !61, size: 32, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2135, file: !1990, line: 51, baseType: !61, size: 32, offset: 160)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2135, file: !1990, line: 52, baseType: !61, size: 32, offset: 192)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2135, file: !1990, line: 53, baseType: !61, size: 32, offset: 224)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2135, file: !1990, line: 54, baseType: !61, size: 32, offset: 256)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2135, file: !1990, line: 55, baseType: !61, size: 32, offset: 288)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2135, file: !1990, line: 56, baseType: !61, size: 32, offset: 320)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2135, file: !1990, line: 57, baseType: !61, size: 32, offset: 352)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2135, file: !1990, line: 58, baseType: !61, size: 32, offset: 384)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2152, file: !2153, line: 48, type: !2161, isLocal: false, isDefinition: true)
!2152 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2153, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2154, globals: !2160, splitDebugInlining: false, nameTableKind: None)
!2153 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2154 = !{!2155}
!2155 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !981, line: 100, baseType: !18, size: 32, elements: !2156)
!2156 = !{!2157, !2158, !2159}
!2157 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2158 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2159 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2160 = !{!2150}
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !981, line: 104, baseType: !2155)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "heap_end", scope: !2164, file: !2165, line: 69, type: !2170, isLocal: true, isDefinition: true)
!2164 = distinct !DISubprogram(name: "_sbrk_r", scope: !2165, file: !2165, line: 66, type: !2166, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !2361)
!2165 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/flash_read_write_data/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2166 = !DISubroutineType(types: !2167)
!2167 = !{!2168, !2171, !2356}
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2169, line: 123, baseType: !2170)
!2169 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2173, line: 377, size: 1920, elements: !2174)
!2173 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2174 = !{!2175, !2176, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2255, !2276, !2280, !2281, !2282, !2283, !2293, !2306, !2307, !2312, !2330, !2331, !2338, !2339, !2355}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2172, file: !2173, line: 381, baseType: !7, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2172, file: !2173, line: 386, baseType: !2177, size: 32, offset: 32)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 32)
!2178 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2173, line: 292, baseType: !2179)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2173, line: 186, size: 832, elements: !2180)
!2180 = !{!2181, !2183, !2184, !2185, !2186, !2187, !2192, !2193, !2194, !2195, !2199, !2204, !2211, !2215, !2216, !2217, !2218, !2220, !2222, !2223, !2224, !2226, !2232, !2245}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2179, file: !2173, line: 187, baseType: !2182, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2179, file: !2173, line: 188, baseType: !7, size: 32, offset: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2179, file: !2173, line: 189, baseType: !7, size: 32, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2179, file: !2173, line: 190, baseType: !1440, size: 16, offset: 96)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2179, file: !2173, line: 191, baseType: !1440, size: 16, offset: 112)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2179, file: !2173, line: 192, baseType: !2188, size: 64, offset: 128)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2173, line: 122, size: 64, elements: !2189)
!2189 = !{!2190, !2191}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2188, file: !2173, line: 123, baseType: !2182, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2188, file: !2173, line: 124, baseType: !7, size: 32, offset: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2179, file: !2173, line: 193, baseType: !7, size: 32, offset: 192)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2179, file: !2173, line: 196, baseType: !2171, size: 32, offset: 224)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2179, file: !2173, line: 200, baseType: !88, size: 32, offset: 256)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2179, file: !2173, line: 202, baseType: !2196, size: 32, offset: 288)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 32)
!2197 = !DISubroutineType(types: !2198)
!2198 = !{!7, !2171, !88, !2170, !7}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2179, file: !2173, line: 204, baseType: !2200, size: 32, offset: 320)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 32)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!7, !2171, !88, !2203, !7}
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2179, file: !2173, line: 207, baseType: !2205, size: 32, offset: 352)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 32)
!2206 = !DISubroutineType(types: !2207)
!2207 = !{!2208, !2171, !88, !2208, !7}
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2209, line: 116, baseType: !2210)
!2209 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2210 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2179, file: !2173, line: 208, baseType: !2212, size: 32, offset: 384)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{!7, !2171, !88}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2179, file: !2173, line: 211, baseType: !2188, size: 64, offset: 416)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2179, file: !2173, line: 212, baseType: !2182, size: 32, offset: 480)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2179, file: !2173, line: 213, baseType: !7, size: 32, offset: 512)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2179, file: !2173, line: 216, baseType: !2219, size: 24, offset: 544)
!2219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 24, elements: !1325)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2179, file: !2173, line: 217, baseType: !2221, size: 8, offset: 568)
!2221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 8, elements: !76)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2179, file: !2173, line: 220, baseType: !2188, size: 64, offset: 576)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2179, file: !2173, line: 223, baseType: !7, size: 32, offset: 640)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2179, file: !2173, line: 224, baseType: !2225, size: 32, offset: 672)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2209, line: 46, baseType: !2210)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2179, file: !2173, line: 231, baseType: !2227, size: 32, offset: 704)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2173, line: 35, baseType: !2228)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2229, line: 34, baseType: !2230)
!2229 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2231 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2229, line: 33, flags: DIFlagFwdDecl)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2179, file: !2173, line: 233, baseType: !2233, size: 64, offset: 736)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2209, line: 170, baseType: !2234)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2209, line: 162, size: 64, elements: !2235)
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2234, file: !2209, line: 164, baseType: !7, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2234, file: !2209, line: 169, baseType: !2238, size: 32, offset: 32)
!2238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2234, file: !2209, line: 165, size: 32, elements: !2239)
!2239 = !{!2240, !2243}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2238, file: !2209, line: 167, baseType: !2241, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2242, line: 116, baseType: !7)
!2242 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2238, file: !2209, line: 168, baseType: !2244, size: 32)
!2244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 32, elements: !463)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2179, file: !2173, line: 234, baseType: !7, size: 32, offset: 800)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2172, file: !2173, line: 386, baseType: !2177, size: 32, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2172, file: !2173, line: 386, baseType: !2177, size: 32, offset: 96)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2172, file: !2173, line: 388, baseType: !7, size: 32, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2172, file: !2173, line: 390, baseType: !2170, size: 32, offset: 160)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2172, file: !2173, line: 392, baseType: !7, size: 32, offset: 192)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2172, file: !2173, line: 394, baseType: !7, size: 32, offset: 224)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2172, file: !2173, line: 395, baseType: !2253, size: 32, offset: 256)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2254 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2173, line: 45, flags: DIFlagFwdDecl)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2172, file: !2173, line: 397, baseType: !2256, size: 32, offset: 288)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2173, line: 349, size: 128, elements: !2258)
!2258 = !{!2259, !2272, !2273, !2274}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2257, file: !2173, line: 352, baseType: !2260, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2173, line: 52, size: 192, elements: !2262)
!2262 = !{!2263, !2264, !2265, !2266, !2267, !2268}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2261, file: !2173, line: 54, baseType: !2260, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2261, file: !2173, line: 55, baseType: !7, size: 32, offset: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2261, file: !2173, line: 55, baseType: !7, size: 32, offset: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2261, file: !2173, line: 55, baseType: !7, size: 32, offset: 96)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2261, file: !2173, line: 55, baseType: !7, size: 32, offset: 128)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2261, file: !2173, line: 56, baseType: !2269, size: 32, offset: 160)
!2269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2270, size: 32, elements: !76)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2173, line: 22, baseType: !2271)
!2271 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2257, file: !2173, line: 353, baseType: !7, size: 32, offset: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2257, file: !2173, line: 354, baseType: !2260, size: 32, offset: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2257, file: !2173, line: 355, baseType: !2275, size: 32, offset: 96)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2172, file: !2173, line: 399, baseType: !2277, size: 32, offset: 320)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{null, !2171}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2172, file: !2173, line: 401, baseType: !7, size: 32, offset: 352)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2172, file: !2173, line: 404, baseType: !7, size: 32, offset: 384)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2172, file: !2173, line: 405, baseType: !2170, size: 32, offset: 416)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2172, file: !2173, line: 407, baseType: !2284, size: 32, offset: 448)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2173, line: 324, size: 192, elements: !2286)
!2286 = !{!2287, !2289, !2290, !2291}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2285, file: !2173, line: 325, baseType: !2288, size: 48)
!2288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1036, size: 48, elements: !1325)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2285, file: !2173, line: 326, baseType: !2288, size: 48, offset: 48)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2285, file: !2173, line: 327, baseType: !1036, size: 16, offset: 96)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2285, file: !2173, line: 330, baseType: !2292, size: 64, offset: 128)
!2292 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2172, file: !2173, line: 408, baseType: !2294, size: 32, offset: 480)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 32)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2173, line: 60, size: 288, elements: !2296)
!2296 = !{!2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2295, file: !2173, line: 62, baseType: !7, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2295, file: !2173, line: 63, baseType: !7, size: 32, offset: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2295, file: !2173, line: 64, baseType: !7, size: 32, offset: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2295, file: !2173, line: 65, baseType: !7, size: 32, offset: 96)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2295, file: !2173, line: 66, baseType: !7, size: 32, offset: 128)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2295, file: !2173, line: 67, baseType: !7, size: 32, offset: 160)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2295, file: !2173, line: 68, baseType: !7, size: 32, offset: 192)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2295, file: !2173, line: 69, baseType: !7, size: 32, offset: 224)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2295, file: !2173, line: 70, baseType: !7, size: 32, offset: 256)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2172, file: !2173, line: 409, baseType: !2170, size: 32, offset: 512)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2172, file: !2173, line: 412, baseType: !2308, size: 32, offset: 544)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{null, !7}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2172, file: !2173, line: 416, baseType: !2313, size: 32, offset: 576)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 32)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2173, line: 90, size: 1120, elements: !2315)
!2315 = !{!2316, !2317, !2318, !2321}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2314, file: !2173, line: 91, baseType: !2313, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2314, file: !2173, line: 92, baseType: !7, size: 32, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2314, file: !2173, line: 93, baseType: !2319, size: 1024, offset: 64)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2320, size: 1024, elements: !330)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2314, file: !2173, line: 94, baseType: !2322, size: 32, offset: 1088)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2173, line: 79, size: 2112, elements: !2324)
!2324 = !{!2325, !2327, !2328, !2329}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2323, file: !2173, line: 80, baseType: !2326, size: 1024)
!2326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !330)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2323, file: !2173, line: 81, baseType: !2326, size: 1024, offset: 1024)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2323, file: !2173, line: 83, baseType: !2270, size: 32, offset: 2048)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2323, file: !2173, line: 86, baseType: !2270, size: 32, offset: 2080)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2172, file: !2173, line: 417, baseType: !2314, size: 1120, offset: 608)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2172, file: !2173, line: 420, baseType: !2332, size: 96, offset: 1728)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2173, line: 296, size: 96, elements: !2333)
!2333 = !{!2334, !2336, !2337}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2332, file: !2173, line: 298, baseType: !2335, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2332, file: !2173, line: 299, baseType: !7, size: 32, offset: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2332, file: !2173, line: 300, baseType: !2177, size: 32, offset: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2172, file: !2173, line: 421, baseType: !2177, size: 32, offset: 1824)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2172, file: !2173, line: 422, baseType: !2340, size: 32, offset: 1856)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2173, line: 359, size: 640, elements: !2342)
!2342 = !{!2343, !2344, !2345, !2346, !2347, !2349, !2350, !2351, !2352, !2353, !2354}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2341, file: !2173, line: 362, baseType: !2170, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2341, file: !2173, line: 363, baseType: !2233, size: 64, offset: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2341, file: !2173, line: 364, baseType: !2233, size: 64, offset: 96)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2341, file: !2173, line: 365, baseType: !2233, size: 64, offset: 160)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2341, file: !2173, line: 366, baseType: !2348, size: 64, offset: 224)
!2348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1482, size: 64, elements: !753)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2341, file: !2173, line: 367, baseType: !7, size: 32, offset: 288)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2341, file: !2173, line: 368, baseType: !2233, size: 64, offset: 320)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2341, file: !2173, line: 369, baseType: !2233, size: 64, offset: 384)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2341, file: !2173, line: 370, baseType: !2233, size: 64, offset: 448)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2341, file: !2173, line: 371, baseType: !2233, size: 64, offset: 512)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2341, file: !2173, line: 372, baseType: !2233, size: 64, offset: 576)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2172, file: !2173, line: 423, baseType: !2170, size: 32, offset: 1888)
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2242, line: 46, baseType: !18)
!2357 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2358, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2359, globals: !2360, splitDebugInlining: false, nameTableKind: None)
!2358 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2359 = !{!2170, !2168}
!2360 = !{!2162}
!2361 = !{!2362, !2363, !2364, !2365}
!2362 = !DILocalVariable(name: "r", arg: 1, scope: !2164, file: !2165, line: 66, type: !2171)
!2363 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2164, file: !2165, line: 66, type: !2356)
!2364 = !DILocalVariable(name: "prev_heap_end", scope: !2164, file: !2165, line: 70, type: !2170)
!2365 = !DILocalVariable(name: "stack", scope: !2164, file: !2165, line: 71, type: !2170)
!2366 = !DIGlobalVariableExpression(var: !2367, expr: !DIExpression())
!2367 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2368, file: !2369, line: 52, type: !60, isLocal: true, isDefinition: true)
!2368 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2369, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2370, globals: !2473, splitDebugInlining: false, nameTableKind: None)
!2369 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/flash_read_write_data/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2370 = !{!2371, !2379, !61, !2424, !2429, !2454}
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 32)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !878, line: 656, baseType: !2373)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 650, size: 128, elements: !2374)
!2374 = !{!2375, !2376, !2377, !2378}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2373, file: !878, line: 652, baseType: !60, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2373, file: !878, line: 653, baseType: !60, size: 32, offset: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2373, file: !878, line: 654, baseType: !60, size: 32, offset: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2373, file: !878, line: 655, baseType: !272, size: 32, offset: 96)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !2381)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !2382)
!2382 = !{!2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2393, !2394, !2398, !2399, !2401, !2402, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2421, !2422, !2423}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2381, file: !56, line: 1922, baseType: !60, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2381, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2381, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2381, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2381, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2381, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2381, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2381, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2381, file: !56, line: 1930, baseType: !2392, size: 768, offset: 256)
!2392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !918)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2381, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2381, file: !56, line: 1932, baseType: !2395, size: 992, offset: 1056)
!2395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !2396)
!2396 = !{!2397}
!2397 = !DISubrange(count: 31)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2381, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2381, file: !56, line: 1934, baseType: !2400, size: 416, offset: 2080)
!2400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !773)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2381, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2381, file: !56, line: 1936, baseType: !2403, size: 1568, offset: 2528)
!2403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !2404)
!2404 = !{!2405}
!2405 = !DISubrange(count: 49)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2381, file: !56, line: 1937, baseType: !272, size: 32, offset: 4096)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2381, file: !56, line: 1938, baseType: !272, size: 32, offset: 4128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2381, file: !56, line: 1939, baseType: !272, size: 32, offset: 4160)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2381, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2381, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2381, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2381, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2381, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2381, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2381, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2381, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2381, file: !56, line: 1948, baseType: !2418, size: 3744, offset: 4448)
!2418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !2419)
!2419 = !{!2420}
!2420 = !DISubrange(count: 117)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2381, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2381, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2381, file: !56, line: 1951, baseType: !272, size: 32, offset: 8256)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !2426)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !2427)
!2427 = !{!2428}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2426, file: !56, line: 2157, baseType: !60, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !878, line: 418, baseType: !2431)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 395, size: 1120, elements: !2432)
!2432 = !{!2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2431, file: !878, line: 397, baseType: !272, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2431, file: !878, line: 398, baseType: !60, size: 32, offset: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2431, file: !878, line: 399, baseType: !60, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2431, file: !878, line: 400, baseType: !60, size: 32, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2431, file: !878, line: 401, baseType: !60, size: 32, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2431, file: !878, line: 402, baseType: !60, size: 32, offset: 160)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2431, file: !878, line: 403, baseType: !888, size: 96, offset: 192)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2431, file: !878, line: 404, baseType: !60, size: 32, offset: 288)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2431, file: !878, line: 405, baseType: !60, size: 32, offset: 320)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2431, file: !878, line: 406, baseType: !60, size: 32, offset: 352)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2431, file: !878, line: 407, baseType: !60, size: 32, offset: 384)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2431, file: !878, line: 408, baseType: !60, size: 32, offset: 416)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2431, file: !878, line: 409, baseType: !60, size: 32, offset: 448)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2431, file: !878, line: 410, baseType: !60, size: 32, offset: 480)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2431, file: !878, line: 411, baseType: !898, size: 64, offset: 512)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2431, file: !878, line: 412, baseType: !272, size: 32, offset: 576)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2431, file: !878, line: 413, baseType: !272, size: 32, offset: 608)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2431, file: !878, line: 414, baseType: !902, size: 128, offset: 640)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2431, file: !878, line: 415, baseType: !904, size: 160, offset: 768)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2431, file: !878, line: 416, baseType: !908, size: 160, offset: 928)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2431, file: !878, line: 417, baseType: !60, size: 32, offset: 1088)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !2456)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !2457)
!2457 = !{!2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2456, file: !56, line: 261, baseType: !60, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2456, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2456, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2456, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2456, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2456, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2456, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2456, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2456, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2456, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2456, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2456, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2456, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2456, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2456, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!2473 = !{!2474, !2366}
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2368, file: !2369, line: 50, type: !61, isLocal: false, isDefinition: true)
!2476 = !DIGlobalVariableExpression(var: !2477, expr: !DIExpression())
!2477 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2478, file: !2483, line: 4, type: !2489, isLocal: false, isDefinition: true)
!2478 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2479, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2480, splitDebugInlining: false, nameTableKind: None)
!2479 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2480 = !{!2476, !2481, !2487}
!2481 = !DIGlobalVariableExpression(var: !2482, expr: !DIExpression())
!2482 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2478, file: !2483, line: 5, type: !2484, isLocal: false, isDefinition: true)
!2483 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1482, size: 88, elements: !2485)
!2485 = !{!2486}
!2486 = !DISubrange(count: 11)
!2487 = !DIGlobalVariableExpression(var: !2488, expr: !DIExpression())
!2488 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2478, file: !2483, line: 6, type: !2484, isLocal: false, isDefinition: true)
!2489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1482, size: 248, elements: !2396)
!2490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2492, retainedTypes: !2515, splitDebugInlining: false, nameTableKind: None)
!2491 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2492 = !{!1909, !245, !259, !2493, !2497, !254, !157}
!2493 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 857, baseType: !18, size: 32, elements: !2494)
!2494 = !{!2495, !2496}
!2495 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!2496 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!2497 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 87, baseType: !18, size: 32, elements: !2498)
!2498 = !{!2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514}
!2499 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2500 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2501 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2502 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2503 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2504 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2505 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2506 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2507 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2508 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2509 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2510 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2511 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2512 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2513 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2514 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2515 = !{!61, !88, !307}
!2516 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2517, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2518, retainedTypes: !2519, splitDebugInlining: false, nameTableKind: None)
!2517 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2518 = !{!693, !699, !703, !786}
!2519 = !{!460}
!2520 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2521, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2522, retainedTypes: !2523, splitDebugInlining: false, nameTableKind: None)
!2521 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2522 = !{!168, !715}
!2523 = !{!862, !2524, !61, !2549, !940}
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !878, line: 418, baseType: !2526)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 395, size: 1120, elements: !2527)
!2527 = !{!2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2526, file: !878, line: 397, baseType: !272, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2526, file: !878, line: 398, baseType: !60, size: 32, offset: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2526, file: !878, line: 399, baseType: !60, size: 32, offset: 64)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2526, file: !878, line: 400, baseType: !60, size: 32, offset: 96)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2526, file: !878, line: 401, baseType: !60, size: 32, offset: 128)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2526, file: !878, line: 402, baseType: !60, size: 32, offset: 160)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2526, file: !878, line: 403, baseType: !888, size: 96, offset: 192)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2526, file: !878, line: 404, baseType: !60, size: 32, offset: 288)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2526, file: !878, line: 405, baseType: !60, size: 32, offset: 320)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2526, file: !878, line: 406, baseType: !60, size: 32, offset: 352)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2526, file: !878, line: 407, baseType: !60, size: 32, offset: 384)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2526, file: !878, line: 408, baseType: !60, size: 32, offset: 416)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2526, file: !878, line: 409, baseType: !60, size: 32, offset: 448)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2526, file: !878, line: 410, baseType: !60, size: 32, offset: 480)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2526, file: !878, line: 411, baseType: !898, size: 64, offset: 512)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2526, file: !878, line: 412, baseType: !272, size: 32, offset: 576)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2526, file: !878, line: 413, baseType: !272, size: 32, offset: 608)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2526, file: !878, line: 414, baseType: !902, size: 128, offset: 640)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2526, file: !878, line: 415, baseType: !904, size: 160, offset: 768)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2526, file: !878, line: 416, baseType: !908, size: 160, offset: 928)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2526, file: !878, line: 417, baseType: !60, size: 32, offset: 1088)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !878, line: 378, baseType: !2551)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !878, line: 363, size: 28704, elements: !2552)
!2552 = !{!2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2551, file: !878, line: 365, baseType: !915, size: 256)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2551, file: !878, line: 366, baseType: !917, size: 768, offset: 256)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2551, file: !878, line: 367, baseType: !915, size: 256, offset: 1024)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2551, file: !878, line: 368, baseType: !917, size: 768, offset: 1280)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2551, file: !878, line: 369, baseType: !915, size: 256, offset: 2048)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2551, file: !878, line: 370, baseType: !917, size: 768, offset: 2304)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2551, file: !878, line: 371, baseType: !915, size: 256, offset: 3072)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2551, file: !878, line: 372, baseType: !917, size: 768, offset: 3328)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2551, file: !878, line: 373, baseType: !915, size: 256, offset: 4096)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2551, file: !878, line: 374, baseType: !928, size: 1792, offset: 4352)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2551, file: !878, line: 375, baseType: !932, size: 1920, offset: 6144)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2551, file: !878, line: 376, baseType: !936, size: 20608, offset: 8064)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2551, file: !878, line: 377, baseType: !60, size: 32, offset: 28672)
!2566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2567 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2568 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2569, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2569 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2570 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2571, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2572, retainedTypes: !2573, splitDebugInlining: false, nameTableKind: None)
!2571 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/flash_read_write_data/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2572 = !{!631, !677, !693, !699, !703, !348, !1182, !1848}
!2573 = !{!762}
!2574 = !{!"Ubuntu clang version 14.0.6"}
!2575 = !{i32 7, !"Dwarf Version", i32 2}
!2576 = !{i32 2, !"Debug Info Version", i32 3}
!2577 = !{i32 1, !"wchar_size", i32 4}
!2578 = !{i32 1, !"min_enum_size", i32 4}
!2579 = !{i32 1, !"branch-target-enforcement", i32 0}
!2580 = !{i32 1, !"sign-return-address", i32 0}
!2581 = !{i32 1, !"sign-return-address-all", i32 0}
!2582 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2583 = !{i32 7, !"frame-pointer", i32 2}
!2584 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !2585, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2588)
!2585 = !DISubroutineType(types: !2586)
!2586 = !{!2587}
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!2588 = !{!2589, !2591}
!2589 = !DILocalVariable(name: "region", scope: !2584, file: !3, line: 55, type: !2590)
!2590 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!2591 = !DILocalVariable(name: "irq_flag", scope: !2584, file: !3, line: 56, type: !61)
!2592 = !DILocation(line: 59, column: 16, scope: !2584)
!2593 = !DILocation(line: 0, scope: !2584)
!2594 = !DILocation(line: 62, column: 9, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2584, file: !3, line: 62, column: 9)
!2596 = !{i8 0, i8 2}
!2597 = !DILocation(line: 62, column: 9, scope: !2584)
!2598 = !DILocation(line: 64, column: 9, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 62, column: 39)
!2600 = !DILocation(line: 66, column: 9, scope: !2599)
!2601 = !DILocation(line: 69, column: 24, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 67, column: 12)
!2603 = !DILocation(line: 72, column: 9, scope: !2602)
!2604 = !DILocation(line: 77, column: 5, scope: !2584)
!2605 = !DILocation(line: 80, column: 22, scope: !2584)
!2606 = !DILocation(line: 81, column: 28, scope: !2584)
!2607 = !DILocation(line: 84, column: 19, scope: !2584)
!2608 = !DILocation(line: 85, column: 23, scope: !2584)
!2609 = !DILocation(line: 88, column: 5, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2584, file: !3, line: 88, column: 5)
!2611 = !DILocation(line: 90, column: 9, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2613, file: !3, line: 88, column: 81)
!2613 = distinct !DILexicalBlock(scope: !2610, file: !3, line: 88, column: 5)
!2614 = !DILocation(line: 90, column: 38, scope: !2612)
!2615 = !DILocation(line: 91, column: 9, scope: !2612)
!2616 = !DILocation(line: 91, column: 42, scope: !2612)
!2617 = !DILocation(line: 94, column: 45, scope: !2612)
!2618 = !DILocation(line: 94, column: 47, scope: !2612)
!2619 = !DILocation(line: 95, column: 49, scope: !2612)
!2620 = !DILocation(line: 95, column: 51, scope: !2612)
!2621 = !DILocation(line: 88, column: 77, scope: !2613)
!2622 = !DILocation(line: 88, column: 46, scope: !2613)
!2623 = distinct !{!2623, !2609, !2624}
!2624 = !DILocation(line: 96, column: 5, scope: !2610)
!2625 = !DILocation(line: 99, column: 1, scope: !2584)
!2626 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !2585, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2627)
!2627 = !{!2628}
!2628 = !DILocalVariable(name: "irq_flag", scope: !2626, file: !3, line: 329, type: !61)
!2629 = !DILocation(line: 332, column: 16, scope: !2626)
!2630 = !DILocation(line: 0, scope: !2626)
!2631 = !DILocation(line: 335, column: 21, scope: !2626)
!2632 = !DILocation(line: 336, column: 21, scope: !2626)
!2633 = !DILocation(line: 339, column: 21, scope: !2626)
!2634 = !DILocation(line: 340, column: 21, scope: !2626)
!2635 = !DILocation(line: 434, column: 3, scope: !2636, inlinedAt: !2638)
!2636 = distinct !DISubprogram(name: "__ISB", scope: !2637, file: !2637, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2637 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!2638 = distinct !DILocation(line: 343, column: 5, scope: !2626)
!2639 = !{i64 442816}
!2640 = !DILocation(line: 346, column: 5, scope: !2626)
!2641 = !DILocation(line: 348, column: 5, scope: !2626)
!2642 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !2585, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2643)
!2643 = !{!2644}
!2644 = !DILocalVariable(name: "region", scope: !2642, file: !3, line: 103, type: !2590)
!2645 = !DILocation(line: 107, column: 5, scope: !2642)
!2646 = !DILocation(line: 110, column: 22, scope: !2642)
!2647 = !DILocation(line: 111, column: 28, scope: !2642)
!2648 = !DILocation(line: 114, column: 19, scope: !2642)
!2649 = !DILocation(line: 115, column: 23, scope: !2642)
!2650 = !DILocation(line: 0, scope: !2642)
!2651 = !DILocation(line: 118, column: 5, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2642, file: !3, line: 118, column: 5)
!2653 = !DILocation(line: 120, column: 9, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2655, file: !3, line: 118, column: 81)
!2655 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 118, column: 5)
!2656 = !DILocation(line: 120, column: 38, scope: !2654)
!2657 = !DILocation(line: 121, column: 9, scope: !2654)
!2658 = !DILocation(line: 121, column: 42, scope: !2654)
!2659 = !DILocation(line: 124, column: 45, scope: !2654)
!2660 = !DILocation(line: 124, column: 47, scope: !2654)
!2661 = !DILocation(line: 125, column: 49, scope: !2654)
!2662 = !DILocation(line: 125, column: 51, scope: !2654)
!2663 = !DILocation(line: 118, column: 77, scope: !2655)
!2664 = !DILocation(line: 118, column: 46, scope: !2655)
!2665 = distinct !{!2665, !2651, !2666}
!2666 = !DILocation(line: 126, column: 5, scope: !2652)
!2667 = !DILocation(line: 129, column: 20, scope: !2642)
!2668 = !DILocation(line: 131, column: 5, scope: !2642)
!2669 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !2585, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2670 = !DILocation(line: 137, column: 45, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2669, file: !3, line: 137, column: 9)
!2672 = !DILocation(line: 137, column: 28, scope: !2671)
!2673 = !DILocation(line: 137, column: 9, scope: !2669)
!2674 = !DILocation(line: 142, column: 22, scope: !2669)
!2675 = !DILocation(line: 145, column: 28, scope: !2669)
!2676 = !DILocation(line: 145, column: 19, scope: !2669)
!2677 = !DILocation(line: 147, column: 5, scope: !2669)
!2678 = !DILocation(line: 0, scope: !2669)
!2679 = !DILocation(line: 148, column: 1, scope: !2669)
!2680 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !2585, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2681)
!2681 = !{!2682}
!2682 = !DILocalVariable(name: "irq_flag", scope: !2680, file: !3, line: 152, type: !61)
!2683 = !DILocation(line: 155, column: 16, scope: !2680)
!2684 = !DILocation(line: 0, scope: !2680)
!2685 = !DILocation(line: 158, column: 16, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2680, file: !3, line: 158, column: 9)
!2687 = !DILocation(line: 158, column: 26, scope: !2686)
!2688 = !DILocation(line: 158, column: 9, scope: !2680)
!2689 = !DILocation(line: 160, column: 9, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 158, column: 49)
!2691 = !DILocation(line: 161, column: 5, scope: !2690)
!2692 = !DILocation(line: 164, column: 22, scope: !2680)
!2693 = !DILocation(line: 167, column: 28, scope: !2680)
!2694 = !DILocation(line: 167, column: 19, scope: !2680)
!2695 = !DILocation(line: 170, column: 5, scope: !2680)
!2696 = !DILocation(line: 172, column: 5, scope: !2680)
!2697 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !2698, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2700)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{!2587, !2590}
!2700 = !{!2701}
!2701 = !DILocalVariable(name: "region", arg: 1, scope: !2697, file: !3, line: 175, type: !2590)
!2702 = !DILocation(line: 0, scope: !2697)
!2703 = !DILocation(line: 178, column: 16, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 178, column: 9)
!2705 = !DILocation(line: 178, column: 9, scope: !2697)
!2706 = !DILocation(line: 183, column: 9, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 183, column: 9)
!2708 = !DILocation(line: 183, column: 38, scope: !2707)
!2709 = !DILocation(line: 183, column: 9, scope: !2697)
!2710 = !DILocation(line: 184, column: 38, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2707, file: !3, line: 183, column: 62)
!2712 = !DILocation(line: 184, column: 32, scope: !2711)
!2713 = !DILocation(line: 190, column: 32, scope: !2697)
!2714 = !DILocation(line: 190, column: 23, scope: !2697)
!2715 = !DILocation(line: 192, column: 5, scope: !2697)
!2716 = !DILocation(line: 193, column: 1, scope: !2697)
!2717 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !2698, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2718)
!2718 = !{!2719}
!2719 = !DILocalVariable(name: "region", arg: 1, scope: !2717, file: !3, line: 195, type: !2590)
!2720 = !DILocation(line: 0, scope: !2717)
!2721 = !DILocation(line: 198, column: 16, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2717, file: !3, line: 198, column: 9)
!2723 = !DILocation(line: 198, column: 9, scope: !2717)
!2724 = !DILocation(line: 203, column: 35, scope: !2717)
!2725 = !DILocation(line: 203, column: 31, scope: !2717)
!2726 = !DILocation(line: 203, column: 28, scope: !2717)
!2727 = !DILocation(line: 206, column: 32, scope: !2717)
!2728 = !DILocation(line: 206, column: 23, scope: !2717)
!2729 = !DILocation(line: 209, column: 41, scope: !2717)
!2730 = !DILocation(line: 209, column: 43, scope: !2717)
!2731 = !DILocation(line: 210, column: 45, scope: !2717)
!2732 = !DILocation(line: 210, column: 47, scope: !2717)
!2733 = !DILocation(line: 212, column: 5, scope: !2717)
!2734 = !DILocation(line: 213, column: 1, scope: !2717)
!2735 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !2736, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2739)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!2587, !2738}
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!2739 = !{!2740}
!2740 = !DILocalVariable(name: "cache_size", arg: 1, scope: !2735, file: !3, line: 215, type: !2738)
!2741 = !DILocation(line: 0, scope: !2735)
!2742 = !DILocation(line: 218, column: 20, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2735, file: !3, line: 218, column: 9)
!2744 = !DILocation(line: 218, column: 9, scope: !2735)
!2745 = !DILocation(line: 223, column: 22, scope: !2735)
!2746 = !DILocation(line: 224, column: 37, scope: !2735)
!2747 = !DILocation(line: 224, column: 22, scope: !2735)
!2748 = !DILocation(line: 227, column: 20, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2735, file: !3, line: 227, column: 9)
!2750 = !DILocation(line: 227, column: 9, scope: !2735)
!2751 = !DILocation(line: 228, column: 26, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 227, column: 43)
!2753 = !DILocation(line: 229, column: 5, scope: !2752)
!2754 = !DILocation(line: 232, column: 28, scope: !2735)
!2755 = !DILocation(line: 232, column: 19, scope: !2735)
!2756 = !DILocation(line: 234, column: 5, scope: !2735)
!2757 = !DILocation(line: 235, column: 1, scope: !2735)
!2758 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !2759, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2768)
!2759 = !DISubroutineType(types: !2760)
!2760 = !{!2587, !2590, !2761}
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2763)
!2763 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !2764)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !2764, file: !6, line: 220, baseType: !61, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !2764, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!2768 = !{!2769, !2770}
!2769 = !DILocalVariable(name: "region", arg: 1, scope: !2758, file: !3, line: 237, type: !2590)
!2770 = !DILocalVariable(name: "region_config", arg: 2, scope: !2758, file: !3, line: 237, type: !2761)
!2771 = !DILocation(line: 0, scope: !2758)
!2772 = !DILocation(line: 240, column: 16, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 240, column: 9)
!2774 = !DILocation(line: 240, column: 9, scope: !2758)
!2775 = !DILocation(line: 245, column: 23, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 245, column: 9)
!2777 = !DILocation(line: 245, column: 9, scope: !2758)
!2778 = !DILocation(line: 250, column: 24, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 250, column: 9)
!2780 = !DILocation(line: 250, column: 45, scope: !2779)
!2781 = !DILocation(line: 250, column: 9, scope: !2758)
!2782 = !DILocation(line: 251, column: 9, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2779, file: !3, line: 250, column: 81)
!2784 = !DILocation(line: 256, column: 24, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 256, column: 9)
!2786 = !DILocation(line: 256, column: 42, scope: !2785)
!2787 = !DILocation(line: 256, column: 9, scope: !2758)
!2788 = !DILocation(line: 257, column: 9, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 256, column: 78)
!2790 = !DILocation(line: 262, column: 5, scope: !2758)
!2791 = !DILocation(line: 262, column: 34, scope: !2758)
!2792 = !DILocation(line: 263, column: 55, scope: !2758)
!2793 = !DILocation(line: 263, column: 93, scope: !2758)
!2794 = !DILocation(line: 263, column: 76, scope: !2758)
!2795 = !DILocation(line: 263, column: 5, scope: !2758)
!2796 = !DILocation(line: 263, column: 38, scope: !2758)
!2797 = !DILocation(line: 266, column: 34, scope: !2758)
!2798 = !DILocation(line: 269, column: 45, scope: !2758)
!2799 = !DILocation(line: 269, column: 41, scope: !2758)
!2800 = !DILocation(line: 269, column: 43, scope: !2758)
!2801 = !DILocation(line: 270, column: 49, scope: !2758)
!2802 = !DILocation(line: 270, column: 45, scope: !2758)
!2803 = !DILocation(line: 270, column: 47, scope: !2758)
!2804 = !DILocation(line: 272, column: 5, scope: !2758)
!2805 = !DILocation(line: 273, column: 1, scope: !2758)
!2806 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !2807, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2809)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!2587, !61}
!2809 = !{!2810, !2811}
!2810 = !DILocalVariable(name: "address", arg: 1, scope: !2806, file: !3, line: 275, type: !61)
!2811 = !DILocalVariable(name: "irq_flag", scope: !2806, file: !3, line: 277, type: !61)
!2812 = !DILocation(line: 0, scope: !2806)
!2813 = !DILocation(line: 280, column: 17, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2806, file: !3, line: 280, column: 9)
!2815 = !DILocation(line: 280, column: 9, scope: !2806)
!2816 = !DILocation(line: 284, column: 16, scope: !2806)
!2817 = !DILocation(line: 287, column: 32, scope: !2806)
!2818 = !DILocation(line: 287, column: 21, scope: !2806)
!2819 = !DILocation(line: 288, column: 21, scope: !2806)
!2820 = !DILocation(line: 434, column: 3, scope: !2636, inlinedAt: !2821)
!2821 = distinct !DILocation(line: 291, column: 5, scope: !2806)
!2822 = !DILocation(line: 294, column: 5, scope: !2806)
!2823 = !DILocation(line: 296, column: 5, scope: !2806)
!2824 = !DILocation(line: 297, column: 1, scope: !2806)
!2825 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !2826, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2828)
!2826 = !DISubroutineType(types: !2827)
!2827 = !{!2587, !61, !61}
!2828 = !{!2829, !2830, !2831, !2832}
!2829 = !DILocalVariable(name: "address", arg: 1, scope: !2825, file: !3, line: 299, type: !61)
!2830 = !DILocalVariable(name: "length", arg: 2, scope: !2825, file: !3, line: 299, type: !61)
!2831 = !DILocalVariable(name: "irq_flag", scope: !2825, file: !3, line: 301, type: !61)
!2832 = !DILocalVariable(name: "end_address", scope: !2825, file: !3, line: 302, type: !61)
!2833 = !DILocation(line: 0, scope: !2825)
!2834 = !DILocation(line: 302, column: 36, scope: !2825)
!2835 = !DILocation(line: 305, column: 47, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 305, column: 9)
!2837 = !DILocation(line: 310, column: 16, scope: !2825)
!2838 = !DILocation(line: 313, column: 20, scope: !2825)
!2839 = !DILocation(line: 313, column: 5, scope: !2825)
!2840 = !DILocation(line: 314, column: 9, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 313, column: 35)
!2842 = !DILocation(line: 315, column: 17, scope: !2841)
!2843 = distinct !{!2843, !2839, !2844}
!2844 = !DILocation(line: 316, column: 5, scope: !2825)
!2845 = !DILocation(line: 434, column: 3, scope: !2636, inlinedAt: !2846)
!2846 = distinct !DILocation(line: 319, column: 5, scope: !2825)
!2847 = !DILocation(line: 322, column: 5, scope: !2825)
!2848 = !DILocation(line: 324, column: 5, scope: !2825)
!2849 = !DILocation(line: 325, column: 1, scope: !2825)
!2850 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !2807, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2851)
!2851 = !{!2852, !2853}
!2852 = !DILocalVariable(name: "address", arg: 1, scope: !2850, file: !3, line: 351, type: !61)
!2853 = !DILocalVariable(name: "irq_flag", scope: !2850, file: !3, line: 353, type: !61)
!2854 = !DILocation(line: 0, scope: !2850)
!2855 = !DILocation(line: 356, column: 17, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 356, column: 9)
!2857 = !DILocation(line: 356, column: 9, scope: !2850)
!2858 = !DILocation(line: 361, column: 16, scope: !2850)
!2859 = !DILocation(line: 364, column: 32, scope: !2850)
!2860 = !DILocation(line: 364, column: 21, scope: !2850)
!2861 = !DILocation(line: 365, column: 21, scope: !2850)
!2862 = !DILocation(line: 434, column: 3, scope: !2636, inlinedAt: !2863)
!2863 = distinct !DILocation(line: 368, column: 5, scope: !2850)
!2864 = !DILocation(line: 371, column: 5, scope: !2850)
!2865 = !DILocation(line: 373, column: 5, scope: !2850)
!2866 = !DILocation(line: 374, column: 1, scope: !2850)
!2867 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !2826, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2868)
!2868 = !{!2869, !2870, !2871, !2872}
!2869 = !DILocalVariable(name: "address", arg: 1, scope: !2867, file: !3, line: 376, type: !61)
!2870 = !DILocalVariable(name: "length", arg: 2, scope: !2867, file: !3, line: 376, type: !61)
!2871 = !DILocalVariable(name: "irq_flag", scope: !2867, file: !3, line: 378, type: !61)
!2872 = !DILocalVariable(name: "end_address", scope: !2867, file: !3, line: 379, type: !61)
!2873 = !DILocation(line: 0, scope: !2867)
!2874 = !DILocation(line: 379, column: 36, scope: !2867)
!2875 = !DILocation(line: 382, column: 47, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2867, file: !3, line: 382, column: 9)
!2877 = !DILocation(line: 387, column: 16, scope: !2867)
!2878 = !DILocation(line: 390, column: 20, scope: !2867)
!2879 = !DILocation(line: 390, column: 5, scope: !2867)
!2880 = !DILocation(line: 391, column: 9, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2867, file: !3, line: 390, column: 35)
!2882 = !DILocation(line: 392, column: 17, scope: !2881)
!2883 = distinct !{!2883, !2879, !2884}
!2884 = !DILocation(line: 393, column: 5, scope: !2867)
!2885 = !DILocation(line: 434, column: 3, scope: !2636, inlinedAt: !2886)
!2886 = distinct !DILocation(line: 396, column: 5, scope: !2867)
!2887 = !DILocation(line: 399, column: 5, scope: !2867)
!2888 = !DILocation(line: 401, column: 5, scope: !2867)
!2889 = !DILocation(line: 402, column: 1, scope: !2867)
!2890 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !2585, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2891)
!2891 = !{!2892}
!2892 = !DILocalVariable(name: "irq_flag", scope: !2890, file: !3, line: 406, type: !61)
!2893 = !DILocation(line: 409, column: 16, scope: !2890)
!2894 = !DILocation(line: 0, scope: !2890)
!2895 = !DILocation(line: 412, column: 21, scope: !2890)
!2896 = !DILocation(line: 413, column: 21, scope: !2890)
!2897 = !DILocation(line: 434, column: 3, scope: !2636, inlinedAt: !2898)
!2898 = distinct !DILocation(line: 416, column: 5, scope: !2890)
!2899 = !DILocation(line: 419, column: 5, scope: !2890)
!2900 = !DILocation(line: 421, column: 5, scope: !2890)
!2901 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !2902, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2904)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!91, !61}
!2904 = !{!2905, !2906}
!2905 = !DILocalVariable(name: "address", arg: 1, scope: !2901, file: !3, line: 424, type: !61)
!2906 = !DILocalVariable(name: "region", scope: !2901, file: !3, line: 426, type: !2590)
!2907 = !DILocation(line: 0, scope: !2901)
!2908 = !DILocation(line: 429, column: 18, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 429, column: 9)
!2910 = !DILocation(line: 429, column: 28, scope: !2909)
!2911 = !DILocation(line: 429, column: 9, scope: !2901)
!2912 = !DILocation(line: 435, column: 20, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2914, file: !3, line: 435, column: 13)
!2914 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 433, column: 81)
!2915 = distinct !DILexicalBlock(scope: !2916, file: !3, line: 433, column: 5)
!2916 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 433, column: 5)
!2917 = !DILocation(line: 435, column: 41, scope: !2913)
!2918 = !DILocation(line: 435, column: 36, scope: !2913)
!2919 = !DILocation(line: 435, column: 13, scope: !2914)
!2920 = !DILocation(line: 436, column: 30, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 436, column: 17)
!2922 = distinct !DILexicalBlock(scope: !2913, file: !3, line: 435, column: 53)
!2923 = !DILocation(line: 436, column: 59, scope: !2921)
!2924 = !DILocation(line: 436, column: 26, scope: !2921)
!2925 = !DILocation(line: 436, column: 85, scope: !2921)
!2926 = !DILocation(line: 436, column: 99, scope: !2921)
!2927 = !DILocation(line: 436, column: 97, scope: !2921)
!2928 = !DILocation(line: 436, column: 17, scope: !2922)
!2929 = !DILocation(line: 433, column: 77, scope: !2915)
!2930 = !DILocation(line: 433, column: 46, scope: !2915)
!2931 = !DILocation(line: 433, column: 5, scope: !2916)
!2932 = distinct !{!2932, !2931, !2933}
!2933 = !DILocation(line: 440, column: 5, scope: !2916)
!2934 = !DILocation(line: 442, column: 1, scope: !2901)
!2935 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2491, file: !2491, line: 95, type: !2936, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !2940)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{!2938, !2939}
!2938 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !255, line: 393, baseType: !1909)
!2939 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !98, line: 854, baseType: !245)
!2940 = !{!2941}
!2941 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2935, file: !2491, line: 95, type: !2939)
!2942 = !DILocation(line: 0, scope: !2935)
!2943 = !DILocation(line: 98, column: 9, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2935, file: !2491, line: 98, column: 9)
!2945 = !DILocation(line: 98, column: 9, scope: !2935)
!2946 = !DILocation(line: 102, column: 10, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2935, file: !2491, line: 102, column: 9)
!2948 = !DILocation(line: 102, column: 34, scope: !2947)
!2949 = !DILocation(line: 102, column: 49, scope: !2947)
!2950 = !DILocation(line: 102, column: 69, scope: !2947)
!2951 = !DILocation(line: 103, column: 38, scope: !2947)
!2952 = !DILocation(line: 102, column: 9, scope: !2935)
!2953 = !DILocation(line: 109, column: 12, scope: !2935)
!2954 = !DILocation(line: 109, column: 5, scope: !2935)
!2955 = !DILocation(line: 112, column: 5, scope: !2935)
!2956 = !DILocation(line: 115, column: 44, scope: !2935)
!2957 = !DILocation(line: 118, column: 5, scope: !2935)
!2958 = !DILocation(line: 118, column: 23, scope: !2935)
!2959 = !DILocation(line: 118, column: 35, scope: !2935)
!2960 = !DILocation(line: 121, column: 42, scope: !2935)
!2961 = !DILocation(line: 121, column: 38, scope: !2935)
!2962 = !DILocation(line: 121, column: 5, scope: !2935)
!2963 = !DILocation(line: 121, column: 17, scope: !2935)
!2964 = !DILocation(line: 121, column: 35, scope: !2935)
!2965 = !DILocation(line: 129, column: 5, scope: !2935)
!2966 = !DILocation(line: 131, column: 1, scope: !2935)
!2967 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2491, file: !2491, line: 81, type: !2968, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !2970)
!2968 = !DISubroutineType(types: !2969)
!2969 = !{!91, !2939}
!2970 = !{!2971}
!2971 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2967, file: !2491, line: 81, type: !2939)
!2972 = !DILocation(line: 0, scope: !2967)
!2973 = !DILocation(line: 84, column: 25, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2967, file: !2491, line: 84, column: 9)
!2975 = !DILocation(line: 84, column: 35, scope: !2974)
!2976 = !DILocation(line: 84, column: 45, scope: !2974)
!2977 = !DILocation(line: 93, column: 1, scope: !2967)
!2978 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2491, file: !2491, line: 133, type: !2936, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !2979)
!2979 = !{!2980}
!2980 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2978, file: !2491, line: 133, type: !2939)
!2981 = !DILocation(line: 0, scope: !2978)
!2982 = !DILocation(line: 136, column: 9, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2978, file: !2491, line: 136, column: 9)
!2984 = !DILocation(line: 136, column: 9, scope: !2978)
!2985 = !DILocation(line: 140, column: 9, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2978, file: !2491, line: 140, column: 9)
!2987 = !DILocation(line: 140, column: 33, scope: !2986)
!2988 = !DILocation(line: 140, column: 48, scope: !2986)
!2989 = !DILocation(line: 140, column: 9, scope: !2978)
!2990 = !DILocation(line: 146, column: 12, scope: !2978)
!2991 = !DILocation(line: 146, column: 5, scope: !2978)
!2992 = !DILocation(line: 149, column: 29, scope: !2978)
!2993 = !DILocation(line: 149, column: 44, scope: !2978)
!2994 = !DILocation(line: 151, column: 29, scope: !2978)
!2995 = !DILocation(line: 151, column: 5, scope: !2978)
!2996 = !DILocation(line: 159, column: 5, scope: !2978)
!2997 = !DILocation(line: 160, column: 1, scope: !2978)
!2998 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2491, file: !2491, line: 163, type: !2999, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3002)
!2999 = !DISubroutineType(types: !3000)
!3000 = !{!2938, !3001, !1002}
!3001 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !98, line: 860, baseType: !2493)
!3002 = !{!3003, !3004}
!3003 = !DILocalVariable(name: "clock_source", arg: 1, scope: !2998, file: !2491, line: 163, type: !3001)
!3004 = !DILocalVariable(name: "count", arg: 2, scope: !2998, file: !2491, line: 163, type: !1002)
!3005 = !DILocation(line: 0, scope: !2998)
!3006 = !DILocation(line: 166, column: 9, scope: !2998)
!3007 = !DILocation(line: 167, column: 44, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3009, file: !2491, line: 167, column: 13)
!3009 = distinct !DILexicalBlock(scope: !3010, file: !2491, line: 166, column: 51)
!3010 = distinct !DILexicalBlock(scope: !2998, file: !2491, line: 166, column: 9)
!3011 = !DILocation(line: 167, column: 59, scope: !3008)
!3012 = !DILocation(line: 167, column: 13, scope: !3009)
!3013 = !DILocation(line: 170, column: 38, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !3008, file: !2491, line: 167, column: 79)
!3015 = !DILocation(line: 170, column: 13, scope: !3014)
!3016 = !DILocation(line: 172, column: 59, scope: !3014)
!3017 = !DILocation(line: 173, column: 9, scope: !3014)
!3018 = !DILocation(line: 175, column: 36, scope: !3009)
!3019 = !DILocation(line: 175, column: 18, scope: !3009)
!3020 = !DILocation(line: 177, column: 5, scope: !3009)
!3021 = !DILocation(line: 179, column: 44, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !2491, line: 179, column: 13)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !2491, line: 178, column: 55)
!3024 = distinct !DILexicalBlock(scope: !3010, file: !2491, line: 178, column: 14)
!3025 = !DILocation(line: 179, column: 59, scope: !3022)
!3026 = !DILocation(line: 179, column: 13, scope: !3023)
!3027 = !DILocation(line: 182, column: 38, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3022, file: !2491, line: 179, column: 79)
!3029 = !DILocation(line: 182, column: 13, scope: !3028)
!3030 = !DILocation(line: 184, column: 59, scope: !3028)
!3031 = !DILocation(line: 186, column: 9, scope: !3028)
!3032 = !DILocation(line: 188, column: 68, scope: !3023)
!3033 = !DILocation(line: 188, column: 50, scope: !3023)
!3034 = !DILocation(line: 188, column: 18, scope: !3023)
!3035 = !DILocation(line: 0, scope: !3010)
!3036 = !DILocation(line: 193, column: 5, scope: !2998)
!3037 = !DILocation(line: 194, column: 1, scope: !2998)
!3038 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2491, file: !2491, line: 196, type: !3039, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3041)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!2938, !61, !61, !1002}
!3041 = !{!3042, !3043, !3044}
!3042 = !DILocalVariable(name: "start_count", arg: 1, scope: !3038, file: !2491, line: 196, type: !61)
!3043 = !DILocalVariable(name: "end_count", arg: 2, scope: !3038, file: !2491, line: 196, type: !61)
!3044 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3038, file: !2491, line: 196, type: !1002)
!3045 = !DILocation(line: 0, scope: !3038)
!3046 = !DILocation(line: 198, column: 24, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3038, file: !2491, line: 198, column: 9)
!3048 = !DILocation(line: 198, column: 9, scope: !3038)
!3049 = !DILocation(line: 0, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3038, file: !2491, line: 202, column: 9)
!3051 = !DILocation(line: 208, column: 5, scope: !3038)
!3052 = !DILocation(line: 209, column: 1, scope: !3038)
!3053 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2491, file: !2491, line: 211, type: !3054, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3057)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!2938, !2939, !3056}
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!3057 = !{!3058, !3059}
!3058 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3053, file: !2491, line: 211, type: !2939)
!3059 = !DILocalVariable(name: "running_status", arg: 2, scope: !3053, file: !2491, line: 211, type: !3056)
!3060 = !DILocation(line: 0, scope: !3053)
!3061 = !DILocation(line: 213, column: 18, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3053, file: !2491, line: 213, column: 9)
!3063 = !DILocation(line: 213, column: 9, scope: !3053)
!3064 = !DILocation(line: 217, column: 47, scope: !3053)
!3065 = !DILocation(line: 217, column: 21, scope: !3053)
!3066 = !DILocation(line: 219, column: 5, scope: !3053)
!3067 = !DILocation(line: 220, column: 1, scope: !3053)
!3068 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2491, file: !2491, line: 222, type: !3069, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3071)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{!2938, !2939, !307, !88}
!3071 = !{!3072, !3073, !3074}
!3072 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3068, file: !2491, line: 222, type: !2939)
!3073 = !DILocalVariable(name: "callback", arg: 2, scope: !3068, file: !2491, line: 223, type: !307)
!3074 = !DILocalVariable(name: "user_data", arg: 3, scope: !3068, file: !2491, line: 224, type: !88)
!3075 = !DILocation(line: 0, scope: !3068)
!3076 = !DILocation(line: 227, column: 9, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3068, file: !2491, line: 227, column: 9)
!3078 = !DILocation(line: 227, column: 9, scope: !3068)
!3079 = !DILocation(line: 231, column: 34, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3068, file: !2491, line: 231, column: 9)
!3081 = !DILocation(line: 231, column: 49, scope: !3080)
!3082 = !DILocation(line: 231, column: 69, scope: !3080)
!3083 = !DILocation(line: 232, column: 38, scope: !3080)
!3084 = !DILocation(line: 232, column: 53, scope: !3080)
!3085 = !DILocation(line: 231, column: 9, scope: !3068)
!3086 = !DILocation(line: 237, column: 18, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3068, file: !2491, line: 237, column: 9)
!3088 = !DILocation(line: 237, column: 9, scope: !3068)
!3089 = !DILocation(line: 245, column: 46, scope: !3068)
!3090 = !DILocation(line: 245, column: 56, scope: !3068)
!3091 = !DILocation(line: 246, column: 46, scope: !3068)
!3092 = !DILocation(line: 246, column: 56, scope: !3068)
!3093 = !DILocation(line: 248, column: 5, scope: !3068)
!3094 = !DILocation(line: 250, column: 5, scope: !3068)
!3095 = !DILocation(line: 252, column: 1, scope: !3068)
!3096 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2491, file: !2491, line: 256, type: !3097, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3100)
!3097 = !DISubroutineType(types: !3098)
!3098 = !{!2938, !2939, !61, !3099}
!3099 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !255, line: 383, baseType: !254)
!3100 = !{!3101, !3102, !3103, !3104}
!3101 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3096, file: !2491, line: 256, type: !2939)
!3102 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3096, file: !2491, line: 256, type: !61)
!3103 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3096, file: !2491, line: 256, type: !3099)
!3104 = !DILocalVariable(name: "mask", scope: !3096, file: !2491, line: 259, type: !60)
!3105 = !DILocation(line: 0, scope: !3096)
!3106 = !DILocation(line: 259, column: 5, scope: !3096)
!3107 = !DILocation(line: 259, column: 23, scope: !3096)
!3108 = !DILocation(line: 261, column: 9, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3096, file: !2491, line: 261, column: 9)
!3110 = !DILocation(line: 261, column: 9, scope: !3096)
!3111 = !DILocation(line: 265, column: 34, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3096, file: !2491, line: 265, column: 9)
!3113 = !DILocation(line: 265, column: 49, scope: !3112)
!3114 = !DILocation(line: 266, column: 13, scope: !3112)
!3115 = !DILocation(line: 266, column: 41, scope: !3112)
!3116 = !DILocation(line: 266, column: 56, scope: !3112)
!3117 = !DILocation(line: 265, column: 9, scope: !3096)
!3118 = !DILocation(line: 271, column: 25, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3096, file: !2491, line: 271, column: 9)
!3120 = !DILocation(line: 271, column: 9, scope: !3096)
!3121 = !DILocation(line: 282, column: 12, scope: !3096)
!3122 = !DILocation(line: 282, column: 10, scope: !3096)
!3123 = !DILocation(line: 284, column: 5, scope: !3096)
!3124 = !DILocation(line: 286, column: 5, scope: !3096)
!3125 = !DILocation(line: 286, column: 23, scope: !3096)
!3126 = !DILocation(line: 286, column: 34, scope: !3096)
!3127 = !DILocation(line: 287, column: 5, scope: !3096)
!3128 = !DILocation(line: 287, column: 23, scope: !3096)
!3129 = !DILocation(line: 287, column: 34, scope: !3096)
!3130 = !DILocation(line: 290, column: 5, scope: !3096)
!3131 = !DILocation(line: 290, column: 23, scope: !3096)
!3132 = !DILocation(line: 290, column: 37, scope: !3096)
!3133 = !DILocation(line: 291, column: 39, scope: !3096)
!3134 = !DILocation(line: 291, column: 5, scope: !3096)
!3135 = !DILocation(line: 291, column: 23, scope: !3096)
!3136 = !DILocation(line: 291, column: 37, scope: !3096)
!3137 = !DILocation(line: 292, column: 5, scope: !3096)
!3138 = !DILocation(line: 292, column: 23, scope: !3096)
!3139 = !DILocation(line: 292, column: 37, scope: !3096)
!3140 = !DILocation(line: 297, column: 47, scope: !3096)
!3141 = !DILocation(line: 298, column: 33, scope: !3096)
!3142 = !DILocation(line: 296, column: 5, scope: !3096)
!3143 = !DILocation(line: 296, column: 23, scope: !3096)
!3144 = !DILocation(line: 296, column: 31, scope: !3096)
!3145 = !DILocation(line: 300, column: 5, scope: !3096)
!3146 = !DILocation(line: 300, column: 29, scope: !3096)
!3147 = distinct !{!3147, !3145, !3148}
!3148 = !DILocation(line: 300, column: 39, scope: !3096)
!3149 = !DILocation(line: 301, column: 23, scope: !3096)
!3150 = !DILocation(line: 301, column: 33, scope: !3096)
!3151 = !DILocation(line: 302, column: 5, scope: !3096)
!3152 = !DILocation(line: 302, column: 23, scope: !3096)
!3153 = !DILocation(line: 302, column: 34, scope: !3096)
!3154 = !DILocation(line: 303, column: 44, scope: !3096)
!3155 = !DILocation(line: 305, column: 28, scope: !3096)
!3156 = !DILocation(line: 305, column: 5, scope: !3096)
!3157 = !DILocation(line: 306, column: 5, scope: !3096)
!3158 = !DILocation(line: 307, column: 1, scope: !3096)
!3159 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2491, file: !2491, line: 310, type: !3160, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3162)
!3160 = !DISubroutineType(types: !3161)
!3161 = !{!2938, !61}
!3162 = !{!3163}
!3163 = !DILocalVariable(name: "ms", arg: 1, scope: !3159, file: !2491, line: 310, type: !61)
!3164 = !DILocation(line: 0, scope: !3159)
!3165 = !DILocation(line: 313, column: 40, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3159, file: !2491, line: 313, column: 9)
!3167 = !DILocation(line: 313, column: 55, scope: !3166)
!3168 = !DILocation(line: 313, column: 9, scope: !3159)
!3169 = !DILocation(line: 316, column: 34, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3166, file: !2491, line: 313, column: 75)
!3171 = !DILocation(line: 316, column: 9, scope: !3170)
!3172 = !DILocation(line: 317, column: 55, scope: !3170)
!3173 = !DILocation(line: 318, column: 5, scope: !3170)
!3174 = !DILocation(line: 320, column: 20, scope: !3159)
!3175 = !DILocation(line: 320, column: 45, scope: !3159)
!3176 = !DILocation(line: 320, column: 5, scope: !3159)
!3177 = !DILocation(line: 322, column: 5, scope: !3159)
!3178 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2491, file: !2491, line: 327, type: !3097, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3179)
!3179 = !{!3180, !3181, !3182, !3183}
!3180 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3178, file: !2491, line: 327, type: !2939)
!3181 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3178, file: !2491, line: 327, type: !61)
!3182 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3178, file: !2491, line: 327, type: !3099)
!3183 = !DILocalVariable(name: "mask", scope: !3178, file: !2491, line: 329, type: !60)
!3184 = !DILocation(line: 0, scope: !3178)
!3185 = !DILocation(line: 329, column: 5, scope: !3178)
!3186 = !DILocation(line: 329, column: 23, scope: !3178)
!3187 = !DILocation(line: 331, column: 9, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3178, file: !2491, line: 331, column: 9)
!3189 = !DILocation(line: 331, column: 9, scope: !3178)
!3190 = !DILocation(line: 336, column: 34, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3178, file: !2491, line: 336, column: 9)
!3192 = !DILocation(line: 336, column: 49, scope: !3191)
!3193 = !DILocation(line: 337, column: 13, scope: !3191)
!3194 = !DILocation(line: 337, column: 41, scope: !3191)
!3195 = !DILocation(line: 337, column: 56, scope: !3191)
!3196 = !DILocation(line: 336, column: 9, scope: !3178)
!3197 = !DILocation(line: 349, column: 29, scope: !3178)
!3198 = !DILocation(line: 349, column: 49, scope: !3178)
!3199 = !DILocation(line: 351, column: 12, scope: !3178)
!3200 = !DILocation(line: 351, column: 10, scope: !3178)
!3201 = !DILocation(line: 353, column: 5, scope: !3178)
!3202 = !DILocation(line: 355, column: 5, scope: !3178)
!3203 = !DILocation(line: 355, column: 23, scope: !3178)
!3204 = !DILocation(line: 355, column: 34, scope: !3178)
!3205 = !DILocation(line: 356, column: 5, scope: !3178)
!3206 = !DILocation(line: 356, column: 23, scope: !3178)
!3207 = !DILocation(line: 356, column: 34, scope: !3178)
!3208 = !DILocation(line: 359, column: 5, scope: !3178)
!3209 = !DILocation(line: 359, column: 23, scope: !3178)
!3210 = !DILocation(line: 359, column: 37, scope: !3178)
!3211 = !DILocation(line: 360, column: 39, scope: !3178)
!3212 = !DILocation(line: 360, column: 5, scope: !3178)
!3213 = !DILocation(line: 360, column: 23, scope: !3178)
!3214 = !DILocation(line: 360, column: 37, scope: !3178)
!3215 = !DILocation(line: 361, column: 5, scope: !3178)
!3216 = !DILocation(line: 361, column: 23, scope: !3178)
!3217 = !DILocation(line: 361, column: 37, scope: !3178)
!3218 = !DILocation(line: 366, column: 47, scope: !3178)
!3219 = !DILocation(line: 367, column: 33, scope: !3178)
!3220 = !DILocation(line: 365, column: 5, scope: !3178)
!3221 = !DILocation(line: 365, column: 23, scope: !3178)
!3222 = !DILocation(line: 365, column: 31, scope: !3178)
!3223 = !DILocation(line: 369, column: 5, scope: !3178)
!3224 = !DILocation(line: 369, column: 29, scope: !3178)
!3225 = distinct !{!3225, !3223, !3226}
!3226 = !DILocation(line: 369, column: 39, scope: !3178)
!3227 = !DILocation(line: 370, column: 23, scope: !3178)
!3228 = !DILocation(line: 370, column: 33, scope: !3178)
!3229 = !DILocation(line: 371, column: 5, scope: !3178)
!3230 = !DILocation(line: 371, column: 23, scope: !3178)
!3231 = !DILocation(line: 371, column: 34, scope: !3178)
!3232 = !DILocation(line: 373, column: 28, scope: !3178)
!3233 = !DILocation(line: 373, column: 5, scope: !3178)
!3234 = !DILocation(line: 375, column: 44, scope: !3178)
!3235 = !DILocation(line: 377, column: 5, scope: !3178)
!3236 = !DILocation(line: 378, column: 1, scope: !3178)
!3237 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2491, file: !2491, line: 382, type: !3160, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3238)
!3238 = !{!3239}
!3239 = !DILocalVariable(name: "us", arg: 1, scope: !3237, file: !2491, line: 382, type: !61)
!3240 = !DILocation(line: 0, scope: !3237)
!3241 = !DILocation(line: 385, column: 40, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3237, file: !2491, line: 385, column: 9)
!3243 = !DILocation(line: 385, column: 55, scope: !3242)
!3244 = !DILocation(line: 385, column: 9, scope: !3237)
!3245 = !DILocation(line: 388, column: 34, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3242, file: !2491, line: 385, column: 75)
!3247 = !DILocation(line: 388, column: 9, scope: !3246)
!3248 = !DILocation(line: 390, column: 55, scope: !3246)
!3249 = !DILocation(line: 391, column: 5, scope: !3246)
!3250 = !DILocation(line: 392, column: 20, scope: !3237)
!3251 = !DILocation(line: 392, column: 45, scope: !3237)
!3252 = !DILocation(line: 392, column: 5, scope: !3237)
!3253 = !DILocation(line: 394, column: 5, scope: !3237)
!3254 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2491, file: !2491, line: 398, type: !2936, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3255)
!3255 = !{!3256, !3257}
!3256 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3254, file: !2491, line: 398, type: !2939)
!3257 = !DILocalVariable(name: "mask", scope: !3254, file: !2491, line: 400, type: !60)
!3258 = !DILocation(line: 0, scope: !3254)
!3259 = !DILocation(line: 400, column: 5, scope: !3254)
!3260 = !DILocation(line: 400, column: 23, scope: !3254)
!3261 = !DILocation(line: 402, column: 9, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3254, file: !2491, line: 402, column: 9)
!3263 = !DILocation(line: 402, column: 9, scope: !3254)
!3264 = !DILocation(line: 413, column: 12, scope: !3254)
!3265 = !DILocation(line: 413, column: 10, scope: !3254)
!3266 = !DILocation(line: 415, column: 5, scope: !3254)
!3267 = !DILocation(line: 415, column: 23, scope: !3254)
!3268 = !DILocation(line: 415, column: 34, scope: !3254)
!3269 = !DILocation(line: 418, column: 5, scope: !3254)
!3270 = !DILocation(line: 418, column: 23, scope: !3254)
!3271 = !DILocation(line: 418, column: 34, scope: !3254)
!3272 = !DILocation(line: 420, column: 5, scope: !3254)
!3273 = !DILocation(line: 420, column: 23, scope: !3254)
!3274 = !DILocation(line: 420, column: 35, scope: !3254)
!3275 = !DILocation(line: 422, column: 29, scope: !3254)
!3276 = !DILocation(line: 422, column: 44, scope: !3254)
!3277 = !DILocation(line: 423, column: 28, scope: !3254)
!3278 = !DILocation(line: 423, column: 5, scope: !3254)
!3279 = !DILocation(line: 425, column: 33, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3254, file: !2491, line: 425, column: 9)
!3281 = !DILocation(line: 425, column: 9, scope: !3254)
!3282 = !DILocation(line: 427, column: 53, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3280, file: !2491, line: 425, column: 62)
!3284 = !DILocation(line: 428, column: 5, scope: !3283)
!3285 = !DILocation(line: 430, column: 1, scope: !3254)
!3286 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2491, file: !2491, line: 434, type: !3287, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3289)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!2938, !1002}
!3289 = !{!3290, !3291, !3292}
!3290 = !DILocalVariable(name: "handle", arg: 1, scope: !3286, file: !2491, line: 434, type: !1002)
!3291 = !DILocalVariable(name: "timer", scope: !3286, file: !2491, line: 436, type: !61)
!3292 = !DILocalVariable(name: "mask", scope: !3286, file: !2491, line: 437, type: !61)
!3293 = !DILocation(line: 0, scope: !3286)
!3294 = !DILocation(line: 439, column: 24, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3286, file: !2491, line: 439, column: 9)
!3296 = !DILocation(line: 439, column: 41, scope: !3295)
!3297 = !DILocation(line: 439, column: 9, scope: !3286)
!3298 = !DILocation(line: 443, column: 16, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3286, file: !2491, line: 443, column: 9)
!3300 = !DILocation(line: 443, column: 9, scope: !3286)
!3301 = !DILocation(line: 448, column: 12, scope: !3286)
!3302 = !DILocation(line: 450, column: 15, scope: !3286)
!3303 = !DILocation(line: 451, column: 21, scope: !3286)
!3304 = !DILocation(line: 451, column: 13, scope: !3286)
!3305 = !DILocation(line: 452, column: 33, scope: !3286)
!3306 = !DILocation(line: 452, column: 41, scope: !3286)
!3307 = !DILocation(line: 453, column: 36, scope: !3286)
!3308 = !DILocation(line: 455, column: 5, scope: !3286)
!3309 = !DILocation(line: 456, column: 5, scope: !3286)
!3310 = !DILocation(line: 457, column: 1, scope: !3286)
!3311 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2491, file: !2491, line: 459, type: !3160, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3312)
!3312 = !{!3313, !3314}
!3313 = !DILocalVariable(name: "handle", arg: 1, scope: !3311, file: !2491, line: 459, type: !61)
!3314 = !DILocalVariable(name: "timer", scope: !3311, file: !2491, line: 461, type: !60)
!3315 = !DILocation(line: 0, scope: !3311)
!3316 = !DILocation(line: 461, column: 5, scope: !3311)
!3317 = !DILocation(line: 461, column: 23, scope: !3311)
!3318 = !DILocation(line: 463, column: 17, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3311, file: !2491, line: 463, column: 9)
!3320 = !DILocation(line: 463, column: 37, scope: !3319)
!3321 = !DILocation(line: 463, column: 9, scope: !3311)
!3322 = !DILocation(line: 467, column: 20, scope: !3311)
!3323 = !DILocation(line: 467, column: 11, scope: !3311)
!3324 = !DILocation(line: 469, column: 24, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3311, file: !2491, line: 469, column: 9)
!3326 = !DILocation(line: 469, column: 41, scope: !3325)
!3327 = !DILocation(line: 469, column: 9, scope: !3311)
!3328 = !DILocation(line: 473, column: 30, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3311, file: !2491, line: 473, column: 9)
!3330 = !DILocation(line: 473, column: 37, scope: !3329)
!3331 = !DILocation(line: 473, column: 9, scope: !3311)
!3332 = !DILocation(line: 477, column: 30, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3311, file: !2491, line: 477, column: 9)
!3334 = !DILocation(line: 477, column: 37, scope: !3333)
!3335 = !DILocation(line: 477, column: 45, scope: !3333)
!3336 = !DILocation(line: 477, column: 9, scope: !3311)
!3337 = !DILocation(line: 481, column: 26, scope: !3311)
!3338 = !DILocation(line: 481, column: 33, scope: !3311)
!3339 = !DILocation(line: 481, column: 41, scope: !3311)
!3340 = !DILocation(line: 482, column: 36, scope: !3311)
!3341 = !DILocation(line: 484, column: 5, scope: !3311)
!3342 = !DILocation(line: 485, column: 1, scope: !3311)
!3343 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2491, file: !2491, line: 487, type: !3344, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3346)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{!2938, !61, !61, !307, !88}
!3346 = !{!3347, !3348, !3349, !3350, !3351, !3352, !3353}
!3347 = !DILocalVariable(name: "handle", arg: 1, scope: !3343, file: !2491, line: 487, type: !61)
!3348 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3343, file: !2491, line: 487, type: !61)
!3349 = !DILocalVariable(name: "callback", arg: 3, scope: !3343, file: !2491, line: 487, type: !307)
!3350 = !DILocalVariable(name: "user_data", arg: 4, scope: !3343, file: !2491, line: 487, type: !88)
!3351 = !DILocalVariable(name: "current_time", scope: !3343, file: !2491, line: 489, type: !61)
!3352 = !DILocalVariable(name: "mask", scope: !3343, file: !2491, line: 490, type: !61)
!3353 = !DILocalVariable(name: "timer", scope: !3343, file: !2491, line: 491, type: !61)
!3354 = !DILocation(line: 0, scope: !3343)
!3355 = !DILocation(line: 493, column: 17, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3343, file: !2491, line: 493, column: 9)
!3357 = !DILocation(line: 493, column: 37, scope: !3356)
!3358 = !DILocation(line: 493, column: 9, scope: !3343)
!3359 = !DILocation(line: 497, column: 20, scope: !3343)
!3360 = !DILocation(line: 503, column: 37, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3343, file: !2491, line: 503, column: 9)
!3362 = !DILocation(line: 503, column: 9, scope: !3343)
!3363 = !DILocation(line: 507, column: 37, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3343, file: !2491, line: 507, column: 9)
!3365 = !DILocation(line: 507, column: 45, scope: !3364)
!3366 = !DILocation(line: 507, column: 9, scope: !3343)
!3367 = !DILocation(line: 511, column: 25, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3343, file: !2491, line: 511, column: 9)
!3369 = !DILocation(line: 511, column: 9, scope: !3343)
!3370 = !DILocation(line: 516, column: 12, scope: !3343)
!3371 = !DILocation(line: 519, column: 30, scope: !3343)
!3372 = !DILocation(line: 521, column: 24, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3343, file: !2491, line: 521, column: 9)
!3374 = !DILocation(line: 521, column: 38, scope: !3373)
!3375 = !DILocation(line: 521, column: 9, scope: !3343)
!3376 = !DILocation(line: 522, column: 9, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3373, file: !2491, line: 521, column: 48)
!3378 = !DILocation(line: 523, column: 9, scope: !3377)
!3379 = !DILocation(line: 524, column: 38, scope: !3377)
!3380 = !DILocation(line: 525, column: 5, scope: !3377)
!3381 = !DILocation(line: 526, column: 5, scope: !3343)
!3382 = !DILocation(line: 528, column: 23, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3343, file: !2491, line: 528, column: 8)
!3384 = !DILocation(line: 528, column: 41, scope: !3383)
!3385 = !DILocation(line: 528, column: 8, scope: !3343)
!3386 = !DILocation(line: 529, column: 51, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3383, file: !2491, line: 528, column: 51)
!3388 = !DILocation(line: 529, column: 24, scope: !3387)
!3389 = !DILocation(line: 530, column: 5, scope: !3387)
!3390 = !DILocation(line: 0, scope: !3383)
!3391 = !DILocation(line: 534, column: 34, scope: !3343)
!3392 = !DILocation(line: 535, column: 39, scope: !3343)
!3393 = !DILocation(line: 537, column: 49, scope: !3343)
!3394 = !DILocation(line: 538, column: 80, scope: !3343)
!3395 = !DILocation(line: 538, column: 33, scope: !3343)
!3396 = !DILocation(line: 538, column: 49, scope: !3343)
!3397 = !DILocation(line: 539, column: 50, scope: !3343)
!3398 = !DILocation(line: 539, column: 61, scope: !3343)
!3399 = !DILocation(line: 540, column: 50, scope: !3343)
!3400 = !DILocation(line: 540, column: 61, scope: !3343)
!3401 = !DILocation(line: 542, column: 5, scope: !3343)
!3402 = !DILocation(line: 546, column: 30, scope: !3343)
!3403 = !DILocation(line: 548, column: 5, scope: !3343)
!3404 = !DILocation(line: 550, column: 5, scope: !3343)
!3405 = !DILocation(line: 551, column: 1, scope: !3343)
!3406 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2491, file: !2491, line: 553, type: !3160, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3407)
!3407 = !{!3408, !3409, !3410, !3411}
!3408 = !DILocalVariable(name: "handle", arg: 1, scope: !3406, file: !2491, line: 553, type: !61)
!3409 = !DILocalVariable(name: "current_time", scope: !3406, file: !2491, line: 555, type: !61)
!3410 = !DILocalVariable(name: "mask", scope: !3406, file: !2491, line: 556, type: !61)
!3411 = !DILocalVariable(name: "timer", scope: !3406, file: !2491, line: 557, type: !61)
!3412 = !DILocation(line: 0, scope: !3406)
!3413 = !DILocation(line: 559, column: 17, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3406, file: !2491, line: 559, column: 9)
!3415 = !DILocation(line: 559, column: 37, scope: !3414)
!3416 = !DILocation(line: 559, column: 9, scope: !3406)
!3417 = !DILocation(line: 563, column: 20, scope: !3406)
!3418 = !DILocation(line: 565, column: 37, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3406, file: !2491, line: 565, column: 9)
!3420 = !DILocation(line: 565, column: 48, scope: !3419)
!3421 = !DILocation(line: 565, column: 9, scope: !3406)
!3422 = !DILocation(line: 569, column: 37, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3406, file: !2491, line: 569, column: 9)
!3424 = !DILocation(line: 569, column: 45, scope: !3423)
!3425 = !DILocation(line: 569, column: 9, scope: !3406)
!3426 = !DILocation(line: 574, column: 12, scope: !3406)
!3427 = !DILocation(line: 577, column: 30, scope: !3406)
!3428 = !DILocation(line: 578, column: 5, scope: !3406)
!3429 = !DILocation(line: 579, column: 30, scope: !3406)
!3430 = !DILocation(line: 581, column: 23, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3406, file: !2491, line: 581, column: 8)
!3432 = !DILocation(line: 581, column: 41, scope: !3431)
!3433 = !DILocation(line: 581, column: 8, scope: !3406)
!3434 = !DILocation(line: 582, column: 51, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3431, file: !2491, line: 581, column: 51)
!3436 = !DILocation(line: 582, column: 24, scope: !3435)
!3437 = !DILocation(line: 583, column: 5, scope: !3435)
!3438 = !DILocation(line: 0, scope: !3431)
!3439 = !DILocation(line: 587, column: 34, scope: !3406)
!3440 = !DILocation(line: 588, column: 39, scope: !3406)
!3441 = !DILocation(line: 590, column: 44, scope: !3406)
!3442 = !DILocation(line: 592, column: 24, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3406, file: !2491, line: 592, column: 9)
!3444 = !DILocation(line: 592, column: 44, scope: !3443)
!3445 = !DILocation(line: 592, column: 9, scope: !3406)
!3446 = !DILocation(line: 593, column: 9, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3443, file: !2491, line: 592, column: 50)
!3448 = !DILocation(line: 594, column: 5, scope: !3447)
!3449 = !DILocation(line: 598, column: 30, scope: !3406)
!3450 = !DILocation(line: 599, column: 5, scope: !3406)
!3451 = !DILocation(line: 601, column: 5, scope: !3406)
!3452 = !DILocation(line: 603, column: 1, scope: !3406)
!3453 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2491, file: !2491, line: 605, type: !3454, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !3456)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{!2938, !61, !1002}
!3456 = !{!3457, !3458, !3459, !3460, !3461}
!3457 = !DILocalVariable(name: "handle", arg: 1, scope: !3453, file: !2491, line: 605, type: !61)
!3458 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3453, file: !2491, line: 605, type: !1002)
!3459 = !DILocalVariable(name: "current_time", scope: !3453, file: !2491, line: 607, type: !61)
!3460 = !DILocalVariable(name: "mask", scope: !3453, file: !2491, line: 608, type: !61)
!3461 = !DILocalVariable(name: "timer", scope: !3453, file: !2491, line: 609, type: !61)
!3462 = !DILocation(line: 0, scope: !3453)
!3463 = !DILocation(line: 611, column: 17, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3453, file: !2491, line: 611, column: 9)
!3465 = !DILocation(line: 611, column: 37, scope: !3464)
!3466 = !DILocation(line: 611, column: 9, scope: !3453)
!3467 = !DILocation(line: 615, column: 20, scope: !3453)
!3468 = !DILocation(line: 617, column: 37, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3453, file: !2491, line: 617, column: 9)
!3470 = !DILocation(line: 617, column: 45, scope: !3469)
!3471 = !DILocation(line: 617, column: 9, scope: !3453)
!3472 = !DILocation(line: 622, column: 12, scope: !3453)
!3473 = !DILocation(line: 624, column: 35, scope: !3453)
!3474 = !DILocation(line: 624, column: 51, scope: !3453)
!3475 = !DILocation(line: 624, column: 76, scope: !3453)
!3476 = !DILocation(line: 624, column: 49, scope: !3453)
!3477 = !DILocation(line: 626, column: 37, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3453, file: !2491, line: 626, column: 9)
!3479 = !DILocation(line: 626, column: 9, scope: !3453)
!3480 = !DILocation(line: 0, scope: !3478)
!3481 = !DILocation(line: 632, column: 5, scope: !3453)
!3482 = !DILocation(line: 634, column: 5, scope: !3453)
!3483 = !DILocation(line: 636, column: 1, scope: !3453)
!3484 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !95, file: !95, line: 56, type: !3485, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3487)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!61, !61, !61, !61}
!3487 = !{!3488, !3489, !3490, !3491, !3493, !3494}
!3488 = !DILocalVariable(name: "mul1", arg: 1, scope: !3484, file: !95, line: 56, type: !61)
!3489 = !DILocalVariable(name: "mul2", arg: 2, scope: !3484, file: !95, line: 56, type: !61)
!3490 = !DILocalVariable(name: "div", arg: 3, scope: !3484, file: !95, line: 56, type: !61)
!3491 = !DILocalVariable(name: "data1", scope: !3484, file: !95, line: 58, type: !3492)
!3492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !465)
!3493 = !DILocalVariable(name: "data2", scope: !3484, file: !95, line: 59, type: !3492)
!3494 = !DILocalVariable(name: "result", scope: !3484, file: !95, line: 60, type: !3492)
!3495 = !DILocation(line: 0, scope: !3484)
!3496 = !DILocation(line: 63, column: 22, scope: !3484)
!3497 = !DILocation(line: 63, column: 32, scope: !3484)
!3498 = !DILocation(line: 64, column: 23, scope: !3484)
!3499 = !DILocation(line: 64, column: 40, scope: !3484)
!3500 = !DILocation(line: 66, column: 27, scope: !3484)
!3501 = !DILocation(line: 67, column: 27, scope: !3484)
!3502 = !DILocation(line: 67, column: 44, scope: !3484)
!3503 = !DILocation(line: 69, column: 26, scope: !3484)
!3504 = !DILocation(line: 70, column: 36, scope: !3484)
!3505 = !DILocation(line: 70, column: 43, scope: !3484)
!3506 = !DILocation(line: 70, column: 55, scope: !3484)
!3507 = !DILocation(line: 72, column: 34, scope: !3484)
!3508 = !DILocation(line: 72, column: 41, scope: !3484)
!3509 = !DILocation(line: 72, column: 5, scope: !3484)
!3510 = distinct !DISubprogram(name: "gpt_current_count", scope: !95, file: !95, line: 75, type: !3511, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3513)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!61, !264}
!3513 = !{!3514}
!3514 = !DILocalVariable(name: "gpt", arg: 1, scope: !3510, file: !95, line: 75, type: !264)
!3515 = !DILocation(line: 0, scope: !3510)
!3516 = !DILocation(line: 77, column: 17, scope: !3510)
!3517 = !DILocation(line: 77, column: 5, scope: !3510)
!3518 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !95, file: !95, line: 81, type: !3519, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3521)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!61, !61}
!3521 = !{!3522}
!3522 = !DILocalVariable(name: "ms", arg: 1, scope: !3518, file: !95, line: 81, type: !61)
!3523 = !DILocation(line: 0, scope: !3518)
!3524 = !DILocation(line: 83, column: 27, scope: !3518)
!3525 = !DILocation(line: 83, column: 37, scope: !3518)
!3526 = !DILocation(line: 83, column: 43, scope: !3518)
!3527 = !DILocation(line: 83, column: 32, scope: !3518)
!3528 = !DILocation(line: 83, column: 53, scope: !3518)
!3529 = !DILocation(line: 83, column: 59, scope: !3518)
!3530 = !DILocation(line: 83, column: 48, scope: !3518)
!3531 = !DILocation(line: 83, column: 70, scope: !3518)
!3532 = !DILocation(line: 83, column: 76, scope: !3518)
!3533 = !DILocation(line: 83, column: 65, scope: !3518)
!3534 = !DILocation(line: 83, column: 5, scope: !3518)
!3535 = !DILocation(line: 90, column: 9, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !290, file: !95, line: 90, column: 9)
!3537 = !DILocation(line: 90, column: 9, scope: !290)
!3538 = !DILocation(line: 91, column: 13, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !95, line: 91, column: 13)
!3540 = distinct !DILexicalBlock(scope: !3536, file: !95, line: 90, column: 24)
!3541 = !DILocation(line: 91, column: 13, scope: !3540)
!3542 = !DILocation(line: 92, column: 32, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3539, file: !95, line: 91, column: 41)
!3544 = !DILocation(line: 92, column: 30, scope: !3543)
!3545 = !DILocation(line: 93, column: 41, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3543, file: !95, line: 93, column: 17)
!3547 = !DILocation(line: 0, scope: !3539)
!3548 = !DILocation(line: 105, column: 1, scope: !290)
!3549 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !95, file: !95, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3550 = !DILocation(line: 109, column: 9, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3549, file: !95, line: 109, column: 9)
!3552 = !DILocation(line: 109, column: 9, scope: !3549)
!3553 = !DILocation(line: 110, column: 9, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3551, file: !95, line: 109, column: 61)
!3555 = !DILocation(line: 111, column: 5, scope: !3554)
!3556 = !DILocation(line: 112, column: 1, scope: !3549)
!3557 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !95, file: !95, line: 114, type: !3519, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3558)
!3558 = !{!3559}
!3559 = !DILocalVariable(name: "time_us", arg: 1, scope: !3557, file: !95, line: 114, type: !61)
!3560 = !DILocation(line: 0, scope: !3557)
!3561 = !DILocation(line: 116, column: 5, scope: !3557)
!3562 = !DILocation(line: 118, column: 9, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3557, file: !95, line: 118, column: 9)
!3564 = !DILocation(line: 118, column: 9, scope: !3557)
!3565 = !DILocation(line: 120, column: 49, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3563, file: !95, line: 118, column: 37)
!3567 = !DILocation(line: 120, column: 16, scope: !3566)
!3568 = !DILocation(line: 120, column: 9, scope: !3566)
!3569 = !DILocation(line: 0, scope: !3563)
!3570 = !DILocation(line: 125, column: 1, scope: !3557)
!3571 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !95, file: !95, line: 127, type: !3519, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3572)
!3572 = !{!3573}
!3573 = !DILocalVariable(name: "count", arg: 1, scope: !3571, file: !95, line: 127, type: !61)
!3574 = !DILocation(line: 0, scope: !3571)
!3575 = !DILocation(line: 129, column: 5, scope: !3571)
!3576 = !DILocation(line: 131, column: 9, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3571, file: !95, line: 131, column: 9)
!3578 = !DILocation(line: 131, column: 9, scope: !3571)
!3579 = !DILocation(line: 133, column: 69, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3577, file: !95, line: 131, column: 37)
!3581 = !DILocation(line: 133, column: 16, scope: !3580)
!3582 = !DILocation(line: 133, column: 9, scope: !3580)
!3583 = !DILocation(line: 0, scope: !3577)
!3584 = !DILocation(line: 138, column: 1, scope: !3571)
!3585 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !95, file: !95, line: 141, type: !3586, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3588)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{null, !264, !61, !61}
!3588 = !{!3589, !3590, !3591}
!3589 = !DILocalVariable(name: "gpt", arg: 1, scope: !3585, file: !95, line: 141, type: !264)
!3590 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3585, file: !95, line: 141, type: !61)
!3591 = !DILocalVariable(name: "divide", arg: 3, scope: !3585, file: !95, line: 141, type: !61)
!3592 = !DILocation(line: 0, scope: !3585)
!3593 = !DILocation(line: 143, column: 5, scope: !3585)
!3594 = !DILocation(line: 145, column: 33, scope: !3585)
!3595 = !DILocation(line: 145, column: 10, scope: !3585)
!3596 = !DILocation(line: 145, column: 18, scope: !3585)
!3597 = !DILocation(line: 148, column: 10, scope: !3585)
!3598 = !DILocation(line: 148, column: 18, scope: !3585)
!3599 = !DILocation(line: 149, column: 1, scope: !3585)
!3600 = distinct !DISubprogram(name: "gpt_delay_time", scope: !95, file: !95, line: 151, type: !3601, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3603)
!3601 = !DISubroutineType(types: !3602)
!3602 = !{null, !264, !772}
!3603 = !{!3604, !3605, !3606, !3607}
!3604 = !DILocalVariable(name: "gpt", arg: 1, scope: !3600, file: !95, line: 151, type: !264)
!3605 = !DILocalVariable(name: "count", arg: 2, scope: !3600, file: !95, line: 151, type: !772)
!3606 = !DILocalVariable(name: "end_count", scope: !3600, file: !95, line: 153, type: !61)
!3607 = !DILocalVariable(name: "current", scope: !3600, file: !95, line: 153, type: !61)
!3608 = !DILocation(line: 0, scope: !3600)
!3609 = !DILocation(line: 155, column: 17, scope: !3600)
!3610 = !DILocation(line: 156, column: 25, scope: !3600)
!3611 = !DILocation(line: 156, column: 33, scope: !3600)
!3612 = !DILocation(line: 159, column: 19, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3600, file: !95, line: 159, column: 9)
!3614 = !DILocation(line: 159, column: 9, scope: !3600)
!3615 = !DILocation(line: 160, column: 16, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3613, file: !95, line: 159, column: 30)
!3617 = !DILocation(line: 160, column: 39, scope: !3616)
!3618 = !DILocation(line: 160, column: 9, scope: !3616)
!3619 = distinct !{!3619, !3618, !3620}
!3620 = !DILocation(line: 160, column: 51, scope: !3616)
!3621 = !DILocation(line: 162, column: 16, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3613, file: !95, line: 161, column: 12)
!3623 = !DILocation(line: 162, column: 39, scope: !3622)
!3624 = !DILocation(line: 162, column: 9, scope: !3622)
!3625 = distinct !{!3625, !3624, !3626}
!3626 = !DILocation(line: 162, column: 50, scope: !3622)
!3627 = !DILocation(line: 163, column: 16, scope: !3622)
!3628 = !DILocation(line: 163, column: 39, scope: !3622)
!3629 = !DILocation(line: 163, column: 9, scope: !3622)
!3630 = distinct !{!3630, !3629, !3631}
!3631 = !DILocation(line: 163, column: 51, scope: !3622)
!3632 = !DILocation(line: 165, column: 1, scope: !3600)
!3633 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !95, file: !95, line: 166, type: !3634, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3636)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{null, !264}
!3636 = !{!3637}
!3637 = !DILocalVariable(name: "gpt", arg: 1, scope: !3633, file: !95, line: 166, type: !264)
!3638 = !DILocation(line: 0, scope: !3633)
!3639 = !DILocation(line: 168, column: 10, scope: !3633)
!3640 = !DILocation(line: 168, column: 22, scope: !3633)
!3641 = !DILocation(line: 169, column: 10, scope: !3633)
!3642 = !DILocation(line: 169, column: 22, scope: !3633)
!3643 = !DILocation(line: 170, column: 21, scope: !3633)
!3644 = !DILocation(line: 171, column: 5, scope: !3633)
!3645 = !DILocation(line: 171, column: 16, scope: !3633)
!3646 = distinct !{!3646, !3644, !3647}
!3647 = !DILocation(line: 171, column: 26, scope: !3633)
!3648 = !DILocation(line: 172, column: 10, scope: !3633)
!3649 = !DILocation(line: 172, column: 22, scope: !3633)
!3650 = !DILocation(line: 173, column: 10, scope: !3633)
!3651 = !DILocation(line: 173, column: 22, scope: !3633)
!3652 = !DILocation(line: 174, column: 10, scope: !3633)
!3653 = !DILocation(line: 174, column: 22, scope: !3633)
!3654 = !DILocation(line: 176, column: 13, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3633, file: !95, line: 176, column: 9)
!3656 = !DILocation(line: 176, column: 9, scope: !3633)
!3657 = !DILocation(line: 177, column: 27, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3655, file: !95, line: 176, column: 22)
!3659 = !DILocation(line: 178, column: 5, scope: !3658)
!3660 = !DILocation(line: 179, column: 1, scope: !3633)
!3661 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !95, file: !95, line: 181, type: !3511, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3662)
!3662 = !{!3663, !3664}
!3663 = !DILocalVariable(name: "gpt", arg: 1, scope: !3661, file: !95, line: 181, type: !264)
!3664 = !DILocalVariable(name: "mask", scope: !3661, file: !95, line: 183, type: !60)
!3665 = !DILocation(line: 0, scope: !3661)
!3666 = !DILocation(line: 183, column: 5, scope: !3661)
!3667 = !DILocation(line: 183, column: 23, scope: !3661)
!3668 = !DILocation(line: 185, column: 17, scope: !3661)
!3669 = !DILocation(line: 185, column: 10, scope: !3661)
!3670 = !DILocation(line: 187, column: 22, scope: !3661)
!3671 = !DILocation(line: 189, column: 12, scope: !3661)
!3672 = !DILocation(line: 190, column: 1, scope: !3661)
!3673 = !DILocation(line: 189, column: 5, scope: !3661)
!3674 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !95, file: !95, line: 192, type: !3675, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3677)
!3675 = !DISubroutineType(types: !3676)
!3676 = !{null, !264, !61}
!3677 = !{!3678, !3679}
!3678 = !DILocalVariable(name: "gpt", arg: 1, scope: !3674, file: !95, line: 192, type: !264)
!3679 = !DILocalVariable(name: "mask", arg: 2, scope: !3674, file: !95, line: 192, type: !61)
!3680 = !DILocation(line: 0, scope: !3674)
!3681 = !DILocation(line: 194, column: 10, scope: !3674)
!3682 = !DILocation(line: 194, column: 21, scope: !3674)
!3683 = !DILocation(line: 195, column: 1, scope: !3674)
!3684 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !95, file: !95, line: 197, type: !952, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3685)
!3685 = !{!3686, !3687, !3688, !3689, !3690}
!3686 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3684, file: !95, line: 197, type: !862)
!3687 = !DILocalVariable(name: "i", scope: !3684, file: !95, line: 199, type: !61)
!3688 = !DILocalVariable(name: "mask", scope: !3684, file: !95, line: 200, type: !60)
!3689 = !DILocalVariable(name: "state", scope: !3684, file: !95, line: 201, type: !60)
!3690 = !DILocalVariable(name: "enable", scope: !3684, file: !95, line: 202, type: !60)
!3691 = !DILocation(line: 0, scope: !3684)
!3692 = !DILocation(line: 200, column: 5, scope: !3684)
!3693 = !DILocation(line: 200, column: 23, scope: !3684)
!3694 = !DILocation(line: 201, column: 5, scope: !3684)
!3695 = !DILocation(line: 201, column: 23, scope: !3684)
!3696 = !DILocation(line: 202, column: 5, scope: !3684)
!3697 = !DILocation(line: 202, column: 23, scope: !3684)
!3698 = !DILocation(line: 207, column: 5, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3684, file: !95, line: 207, column: 5)
!3700 = !DILocation(line: 209, column: 18, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !95, line: 207, column: 44)
!3702 = distinct !DILexicalBlock(scope: !3699, file: !95, line: 207, column: 5)
!3703 = !DILocation(line: 209, column: 29, scope: !3701)
!3704 = !DILocation(line: 209, column: 16, scope: !3701)
!3705 = !DILocation(line: 210, column: 29, scope: !3701)
!3706 = !DILocation(line: 210, column: 16, scope: !3701)
!3707 = !DILocation(line: 212, column: 16, scope: !3701)
!3708 = !DILocation(line: 212, column: 14, scope: !3701)
!3709 = !DILocation(line: 214, column: 9, scope: !3701)
!3710 = !DILocation(line: 214, column: 20, scope: !3701)
!3711 = !DILocation(line: 214, column: 32, scope: !3701)
!3712 = !DILocation(line: 216, column: 14, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3701, file: !95, line: 216, column: 13)
!3714 = !DILocation(line: 216, column: 20, scope: !3713)
!3715 = !DILocation(line: 216, column: 40, scope: !3713)
!3716 = !DILocation(line: 216, column: 44, scope: !3713)
!3717 = !DILocation(line: 216, column: 51, scope: !3713)
!3718 = !DILocation(line: 216, column: 13, scope: !3701)
!3719 = !DILocation(line: 224, column: 51, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !95, line: 224, column: 17)
!3721 = distinct !DILexicalBlock(scope: !3713, file: !95, line: 216, column: 70)
!3722 = !DILocation(line: 224, column: 60, scope: !3720)
!3723 = !DILocation(line: 224, column: 17, scope: !3721)
!3724 = !DILocation(line: 225, column: 94, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3720, file: !95, line: 224, column: 69)
!3726 = !DILocation(line: 225, column: 17, scope: !3725)
!3727 = !DILocation(line: 226, column: 13, scope: !3725)
!3728 = !DILocation(line: 229, column: 31, scope: !3701)
!3729 = !DILocation(line: 229, column: 42, scope: !3701)
!3730 = !DILocation(line: 229, column: 9, scope: !3701)
!3731 = !DILocation(line: 207, column: 40, scope: !3702)
!3732 = !DILocation(line: 207, column: 19, scope: !3702)
!3733 = distinct !{!3733, !3698, !3734}
!3734 = !DILocation(line: 231, column: 5, scope: !3699)
!3735 = !DILocation(line: 233, column: 1, scope: !3684)
!3736 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !95, file: !95, line: 236, type: !291, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3737 = !DILocation(line: 238, column: 5, scope: !3736)
!3738 = !DILocation(line: 239, column: 5, scope: !3736)
!3739 = !DILocation(line: 240, column: 5, scope: !3736)
!3740 = !DILocation(line: 241, column: 1, scope: !3736)
!3741 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !95, file: !95, line: 242, type: !3511, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3742)
!3742 = !{!3743, !3744, !3745, !3746, !3747}
!3743 = !DILocalVariable(name: "gpt", arg: 1, scope: !3741, file: !95, line: 242, type: !264)
!3744 = !DILocalVariable(name: "time", scope: !3741, file: !95, line: 244, type: !60)
!3745 = !DILocalVariable(name: "count", scope: !3741, file: !95, line: 245, type: !61)
!3746 = !DILocalVariable(name: "time_s", scope: !3741, file: !95, line: 245, type: !61)
!3747 = !DILocalVariable(name: "time_ms", scope: !3741, file: !95, line: 245, type: !61)
!3748 = !DILocation(line: 0, scope: !3741)
!3749 = !DILocation(line: 244, column: 5, scope: !3741)
!3750 = !DILocation(line: 244, column: 23, scope: !3741)
!3751 = !DILocation(line: 247, column: 13, scope: !3741)
!3752 = !DILocation(line: 248, column: 20, scope: !3741)
!3753 = !DILocation(line: 249, column: 23, scope: !3741)
!3754 = !DILocation(line: 249, column: 32, scope: !3741)
!3755 = !DILocation(line: 249, column: 39, scope: !3741)
!3756 = !DILocation(line: 249, column: 48, scope: !3741)
!3757 = !DILocation(line: 250, column: 19, scope: !3741)
!3758 = !DILocation(line: 250, column: 26, scope: !3741)
!3759 = !DILocation(line: 250, column: 10, scope: !3741)
!3760 = !DILocation(line: 253, column: 5, scope: !3741)
!3761 = !DILocation(line: 253, column: 30, scope: !3741)
!3762 = !DILocation(line: 253, column: 38, scope: !3741)
!3763 = !DILocation(line: 254, column: 5, scope: !3741)
!3764 = !DILocation(line: 254, column: 36, scope: !3741)
!3765 = distinct !{!3765, !3763, !3766}
!3766 = !DILocation(line: 254, column: 46, scope: !3741)
!3767 = !DILocation(line: 255, column: 12, scope: !3741)
!3768 = !DILocation(line: 256, column: 1, scope: !3741)
!3769 = !DILocation(line: 255, column: 5, scope: !3741)
!3770 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !95, file: !95, line: 258, type: !3771, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3773)
!3771 = !DISubroutineType(types: !3772)
!3772 = !{!61}
!3773 = !{!3774}
!3774 = !DILocalVariable(name: "i", scope: !3770, file: !95, line: 260, type: !61)
!3775 = !DILocation(line: 0, scope: !3770)
!3776 = !DILocation(line: 262, column: 5, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3770, file: !95, line: 262, column: 5)
!3778 = !DILocation(line: 263, column: 37, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !95, line: 263, column: 13)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !95, line: 262, column: 45)
!3781 = distinct !DILexicalBlock(scope: !3777, file: !95, line: 262, column: 5)
!3782 = !DILocation(line: 263, column: 45, scope: !3779)
!3783 = !DILocation(line: 263, column: 13, scope: !3780)
!3784 = !DILocation(line: 262, column: 41, scope: !3781)
!3785 = !DILocation(line: 262, column: 19, scope: !3781)
!3786 = distinct !{!3786, !3776, !3787}
!3787 = !DILocation(line: 266, column: 5, scope: !3777)
!3788 = !DILocation(line: 269, column: 1, scope: !3770)
!3789 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !95, file: !95, line: 271, type: !291, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3790)
!3790 = !{!3791, !3792}
!3791 = !DILocalVariable(name: "minimum_time", scope: !3789, file: !95, line: 273, type: !61)
!3792 = !DILocalVariable(name: "current_timer", scope: !3789, file: !95, line: 273, type: !61)
!3793 = !DILocation(line: 273, column: 5, scope: !3789)
!3794 = !DILocation(line: 275, column: 24, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3789, file: !95, line: 275, column: 9)
!3796 = !DILocation(line: 275, column: 9, scope: !3789)
!3797 = !DILocation(line: 0, scope: !3789)
!3798 = !DILocation(line: 279, column: 5, scope: !3789)
!3799 = !DILocation(line: 282, column: 56, scope: !3789)
!3800 = !DILocation(line: 282, column: 39, scope: !3789)
!3801 = !DILocation(line: 284, column: 30, scope: !3789)
!3802 = !DILocation(line: 285, column: 45, scope: !3789)
!3803 = !DILocation(line: 285, column: 5, scope: !3789)
!3804 = !DILocation(line: 286, column: 30, scope: !3789)
!3805 = !DILocation(line: 287, column: 1, scope: !3789)
!3806 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !95, file: !95, line: 308, type: !3807, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3809)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{null, !1002, !1002}
!3809 = !{!3810, !3811, !3812, !3813, !3814}
!3810 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !3806, file: !95, line: 308, type: !1002)
!3811 = !DILocalVariable(name: "number", arg: 2, scope: !3806, file: !95, line: 308, type: !1002)
!3812 = !DILocalVariable(name: "i", scope: !3806, file: !95, line: 310, type: !61)
!3813 = !DILocalVariable(name: "minimum", scope: !3806, file: !95, line: 311, type: !61)
!3814 = !DILocalVariable(name: "data", scope: !3806, file: !95, line: 312, type: !61)
!3815 = !DILocation(line: 0, scope: !3806)
!3816 = !DILocation(line: 314, column: 5, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3806, file: !95, line: 314, column: 5)
!3818 = !DILocation(line: 315, column: 37, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !95, line: 315, column: 13)
!3820 = distinct !DILexicalBlock(scope: !3821, file: !95, line: 314, column: 45)
!3821 = distinct !DILexicalBlock(scope: !3817, file: !95, line: 314, column: 5)
!3822 = !DILocation(line: 315, column: 13, scope: !3820)
!3823 = !DILocation(line: 316, column: 20, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3819, file: !95, line: 315, column: 57)
!3825 = !DILocation(line: 318, column: 22, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3824, file: !95, line: 318, column: 17)
!3827 = !DILocation(line: 318, column: 17, scope: !3824)
!3828 = !DILocation(line: 320, column: 25, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3826, file: !95, line: 318, column: 33)
!3830 = !DILocation(line: 321, column: 13, scope: !3829)
!3831 = !DILocation(line: 314, column: 41, scope: !3821)
!3832 = !DILocation(line: 314, column: 19, scope: !3821)
!3833 = distinct !{!3833, !3816, !3834}
!3834 = !DILocation(line: 323, column: 5, scope: !3817)
!3835 = !DILocation(line: 325, column: 19, scope: !3806)
!3836 = !DILocation(line: 326, column: 1, scope: !3806)
!3837 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !95, file: !95, line: 289, type: !3519, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3838)
!3838 = !{!3839, !3840, !3841, !3842}
!3839 = !DILocalVariable(name: "timer_number", arg: 1, scope: !3837, file: !95, line: 289, type: !61)
!3840 = !DILocalVariable(name: "time_out_delta", scope: !3837, file: !95, line: 291, type: !61)
!3841 = !DILocalVariable(name: "current_delta", scope: !3837, file: !95, line: 292, type: !61)
!3842 = !DILocalVariable(name: "ret_value", scope: !3837, file: !95, line: 293, type: !61)
!3843 = !DILocation(line: 0, scope: !3837)
!3844 = !DILocation(line: 295, column: 22, scope: !3837)
!3845 = !DILocation(line: 296, column: 22, scope: !3837)
!3846 = !DILocation(line: 298, column: 24, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3837, file: !95, line: 298, column: 9)
!3848 = !DILocation(line: 298, column: 9, scope: !3837)
!3849 = !DILocation(line: 306, column: 5, scope: !3837)
!3850 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !95, file: !95, line: 329, type: !309, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3851)
!3851 = !{!3852, !3853, !3854, !3855}
!3852 = !DILocalVariable(name: "parameter", arg: 1, scope: !3850, file: !95, line: 329, type: !88)
!3853 = !DILocalVariable(name: "i", scope: !3850, file: !95, line: 331, type: !61)
!3854 = !DILocalVariable(name: "time_ms", scope: !3850, file: !95, line: 332, type: !60)
!3855 = !DILocalVariable(name: "data", scope: !3850, file: !95, line: 333, type: !60)
!3856 = !DILocation(line: 0, scope: !3850)
!3857 = !DILocation(line: 332, column: 5, scope: !3850)
!3858 = !DILocation(line: 332, column: 23, scope: !3850)
!3859 = !DILocation(line: 333, column: 5, scope: !3850)
!3860 = !DILocation(line: 333, column: 23, scope: !3850)
!3861 = !DILocation(line: 336, column: 24, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3850, file: !95, line: 336, column: 9)
!3863 = !DILocation(line: 336, column: 41, scope: !3862)
!3864 = !DILocation(line: 336, column: 9, scope: !3850)
!3865 = !DILocation(line: 338, column: 34, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3862, file: !95, line: 336, column: 47)
!3867 = !DILocation(line: 339, column: 9, scope: !3866)
!3868 = !DILocation(line: 340, column: 34, scope: !3866)
!3869 = !DILocation(line: 342, column: 46, scope: !3866)
!3870 = !DILocation(line: 342, column: 19, scope: !3866)
!3871 = !DILocation(line: 342, column: 17, scope: !3866)
!3872 = !DILocation(line: 344, column: 41, scope: !3866)
!3873 = !DILocation(line: 344, column: 38, scope: !3866)
!3874 = !DILocation(line: 345, column: 42, scope: !3866)
!3875 = !DILocation(line: 347, column: 9, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3866, file: !95, line: 347, column: 9)
!3877 = !DILocation(line: 348, column: 41, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !95, line: 348, column: 17)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !95, line: 347, column: 49)
!3880 = distinct !DILexicalBlock(scope: !3876, file: !95, line: 347, column: 9)
!3881 = !DILocation(line: 348, column: 17, scope: !3879)
!3882 = !DILocation(line: 350, column: 24, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3878, file: !95, line: 348, column: 61)
!3884 = !DILocation(line: 350, column: 22, scope: !3883)
!3885 = !DILocation(line: 352, column: 21, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3883, file: !95, line: 352, column: 21)
!3887 = !DILocation(line: 352, column: 26, scope: !3886)
!3888 = !DILocation(line: 352, column: 21, scope: !3883)
!3889 = !DILocation(line: 353, column: 56, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3886, file: !95, line: 352, column: 32)
!3891 = !DILocation(line: 354, column: 55, scope: !3890)
!3892 = !DILocation(line: 356, column: 62, scope: !3890)
!3893 = !DILocation(line: 356, column: 112, scope: !3890)
!3894 = !DILocation(line: 356, column: 21, scope: !3890)
!3895 = !DILocation(line: 357, column: 17, scope: !3890)
!3896 = !DILocation(line: 347, column: 45, scope: !3880)
!3897 = !DILocation(line: 347, column: 23, scope: !3880)
!3898 = distinct !{!3898, !3875, !3899}
!3899 = !DILocation(line: 360, column: 9, scope: !3876)
!3900 = !DILocation(line: 362, column: 42, scope: !3866)
!3901 = !DILocation(line: 364, column: 28, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3866, file: !95, line: 364, column: 13)
!3903 = !DILocation(line: 364, column: 48, scope: !3902)
!3904 = !DILocation(line: 364, column: 13, scope: !3866)
!3905 = !DILocation(line: 365, column: 13, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3902, file: !95, line: 364, column: 54)
!3907 = !DILocation(line: 366, column: 9, scope: !3906)
!3908 = !DILocation(line: 369, column: 1, scope: !3850)
!3909 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !346, file: !346, line: 50, type: !3910, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3913)
!3910 = !DISubroutineType(types: !3911)
!3911 = !{!61, !3912}
!3912 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !98, line: 390, baseType: !348)
!3913 = !{!3914, !3915, !3916}
!3914 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3909, file: !346, line: 50, type: !3912)
!3915 = !DILocalVariable(name: "i", scope: !3909, file: !346, line: 52, type: !61)
!3916 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !3909, file: !346, line: 53, type: !908)
!3917 = !DILocation(line: 0, scope: !3909)
!3918 = !DILocation(line: 53, column: 14, scope: !3909)
!3919 = !DILocation(line: 55, column: 5, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3909, file: !346, line: 55, column: 5)
!3921 = !DILocation(line: 55, column: 25, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3920, file: !346, line: 55, column: 5)
!3923 = !DILocation(line: 55, column: 19, scope: !3922)
!3924 = distinct !{!3924, !3919, !3925}
!3925 = !DILocation(line: 59, column: 5, scope: !3920)
!3926 = !DILocation(line: 56, column: 13, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !346, line: 56, column: 13)
!3928 = distinct !DILexicalBlock(scope: !3922, file: !346, line: 55, column: 29)
!3929 = !DILocation(line: 56, column: 40, scope: !3927)
!3930 = !DILocation(line: 56, column: 13, scope: !3928)
!3931 = !DILocation(line: 61, column: 1, scope: !3909)
!3932 = distinct !DISubprogram(name: "hal_gpio_init", scope: !346, file: !346, line: 66, type: !3933, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3936)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{!3935, !3912}
!3935 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !401, line: 229, baseType: !400)
!3936 = !{!3937}
!3937 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3932, file: !346, line: 66, type: !3912)
!3938 = !DILocation(line: 0, scope: !3932)
!3939 = !DILocation(line: 68, column: 5, scope: !3932)
!3940 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !346, file: !346, line: 72, type: !3933, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3941)
!3941 = !{!3942}
!3942 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3940, file: !346, line: 72, type: !3912)
!3943 = !DILocation(line: 0, scope: !3940)
!3944 = !DILocation(line: 74, column: 5, scope: !3940)
!3945 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !346, file: !346, line: 79, type: !3946, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3948)
!3946 = !DISubroutineType(types: !3947)
!3947 = !{!3935, !3912, !442}
!3948 = !{!3949, !3950, !3951, !3952}
!3949 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3945, file: !346, line: 79, type: !3912)
!3950 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !3945, file: !346, line: 79, type: !442)
!3951 = !DILocalVariable(name: "no", scope: !3945, file: !346, line: 81, type: !61)
!3952 = !DILocalVariable(name: "remainder", scope: !3945, file: !346, line: 82, type: !61)
!3953 = !DILocation(line: 0, scope: !3945)
!3954 = !DILocation(line: 84, column: 18, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3945, file: !346, line: 84, column: 9)
!3956 = !DILocation(line: 84, column: 9, scope: !3945)
!3957 = !DILocation(line: 89, column: 19, scope: !3945)
!3958 = !DILocation(line: 92, column: 26, scope: !3945)
!3959 = !DILocation(line: 94, column: 24, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3945, file: !346, line: 94, column: 9)
!3961 = !DILocation(line: 0, scope: !3960)
!3962 = !DILocation(line: 94, column: 9, scope: !3945)
!3963 = !DILocation(line: 101, column: 1, scope: !3945)
!3964 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !346, file: !346, line: 105, type: !3965, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3968)
!3965 = !DISubroutineType(types: !3966)
!3966 = !{!3935, !3912, !3967}
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!3968 = !{!3969, !3970, !3971, !3972, !3973}
!3969 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3964, file: !346, line: 105, type: !3912)
!3970 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !3964, file: !346, line: 105, type: !3967)
!3971 = !DILocalVariable(name: "no", scope: !3964, file: !346, line: 107, type: !61)
!3972 = !DILocalVariable(name: "remainder", scope: !3964, file: !346, line: 108, type: !61)
!3973 = !DILocalVariable(name: "temp", scope: !3964, file: !346, line: 109, type: !61)
!3974 = !DILocation(line: 0, scope: !3964)
!3975 = !DILocation(line: 111, column: 18, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3964, file: !346, line: 111, column: 9)
!3977 = !DILocation(line: 111, column: 9, scope: !3964)
!3978 = !DILocation(line: 115, column: 14, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3964, file: !346, line: 115, column: 9)
!3980 = !DILocation(line: 115, column: 9, scope: !3964)
!3981 = !DILocation(line: 120, column: 19, scope: !3964)
!3982 = !DILocation(line: 123, column: 26, scope: !3964)
!3983 = !DILocation(line: 125, column: 12, scope: !3964)
!3984 = !DILocation(line: 125, column: 54, scope: !3964)
!3985 = !DILocation(line: 126, column: 45, scope: !3964)
!3986 = !DILocation(line: 126, column: 17, scope: !3964)
!3987 = !DILocation(line: 127, column: 51, scope: !3964)
!3988 = !DILocation(line: 127, column: 21, scope: !3964)
!3989 = !DILocation(line: 128, column: 5, scope: !3964)
!3990 = !DILocation(line: 130, column: 1, scope: !3964)
!3991 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !346, file: !346, line: 134, type: !3992, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3995)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{!3994, !3912, !460}
!3994 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !401, line: 238, baseType: !411)
!3995 = !{!3996, !3997, !3998, !3999, !4000}
!3996 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3991, file: !346, line: 134, type: !3912)
!3997 = !DILocalVariable(name: "function_index", arg: 2, scope: !3991, file: !346, line: 134, type: !460)
!3998 = !DILocalVariable(name: "no", scope: !3991, file: !346, line: 136, type: !61)
!3999 = !DILocalVariable(name: "remainder", scope: !3991, file: !346, line: 137, type: !61)
!4000 = !DILocalVariable(name: "irq_status", scope: !3991, file: !346, line: 138, type: !61)
!4001 = !DILocation(line: 0, scope: !3991)
!4002 = !DILocation(line: 140, column: 18, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3991, file: !346, line: 140, column: 9)
!4004 = !DILocation(line: 140, column: 9, scope: !3991)
!4005 = !DILocation(line: 145, column: 24, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3991, file: !346, line: 145, column: 9)
!4007 = !DILocation(line: 145, column: 9, scope: !3991)
!4008 = !DILocation(line: 145, column: 9, scope: !4006)
!4009 = !DILocation(line: 150, column: 19, scope: !3991)
!4010 = !DILocation(line: 156, column: 18, scope: !3991)
!4011 = !DILocation(line: 157, column: 105, scope: !3991)
!4012 = !DILocation(line: 157, column: 91, scope: !3991)
!4013 = !DILocation(line: 157, column: 5, scope: !3991)
!4014 = !DILocation(line: 157, column: 48, scope: !3991)
!4015 = !DILocation(line: 157, column: 62, scope: !3991)
!4016 = !DILocation(line: 158, column: 80, scope: !3991)
!4017 = !DILocation(line: 158, column: 5, scope: !3991)
!4018 = !DILocation(line: 158, column: 48, scope: !3991)
!4019 = !DILocation(line: 158, column: 62, scope: !3991)
!4020 = !DILocation(line: 159, column: 5, scope: !3991)
!4021 = !DILocation(line: 160, column: 5, scope: !3991)
!4022 = !DILocation(line: 162, column: 1, scope: !3991)
!4023 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !346, file: !346, line: 166, type: !4024, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4027)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!3935, !3912, !4026}
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!4027 = !{!4028, !4029, !4030, !4031, !4032}
!4028 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4023, file: !346, line: 166, type: !3912)
!4029 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4023, file: !346, line: 166, type: !4026)
!4030 = !DILocalVariable(name: "no", scope: !4023, file: !346, line: 168, type: !61)
!4031 = !DILocalVariable(name: "remainder", scope: !4023, file: !346, line: 169, type: !61)
!4032 = !DILocalVariable(name: "temp", scope: !4023, file: !346, line: 170, type: !61)
!4033 = !DILocation(line: 0, scope: !4023)
!4034 = !DILocation(line: 172, column: 18, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4023, file: !346, line: 172, column: 9)
!4036 = !DILocation(line: 172, column: 9, scope: !4023)
!4037 = !DILocation(line: 176, column: 14, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4023, file: !346, line: 176, column: 9)
!4039 = !DILocation(line: 176, column: 9, scope: !4023)
!4040 = !DILocation(line: 181, column: 19, scope: !4023)
!4041 = !DILocation(line: 184, column: 26, scope: !4023)
!4042 = !DILocation(line: 186, column: 12, scope: !4023)
!4043 = !DILocation(line: 186, column: 54, scope: !4023)
!4044 = !DILocation(line: 187, column: 45, scope: !4023)
!4045 = !DILocation(line: 187, column: 17, scope: !4023)
!4046 = !DILocation(line: 188, column: 41, scope: !4023)
!4047 = !DILocation(line: 188, column: 16, scope: !4023)
!4048 = !DILocation(line: 189, column: 5, scope: !4023)
!4049 = !DILocation(line: 191, column: 1, scope: !4023)
!4050 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !346, file: !346, line: 195, type: !4051, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4053)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{!3935, !3912, !443}
!4053 = !{!4054, !4055, !4056, !4057}
!4054 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4050, file: !346, line: 195, type: !3912)
!4055 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4050, file: !346, line: 195, type: !443)
!4056 = !DILocalVariable(name: "no", scope: !4050, file: !346, line: 197, type: !61)
!4057 = !DILocalVariable(name: "remainder", scope: !4050, file: !346, line: 198, type: !61)
!4058 = !DILocation(line: 0, scope: !4050)
!4059 = !DILocation(line: 200, column: 18, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4050, file: !346, line: 200, column: 9)
!4061 = !DILocation(line: 200, column: 9, scope: !4050)
!4062 = !DILocation(line: 205, column: 19, scope: !4050)
!4063 = !DILocation(line: 208, column: 26, scope: !4050)
!4064 = !DILocation(line: 210, column: 9, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4050, file: !346, line: 210, column: 9)
!4066 = !DILocation(line: 0, scope: !4065)
!4067 = !DILocation(line: 210, column: 9, scope: !4050)
!4068 = !DILocation(line: 216, column: 1, scope: !4050)
!4069 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !346, file: !346, line: 220, type: !4024, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4070)
!4070 = !{!4071, !4072, !4073, !4074, !4075}
!4071 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4069, file: !346, line: 220, type: !3912)
!4072 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4069, file: !346, line: 220, type: !4026)
!4073 = !DILocalVariable(name: "no", scope: !4069, file: !346, line: 222, type: !61)
!4074 = !DILocalVariable(name: "remainder", scope: !4069, file: !346, line: 223, type: !61)
!4075 = !DILocalVariable(name: "temp", scope: !4069, file: !346, line: 224, type: !61)
!4076 = !DILocation(line: 0, scope: !4069)
!4077 = !DILocation(line: 226, column: 18, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4069, file: !346, line: 226, column: 9)
!4079 = !DILocation(line: 226, column: 9, scope: !4069)
!4080 = !DILocation(line: 230, column: 14, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4069, file: !346, line: 230, column: 9)
!4082 = !DILocation(line: 230, column: 9, scope: !4069)
!4083 = !DILocation(line: 235, column: 19, scope: !4069)
!4084 = !DILocation(line: 238, column: 26, scope: !4069)
!4085 = !DILocation(line: 240, column: 12, scope: !4069)
!4086 = !DILocation(line: 240, column: 55, scope: !4069)
!4087 = !DILocation(line: 241, column: 45, scope: !4069)
!4088 = !DILocation(line: 241, column: 17, scope: !4069)
!4089 = !DILocation(line: 242, column: 41, scope: !4069)
!4090 = !DILocation(line: 242, column: 16, scope: !4069)
!4091 = !DILocation(line: 243, column: 5, scope: !4069)
!4092 = !DILocation(line: 245, column: 1, scope: !4069)
!4093 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !346, file: !346, line: 249, type: !3933, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4094)
!4094 = !{!4095, !4096, !4097, !4098}
!4095 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4093, file: !346, line: 249, type: !3912)
!4096 = !DILocalVariable(name: "no", scope: !4093, file: !346, line: 251, type: !61)
!4097 = !DILocalVariable(name: "remainder", scope: !4093, file: !346, line: 252, type: !61)
!4098 = !DILocalVariable(name: "temp", scope: !4093, file: !346, line: 253, type: !61)
!4099 = !DILocation(line: 0, scope: !4093)
!4100 = !DILocation(line: 255, column: 18, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4093, file: !346, line: 255, column: 9)
!4102 = !DILocation(line: 255, column: 9, scope: !4093)
!4103 = !DILocation(line: 260, column: 19, scope: !4093)
!4104 = !DILocation(line: 263, column: 26, scope: !4093)
!4105 = !DILocation(line: 265, column: 12, scope: !4093)
!4106 = !DILocation(line: 265, column: 55, scope: !4093)
!4107 = !DILocation(line: 266, column: 45, scope: !4093)
!4108 = !DILocation(line: 266, column: 17, scope: !4093)
!4109 = !DILocation(line: 267, column: 15, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4093, file: !346, line: 267, column: 9)
!4111 = !DILocation(line: 267, column: 9, scope: !4093)
!4112 = !DILocation(line: 0, scope: !4110)
!4113 = !DILocation(line: 273, column: 1, scope: !4093)
!4114 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !346, file: !346, line: 278, type: !3933, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4115)
!4115 = !{!4116, !4117, !4118}
!4116 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4114, file: !346, line: 278, type: !3912)
!4117 = !DILocalVariable(name: "no", scope: !4114, file: !346, line: 280, type: !61)
!4118 = !DILocalVariable(name: "remainder", scope: !4114, file: !346, line: 281, type: !61)
!4119 = !DILocation(line: 0, scope: !4114)
!4120 = !DILocation(line: 283, column: 18, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4114, file: !346, line: 283, column: 9)
!4122 = !DILocation(line: 283, column: 9, scope: !4114)
!4123 = !DILocation(line: 288, column: 19, scope: !4114)
!4124 = !DILocation(line: 291, column: 26, scope: !4114)
!4125 = !DILocation(line: 293, column: 90, scope: !4114)
!4126 = !DILocation(line: 293, column: 5, scope: !4114)
!4127 = !DILocation(line: 293, column: 48, scope: !4114)
!4128 = !DILocation(line: 293, column: 62, scope: !4114)
!4129 = !DILocation(line: 294, column: 5, scope: !4114)
!4130 = !DILocation(line: 295, column: 1, scope: !4114)
!4131 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !346, file: !346, line: 299, type: !3933, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4132)
!4132 = !{!4133, !4134, !4135}
!4133 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4131, file: !346, line: 299, type: !3912)
!4134 = !DILocalVariable(name: "no", scope: !4131, file: !346, line: 301, type: !61)
!4135 = !DILocalVariable(name: "remainder", scope: !4131, file: !346, line: 302, type: !61)
!4136 = !DILocation(line: 0, scope: !4131)
!4137 = !DILocation(line: 304, column: 18, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4131, file: !346, line: 304, column: 9)
!4139 = !DILocation(line: 304, column: 9, scope: !4131)
!4140 = !DILocation(line: 309, column: 19, scope: !4131)
!4141 = !DILocation(line: 312, column: 26, scope: !4131)
!4142 = !DILocation(line: 314, column: 90, scope: !4131)
!4143 = !DILocation(line: 314, column: 5, scope: !4131)
!4144 = !DILocation(line: 314, column: 48, scope: !4131)
!4145 = !DILocation(line: 314, column: 62, scope: !4131)
!4146 = !DILocation(line: 315, column: 5, scope: !4131)
!4147 = !DILocation(line: 316, column: 1, scope: !4131)
!4148 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !346, file: !346, line: 321, type: !3933, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4149)
!4149 = !{!4150, !4151, !4152}
!4150 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4148, file: !346, line: 321, type: !3912)
!4151 = !DILocalVariable(name: "no", scope: !4148, file: !346, line: 323, type: !61)
!4152 = !DILocalVariable(name: "remainder", scope: !4148, file: !346, line: 324, type: !61)
!4153 = !DILocation(line: 0, scope: !4148)
!4154 = !DILocation(line: 326, column: 19, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4148, file: !346, line: 326, column: 9)
!4156 = !DILocation(line: 326, column: 36, scope: !4155)
!4157 = !DILocation(line: 326, column: 41, scope: !4155)
!4158 = !DILocation(line: 326, column: 9, scope: !4148)
!4159 = !DILocation(line: 331, column: 19, scope: !4148)
!4160 = !DILocation(line: 334, column: 26, scope: !4148)
!4161 = !DILocation(line: 336, column: 94, scope: !4148)
!4162 = !DILocation(line: 336, column: 5, scope: !4148)
!4163 = !DILocation(line: 336, column: 50, scope: !4148)
!4164 = !DILocation(line: 336, column: 66, scope: !4148)
!4165 = !DILocation(line: 337, column: 5, scope: !4148)
!4166 = !DILocation(line: 337, column: 51, scope: !4148)
!4167 = !DILocation(line: 337, column: 68, scope: !4148)
!4168 = !DILocation(line: 338, column: 5, scope: !4148)
!4169 = !DILocation(line: 339, column: 1, scope: !4148)
!4170 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !346, file: !346, line: 343, type: !3933, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4171)
!4171 = !{!4172, !4173, !4174}
!4172 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4170, file: !346, line: 343, type: !3912)
!4173 = !DILocalVariable(name: "no", scope: !4170, file: !346, line: 345, type: !61)
!4174 = !DILocalVariable(name: "remainder", scope: !4170, file: !346, line: 346, type: !61)
!4175 = !DILocation(line: 0, scope: !4170)
!4176 = !DILocation(line: 348, column: 19, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4170, file: !346, line: 348, column: 9)
!4178 = !DILocation(line: 348, column: 36, scope: !4177)
!4179 = !DILocation(line: 348, column: 41, scope: !4177)
!4180 = !DILocation(line: 348, column: 9, scope: !4170)
!4181 = !DILocation(line: 353, column: 19, scope: !4170)
!4182 = !DILocation(line: 356, column: 26, scope: !4170)
!4183 = !DILocation(line: 358, column: 94, scope: !4170)
!4184 = !DILocation(line: 358, column: 5, scope: !4170)
!4185 = !DILocation(line: 358, column: 50, scope: !4170)
!4186 = !DILocation(line: 358, column: 66, scope: !4170)
!4187 = !DILocation(line: 359, column: 5, scope: !4170)
!4188 = !DILocation(line: 359, column: 51, scope: !4170)
!4189 = !DILocation(line: 359, column: 68, scope: !4170)
!4190 = !DILocation(line: 360, column: 5, scope: !4170)
!4191 = !DILocation(line: 361, column: 1, scope: !4170)
!4192 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !346, file: !346, line: 365, type: !3933, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4193)
!4193 = !{!4194, !4195, !4196}
!4194 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4192, file: !346, line: 365, type: !3912)
!4195 = !DILocalVariable(name: "no", scope: !4192, file: !346, line: 367, type: !61)
!4196 = !DILocalVariable(name: "remainder", scope: !4192, file: !346, line: 368, type: !61)
!4197 = !DILocation(line: 0, scope: !4192)
!4198 = !DILocation(line: 370, column: 19, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4192, file: !346, line: 370, column: 9)
!4200 = !DILocation(line: 370, column: 36, scope: !4199)
!4201 = !DILocation(line: 370, column: 41, scope: !4199)
!4202 = !DILocation(line: 370, column: 9, scope: !4192)
!4203 = !DILocation(line: 375, column: 19, scope: !4192)
!4204 = !DILocation(line: 378, column: 26, scope: !4192)
!4205 = !DILocation(line: 380, column: 94, scope: !4192)
!4206 = !DILocation(line: 380, column: 5, scope: !4192)
!4207 = !DILocation(line: 380, column: 50, scope: !4192)
!4208 = !DILocation(line: 380, column: 66, scope: !4192)
!4209 = !DILocation(line: 381, column: 5, scope: !4192)
!4210 = !DILocation(line: 382, column: 1, scope: !4192)
!4211 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !346, file: !346, line: 387, type: !4212, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4216)
!4212 = !DISubroutineType(types: !4213)
!4213 = !{!3935, !4214, !4215}
!4214 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !98, line: 423, baseType: !421)
!4215 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !98, line: 431, baseType: !430)
!4216 = !{!4217, !4218}
!4217 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !4211, file: !346, line: 387, type: !4214)
!4218 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !4211, file: !346, line: 387, type: !4215)
!4219 = !DILocation(line: 0, scope: !4211)
!4220 = !DILocation(line: 390, column: 24, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4211, file: !346, line: 390, column: 9)
!4222 = !DILocation(line: 390, column: 9, scope: !4211)
!4223 = !DILocation(line: 394, column: 5, scope: !4211)
!4224 = !DILocation(line: 394, column: 62, scope: !4211)
!4225 = !DILocation(line: 394, column: 74, scope: !4211)
!4226 = !DILocation(line: 395, column: 5, scope: !4211)
!4227 = !DILocation(line: 396, column: 1, scope: !4211)
!4228 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !346, file: !346, line: 403, type: !4229, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4231)
!4229 = !DISubroutineType(types: !4230)
!4230 = !{!3935, !3912, !460, !460, !460}
!4231 = !{!4232, !4233, !4234, !4235, !4236, !4237}
!4232 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4228, file: !346, line: 403, type: !3912)
!4233 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !4228, file: !346, line: 403, type: !460)
!4234 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !4228, file: !346, line: 403, type: !460)
!4235 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !4228, file: !346, line: 403, type: !460)
!4236 = !DILocalVariable(name: "no", scope: !4228, file: !346, line: 405, type: !61)
!4237 = !DILocalVariable(name: "remainder", scope: !4228, file: !346, line: 406, type: !61)
!4238 = !DILocation(line: 0, scope: !4228)
!4239 = !DILocation(line: 408, column: 19, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4228, file: !346, line: 408, column: 9)
!4241 = !DILocation(line: 408, column: 36, scope: !4240)
!4242 = !DILocation(line: 408, column: 40, scope: !4240)
!4243 = !DILocation(line: 408, column: 9, scope: !4228)
!4244 = !DILocation(line: 413, column: 19, scope: !4228)
!4245 = !DILocation(line: 416, column: 26, scope: !4228)
!4246 = !DILocation(line: 418, column: 9, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4228, file: !346, line: 418, column: 9)
!4248 = !DILocation(line: 0, scope: !4247)
!4249 = !DILocation(line: 418, column: 9, scope: !4228)
!4250 = !DILocation(line: 424, column: 9, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4228, file: !346, line: 424, column: 9)
!4252 = !DILocation(line: 0, scope: !4251)
!4253 = !DILocation(line: 424, column: 9, scope: !4228)
!4254 = !DILocation(line: 430, column: 9, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4228, file: !346, line: 430, column: 9)
!4256 = !DILocation(line: 0, scope: !4255)
!4257 = !DILocation(line: 430, column: 9, scope: !4228)
!4258 = !DILocation(line: 436, column: 1, scope: !4228)
!4259 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !346, file: !346, line: 441, type: !3933, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4260)
!4260 = !{!4261, !4262, !4263, !4264, !4265, !4266, !4267}
!4261 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4259, file: !346, line: 441, type: !3912)
!4262 = !DILocalVariable(name: "no1", scope: !4259, file: !346, line: 443, type: !61)
!4263 = !DILocalVariable(name: "no2", scope: !4259, file: !346, line: 443, type: !61)
!4264 = !DILocalVariable(name: "no3", scope: !4259, file: !346, line: 443, type: !61)
!4265 = !DILocalVariable(name: "remainder1", scope: !4259, file: !346, line: 444, type: !61)
!4266 = !DILocalVariable(name: "remainder2", scope: !4259, file: !346, line: 444, type: !61)
!4267 = !DILocalVariable(name: "remainder3", scope: !4259, file: !346, line: 444, type: !61)
!4268 = !DILocation(line: 0, scope: !4259)
!4269 = !DILocation(line: 446, column: 18, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4259, file: !346, line: 446, column: 9)
!4271 = !DILocation(line: 446, column: 9, scope: !4259)
!4272 = !DILocation(line: 451, column: 20, scope: !4259)
!4273 = !DILocation(line: 454, column: 27, scope: !4259)
!4274 = !DILocation(line: 457, column: 20, scope: !4259)
!4275 = !DILocation(line: 463, column: 20, scope: !4259)
!4276 = !DILocation(line: 469, column: 107, scope: !4259)
!4277 = !DILocation(line: 469, column: 92, scope: !4259)
!4278 = !DILocation(line: 469, column: 5, scope: !4259)
!4279 = !DILocation(line: 469, column: 49, scope: !4259)
!4280 = !DILocation(line: 469, column: 63, scope: !4259)
!4281 = !DILocation(line: 472, column: 89, scope: !4259)
!4282 = !DILocation(line: 472, column: 5, scope: !4259)
!4283 = !DILocation(line: 472, column: 48, scope: !4259)
!4284 = !DILocation(line: 472, column: 61, scope: !4259)
!4285 = !DILocation(line: 475, column: 5, scope: !4259)
!4286 = !DILocation(line: 475, column: 48, scope: !4259)
!4287 = !DILocation(line: 475, column: 61, scope: !4259)
!4288 = !DILocation(line: 478, column: 9, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4259, file: !346, line: 478, column: 9)
!4290 = !DILocation(line: 0, scope: !4289)
!4291 = !DILocation(line: 478, column: 9, scope: !4259)
!4292 = !DILocation(line: 479, column: 55, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4289, file: !346, line: 478, column: 40)
!4294 = !DILocation(line: 480, column: 5, scope: !4293)
!4295 = !DILocation(line: 483, column: 53, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4289, file: !346, line: 482, column: 10)
!4297 = !DILocation(line: 483, column: 67, scope: !4296)
!4298 = !DILocation(line: 484, column: 9, scope: !4296)
!4299 = !DILocation(line: 484, column: 55, scope: !4296)
!4300 = !DILocation(line: 484, column: 71, scope: !4296)
!4301 = !DILocation(line: 485, column: 9, scope: !4296)
!4302 = !DILocation(line: 485, column: 55, scope: !4296)
!4303 = !DILocation(line: 490, column: 5, scope: !4259)
!4304 = !DILocation(line: 490, column: 48, scope: !4259)
!4305 = !DILocation(line: 490, column: 61, scope: !4259)
!4306 = !DILocation(line: 493, column: 5, scope: !4259)
!4307 = !DILocation(line: 493, column: 47, scope: !4259)
!4308 = !DILocation(line: 493, column: 59, scope: !4259)
!4309 = !DILocation(line: 496, column: 108, scope: !4259)
!4310 = !DILocation(line: 496, column: 93, scope: !4259)
!4311 = !DILocation(line: 496, column: 5, scope: !4259)
!4312 = !DILocation(line: 496, column: 50, scope: !4259)
!4313 = !DILocation(line: 496, column: 65, scope: !4259)
!4314 = !DILocation(line: 498, column: 5, scope: !4259)
!4315 = !DILocation(line: 499, column: 1, scope: !4259)
!4316 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !346, file: !346, line: 502, type: !3933, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4317)
!4317 = !{!4318, !4319, !4320, !4321, !4322}
!4318 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4316, file: !346, line: 502, type: !3912)
!4319 = !DILocalVariable(name: "no1", scope: !4316, file: !346, line: 504, type: !61)
!4320 = !DILocalVariable(name: "no2", scope: !4316, file: !346, line: 504, type: !61)
!4321 = !DILocalVariable(name: "remainder1", scope: !4316, file: !346, line: 505, type: !61)
!4322 = !DILocalVariable(name: "remainder2", scope: !4316, file: !346, line: 505, type: !61)
!4323 = !DILocation(line: 0, scope: !4316)
!4324 = !DILocation(line: 507, column: 18, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4316, file: !346, line: 507, column: 9)
!4326 = !DILocation(line: 507, column: 9, scope: !4316)
!4327 = !DILocation(line: 512, column: 20, scope: !4316)
!4328 = !DILocation(line: 515, column: 27, scope: !4316)
!4329 = !DILocation(line: 518, column: 20, scope: !4316)
!4330 = !DILocation(line: 524, column: 107, scope: !4316)
!4331 = !DILocation(line: 524, column: 92, scope: !4316)
!4332 = !DILocation(line: 524, column: 5, scope: !4316)
!4333 = !DILocation(line: 524, column: 49, scope: !4316)
!4334 = !DILocation(line: 524, column: 63, scope: !4316)
!4335 = !DILocation(line: 527, column: 89, scope: !4316)
!4336 = !DILocation(line: 527, column: 5, scope: !4316)
!4337 = !DILocation(line: 527, column: 48, scope: !4316)
!4338 = !DILocation(line: 527, column: 61, scope: !4316)
!4339 = !DILocation(line: 530, column: 9, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4316, file: !346, line: 530, column: 9)
!4341 = !DILocation(line: 0, scope: !4340)
!4342 = !DILocation(line: 530, column: 9, scope: !4316)
!4343 = !DILocation(line: 531, column: 55, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4340, file: !346, line: 530, column: 40)
!4345 = !DILocation(line: 531, column: 71, scope: !4344)
!4346 = !DILocation(line: 532, column: 9, scope: !4344)
!4347 = !DILocation(line: 532, column: 56, scope: !4344)
!4348 = !DILocation(line: 533, column: 5, scope: !4344)
!4349 = !DILocation(line: 536, column: 53, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4340, file: !346, line: 535, column: 10)
!4351 = !DILocation(line: 536, column: 67, scope: !4350)
!4352 = !DILocation(line: 537, column: 9, scope: !4350)
!4353 = !DILocation(line: 537, column: 55, scope: !4350)
!4354 = !DILocation(line: 537, column: 71, scope: !4350)
!4355 = !DILocation(line: 538, column: 9, scope: !4350)
!4356 = !DILocation(line: 538, column: 55, scope: !4350)
!4357 = !DILocation(line: 543, column: 5, scope: !4316)
!4358 = !DILocation(line: 543, column: 48, scope: !4316)
!4359 = !DILocation(line: 543, column: 61, scope: !4316)
!4360 = !DILocation(line: 546, column: 5, scope: !4316)
!4361 = !DILocation(line: 546, column: 47, scope: !4316)
!4362 = !DILocation(line: 546, column: 59, scope: !4316)
!4363 = !DILocation(line: 549, column: 5, scope: !4316)
!4364 = !DILocation(line: 550, column: 1, scope: !4316)
!4365 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !346, file: !346, line: 554, type: !4366, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4368)
!4366 = !DISubroutineType(types: !4367)
!4367 = !{!3935, !3912, !444}
!4368 = !{!4369, !4370, !4371, !4372}
!4369 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4365, file: !346, line: 554, type: !3912)
!4370 = !DILocalVariable(name: "driving", arg: 2, scope: !4365, file: !346, line: 554, type: !444)
!4371 = !DILocalVariable(name: "no", scope: !4365, file: !346, line: 556, type: !61)
!4372 = !DILocalVariable(name: "remainder", scope: !4365, file: !346, line: 557, type: !61)
!4373 = !DILocation(line: 0, scope: !4365)
!4374 = !DILocation(line: 559, column: 19, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4365, file: !346, line: 559, column: 9)
!4376 = !DILocation(line: 559, column: 9, scope: !4365)
!4377 = !DILocation(line: 564, column: 19, scope: !4365)
!4378 = !DILocation(line: 569, column: 102, scope: !4365)
!4379 = !DILocation(line: 569, column: 88, scope: !4365)
!4380 = !DILocation(line: 569, column: 5, scope: !4365)
!4381 = !DILocation(line: 569, column: 47, scope: !4365)
!4382 = !DILocation(line: 569, column: 60, scope: !4365)
!4383 = !DILocation(line: 570, column: 71, scope: !4365)
!4384 = !DILocation(line: 570, column: 5, scope: !4365)
!4385 = !DILocation(line: 570, column: 47, scope: !4365)
!4386 = !DILocation(line: 570, column: 60, scope: !4365)
!4387 = !DILocation(line: 571, column: 5, scope: !4365)
!4388 = !DILocation(line: 572, column: 1, scope: !4365)
!4389 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !346, file: !346, line: 575, type: !4390, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4393)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!3935, !3912, !4392}
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 32)
!4393 = !{!4394, !4395, !4396, !4397, !4398}
!4394 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4389, file: !346, line: 575, type: !3912)
!4395 = !DILocalVariable(name: "driving", arg: 2, scope: !4389, file: !346, line: 575, type: !4392)
!4396 = !DILocalVariable(name: "no", scope: !4389, file: !346, line: 577, type: !61)
!4397 = !DILocalVariable(name: "remainder", scope: !4389, file: !346, line: 578, type: !61)
!4398 = !DILocalVariable(name: "temp", scope: !4389, file: !346, line: 579, type: !61)
!4399 = !DILocation(line: 0, scope: !4389)
!4400 = !DILocation(line: 581, column: 19, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4389, file: !346, line: 581, column: 9)
!4402 = !DILocation(line: 581, column: 9, scope: !4389)
!4403 = !DILocation(line: 585, column: 14, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4389, file: !346, line: 585, column: 9)
!4405 = !DILocation(line: 585, column: 9, scope: !4389)
!4406 = !DILocation(line: 590, column: 19, scope: !4389)
!4407 = !DILocation(line: 595, column: 12, scope: !4389)
!4408 = !DILocation(line: 595, column: 54, scope: !4389)
!4409 = !DILocation(line: 596, column: 59, scope: !4389)
!4410 = !DILocation(line: 596, column: 45, scope: !4389)
!4411 = !DILocation(line: 596, column: 17, scope: !4389)
!4412 = !DILocation(line: 597, column: 18, scope: !4389)
!4413 = !DILocation(line: 600, column: 56, scope: !4389)
!4414 = !DILocation(line: 600, column: 14, scope: !4389)
!4415 = !DILocation(line: 602, column: 5, scope: !4389)
!4416 = !DILocation(line: 603, column: 1, scope: !4389)
!4417 = distinct !DISubprogram(name: "uart_receive_handler", scope: !629, file: !629, line: 146, type: !4418, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4420)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{null, !735, !91}
!4420 = !{!4421, !4422, !4423, !4425, !4426, !4427, !4428, !4484}
!4421 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4417, file: !629, line: 146, type: !735)
!4422 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4417, file: !629, line: 146, type: !91)
!4423 = !DILocalVariable(name: "channel", scope: !4417, file: !629, line: 148, type: !4424)
!4424 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !639, line: 203, baseType: !638)
!4425 = !DILocalVariable(name: "avail_bytes", scope: !4417, file: !629, line: 149, type: !61)
!4426 = !DILocalVariable(name: "callback", scope: !4417, file: !629, line: 150, type: !744)
!4427 = !DILocalVariable(name: "arg", scope: !4417, file: !629, line: 151, type: !88)
!4428 = !DILocalVariable(name: "uartx", scope: !4417, file: !629, line: 152, type: !4429)
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 32)
!4430 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !4431)
!4431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !4432)
!4432 = !{!4433, !4439, !4444, !4450, !4451, !4456, !4461, !4462, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483}
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4431, file: !56, line: 547, baseType: !4434, size: 32)
!4434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4431, file: !56, line: 543, size: 32, elements: !4435)
!4435 = !{!4436, !4437, !4438}
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4434, file: !56, line: 544, baseType: !272, size: 32)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4434, file: !56, line: 545, baseType: !60, size: 32)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4434, file: !56, line: 546, baseType: !60, size: 32)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4431, file: !56, line: 551, baseType: !4440, size: 32, offset: 32)
!4440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4431, file: !56, line: 548, size: 32, elements: !4441)
!4441 = !{!4442, !4443}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4440, file: !56, line: 549, baseType: !60, size: 32)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4440, file: !56, line: 550, baseType: !60, size: 32)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4431, file: !56, line: 556, baseType: !4445, size: 32, offset: 64)
!4445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4431, file: !56, line: 552, size: 32, elements: !4446)
!4446 = !{!4447, !4448, !4449}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4445, file: !56, line: 553, baseType: !272, size: 32)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4445, file: !56, line: 554, baseType: !60, size: 32)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4445, file: !56, line: 555, baseType: !60, size: 32)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4431, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4431, file: !56, line: 561, baseType: !4452, size: 32, offset: 128)
!4452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4431, file: !56, line: 558, size: 32, elements: !4453)
!4453 = !{!4454, !4455}
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4452, file: !56, line: 559, baseType: !60, size: 32)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4452, file: !56, line: 560, baseType: !60, size: 32)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4431, file: !56, line: 565, baseType: !4457, size: 32, offset: 160)
!4457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4431, file: !56, line: 562, size: 32, elements: !4458)
!4458 = !{!4459, !4460}
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4457, file: !56, line: 563, baseType: !272, size: 32)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4457, file: !56, line: 564, baseType: !60, size: 32)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4431, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4431, file: !56, line: 570, baseType: !4463, size: 32, offset: 224)
!4463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4431, file: !56, line: 567, size: 32, elements: !4464)
!4464 = !{!4465, !4466}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4463, file: !56, line: 568, baseType: !60, size: 32)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4463, file: !56, line: 569, baseType: !60, size: 32)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4431, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4431, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4431, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4431, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4431, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4431, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4431, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4431, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4431, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4431, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4431, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4431, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4431, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4431, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4431, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4431, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4431, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!4484 = !DILocalVariable(name: "status", scope: !4417, file: !629, line: 153, type: !4485)
!4485 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !639, line: 211, baseType: !659)
!4486 = !DILocation(line: 0, scope: !4417)
!4487 = !DILocation(line: 149, column: 5, scope: !4417)
!4488 = !DILocation(line: 155, column: 9, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4417, file: !629, line: 155, column: 9)
!4490 = !DILocation(line: 155, column: 36, scope: !4489)
!4491 = !DILocation(line: 155, column: 9, scope: !4417)
!4492 = !DILocation(line: 156, column: 9, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4489, file: !629, line: 155, column: 70)
!4494 = !DILocation(line: 160, column: 13, scope: !4417)
!4495 = !DILocation(line: 161, column: 15, scope: !4417)
!4496 = !DILocation(line: 163, column: 9, scope: !4417)
!4497 = !DILocation(line: 164, column: 9, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4499, file: !629, line: 163, column: 29)
!4499 = distinct !DILexicalBlock(scope: !4417, file: !629, line: 163, column: 9)
!4500 = !DILocation(line: 165, column: 5, scope: !4498)
!4501 = !DILocation(line: 167, column: 14, scope: !4417)
!4502 = !DILocation(line: 168, column: 16, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4417, file: !629, line: 168, column: 9)
!4504 = !DILocation(line: 168, column: 9, scope: !4417)
!4505 = !DILocation(line: 169, column: 9, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4503, file: !629, line: 168, column: 28)
!4507 = !DILocation(line: 172, column: 9, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4417, file: !629, line: 172, column: 9)
!4509 = !DILocation(line: 172, column: 21, scope: !4508)
!4510 = !DILocation(line: 172, column: 9, scope: !4417)
!4511 = !DILocation(line: 176, column: 43, scope: !4417)
!4512 = !DILocation(line: 178, column: 18, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4417, file: !629, line: 178, column: 9)
!4514 = !DILocation(line: 178, column: 9, scope: !4417)
!4515 = !DILocation(line: 179, column: 9, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4513, file: !629, line: 178, column: 27)
!4517 = !DILocation(line: 177, column: 38, scope: !4417)
!4518 = !DILocation(line: 183, column: 5, scope: !4417)
!4519 = !DILocation(line: 184, column: 5, scope: !4417)
!4520 = !DILocation(line: 185, column: 5, scope: !4417)
!4521 = !DILocation(line: 187, column: 14, scope: !4417)
!4522 = !DILocation(line: 188, column: 16, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4417, file: !629, line: 188, column: 9)
!4524 = !DILocation(line: 188, column: 9, scope: !4417)
!4525 = !DILocation(line: 189, column: 9, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4523, file: !629, line: 188, column: 28)
!4527 = !DILocation(line: 192, column: 9, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4417, file: !629, line: 192, column: 9)
!4529 = !DILocation(line: 192, column: 53, scope: !4528)
!4530 = !DILocation(line: 192, column: 21, scope: !4528)
!4531 = !DILocation(line: 192, column: 9, scope: !4417)
!4532 = !DILocation(line: 193, column: 18, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4528, file: !629, line: 192, column: 83)
!4534 = !DILocation(line: 194, column: 20, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4533, file: !629, line: 194, column: 13)
!4536 = !DILocation(line: 194, column: 13, scope: !4533)
!4537 = !DILocation(line: 195, column: 13, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4535, file: !629, line: 194, column: 32)
!4539 = !DILocation(line: 199, column: 1, scope: !4417)
!4540 = distinct !DISubprogram(name: "uart_send_handler", scope: !629, file: !629, line: 210, type: !4418, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4541)
!4541 = !{!4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549}
!4542 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4540, file: !629, line: 210, type: !735)
!4543 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4540, file: !629, line: 210, type: !91)
!4544 = !DILocalVariable(name: "channel", scope: !4540, file: !629, line: 212, type: !4424)
!4545 = !DILocalVariable(name: "status", scope: !4540, file: !629, line: 213, type: !4485)
!4546 = !DILocalVariable(name: "compare_space", scope: !4540, file: !629, line: 214, type: !61)
!4547 = !DILocalVariable(name: "avail_space", scope: !4540, file: !629, line: 214, type: !61)
!4548 = !DILocalVariable(name: "callback", scope: !4540, file: !629, line: 215, type: !744)
!4549 = !DILocalVariable(name: "arg", scope: !4540, file: !629, line: 216, type: !88)
!4550 = !DILocation(line: 0, scope: !4540)
!4551 = !DILocation(line: 214, column: 5, scope: !4540)
!4552 = !DILocation(line: 221, column: 9, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4540, file: !629, line: 221, column: 9)
!4554 = !DILocation(line: 221, column: 36, scope: !4553)
!4555 = !DILocation(line: 221, column: 9, scope: !4540)
!4556 = !DILocation(line: 222, column: 9, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4553, file: !629, line: 221, column: 70)
!4558 = !DILocation(line: 226, column: 15, scope: !4540)
!4559 = !DILocation(line: 228, column: 9, scope: !4540)
!4560 = !DILocation(line: 253, column: 47, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !629, line: 252, column: 12)
!4562 = distinct !DILexicalBlock(scope: !4540, file: !629, line: 228, column: 9)
!4563 = !DILocation(line: 255, column: 22, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4561, file: !629, line: 255, column: 13)
!4565 = !DILocation(line: 255, column: 13, scope: !4561)
!4566 = !DILocation(line: 256, column: 13, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4564, file: !629, line: 255, column: 31)
!4568 = !DILocation(line: 254, column: 42, scope: !4561)
!4569 = !DILocation(line: 260, column: 9, scope: !4561)
!4570 = !DILocation(line: 261, column: 9, scope: !4561)
!4571 = !DILocation(line: 262, column: 9, scope: !4561)
!4572 = !DILocation(line: 264, column: 18, scope: !4561)
!4573 = !DILocation(line: 265, column: 20, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4561, file: !629, line: 265, column: 13)
!4575 = !DILocation(line: 265, column: 13, scope: !4561)
!4576 = !DILocation(line: 266, column: 13, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4574, file: !629, line: 265, column: 32)
!4578 = !DILocation(line: 269, column: 54, scope: !4561)
!4579 = !DILocation(line: 270, column: 56, scope: !4561)
!4580 = !DILocation(line: 270, column: 25, scope: !4561)
!4581 = !DILocation(line: 271, column: 13, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4561, file: !629, line: 271, column: 13)
!4583 = !DILocation(line: 271, column: 25, scope: !4582)
!4584 = !DILocation(line: 271, column: 13, scope: !4561)
!4585 = !DILocation(line: 272, column: 22, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4582, file: !629, line: 271, column: 43)
!4587 = !DILocation(line: 273, column: 24, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4586, file: !629, line: 273, column: 17)
!4589 = !DILocation(line: 273, column: 17, scope: !4586)
!4590 = !DILocation(line: 274, column: 17, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4588, file: !629, line: 273, column: 36)
!4592 = !DILocation(line: 279, column: 1, scope: !4540)
!4593 = distinct !DISubprogram(name: "uart_error_handler", scope: !629, file: !629, line: 282, type: !4594, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4596)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{null, !735}
!4596 = !{!4597, !4598, !4599, !4600}
!4597 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4593, file: !629, line: 282, type: !735)
!4598 = !DILocalVariable(name: "uartx", scope: !4593, file: !629, line: 284, type: !4429)
!4599 = !DILocalVariable(name: "callback", scope: !4593, file: !629, line: 285, type: !744)
!4600 = !DILocalVariable(name: "arg", scope: !4593, file: !629, line: 286, type: !88)
!4601 = !DILocation(line: 0, scope: !4593)
!4602 = !DILocation(line: 288, column: 13, scope: !4593)
!4603 = !DILocation(line: 290, column: 10, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4593, file: !629, line: 290, column: 9)
!4605 = !DILocation(line: 290, column: 9, scope: !4593)
!4606 = !DILocation(line: 291, column: 9, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4604, file: !629, line: 290, column: 36)
!4608 = !DILocation(line: 292, column: 9, scope: !4607)
!4609 = !DILocation(line: 293, column: 47, scope: !4607)
!4610 = !DILocation(line: 295, column: 22, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4607, file: !629, line: 295, column: 13)
!4612 = !DILocation(line: 295, column: 13, scope: !4607)
!4613 = !DILocation(line: 296, column: 13, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4611, file: !629, line: 295, column: 31)
!4615 = !DILocation(line: 294, column: 42, scope: !4607)
!4616 = !DILocation(line: 299, column: 9, scope: !4607)
!4617 = !DILocation(line: 300, column: 5, scope: !4607)
!4618 = !DILocation(line: 301, column: 1, scope: !4593)
!4619 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !629, file: !629, line: 416, type: !4620, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4624)
!4620 = !DISubroutineType(types: !4621)
!4621 = !{!4622, !735, !4623}
!4622 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !654, line: 351, baseType: !670)
!4623 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !654, line: 317, baseType: !677)
!4624 = !{!4625, !4626, !4627, !4628, !4629}
!4625 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4619, file: !629, line: 416, type: !735)
!4626 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4619, file: !629, line: 416, type: !4623)
!4627 = !DILocalVariable(name: "actual_baudrate", scope: !4619, file: !629, line: 418, type: !61)
!4628 = !DILocalVariable(name: "irq_status", scope: !4619, file: !629, line: 418, type: !61)
!4629 = !DILocalVariable(name: "uartx", scope: !4619, file: !629, line: 419, type: !4429)
!4630 = !DILocation(line: 0, scope: !4619)
!4631 = !DILocation(line: 421, column: 11, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4619, file: !629, line: 421, column: 9)
!4633 = !DILocation(line: 421, column: 42, scope: !4632)
!4634 = !DILocation(line: 422, column: 11, scope: !4632)
!4635 = !DILocation(line: 421, column: 9, scope: !4619)
!4636 = !DILocation(line: 426, column: 9, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4619, file: !629, line: 426, column: 9)
!4638 = !DILocation(line: 426, column: 36, scope: !4637)
!4639 = !DILocation(line: 426, column: 9, scope: !4619)
!4640 = !DILocation(line: 430, column: 18, scope: !4619)
!4641 = !DILocation(line: 434, column: 5, scope: !4619)
!4642 = !DILocation(line: 436, column: 13, scope: !4619)
!4643 = !DILocation(line: 437, column: 23, scope: !4619)
!4644 = !DILocation(line: 439, column: 5, scope: !4619)
!4645 = !DILocation(line: 441, column: 5, scope: !4619)
!4646 = !DILocation(line: 442, column: 1, scope: !4619)
!4647 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !629, file: !629, line: 120, type: !4648, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4650)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!91, !735}
!4650 = !{!4651}
!4651 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4647, file: !629, line: 120, type: !735)
!4652 = !DILocation(line: 0, scope: !4647)
!4653 = !DILocation(line: 122, column: 23, scope: !4647)
!4654 = !DILocation(line: 122, column: 5, scope: !4647)
!4655 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !629, file: !629, line: 125, type: !4656, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4658)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{!91, !4623}
!4658 = !{!4659}
!4659 = !DILocalVariable(name: "baudrate", arg: 1, scope: !4655, file: !629, line: 125, type: !4623)
!4660 = !DILocation(line: 0, scope: !4655)
!4661 = !DILocation(line: 127, column: 22, scope: !4655)
!4662 = !DILocation(line: 127, column: 5, scope: !4655)
!4663 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !629, file: !629, line: 444, type: !4664, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4678)
!4664 = !DISubroutineType(types: !4665)
!4665 = !{!4622, !735, !4666}
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4667, size: 32)
!4667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4668)
!4668 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !654, line: 378, baseType: !4669)
!4669 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 373, size: 128, elements: !4670)
!4670 = !{!4671, !4672, !4674, !4676}
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !4669, file: !654, line: 374, baseType: !4623, size: 32)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !4669, file: !654, line: 375, baseType: !4673, size: 32, offset: 32)
!4673 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !654, line: 326, baseType: !693)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !4669, file: !654, line: 376, baseType: !4675, size: 32, offset: 64)
!4675 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !654, line: 333, baseType: !699)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4669, file: !654, line: 377, baseType: !4677, size: 32, offset: 96)
!4677 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !654, line: 341, baseType: !703)
!4678 = !{!4679, !4680, !4681, !4682}
!4679 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4663, file: !629, line: 444, type: !735)
!4680 = !DILocalVariable(name: "config", arg: 2, scope: !4663, file: !629, line: 445, type: !4666)
!4681 = !DILocalVariable(name: "irq_status", scope: !4663, file: !629, line: 447, type: !61)
!4682 = !DILocalVariable(name: "uartx", scope: !4663, file: !629, line: 448, type: !4429)
!4683 = !DILocation(line: 0, scope: !4663)
!4684 = !DILocation(line: 450, column: 11, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4663, file: !629, line: 450, column: 9)
!4686 = !DILocation(line: 450, column: 42, scope: !4685)
!4687 = !DILocation(line: 451, column: 11, scope: !4685)
!4688 = !DILocation(line: 450, column: 9, scope: !4663)
!4689 = !DILocation(line: 455, column: 9, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4663, file: !629, line: 455, column: 9)
!4691 = !DILocation(line: 455, column: 36, scope: !4690)
!4692 = !DILocation(line: 455, column: 9, scope: !4663)
!4693 = !DILocation(line: 459, column: 18, scope: !4663)
!4694 = !DILocation(line: 466, column: 5, scope: !4663)
!4695 = !DILocation(line: 468, column: 13, scope: !4663)
!4696 = !DILocation(line: 470, column: 46, scope: !4663)
!4697 = !DILocation(line: 470, column: 5, scope: !4663)
!4698 = !DILocation(line: 471, column: 36, scope: !4663)
!4699 = !DILocation(line: 471, column: 57, scope: !4663)
!4700 = !DILocation(line: 471, column: 75, scope: !4663)
!4701 = !DILocation(line: 471, column: 5, scope: !4663)
!4702 = !DILocation(line: 473, column: 5, scope: !4663)
!4703 = !DILocation(line: 474, column: 1, scope: !4663)
!4704 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !629, file: !629, line: 130, type: !4705, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4707)
!4705 = !DISubroutineType(types: !4706)
!4706 = !{!91, !4666}
!4707 = !{!4708}
!4708 = !DILocalVariable(name: "config", arg: 1, scope: !4704, file: !629, line: 130, type: !4666)
!4709 = !DILocation(line: 0, scope: !4704)
!4710 = !DILocation(line: 132, column: 22, scope: !4704)
!4711 = !DILocation(line: 132, column: 31, scope: !4704)
!4712 = !DILocation(line: 132, column: 56, scope: !4704)
!4713 = !DILocation(line: 133, column: 22, scope: !4704)
!4714 = !DILocation(line: 133, column: 34, scope: !4704)
!4715 = !DILocation(line: 133, column: 61, scope: !4704)
!4716 = !DILocation(line: 134, column: 22, scope: !4704)
!4717 = !DILocation(line: 134, column: 31, scope: !4704)
!4718 = !DILocation(line: 134, column: 55, scope: !4704)
!4719 = !DILocation(line: 135, column: 22, scope: !4704)
!4720 = !DILocation(line: 135, column: 29, scope: !4704)
!4721 = !DILocation(line: 132, column: 5, scope: !4704)
!4722 = distinct !DISubprogram(name: "hal_uart_init", scope: !629, file: !629, line: 476, type: !4723, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4726)
!4723 = !DISubroutineType(types: !4724)
!4724 = !{!4622, !735, !4725}
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4668, size: 32)
!4726 = !{!4727, !4728, !4729, !4730, !4731, !4732, !4733}
!4727 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4722, file: !629, line: 476, type: !735)
!4728 = !DILocalVariable(name: "uart_config", arg: 2, scope: !4722, file: !629, line: 476, type: !4725)
!4729 = !DILocalVariable(name: "uartx", scope: !4722, file: !629, line: 478, type: !4429)
!4730 = !DILocalVariable(name: "i", scope: !4722, file: !629, line: 479, type: !61)
!4731 = !DILocalVariable(name: "actual_baudrate", scope: !4722, file: !629, line: 479, type: !61)
!4732 = !DILocalVariable(name: "irq_status", scope: !4722, file: !629, line: 479, type: !61)
!4733 = !DILocalVariable(name: "status", scope: !4722, file: !629, line: 480, type: !4734)
!4734 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !709, line: 106, baseType: !708)
!4735 = !DILocation(line: 0, scope: !4722)
!4736 = !DILocation(line: 482, column: 11, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4722, file: !629, line: 482, column: 9)
!4738 = !DILocation(line: 482, column: 42, scope: !4737)
!4739 = !DILocation(line: 483, column: 11, scope: !4737)
!4740 = !DILocation(line: 482, column: 9, scope: !4722)
!4741 = !DILocation(line: 487, column: 18, scope: !4722)
!4742 = !DILocation(line: 488, column: 9, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4722, file: !629, line: 488, column: 9)
!4744 = !DILocation(line: 488, column: 36, scope: !4743)
!4745 = !DILocation(line: 488, column: 9, scope: !4722)
!4746 = !DILocation(line: 489, column: 9, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4743, file: !629, line: 488, column: 68)
!4748 = !DILocation(line: 490, column: 9, scope: !4747)
!4749 = !DILocation(line: 502, column: 9, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4722, file: !629, line: 502, column: 9)
!4751 = !DILocation(line: 502, column: 9, scope: !4722)
!4752 = !DILocation(line: 504, column: 13, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4754, file: !629, line: 503, column: 44)
!4754 = distinct !DILexicalBlock(scope: !4755, file: !629, line: 503, column: 9)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !629, line: 503, column: 9)
!4756 = distinct !DILexicalBlock(scope: !4750, file: !629, line: 502, column: 50)
!4757 = !DILocation(line: 504, column: 32, scope: !4753)
!4758 = !DILocation(line: 510, column: 32, scope: !4753)
!4759 = !DILocation(line: 510, column: 36, scope: !4753)
!4760 = !DILocation(line: 511, column: 32, scope: !4753)
!4761 = !DILocation(line: 511, column: 37, scope: !4753)
!4762 = !DILocation(line: 503, column: 40, scope: !4754)
!4763 = !DILocation(line: 503, column: 23, scope: !4754)
!4764 = !DILocation(line: 503, column: 9, scope: !4755)
!4765 = distinct !{!4765, !4764, !4766}
!4766 = !DILocation(line: 512, column: 9, scope: !4755)
!4767 = !DILocation(line: 513, column: 40, scope: !4756)
!4768 = !DILocation(line: 514, column: 5, scope: !4756)
!4769 = !DILocation(line: 521, column: 32, scope: !4722)
!4770 = !DILocation(line: 522, column: 5, scope: !4722)
!4771 = !DILocation(line: 524, column: 31, scope: !4722)
!4772 = !DILocation(line: 524, column: 14, scope: !4722)
!4773 = !DILocation(line: 525, column: 16, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4722, file: !629, line: 525, column: 9)
!4775 = !DILocation(line: 525, column: 9, scope: !4722)
!4776 = !DILocation(line: 526, column: 9, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4774, file: !629, line: 525, column: 40)
!4778 = !DILocation(line: 530, column: 13, scope: !4722)
!4779 = !DILocation(line: 532, column: 5, scope: !4722)
!4780 = !DILocation(line: 533, column: 56, scope: !4722)
!4781 = !DILocation(line: 533, column: 23, scope: !4722)
!4782 = !DILocation(line: 534, column: 5, scope: !4722)
!4783 = !DILocation(line: 535, column: 41, scope: !4722)
!4784 = !DILocation(line: 535, column: 67, scope: !4722)
!4785 = !DILocation(line: 535, column: 90, scope: !4722)
!4786 = !DILocation(line: 535, column: 5, scope: !4722)
!4787 = !DILocation(line: 536, column: 5, scope: !4722)
!4788 = !DILocation(line: 541, column: 5, scope: !4722)
!4789 = !DILocation(line: 542, column: 1, scope: !4722)
!4790 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !629, file: !629, line: 544, type: !4791, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4793)
!4791 = !DISubroutineType(types: !4792)
!4792 = !{!4622, !735}
!4793 = !{!4794, !4795, !4796, !4797, !4798, !4799, !4800}
!4794 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4790, file: !629, line: 544, type: !735)
!4795 = !DILocalVariable(name: "uartx", scope: !4790, file: !629, line: 546, type: !4429)
!4796 = !DILocalVariable(name: "tx_dma_channel", scope: !4790, file: !629, line: 547, type: !4424)
!4797 = !DILocalVariable(name: "rx_dma_channel", scope: !4790, file: !629, line: 547, type: !4424)
!4798 = !DILocalVariable(name: "irq_status", scope: !4790, file: !629, line: 548, type: !61)
!4799 = !DILocalVariable(name: "status", scope: !4790, file: !629, line: 549, type: !4485)
!4800 = !DILocalVariable(name: "clock_status", scope: !4790, file: !629, line: 550, type: !4734)
!4801 = !DILocation(line: 0, scope: !4790)
!4802 = !DILocation(line: 552, column: 10, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4790, file: !629, line: 552, column: 9)
!4804 = !DILocation(line: 552, column: 9, scope: !4790)
!4805 = !DILocation(line: 556, column: 18, scope: !4790)
!4806 = !DILocation(line: 557, column: 9, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4790, file: !629, line: 557, column: 9)
!4808 = !DILocation(line: 557, column: 36, scope: !4807)
!4809 = !DILocation(line: 557, column: 9, scope: !4790)
!4810 = !DILocation(line: 562, column: 13, scope: !4790)
!4811 = !DILocation(line: 565, column: 5, scope: !4790)
!4812 = !DILocation(line: 568, column: 9, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4790, file: !629, line: 568, column: 9)
!4814 = !DILocation(line: 568, column: 36, scope: !4813)
!4815 = !DILocation(line: 568, column: 9, scope: !4790)
!4816 = !DILocation(line: 569, column: 26, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4813, file: !629, line: 568, column: 70)
!4818 = !DILocation(line: 570, column: 26, scope: !4817)
!4819 = !DILocation(line: 572, column: 18, scope: !4817)
!4820 = !DILocation(line: 573, column: 20, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4817, file: !629, line: 573, column: 13)
!4822 = !DILocation(line: 573, column: 13, scope: !4817)
!4823 = !DILocation(line: 574, column: 13, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4821, file: !629, line: 573, column: 32)
!4825 = !DILocation(line: 575, column: 13, scope: !4824)
!4826 = !DILocation(line: 578, column: 18, scope: !4817)
!4827 = !DILocation(line: 579, column: 20, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4817, file: !629, line: 579, column: 13)
!4829 = !DILocation(line: 579, column: 13, scope: !4817)
!4830 = !DILocation(line: 580, column: 13, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4828, file: !629, line: 579, column: 32)
!4832 = !DILocation(line: 581, column: 13, scope: !4831)
!4833 = !DILocation(line: 584, column: 18, scope: !4817)
!4834 = !DILocation(line: 585, column: 20, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4817, file: !629, line: 585, column: 13)
!4836 = !DILocation(line: 585, column: 13, scope: !4817)
!4837 = !DILocation(line: 586, column: 13, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4835, file: !629, line: 585, column: 32)
!4839 = !DILocation(line: 587, column: 13, scope: !4838)
!4840 = !DILocation(line: 590, column: 18, scope: !4817)
!4841 = !DILocation(line: 591, column: 20, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4817, file: !629, line: 591, column: 13)
!4843 = !DILocation(line: 591, column: 13, scope: !4817)
!4844 = !DILocation(line: 592, column: 13, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4842, file: !629, line: 591, column: 32)
!4846 = !DILocation(line: 593, column: 13, scope: !4845)
!4847 = !DILocation(line: 596, column: 18, scope: !4817)
!4848 = !DILocation(line: 597, column: 20, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4817, file: !629, line: 597, column: 13)
!4850 = !DILocation(line: 597, column: 13, scope: !4817)
!4851 = !DILocation(line: 598, column: 13, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4849, file: !629, line: 597, column: 32)
!4853 = !DILocation(line: 599, column: 13, scope: !4852)
!4854 = !DILocation(line: 602, column: 18, scope: !4817)
!4855 = !DILocation(line: 603, column: 20, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4817, file: !629, line: 603, column: 13)
!4857 = !DILocation(line: 603, column: 13, scope: !4817)
!4858 = !DILocation(line: 604, column: 13, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4856, file: !629, line: 603, column: 32)
!4860 = !DILocation(line: 605, column: 13, scope: !4859)
!4861 = !DILocation(line: 608, column: 30, scope: !4817)
!4862 = !DILocation(line: 608, column: 9, scope: !4817)
!4863 = !DILocation(line: 609, column: 5, scope: !4817)
!4864 = !DILocation(line: 610, column: 5, scope: !4790)
!4865 = !DILocation(line: 611, column: 38, scope: !4790)
!4866 = !DILocation(line: 611, column: 20, scope: !4790)
!4867 = !DILocation(line: 612, column: 22, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4790, file: !629, line: 612, column: 9)
!4869 = !DILocation(line: 612, column: 9, scope: !4790)
!4870 = !DILocation(line: 613, column: 9, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4868, file: !629, line: 612, column: 46)
!4872 = !DILocation(line: 614, column: 9, scope: !4871)
!4873 = !DILocation(line: 618, column: 32, scope: !4790)
!4874 = !DILocation(line: 618, column: 37, scope: !4790)
!4875 = !DILocation(line: 619, column: 32, scope: !4790)
!4876 = !DILocation(line: 619, column: 36, scope: !4790)
!4877 = !DILocation(line: 635, column: 32, scope: !4790)
!4878 = !DILocation(line: 639, column: 5, scope: !4790)
!4879 = !DILocation(line: 640, column: 1, scope: !4790)
!4880 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !629, file: !629, line: 642, type: !4881, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4883)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{null, !735, !1482}
!4883 = !{!4884, !4885, !4886}
!4884 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4880, file: !629, line: 642, type: !735)
!4885 = !DILocalVariable(name: "byte", arg: 2, scope: !4880, file: !629, line: 642, type: !1482)
!4886 = !DILocalVariable(name: "uartx", scope: !4880, file: !629, line: 644, type: !4429)
!4887 = !DILocation(line: 0, scope: !4880)
!4888 = !DILocation(line: 646, column: 10, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4880, file: !629, line: 646, column: 9)
!4890 = !DILocation(line: 646, column: 9, scope: !4880)
!4891 = !DILocation(line: 650, column: 9, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4880, file: !629, line: 650, column: 9)
!4893 = !DILocation(line: 650, column: 36, scope: !4892)
!4894 = !DILocation(line: 650, column: 9, scope: !4880)
!4895 = !DILocation(line: 654, column: 13, scope: !4880)
!4896 = !DILocation(line: 655, column: 5, scope: !4880)
!4897 = !DILocation(line: 656, column: 1, scope: !4880)
!4898 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !629, file: !629, line: 658, type: !4899, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4903)
!4899 = !DISubroutineType(types: !4900)
!4900 = !{!61, !735, !4901, !61}
!4901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4902, size: 32)
!4902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!4903 = !{!4904, !4905, !4906, !4907}
!4904 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4898, file: !629, line: 658, type: !735)
!4905 = !DILocalVariable(name: "data", arg: 2, scope: !4898, file: !629, line: 658, type: !4901)
!4906 = !DILocalVariable(name: "size", arg: 3, scope: !4898, file: !629, line: 658, type: !61)
!4907 = !DILocalVariable(name: "i", scope: !4898, file: !629, line: 660, type: !61)
!4908 = !DILocation(line: 0, scope: !4898)
!4909 = !DILocation(line: 662, column: 11, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4898, file: !629, line: 662, column: 9)
!4911 = !DILocation(line: 662, column: 42, scope: !4910)
!4912 = !DILocation(line: 666, column: 9, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4898, file: !629, line: 666, column: 9)
!4914 = !DILocation(line: 666, column: 36, scope: !4913)
!4915 = !DILocation(line: 666, column: 9, scope: !4898)
!4916 = !DILocation(line: 671, column: 38, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !629, line: 670, column: 32)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !629, line: 670, column: 5)
!4919 = distinct !DILexicalBlock(scope: !4898, file: !629, line: 670, column: 5)
!4920 = !DILocation(line: 671, column: 9, scope: !4917)
!4921 = !DILocation(line: 672, column: 13, scope: !4917)
!4922 = !DILocation(line: 670, column: 28, scope: !4918)
!4923 = !DILocation(line: 670, column: 19, scope: !4918)
!4924 = !DILocation(line: 670, column: 5, scope: !4919)
!4925 = distinct !{!4925, !4924, !4926}
!4926 = !DILocation(line: 673, column: 5, scope: !4919)
!4927 = !DILocation(line: 676, column: 1, scope: !4898)
!4928 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !629, file: !629, line: 678, type: !4899, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4929)
!4929 = !{!4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937}
!4930 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4928, file: !629, line: 678, type: !735)
!4931 = !DILocalVariable(name: "data", arg: 2, scope: !4928, file: !629, line: 678, type: !4901)
!4932 = !DILocalVariable(name: "size", arg: 3, scope: !4928, file: !629, line: 678, type: !61)
!4933 = !DILocalVariable(name: "channel", scope: !4928, file: !629, line: 680, type: !4424)
!4934 = !DILocalVariable(name: "i", scope: !4928, file: !629, line: 681, type: !61)
!4935 = !DILocalVariable(name: "real_count", scope: !4928, file: !629, line: 681, type: !61)
!4936 = !DILocalVariable(name: "avail_space", scope: !4928, file: !629, line: 681, type: !61)
!4937 = !DILocalVariable(name: "status", scope: !4928, file: !629, line: 682, type: !4485)
!4938 = !DILocation(line: 0, scope: !4928)
!4939 = !DILocation(line: 681, column: 5, scope: !4928)
!4940 = !DILocation(line: 687, column: 11, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4928, file: !629, line: 687, column: 9)
!4942 = !DILocation(line: 687, column: 42, scope: !4941)
!4943 = !DILocation(line: 691, column: 9, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4928, file: !629, line: 691, column: 9)
!4945 = !DILocation(line: 691, column: 36, scope: !4944)
!4946 = !DILocation(line: 691, column: 9, scope: !4928)
!4947 = !DILocation(line: 704, column: 15, scope: !4928)
!4948 = !DILocation(line: 706, column: 14, scope: !4928)
!4949 = !DILocation(line: 707, column: 16, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4928, file: !629, line: 707, column: 9)
!4951 = !DILocation(line: 707, column: 9, scope: !4928)
!4952 = !DILocation(line: 708, column: 9, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4950, file: !629, line: 707, column: 28)
!4954 = !DILocation(line: 712, column: 9, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4928, file: !629, line: 712, column: 9)
!4956 = !DILocation(line: 712, column: 21, scope: !4955)
!4957 = !DILocation(line: 717, column: 19, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4959, file: !629, line: 717, column: 5)
!4959 = distinct !DILexicalBlock(scope: !4928, file: !629, line: 717, column: 5)
!4960 = !DILocation(line: 717, column: 5, scope: !4959)
!4961 = distinct !{!4961, !4960, !4962}
!4962 = !DILocation(line: 723, column: 5, scope: !4959)
!4963 = !DILocation(line: 718, column: 42, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4958, file: !629, line: 717, column: 38)
!4965 = !DILocation(line: 718, column: 18, scope: !4964)
!4966 = !DILocation(line: 719, column: 20, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4964, file: !629, line: 719, column: 13)
!4968 = !DILocation(line: 717, column: 34, scope: !4958)
!4969 = !DILocation(line: 719, column: 13, scope: !4964)
!4970 = !DILocation(line: 720, column: 13, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4967, file: !629, line: 719, column: 32)
!4972 = !DILocation(line: 728, column: 23, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4928, file: !629, line: 728, column: 9)
!4974 = !DILocation(line: 728, column: 20, scope: !4973)
!4975 = !DILocation(line: 728, column: 9, scope: !4928)
!4976 = !DILocation(line: 729, column: 18, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4973, file: !629, line: 728, column: 36)
!4978 = !DILocation(line: 730, column: 20, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4977, file: !629, line: 730, column: 13)
!4980 = !DILocation(line: 730, column: 13, scope: !4977)
!4981 = !DILocation(line: 731, column: 13, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4979, file: !629, line: 730, column: 32)
!4983 = !DILocation(line: 737, column: 1, scope: !4928)
!4984 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !629, file: !629, line: 739, type: !4985, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4987)
!4985 = !DISubroutineType(types: !4986)
!4986 = !{!1482, !735}
!4987 = !{!4988, !4989, !4990}
!4988 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4984, file: !629, line: 739, type: !735)
!4989 = !DILocalVariable(name: "data", scope: !4984, file: !629, line: 741, type: !1482)
!4990 = !DILocalVariable(name: "uartx", scope: !4984, file: !629, line: 742, type: !4429)
!4991 = !DILocation(line: 0, scope: !4984)
!4992 = !DILocation(line: 744, column: 10, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4984, file: !629, line: 744, column: 9)
!4994 = !DILocation(line: 744, column: 9, scope: !4984)
!4995 = !DILocation(line: 748, column: 9, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4984, file: !629, line: 748, column: 9)
!4997 = !DILocation(line: 748, column: 36, scope: !4996)
!4998 = !DILocation(line: 748, column: 9, scope: !4984)
!4999 = !DILocation(line: 752, column: 13, scope: !4984)
!5000 = !DILocation(line: 754, column: 12, scope: !4984)
!5001 = !DILocation(line: 756, column: 5, scope: !4984)
!5002 = !DILocation(line: 757, column: 1, scope: !4984)
!5003 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !629, file: !629, line: 759, type: !5004, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5006)
!5004 = !DISubroutineType(types: !5005)
!5005 = !{!61, !735}
!5006 = !{!5007, !5008, !5009}
!5007 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5003, file: !629, line: 759, type: !735)
!5008 = !DILocalVariable(name: "data", scope: !5003, file: !629, line: 761, type: !61)
!5009 = !DILocalVariable(name: "uartx", scope: !5003, file: !629, line: 762, type: !4429)
!5010 = !DILocation(line: 0, scope: !5003)
!5011 = !DILocation(line: 764, column: 10, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5003, file: !629, line: 764, column: 9)
!5013 = !DILocation(line: 764, column: 9, scope: !5003)
!5014 = !DILocation(line: 768, column: 9, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5003, file: !629, line: 768, column: 9)
!5016 = !DILocation(line: 768, column: 36, scope: !5015)
!5017 = !DILocation(line: 768, column: 9, scope: !5003)
!5018 = !DILocation(line: 772, column: 13, scope: !5003)
!5019 = !DILocation(line: 774, column: 12, scope: !5003)
!5020 = !DILocation(line: 776, column: 5, scope: !5003)
!5021 = !DILocation(line: 777, column: 1, scope: !5003)
!5022 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !629, file: !629, line: 779, type: !5023, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5025)
!5023 = !DISubroutineType(types: !5024)
!5024 = !{!61, !735, !762, !61}
!5025 = !{!5026, !5027, !5028, !5029, !5030}
!5026 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5022, file: !629, line: 779, type: !735)
!5027 = !DILocalVariable(name: "buffer", arg: 2, scope: !5022, file: !629, line: 779, type: !762)
!5028 = !DILocalVariable(name: "size", arg: 3, scope: !5022, file: !629, line: 779, type: !61)
!5029 = !DILocalVariable(name: "i", scope: !5022, file: !629, line: 781, type: !61)
!5030 = !DILocalVariable(name: "pbuf", scope: !5022, file: !629, line: 782, type: !762)
!5031 = !DILocation(line: 0, scope: !5022)
!5032 = !DILocation(line: 784, column: 11, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5022, file: !629, line: 784, column: 9)
!5034 = !DILocation(line: 784, column: 42, scope: !5033)
!5035 = !DILocation(line: 789, column: 9, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5022, file: !629, line: 789, column: 9)
!5037 = !DILocation(line: 789, column: 36, scope: !5036)
!5038 = !DILocation(line: 789, column: 9, scope: !5022)
!5039 = !DILocation(line: 794, column: 19, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5041, file: !629, line: 793, column: 32)
!5041 = distinct !DILexicalBlock(scope: !5042, file: !629, line: 793, column: 5)
!5042 = distinct !DILexicalBlock(scope: !5022, file: !629, line: 793, column: 5)
!5043 = !DILocation(line: 794, column: 9, scope: !5040)
!5044 = !DILocation(line: 794, column: 17, scope: !5040)
!5045 = !DILocation(line: 793, column: 28, scope: !5041)
!5046 = !DILocation(line: 793, column: 19, scope: !5041)
!5047 = !DILocation(line: 793, column: 5, scope: !5042)
!5048 = distinct !{!5048, !5047, !5049}
!5049 = !DILocation(line: 795, column: 5, scope: !5042)
!5050 = !DILocation(line: 798, column: 1, scope: !5022)
!5051 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !629, file: !629, line: 800, type: !5023, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5052)
!5052 = !{!5053, !5054, !5055, !5056, !5057, !5058, !5059, !5060}
!5053 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5051, file: !629, line: 800, type: !735)
!5054 = !DILocalVariable(name: "buffer", arg: 2, scope: !5051, file: !629, line: 800, type: !762)
!5055 = !DILocalVariable(name: "size", arg: 3, scope: !5051, file: !629, line: 800, type: !61)
!5056 = !DILocalVariable(name: "channel", scope: !5051, file: !629, line: 802, type: !4424)
!5057 = !DILocalVariable(name: "receive_count", scope: !5051, file: !629, line: 803, type: !61)
!5058 = !DILocalVariable(name: "avail_count", scope: !5051, file: !629, line: 803, type: !61)
!5059 = !DILocalVariable(name: "index", scope: !5051, file: !629, line: 804, type: !61)
!5060 = !DILocalVariable(name: "status", scope: !5051, file: !629, line: 805, type: !4485)
!5061 = !DILocation(line: 0, scope: !5051)
!5062 = !DILocation(line: 803, column: 5, scope: !5051)
!5063 = !DILocation(line: 807, column: 11, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5051, file: !629, line: 807, column: 9)
!5065 = !DILocation(line: 807, column: 42, scope: !5064)
!5066 = !DILocation(line: 813, column: 9, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5051, file: !629, line: 813, column: 9)
!5068 = !DILocation(line: 813, column: 36, scope: !5067)
!5069 = !DILocation(line: 813, column: 9, scope: !5051)
!5070 = !DILocation(line: 817, column: 15, scope: !5051)
!5071 = !DILocation(line: 819, column: 14, scope: !5051)
!5072 = !DILocation(line: 820, column: 16, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5051, file: !629, line: 820, column: 9)
!5074 = !DILocation(line: 820, column: 9, scope: !5051)
!5075 = !DILocation(line: 821, column: 9, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5073, file: !629, line: 820, column: 28)
!5077 = !DILocation(line: 825, column: 9, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5051, file: !629, line: 825, column: 9)
!5079 = !DILocation(line: 825, column: 21, scope: !5078)
!5080 = !DILocation(line: 830, column: 27, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5082, file: !629, line: 830, column: 5)
!5082 = distinct !DILexicalBlock(scope: !5051, file: !629, line: 830, column: 5)
!5083 = !DILocation(line: 830, column: 5, scope: !5082)
!5084 = distinct !{!5084, !5083, !5085}
!5085 = !DILocation(line: 836, column: 5, scope: !5082)
!5086 = !DILocation(line: 831, column: 42, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5081, file: !629, line: 830, column: 53)
!5088 = !DILocation(line: 831, column: 18, scope: !5087)
!5089 = !DILocation(line: 832, column: 20, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5087, file: !629, line: 832, column: 13)
!5091 = !DILocation(line: 830, column: 49, scope: !5081)
!5092 = !DILocation(line: 832, column: 13, scope: !5087)
!5093 = !DILocation(line: 833, column: 13, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5090, file: !629, line: 832, column: 32)
!5095 = !DILocation(line: 841, column: 26, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5051, file: !629, line: 841, column: 9)
!5097 = !DILocation(line: 841, column: 23, scope: !5096)
!5098 = !DILocation(line: 841, column: 9, scope: !5051)
!5099 = !DILocation(line: 842, column: 18, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5096, file: !629, line: 841, column: 39)
!5101 = !DILocation(line: 843, column: 20, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5100, file: !629, line: 843, column: 13)
!5103 = !DILocation(line: 843, column: 13, scope: !5100)
!5104 = !DILocation(line: 844, column: 13, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5102, file: !629, line: 843, column: 32)
!5106 = !DILocation(line: 850, column: 1, scope: !5051)
!5107 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !629, file: !629, line: 891, type: !5108, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5110)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{!4622, !735, !744, !88}
!5110 = !{!5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118}
!5111 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5107, file: !629, line: 891, type: !735)
!5112 = !DILocalVariable(name: "user_callback", arg: 2, scope: !5107, file: !629, line: 892, type: !744)
!5113 = !DILocalVariable(name: "user_data", arg: 3, scope: !5107, file: !629, line: 893, type: !88)
!5114 = !DILocalVariable(name: "tx_dma_channel", scope: !5107, file: !629, line: 895, type: !4424)
!5115 = !DILocalVariable(name: "rx_dma_channel", scope: !5107, file: !629, line: 895, type: !4424)
!5116 = !DILocalVariable(name: "irq_status", scope: !5107, file: !629, line: 896, type: !61)
!5117 = !DILocalVariable(name: "status", scope: !5107, file: !629, line: 897, type: !4485)
!5118 = !DILocalVariable(name: "nvic_status", scope: !5107, file: !629, line: 898, type: !872)
!5119 = !DILocation(line: 0, scope: !5107)
!5120 = !DILocation(line: 900, column: 11, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5107, file: !629, line: 900, column: 9)
!5122 = !DILocation(line: 900, column: 42, scope: !5121)
!5123 = !DILocation(line: 905, column: 18, scope: !5107)
!5124 = !DILocation(line: 906, column: 9, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5107, file: !629, line: 906, column: 9)
!5126 = !DILocation(line: 906, column: 36, scope: !5125)
!5127 = !DILocation(line: 906, column: 9, scope: !5107)
!5128 = !DILocation(line: 911, column: 22, scope: !5107)
!5129 = !DILocation(line: 912, column: 22, scope: !5107)
!5130 = !DILocation(line: 914, column: 32, scope: !5107)
!5131 = !DILocation(line: 914, column: 37, scope: !5107)
!5132 = !DILocation(line: 915, column: 32, scope: !5107)
!5133 = !DILocation(line: 915, column: 36, scope: !5107)
!5134 = !DILocation(line: 917, column: 91, scope: !5107)
!5135 = !DILocation(line: 917, column: 56, scope: !5107)
!5136 = !DILocation(line: 917, column: 5, scope: !5107)
!5137 = !DILocation(line: 918, column: 80, scope: !5107)
!5138 = !DILocation(line: 918, column: 14, scope: !5107)
!5139 = !DILocation(line: 919, column: 16, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5107, file: !629, line: 919, column: 9)
!5141 = !DILocation(line: 919, column: 9, scope: !5107)
!5142 = !DILocation(line: 920, column: 9, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5140, file: !629, line: 919, column: 28)
!5144 = !DILocation(line: 921, column: 9, scope: !5143)
!5145 = !DILocation(line: 924, column: 97, scope: !5107)
!5146 = !DILocation(line: 924, column: 56, scope: !5107)
!5147 = !DILocation(line: 924, column: 5, scope: !5107)
!5148 = !DILocation(line: 925, column: 80, scope: !5107)
!5149 = !DILocation(line: 925, column: 14, scope: !5107)
!5150 = !DILocation(line: 926, column: 16, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5107, file: !629, line: 926, column: 9)
!5152 = !DILocation(line: 926, column: 9, scope: !5107)
!5153 = !DILocation(line: 927, column: 9, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5151, file: !629, line: 926, column: 28)
!5155 = !DILocation(line: 928, column: 9, scope: !5154)
!5156 = !DILocation(line: 931, column: 49, scope: !5107)
!5157 = !DILocation(line: 931, column: 19, scope: !5107)
!5158 = !DILocation(line: 932, column: 21, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5107, file: !629, line: 932, column: 9)
!5160 = !DILocation(line: 932, column: 9, scope: !5107)
!5161 = !DILocation(line: 933, column: 9, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5159, file: !629, line: 932, column: 44)
!5163 = !DILocation(line: 934, column: 9, scope: !5162)
!5164 = !DILocation(line: 938, column: 5, scope: !5107)
!5165 = !DILocation(line: 940, column: 32, scope: !5107)
!5166 = !DILocation(line: 944, column: 5, scope: !5107)
!5167 = !DILocation(line: 945, column: 1, scope: !5107)
!5168 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !629, file: !629, line: 303, type: !5169, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5172)
!5169 = !DISubroutineType(types: !5170)
!5170 = !{null, !5171, !88}
!5171 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !639, line: 225, baseType: !723)
!5172 = !{!5173, !5174, !5175}
!5173 = !DILocalVariable(name: "event", arg: 1, scope: !5168, file: !629, line: 303, type: !5171)
!5174 = !DILocalVariable(name: "user_data", arg: 2, scope: !5168, file: !629, line: 303, type: !88)
!5175 = !DILocalVariable(name: "callback_data", scope: !5168, file: !629, line: 305, type: !728)
!5176 = !DILocation(line: 0, scope: !5168)
!5177 = !DILocation(line: 307, column: 24, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5168, file: !629, line: 307, column: 9)
!5179 = !DILocation(line: 0, scope: !5178)
!5180 = !DILocation(line: 307, column: 9, scope: !5168)
!5181 = !DILocation(line: 308, column: 9, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5178, file: !629, line: 307, column: 39)
!5183 = !DILocation(line: 309, column: 5, scope: !5182)
!5184 = !DILocation(line: 310, column: 9, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5178, file: !629, line: 309, column: 12)
!5186 = !DILocation(line: 312, column: 1, scope: !5168)
!5187 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !629, file: !629, line: 852, type: !4594, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5188)
!5188 = !{!5189, !5190, !5191, !5192, !5193}
!5189 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5187, file: !629, line: 852, type: !735)
!5190 = !DILocalVariable(name: "uartx", scope: !5187, file: !629, line: 854, type: !4429)
!5191 = !DILocalVariable(name: "tx_dma_channel", scope: !5187, file: !629, line: 855, type: !4424)
!5192 = !DILocalVariable(name: "rx_dma_channel", scope: !5187, file: !629, line: 855, type: !4424)
!5193 = !DILocalVariable(name: "status", scope: !5187, file: !629, line: 856, type: !4485)
!5194 = !DILocation(line: 0, scope: !5187)
!5195 = !DILocation(line: 858, column: 13, scope: !5187)
!5196 = !DILocation(line: 859, column: 22, scope: !5187)
!5197 = !DILocation(line: 860, column: 22, scope: !5187)
!5198 = !DILocation(line: 866, column: 5, scope: !5187)
!5199 = !DILocation(line: 867, column: 25, scope: !5187)
!5200 = !DILocation(line: 867, column: 5, scope: !5187)
!5201 = !DILocation(line: 868, column: 14, scope: !5187)
!5202 = !DILocation(line: 869, column: 16, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5187, file: !629, line: 869, column: 9)
!5204 = !DILocation(line: 869, column: 9, scope: !5187)
!5205 = !DILocation(line: 870, column: 9, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5203, file: !629, line: 869, column: 28)
!5207 = !DILocation(line: 873, column: 14, scope: !5187)
!5208 = !DILocation(line: 874, column: 16, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5187, file: !629, line: 874, column: 9)
!5210 = !DILocation(line: 874, column: 9, scope: !5187)
!5211 = !DILocation(line: 875, column: 9, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5209, file: !629, line: 874, column: 28)
!5213 = !DILocation(line: 878, column: 14, scope: !5187)
!5214 = !DILocation(line: 879, column: 16, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5187, file: !629, line: 879, column: 9)
!5216 = !DILocation(line: 879, column: 9, scope: !5187)
!5217 = !DILocation(line: 880, column: 9, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5215, file: !629, line: 879, column: 28)
!5219 = !DILocation(line: 883, column: 14, scope: !5187)
!5220 = !DILocation(line: 884, column: 16, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5187, file: !629, line: 884, column: 9)
!5222 = !DILocation(line: 884, column: 9, scope: !5187)
!5223 = !DILocation(line: 885, column: 9, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5221, file: !629, line: 884, column: 28)
!5225 = !DILocation(line: 888, column: 5, scope: !5187)
!5226 = !DILocation(line: 889, column: 1, scope: !5187)
!5227 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !629, file: !629, line: 947, type: !5004, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5228)
!5228 = !{!5229, !5230, !5231, !5232}
!5229 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5227, file: !629, line: 947, type: !735)
!5230 = !DILocalVariable(name: "channel", scope: !5227, file: !629, line: 949, type: !4424)
!5231 = !DILocalVariable(name: "roomleft", scope: !5227, file: !629, line: 950, type: !61)
!5232 = !DILocalVariable(name: "status", scope: !5227, file: !629, line: 951, type: !4485)
!5233 = !DILocation(line: 0, scope: !5227)
!5234 = !DILocation(line: 950, column: 5, scope: !5227)
!5235 = !DILocation(line: 953, column: 10, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5227, file: !629, line: 953, column: 9)
!5237 = !DILocation(line: 953, column: 9, scope: !5227)
!5238 = !DILocation(line: 957, column: 9, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5227, file: !629, line: 957, column: 9)
!5240 = !DILocation(line: 957, column: 36, scope: !5239)
!5241 = !DILocation(line: 957, column: 9, scope: !5227)
!5242 = !DILocation(line: 961, column: 15, scope: !5227)
!5243 = !DILocation(line: 962, column: 14, scope: !5227)
!5244 = !DILocation(line: 963, column: 16, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5227, file: !629, line: 963, column: 9)
!5246 = !DILocation(line: 963, column: 9, scope: !5227)
!5247 = !DILocation(line: 964, column: 9, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5245, file: !629, line: 963, column: 28)
!5249 = !DILocation(line: 968, column: 12, scope: !5227)
!5250 = !DILocation(line: 968, column: 5, scope: !5227)
!5251 = !DILocation(line: 969, column: 1, scope: !5227)
!5252 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !629, file: !629, line: 971, type: !5004, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5253)
!5253 = !{!5254, !5255, !5256, !5257}
!5254 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5252, file: !629, line: 971, type: !735)
!5255 = !DILocalVariable(name: "channel", scope: !5252, file: !629, line: 973, type: !4424)
!5256 = !DILocalVariable(name: "avail", scope: !5252, file: !629, line: 974, type: !61)
!5257 = !DILocalVariable(name: "status", scope: !5252, file: !629, line: 975, type: !4485)
!5258 = !DILocation(line: 0, scope: !5252)
!5259 = !DILocation(line: 974, column: 5, scope: !5252)
!5260 = !DILocation(line: 977, column: 10, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5252, file: !629, line: 977, column: 9)
!5262 = !DILocation(line: 977, column: 9, scope: !5252)
!5263 = !DILocation(line: 981, column: 9, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5252, file: !629, line: 981, column: 9)
!5265 = !DILocation(line: 981, column: 36, scope: !5264)
!5266 = !DILocation(line: 981, column: 9, scope: !5252)
!5267 = !DILocation(line: 985, column: 15, scope: !5252)
!5268 = !DILocation(line: 986, column: 14, scope: !5252)
!5269 = !DILocation(line: 987, column: 16, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5252, file: !629, line: 987, column: 9)
!5271 = !DILocation(line: 987, column: 9, scope: !5252)
!5272 = !DILocation(line: 988, column: 9, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5270, file: !629, line: 987, column: 28)
!5274 = !DILocation(line: 992, column: 12, scope: !5252)
!5275 = !DILocation(line: 992, column: 5, scope: !5252)
!5276 = !DILocation(line: 993, column: 1, scope: !5252)
!5277 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !629, file: !629, line: 995, type: !4791, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5278)
!5278 = !{!5279, !5280}
!5279 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5277, file: !629, line: 995, type: !735)
!5280 = !DILocalVariable(name: "uartx", scope: !5277, file: !629, line: 997, type: !4429)
!5281 = !DILocation(line: 0, scope: !5277)
!5282 = !DILocation(line: 999, column: 10, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5277, file: !629, line: 999, column: 9)
!5284 = !DILocation(line: 999, column: 9, scope: !5277)
!5285 = !DILocation(line: 1003, column: 9, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5277, file: !629, line: 1003, column: 9)
!5287 = !DILocation(line: 1003, column: 36, scope: !5286)
!5288 = !DILocation(line: 1003, column: 9, scope: !5277)
!5289 = !DILocation(line: 1007, column: 13, scope: !5277)
!5290 = !DILocation(line: 1009, column: 5, scope: !5277)
!5291 = !DILocation(line: 1015, column: 5, scope: !5277)
!5292 = !DILocation(line: 1016, column: 1, scope: !5277)
!5293 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !629, file: !629, line: 1018, type: !5294, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5296)
!5294 = !DISubroutineType(types: !5295)
!5295 = !{!4622, !735, !460, !460, !460}
!5296 = !{!5297, !5298, !5299, !5300, !5301}
!5297 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5293, file: !629, line: 1018, type: !735)
!5298 = !DILocalVariable(name: "xon", arg: 2, scope: !5293, file: !629, line: 1019, type: !460)
!5299 = !DILocalVariable(name: "xoff", arg: 3, scope: !5293, file: !629, line: 1020, type: !460)
!5300 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5293, file: !629, line: 1021, type: !460)
!5301 = !DILocalVariable(name: "uartx", scope: !5293, file: !629, line: 1023, type: !4429)
!5302 = !DILocation(line: 0, scope: !5293)
!5303 = !DILocation(line: 1025, column: 10, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5293, file: !629, line: 1025, column: 9)
!5305 = !DILocation(line: 1025, column: 9, scope: !5293)
!5306 = !DILocation(line: 1029, column: 9, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5293, file: !629, line: 1029, column: 9)
!5308 = !DILocation(line: 1029, column: 36, scope: !5307)
!5309 = !DILocation(line: 1029, column: 9, scope: !5293)
!5310 = !DILocation(line: 1033, column: 13, scope: !5293)
!5311 = !DILocation(line: 1035, column: 5, scope: !5293)
!5312 = !DILocation(line: 1044, column: 5, scope: !5293)
!5313 = !DILocation(line: 1045, column: 1, scope: !5293)
!5314 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !629, file: !629, line: 1047, type: !4791, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5315)
!5315 = !{!5316, !5317}
!5316 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5314, file: !629, line: 1047, type: !735)
!5317 = !DILocalVariable(name: "uartx", scope: !5314, file: !629, line: 1049, type: !4429)
!5318 = !DILocation(line: 0, scope: !5314)
!5319 = !DILocation(line: 1051, column: 10, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5314, file: !629, line: 1051, column: 9)
!5321 = !DILocation(line: 1051, column: 9, scope: !5314)
!5322 = !DILocation(line: 1055, column: 9, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5314, file: !629, line: 1055, column: 9)
!5324 = !DILocation(line: 1055, column: 36, scope: !5323)
!5325 = !DILocation(line: 1055, column: 9, scope: !5314)
!5326 = !DILocation(line: 1059, column: 13, scope: !5314)
!5327 = !DILocation(line: 1061, column: 5, scope: !5314)
!5328 = !DILocation(line: 1067, column: 5, scope: !5314)
!5329 = !DILocation(line: 1068, column: 1, scope: !5314)
!5330 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !629, file: !629, line: 1071, type: !5331, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5335)
!5331 = !DISubroutineType(types: !5332)
!5332 = !{!4622, !735, !5333}
!5333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5334, size: 32)
!5334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !758)
!5335 = !{!5336, !5337, !5338, !5339, !5345, !5346, !5347}
!5336 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5330, file: !629, line: 1071, type: !735)
!5337 = !DILocalVariable(name: "dma_config", arg: 2, scope: !5330, file: !629, line: 1071, type: !5333)
!5338 = !DILocalVariable(name: "irq_status", scope: !5330, file: !629, line: 1073, type: !61)
!5339 = !DILocalVariable(name: "internal_dma_config", scope: !5330, file: !629, line: 1074, type: !5340)
!5340 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !639, line: 283, baseType: !5341)
!5341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 280, size: 64, elements: !5342)
!5342 = !{!5343, !5344}
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5341, file: !639, line: 281, baseType: !61, size: 32)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5341, file: !639, line: 282, baseType: !61, size: 32, offset: 32)
!5345 = !DILocalVariable(name: "tx_dma_channel", scope: !5330, file: !629, line: 1075, type: !4424)
!5346 = !DILocalVariable(name: "rx_dma_channel", scope: !5330, file: !629, line: 1075, type: !4424)
!5347 = !DILocalVariable(name: "status", scope: !5330, file: !629, line: 1076, type: !4485)
!5348 = !DILocation(line: 0, scope: !5330)
!5349 = !DILocation(line: 1074, column: 5, scope: !5330)
!5350 = !DILocation(line: 1074, column: 19, scope: !5330)
!5351 = !DILocation(line: 1078, column: 10, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5330, file: !629, line: 1078, column: 9)
!5353 = !DILocation(line: 1078, column: 9, scope: !5330)
!5354 = !DILocation(line: 1081, column: 22, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5330, file: !629, line: 1081, column: 9)
!5356 = !DILocation(line: 1081, column: 40, scope: !5355)
!5357 = !DILocation(line: 1081, column: 49, scope: !5355)
!5358 = !DILocation(line: 1082, column: 22, scope: !5355)
!5359 = !DILocation(line: 1082, column: 43, scope: !5355)
!5360 = !DILocation(line: 1081, column: 9, scope: !5330)
!5361 = !DILocation(line: 1085, column: 22, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5330, file: !629, line: 1085, column: 9)
!5363 = !DILocation(line: 1085, column: 45, scope: !5362)
!5364 = !DILocation(line: 1085, column: 76, scope: !5362)
!5365 = !DILocation(line: 1086, column: 22, scope: !5362)
!5366 = !DILocation(line: 1086, column: 48, scope: !5362)
!5367 = !DILocation(line: 1086, column: 79, scope: !5362)
!5368 = !DILocation(line: 1090, column: 22, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5330, file: !629, line: 1090, column: 9)
!5370 = !DILocation(line: 1090, column: 48, scope: !5369)
!5371 = !DILocation(line: 1090, column: 79, scope: !5369)
!5372 = !DILocation(line: 1091, column: 22, scope: !5369)
!5373 = !DILocation(line: 1091, column: 51, scope: !5369)
!5374 = !DILocation(line: 1091, column: 82, scope: !5369)
!5375 = !DILocation(line: 1092, column: 22, scope: !5369)
!5376 = !DILocation(line: 1092, column: 47, scope: !5369)
!5377 = !DILocation(line: 1092, column: 78, scope: !5369)
!5378 = !DILocation(line: 1098, column: 9, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5330, file: !629, line: 1098, column: 9)
!5380 = !DILocation(line: 1098, column: 36, scope: !5379)
!5381 = !DILocation(line: 1098, column: 9, scope: !5330)
!5382 = !DILocation(line: 1102, column: 22, scope: !5330)
!5383 = !DILocation(line: 1103, column: 22, scope: !5330)
!5384 = !DILocation(line: 1105, column: 14, scope: !5330)
!5385 = !DILocation(line: 1106, column: 16, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5330, file: !629, line: 1106, column: 9)
!5387 = !DILocation(line: 1106, column: 9, scope: !5330)
!5388 = !DILocation(line: 1107, column: 9, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5386, file: !629, line: 1106, column: 28)
!5390 = !DILocation(line: 1110, column: 62, scope: !5330)
!5391 = !DILocation(line: 1110, column: 40, scope: !5330)
!5392 = !DILocation(line: 1110, column: 25, scope: !5330)
!5393 = !DILocation(line: 1110, column: 38, scope: !5330)
!5394 = !DILocation(line: 1111, column: 44, scope: !5330)
!5395 = !DILocation(line: 1111, column: 25, scope: !5330)
!5396 = !DILocation(line: 1111, column: 30, scope: !5330)
!5397 = !DILocation(line: 1112, column: 14, scope: !5330)
!5398 = !DILocation(line: 1113, column: 16, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5330, file: !629, line: 1113, column: 9)
!5400 = !DILocation(line: 1113, column: 9, scope: !5330)
!5401 = !DILocation(line: 1114, column: 9, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5399, file: !629, line: 1113, column: 28)
!5403 = !DILocation(line: 1117, column: 61, scope: !5330)
!5404 = !DILocation(line: 1117, column: 14, scope: !5330)
!5405 = !DILocation(line: 1118, column: 16, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5330, file: !629, line: 1118, column: 9)
!5407 = !DILocation(line: 1118, column: 9, scope: !5330)
!5408 = !DILocation(line: 1119, column: 9, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5406, file: !629, line: 1118, column: 28)
!5410 = !DILocation(line: 1123, column: 14, scope: !5330)
!5411 = !DILocation(line: 1124, column: 16, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5330, file: !629, line: 1124, column: 9)
!5413 = !DILocation(line: 1124, column: 9, scope: !5330)
!5414 = !DILocation(line: 1125, column: 9, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5412, file: !629, line: 1124, column: 28)
!5416 = !DILocation(line: 1128, column: 62, scope: !5330)
!5417 = !DILocation(line: 1128, column: 40, scope: !5330)
!5418 = !DILocation(line: 1128, column: 38, scope: !5330)
!5419 = !DILocation(line: 1129, column: 44, scope: !5330)
!5420 = !DILocation(line: 1129, column: 30, scope: !5330)
!5421 = !DILocation(line: 1130, column: 14, scope: !5330)
!5422 = !DILocation(line: 1131, column: 16, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5330, file: !629, line: 1131, column: 9)
!5424 = !DILocation(line: 1131, column: 9, scope: !5330)
!5425 = !DILocation(line: 1132, column: 9, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5423, file: !629, line: 1131, column: 28)
!5427 = !DILocation(line: 1135, column: 61, scope: !5330)
!5428 = !DILocation(line: 1135, column: 14, scope: !5330)
!5429 = !DILocation(line: 1136, column: 16, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5330, file: !629, line: 1136, column: 9)
!5431 = !DILocation(line: 1136, column: 9, scope: !5330)
!5432 = !DILocation(line: 1137, column: 9, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5430, file: !629, line: 1136, column: 28)
!5434 = !DILocation(line: 1140, column: 64, scope: !5330)
!5435 = !DILocation(line: 1140, column: 14, scope: !5330)
!5436 = !DILocation(line: 1141, column: 16, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5330, file: !629, line: 1141, column: 9)
!5438 = !DILocation(line: 1141, column: 9, scope: !5330)
!5439 = !DILocation(line: 1142, column: 9, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5437, file: !629, line: 1141, column: 28)
!5441 = !DILocation(line: 1146, column: 18, scope: !5330)
!5442 = !DILocation(line: 1147, column: 66, scope: !5330)
!5443 = !DILocation(line: 1147, column: 34, scope: !5330)
!5444 = !DILocation(line: 1147, column: 52, scope: !5330)
!5445 = !DILocation(line: 1148, column: 71, scope: !5330)
!5446 = !DILocation(line: 1148, column: 34, scope: !5330)
!5447 = !DILocation(line: 1148, column: 57, scope: !5330)
!5448 = !DILocation(line: 1149, column: 74, scope: !5330)
!5449 = !DILocation(line: 1149, column: 34, scope: !5330)
!5450 = !DILocation(line: 1149, column: 60, scope: !5330)
!5451 = !DILocation(line: 1150, column: 73, scope: !5330)
!5452 = !DILocation(line: 1150, column: 34, scope: !5330)
!5453 = !DILocation(line: 1150, column: 59, scope: !5330)
!5454 = !DILocation(line: 1151, column: 69, scope: !5330)
!5455 = !DILocation(line: 1151, column: 34, scope: !5330)
!5456 = !DILocation(line: 1151, column: 55, scope: !5330)
!5457 = !DILocation(line: 1152, column: 74, scope: !5330)
!5458 = !DILocation(line: 1152, column: 34, scope: !5330)
!5459 = !DILocation(line: 1152, column: 60, scope: !5330)
!5460 = !DILocation(line: 1153, column: 77, scope: !5330)
!5461 = !DILocation(line: 1153, column: 34, scope: !5330)
!5462 = !DILocation(line: 1153, column: 63, scope: !5330)
!5463 = !DILocation(line: 1154, column: 5, scope: !5330)
!5464 = !DILocation(line: 1156, column: 5, scope: !5330)
!5465 = !DILocation(line: 1157, column: 1, scope: !5330)
!5466 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2517, file: !2517, line: 52, type: !5467, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5524)
!5467 = !DISubroutineType(types: !5468)
!5468 = !{null, !5469, !61}
!5469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5470, size: 32)
!5470 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !5471)
!5471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !5472)
!5472 = !{!5473, !5479, !5484, !5490, !5491, !5496, !5501, !5502, !5507, !5508, !5509, !5510, !5511, !5512, !5513, !5514, !5515, !5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523}
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5471, file: !56, line: 547, baseType: !5474, size: 32)
!5474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5471, file: !56, line: 543, size: 32, elements: !5475)
!5475 = !{!5476, !5477, !5478}
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5474, file: !56, line: 544, baseType: !272, size: 32)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5474, file: !56, line: 545, baseType: !60, size: 32)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5474, file: !56, line: 546, baseType: !60, size: 32)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5471, file: !56, line: 551, baseType: !5480, size: 32, offset: 32)
!5480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5471, file: !56, line: 548, size: 32, elements: !5481)
!5481 = !{!5482, !5483}
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5480, file: !56, line: 549, baseType: !60, size: 32)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5480, file: !56, line: 550, baseType: !60, size: 32)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5471, file: !56, line: 556, baseType: !5485, size: 32, offset: 64)
!5485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5471, file: !56, line: 552, size: 32, elements: !5486)
!5486 = !{!5487, !5488, !5489}
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5485, file: !56, line: 553, baseType: !272, size: 32)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5485, file: !56, line: 554, baseType: !60, size: 32)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5485, file: !56, line: 555, baseType: !60, size: 32)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5471, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5471, file: !56, line: 561, baseType: !5492, size: 32, offset: 128)
!5492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5471, file: !56, line: 558, size: 32, elements: !5493)
!5493 = !{!5494, !5495}
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5492, file: !56, line: 559, baseType: !60, size: 32)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5492, file: !56, line: 560, baseType: !60, size: 32)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5471, file: !56, line: 565, baseType: !5497, size: 32, offset: 160)
!5497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5471, file: !56, line: 562, size: 32, elements: !5498)
!5498 = !{!5499, !5500}
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5497, file: !56, line: 563, baseType: !272, size: 32)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5497, file: !56, line: 564, baseType: !60, size: 32)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5471, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5471, file: !56, line: 570, baseType: !5503, size: 32, offset: 224)
!5503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5471, file: !56, line: 567, size: 32, elements: !5504)
!5504 = !{!5505, !5506}
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5503, file: !56, line: 568, baseType: !60, size: 32)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5503, file: !56, line: 569, baseType: !60, size: 32)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5471, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5471, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5471, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5471, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5471, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5471, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5471, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5471, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5471, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5471, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5471, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5471, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5471, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5471, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5471, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5471, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5471, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!5524 = !{!5525, !5526, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5539}
!5525 = !DILocalVariable(name: "uartx", arg: 1, scope: !5466, file: !2517, line: 52, type: !5469)
!5526 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5466, file: !2517, line: 52, type: !61)
!5527 = !DILocalVariable(name: "uart_clock", scope: !5466, file: !2517, line: 54, type: !61)
!5528 = !DILocalVariable(name: "integer", scope: !5466, file: !2517, line: 54, type: !61)
!5529 = !DILocalVariable(name: "remainder", scope: !5466, file: !2517, line: 54, type: !61)
!5530 = !DILocalVariable(name: "fraction", scope: !5466, file: !2517, line: 54, type: !61)
!5531 = !DILocalVariable(name: "dll_dlm", scope: !5466, file: !2517, line: 55, type: !61)
!5532 = !DILocalVariable(name: "sample_count", scope: !5466, file: !2517, line: 55, type: !61)
!5533 = !DILocalVariable(name: "sample_point", scope: !5466, file: !2517, line: 55, type: !61)
!5534 = !DILocalVariable(name: "temp_lcr", scope: !5466, file: !2517, line: 55, type: !61)
!5535 = !DILocalVariable(name: "fraction_L_mapping", scope: !5466, file: !2517, line: 56, type: !5536)
!5536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !5537)
!5537 = !{!5538}
!5538 = !DISubrange(count: 10)
!5539 = !DILocalVariable(name: "fraction_M_mapping", scope: !5466, file: !2517, line: 57, type: !5536)
!5540 = !DILocation(line: 0, scope: !5466)
!5541 = !DILocation(line: 56, column: 14, scope: !5466)
!5542 = !DILocation(line: 57, column: 5, scope: !5466)
!5543 = !DILocation(line: 57, column: 14, scope: !5466)
!5544 = !DILocation(line: 59, column: 12, scope: !5466)
!5545 = !DILocation(line: 59, column: 23, scope: !5466)
!5546 = !DILocation(line: 60, column: 12, scope: !5466)
!5547 = !DILocation(line: 60, column: 22, scope: !5466)
!5548 = !DILocation(line: 61, column: 12, scope: !5466)
!5549 = !DILocation(line: 61, column: 22, scope: !5466)
!5550 = !DILocation(line: 63, column: 9, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5466, file: !2517, line: 63, column: 9)
!5552 = !DILocation(line: 63, column: 9, scope: !5466)
!5553 = !DILocation(line: 64, column: 22, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5551, file: !2517, line: 63, column: 37)
!5555 = !DILocation(line: 64, column: 45, scope: !5554)
!5556 = !DILocation(line: 65, column: 5, scope: !5554)
!5557 = !DILocation(line: 0, scope: !5551)
!5558 = !DILocation(line: 69, column: 45, scope: !5466)
!5559 = !DILocation(line: 69, column: 26, scope: !5466)
!5560 = !DILocation(line: 70, column: 30, scope: !5466)
!5561 = !DILocation(line: 70, column: 36, scope: !5466)
!5562 = !DILocation(line: 70, column: 63, scope: !5466)
!5563 = !DILocation(line: 71, column: 20, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5466, file: !2517, line: 71, column: 9)
!5565 = !DILocation(line: 71, column: 26, scope: !5564)
!5566 = !DILocation(line: 77, column: 5, scope: !5466)
!5567 = !DILocation(line: 77, column: 25, scope: !5466)
!5568 = !DILocation(line: 78, column: 16, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5466, file: !2517, line: 77, column: 32)
!5570 = distinct !{!5570, !5566, !5571}
!5571 = !DILocation(line: 80, column: 5, scope: !5466)
!5572 = !DILocation(line: 82, column: 35, scope: !5466)
!5573 = !DILocation(line: 82, column: 66, scope: !5466)
!5574 = !DILocation(line: 84, column: 18, scope: !5466)
!5575 = !DILocation(line: 85, column: 34, scope: !5466)
!5576 = !DILocation(line: 85, column: 39, scope: !5466)
!5577 = !DILocation(line: 87, column: 12, scope: !5466)
!5578 = !DILocation(line: 87, column: 22, scope: !5466)
!5579 = !DILocation(line: 89, column: 23, scope: !5466)
!5580 = !DILocation(line: 90, column: 27, scope: !5466)
!5581 = !DILocation(line: 90, column: 16, scope: !5466)
!5582 = !DILocation(line: 91, column: 38, scope: !5466)
!5583 = !DILocation(line: 91, column: 24, scope: !5466)
!5584 = !DILocation(line: 91, column: 28, scope: !5466)
!5585 = !DILocation(line: 92, column: 35, scope: !5466)
!5586 = !DILocation(line: 92, column: 41, scope: !5466)
!5587 = !DILocation(line: 92, column: 20, scope: !5466)
!5588 = !DILocation(line: 92, column: 24, scope: !5466)
!5589 = !DILocation(line: 93, column: 16, scope: !5466)
!5590 = !DILocation(line: 95, column: 12, scope: !5466)
!5591 = !DILocation(line: 95, column: 25, scope: !5466)
!5592 = !DILocation(line: 96, column: 12, scope: !5466)
!5593 = !DILocation(line: 96, column: 25, scope: !5466)
!5594 = !DILocation(line: 98, column: 24, scope: !5466)
!5595 = !DILocation(line: 98, column: 22, scope: !5466)
!5596 = !DILocation(line: 99, column: 24, scope: !5466)
!5597 = !DILocation(line: 99, column: 22, scope: !5466)
!5598 = !DILocation(line: 101, column: 25, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5466, file: !2517, line: 101, column: 9)
!5600 = !DILocation(line: 101, column: 9, scope: !5466)
!5601 = !DILocation(line: 102, column: 16, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5599, file: !2517, line: 101, column: 37)
!5603 = !DILocation(line: 102, column: 22, scope: !5602)
!5604 = !DILocation(line: 103, column: 5, scope: !5602)
!5605 = !DILocation(line: 104, column: 1, scope: !5466)
!5606 = distinct !DISubprogram(name: "uart_set_format", scope: !2517, file: !2517, line: 106, type: !5607, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5609)
!5607 = !DISubroutineType(types: !5608)
!5608 = !{null, !5469, !4673, !4675, !4677}
!5609 = !{!5610, !5611, !5612, !5613, !5614}
!5610 = !DILocalVariable(name: "uartx", arg: 1, scope: !5606, file: !2517, line: 106, type: !5469)
!5611 = !DILocalVariable(name: "word_length", arg: 2, scope: !5606, file: !2517, line: 107, type: !4673)
!5612 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !5606, file: !2517, line: 108, type: !4675)
!5613 = !DILocalVariable(name: "parity", arg: 4, scope: !5606, file: !2517, line: 109, type: !4677)
!5614 = !DILocalVariable(name: "byte", scope: !5606, file: !2517, line: 111, type: !1034)
!5615 = !DILocation(line: 0, scope: !5606)
!5616 = !DILocation(line: 114, column: 19, scope: !5606)
!5617 = !DILocation(line: 115, column: 16, scope: !5606)
!5618 = !DILocation(line: 118, column: 10, scope: !5606)
!5619 = !DILocation(line: 119, column: 5, scope: !5606)
!5620 = !DILocation(line: 124, column: 18, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5606, file: !2517, line: 119, column: 26)
!5622 = !DILocation(line: 125, column: 13, scope: !5621)
!5623 = !DILocation(line: 127, column: 18, scope: !5621)
!5624 = !DILocation(line: 128, column: 13, scope: !5621)
!5625 = !DILocation(line: 130, column: 18, scope: !5621)
!5626 = !DILocation(line: 131, column: 13, scope: !5621)
!5627 = !DILocation(line: 137, column: 10, scope: !5606)
!5628 = !DILocation(line: 138, column: 5, scope: !5606)
!5629 = !DILocation(line: 151, column: 5, scope: !5606)
!5630 = !DILocation(line: 166, column: 18, scope: !5606)
!5631 = !DILocation(line: 166, column: 16, scope: !5606)
!5632 = !DILocation(line: 167, column: 1, scope: !5606)
!5633 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2517, file: !2517, line: 169, type: !5634, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5636)
!5634 = !DISubroutineType(types: !5635)
!5635 = !{null, !5469, !460}
!5636 = !{!5637, !5638, !5639}
!5637 = !DILocalVariable(name: "uartx", arg: 1, scope: !5633, file: !2517, line: 169, type: !5469)
!5638 = !DILocalVariable(name: "byte", arg: 2, scope: !5633, file: !2517, line: 169, type: !460)
!5639 = !DILocalVariable(name: "LSR", scope: !5633, file: !2517, line: 171, type: !1034)
!5640 = !DILocation(line: 0, scope: !5633)
!5641 = !DILocation(line: 173, column: 5, scope: !5633)
!5642 = !DILocation(line: 174, column: 31, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5633, file: !2517, line: 173, column: 15)
!5644 = !DILocation(line: 175, column: 17, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5643, file: !2517, line: 175, column: 13)
!5646 = !DILocation(line: 175, column: 13, scope: !5643)
!5647 = distinct !{!5647, !5641, !5648}
!5648 = !DILocation(line: 179, column: 5, scope: !5633)
!5649 = !DILocation(line: 176, column: 38, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5645, file: !2517, line: 175, column: 39)
!5651 = !DILocation(line: 176, column: 32, scope: !5650)
!5652 = !DILocation(line: 176, column: 36, scope: !5650)
!5653 = !DILocation(line: 180, column: 1, scope: !5633)
!5654 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2517, file: !2517, line: 182, type: !5655, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5657)
!5655 = !DISubroutineType(types: !5656)
!5656 = !{!460, !5469}
!5657 = !{!5658, !5659, !5660}
!5658 = !DILocalVariable(name: "uartx", arg: 1, scope: !5654, file: !2517, line: 182, type: !5469)
!5659 = !DILocalVariable(name: "LSR", scope: !5654, file: !2517, line: 184, type: !1034)
!5660 = !DILocalVariable(name: "byte", scope: !5654, file: !2517, line: 185, type: !460)
!5661 = !DILocation(line: 0, scope: !5654)
!5662 = !DILocation(line: 187, column: 5, scope: !5654)
!5663 = !DILocation(line: 188, column: 31, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5654, file: !2517, line: 187, column: 15)
!5665 = !DILocation(line: 189, column: 17, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5664, file: !2517, line: 189, column: 13)
!5667 = !DILocation(line: 189, column: 13, scope: !5664)
!5668 = distinct !{!5668, !5662, !5669}
!5669 = !DILocation(line: 193, column: 5, scope: !5654)
!5670 = !DILocation(line: 190, column: 48, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5666, file: !2517, line: 189, column: 37)
!5672 = !DILocation(line: 190, column: 20, scope: !5671)
!5673 = !DILocation(line: 195, column: 5, scope: !5654)
!5674 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2517, file: !2517, line: 198, type: !5675, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5677)
!5675 = !DISubroutineType(types: !5676)
!5676 = !{!61, !5469}
!5677 = !{!5678, !5679, !5680}
!5678 = !DILocalVariable(name: "uartx", arg: 1, scope: !5674, file: !2517, line: 198, type: !5469)
!5679 = !DILocalVariable(name: "LSR", scope: !5674, file: !2517, line: 200, type: !1034)
!5680 = !DILocalVariable(name: "value", scope: !5674, file: !2517, line: 201, type: !61)
!5681 = !DILocation(line: 0, scope: !5674)
!5682 = !DILocation(line: 203, column: 27, scope: !5674)
!5683 = !DILocation(line: 204, column: 13, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5674, file: !2517, line: 204, column: 9)
!5685 = !DILocation(line: 204, column: 9, scope: !5674)
!5686 = !DILocation(line: 205, column: 36, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5684, file: !2517, line: 204, column: 33)
!5688 = !DILocation(line: 206, column: 5, scope: !5687)
!5689 = !DILocation(line: 0, scope: !5684)
!5690 = !DILocation(line: 210, column: 5, scope: !5674)
!5691 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2517, file: !2517, line: 213, type: !5692, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5694)
!5692 = !DISubroutineType(types: !5693)
!5693 = !{null, !5469}
!5694 = !{!5695, !5696, !5697}
!5695 = !DILocalVariable(name: "uartx", arg: 1, scope: !5691, file: !2517, line: 213, type: !5469)
!5696 = !DILocalVariable(name: "EFR", scope: !5691, file: !2517, line: 215, type: !1034)
!5697 = !DILocalVariable(name: "LCR", scope: !5691, file: !2517, line: 215, type: !1034)
!5698 = !DILocation(line: 0, scope: !5691)
!5699 = !DILocation(line: 217, column: 18, scope: !5691)
!5700 = !DILocation(line: 219, column: 16, scope: !5691)
!5701 = !DILocation(line: 220, column: 30, scope: !5691)
!5702 = !DILocation(line: 222, column: 30, scope: !5691)
!5703 = !DILocation(line: 222, column: 28, scope: !5691)
!5704 = !DILocation(line: 223, column: 12, scope: !5691)
!5705 = !DILocation(line: 223, column: 22, scope: !5691)
!5706 = !DILocation(line: 225, column: 16, scope: !5691)
!5707 = !DILocation(line: 226, column: 21, scope: !5691)
!5708 = !DILocation(line: 226, column: 25, scope: !5691)
!5709 = !DILocation(line: 228, column: 18, scope: !5691)
!5710 = !DILocation(line: 228, column: 16, scope: !5691)
!5711 = !DILocation(line: 229, column: 1, scope: !5691)
!5712 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2517, file: !2517, line: 231, type: !5713, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5715)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{null, !5469, !460, !460, !460}
!5715 = !{!5716, !5717, !5718, !5719, !5720, !5721}
!5716 = !DILocalVariable(name: "uartx", arg: 1, scope: !5712, file: !2517, line: 231, type: !5469)
!5717 = !DILocalVariable(name: "xon", arg: 2, scope: !5712, file: !2517, line: 232, type: !460)
!5718 = !DILocalVariable(name: "xoff", arg: 3, scope: !5712, file: !2517, line: 233, type: !460)
!5719 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5712, file: !2517, line: 234, type: !460)
!5720 = !DILocalVariable(name: "EFR", scope: !5712, file: !2517, line: 236, type: !1034)
!5721 = !DILocalVariable(name: "LCR", scope: !5712, file: !2517, line: 236, type: !1034)
!5722 = !DILocation(line: 0, scope: !5712)
!5723 = !DILocation(line: 238, column: 18, scope: !5712)
!5724 = !DILocation(line: 240, column: 16, scope: !5712)
!5725 = !DILocation(line: 241, column: 28, scope: !5712)
!5726 = !DILocation(line: 241, column: 21, scope: !5712)
!5727 = !DILocation(line: 241, column: 26, scope: !5712)
!5728 = !DILocation(line: 242, column: 20, scope: !5712)
!5729 = !DILocation(line: 242, column: 12, scope: !5712)
!5730 = !DILocation(line: 242, column: 18, scope: !5712)
!5731 = !DILocation(line: 243, column: 30, scope: !5712)
!5732 = !DILocation(line: 245, column: 30, scope: !5712)
!5733 = !DILocation(line: 245, column: 28, scope: !5712)
!5734 = !DILocation(line: 246, column: 25, scope: !5712)
!5735 = !DILocation(line: 246, column: 12, scope: !5712)
!5736 = !DILocation(line: 246, column: 23, scope: !5712)
!5737 = !DILocation(line: 247, column: 12, scope: !5712)
!5738 = !DILocation(line: 247, column: 22, scope: !5712)
!5739 = !DILocation(line: 249, column: 18, scope: !5712)
!5740 = !DILocation(line: 249, column: 16, scope: !5712)
!5741 = !DILocation(line: 250, column: 1, scope: !5712)
!5742 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2517, file: !2517, line: 252, type: !5692, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5743)
!5743 = !{!5744, !5745}
!5744 = !DILocalVariable(name: "uartx", arg: 1, scope: !5742, file: !2517, line: 252, type: !5469)
!5745 = !DILocalVariable(name: "LCR", scope: !5742, file: !2517, line: 254, type: !1034)
!5746 = !DILocation(line: 0, scope: !5742)
!5747 = !DILocation(line: 256, column: 18, scope: !5742)
!5748 = !DILocation(line: 258, column: 16, scope: !5742)
!5749 = !DILocation(line: 259, column: 24, scope: !5742)
!5750 = !DILocation(line: 259, column: 28, scope: !5742)
!5751 = !DILocation(line: 261, column: 16, scope: !5742)
!5752 = !DILocation(line: 262, column: 18, scope: !5742)
!5753 = !DILocation(line: 262, column: 16, scope: !5742)
!5754 = !DILocation(line: 263, column: 1, scope: !5742)
!5755 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2517, file: !2517, line: 265, type: !5692, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5756)
!5756 = !{!5757, !5758, !5759}
!5757 = !DILocalVariable(name: "uartx", arg: 1, scope: !5755, file: !2517, line: 265, type: !5469)
!5758 = !DILocalVariable(name: "EFR", scope: !5755, file: !2517, line: 267, type: !1034)
!5759 = !DILocalVariable(name: "LCR", scope: !5755, file: !2517, line: 267, type: !1034)
!5760 = !DILocation(line: 0, scope: !5755)
!5761 = !DILocation(line: 269, column: 18, scope: !5755)
!5762 = !DILocation(line: 271, column: 16, scope: !5755)
!5763 = !DILocation(line: 272, column: 30, scope: !5755)
!5764 = !DILocation(line: 274, column: 30, scope: !5755)
!5765 = !DILocation(line: 274, column: 28, scope: !5755)
!5766 = !DILocation(line: 276, column: 16, scope: !5755)
!5767 = !DILocation(line: 277, column: 28, scope: !5755)
!5768 = !DILocation(line: 283, column: 18, scope: !5755)
!5769 = !DILocation(line: 283, column: 16, scope: !5755)
!5770 = !DILocation(line: 284, column: 1, scope: !5755)
!5771 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2517, file: !2517, line: 307, type: !5692, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5772)
!5772 = !{!5773, !5774, !5775}
!5773 = !DILocalVariable(name: "uartx", arg: 1, scope: !5771, file: !2517, line: 307, type: !5469)
!5774 = !DILocalVariable(name: "IER", scope: !5771, file: !2517, line: 309, type: !1034)
!5775 = !DILocalVariable(name: "LCR", scope: !5771, file: !2517, line: 309, type: !1034)
!5776 = !DILocation(line: 0, scope: !5771)
!5777 = !DILocation(line: 311, column: 18, scope: !5771)
!5778 = !DILocation(line: 313, column: 16, scope: !5771)
!5779 = !DILocation(line: 314, column: 26, scope: !5771)
!5780 = !DILocation(line: 316, column: 26, scope: !5771)
!5781 = !DILocation(line: 316, column: 24, scope: !5771)
!5782 = !DILocation(line: 318, column: 19, scope: !5771)
!5783 = !DILocation(line: 318, column: 16, scope: !5771)
!5784 = !DILocation(line: 319, column: 1, scope: !5771)
!5785 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2517, file: !2517, line: 321, type: !5786, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5788)
!5786 = !DISubroutineType(types: !5787)
!5787 = !{null, !5469, !940}
!5788 = !{!5789, !5790, !5791}
!5789 = !DILocalVariable(name: "uartx", arg: 1, scope: !5785, file: !2517, line: 321, type: !5469)
!5790 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5785, file: !2517, line: 321, type: !940)
!5791 = !DILocalVariable(name: "FCR", scope: !5785, file: !2517, line: 323, type: !1034)
!5792 = !DILocation(line: 0, scope: !5785)
!5793 = !DILocation(line: 327, column: 9, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5785, file: !2517, line: 327, column: 9)
!5795 = !DILocation(line: 333, column: 24, scope: !5785)
!5796 = !DILocation(line: 333, column: 28, scope: !5785)
!5797 = !DILocation(line: 334, column: 1, scope: !5785)
!5798 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2517, file: !2517, line: 336, type: !5799, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5802)
!5799 = !DISubroutineType(types: !5800)
!5800 = !{!5801, !5469}
!5801 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !730, line: 55, baseType: !786)
!5802 = !{!5803, !5804, !5805, !5806}
!5803 = !DILocalVariable(name: "uartx", arg: 1, scope: !5798, file: !2517, line: 336, type: !5469)
!5804 = !DILocalVariable(name: "IIR", scope: !5798, file: !2517, line: 338, type: !1034)
!5805 = !DILocalVariable(name: "LSR", scope: !5798, file: !2517, line: 338, type: !1034)
!5806 = !DILocalVariable(name: "type", scope: !5798, file: !2517, line: 339, type: !5801)
!5807 = !DILocation(line: 0, scope: !5798)
!5808 = !DILocation(line: 341, column: 30, scope: !5798)
!5809 = !DILocation(line: 342, column: 13, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5798, file: !2517, line: 342, column: 9)
!5811 = !DILocation(line: 342, column: 9, scope: !5798)
!5812 = !DILocation(line: 346, column: 17, scope: !5798)
!5813 = !DILocation(line: 346, column: 5, scope: !5798)
!5814 = !DILocation(line: 350, column: 13, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5798, file: !2517, line: 346, column: 37)
!5816 = !DILocation(line: 353, column: 35, scope: !5815)
!5817 = !DILocation(line: 354, column: 21, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5815, file: !2517, line: 354, column: 17)
!5819 = !DILocation(line: 363, column: 13, scope: !5815)
!5820 = !DILocation(line: 369, column: 1, scope: !5798)
!5821 = distinct !DISubprogram(name: "uart_verify_error", scope: !2517, file: !2517, line: 371, type: !5822, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5824)
!5822 = !DISubroutineType(types: !5823)
!5823 = !{!940, !5469}
!5824 = !{!5825, !5826, !5827}
!5825 = !DILocalVariable(name: "uartx", arg: 1, scope: !5821, file: !2517, line: 371, type: !5469)
!5826 = !DILocalVariable(name: "LSR", scope: !5821, file: !2517, line: 373, type: !1034)
!5827 = !DILocalVariable(name: "ret", scope: !5821, file: !2517, line: 374, type: !940)
!5828 = !DILocation(line: 0, scope: !5821)
!5829 = !DILocation(line: 376, column: 27, scope: !5821)
!5830 = !DILocation(line: 377, column: 15, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5821, file: !2517, line: 377, column: 9)
!5832 = !DILocation(line: 377, column: 9, scope: !5821)
!5833 = !DILocation(line: 381, column: 5, scope: !5821)
!5834 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2517, file: !2517, line: 384, type: !5692, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5835)
!5835 = !{!5836, !5837}
!5836 = !DILocalVariable(name: "uartx", arg: 1, scope: !5834, file: !2517, line: 384, type: !5469)
!5837 = !DILocalVariable(name: "DMA_EN", scope: !5834, file: !2517, line: 386, type: !1034)
!5838 = !DILocation(line: 0, scope: !5834)
!5839 = !DILocation(line: 388, column: 21, scope: !5834)
!5840 = !DILocation(line: 390, column: 1, scope: !5834)
!5841 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2517, file: !2517, line: 392, type: !5692, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5842)
!5842 = !{!5843}
!5843 = !DILocalVariable(name: "uartx", arg: 1, scope: !5841, file: !2517, line: 392, type: !5469)
!5844 = !DILocation(line: 0, scope: !5841)
!5845 = !DILocation(line: 394, column: 12, scope: !5841)
!5846 = !DILocation(line: 394, column: 16, scope: !5841)
!5847 = !DILocation(line: 395, column: 24, scope: !5841)
!5848 = !DILocation(line: 395, column: 28, scope: !5841)
!5849 = !DILocation(line: 396, column: 21, scope: !5841)
!5850 = !DILocation(line: 396, column: 26, scope: !5841)
!5851 = !DILocation(line: 397, column: 12, scope: !5841)
!5852 = !DILocation(line: 397, column: 18, scope: !5841)
!5853 = !DILocation(line: 399, column: 16, scope: !5841)
!5854 = !DILocation(line: 400, column: 24, scope: !5841)
!5855 = !DILocation(line: 400, column: 28, scope: !5841)
!5856 = !DILocation(line: 401, column: 20, scope: !5841)
!5857 = !DILocation(line: 401, column: 24, scope: !5841)
!5858 = !DILocation(line: 403, column: 16, scope: !5841)
!5859 = !DILocation(line: 404, column: 24, scope: !5841)
!5860 = !DILocation(line: 405, column: 28, scope: !5841)
!5861 = !DILocation(line: 407, column: 16, scope: !5841)
!5862 = !DILocation(line: 408, column: 28, scope: !5841)
!5863 = !DILocation(line: 409, column: 16, scope: !5841)
!5864 = !DILocation(line: 411, column: 25, scope: !5841)
!5865 = !DILocation(line: 412, column: 22, scope: !5841)
!5866 = !DILocation(line: 412, column: 26, scope: !5841)
!5867 = !DILocation(line: 413, column: 12, scope: !5841)
!5868 = !DILocation(line: 413, column: 24, scope: !5841)
!5869 = !DILocation(line: 414, column: 12, scope: !5841)
!5870 = !DILocation(line: 414, column: 22, scope: !5841)
!5871 = !DILocation(line: 415, column: 12, scope: !5841)
!5872 = !DILocation(line: 415, column: 25, scope: !5841)
!5873 = !DILocation(line: 416, column: 12, scope: !5841)
!5874 = !DILocation(line: 416, column: 25, scope: !5841)
!5875 = !DILocation(line: 417, column: 12, scope: !5841)
!5876 = !DILocation(line: 417, column: 23, scope: !5841)
!5877 = !DILocation(line: 418, column: 12, scope: !5841)
!5878 = !DILocation(line: 418, column: 27, scope: !5841)
!5879 = !DILocation(line: 419, column: 12, scope: !5841)
!5880 = !DILocation(line: 419, column: 18, scope: !5841)
!5881 = !DILocation(line: 420, column: 12, scope: !5841)
!5882 = !DILocation(line: 420, column: 23, scope: !5841)
!5883 = !DILocation(line: 421, column: 12, scope: !5841)
!5884 = !DILocation(line: 421, column: 22, scope: !5841)
!5885 = !DILocation(line: 422, column: 12, scope: !5841)
!5886 = !DILocation(line: 422, column: 21, scope: !5841)
!5887 = !DILocation(line: 423, column: 12, scope: !5841)
!5888 = !DILocation(line: 423, column: 19, scope: !5841)
!5889 = !DILocation(line: 424, column: 23, scope: !5841)
!5890 = !DILocation(line: 425, column: 12, scope: !5841)
!5891 = !DILocation(line: 425, column: 22, scope: !5841)
!5892 = !DILocation(line: 426, column: 12, scope: !5841)
!5893 = !DILocation(line: 426, column: 22, scope: !5841)
!5894 = !DILocation(line: 427, column: 1, scope: !5841)
!5895 = distinct !DISubprogram(name: "uart_query_empty", scope: !2517, file: !2517, line: 429, type: !5692, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !5896)
!5896 = !{!5897}
!5897 = !DILocalVariable(name: "uartx", arg: 1, scope: !5895, file: !2517, line: 429, type: !5469)
!5898 = !DILocation(line: 0, scope: !5895)
!5899 = !DILocation(line: 431, column: 5, scope: !5895)
!5900 = !DILocation(line: 431, column: 31, scope: !5895)
!5901 = !DILocation(line: 431, column: 36, scope: !5895)
!5902 = !DILocation(line: 431, column: 12, scope: !5895)
!5903 = distinct !{!5903, !5899, !5904}
!5904 = !DILocation(line: 431, column: 44, scope: !5895)
!5905 = !DILocation(line: 432, column: 1, scope: !5895)
!5906 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !784, file: !784, line: 134, type: !5907, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !5909)
!5907 = !DISubroutineType(types: !5908)
!5908 = !{!4424, !735, !940}
!5909 = !{!5910, !5911, !5912}
!5910 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5906, file: !784, line: 134, type: !735)
!5911 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5906, file: !784, line: 134, type: !940)
!5912 = !DILocalVariable(name: "dma_channel", scope: !5906, file: !784, line: 136, type: !4424)
!5913 = !DILocation(line: 0, scope: !5906)
!5914 = !DILocation(line: 138, column: 5, scope: !5906)
!5915 = !DILocation(line: 140, column: 17, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5917, file: !784, line: 140, column: 17)
!5917 = distinct !DILexicalBlock(scope: !5906, file: !784, line: 138, column: 24)
!5918 = !DILocation(line: 147, column: 17, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5917, file: !784, line: 147, column: 17)
!5920 = !DILocation(line: 154, column: 17, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5917, file: !784, line: 154, column: 17)
!5922 = !DILocation(line: 161, column: 17, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5917, file: !784, line: 161, column: 17)
!5924 = !DILocation(line: 171, column: 5, scope: !5906)
!5925 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !784, file: !784, line: 174, type: !5926, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !5934)
!5926 = !DISubroutineType(types: !5927)
!5927 = !{null, !4424, !5928}
!5928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5929, size: 32)
!5929 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !730, line: 96, baseType: !5930)
!5930 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !730, line: 93, size: 64, elements: !5931)
!5931 = !{!5932, !5933}
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !5930, file: !730, line: 94, baseType: !91, size: 8)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !5930, file: !730, line: 95, baseType: !735, size: 32, offset: 32)
!5934 = !{!5935, !5936}
!5935 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !5925, file: !784, line: 174, type: !4424)
!5936 = !DILocalVariable(name: "user_data", arg: 2, scope: !5925, file: !784, line: 174, type: !5928)
!5937 = !DILocation(line: 0, scope: !5925)
!5938 = !DILocation(line: 176, column: 5, scope: !5925)
!5939 = !DILocation(line: 0, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5925, file: !784, line: 176, column: 26)
!5941 = !DILocation(line: 212, column: 1, scope: !5925)
!5942 = distinct !DISubprogram(name: "uart_enable_dma", scope: !784, file: !784, line: 214, type: !5943, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !5945)
!5943 = !DISubroutineType(types: !5944)
!5944 = !{null, !797}
!5945 = !{!5946}
!5946 = !DILocalVariable(name: "uartx", arg: 1, scope: !5942, file: !784, line: 214, type: !797)
!5947 = !DILocation(line: 0, scope: !5942)
!5948 = !DILocation(line: 216, column: 12, scope: !5942)
!5949 = !DILocation(line: 216, column: 19, scope: !5942)
!5950 = !DILocation(line: 217, column: 1, scope: !5942)
!5951 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !784, file: !784, line: 219, type: !952, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !5952)
!5952 = !{!5953, !5954, !5955, !5956}
!5953 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5951, file: !784, line: 219, type: !862)
!5954 = !DILocalVariable(name: "uart_port", scope: !5951, file: !784, line: 221, type: !735)
!5955 = !DILocalVariable(name: "type", scope: !5951, file: !784, line: 222, type: !5801)
!5956 = !DILocalVariable(name: "uartx", scope: !5951, file: !784, line: 223, type: !797)
!5957 = !DILocation(line: 0, scope: !5951)
!5958 = !DILocation(line: 225, column: 5, scope: !5951)
!5959 = !DILocation(line: 242, column: 13, scope: !5951)
!5960 = !DILocation(line: 243, column: 12, scope: !5951)
!5961 = !DILocation(line: 245, column: 5, scope: !5951)
!5962 = !DILocation(line: 248, column: 13, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5951, file: !784, line: 245, column: 19)
!5964 = !DILocation(line: 249, column: 13, scope: !5963)
!5965 = !DILocation(line: 252, column: 13, scope: !5963)
!5966 = !DILocation(line: 253, column: 13, scope: !5963)
!5967 = !DILocation(line: 263, column: 13, scope: !5963)
!5968 = !DILocation(line: 264, column: 13, scope: !5963)
!5969 = !DILocation(line: 276, column: 13, scope: !5963)
!5970 = !DILocation(line: 278, column: 1, scope: !5951)
!5971 = !DILocation(line: 131, column: 9, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !868, file: !869, line: 131, column: 9)
!5973 = !DILocation(line: 131, column: 9, scope: !868)
!5974 = !DILocation(line: 0, scope: !868)
!5975 = !DILocation(line: 134, column: 49, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5977, file: !869, line: 133, column: 46)
!5977 = distinct !DILexicalBlock(scope: !5978, file: !869, line: 133, column: 9)
!5978 = distinct !DILexicalBlock(scope: !5979, file: !869, line: 133, column: 9)
!5979 = distinct !DILexicalBlock(scope: !5972, file: !869, line: 131, column: 28)
!5980 = !DILocation(line: 134, column: 13, scope: !5976)
!5981 = !DILocation(line: 133, column: 42, scope: !5977)
!5982 = !DILocation(line: 133, column: 23, scope: !5977)
!5983 = !DILocation(line: 133, column: 9, scope: !5978)
!5984 = distinct !{!5984, !5983, !5985}
!5985 = !DILocation(line: 135, column: 9, scope: !5978)
!5986 = !DILocation(line: 136, column: 22, scope: !5979)
!5987 = !DILocation(line: 137, column: 5, scope: !5979)
!5988 = !DILocation(line: 138, column: 5, scope: !868)
!5989 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !878, file: !878, line: 1577, type: !5990, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !5992)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{null, !863, !61}
!5992 = !{!5993, !5994}
!5993 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5989, file: !878, line: 1577, type: !863)
!5994 = !DILocalVariable(name: "priority", arg: 2, scope: !5989, file: !878, line: 1577, type: !61)
!5995 = !DILocation(line: 0, scope: !5989)
!5996 = !DILocation(line: 1582, column: 34, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !878, line: 1581, column: 8)
!5998 = distinct !DILexicalBlock(scope: !5989, file: !878, line: 1579, column: 6)
!5999 = !DILocation(line: 1582, column: 5, scope: !5997)
!6000 = !DILocation(line: 1582, column: 32, scope: !5997)
!6001 = !DILocation(line: 1583, column: 1, scope: !5989)
!6002 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !869, file: !869, line: 141, type: !6003, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6005)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!872, !862}
!6005 = !{!6006, !6007}
!6006 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6002, file: !869, line: 141, type: !862)
!6007 = !DILocalVariable(name: "status", scope: !6002, file: !869, line: 143, type: !872)
!6008 = !DILocation(line: 0, scope: !6002)
!6009 = !DILocation(line: 145, column: 40, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6002, file: !869, line: 145, column: 9)
!6011 = !DILocation(line: 149, column: 9, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6010, file: !869, line: 148, column: 12)
!6013 = !DILocation(line: 153, column: 5, scope: !6002)
!6014 = !DILocation(line: 154, column: 1, scope: !6002)
!6015 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !878, file: !878, line: 1494, type: !6016, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6018)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{null, !863}
!6018 = !{!6019}
!6019 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6015, file: !878, line: 1494, type: !863)
!6020 = !DILocation(line: 0, scope: !6015)
!6021 = !DILocation(line: 1497, column: 91, scope: !6015)
!6022 = !DILocation(line: 1497, column: 61, scope: !6015)
!6023 = !DILocation(line: 1497, column: 40, scope: !6015)
!6024 = !DILocation(line: 1497, column: 3, scope: !6015)
!6025 = !DILocation(line: 1497, column: 46, scope: !6015)
!6026 = !DILocation(line: 1498, column: 1, scope: !6015)
!6027 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !869, file: !869, line: 156, type: !6003, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6028)
!6028 = !{!6029, !6030}
!6029 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6027, file: !869, line: 156, type: !862)
!6030 = !DILocalVariable(name: "status", scope: !6027, file: !869, line: 158, type: !872)
!6031 = !DILocation(line: 0, scope: !6027)
!6032 = !DILocation(line: 160, column: 40, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6027, file: !869, line: 160, column: 9)
!6034 = !DILocation(line: 164, column: 9, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6033, file: !869, line: 163, column: 12)
!6036 = !DILocation(line: 168, column: 5, scope: !6027)
!6037 = !DILocation(line: 169, column: 1, scope: !6027)
!6038 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !878, file: !878, line: 1507, type: !6016, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6039)
!6039 = !{!6040}
!6040 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6038, file: !878, line: 1507, type: !863)
!6041 = !DILocation(line: 0, scope: !6038)
!6042 = !DILocation(line: 1509, column: 65, scope: !6038)
!6043 = !DILocation(line: 1509, column: 44, scope: !6038)
!6044 = !DILocation(line: 1509, column: 32, scope: !6038)
!6045 = !DILocation(line: 1509, column: 3, scope: !6038)
!6046 = !DILocation(line: 1509, column: 39, scope: !6038)
!6047 = !DILocation(line: 1510, column: 1, scope: !6038)
!6048 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !869, file: !869, line: 171, type: !6049, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6051)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{!61, !862}
!6051 = !{!6052, !6053}
!6052 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6048, file: !869, line: 171, type: !862)
!6053 = !DILocalVariable(name: "ret", scope: !6048, file: !869, line: 173, type: !61)
!6054 = !DILocation(line: 0, scope: !6048)
!6055 = !DILocation(line: 175, column: 40, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6048, file: !869, line: 175, column: 9)
!6057 = !DILocation(line: 178, column: 15, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6056, file: !869, line: 177, column: 12)
!6059 = !DILocation(line: 181, column: 5, scope: !6048)
!6060 = !DILocation(line: 182, column: 1, scope: !6048)
!6061 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !878, file: !878, line: 1523, type: !6062, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6064)
!6062 = !DISubroutineType(types: !6063)
!6063 = !{!61, !863}
!6064 = !{!6065}
!6065 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6061, file: !878, line: 1523, type: !863)
!6066 = !DILocation(line: 0, scope: !6061)
!6067 = !DILocation(line: 1525, column: 51, scope: !6061)
!6068 = !DILocation(line: 1525, column: 23, scope: !6061)
!6069 = !DILocation(line: 1525, column: 83, scope: !6061)
!6070 = !DILocation(line: 1525, column: 22, scope: !6061)
!6071 = !DILocation(line: 1525, column: 3, scope: !6061)
!6072 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !869, file: !869, line: 184, type: !6003, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6073)
!6073 = !{!6074, !6075}
!6074 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6072, file: !869, line: 184, type: !862)
!6075 = !DILocalVariable(name: "status", scope: !6072, file: !869, line: 186, type: !872)
!6076 = !DILocation(line: 0, scope: !6072)
!6077 = !DILocation(line: 188, column: 40, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6072, file: !869, line: 188, column: 9)
!6079 = !DILocation(line: 192, column: 9, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6078, file: !869, line: 191, column: 12)
!6081 = !DILocation(line: 196, column: 5, scope: !6072)
!6082 = !DILocation(line: 197, column: 1, scope: !6072)
!6083 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !878, file: !878, line: 1535, type: !6016, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6084)
!6084 = !{!6085}
!6085 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6083, file: !878, line: 1535, type: !863)
!6086 = !DILocation(line: 0, scope: !6083)
!6087 = !DILocation(line: 1537, column: 65, scope: !6083)
!6088 = !DILocation(line: 1537, column: 44, scope: !6083)
!6089 = !DILocation(line: 1537, column: 32, scope: !6083)
!6090 = !DILocation(line: 1537, column: 3, scope: !6083)
!6091 = !DILocation(line: 1537, column: 39, scope: !6083)
!6092 = !DILocation(line: 1538, column: 1, scope: !6083)
!6093 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !869, file: !869, line: 199, type: !6003, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6094)
!6094 = !{!6095, !6096}
!6095 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6093, file: !869, line: 199, type: !862)
!6096 = !DILocalVariable(name: "status", scope: !6093, file: !869, line: 201, type: !872)
!6097 = !DILocation(line: 0, scope: !6093)
!6098 = !DILocation(line: 203, column: 40, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6093, file: !869, line: 203, column: 9)
!6100 = !DILocation(line: 207, column: 9, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6099, file: !869, line: 206, column: 12)
!6102 = !DILocation(line: 211, column: 5, scope: !6093)
!6103 = !DILocation(line: 212, column: 1, scope: !6093)
!6104 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !878, file: !878, line: 1547, type: !6016, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6105)
!6105 = !{!6106}
!6106 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6104, file: !878, line: 1547, type: !863)
!6107 = !DILocation(line: 0, scope: !6104)
!6108 = !DILocation(line: 1549, column: 65, scope: !6104)
!6109 = !DILocation(line: 1549, column: 44, scope: !6104)
!6110 = !DILocation(line: 1549, column: 32, scope: !6104)
!6111 = !DILocation(line: 1549, column: 3, scope: !6104)
!6112 = !DILocation(line: 1549, column: 39, scope: !6104)
!6113 = !DILocation(line: 1550, column: 1, scope: !6104)
!6114 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !869, file: !869, line: 214, type: !6115, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6117)
!6115 = !DISubroutineType(types: !6116)
!6116 = !{!872, !862, !61}
!6117 = !{!6118, !6119, !6120}
!6118 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6114, file: !869, line: 214, type: !862)
!6119 = !DILocalVariable(name: "priority", arg: 2, scope: !6114, file: !869, line: 214, type: !61)
!6120 = !DILocalVariable(name: "status", scope: !6114, file: !869, line: 216, type: !872)
!6121 = !DILocation(line: 0, scope: !6114)
!6122 = !DILocation(line: 218, column: 40, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6114, file: !869, line: 218, column: 9)
!6124 = !DILocation(line: 222, column: 9, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6123, file: !869, line: 221, column: 12)
!6126 = !DILocation(line: 226, column: 5, scope: !6114)
!6127 = !DILocation(line: 227, column: 1, scope: !6114)
!6128 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !869, file: !869, line: 229, type: !6049, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6129)
!6129 = !{!6130, !6131}
!6130 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6128, file: !869, line: 229, type: !862)
!6131 = !DILocalVariable(name: "ret", scope: !6128, file: !869, line: 231, type: !61)
!6132 = !DILocation(line: 0, scope: !6128)
!6133 = !DILocation(line: 233, column: 40, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6128, file: !869, line: 233, column: 9)
!6135 = !DILocation(line: 236, column: 15, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6134, file: !869, line: 235, column: 12)
!6137 = !DILocation(line: 239, column: 5, scope: !6128)
!6138 = !DILocation(line: 240, column: 1, scope: !6128)
!6139 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !878, file: !878, line: 1597, type: !6062, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6140)
!6140 = !{!6141}
!6141 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6139, file: !878, line: 1597, type: !863)
!6142 = !DILocation(line: 0, scope: !6139)
!6143 = !DILocation(line: 1603, column: 23, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6145, file: !878, line: 1602, column: 8)
!6145 = distinct !DILexicalBlock(scope: !6139, file: !878, line: 1600, column: 6)
!6146 = !DILocation(line: 1603, column: 60, scope: !6144)
!6147 = !DILocation(line: 1604, column: 1, scope: !6139)
!6148 = distinct !DISubprogram(name: "isrC_main", scope: !869, file: !869, line: 248, type: !870, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6149)
!6149 = !{!6150, !6151}
!6150 = !DILocalVariable(name: "status", scope: !6148, file: !869, line: 250, type: !872)
!6151 = !DILocalVariable(name: "irq_number", scope: !6148, file: !869, line: 251, type: !862)
!6152 = !DILocation(line: 0, scope: !6148)
!6153 = !DILocation(line: 253, column: 5, scope: !6148)
!6154 = !DILocation(line: 255, column: 35, scope: !6148)
!6155 = !DILocation(line: 256, column: 40, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6148, file: !869, line: 256, column: 9)
!6157 = !DILocation(line: 259, column: 48, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6156, file: !869, line: 259, column: 16)
!6159 = !DILocation(line: 259, column: 62, scope: !6158)
!6160 = !DILocation(line: 259, column: 16, scope: !6156)
!6161 = !DILocation(line: 261, column: 9, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6158, file: !869, line: 259, column: 71)
!6163 = !DILocation(line: 262, column: 9, scope: !6162)
!6164 = !DILocation(line: 264, column: 55, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6158, file: !869, line: 263, column: 12)
!6166 = !DILocation(line: 264, column: 41, scope: !6165)
!6167 = !DILocation(line: 264, column: 53, scope: !6165)
!6168 = !DILocation(line: 265, column: 41, scope: !6165)
!6169 = !DILocation(line: 265, column: 9, scope: !6165)
!6170 = !DILocation(line: 269, column: 5, scope: !6148)
!6171 = !DILocation(line: 270, column: 1, scope: !6148)
!6172 = distinct !DISubprogram(name: "get_current_irq", scope: !869, file: !869, line: 242, type: !3771, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6173)
!6173 = !{!6174}
!6174 = !DILocalVariable(name: "irq_num", scope: !6172, file: !869, line: 244, type: !61)
!6175 = !DILocation(line: 244, column: 31, scope: !6172)
!6176 = !DILocation(line: 244, column: 36, scope: !6172)
!6177 = !DILocation(line: 0, scope: !6172)
!6178 = !DILocation(line: 245, column: 21, scope: !6172)
!6179 = !DILocation(line: 245, column: 5, scope: !6172)
!6180 = distinct !DISubprogram(name: "get_pending_irq", scope: !869, file: !869, line: 121, type: !3771, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !293)
!6181 = !DILocation(line: 123, column: 19, scope: !6180)
!6182 = !DILocation(line: 123, column: 51, scope: !6180)
!6183 = !DILocation(line: 123, column: 5, scope: !6180)
!6184 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !869, file: !869, line: 272, type: !6185, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6188)
!6185 = !DISubroutineType(types: !6186)
!6186 = !{!872, !862, !6187}
!6187 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !716, line: 175, baseType: !951)
!6188 = !{!6189, !6190, !6191}
!6189 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6184, file: !869, line: 272, type: !862)
!6190 = !DILocalVariable(name: "callback", arg: 2, scope: !6184, file: !869, line: 272, type: !6187)
!6191 = !DILocalVariable(name: "mask", scope: !6184, file: !869, line: 274, type: !61)
!6192 = !DILocation(line: 0, scope: !6184)
!6193 = !DILocation(line: 276, column: 40, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6184, file: !869, line: 276, column: 9)
!6195 = !DILocation(line: 280, column: 12, scope: !6184)
!6196 = !DILocation(line: 281, column: 5, scope: !6184)
!6197 = !DILocation(line: 282, column: 37, scope: !6184)
!6198 = !DILocation(line: 282, column: 51, scope: !6184)
!6199 = !DILocation(line: 283, column: 37, scope: !6184)
!6200 = !DILocation(line: 283, column: 49, scope: !6184)
!6201 = !DILocation(line: 284, column: 5, scope: !6184)
!6202 = !DILocation(line: 286, column: 5, scope: !6184)
!6203 = !DILocation(line: 287, column: 1, scope: !6184)
!6204 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !869, file: !869, line: 289, type: !6205, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6207)
!6205 = !DISubroutineType(types: !6206)
!6206 = !{!872, !1002}
!6207 = !{!6208}
!6208 = !DILocalVariable(name: "mask", arg: 1, scope: !6204, file: !869, line: 289, type: !1002)
!6209 = !DILocation(line: 0, scope: !6204)
!6210 = !DILocation(line: 291, column: 13, scope: !6204)
!6211 = !DILocation(line: 291, column: 11, scope: !6204)
!6212 = !DILocation(line: 292, column: 5, scope: !6204)
!6213 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !869, file: !869, line: 295, type: !6214, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !873, retainedNodes: !6216)
!6214 = !DISubroutineType(types: !6215)
!6215 = !{!872, !61}
!6216 = !{!6217}
!6217 = !DILocalVariable(name: "mask", arg: 1, scope: !6213, file: !869, line: 295, type: !61)
!6218 = !DILocation(line: 0, scope: !6213)
!6219 = !DILocation(line: 297, column: 5, scope: !6213)
!6220 = !DILocation(line: 298, column: 5, scope: !6213)
!6221 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2521, file: !2521, line: 51, type: !3771, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6222)
!6222 = !{!6223, !6224}
!6223 = !DILocalVariable(name: "mask", scope: !6221, file: !2521, line: 53, type: !61)
!6224 = !DILocalVariable(name: "priority", scope: !6221, file: !2521, line: 55, type: !61)
!6225 = !DILocation(line: 521, column: 3, scope: !6226, inlinedAt: !6230)
!6226 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !6227, file: !6227, line: 517, type: !3771, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6228)
!6227 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!6228 = !{!6229}
!6229 = !DILocalVariable(name: "result", scope: !6226, file: !6227, line: 519, type: !61)
!6230 = distinct !DILocation(line: 53, column: 21, scope: !6221)
!6231 = !{i64 457580}
!6232 = !DILocation(line: 0, scope: !6226, inlinedAt: !6230)
!6233 = !DILocation(line: 0, scope: !6221)
!6234 = !DILocalVariable(name: "value", arg: 1, scope: !6235, file: !6227, line: 532, type: !61)
!6235 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !6227, file: !6227, line: 532, type: !6236, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6238)
!6236 = !DISubroutineType(types: !6237)
!6237 = !{null, !61}
!6238 = !{!6234}
!6239 = !DILocation(line: 0, scope: !6235, inlinedAt: !6240)
!6240 = distinct !DILocation(line: 56, column: 5, scope: !6221)
!6241 = !DILocation(line: 534, column: 3, scope: !6235, inlinedAt: !6240)
!6242 = !{i64 457913}
!6243 = !DILocation(line: 456, column: 3, scope: !6244, inlinedAt: !6245)
!6244 = distinct !DISubprogram(name: "__DMB", scope: !2637, file: !2637, line: 454, type: !291, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !293)
!6245 = distinct !DILocation(line: 57, column: 5, scope: !6221)
!6246 = !{i64 430669}
!6247 = !DILocation(line: 434, column: 3, scope: !6248, inlinedAt: !6249)
!6248 = distinct !DISubprogram(name: "__ISB", scope: !2637, file: !2637, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !293)
!6249 = distinct !DILocation(line: 58, column: 5, scope: !6221)
!6250 = !{i64 430084}
!6251 = !DILocation(line: 59, column: 5, scope: !6221)
!6252 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2521, file: !2521, line: 62, type: !6236, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6253)
!6253 = !{!6254}
!6254 = !DILocalVariable(name: "mask", arg: 1, scope: !6252, file: !2521, line: 62, type: !61)
!6255 = !DILocation(line: 0, scope: !6252)
!6256 = !DILocation(line: 0, scope: !6235, inlinedAt: !6257)
!6257 = distinct !DILocation(line: 64, column: 5, scope: !6252)
!6258 = !DILocation(line: 534, column: 3, scope: !6235, inlinedAt: !6257)
!6259 = !DILocation(line: 456, column: 3, scope: !6244, inlinedAt: !6260)
!6260 = distinct !DILocation(line: 65, column: 5, scope: !6252)
!6261 = !DILocation(line: 434, column: 3, scope: !6248, inlinedAt: !6262)
!6262 = distinct !DILocation(line: 66, column: 5, scope: !6252)
!6263 = !DILocation(line: 67, column: 1, scope: !6252)
!6264 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2521, file: !2521, line: 69, type: !291, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6265)
!6265 = !{!6266, !6267}
!6266 = !DILocalVariable(name: "irq_number", scope: !6264, file: !2521, line: 71, type: !862)
!6267 = !DILocalVariable(name: "mask", scope: !6264, file: !2521, line: 72, type: !61)
!6268 = !DILocation(line: 72, column: 21, scope: !6264)
!6269 = !DILocation(line: 0, scope: !6264)
!6270 = !DILocation(line: 73, column: 5, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6264, file: !2521, line: 73, column: 5)
!6272 = !DILocation(line: 74, column: 9, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6274, file: !2521, line: 73, column: 85)
!6274 = distinct !DILexicalBlock(scope: !6271, file: !2521, line: 73, column: 5)
!6275 = !DILocation(line: 73, column: 81, scope: !6274)
!6276 = !DILocation(line: 73, column: 53, scope: !6274)
!6277 = distinct !{!6277, !6270, !6278}
!6278 = !DILocation(line: 75, column: 5, scope: !6271)
!6279 = !DILocation(line: 76, column: 5, scope: !6264)
!6280 = !DILocation(line: 77, column: 1, scope: !6264)
!6281 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !878, file: !878, line: 1507, type: !6016, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6282)
!6282 = !{!6283}
!6283 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6281, file: !878, line: 1507, type: !863)
!6284 = !DILocation(line: 0, scope: !6281)
!6285 = !DILocation(line: 1509, column: 65, scope: !6281)
!6286 = !DILocation(line: 1509, column: 44, scope: !6281)
!6287 = !DILocation(line: 1509, column: 32, scope: !6281)
!6288 = !DILocation(line: 1509, column: 3, scope: !6281)
!6289 = !DILocation(line: 1509, column: 39, scope: !6281)
!6290 = !DILocation(line: 1510, column: 1, scope: !6281)
!6291 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2521, file: !2521, line: 79, type: !291, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6292)
!6292 = !{!6293, !6294}
!6293 = !DILocalVariable(name: "irq_number", scope: !6291, file: !2521, line: 81, type: !862)
!6294 = !DILocalVariable(name: "mask", scope: !6291, file: !2521, line: 82, type: !61)
!6295 = !DILocation(line: 82, column: 21, scope: !6291)
!6296 = !DILocation(line: 0, scope: !6291)
!6297 = !DILocation(line: 84, column: 5, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6291, file: !2521, line: 84, column: 5)
!6299 = !DILocation(line: 85, column: 9, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6301, file: !2521, line: 84, column: 85)
!6301 = distinct !DILexicalBlock(scope: !6298, file: !2521, line: 84, column: 5)
!6302 = !DILocation(line: 84, column: 81, scope: !6301)
!6303 = !DILocation(line: 84, column: 53, scope: !6301)
!6304 = distinct !{!6304, !6297, !6305}
!6305 = !DILocation(line: 86, column: 5, scope: !6298)
!6306 = !DILocation(line: 87, column: 5, scope: !6291)
!6307 = !DILocation(line: 88, column: 1, scope: !6291)
!6308 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !878, file: !878, line: 1494, type: !6016, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6309)
!6309 = !{!6310}
!6310 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6308, file: !878, line: 1494, type: !863)
!6311 = !DILocation(line: 0, scope: !6308)
!6312 = !DILocation(line: 1497, column: 91, scope: !6308)
!6313 = !DILocation(line: 1497, column: 61, scope: !6308)
!6314 = !DILocation(line: 1497, column: 40, scope: !6308)
!6315 = !DILocation(line: 1497, column: 3, scope: !6308)
!6316 = !DILocation(line: 1497, column: 46, scope: !6308)
!6317 = !DILocation(line: 1498, column: 1, scope: !6308)
!6318 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2521, file: !2521, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6319)
!6319 = !{!6320}
!6320 = !DILocalVariable(name: "irq_number", scope: !6318, file: !2521, line: 92, type: !862)
!6321 = !DILocation(line: 0, scope: !6318)
!6322 = !DILocation(line: 93, column: 5, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6318, file: !2521, line: 93, column: 5)
!6324 = !DILocation(line: 94, column: 9, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6326, file: !2521, line: 93, column: 85)
!6326 = distinct !DILexicalBlock(scope: !6323, file: !2521, line: 93, column: 5)
!6327 = !DILocation(line: 93, column: 81, scope: !6326)
!6328 = !DILocation(line: 93, column: 53, scope: !6326)
!6329 = distinct !{!6329, !6322, !6330}
!6330 = !DILocation(line: 95, column: 5, scope: !6323)
!6331 = !DILocation(line: 96, column: 1, scope: !6318)
!6332 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !878, file: !878, line: 1547, type: !6016, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6333)
!6333 = !{!6334}
!6334 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6332, file: !878, line: 1547, type: !863)
!6335 = !DILocation(line: 0, scope: !6332)
!6336 = !DILocation(line: 1549, column: 65, scope: !6332)
!6337 = !DILocation(line: 1549, column: 44, scope: !6332)
!6338 = !DILocation(line: 1549, column: 32, scope: !6332)
!6339 = !DILocation(line: 1549, column: 3, scope: !6332)
!6340 = !DILocation(line: 1549, column: 39, scope: !6332)
!6341 = !DILocation(line: 1550, column: 1, scope: !6332)
!6342 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2521, file: !2521, line: 98, type: !6003, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6343)
!6343 = !{!6344}
!6344 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6342, file: !2521, line: 98, type: !862)
!6345 = !DILocation(line: 0, scope: !6342)
!6346 = !DILocation(line: 100, column: 24, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6342, file: !2521, line: 100, column: 9)
!6348 = !DILocation(line: 104, column: 5, scope: !6342)
!6349 = !DILocation(line: 105, column: 5, scope: !6342)
!6350 = !DILocation(line: 106, column: 1, scope: !6342)
!6351 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2521, file: !2521, line: 45, type: !952, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !6352)
!6352 = !{!6353}
!6353 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6351, file: !2521, line: 45, type: !862)
!6354 = !DILocation(line: 0, scope: !6351)
!6355 = !DILocation(line: 47, column: 54, scope: !6351)
!6356 = !DILocation(line: 47, column: 16, scope: !6351)
!6357 = !DILocation(line: 445, column: 3, scope: !6358, inlinedAt: !6359)
!6358 = distinct !DISubprogram(name: "__DSB", scope: !2637, file: !2637, line: 443, type: !291, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !293)
!6359 = distinct !DILocation(line: 48, column: 5, scope: !6351)
!6360 = !{i64 430380}
!6361 = !DILocation(line: 49, column: 1, scope: !6351)
!6362 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2521, file: !2521, line: 114, type: !3771, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !293)
!6363 = !DILocation(line: 116, column: 19, scope: !6362)
!6364 = !DILocation(line: 116, column: 24, scope: !6362)
!6365 = !DILocation(line: 116, column: 5, scope: !6362)
!6366 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !965, file: !965, line: 71, type: !6367, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6369)
!6367 = !DISubroutineType(types: !6368)
!6368 = !{null, !88, !61}
!6369 = !{!6370, !6371, !6372, !6466, !6467, !6468}
!6370 = !DILocalVariable(name: "MTDData", arg: 1, scope: !6366, file: !965, line: 71, type: !88)
!6371 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !6366, file: !965, line: 71, type: !61)
!6372 = !DILocalVariable(name: "D", scope: !6366, file: !965, line: 73, type: !6373)
!6373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6374, size: 32)
!6374 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1158, line: 193, baseType: !6375)
!6375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1158, line: 134, size: 1824, elements: !6376)
!6376 = !{!6377, !6378, !6379, !6385, !6391, !6392, !6399, !6400, !6407, !6408, !6409, !6410, !6417, !6418, !6448, !6449, !6450, !6451, !6452, !6453, !6454, !6455, !6456, !6457, !6458, !6459, !6460, !6461, !6462, !6463, !6464, !6465}
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !6375, file: !1158, line: 136, baseType: !61, size: 32)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !6375, file: !1158, line: 137, baseType: !762, size: 32, offset: 32)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !6375, file: !1158, line: 138, baseType: !6380, size: 32, offset: 64)
!6380 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1242, line: 56, baseType: !6381)
!6381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6382, size: 32)
!6382 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1242, line: 54, size: 8, elements: !6383)
!6383 = !{!6384}
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6382, file: !1242, line: 55, baseType: !460, size: 8)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !6375, file: !1158, line: 139, baseType: !6386, size: 32, offset: 96)
!6386 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1242, line: 46, baseType: !6387)
!6387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6388, size: 32)
!6388 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1242, line: 44, size: 8, elements: !6389)
!6389 = !{!6390}
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6388, file: !1242, line: 45, baseType: !460, size: 8)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !6375, file: !1158, line: 140, baseType: !1254, size: 8, offset: 128)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !6375, file: !1158, line: 143, baseType: !6393, size: 32, offset: 160)
!6393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6394, size: 32)
!6394 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1260, line: 146, baseType: !6395)
!6395 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 143, size: 64, elements: !6396)
!6396 = !{!6397, !6398}
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !6395, file: !1260, line: 144, baseType: !61, size: 32)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !6395, file: !1260, line: 145, baseType: !61, size: 32, offset: 32)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !6375, file: !1158, line: 144, baseType: !762, size: 32, offset: 192)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !6375, file: !1158, line: 145, baseType: !6401, size: 32, offset: 224)
!6401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6402, size: 32)
!6402 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1260, line: 152, baseType: !6403)
!6403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 149, size: 64, elements: !6404)
!6404 = !{!6405, !6406}
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !6403, file: !1260, line: 150, baseType: !61, size: 32)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !6403, file: !1260, line: 151, baseType: !61, size: 32, offset: 32)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !6375, file: !1158, line: 146, baseType: !762, size: 32, offset: 256)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !6375, file: !1158, line: 147, baseType: !61, size: 32, offset: 288)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !6375, file: !1158, line: 148, baseType: !762, size: 32, offset: 320)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !6375, file: !1158, line: 151, baseType: !6411, size: 1024, offset: 352)
!6411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6412, size: 1024, elements: !1283)
!6412 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1260, line: 170, baseType: !6413)
!6413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 167, size: 64, elements: !6414)
!6414 = !{!6415, !6416}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !6413, file: !1260, line: 168, baseType: !61, size: 32)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !6413, file: !1260, line: 169, baseType: !61, size: 32, offset: 32)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !6375, file: !1158, line: 155, baseType: !1285, size: 32, offset: 1376)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !6375, file: !1158, line: 156, baseType: !6419, size: 32, offset: 1408)
!6419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6420, size: 32)
!6420 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1158, line: 124, baseType: !6421)
!6421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1158, line: 90, size: 200, elements: !6422)
!6422 = !{!6423, !6424, !6425, !6426, !6427, !6428, !6429, !6430, !6431, !6432, !6433, !6434, !6435, !6436, !6437, !6438, !6439, !6440, !6441, !6442, !6443, !6444, !6445, !6446, !6447}
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !6421, file: !1158, line: 91, baseType: !460, size: 8)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !6421, file: !1158, line: 92, baseType: !460, size: 8, offset: 8)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !6421, file: !1158, line: 94, baseType: !460, size: 8, offset: 16)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !6421, file: !1158, line: 95, baseType: !460, size: 8, offset: 24)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !6421, file: !1158, line: 96, baseType: !460, size: 8, offset: 32)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !6421, file: !1158, line: 98, baseType: !460, size: 8, offset: 40)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !6421, file: !1158, line: 99, baseType: !460, size: 8, offset: 48)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !6421, file: !1158, line: 100, baseType: !460, size: 8, offset: 56)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !6421, file: !1158, line: 101, baseType: !460, size: 8, offset: 64)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !6421, file: !1158, line: 103, baseType: !460, size: 8, offset: 72)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !6421, file: !1158, line: 104, baseType: !460, size: 8, offset: 80)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !6421, file: !1158, line: 106, baseType: !460, size: 8, offset: 88)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !6421, file: !1158, line: 107, baseType: !460, size: 8, offset: 96)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !6421, file: !1158, line: 108, baseType: !460, size: 8, offset: 104)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !6421, file: !1158, line: 109, baseType: !460, size: 8, offset: 112)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !6421, file: !1158, line: 110, baseType: !460, size: 8, offset: 120)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !6421, file: !1158, line: 111, baseType: !460, size: 8, offset: 128)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !6421, file: !1158, line: 112, baseType: !460, size: 8, offset: 136)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !6421, file: !1158, line: 114, baseType: !460, size: 8, offset: 144)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !6421, file: !1158, line: 115, baseType: !460, size: 8, offset: 152)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !6421, file: !1158, line: 118, baseType: !460, size: 8, offset: 160)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6421, file: !1158, line: 119, baseType: !460, size: 8, offset: 168)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !6421, file: !1158, line: 120, baseType: !460, size: 8, offset: 176)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !6421, file: !1158, line: 121, baseType: !460, size: 8, offset: 184)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6421, file: !1158, line: 122, baseType: !460, size: 8, offset: 192)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !6375, file: !1158, line: 157, baseType: !61, size: 32, offset: 1440)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !6375, file: !1158, line: 158, baseType: !1034, size: 16, offset: 1472)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !6375, file: !1158, line: 159, baseType: !1034, size: 16, offset: 1488)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !6375, file: !1158, line: 163, baseType: !1034, size: 16, offset: 1504)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !6375, file: !1158, line: 164, baseType: !1034, size: 16, offset: 1520)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !6375, file: !1158, line: 167, baseType: !460, size: 8, offset: 1536)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !6375, file: !1158, line: 168, baseType: !1324, size: 24, offset: 1544)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !6375, file: !1158, line: 169, baseType: !460, size: 8, offset: 1568)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !6375, file: !1158, line: 170, baseType: !460, size: 8, offset: 1576)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !6375, file: !1158, line: 173, baseType: !1034, size: 16, offset: 1584)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !6375, file: !1158, line: 174, baseType: !61, size: 32, offset: 1600)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !6375, file: !1158, line: 175, baseType: !61, size: 32, offset: 1632)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !6375, file: !1158, line: 178, baseType: !91, size: 8, offset: 1664)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !6375, file: !1158, line: 179, baseType: !91, size: 8, offset: 1672)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !6375, file: !1158, line: 182, baseType: !1335, size: 32, offset: 1696)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6375, file: !1158, line: 186, baseType: !1335, size: 32, offset: 1728)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6375, file: !1158, line: 187, baseType: !1340, size: 32, offset: 1760)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !6375, file: !1158, line: 188, baseType: !1340, size: 32, offset: 1792)
!6466 = !DILocalVariable(name: "i", scope: !6366, file: !965, line: 74, type: !61)
!6467 = !DILocalVariable(name: "data_cnt", scope: !6366, file: !965, line: 74, type: !61)
!6468 = !DILocalVariable(name: "p_data", scope: !6366, file: !965, line: 75, type: !1002)
!6469 = !DILocation(line: 0, scope: !6366)
!6470 = !DILocation(line: 77, column: 16, scope: !6366)
!6471 = !DILocation(line: 79, column: 53, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6473, file: !965, line: 79, column: 5)
!6473 = distinct !DILexicalBlock(scope: !6366, file: !965, line: 79, column: 5)
!6474 = !DILocation(line: 79, column: 5, scope: !6473)
!6475 = !DILocation(line: 79, column: 41, scope: !6473)
!6476 = !DILocation(line: 77, column: 47, scope: !6366)
!6477 = !DILocation(line: 80, column: 13, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6479, file: !965, line: 80, column: 13)
!6479 = distinct !DILexicalBlock(scope: !6472, file: !965, line: 79, column: 80)
!6480 = !DILocation(line: 80, column: 21, scope: !6478)
!6481 = !DILocation(line: 80, column: 13, scope: !6479)
!6482 = !DILocation(line: 81, column: 13, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6484, file: !965, line: 81, column: 13)
!6484 = distinct !DILexicalBlock(scope: !6485, file: !965, line: 81, column: 13)
!6485 = distinct !DILexicalBlock(scope: !6486, file: !965, line: 81, column: 13)
!6486 = distinct !DILexicalBlock(scope: !6478, file: !965, line: 80, column: 36)
!6487 = !DILocation(line: 79, column: 65, scope: !6472)
!6488 = !DILocation(line: 79, column: 70, scope: !6472)
!6489 = distinct !{!6489, !6474, !6490}
!6490 = !DILocation(line: 84, column: 5, scope: !6473)
!6491 = !DILocation(line: 85, column: 1, scope: !6366)
!6492 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !965, file: !965, line: 93, type: !3519, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6493)
!6493 = !{!6494, !6495}
!6494 = !DILocalVariable(name: "num", arg: 1, scope: !6492, file: !965, line: 93, type: !61)
!6495 = !DILocalVariable(name: "ret", scope: !6492, file: !965, line: 95, type: !18)
!6496 = !DILocation(line: 0, scope: !6492)
!6497 = !DILocation(line: 100, column: 9, scope: !6492)
!6498 = !DILocation(line: 102, column: 5, scope: !6492)
!6499 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !965, file: !965, line: 110, type: !6500, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6503)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{null, !6502}
!6502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!6503 = !{!6504, !6505}
!6504 = !DILocalVariable(name: "CS", arg: 1, scope: !6499, file: !965, line: 110, type: !6502)
!6505 = !DILocalVariable(name: "val", scope: !6499, file: !965, line: 112, type: !61)
!6506 = !DILocation(line: 0, scope: !6499)
!6507 = !DILocation(line: 114, column: 5, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6509, file: !965, line: 114, column: 5)
!6509 = distinct !DILexicalBlock(scope: !6499, file: !965, line: 114, column: 5)
!6510 = !DILocation(line: 116, column: 16, scope: !6499)
!6511 = !DILocation(line: 117, column: 9, scope: !6499)
!6512 = !DILocation(line: 122, column: 13, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6514, file: !965, line: 121, column: 27)
!6514 = distinct !DILexicalBlock(scope: !6515, file: !965, line: 121, column: 16)
!6515 = distinct !DILexicalBlock(scope: !6499, file: !965, line: 117, column: 9)
!6516 = !DILocation(line: 127, column: 9, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6518, file: !965, line: 127, column: 9)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !965, line: 127, column: 9)
!6519 = distinct !DILexicalBlock(scope: !6520, file: !965, line: 127, column: 9)
!6520 = distinct !DILexicalBlock(scope: !6514, file: !965, line: 125, column: 12)
!6521 = !DILocation(line: 0, scope: !6515)
!6522 = !DILocation(line: 134, column: 5, scope: !6499)
!6523 = !DILocation(line: 134, column: 19, scope: !6499)
!6524 = !DILocation(line: 134, column: 35, scope: !6499)
!6525 = !DILocation(line: 134, column: 12, scope: !6499)
!6526 = distinct !{!6526, !6522, !6527}
!6527 = !DILocation(line: 134, column: 57, scope: !6499)
!6528 = !DILocation(line: 135, column: 19, scope: !6499)
!6529 = !DILocation(line: 135, column: 34, scope: !6499)
!6530 = !DILocation(line: 135, column: 12, scope: !6499)
!6531 = !DILocation(line: 135, column: 5, scope: !6499)
!6532 = distinct !{!6532, !6531, !6533}
!6533 = !DILocation(line: 135, column: 50, scope: !6499)
!6534 = !DILocation(line: 130, column: 9, scope: !6499)
!6535 = !DILocation(line: 138, column: 24, scope: !6499)
!6536 = !DILocation(line: 139, column: 1, scope: !6499)
!6537 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !965, file: !965, line: 148, type: !6500, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6538)
!6538 = !{!6539, !6540}
!6539 = !DILocalVariable(name: "CS", arg: 1, scope: !6537, file: !965, line: 148, type: !6502)
!6540 = !DILocalVariable(name: "val", scope: !6537, file: !965, line: 150, type: !61)
!6541 = !DILocation(line: 0, scope: !6537)
!6542 = !DILocation(line: 153, column: 16, scope: !6537)
!6543 = !DILocation(line: 154, column: 9, scope: !6537)
!6544 = !DILocation(line: 155, column: 24, scope: !6537)
!6545 = !DILocation(line: 158, column: 5, scope: !6537)
!6546 = !DILocation(line: 158, column: 18, scope: !6537)
!6547 = !DILocation(line: 158, column: 32, scope: !6537)
!6548 = distinct !{!6548, !6545, !6549}
!6549 = !DILocation(line: 158, column: 49, scope: !6537)
!6550 = !DILocation(line: 163, column: 16, scope: !6537)
!6551 = !DILocation(line: 164, column: 9, scope: !6537)
!6552 = !DILocation(line: 165, column: 24, scope: !6537)
!6553 = !DILocation(line: 168, column: 5, scope: !6537)
!6554 = !DILocation(line: 168, column: 18, scope: !6537)
!6555 = !DILocation(line: 168, column: 32, scope: !6537)
!6556 = distinct !{!6556, !6553, !6557}
!6557 = !DILocation(line: 168, column: 46, scope: !6537)
!6558 = !DILocation(line: 174, column: 10, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6537, file: !965, line: 174, column: 9)
!6560 = !DILocation(line: 174, column: 25, scope: !6559)
!6561 = !DILocation(line: 174, column: 9, scope: !6537)
!6562 = !DILocation(line: 175, column: 9, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6564, file: !965, line: 175, column: 9)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !965, line: 175, column: 9)
!6565 = distinct !DILexicalBlock(scope: !6559, file: !965, line: 174, column: 36)
!6566 = !DILocation(line: 176, column: 5, scope: !6565)
!6567 = !DILocation(line: 179, column: 1, scope: !6537)
!6568 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !965, file: !965, line: 186, type: !6569, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6571)
!6569 = !DISubroutineType(types: !6570)
!6570 = !{!61, !6502}
!6571 = !{!6572, !6573, !6574}
!6572 = !DILocalVariable(name: "CS", arg: 1, scope: !6568, file: !965, line: 186, type: !6502)
!6573 = !DILocalVariable(name: "val", scope: !6568, file: !965, line: 188, type: !61)
!6574 = !DILocalVariable(name: "misc_ctl", scope: !6568, file: !965, line: 189, type: !61)
!6575 = !DILocation(line: 0, scope: !6568)
!6576 = !DILocation(line: 204, column: 16, scope: !6568)
!6577 = !DILocation(line: 208, column: 12, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6568, file: !965, line: 208, column: 9)
!6579 = !DILocation(line: 208, column: 9, scope: !6568)
!6580 = !DILocation(line: 212, column: 20, scope: !6568)
!6581 = !DILocation(line: 215, column: 1, scope: !6568)
!6582 = !DILocation(line: 215, column: 15, scope: !6568)
!6583 = !DILocation(line: 215, column: 29, scope: !6568)
!6584 = !DILocation(line: 215, column: 8, scope: !6568)
!6585 = distinct !{!6585, !6581, !6586}
!6586 = !DILocation(line: 215, column: 46, scope: !6568)
!6587 = !DILocation(line: 216, column: 22, scope: !6568)
!6588 = !DILocation(line: 216, column: 36, scope: !6568)
!6589 = !DILocation(line: 216, column: 9, scope: !6568)
!6590 = distinct !{!6590, !6589, !6591}
!6591 = !DILocation(line: 216, column: 47, scope: !6568)
!6592 = !DILocation(line: 218, column: 13, scope: !6568)
!6593 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !965, file: !965, line: 227, type: !6500, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6594)
!6594 = !{!6595}
!6595 = !DILocalVariable(name: "CS", arg: 1, scope: !6593, file: !965, line: 227, type: !6502)
!6596 = !DILocation(line: 0, scope: !6593)
!6597 = !DILocation(line: 235, column: 5, scope: !6593)
!6598 = !DILocation(line: 236, column: 5, scope: !6593)
!6599 = !DILocation(line: 238, column: 1, scope: !6593)
!6600 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !965, file: !965, line: 249, type: !6601, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6603)
!6601 = !DISubroutineType(types: !6602)
!6602 = !{null, !6502, !772}
!6603 = !{!6604, !6605, !6606, !6607, !6608}
!6604 = !DILocalVariable(name: "CS", arg: 1, scope: !6600, file: !965, line: 249, type: !6502)
!6605 = !DILocalVariable(name: "cmd", arg: 2, scope: !6600, file: !965, line: 249, type: !772)
!6606 = !DILocalVariable(name: "cmdi", scope: !6600, file: !965, line: 251, type: !61)
!6607 = !DILocalVariable(name: "cmdo", scope: !6600, file: !965, line: 251, type: !61)
!6608 = !DILocalVariable(name: "len", scope: !6600, file: !965, line: 252, type: !460)
!6609 = !DILocation(line: 0, scope: !6600)
!6610 = !DILocation(line: 254, column: 46, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6612, file: !965, line: 254, column: 5)
!6612 = distinct !DILexicalBlock(scope: !6600, file: !965, line: 254, column: 5)
!6613 = !DILocation(line: 254, column: 5, scope: !6612)
!6614 = !DILocation(line: 255, column: 22, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6611, file: !965, line: 254, column: 103)
!6616 = !DILocation(line: 255, column: 59, scope: !6615)
!6617 = !DILocation(line: 255, column: 51, scope: !6615)
!6618 = !DILocation(line: 254, column: 65, scope: !6611)
!6619 = !DILocation(line: 254, column: 97, scope: !6611)
!6620 = distinct !{!6620, !6613, !6621}
!6621 = !DILocation(line: 256, column: 5, scope: !6612)
!6622 = !DILocation(line: 258, column: 9, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6600, file: !965, line: 258, column: 9)
!6624 = !DILocation(line: 262, column: 5, scope: !6600)
!6625 = !DILocation(line: 263, column: 33, scope: !6600)
!6626 = !DILocation(line: 264, column: 25, scope: !6600)
!6627 = !DILocation(line: 265, column: 24, scope: !6600)
!6628 = !DILocation(line: 266, column: 5, scope: !6600)
!6629 = !DILocation(line: 268, column: 5, scope: !6600)
!6630 = !DILocation(line: 269, column: 1, scope: !6600)
!6631 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !965, file: !965, line: 281, type: !6632, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6634)
!6632 = !DISubroutineType(types: !6633)
!6633 = !{null, !6502, !4902, !772, !772}
!6634 = !{!6635, !6636, !6637, !6638, !6639, !6640}
!6635 = !DILocalVariable(name: "CS", arg: 1, scope: !6631, file: !965, line: 281, type: !6502)
!6636 = !DILocalVariable(name: "cmd", arg: 2, scope: !6631, file: !965, line: 281, type: !4902)
!6637 = !DILocalVariable(name: "address", arg: 3, scope: !6631, file: !965, line: 281, type: !772)
!6638 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !6631, file: !965, line: 281, type: !772)
!6639 = !DILocalVariable(name: "cmd1", scope: !6631, file: !965, line: 283, type: !61)
!6640 = !DILocalVariable(name: "cmd2", scope: !6631, file: !965, line: 283, type: !61)
!6641 = !DILocation(line: 0, scope: !6631)
!6642 = !DILocation(line: 285, column: 12, scope: !6631)
!6643 = !DILocation(line: 287, column: 23, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6631, file: !965, line: 287, column: 9)
!6645 = !DILocation(line: 287, column: 9, scope: !6631)
!6646 = !DILocation(line: 288, column: 22, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6644, file: !965, line: 287, column: 31)
!6648 = !DILocation(line: 288, column: 55, scope: !6647)
!6649 = !DILocation(line: 288, column: 53, scope: !6647)
!6650 = !DILocation(line: 289, column: 5, scope: !6647)
!6651 = !DILocation(line: 290, column: 22, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6644, file: !965, line: 289, column: 12)
!6653 = !DILocation(line: 290, column: 53, scope: !6652)
!6654 = !DILocation(line: 290, column: 51, scope: !6652)
!6655 = !DILocation(line: 291, column: 21, scope: !6652)
!6656 = !DILocation(line: 0, scope: !6644)
!6657 = !DILocation(line: 294, column: 33, scope: !6631)
!6658 = !DILocation(line: 295, column: 38, scope: !6631)
!6659 = !DILocation(line: 296, column: 41, scope: !6631)
!6660 = !DILocation(line: 296, column: 25, scope: !6631)
!6661 = !DILocation(line: 297, column: 24, scope: !6631)
!6662 = !DILocation(line: 299, column: 5, scope: !6631)
!6663 = !DILocation(line: 300, column: 5, scope: !6631)
!6664 = !DILocation(line: 302, column: 1, scope: !6631)
!6665 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !965, file: !965, line: 312, type: !6666, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6668)
!6666 = !DISubroutineType(types: !6667)
!6667 = !{!61, !772, !772}
!6668 = !{!6669, !6670}
!6669 = !DILocalVariable(name: "cmd", arg: 1, scope: !6665, file: !965, line: 312, type: !772)
!6670 = !DILocalVariable(name: "address", arg: 2, scope: !6665, file: !965, line: 312, type: !772)
!6671 = !DILocation(line: 0, scope: !6665)
!6672 = !DILocation(line: 314, column: 14, scope: !6665)
!6673 = !DILocation(line: 314, column: 44, scope: !6665)
!6674 = !DILocation(line: 314, column: 82, scope: !6665)
!6675 = !DILocation(line: 314, column: 75, scope: !6665)
!6676 = !DILocation(line: 314, column: 5, scope: !6665)
!6677 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !965, file: !965, line: 332, type: !6678, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6681)
!6678 = !DISubroutineType(types: !6679)
!6679 = !{!61, !772, !772, !6680, !1002}
!6680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32)
!6681 = !{!6682, !6683, !6684, !6685, !6686, !6694, !6695, !6696}
!6682 = !DILocalVariable(name: "cmd", arg: 1, scope: !6677, file: !965, line: 332, type: !772)
!6683 = !DILocalVariable(name: "address", arg: 2, scope: !6677, file: !965, line: 332, type: !772)
!6684 = !DILocalVariable(name: "p_data", arg: 3, scope: !6677, file: !965, line: 332, type: !6680)
!6685 = !DILocalVariable(name: "length", arg: 4, scope: !6677, file: !965, line: 332, type: !1002)
!6686 = !DILocalVariable(name: "tmp", scope: !6677, file: !965, line: 334, type: !6687)
!6687 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1158, line: 202, baseType: !6688)
!6688 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1158, line: 198, size: 32, elements: !6689)
!6689 = !{!6690, !6691, !6693}
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !6688, file: !1158, line: 199, baseType: !61, size: 32)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !6688, file: !1158, line: 200, baseType: !6692, size: 32)
!6692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1034, size: 32, elements: !465)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !6688, file: !1158, line: 201, baseType: !459, size: 32)
!6694 = !DILocalVariable(name: "cmd1", scope: !6677, file: !965, line: 335, type: !61)
!6695 = !DILocalVariable(name: "cmd2", scope: !6677, file: !965, line: 335, type: !61)
!6696 = !DILocalVariable(name: "i", scope: !6677, file: !965, line: 336, type: !61)
!6697 = !DILocation(line: 0, scope: !6677)
!6698 = !DILocation(line: 334, column: 5, scope: !6677)
!6699 = !DILocation(line: 334, column: 16, scope: !6677)
!6700 = !DILocation(line: 338, column: 12, scope: !6677)
!6701 = !DILocation(line: 340, column: 17, scope: !6677)
!6702 = !DILocation(line: 342, column: 17, scope: !6677)
!6703 = !DILocation(line: 342, column: 9, scope: !6677)
!6704 = !DILocation(line: 342, column: 15, scope: !6677)
!6705 = !DILocation(line: 344, column: 22, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !965, line: 343, column: 29)
!6707 = distinct !DILexicalBlock(scope: !6708, file: !965, line: 343, column: 5)
!6708 = distinct !DILexicalBlock(scope: !6677, file: !965, line: 343, column: 5)
!6709 = !DILocation(line: 343, column: 5, scope: !6708)
!6710 = !DILocation(line: 344, column: 21, scope: !6706)
!6711 = !DILocation(line: 344, column: 9, scope: !6706)
!6712 = !DILocation(line: 344, column: 19, scope: !6706)
!6713 = !DILocation(line: 345, column: 18, scope: !6706)
!6714 = !DILocation(line: 343, column: 25, scope: !6707)
!6715 = !DILocation(line: 343, column: 19, scope: !6707)
!6716 = distinct !{!6716, !6709, !6717}
!6717 = !DILocation(line: 346, column: 5, scope: !6708)
!6718 = !DILocation(line: 347, column: 16, scope: !6677)
!6719 = !DILocation(line: 348, column: 16, scope: !6677)
!6720 = !DILocation(line: 348, column: 15, scope: !6677)
!6721 = !DILocation(line: 339, column: 17, scope: !6677)
!6722 = !DILocation(line: 339, column: 52, scope: !6677)
!6723 = !DILocation(line: 339, column: 45, scope: !6677)
!6724 = !DILocation(line: 348, column: 13, scope: !6677)
!6725 = !DILocation(line: 349, column: 38, scope: !6677)
!6726 = !DILocation(line: 351, column: 1, scope: !6677)
!6727 = !DILocation(line: 350, column: 5, scope: !6677)
!6728 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !965, file: !965, line: 367, type: !6729, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6731)
!6729 = !DISubroutineType(types: !6730)
!6730 = !{null, !61, !88, !940}
!6731 = !{!6732, !6733, !6734, !6735, !6736, !6737}
!6732 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !6728, file: !965, line: 367, type: !61)
!6733 = !DILocalVariable(name: "buff", arg: 2, scope: !6728, file: !965, line: 367, type: !88)
!6734 = !DILocalVariable(name: "length", arg: 3, scope: !6728, file: !965, line: 367, type: !940)
!6735 = !DILocalVariable(name: "i", scope: !6728, file: !965, line: 369, type: !61)
!6736 = !DILocalVariable(name: "p_data", scope: !6728, file: !965, line: 370, type: !762)
!6737 = !DILocalVariable(name: "tmp", scope: !6728, file: !965, line: 371, type: !6687)
!6738 = !DILocation(line: 0, scope: !6728)
!6739 = !DILocation(line: 371, column: 5, scope: !6728)
!6740 = !DILocation(line: 371, column: 13, scope: !6728)
!6741 = !DILocation(line: 373, column: 18, scope: !6728)
!6742 = !DILocation(line: 376, column: 15, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6728, file: !965, line: 376, column: 9)
!6744 = !DILocation(line: 376, column: 30, scope: !6743)
!6745 = !DILocation(line: 376, column: 11, scope: !6743)
!6746 = !DILocation(line: 376, column: 9, scope: !6728)
!6747 = !DILocation(line: 377, column: 23, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !965, line: 377, column: 9)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !965, line: 377, column: 9)
!6750 = distinct !DILexicalBlock(scope: !6743, file: !965, line: 376, column: 41)
!6751 = !DILocation(line: 377, column: 9, scope: !6749)
!6752 = !DILocation(line: 378, column: 13, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6748, file: !965, line: 377, column: 80)
!6754 = !DILocation(line: 377, column: 41, scope: !6748)
!6755 = !DILocation(line: 377, column: 54, scope: !6748)
!6756 = !DILocation(line: 377, column: 67, scope: !6748)
!6757 = distinct !{!6757, !6751, !6758}
!6758 = !DILocation(line: 379, column: 9, scope: !6749)
!6759 = !DILocation(line: 382, column: 37, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6743, file: !965, line: 382, column: 14)
!6761 = !DILocation(line: 382, column: 16, scope: !6760)
!6762 = !DILocation(line: 0, scope: !6760)
!6763 = !DILocation(line: 382, column: 14, scope: !6743)
!6764 = !DILocation(line: 391, column: 9, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !965, line: 391, column: 9)
!6766 = distinct !DILexicalBlock(scope: !6760, file: !965, line: 390, column: 13)
!6767 = !DILocation(line: 383, column: 9, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !965, line: 383, column: 9)
!6769 = distinct !DILexicalBlock(scope: !6760, file: !965, line: 382, column: 49)
!6770 = !DILocation(line: 384, column: 26, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !965, line: 383, column: 80)
!6772 = distinct !DILexicalBlock(scope: !6768, file: !965, line: 383, column: 9)
!6773 = !DILocation(line: 384, column: 24, scope: !6771)
!6774 = !DILocation(line: 385, column: 47, scope: !6771)
!6775 = !DILocation(line: 385, column: 26, scope: !6771)
!6776 = !DILocation(line: 385, column: 24, scope: !6771)
!6777 = !DILocation(line: 386, column: 13, scope: !6771)
!6778 = !DILocation(line: 383, column: 41, scope: !6772)
!6779 = !DILocation(line: 383, column: 54, scope: !6772)
!6780 = !DILocation(line: 383, column: 67, scope: !6772)
!6781 = !DILocation(line: 383, column: 23, scope: !6772)
!6782 = distinct !{!6782, !6767, !6783}
!6783 = !DILocation(line: 387, column: 9, scope: !6768)
!6784 = !DILocation(line: 392, column: 13, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !965, line: 392, column: 13)
!6786 = distinct !DILexicalBlock(scope: !6787, file: !965, line: 391, column: 61)
!6787 = distinct !DILexicalBlock(scope: !6765, file: !965, line: 391, column: 9)
!6788 = !DILocation(line: 393, column: 36, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6790, file: !965, line: 392, column: 51)
!6790 = distinct !DILexicalBlock(scope: !6785, file: !965, line: 392, column: 13)
!6791 = !DILocation(line: 393, column: 29, scope: !6789)
!6792 = !DILocation(line: 393, column: 17, scope: !6789)
!6793 = !DILocation(line: 393, column: 27, scope: !6789)
!6794 = !DILocation(line: 392, column: 47, scope: !6790)
!6795 = !DILocation(line: 392, column: 27, scope: !6790)
!6796 = !DILocation(line: 392, column: 31, scope: !6790)
!6797 = distinct !{!6797, !6784, !6798}
!6798 = !DILocation(line: 394, column: 13, scope: !6785)
!6799 = !DILocation(line: 395, column: 13, scope: !6786)
!6800 = !DILocation(line: 391, column: 41, scope: !6787)
!6801 = !DILocation(line: 391, column: 54, scope: !6787)
!6802 = !DILocation(line: 391, column: 23, scope: !6787)
!6803 = distinct !{!6803, !6764, !6804}
!6804 = !DILocation(line: 396, column: 9, scope: !6765)
!6805 = !DILocation(line: 398, column: 1, scope: !6728)
!6806 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !965, file: !965, line: 414, type: !6807, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6809)
!6807 = !DISubroutineType(types: !6808)
!6808 = !{null, !6502, !4901, !762, !6502, !6502}
!6809 = !{!6810, !6811, !6812, !6813, !6814, !6815, !6816, !6817, !6818, !6819}
!6810 = !DILocalVariable(name: "CS", arg: 1, scope: !6806, file: !965, line: 414, type: !6502)
!6811 = !DILocalVariable(name: "cmd", arg: 2, scope: !6806, file: !965, line: 414, type: !4901)
!6812 = !DILocalVariable(name: "data", arg: 3, scope: !6806, file: !965, line: 414, type: !762)
!6813 = !DILocalVariable(name: "outl", arg: 4, scope: !6806, file: !965, line: 414, type: !6502)
!6814 = !DILocalVariable(name: "inl", arg: 5, scope: !6806, file: !965, line: 414, type: !6502)
!6815 = !DILocalVariable(name: "tmp", scope: !6806, file: !965, line: 416, type: !61)
!6816 = !DILocalVariable(name: "i", scope: !6806, file: !965, line: 417, type: !61)
!6817 = !DILocalVariable(name: "j", scope: !6806, file: !965, line: 417, type: !61)
!6818 = !DILocalVariable(name: "p_data", scope: !6806, file: !965, line: 418, type: !762)
!6819 = !DILocalVariable(name: "p_tmp", scope: !6806, file: !965, line: 418, type: !762)
!6820 = !DILocation(line: 0, scope: !6806)
!6821 = !DILocation(line: 416, column: 5, scope: !6806)
!6822 = !DILocation(line: 422, column: 60, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !965, line: 422, column: 5)
!6824 = distinct !DILexicalBlock(scope: !6806, file: !965, line: 422, column: 5)
!6825 = !DILocation(line: 422, column: 5, scope: !6824)
!6826 = !DILocation(line: 423, column: 25, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !965, line: 423, column: 9)
!6828 = distinct !DILexicalBlock(scope: !6823, file: !965, line: 422, column: 83)
!6829 = !DILocation(line: 423, column: 32, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6827, file: !965, line: 423, column: 9)
!6831 = !DILocation(line: 423, column: 9, scope: !6827)
!6832 = !DILocation(line: 424, column: 24, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6830, file: !965, line: 423, column: 59)
!6834 = !DILocation(line: 424, column: 13, scope: !6833)
!6835 = !DILocation(line: 424, column: 22, scope: !6833)
!6836 = !DILocation(line: 423, column: 50, scope: !6830)
!6837 = !DILocation(line: 423, column: 55, scope: !6830)
!6838 = !DILocation(line: 423, column: 39, scope: !6830)
!6839 = distinct !{!6839, !6831, !6840}
!6840 = !DILocation(line: 425, column: 9, scope: !6827)
!6841 = !DILocation(line: 426, column: 9, scope: !6828)
!6842 = !DILocation(line: 0, scope: !6824)
!6843 = !DILocation(line: 422, column: 75, scope: !6823)
!6844 = distinct !{!6844, !6825, !6845}
!6845 = !DILocation(line: 427, column: 5, scope: !6824)
!6846 = !DILocation(line: 428, column: 25, scope: !6806)
!6847 = !DILocation(line: 429, column: 26, scope: !6806)
!6848 = !DILocation(line: 429, column: 24, scope: !6806)
!6849 = !DILocation(line: 430, column: 5, scope: !6806)
!6850 = !DILocation(line: 431, column: 5, scope: !6806)
!6851 = !DILocation(line: 433, column: 67, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !965, line: 433, column: 5)
!6853 = distinct !DILexicalBlock(scope: !6806, file: !965, line: 433, column: 5)
!6854 = !DILocation(line: 433, column: 5, scope: !6853)
!6855 = !DILocation(line: 433, column: 56, scope: !6853)
!6856 = !DILocation(line: 434, column: 17, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6852, file: !965, line: 433, column: 100)
!6858 = !DILocation(line: 434, column: 15, scope: !6857)
!6859 = !DILocation(line: 433, column: 74, scope: !6852)
!6860 = !DILocation(line: 433, column: 79, scope: !6852)
!6861 = !DILocation(line: 433, column: 87, scope: !6852)
!6862 = distinct !{!6862, !6854, !6863}
!6863 = !DILocation(line: 435, column: 5, scope: !6853)
!6864 = !DILocation(line: 437, column: 1, scope: !6806)
!6865 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !965, file: !965, line: 462, type: !6866, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6868)
!6866 = !DISubroutineType(types: !6867)
!6867 = !{null, !6502, !4901}
!6868 = !{!6869, !6870, !6871, !6872, !6873}
!6869 = !DILocalVariable(name: "CS", arg: 1, scope: !6865, file: !965, line: 462, type: !6502)
!6870 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !6865, file: !965, line: 462, type: !4901)
!6871 = !DILocalVariable(name: "i", scope: !6865, file: !965, line: 464, type: !61)
!6872 = !DILocalVariable(name: "val", scope: !6865, file: !965, line: 465, type: !61)
!6873 = !DILocalVariable(name: "status", scope: !6874, file: !965, line: 492, type: !460)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !965, line: 491, column: 47)
!6875 = distinct !DILexicalBlock(scope: !6876, file: !965, line: 491, column: 13)
!6876 = distinct !DILexicalBlock(scope: !6865, file: !965, line: 477, column: 17)
!6877 = !DILocation(line: 0, scope: !6865)
!6878 = !DILocation(line: 467, column: 17, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6865, file: !965, line: 467, column: 9)
!6880 = !DILocation(line: 467, column: 9, scope: !6865)
!6881 = !DILocation(line: 474, column: 11, scope: !6865)
!6882 = !DILocation(line: 477, column: 5, scope: !6865)
!6883 = !DILocation(line: 478, column: 17, scope: !6876)
!6884 = !DILocation(line: 478, column: 9, scope: !6876)
!6885 = !DILocation(line: 481, column: 17, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !965, line: 481, column: 17)
!6887 = distinct !DILexicalBlock(scope: !6876, file: !965, line: 478, column: 29)
!6888 = !DILocation(line: 481, column: 17, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !965, line: 481, column: 17)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !965, line: 481, column: 17)
!6891 = distinct !DILexicalBlock(scope: !6886, file: !965, line: 481, column: 17)
!6892 = !DILocation(line: 481, column: 17, scope: !6890)
!6893 = !DILocation(line: 481, column: 17, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !965, line: 481, column: 17)
!6895 = distinct !DILexicalBlock(scope: !6891, file: !965, line: 481, column: 17)
!6896 = !DILocation(line: 484, column: 17, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6887, file: !965, line: 484, column: 17)
!6898 = !DILocation(line: 484, column: 17, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6900, file: !965, line: 484, column: 17)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !965, line: 484, column: 17)
!6901 = distinct !DILexicalBlock(scope: !6897, file: !965, line: 484, column: 17)
!6902 = !DILocation(line: 484, column: 17, scope: !6900)
!6903 = !DILocation(line: 484, column: 17, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !965, line: 484, column: 17)
!6905 = distinct !DILexicalBlock(scope: !6901, file: !965, line: 484, column: 17)
!6906 = !DILocation(line: 0, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !965, line: 487, column: 17)
!6908 = distinct !DILexicalBlock(scope: !6887, file: !965, line: 487, column: 17)
!6909 = !DILocation(line: 487, column: 17, scope: !6908)
!6910 = !DILocation(line: 487, column: 17, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !965, line: 487, column: 17)
!6912 = distinct !DILexicalBlock(scope: !6907, file: !965, line: 487, column: 17)
!6913 = !DILocation(line: 487, column: 17, scope: !6912)
!6914 = !DILocation(line: 487, column: 17, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !965, line: 487, column: 17)
!6916 = distinct !DILexicalBlock(scope: !6907, file: !965, line: 487, column: 17)
!6917 = !DILocation(line: 487, column: 17, scope: !6916)
!6918 = !DILocation(line: 491, column: 23, scope: !6875)
!6919 = !DILocation(line: 491, column: 13, scope: !6875)
!6920 = !DILocation(line: 491, column: 28, scope: !6875)
!6921 = !DILocation(line: 491, column: 13, scope: !6876)
!6922 = !DILocation(line: 492, column: 13, scope: !6874)
!6923 = !DILocation(line: 494, column: 13, scope: !6874)
!6924 = !DILocation(line: 0, scope: !6874)
!6925 = !DILocation(line: 495, column: 17, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6874, file: !965, line: 494, column: 16)
!6927 = !DILocation(line: 496, column: 22, scope: !6874)
!6928 = !DILocation(line: 496, column: 31, scope: !6874)
!6929 = !DILocation(line: 496, column: 29, scope: !6874)
!6930 = !DILocation(line: 496, column: 13, scope: !6926)
!6931 = distinct !{!6931, !6923, !6932}
!6932 = !DILocation(line: 496, column: 45, scope: !6874)
!6933 = !DILocation(line: 497, column: 9, scope: !6875)
!6934 = !DILocation(line: 503, column: 25, scope: !6876)
!6935 = !DILocation(line: 497, column: 9, scope: !6874)
!6936 = !DILocation(line: 500, column: 70, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6875, file: !965, line: 499, column: 14)
!6938 = !DILocation(line: 500, column: 60, scope: !6937)
!6939 = !DILocation(line: 500, column: 13, scope: !6937)
!6940 = !DILocation(line: 503, column: 15, scope: !6876)
!6941 = !DILocation(line: 503, column: 11, scope: !6876)
!6942 = distinct !{!6942, !6882, !6943}
!6943 = !DILocation(line: 504, column: 5, scope: !6865)
!6944 = !DILocation(line: 505, column: 1, scope: !6865)
!6945 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !965, file: !965, line: 514, type: !6946, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6948)
!6946 = !DISubroutineType(types: !6947)
!6947 = !{null, !6502, !762, !460}
!6948 = !{!6949, !6950, !6951}
!6949 = !DILocalVariable(name: "CS", arg: 1, scope: !6945, file: !965, line: 514, type: !6502)
!6950 = !DILocalVariable(name: "id", arg: 2, scope: !6945, file: !965, line: 514, type: !762)
!6951 = !DILocalVariable(name: "cmd", arg: 3, scope: !6945, file: !965, line: 514, type: !460)
!6952 = !DILocation(line: 0, scope: !6945)
!6953 = !DILocation(line: 517, column: 5, scope: !6945)
!6954 = !DILocation(line: 518, column: 1, scope: !6945)
!6955 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !965, file: !965, line: 521, type: !6956, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6958)
!6956 = !DISubroutineType(types: !6957)
!6957 = !{null, !6502, !762}
!6958 = !{!6959, !6960}
!6959 = !DILocalVariable(name: "CS", arg: 1, scope: !6955, file: !965, line: 521, type: !6502)
!6960 = !DILocalVariable(name: "id", arg: 2, scope: !6955, file: !965, line: 521, type: !762)
!6961 = !DILocation(line: 0, scope: !6955)
!6962 = !DILocation(line: 523, column: 5, scope: !6955)
!6963 = !DILocation(line: 524, column: 1, scope: !6955)
!6964 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !965, file: !965, line: 536, type: !6965, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !293)
!6965 = !DISubroutineType(types: !6966)
!6966 = !{!6967}
!6967 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !968, line: 57, baseType: !967)
!6968 = !DILocation(line: 540, column: 5, scope: !6964)
!6969 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !965, file: !965, line: 561, type: !6970, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !293)
!6970 = !DISubroutineType(types: !6971)
!6971 = !{!6972}
!6972 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !968, line: 66, baseType: !975)
!6973 = !DILocation(line: 564, column: 15, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6969, file: !965, line: 564, column: 9)
!6975 = !DILocation(line: 564, column: 31, scope: !6974)
!6976 = !DILocation(line: 564, column: 45, scope: !6974)
!6977 = !DILocation(line: 0, scope: !6974)
!6978 = !DILocation(line: 569, column: 1, scope: !6969)
!6979 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !965, file: !965, line: 580, type: !6980, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6982)
!6980 = !DISubroutineType(types: !6981)
!6981 = !{!91, !762}
!6982 = !{!6983, !6984}
!6983 = !DILocalVariable(name: "buffer", arg: 1, scope: !6979, file: !965, line: 580, type: !762)
!6984 = !DILocalVariable(name: "i", scope: !6979, file: !965, line: 582, type: !7)
!6985 = !DILocation(line: 0, scope: !6979)
!6986 = !DILocation(line: 583, column: 5, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6979, file: !965, line: 583, column: 5)
!6988 = !DILocation(line: 584, column: 9, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !965, line: 583, column: 29)
!6990 = distinct !DILexicalBlock(scope: !6987, file: !965, line: 583, column: 5)
!6991 = !DILocation(line: 584, column: 19, scope: !6989)
!6992 = !DILocation(line: 583, column: 25, scope: !6990)
!6993 = !DILocation(line: 583, column: 19, scope: !6990)
!6994 = distinct !{!6994, !6986, !6995}
!6995 = !DILocation(line: 585, column: 5, scope: !6987)
!6996 = !DILocation(line: 586, column: 5, scope: !6979)
!6997 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !965, file: !965, line: 613, type: !291, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !6998)
!6998 = !{!6999}
!6999 = !DILocalVariable(name: "D", scope: !6997, file: !965, line: 615, type: !6373)
!7000 = !DILocation(line: 0, scope: !6997)
!7001 = !DILocation(line: 616, column: 32, scope: !6997)
!7002 = !DILocation(line: 616, column: 37, scope: !6997)
!7003 = !DILocation(line: 616, column: 27, scope: !6997)
!7004 = !DILocation(line: 617, column: 44, scope: !6997)
!7005 = !DILocation(line: 617, column: 31, scope: !6997)
!7006 = !DILocation(line: 617, column: 28, scope: !6997)
!7007 = !DILocation(line: 618, column: 32, scope: !6997)
!7008 = !DILocation(line: 618, column: 31, scope: !6997)
!7009 = !DILocation(line: 618, column: 29, scope: !6997)
!7010 = !DILocation(line: 621, column: 31, scope: !6997)
!7011 = !DILocation(line: 621, column: 24, scope: !6997)
!7012 = !DILocation(line: 622, column: 34, scope: !6997)
!7013 = !DILocation(line: 622, column: 27, scope: !6997)
!7014 = !DILocation(line: 623, column: 32, scope: !6997)
!7015 = !DILocation(line: 623, column: 25, scope: !6997)
!7016 = !DILocation(line: 624, column: 33, scope: !6997)
!7017 = !DILocation(line: 624, column: 26, scope: !6997)
!7018 = !DILocation(line: 625, column: 33, scope: !6997)
!7019 = !DILocation(line: 625, column: 26, scope: !6997)
!7020 = !DILocation(line: 629, column: 32, scope: !6997)
!7021 = !DILocation(line: 629, column: 47, scope: !6997)
!7022 = !DILocation(line: 629, column: 25, scope: !6997)
!7023 = !DILocation(line: 630, column: 32, scope: !6997)
!7024 = !DILocation(line: 630, column: 47, scope: !6997)
!7025 = !DILocation(line: 630, column: 25, scope: !6997)
!7026 = !DILocation(line: 633, column: 24, scope: !6997)
!7027 = !DILocation(line: 633, column: 31, scope: !6997)
!7028 = !DILocation(line: 633, column: 36, scope: !6997)
!7029 = !DILocation(line: 633, column: 28, scope: !6997)
!7030 = !DILocation(line: 633, column: 5, scope: !6997)
!7031 = !DILocation(line: 635, column: 5, scope: !6997)
!7032 = !DILocation(line: 636, column: 1, scope: !6997)
!7033 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !965, file: !965, line: 641, type: !291, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !293)
!7034 = !DILocation(line: 644, column: 26, scope: !7033)
!7035 = !DILocation(line: 644, column: 24, scope: !7033)
!7036 = !DILocation(line: 645, column: 29, scope: !7033)
!7037 = !DILocation(line: 645, column: 27, scope: !7033)
!7038 = !DILocation(line: 646, column: 27, scope: !7033)
!7039 = !DILocation(line: 646, column: 25, scope: !7033)
!7040 = !DILocation(line: 647, column: 28, scope: !7033)
!7041 = !DILocation(line: 647, column: 26, scope: !7033)
!7042 = !DILocation(line: 648, column: 27, scope: !7033)
!7043 = !DILocation(line: 648, column: 25, scope: !7033)
!7044 = !DILocation(line: 652, column: 32, scope: !7033)
!7045 = !DILocation(line: 652, column: 47, scope: !7033)
!7046 = !DILocation(line: 652, column: 25, scope: !7033)
!7047 = !DILocation(line: 655, column: 24, scope: !7033)
!7048 = !DILocation(line: 655, column: 5, scope: !7033)
!7049 = !DILocation(line: 657, column: 5, scope: !7033)
!7050 = !DILocation(line: 660, column: 9, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7033, file: !965, line: 660, column: 9)
!7052 = !DILocation(line: 660, column: 59, scope: !7051)
!7053 = !DILocation(line: 660, column: 38, scope: !7051)
!7054 = !DILocation(line: 660, column: 37, scope: !7051)
!7055 = !DILocation(line: 660, column: 33, scope: !7051)
!7056 = !DILocation(line: 660, column: 9, scope: !7033)
!7057 = !DILocation(line: 661, column: 9, scope: !7051)
!7058 = distinct !{!7058, !7057, !7059}
!7059 = !DILocation(line: 661, column: 18, scope: !7051)
!7060 = !DILocation(line: 662, column: 1, scope: !7033)
!7061 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !965, file: !965, line: 668, type: !291, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !293)
!7062 = !DILocation(line: 671, column: 9, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7061, file: !965, line: 671, column: 9)
!7064 = !DILocation(line: 671, column: 40, scope: !7063)
!7065 = !DILocation(line: 671, column: 9, scope: !7061)
!7066 = !DILocation(line: 672, column: 47, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7063, file: !965, line: 671, column: 46)
!7068 = !DILocation(line: 672, column: 40, scope: !7067)
!7069 = !DILocation(line: 673, column: 5, scope: !7067)
!7070 = !DILocation(line: 674, column: 9, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7061, file: !965, line: 674, column: 9)
!7072 = !DILocation(line: 674, column: 41, scope: !7071)
!7073 = !DILocation(line: 674, column: 9, scope: !7061)
!7074 = !DILocation(line: 675, column: 48, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7071, file: !965, line: 674, column: 47)
!7076 = !DILocation(line: 675, column: 41, scope: !7075)
!7077 = !DILocation(line: 676, column: 5, scope: !7075)
!7078 = !DILocation(line: 679, column: 33, scope: !7061)
!7079 = !DILocation(line: 679, column: 48, scope: !7061)
!7080 = !DILocation(line: 679, column: 25, scope: !7061)
!7081 = !DILocation(line: 680, column: 25, scope: !7061)
!7082 = !DILocation(line: 686, column: 5, scope: !7061)
!7083 = !DILocation(line: 688, column: 1, scope: !7061)
!7084 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !965, file: !965, line: 689, type: !291, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !293)
!7085 = !DILocation(line: 692, column: 9, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7084, file: !965, line: 692, column: 9)
!7087 = !DILocation(line: 692, column: 40, scope: !7086)
!7088 = !DILocation(line: 692, column: 9, scope: !7084)
!7089 = !DILocation(line: 693, column: 29, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7086, file: !965, line: 692, column: 46)
!7091 = !DILocation(line: 694, column: 5, scope: !7090)
!7092 = !DILocation(line: 695, column: 9, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7084, file: !965, line: 695, column: 9)
!7094 = !DILocation(line: 695, column: 41, scope: !7093)
!7095 = !DILocation(line: 695, column: 9, scope: !7084)
!7096 = !DILocation(line: 696, column: 29, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7093, file: !965, line: 695, column: 47)
!7098 = !DILocation(line: 697, column: 5, scope: !7097)
!7099 = !DILocation(line: 698, column: 5, scope: !7084)
!7100 = !DILocation(line: 699, column: 1, scope: !7084)
!7101 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1064, file: !1064, line: 91, type: !3771, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7102)
!7102 = !{!7103}
!7103 = !DILocalVariable(name: "counter", scope: !7101, file: !1064, line: 102, type: !61)
!7104 = !DILocation(line: 0, scope: !7101)
!7105 = !DILocation(line: 110, column: 5, scope: !7101)
!7106 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1064, file: !1064, line: 114, type: !3771, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7107)
!7107 = !{!7108}
!7108 = !DILocalVariable(name: "counter", scope: !7106, file: !1064, line: 125, type: !61)
!7109 = !DILocation(line: 0, scope: !7106)
!7110 = !DILocation(line: 133, column: 5, scope: !7106)
!7111 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1064, file: !1064, line: 137, type: !6236, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7112)
!7112 = !{!7113}
!7113 = !DILocalVariable(name: "delay_us", arg: 1, scope: !7111, file: !1064, line: 137, type: !61)
!7114 = !DILocation(line: 0, scope: !7111)
!7115 = !DILocation(line: 142, column: 5, scope: !7111)
!7116 = !DILocation(line: 144, column: 1, scope: !7111)
!7117 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1064, file: !1064, line: 163, type: !3771, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7118)
!7118 = !{!7119}
!7119 = !DILocalVariable(name: "mask", scope: !7117, file: !1064, line: 165, type: !61)
!7120 = !DILocation(line: 166, column: 12, scope: !7117)
!7121 = !DILocation(line: 0, scope: !7117)
!7122 = !DILocation(line: 167, column: 5, scope: !7117)
!7123 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1064, file: !1064, line: 171, type: !6236, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7124)
!7124 = !{!7125}
!7125 = !DILocalVariable(name: "mask", arg: 1, scope: !7123, file: !1064, line: 171, type: !61)
!7126 = !DILocation(line: 0, scope: !7123)
!7127 = !DILocation(line: 173, column: 5, scope: !7123)
!7128 = !DILocation(line: 174, column: 1, scope: !7123)
!7129 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1064, file: !1064, line: 199, type: !1336, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7130)
!7130 = !{!7131}
!7131 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7129, file: !1064, line: 199, type: !88)
!7132 = !DILocation(line: 0, scope: !7129)
!7133 = !DILocation(line: 201, column: 5, scope: !7129)
!7134 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1064, file: !1064, line: 388, type: !7135, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !293)
!7135 = !DISubroutineType(types: !7136)
!7136 = !{!940}
!7137 = !DILocation(line: 390, column: 5, scope: !7134)
!7138 = distinct !DISubprogram(name: "CompareData", scope: !1064, file: !1064, line: 872, type: !7139, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7141)
!7139 = !DISubroutineType(types: !7140)
!7140 = !{!91, !88, !88, !61}
!7141 = !{!7142, !7143, !7144, !7145, !7146, !7149, !7150, !7153, !7154, !7156}
!7142 = !DILocalVariable(name: "Address", arg: 1, scope: !7138, file: !1064, line: 872, type: !88)
!7143 = !DILocalVariable(name: "Data", arg: 2, scope: !7138, file: !1064, line: 872, type: !88)
!7144 = !DILocalVariable(name: "Length", arg: 3, scope: !7138, file: !1064, line: 872, type: !61)
!7145 = !DILocalVariable(name: "i", scope: !7138, file: !1064, line: 874, type: !61)
!7146 = !DILocalVariable(name: "Source", scope: !7147, file: !1064, line: 877, type: !1002)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !1064, line: 876, column: 74)
!7148 = distinct !DILexicalBlock(scope: !7138, file: !1064, line: 876, column: 9)
!7149 = !DILocalVariable(name: "Dest", scope: !7147, file: !1064, line: 878, type: !1002)
!7150 = !DILocalVariable(name: "Source", scope: !7151, file: !1064, line: 885, type: !1033)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !1064, line: 884, column: 79)
!7152 = distinct !DILexicalBlock(scope: !7148, file: !1064, line: 884, column: 16)
!7153 = !DILocalVariable(name: "Dest", scope: !7151, file: !1064, line: 886, type: !1033)
!7154 = !DILocalVariable(name: "Source", scope: !7155, file: !1064, line: 893, type: !762)
!7155 = distinct !DILexicalBlock(scope: !7152, file: !1064, line: 892, column: 12)
!7156 = !DILocalVariable(name: "Dest", scope: !7155, file: !1064, line: 894, type: !762)
!7157 = !DILocation(line: 0, scope: !7138)
!7158 = !DILocation(line: 876, column: 11, scope: !7148)
!7159 = !DILocation(line: 876, column: 42, scope: !7148)
!7160 = !DILocation(line: 877, column: 28, scope: !7147)
!7161 = !DILocation(line: 0, scope: !7147)
!7162 = !DILocation(line: 878, column: 26, scope: !7147)
!7163 = !DILocation(line: 879, column: 23, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7165, file: !1064, line: 879, column: 9)
!7165 = distinct !DILexicalBlock(scope: !7147, file: !1064, line: 879, column: 9)
!7166 = !DILocation(line: 879, column: 9, scope: !7165)
!7167 = !DILocation(line: 880, column: 17, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !1064, line: 880, column: 17)
!7169 = distinct !DILexicalBlock(scope: !7164, file: !1064, line: 879, column: 68)
!7170 = !DILocation(line: 880, column: 30, scope: !7168)
!7171 = !DILocation(line: 880, column: 27, scope: !7168)
!7172 = !DILocation(line: 879, column: 64, scope: !7164)
!7173 = !DILocation(line: 880, column: 17, scope: !7169)
!7174 = distinct !{!7174, !7166, !7175}
!7175 = !DILocation(line: 883, column: 9, scope: !7165)
!7176 = !DILocation(line: 884, column: 47, scope: !7152)
!7177 = !DILocation(line: 895, column: 23, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !1064, line: 895, column: 9)
!7179 = distinct !DILexicalBlock(scope: !7155, file: !1064, line: 895, column: 9)
!7180 = !DILocation(line: 895, column: 9, scope: !7179)
!7181 = !DILocation(line: 885, column: 28, scope: !7151)
!7182 = !DILocation(line: 0, scope: !7151)
!7183 = !DILocation(line: 886, column: 26, scope: !7151)
!7184 = !DILocation(line: 887, column: 23, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7186, file: !1064, line: 887, column: 9)
!7186 = distinct !DILexicalBlock(scope: !7151, file: !1064, line: 887, column: 9)
!7187 = !DILocation(line: 887, column: 9, scope: !7186)
!7188 = !DILocation(line: 888, column: 17, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !1064, line: 888, column: 17)
!7190 = distinct !DILexicalBlock(scope: !7185, file: !1064, line: 887, column: 68)
!7191 = !DILocation(line: 888, column: 30, scope: !7189)
!7192 = !DILocation(line: 888, column: 27, scope: !7189)
!7193 = !DILocation(line: 887, column: 64, scope: !7185)
!7194 = !DILocation(line: 888, column: 17, scope: !7190)
!7195 = distinct !{!7195, !7187, !7196}
!7196 = !DILocation(line: 891, column: 9, scope: !7186)
!7197 = !DILocation(line: 896, column: 17, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !1064, line: 896, column: 17)
!7199 = distinct !DILexicalBlock(scope: !7178, file: !1064, line: 895, column: 38)
!7200 = !DILocation(line: 896, column: 30, scope: !7198)
!7201 = !DILocation(line: 896, column: 27, scope: !7198)
!7202 = !DILocation(line: 895, column: 34, scope: !7178)
!7203 = !DILocation(line: 896, column: 17, scope: !7199)
!7204 = distinct !{!7204, !7180, !7205}
!7205 = !DILocation(line: 899, column: 9, scope: !7179)
!7206 = !DILocation(line: 902, column: 1, scope: !7138)
!7207 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1064, file: !1064, line: 919, type: !7208, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7210)
!7208 = !DISubroutineType(types: !7209)
!7209 = !{null, !88, !88, !61}
!7210 = !{!7211, !7212, !7213, !7214, !7215, !7216, !7217, !7218, !7219, !7220, !7221}
!7211 = !DILocalVariable(name: "Target", arg: 1, scope: !7207, file: !1064, line: 919, type: !88)
!7212 = !DILocalVariable(name: "Data", arg: 2, scope: !7207, file: !1064, line: 919, type: !88)
!7213 = !DILocalVariable(name: "Size", arg: 3, scope: !7207, file: !1064, line: 919, type: !61)
!7214 = !DILocalVariable(name: "D", scope: !7207, file: !1064, line: 921, type: !1234)
!7215 = !DILocalVariable(name: "address", scope: !7207, file: !1064, line: 922, type: !61)
!7216 = !DILocalVariable(name: "p_data", scope: !7207, file: !1064, line: 923, type: !762)
!7217 = !DILocalVariable(name: "cmd1", scope: !7207, file: !1064, line: 924, type: !61)
!7218 = !DILocalVariable(name: "length", scope: !7207, file: !1064, line: 924, type: !61)
!7219 = !DILocalVariable(name: "written", scope: !7207, file: !1064, line: 924, type: !61)
!7220 = !DILocalVariable(name: "status", scope: !7207, file: !1064, line: 925, type: !1286)
!7221 = !DILocalVariable(name: "savedMask", scope: !7207, file: !1064, line: 926, type: !61)
!7222 = !DILocation(line: 0, scope: !7207)
!7223 = !DILocation(line: 921, column: 60, scope: !7207)
!7224 = !DILocation(line: 923, column: 5, scope: !7207)
!7225 = !DILocation(line: 923, column: 19, scope: !7207)
!7226 = !DILocation(line: 924, column: 5, scope: !7207)
!7227 = !DILocation(line: 932, column: 9, scope: !7207)
!7228 = !DILocation(line: 933, column: 8, scope: !7207)
!7229 = !DILocation(line: 933, column: 21, scope: !7207)
!7230 = !DILocation(line: 935, column: 14, scope: !7207)
!7231 = !DILocation(line: 935, column: 5, scope: !7207)
!7232 = !DILocation(line: 922, column: 29, scope: !7207)
!7233 = !DILocation(line: 937, column: 18, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7207, file: !1064, line: 935, column: 23)
!7235 = !DILocation(line: 937, column: 35, scope: !7234)
!7236 = !DILocation(line: 937, column: 74, scope: !7234)
!7237 = !DILocation(line: 937, column: 50, scope: !7234)
!7238 = !DILocation(line: 937, column: 39, scope: !7234)
!7239 = !DILocation(line: 940, column: 35, scope: !7234)
!7240 = !DILocation(line: 940, column: 29, scope: !7234)
!7241 = !DILocation(line: 940, column: 16, scope: !7234)
!7242 = !DILocation(line: 942, column: 18, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7234, file: !1064, line: 942, column: 13)
!7244 = !DILocation(line: 942, column: 29, scope: !7243)
!7245 = !DILocation(line: 942, column: 13, scope: !7234)
!7246 = !DILocation(line: 943, column: 13, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7243, file: !1064, line: 942, column: 55)
!7248 = !DILocation(line: 944, column: 9, scope: !7247)
!7249 = !DILocation(line: 947, column: 16, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7234, file: !1064, line: 947, column: 13)
!7251 = !DILocation(line: 947, column: 29, scope: !7250)
!7252 = !DILocation(line: 0, scope: !7250)
!7253 = !DILocation(line: 947, column: 13, scope: !7234)
!7254 = !DILocation(line: 948, column: 20, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7250, file: !1064, line: 947, column: 35)
!7256 = !DILocation(line: 949, column: 32, scope: !7255)
!7257 = !DILocation(line: 949, column: 40, scope: !7255)
!7258 = !DILocation(line: 949, column: 13, scope: !7255)
!7259 = !DILocation(line: 950, column: 9, scope: !7255)
!7260 = !DILocation(line: 953, column: 20, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7250, file: !1064, line: 952, column: 9)
!7262 = !DILocation(line: 954, column: 32, scope: !7261)
!7263 = !DILocation(line: 954, column: 40, scope: !7261)
!7264 = !DILocation(line: 954, column: 13, scope: !7261)
!7265 = !DILocation(line: 957, column: 21, scope: !7234)
!7266 = !DILocation(line: 963, column: 45, scope: !7234)
!7267 = !DILocation(line: 963, column: 42, scope: !7234)
!7268 = !DILocation(line: 963, column: 40, scope: !7234)
!7269 = !DILocation(line: 963, column: 58, scope: !7234)
!7270 = !DILocation(line: 963, column: 29, scope: !7234)
!7271 = !DILocation(line: 964, column: 28, scope: !7234)
!7272 = !DILocation(line: 965, column: 37, scope: !7234)
!7273 = !DILocation(line: 966, column: 9, scope: !7234)
!7274 = !DILocation(line: 967, column: 26, scope: !7234)
!7275 = !DILocation(line: 967, column: 9, scope: !7234)
!7276 = !DILocation(line: 968, column: 29, scope: !7234)
!7277 = !DILocation(line: 968, column: 9, scope: !7234)
!7278 = !DILocation(line: 972, column: 9, scope: !7234)
!7279 = !DILocation(line: 978, column: 9, scope: !7234)
!7280 = !DILocation(line: 979, column: 50, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7234, file: !1064, line: 978, column: 22)
!7282 = !DILocation(line: 979, column: 55, scope: !7281)
!7283 = !DILocation(line: 979, column: 22, scope: !7281)
!7284 = !DILocation(line: 980, column: 35, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7281, file: !1064, line: 980, column: 17)
!7286 = !DILocation(line: 980, column: 32, scope: !7285)
!7287 = !DILocation(line: 980, column: 30, scope: !7285)
!7288 = !DILocation(line: 980, column: 19, scope: !7285)
!7289 = !DILocation(line: 980, column: 17, scope: !7281)
!7290 = distinct !{!7290, !7279, !7291}
!7291 = !DILocation(line: 983, column: 9, scope: !7234)
!7292 = !DILocation(line: 991, column: 9, scope: !7234)
!7293 = !DILocation(line: 993, column: 19, scope: !7234)
!7294 = !DILocation(line: 993, column: 16, scope: !7234)
!7295 = !DILocation(line: 994, column: 14, scope: !7234)
!7296 = !DILocation(line: 995, column: 17, scope: !7234)
!7297 = distinct !{!7297, !7231, !7298}
!7298 = !DILocation(line: 996, column: 5, scope: !7207)
!7299 = !DILocation(line: 998, column: 21, scope: !7207)
!7300 = !DILocation(line: 1005, column: 9, scope: !7207)
!7301 = !DILocation(line: 1008, column: 1, scope: !7207)
!7302 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1064, file: !1064, line: 1427, type: !7303, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7305)
!7303 = !DISubroutineType(types: !7304)
!7304 = !{null, !1234}
!7305 = !{!7306, !7307}
!7306 = !DILocalVariable(name: "D", arg: 1, scope: !7302, file: !1064, line: 1427, type: !1234)
!7307 = !DILocalVariable(name: "Result", scope: !7302, file: !1064, line: 1429, type: !1902)
!7308 = !DILocation(line: 0, scope: !7302)
!7309 = !DILocation(line: 1430, column: 5, scope: !7302)
!7310 = !DILocation(line: 1431, column: 18, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7302, file: !1064, line: 1430, column: 8)
!7312 = !DILocation(line: 1432, column: 21, scope: !7302)
!7313 = !DILocation(line: 1432, column: 5, scope: !7311)
!7314 = distinct !{!7314, !7309, !7315}
!7315 = !DILocation(line: 1432, column: 43, scope: !7302)
!7316 = !DILocation(line: 1433, column: 1, scope: !7302)
!7317 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1064, file: !1064, line: 3478, type: !7303, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7318)
!7318 = !{!7319}
!7319 = !DILocalVariable(name: "D", arg: 1, scope: !7317, file: !1064, line: 3478, type: !1234)
!7320 = !DILocation(line: 0, scope: !7317)
!7321 = !DILocation(line: 3480, column: 30, scope: !7317)
!7322 = !DILocation(line: 3480, column: 35, scope: !7317)
!7323 = !DILocation(line: 3480, column: 27, scope: !7317)
!7324 = !DILocation(line: 3480, column: 5, scope: !7317)
!7325 = !DILocation(line: 3481, column: 1, scope: !7317)
!7326 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1064, file: !1064, line: 2382, type: !291, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7327)
!7327 = !{!7328}
!7328 = !DILocalVariable(name: "savedMask", scope: !7326, file: !1064, line: 2384, type: !61)
!7329 = !DILocation(line: 2385, column: 17, scope: !7326)
!7330 = !DILocation(line: 0, scope: !7326)
!7331 = !DILocation(line: 2390, column: 20, scope: !7326)
!7332 = !DILocation(line: 2391, column: 5, scope: !7326)
!7333 = !DILocation(line: 2392, column: 1, scope: !7326)
!7334 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1064, file: !1064, line: 3536, type: !7335, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7337)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{!61, !1234, !460}
!7337 = !{!7338, !7339, !7340, !7341}
!7338 = !DILocalVariable(name: "D", arg: 1, scope: !7334, file: !1064, line: 3536, type: !1234)
!7339 = !DILocalVariable(name: "cmd", arg: 2, scope: !7334, file: !1064, line: 3536, type: !460)
!7340 = !DILocalVariable(name: "savedMask", scope: !7334, file: !1064, line: 3538, type: !61)
!7341 = !DILocalVariable(name: "result", scope: !7334, file: !1064, line: 3539, type: !61)
!7342 = !DILocation(line: 0, scope: !7334)
!7343 = !DILocation(line: 3541, column: 17, scope: !7334)
!7344 = !DILocation(line: 3542, column: 22, scope: !7334)
!7345 = !DILocation(line: 3542, column: 5, scope: !7334)
!7346 = !DILocation(line: 3543, column: 35, scope: !7334)
!7347 = !DILocation(line: 3543, column: 33, scope: !7334)
!7348 = !DILocation(line: 3544, column: 25, scope: !7334)
!7349 = !DILocation(line: 3545, column: 24, scope: !7334)
!7350 = !DILocation(line: 3546, column: 25, scope: !7334)
!7351 = !DILocation(line: 3546, column: 5, scope: !7334)
!7352 = !DILocation(line: 3547, column: 42, scope: !7334)
!7353 = !DILocation(line: 3547, column: 60, scope: !7334)
!7354 = !DILocation(line: 3547, column: 14, scope: !7334)
!7355 = !DILocation(line: 3548, column: 5, scope: !7334)
!7356 = !DILocation(line: 3550, column: 5, scope: !7334)
!7357 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1064, file: !1064, line: 2393, type: !291, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7358)
!7358 = !{!7359}
!7359 = !DILocalVariable(name: "savedMask", scope: !7357, file: !1064, line: 2395, type: !61)
!7360 = !DILocation(line: 2396, column: 17, scope: !7357)
!7361 = !DILocation(line: 0, scope: !7357)
!7362 = !DILocation(line: 2401, column: 20, scope: !7357)
!7363 = !DILocation(line: 2402, column: 5, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7365, file: !1064, line: 2402, column: 5)
!7365 = distinct !DILexicalBlock(scope: !7357, file: !1064, line: 2402, column: 5)
!7366 = !DILocation(line: 2403, column: 5, scope: !7357)
!7367 = !DILocation(line: 2404, column: 1, scope: !7357)
!7368 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1064, file: !1064, line: 1440, type: !7303, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7369)
!7369 = !{!7370, !7371}
!7370 = !DILocalVariable(name: "D", arg: 1, scope: !7368, file: !1064, line: 1440, type: !1234)
!7371 = !DILocalVariable(name: "savedMask", scope: !7368, file: !1064, line: 1442, type: !940)
!7372 = !DILocation(line: 0, scope: !7368)
!7373 = !DILocation(line: 1443, column: 17, scope: !7368)
!7374 = !DILocation(line: 1444, column: 9, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7368, file: !1064, line: 1444, column: 9)
!7376 = !DILocation(line: 1444, column: 9, scope: !7368)
!7377 = !DILocation(line: 1445, column: 17, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7375, file: !1064, line: 1444, column: 24)
!7379 = !DILocation(line: 1446, column: 9, scope: !7378)
!7380 = !DILocation(line: 1451, column: 1, scope: !7368)
!7381 = !DILocation(line: 1448, column: 9, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7375, file: !1064, line: 1447, column: 12)
!7383 = !DILocation(line: 1449, column: 9, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7385, file: !1064, line: 1449, column: 9)
!7385 = distinct !DILexicalBlock(scope: !7386, file: !1064, line: 1449, column: 9)
!7386 = distinct !DILexicalBlock(scope: !7382, file: !1064, line: 1449, column: 9)
!7387 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1064, file: !1064, line: 1027, type: !291, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7388)
!7388 = !{!7389, !7390, !7391, !7392}
!7389 = !DILocalVariable(name: "D", scope: !7387, file: !1064, line: 1029, type: !1234)
!7390 = !DILocalVariable(name: "status", scope: !7387, file: !1064, line: 1030, type: !1286)
!7391 = !DILocalVariable(name: "savedMask", scope: !7387, file: !1064, line: 1031, type: !61)
!7392 = !DILocalVariable(name: "duration", scope: !7393, file: !1064, line: 1231, type: !61)
!7393 = distinct !DILexicalBlock(scope: !7387, file: !1064, line: 1230, column: 5)
!7394 = !DILocation(line: 0, scope: !7387)
!7395 = !DILocation(line: 1033, column: 17, scope: !7387)
!7396 = !DILocation(line: 1034, column: 8, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7387, file: !1064, line: 1034, column: 8)
!7398 = !DILocation(line: 1034, column: 30, scope: !7397)
!7399 = !DILocation(line: 1034, column: 8, scope: !7387)
!7400 = !DILocation(line: 1039, column: 27, scope: !7387)
!7401 = !DILocation(line: 1058, column: 48, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7387, file: !1064, line: 1055, column: 5)
!7403 = !DILocation(line: 1069, column: 5, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7405, file: !1064, line: 1069, column: 5)
!7405 = distinct !DILexicalBlock(scope: !7387, file: !1064, line: 1069, column: 5)
!7406 = !DILocation(line: 1069, column: 5, scope: !7405)
!7407 = !DILocation(line: 1069, column: 5, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7404, file: !1064, line: 1069, column: 5)
!7409 = !DILocation(line: 1075, column: 10, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7387, file: !1064, line: 1075, column: 9)
!7411 = !DILocation(line: 1075, column: 27, scope: !7410)
!7412 = !DILocation(line: 1075, column: 33, scope: !7410)
!7413 = !DILocation(line: 1075, column: 40, scope: !7410)
!7414 = !DILocation(line: 1075, column: 53, scope: !7410)
!7415 = !DILocation(line: 1075, column: 9, scope: !7387)
!7416 = !DILocation(line: 1084, column: 9, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7410, file: !1064, line: 1083, column: 11)
!7418 = !DILocation(line: 1085, column: 50, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7417, file: !1064, line: 1084, column: 21)
!7420 = !DILocation(line: 1085, column: 55, scope: !7419)
!7421 = !DILocation(line: 1085, column: 22, scope: !7419)
!7422 = !DILocation(line: 1086, column: 35, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7419, file: !1064, line: 1086, column: 17)
!7424 = !DILocation(line: 1086, column: 32, scope: !7423)
!7425 = !DILocation(line: 1086, column: 30, scope: !7423)
!7426 = !DILocation(line: 1086, column: 19, scope: !7423)
!7427 = !DILocation(line: 1086, column: 17, scope: !7419)
!7428 = distinct !{!7428, !7416, !7429}
!7429 = !DILocation(line: 1089, column: 9, scope: !7417)
!7430 = !DILocation(line: 1107, column: 11, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7387, file: !1064, line: 1107, column: 9)
!7432 = !DILocation(line: 1107, column: 30, scope: !7431)
!7433 = !DILocation(line: 1117, column: 46, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7431, file: !1064, line: 1107, column: 53)
!7435 = !DILocation(line: 1117, column: 51, scope: !7434)
!7436 = !DILocation(line: 1117, column: 18, scope: !7434)
!7437 = !DILocation(line: 1120, column: 31, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7434, file: !1064, line: 1120, column: 13)
!7439 = !DILocation(line: 1120, column: 28, scope: !7438)
!7440 = !DILocation(line: 1120, column: 26, scope: !7438)
!7441 = !DILocation(line: 1120, column: 15, scope: !7438)
!7442 = !DILocation(line: 1120, column: 13, scope: !7434)
!7443 = !DILocation(line: 1128, column: 13, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7438, file: !1064, line: 1120, column: 55)
!7445 = !DILocation(line: 1131, column: 13, scope: !7444)
!7446 = !DILocation(line: 1132, column: 54, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7444, file: !1064, line: 1131, column: 23)
!7448 = !DILocation(line: 1132, column: 59, scope: !7447)
!7449 = !DILocation(line: 1132, column: 26, scope: !7447)
!7450 = !DILocation(line: 1133, column: 39, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7447, file: !1064, line: 1133, column: 21)
!7452 = !DILocation(line: 1133, column: 36, scope: !7451)
!7453 = !DILocation(line: 1133, column: 34, scope: !7451)
!7454 = !DILocation(line: 1133, column: 23, scope: !7451)
!7455 = !DILocation(line: 1133, column: 21, scope: !7447)
!7456 = distinct !{!7456, !7445, !7457}
!7457 = !DILocation(line: 1158, column: 13, scope: !7444)
!7458 = !DILocation(line: 1162, column: 21, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7444, file: !1064, line: 1162, column: 17)
!7460 = !DILocation(line: 1162, column: 32, scope: !7459)
!7461 = !DILocation(line: 1162, column: 51, scope: !7459)
!7462 = !DILocation(line: 1162, column: 58, scope: !7459)
!7463 = !DILocation(line: 1162, column: 71, scope: !7459)
!7464 = !DILocation(line: 1162, column: 17, scope: !7444)
!7465 = !DILocation(line: 1164, column: 45, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7459, file: !1064, line: 1162, column: 91)
!7467 = !DILocation(line: 1165, column: 36, scope: !7466)
!7468 = !DILocation(line: 1166, column: 37, scope: !7466)
!7469 = !DILocation(line: 1167, column: 34, scope: !7466)
!7470 = !DILocation(line: 1167, column: 17, scope: !7466)
!7471 = !DILocation(line: 1168, column: 37, scope: !7466)
!7472 = !DILocation(line: 1168, column: 17, scope: !7466)
!7473 = !DILocation(line: 1171, column: 50, scope: !7466)
!7474 = !DILocation(line: 1172, column: 37, scope: !7466)
!7475 = !DILocation(line: 1173, column: 45, scope: !7466)
!7476 = !DILocation(line: 1174, column: 34, scope: !7466)
!7477 = !DILocation(line: 1174, column: 17, scope: !7466)
!7478 = !DILocation(line: 1175, column: 37, scope: !7466)
!7479 = !DILocation(line: 1175, column: 17, scope: !7466)
!7480 = !DILocation(line: 1178, column: 17, scope: !7466)
!7481 = !DILocation(line: 1179, column: 49, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7466, file: !1064, line: 1178, column: 20)
!7483 = !DILocation(line: 1180, column: 40, scope: !7482)
!7484 = !DILocation(line: 1181, column: 41, scope: !7482)
!7485 = !DILocation(line: 1182, column: 38, scope: !7482)
!7486 = !DILocation(line: 1182, column: 21, scope: !7482)
!7487 = !DILocation(line: 1183, column: 41, scope: !7482)
!7488 = !DILocation(line: 1183, column: 21, scope: !7482)
!7489 = !DILocation(line: 1184, column: 43, scope: !7482)
!7490 = !DILocation(line: 1185, column: 17, scope: !7482)
!7491 = distinct !{!7491, !7480, !7492}
!7492 = !DILocation(line: 1185, column: 32, scope: !7466)
!7493 = !DILocation(line: 1194, column: 13, scope: !7444)
!7494 = !DILocation(line: 1195, column: 9, scope: !7444)
!7495 = !DILocation(line: 1197, column: 21, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7497, file: !1064, line: 1197, column: 17)
!7497 = distinct !DILexicalBlock(scope: !7438, file: !1064, line: 1195, column: 16)
!7498 = !DILocation(line: 1197, column: 32, scope: !7496)
!7499 = !DILocation(line: 1197, column: 53, scope: !7496)
!7500 = !DILocation(line: 1197, column: 60, scope: !7496)
!7501 = !DILocation(line: 1197, column: 76, scope: !7496)
!7502 = !DILocation(line: 1197, column: 17, scope: !7497)
!7503 = !DILocation(line: 1198, column: 54, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7496, file: !1064, line: 1197, column: 98)
!7505 = !DILocation(line: 1198, column: 59, scope: !7504)
!7506 = !DILocation(line: 1198, column: 26, scope: !7504)
!7507 = !DILocation(line: 1199, column: 40, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7504, file: !1064, line: 1199, column: 21)
!7509 = !DILocation(line: 1199, column: 37, scope: !7508)
!7510 = !DILocation(line: 1199, column: 35, scope: !7508)
!7511 = !DILocation(line: 1199, column: 24, scope: !7508)
!7512 = !DILocation(line: 1199, column: 63, scope: !7508)
!7513 = !DILocation(line: 1200, column: 41, scope: !7508)
!7514 = !DILocation(line: 1200, column: 39, scope: !7508)
!7515 = !DILocation(line: 1200, column: 28, scope: !7508)
!7516 = !DILocation(line: 1199, column: 21, scope: !7504)
!7517 = !DILocation(line: 1201, column: 40, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7508, file: !1064, line: 1200, column: 68)
!7519 = !DILocation(line: 1201, column: 21, scope: !7518)
!7520 = !DILocation(line: 1202, column: 40, scope: !7518)
!7521 = !DILocation(line: 1202, column: 21, scope: !7518)
!7522 = !DILocation(line: 1203, column: 17, scope: !7518)
!7523 = !DILocation(line: 1206, column: 13, scope: !7497)
!7524 = !DILocation(line: 1228, column: 25, scope: !7387)
!7525 = !DILocation(line: 1231, column: 29, scope: !7393)
!7526 = !DILocation(line: 0, scope: !7393)
!7527 = !DILocation(line: 1232, column: 13, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7393, file: !1064, line: 1232, column: 13)
!7529 = !DILocation(line: 1232, column: 43, scope: !7528)
!7530 = !DILocation(line: 1232, column: 13, scope: !7393)
!7531 = !DILocation(line: 1233, column: 43, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7528, file: !1064, line: 1232, column: 55)
!7533 = !DILocation(line: 1234, column: 9, scope: !7532)
!7534 = !DILocation(line: 1237, column: 5, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !1064, line: 1237, column: 5)
!7536 = distinct !DILexicalBlock(scope: !7387, file: !1064, line: 1237, column: 5)
!7537 = !DILocation(line: 1240, column: 5, scope: !7387)
!7538 = !DILocation(line: 1241, column: 1, scope: !7387)
!7539 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1064, file: !1064, line: 3421, type: !7303, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7540)
!7540 = !{!7541, !7542, !7543, !7544}
!7541 = !DILocalVariable(name: "D", arg: 1, scope: !7539, file: !1064, line: 3421, type: !1234)
!7542 = !DILocalVariable(name: "savedMask", scope: !7539, file: !1064, line: 3423, type: !61)
!7543 = !DILocalVariable(name: "currtime", scope: !7539, file: !1064, line: 3424, type: !61)
!7544 = !DILocalVariable(name: "difftime", scope: !7539, file: !1064, line: 3424, type: !61)
!7545 = !DILocation(line: 0, scope: !7539)
!7546 = !DILocation(line: 3427, column: 9, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7539, file: !1064, line: 3427, column: 9)
!7548 = !DILocation(line: 3427, column: 28, scope: !7547)
!7549 = !DILocation(line: 3427, column: 9, scope: !7539)
!7550 = !DILocation(line: 3429, column: 20, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7547, file: !1064, line: 3427, column: 59)
!7552 = !DILocation(line: 3430, column: 27, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7551, file: !1064, line: 3430, column: 13)
!7554 = !DILocation(line: 3430, column: 24, scope: !7553)
!7555 = !DILocation(line: 3430, column: 22, scope: !7553)
!7556 = !DILocation(line: 3430, column: 13, scope: !7551)
!7557 = !DILocation(line: 3431, column: 47, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7553, file: !1064, line: 3430, column: 46)
!7559 = !DILocation(line: 3431, column: 13, scope: !7558)
!7560 = !DILocation(line: 3432, column: 9, scope: !7558)
!7561 = !DILocation(line: 3435, column: 17, scope: !7539)
!7562 = !DILocation(line: 3436, column: 24, scope: !7539)
!7563 = !DILocation(line: 3436, column: 31, scope: !7539)
!7564 = !DILocation(line: 3436, column: 36, scope: !7539)
!7565 = !DILocation(line: 3436, column: 28, scope: !7539)
!7566 = !DILocation(line: 3436, column: 5, scope: !7539)
!7567 = !DILocation(line: 3442, column: 5, scope: !7539)
!7568 = !DILocation(line: 3443, column: 1, scope: !7539)
!7569 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1064, file: !1064, line: 2405, type: !291, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7570)
!7570 = !{!7571}
!7571 = !DILocalVariable(name: "savedMask", scope: !7569, file: !1064, line: 2407, type: !61)
!7572 = !DILocation(line: 2408, column: 17, scope: !7569)
!7573 = !DILocation(line: 0, scope: !7569)
!7574 = !DILocation(line: 2413, column: 25, scope: !7569)
!7575 = !DILocation(line: 2414, column: 5, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7577, file: !1064, line: 2414, column: 5)
!7577 = distinct !DILexicalBlock(scope: !7569, file: !1064, line: 2414, column: 5)
!7578 = !DILocation(line: 2415, column: 5, scope: !7569)
!7579 = !DILocation(line: 2416, column: 1, scope: !7569)
!7580 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1064, file: !1064, line: 3561, type: !7581, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7583)
!7581 = !DISubroutineType(types: !7582)
!7582 = !{null, !1234, !772, !460}
!7583 = !{!7584, !7585, !7586, !7587}
!7584 = !DILocalVariable(name: "D", arg: 1, scope: !7580, file: !1064, line: 3561, type: !1234)
!7585 = !DILocalVariable(name: "cmd", arg: 2, scope: !7580, file: !1064, line: 3561, type: !772)
!7586 = !DILocalVariable(name: "outlen", arg: 3, scope: !7580, file: !1064, line: 3561, type: !460)
!7587 = !DILocalVariable(name: "savedMask", scope: !7580, file: !1064, line: 3563, type: !61)
!7588 = !DILocation(line: 0, scope: !7580)
!7589 = !DILocation(line: 3565, column: 17, scope: !7580)
!7590 = !DILocation(line: 3566, column: 22, scope: !7580)
!7591 = !DILocation(line: 3566, column: 5, scope: !7580)
!7592 = !DILocation(line: 3567, column: 33, scope: !7580)
!7593 = !DILocation(line: 3568, column: 27, scope: !7580)
!7594 = !DILocation(line: 3568, column: 25, scope: !7580)
!7595 = !DILocation(line: 3569, column: 24, scope: !7580)
!7596 = !DILocation(line: 3570, column: 25, scope: !7580)
!7597 = !DILocation(line: 3570, column: 5, scope: !7580)
!7598 = !DILocation(line: 3571, column: 5, scope: !7580)
!7599 = !DILocation(line: 3573, column: 1, scope: !7580)
!7600 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1064, file: !1064, line: 1410, type: !7601, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7603)
!7601 = !DISubroutineType(types: !7602)
!7602 = !{!1902}
!7603 = !{!7604}
!7604 = !DILocalVariable(name: "savedMask", scope: !7600, file: !1064, line: 1412, type: !940)
!7605 = !DILocation(line: 1413, column: 17, scope: !7600)
!7606 = !DILocation(line: 0, scope: !7600)
!7607 = !DILocation(line: 1414, column: 9, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7600, file: !1064, line: 1414, column: 9)
!7609 = !DILocation(line: 1414, column: 9, scope: !7600)
!7610 = !DILocation(line: 1415, column: 17, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7608, file: !1064, line: 1414, column: 24)
!7612 = !DILocation(line: 1417, column: 9, scope: !7611)
!7613 = !DILocation(line: 0, scope: !7608)
!7614 = !DILocation(line: 1425, column: 1, scope: !7600)
!7615 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1064, file: !1064, line: 1257, type: !7616, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7618)
!7616 = !DISubroutineType(types: !7617)
!7617 = !{!91}
!7618 = !{!7619, !7620, !7621}
!7619 = !DILocalVariable(name: "D", scope: !7615, file: !1064, line: 1259, type: !1234)
!7620 = !DILocalVariable(name: "status", scope: !7615, file: !1064, line: 1260, type: !1286)
!7621 = !DILocalVariable(name: "result", scope: !7615, file: !1064, line: 1261, type: !91)
!7622 = !DILocation(line: 1259, column: 57, scope: !7615)
!7623 = !DILocation(line: 0, scope: !7615)
!7624 = !DILocation(line: 1263, column: 5, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7626, file: !1064, line: 1263, column: 5)
!7626 = distinct !DILexicalBlock(scope: !7615, file: !1064, line: 1263, column: 5)
!7627 = !DILocation(line: 1263, column: 5, scope: !7626)
!7628 = !DILocation(line: 1263, column: 5, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7625, file: !1064, line: 1263, column: 5)
!7630 = !DILocation(line: 1265, column: 5, scope: !7615)
!7631 = !DILocation(line: 1267, column: 42, scope: !7615)
!7632 = !DILocation(line: 1267, column: 47, scope: !7615)
!7633 = !DILocation(line: 1267, column: 14, scope: !7615)
!7634 = !DILocation(line: 1269, column: 27, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7615, file: !1064, line: 1269, column: 9)
!7636 = !DILocation(line: 1269, column: 24, scope: !7635)
!7637 = !DILocation(line: 1269, column: 22, scope: !7635)
!7638 = !DILocation(line: 1269, column: 11, scope: !7635)
!7639 = !DILocation(line: 1269, column: 9, scope: !7615)
!7640 = !DILocation(line: 1270, column: 9, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7635, file: !1064, line: 1269, column: 51)
!7642 = !DILocation(line: 1272, column: 5, scope: !7641)
!7643 = !DILocation(line: 1274, column: 5, scope: !7615)
!7644 = !DILocation(line: 1276, column: 5, scope: !7615)
!7645 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1064, file: !1064, line: 1289, type: !291, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7646)
!7646 = !{!7647}
!7647 = !DILocalVariable(name: "D", scope: !7645, file: !1064, line: 1291, type: !1234)
!7648 = !DILocation(line: 0, scope: !7645)
!7649 = !DILocation(line: 1293, column: 5, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !1064, line: 1293, column: 5)
!7651 = distinct !DILexicalBlock(scope: !7645, file: !1064, line: 1293, column: 5)
!7652 = !DILocation(line: 1293, column: 5, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7650, file: !1064, line: 1293, column: 5)
!7654 = !DILocation(line: 1293, column: 5, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7656, file: !1064, line: 1293, column: 5)
!7656 = distinct !DILexicalBlock(scope: !7657, file: !1064, line: 1293, column: 5)
!7657 = distinct !DILexicalBlock(scope: !7653, file: !1064, line: 1293, column: 5)
!7658 = !DILocation(line: 1291, column: 60, scope: !7645)
!7659 = !DILocation(line: 1295, column: 5, scope: !7645)
!7660 = !DILocation(line: 1296, column: 1, scope: !7645)
!7661 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1064, file: !1064, line: 3452, type: !7303, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7662)
!7662 = !{!7663, !7664}
!7663 = !DILocalVariable(name: "D", arg: 1, scope: !7661, file: !1064, line: 3452, type: !1234)
!7664 = !DILocalVariable(name: "savedMask", scope: !7661, file: !1064, line: 3454, type: !61)
!7665 = !DILocation(line: 0, scope: !7661)
!7666 = !DILocation(line: 3456, column: 17, scope: !7661)
!7667 = !DILocation(line: 3462, column: 24, scope: !7661)
!7668 = !DILocation(line: 3462, column: 31, scope: !7661)
!7669 = !DILocation(line: 3462, column: 36, scope: !7661)
!7670 = !DILocation(line: 3462, column: 28, scope: !7661)
!7671 = !DILocation(line: 3462, column: 5, scope: !7661)
!7672 = !DILocation(line: 3463, column: 12, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7661, file: !1064, line: 3463, column: 9)
!7674 = !DILocation(line: 3463, column: 27, scope: !7673)
!7675 = !DILocation(line: 3463, column: 9, scope: !7661)
!7676 = !DILocation(line: 3464, column: 28, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7673, file: !1064, line: 3463, column: 33)
!7678 = !DILocation(line: 3465, column: 5, scope: !7677)
!7679 = !DILocation(line: 3467, column: 5, scope: !7661)
!7680 = !DILocation(line: 3468, column: 5, scope: !7661)
!7681 = !DILocation(line: 3469, column: 1, scope: !7661)
!7682 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1064, file: !1064, line: 2417, type: !291, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7683)
!7683 = !{!7684}
!7684 = !DILocalVariable(name: "savedMask", scope: !7682, file: !1064, line: 2419, type: !61)
!7685 = !DILocation(line: 2420, column: 17, scope: !7682)
!7686 = !DILocation(line: 0, scope: !7682)
!7687 = !DILocation(line: 2425, column: 25, scope: !7682)
!7688 = !DILocation(line: 2426, column: 5, scope: !7682)
!7689 = !DILocation(line: 2427, column: 1, scope: !7682)
!7690 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1064, file: !1064, line: 1308, type: !291, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7691)
!7691 = !{!7692, !7693}
!7692 = !DILocalVariable(name: "D", scope: !7690, file: !1064, line: 1310, type: !1234)
!7693 = !DILocalVariable(name: "status", scope: !7690, file: !1064, line: 1311, type: !1286)
!7694 = !DILocation(line: 1310, column: 60, scope: !7690)
!7695 = !DILocation(line: 0, scope: !7690)
!7696 = !DILocation(line: 1313, column: 5, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7698, file: !1064, line: 1313, column: 5)
!7698 = distinct !DILexicalBlock(scope: !7690, file: !1064, line: 1313, column: 5)
!7699 = !DILocation(line: 1313, column: 5, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7697, file: !1064, line: 1313, column: 5)
!7701 = !DILocation(line: 1313, column: 5, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !1064, line: 1313, column: 5)
!7703 = distinct !DILexicalBlock(scope: !7704, file: !1064, line: 1313, column: 5)
!7704 = distinct !DILexicalBlock(scope: !7700, file: !1064, line: 1313, column: 5)
!7705 = !DILocation(line: 1315, column: 5, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !1064, line: 1315, column: 5)
!7707 = distinct !DILexicalBlock(scope: !7690, file: !1064, line: 1315, column: 5)
!7708 = !DILocation(line: 1315, column: 5, scope: !7707)
!7709 = !DILocation(line: 1315, column: 5, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7706, file: !1064, line: 1315, column: 5)
!7711 = !DILocation(line: 1317, column: 5, scope: !7690)
!7712 = !DILocation(line: 1319, column: 5, scope: !7690)
!7713 = !DILocation(line: 1320, column: 46, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7690, file: !1064, line: 1319, column: 15)
!7715 = !DILocation(line: 1320, column: 51, scope: !7714)
!7716 = !DILocation(line: 1320, column: 18, scope: !7714)
!7717 = !DILocation(line: 1322, column: 31, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7714, file: !1064, line: 1322, column: 13)
!7719 = !DILocation(line: 1322, column: 28, scope: !7718)
!7720 = !DILocation(line: 1322, column: 26, scope: !7718)
!7721 = !DILocation(line: 1322, column: 15, scope: !7718)
!7722 = !DILocation(line: 1322, column: 13, scope: !7714)
!7723 = distinct !{!7723, !7712, !7724}
!7724 = !DILocation(line: 1325, column: 5, scope: !7690)
!7725 = !DILocation(line: 1327, column: 5, scope: !7690)
!7726 = !DILocation(line: 1328, column: 1, scope: !7690)
!7727 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1064, file: !1064, line: 1394, type: !7303, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7728)
!7728 = !{!7729}
!7729 = !DILocalVariable(name: "D", arg: 1, scope: !7727, file: !1064, line: 1394, type: !1234)
!7730 = !DILocation(line: 0, scope: !7727)
!7731 = !DILocation(line: 1401, column: 1, scope: !7727)
!7732 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1064, file: !1064, line: 1556, type: !7733, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7754)
!7733 = !DISubroutineType(types: !7734)
!7734 = !{!940, !7735, !1234}
!7735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7736, size: 32)
!7736 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1260, line: 121, baseType: !7737)
!7737 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 105, size: 480, elements: !7738)
!7738 = !{!7739, !7740, !7741, !7742, !7743, !7744, !7745, !7746, !7747, !7748, !7749, !7750, !7751, !7752, !7753}
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !7737, file: !1260, line: 106, baseType: !1534, size: 32)
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !7737, file: !1260, line: 107, baseType: !1335, size: 32, offset: 32)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !7737, file: !1260, line: 108, baseType: !1539, size: 32, offset: 64)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !7737, file: !1260, line: 109, baseType: !1543, size: 32, offset: 96)
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !7737, file: !1260, line: 110, baseType: !1547, size: 32, offset: 128)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !7737, file: !1260, line: 111, baseType: !1543, size: 32, offset: 160)
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !7737, file: !1260, line: 112, baseType: !1552, size: 32, offset: 192)
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !7737, file: !1260, line: 113, baseType: !1543, size: 32, offset: 224)
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !7737, file: !1260, line: 114, baseType: !1543, size: 32, offset: 256)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !7737, file: !1260, line: 115, baseType: !1543, size: 32, offset: 288)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !7737, file: !1260, line: 116, baseType: !1559, size: 32, offset: 320)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !7737, file: !1260, line: 117, baseType: !1564, size: 32, offset: 352)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !7737, file: !1260, line: 118, baseType: !1569, size: 32, offset: 384)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !7737, file: !1260, line: 119, baseType: !1573, size: 32, offset: 416)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !7737, file: !1260, line: 120, baseType: !1577, size: 32, offset: 448)
!7754 = !{!7755, !7756, !7757}
!7755 = !DILocalVariable(name: "driver", arg: 1, scope: !7732, file: !1064, line: 1556, type: !7735)
!7756 = !DILocalVariable(name: "D", arg: 2, scope: !7732, file: !1064, line: 1556, type: !1234)
!7757 = !DILocalVariable(name: "smap", scope: !7732, file: !1064, line: 1558, type: !1285)
!7758 = !DILocation(line: 0, scope: !7732)
!7759 = !DILocation(line: 1561, column: 15, scope: !7732)
!7760 = !DILocation(line: 1562, column: 22, scope: !7732)
!7761 = !DILocation(line: 1563, column: 5, scope: !7732)
!7762 = !DILocation(line: 1563, column: 22, scope: !7732)
!7763 = !DILocation(line: 1565, column: 5, scope: !7732)
!7764 = !DILocation(line: 1565, column: 22, scope: !7732)
!7765 = !DILocation(line: 1566, column: 5, scope: !7732)
!7766 = !DILocation(line: 1566, column: 22, scope: !7732)
!7767 = !DILocation(line: 1568, column: 5, scope: !7732)
!7768 = !DILocation(line: 1568, column: 22, scope: !7732)
!7769 = !DILocation(line: 1569, column: 5, scope: !7732)
!7770 = !DILocation(line: 1569, column: 22, scope: !7732)
!7771 = !DILocation(line: 1570, column: 5, scope: !7732)
!7772 = !DILocation(line: 1570, column: 22, scope: !7732)
!7773 = !DILocation(line: 1573, column: 8, scope: !7732)
!7774 = !DILocation(line: 1573, column: 13, scope: !7732)
!7775 = !DILocation(line: 1573, column: 28, scope: !7732)
!7776 = !DILocation(line: 1574, column: 8, scope: !7732)
!7777 = !DILocation(line: 1574, column: 13, scope: !7732)
!7778 = !DILocation(line: 1574, column: 29, scope: !7732)
!7779 = !DILocation(line: 1575, column: 8, scope: !7732)
!7780 = !DILocation(line: 1575, column: 13, scope: !7732)
!7781 = !DILocation(line: 1575, column: 30, scope: !7732)
!7782 = !DILocation(line: 1576, column: 8, scope: !7732)
!7783 = !DILocation(line: 1576, column: 13, scope: !7732)
!7784 = !DILocation(line: 1576, column: 23, scope: !7732)
!7785 = !DILocation(line: 1577, column: 8, scope: !7732)
!7786 = !DILocation(line: 1577, column: 13, scope: !7732)
!7787 = !DILocation(line: 1577, column: 24, scope: !7732)
!7788 = !DILocation(line: 1578, column: 8, scope: !7732)
!7789 = !DILocation(line: 1578, column: 13, scope: !7732)
!7790 = !DILocation(line: 1578, column: 25, scope: !7732)
!7791 = !DILocation(line: 1579, column: 8, scope: !7732)
!7792 = !DILocation(line: 1579, column: 23, scope: !7732)
!7793 = !DILocation(line: 1583, column: 10, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7732, file: !1064, line: 1583, column: 9)
!7795 = !DILocation(line: 1583, column: 24, scope: !7794)
!7796 = !DILocation(line: 1583, column: 32, scope: !7794)
!7797 = !DILocation(line: 1583, column: 35, scope: !7794)
!7798 = !DILocation(line: 1583, column: 49, scope: !7794)
!7799 = !DILocation(line: 1583, column: 9, scope: !7732)
!7800 = !DILocation(line: 1586, column: 12, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7794, file: !1064, line: 1583, column: 59)
!7802 = !DILocation(line: 1586, column: 17, scope: !7801)
!7803 = !DILocation(line: 1586, column: 25, scope: !7801)
!7804 = !DILocation(line: 1587, column: 12, scope: !7801)
!7805 = !DILocation(line: 1587, column: 17, scope: !7801)
!7806 = !DILocation(line: 1587, column: 24, scope: !7801)
!7807 = !DILocation(line: 1591, column: 10, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7732, file: !1064, line: 1591, column: 9)
!7809 = !DILocation(line: 1589, column: 5, scope: !7801)
!7810 = !DILocation(line: 1600, column: 32, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7732, file: !1064, line: 1600, column: 9)
!7812 = !DILocation(line: 1600, column: 35, scope: !7811)
!7813 = !DILocation(line: 1600, column: 49, scope: !7811)
!7814 = !DILocation(line: 1600, column: 9, scope: !7732)
!7815 = !DILocation(line: 1601, column: 12, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7811, file: !1064, line: 1600, column: 59)
!7817 = !DILocation(line: 1601, column: 17, scope: !7816)
!7818 = !DILocation(line: 1601, column: 25, scope: !7816)
!7819 = !DILocation(line: 1602, column: 12, scope: !7816)
!7820 = !DILocation(line: 1602, column: 17, scope: !7816)
!7821 = !DILocation(line: 1602, column: 24, scope: !7816)
!7822 = !DILocation(line: 1603, column: 5, scope: !7816)
!7823 = !DILocation(line: 1607, column: 8, scope: !7732)
!7824 = !DILocation(line: 1607, column: 20, scope: !7732)
!7825 = !DILocation(line: 1622, column: 5, scope: !7732)
!7826 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1064, file: !1064, line: 4553, type: !1336, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7827)
!7827 = !{!7828, !7829, !7830, !7831}
!7828 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7826, file: !1064, line: 4553, type: !88)
!7829 = !DILocalVariable(name: "D", scope: !7826, file: !1064, line: 4555, type: !1234)
!7830 = !DILocalVariable(name: "unlock", scope: !7826, file: !1064, line: 4556, type: !61)
!7831 = !DILocalVariable(name: "cmd", scope: !7826, file: !1064, line: 4557, type: !460)
!7832 = !DILocation(line: 0, scope: !7826)
!7833 = !DILocation(line: 4555, column: 24, scope: !7826)
!7834 = !DILocation(line: 4557, column: 5, scope: !7826)
!7835 = !DILocation(line: 4558, column: 12, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7826, file: !1064, line: 4558, column: 9)
!7837 = !DILocation(line: 4558, column: 9, scope: !7836)
!7838 = !DILocation(line: 4558, column: 23, scope: !7836)
!7839 = !DILocation(line: 4558, column: 31, scope: !7836)
!7840 = !DILocation(line: 4558, column: 34, scope: !7836)
!7841 = !DILocation(line: 4558, column: 48, scope: !7836)
!7842 = !DILocation(line: 4558, column: 56, scope: !7836)
!7843 = !DILocation(line: 4558, column: 59, scope: !7836)
!7844 = !DILocation(line: 4558, column: 73, scope: !7836)
!7845 = !DILocation(line: 4558, column: 9, scope: !7826)
!7846 = !DILocation(line: 4563, column: 24, scope: !7826)
!7847 = !DILocation(line: 4563, column: 31, scope: !7826)
!7848 = !DILocation(line: 4563, column: 36, scope: !7826)
!7849 = !DILocation(line: 4563, column: 28, scope: !7826)
!7850 = !DILocation(line: 4563, column: 5, scope: !7826)
!7851 = !DILocation(line: 4564, column: 5, scope: !7826)
!7852 = !DILocation(line: 4567, column: 28, scope: !7826)
!7853 = !DILocation(line: 4567, column: 36, scope: !7826)
!7854 = !DILocation(line: 4567, column: 41, scope: !7826)
!7855 = !DILocation(line: 4567, column: 5, scope: !7826)
!7856 = !DILocation(line: 4568, column: 17, scope: !7826)
!7857 = !DILocation(line: 4568, column: 22, scope: !7826)
!7858 = !DILocation(line: 4568, column: 14, scope: !7826)
!7859 = !DILocation(line: 4569, column: 22, scope: !7826)
!7860 = !DILocation(line: 4569, column: 54, scope: !7826)
!7861 = !DILocation(line: 4569, column: 65, scope: !7826)
!7862 = !DILocation(line: 4569, column: 62, scope: !7826)
!7863 = !DILocation(line: 4569, column: 87, scope: !7826)
!7864 = !DILocation(line: 4569, column: 85, scope: !7826)
!7865 = !DILocation(line: 4569, column: 60, scope: !7826)
!7866 = !DILocation(line: 4569, column: 58, scope: !7826)
!7867 = !DILocation(line: 4569, column: 51, scope: !7826)
!7868 = !DILocation(line: 4572, column: 24, scope: !7826)
!7869 = !DILocation(line: 4572, column: 5, scope: !7826)
!7870 = !DILocation(line: 4573, column: 5, scope: !7826)
!7871 = !DILocation(line: 4575, column: 5, scope: !7826)
!7872 = !DILocation(line: 4576, column: 1, scope: !7826)
!7873 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1064, file: !1064, line: 4488, type: !7303, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7874)
!7874 = !{!7875, !7876}
!7875 = !DILocalVariable(name: "D", arg: 1, scope: !7873, file: !1064, line: 4488, type: !1234)
!7876 = !DILocalVariable(name: "status", scope: !7873, file: !1064, line: 4490, type: !1286)
!7877 = !DILocation(line: 0, scope: !7873)
!7878 = !DILocation(line: 4490, column: 5, scope: !7873)
!7879 = !DILocation(line: 4491, column: 5, scope: !7873)
!7880 = !DILocation(line: 4492, column: 32, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7873, file: !1064, line: 4491, column: 10)
!7882 = !DILocation(line: 4492, column: 40, scope: !7881)
!7883 = !DILocation(line: 4492, column: 45, scope: !7881)
!7884 = !DILocation(line: 4492, column: 9, scope: !7881)
!7885 = !DILocation(line: 4493, column: 20, scope: !7873)
!7886 = !DILocation(line: 4493, column: 32, scope: !7873)
!7887 = !DILocation(line: 4493, column: 29, scope: !7873)
!7888 = !DILocation(line: 4493, column: 27, scope: !7873)
!7889 = !DILocation(line: 4493, column: 16, scope: !7873)
!7890 = !DILocation(line: 4493, column: 5, scope: !7881)
!7891 = distinct !{!7891, !7879, !7892}
!7892 = !DILocation(line: 4493, column: 54, scope: !7873)
!7893 = !DILocation(line: 4494, column: 1, scope: !7873)
!7894 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1064, file: !1064, line: 1742, type: !7733, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7895)
!7895 = !{!7896, !7897, !7898}
!7896 = !DILocalVariable(name: "driver", arg: 1, scope: !7894, file: !1064, line: 1742, type: !7735)
!7897 = !DILocalVariable(name: "D", arg: 2, scope: !7894, file: !1064, line: 1742, type: !1234)
!7898 = !DILocalVariable(name: "smap", scope: !7894, file: !1064, line: 1744, type: !1285)
!7899 = !DILocation(line: 0, scope: !7894)
!7900 = !DILocation(line: 1747, column: 15, scope: !7894)
!7901 = !DILocation(line: 1748, column: 22, scope: !7894)
!7902 = !DILocation(line: 1749, column: 5, scope: !7894)
!7903 = !DILocation(line: 1749, column: 22, scope: !7894)
!7904 = !DILocation(line: 1750, column: 5, scope: !7894)
!7905 = !DILocation(line: 1750, column: 22, scope: !7894)
!7906 = !DILocation(line: 1751, column: 5, scope: !7894)
!7907 = !DILocation(line: 1751, column: 22, scope: !7894)
!7908 = !DILocation(line: 1752, column: 5, scope: !7894)
!7909 = !DILocation(line: 1752, column: 22, scope: !7894)
!7910 = !DILocation(line: 1753, column: 5, scope: !7894)
!7911 = !DILocation(line: 1753, column: 22, scope: !7894)
!7912 = !DILocation(line: 1756, column: 8, scope: !7894)
!7913 = !DILocation(line: 1756, column: 13, scope: !7894)
!7914 = !DILocation(line: 1756, column: 24, scope: !7894)
!7915 = !DILocation(line: 1758, column: 8, scope: !7894)
!7916 = !DILocation(line: 1758, column: 13, scope: !7894)
!7917 = !DILocation(line: 1758, column: 28, scope: !7894)
!7918 = !DILocation(line: 1759, column: 8, scope: !7894)
!7919 = !DILocation(line: 1759, column: 13, scope: !7894)
!7920 = !DILocation(line: 1759, column: 29, scope: !7894)
!7921 = !DILocation(line: 1760, column: 8, scope: !7894)
!7922 = !DILocation(line: 1760, column: 13, scope: !7894)
!7923 = !DILocation(line: 1760, column: 23, scope: !7894)
!7924 = !DILocation(line: 1761, column: 8, scope: !7894)
!7925 = !DILocation(line: 1761, column: 13, scope: !7894)
!7926 = !DILocation(line: 1761, column: 24, scope: !7894)
!7927 = !DILocation(line: 1762, column: 8, scope: !7894)
!7928 = !DILocation(line: 1762, column: 13, scope: !7894)
!7929 = !DILocation(line: 1762, column: 21, scope: !7894)
!7930 = !DILocation(line: 1763, column: 8, scope: !7894)
!7931 = !DILocation(line: 1763, column: 13, scope: !7894)
!7932 = !DILocation(line: 1763, column: 20, scope: !7894)
!7933 = !DILocation(line: 1764, column: 8, scope: !7894)
!7934 = !DILocation(line: 1764, column: 23, scope: !7894)
!7935 = !DILocation(line: 1768, column: 8, scope: !7894)
!7936 = !DILocation(line: 1768, column: 20, scope: !7894)
!7937 = !DILocation(line: 1770, column: 5, scope: !7894)
!7938 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1064, file: !1064, line: 1775, type: !7733, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7939)
!7939 = !{!7940, !7941}
!7940 = !DILocalVariable(name: "driver", arg: 1, scope: !7938, file: !1064, line: 1775, type: !7735)
!7941 = !DILocalVariable(name: "D", arg: 2, scope: !7938, file: !1064, line: 1775, type: !1234)
!7942 = !DILocation(line: 0, scope: !7938)
!7943 = !DILocation(line: 1793, column: 5, scope: !7938)
!7944 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1064, file: !1064, line: 1932, type: !7733, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !7945)
!7945 = !{!7946, !7947}
!7946 = !DILocalVariable(name: "driver", arg: 1, scope: !7944, file: !1064, line: 1932, type: !7735)
!7947 = !DILocalVariable(name: "D", arg: 2, scope: !7944, file: !1064, line: 1932, type: !1234)
!7948 = !DILocation(line: 0, scope: !7944)
!7949 = !DILocation(line: 1935, column: 13, scope: !7944)
!7950 = !DILocation(line: 1935, column: 25, scope: !7944)
!7951 = !DILocation(line: 1936, column: 13, scope: !7944)
!7952 = !DILocation(line: 1936, column: 22, scope: !7944)
!7953 = !DILocation(line: 1937, column: 13, scope: !7944)
!7954 = !DILocation(line: 1937, column: 23, scope: !7944)
!7955 = !DILocation(line: 1939, column: 13, scope: !7944)
!7956 = !DILocation(line: 1939, column: 24, scope: !7944)
!7957 = !DILocation(line: 1940, column: 13, scope: !7944)
!7958 = !DILocation(line: 1940, column: 25, scope: !7944)
!7959 = !DILocation(line: 1945, column: 13, scope: !7944)
!7960 = !DILocation(line: 1945, column: 32, scope: !7944)
!7961 = !DILocation(line: 1946, column: 13, scope: !7944)
!7962 = !DILocation(line: 1946, column: 30, scope: !7944)
!7963 = !DILocation(line: 1947, column: 13, scope: !7944)
!7964 = !DILocation(line: 1947, column: 26, scope: !7944)
!7965 = !DILocation(line: 1948, column: 13, scope: !7944)
!7966 = !DILocation(line: 1948, column: 25, scope: !7944)
!7967 = !DILocation(line: 1949, column: 13, scope: !7944)
!7968 = !DILocation(line: 1949, column: 24, scope: !7944)
!7969 = !DILocation(line: 1956, column: 13, scope: !7944)
!7970 = !DILocation(line: 1956, column: 23, scope: !7944)
!7971 = !DILocation(line: 1957, column: 13, scope: !7944)
!7972 = !DILocation(line: 1957, column: 28, scope: !7944)
!7973 = !DILocation(line: 1960, column: 13, scope: !7944)
!7974 = !DILocation(line: 1960, column: 30, scope: !7944)
!7975 = !DILocation(line: 1961, column: 13, scope: !7944)
!7976 = !DILocation(line: 1961, column: 30, scope: !7944)
!7977 = !DILocation(line: 1962, column: 13, scope: !7944)
!7978 = !DILocation(line: 1962, column: 20, scope: !7944)
!7979 = !DILocation(line: 1968, column: 9, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7944, file: !1064, line: 1968, column: 9)
!7981 = !DILocation(line: 1968, column: 36, scope: !7980)
!7982 = !DILocation(line: 1968, column: 9, scope: !7944)
!7983 = !DILocation(line: 1971, column: 12, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7980, file: !1064, line: 1970, column: 5)
!7985 = !DILocation(line: 1971, column: 25, scope: !7984)
!7986 = !DILocation(line: 1979, column: 8, scope: !7944)
!7987 = !DILocation(line: 1979, column: 13, scope: !7944)
!7988 = !DILocation(line: 1979, column: 25, scope: !7944)
!7989 = !DILocation(line: 1980, column: 8, scope: !7944)
!7990 = !DILocation(line: 1980, column: 13, scope: !7944)
!7991 = !DILocation(line: 1980, column: 24, scope: !7944)
!7992 = !DILocation(line: 1981, column: 8, scope: !7944)
!7993 = !DILocation(line: 1981, column: 13, scope: !7944)
!7994 = !DILocation(line: 1981, column: 24, scope: !7944)
!7995 = !DILocation(line: 1982, column: 8, scope: !7944)
!7996 = !DILocation(line: 1982, column: 13, scope: !7944)
!7997 = !DILocation(line: 1982, column: 22, scope: !7944)
!7998 = !DILocation(line: 1983, column: 8, scope: !7944)
!7999 = !DILocation(line: 1983, column: 13, scope: !7944)
!8000 = !DILocation(line: 1983, column: 21, scope: !7944)
!8001 = !DILocation(line: 1984, column: 8, scope: !7944)
!8002 = !DILocation(line: 1984, column: 13, scope: !7944)
!8003 = !DILocation(line: 1984, column: 22, scope: !7944)
!8004 = !DILocation(line: 1985, column: 8, scope: !7944)
!8005 = !DILocation(line: 1985, column: 13, scope: !7944)
!8006 = !DILocation(line: 1985, column: 22, scope: !7944)
!8007 = !DILocation(line: 1986, column: 8, scope: !7944)
!8008 = !DILocation(line: 1986, column: 13, scope: !7944)
!8009 = !DILocation(line: 1986, column: 21, scope: !7944)
!8010 = !DILocation(line: 1987, column: 8, scope: !7944)
!8011 = !DILocation(line: 1987, column: 13, scope: !7944)
!8012 = !DILocation(line: 1987, column: 20, scope: !7944)
!8013 = !DILocation(line: 1988, column: 8, scope: !7944)
!8014 = !DILocation(line: 1988, column: 13, scope: !7944)
!8015 = !DILocation(line: 1988, column: 25, scope: !7944)
!8016 = !DILocation(line: 1989, column: 8, scope: !7944)
!8017 = !DILocation(line: 1989, column: 13, scope: !7944)
!8018 = !DILocation(line: 1989, column: 22, scope: !7944)
!8019 = !DILocation(line: 1990, column: 8, scope: !7944)
!8020 = !DILocation(line: 1990, column: 13, scope: !7944)
!8021 = !DILocation(line: 1990, column: 22, scope: !7944)
!8022 = !DILocation(line: 1993, column: 8, scope: !7944)
!8023 = !DILocation(line: 1993, column: 13, scope: !7944)
!8024 = !DILocation(line: 1993, column: 26, scope: !7944)
!8025 = !DILocation(line: 1996, column: 8, scope: !7944)
!8026 = !DILocation(line: 1996, column: 20, scope: !7944)
!8027 = !DILocation(line: 1999, column: 8, scope: !7944)
!8028 = !DILocation(line: 1999, column: 24, scope: !7944)
!8029 = !DILocation(line: 2000, column: 8, scope: !7944)
!8030 = !DILocation(line: 2000, column: 19, scope: !7944)
!8031 = !DILocation(line: 2001, column: 8, scope: !7944)
!8032 = !DILocation(line: 2001, column: 24, scope: !7944)
!8033 = !DILocation(line: 2002, column: 8, scope: !7944)
!8034 = !DILocation(line: 2002, column: 23, scope: !7944)
!8035 = !DILocation(line: 2004, column: 5, scope: !7944)
!8036 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1064, file: !1064, line: 2160, type: !1535, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8037)
!8037 = !{!8038, !8039, !8040, !8053, !8054, !8055}
!8038 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8036, file: !1064, line: 2160, type: !88)
!8039 = !DILocalVariable(name: "Info", arg: 2, scope: !8036, file: !1064, line: 2160, type: !88)
!8040 = !DILocalVariable(name: "FlashInfo", scope: !8036, file: !1064, line: 2162, type: !8041)
!8041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8042, size: 32)
!8042 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1260, line: 99, baseType: !8043)
!8043 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 90, size: 928, elements: !8044)
!8044 = !{!8045, !8046, !8047, !8048, !8049, !8050, !8051, !8052}
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !8043, file: !1260, line: 91, baseType: !61, size: 32)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !8043, file: !1260, line: 92, baseType: !1591, size: 256, offset: 32)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !8043, file: !1260, line: 93, baseType: !1591, size: 256, offset: 288)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !8043, file: !1260, line: 94, baseType: !1591, size: 256, offset: 544)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !8043, file: !1260, line: 95, baseType: !61, size: 32, offset: 800)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !8043, file: !1260, line: 96, baseType: !1583, size: 16, offset: 832)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !8043, file: !1260, line: 97, baseType: !61, size: 32, offset: 864)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !8043, file: !1260, line: 98, baseType: !61, size: 32, offset: 896)
!8053 = !DILocalVariable(name: "D", scope: !8036, file: !1064, line: 2163, type: !1234)
!8054 = !DILocalVariable(name: "i", scope: !8036, file: !1064, line: 2164, type: !61)
!8055 = !DILocalVariable(name: "result", scope: !8036, file: !1064, line: 2166, type: !940)
!8056 = !DILocation(line: 0, scope: !8036)
!8057 = !DILocation(line: 2163, column: 37, scope: !8036)
!8058 = !DILocation(line: 2202, column: 16, scope: !8036)
!8059 = !DILocation(line: 2202, column: 28, scope: !8036)
!8060 = !DILocation(line: 2204, column: 15, scope: !8036)
!8061 = !DILocation(line: 2204, column: 29, scope: !8036)
!8062 = !DILocation(line: 2204, column: 39, scope: !8036)
!8063 = !DILocation(line: 2204, column: 5, scope: !8036)
!8064 = !DILocation(line: 2205, column: 9, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8036, file: !1064, line: 2204, column: 45)
!8066 = !DILocation(line: 2205, column: 33, scope: !8065)
!8067 = !DILocation(line: 2206, column: 41, scope: !8065)
!8068 = !DILocation(line: 2206, column: 55, scope: !8065)
!8069 = !DILocation(line: 2206, column: 9, scope: !8065)
!8070 = !DILocation(line: 2206, column: 36, scope: !8065)
!8071 = !DILocation(line: 2207, column: 38, scope: !8065)
!8072 = !DILocation(line: 2207, column: 52, scope: !8065)
!8073 = !DILocation(line: 2207, column: 32, scope: !8065)
!8074 = !DILocation(line: 2209, column: 10, scope: !8065)
!8075 = distinct !{!8075, !8063, !8076}
!8076 = !DILocation(line: 2210, column: 5, scope: !8036)
!8077 = !DILocation(line: 2212, column: 16, scope: !8036)
!8078 = !DILocation(line: 2212, column: 32, scope: !8036)
!8079 = !DILocation(line: 2213, column: 16, scope: !8036)
!8080 = !DILocation(line: 2213, column: 25, scope: !8036)
!8081 = !DILocation(line: 2236, column: 5, scope: !8036)
!8082 = !DILocation(line: 2238, column: 5, scope: !8036)
!8083 = !DILocation(line: 2239, column: 18, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8036, file: !1064, line: 2238, column: 10)
!8085 = !DILocation(line: 2240, column: 34, scope: !8036)
!8086 = !DILocation(line: 2240, column: 5, scope: !8084)
!8087 = distinct !{!8087, !8082, !8088}
!8088 = !DILocation(line: 2240, column: 43, scope: !8036)
!8089 = !DILocation(line: 2259, column: 5, scope: !8036)
!8090 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1064, file: !1064, line: 2275, type: !1336, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8091)
!8091 = !{!8092, !8093, !8094, !8095}
!8092 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8090, file: !1064, line: 2275, type: !88)
!8093 = !DILocalVariable(name: "D", scope: !8090, file: !1064, line: 2278, type: !1234)
!8094 = !DILocalVariable(name: "status", scope: !8090, file: !1064, line: 2279, type: !1286)
!8095 = !DILocalVariable(name: "saved_mask", scope: !8090, file: !1064, line: 2280, type: !61)
!8096 = !DILocation(line: 0, scope: !8090)
!8097 = !DILocation(line: 2278, column: 33, scope: !8090)
!8098 = !DILocation(line: 2286, column: 5, scope: !8090)
!8099 = !DILocation(line: 2293, column: 9, scope: !8090)
!8100 = !DILocation(line: 2294, column: 26, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8090, file: !1064, line: 2293, column: 19)
!8102 = !DILocation(line: 2297, column: 17, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8101, file: !1064, line: 2297, column: 17)
!8104 = !DILocation(line: 2297, column: 17, scope: !8101)
!8105 = !DILocation(line: 2298, column: 17, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8103, file: !1064, line: 2297, column: 36)
!8107 = !DILocation(line: 2299, column: 37, scope: !8106)
!8108 = !DILocation(line: 2300, column: 13, scope: !8106)
!8109 = !DILocation(line: 2303, column: 50, scope: !8101)
!8110 = !DILocation(line: 2303, column: 55, scope: !8101)
!8111 = !DILocation(line: 2303, column: 22, scope: !8101)
!8112 = !DILocation(line: 2306, column: 35, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8101, file: !1064, line: 2306, column: 17)
!8114 = !DILocation(line: 2306, column: 32, scope: !8113)
!8115 = !DILocation(line: 2306, column: 30, scope: !8113)
!8116 = !DILocation(line: 2306, column: 19, scope: !8113)
!8117 = !DILocation(line: 2306, column: 17, scope: !8101)
!8118 = !DILocation(line: 2307, column: 17, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8113, file: !1064, line: 2306, column: 59)
!8120 = !DILocation(line: 2308, column: 17, scope: !8119)
!8121 = !DILocation(line: 2315, column: 12, scope: !8090)
!8122 = !DILocation(line: 2315, column: 21, scope: !8090)
!8123 = !DILocation(line: 2325, column: 9, scope: !8090)
!8124 = !DILocation(line: 2326, column: 5, scope: !8090)
!8125 = !DILocation(line: 2311, column: 17, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8113, file: !1064, line: 2310, column: 20)
!8127 = distinct !{!8127, !8099, !8128}
!8128 = !DILocation(line: 2313, column: 9, scope: !8090)
!8129 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1064, file: !1064, line: 2819, type: !1544, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8130)
!8130 = !{!8131, !8132, !8133, !8134, !8135, !8136, !8137, !8138, !8139, !8140, !8143, !8144}
!8131 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8129, file: !1064, line: 2819, type: !88)
!8132 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8129, file: !1064, line: 2819, type: !61)
!8133 = !DILocalVariable(name: "result", scope: !8129, file: !1064, line: 2821, type: !940)
!8134 = !DILocalVariable(name: "blocksize", scope: !8129, file: !1064, line: 2822, type: !61)
!8135 = !DILocalVariable(name: "eraseunit", scope: !8129, file: !1064, line: 2823, type: !61)
!8136 = !DILocalVariable(name: "eraseaddr", scope: !8129, file: !1064, line: 2824, type: !61)
!8137 = !DILocalVariable(name: "iteration", scope: !8129, file: !1064, line: 2825, type: !61)
!8138 = !DILocalVariable(name: "D", scope: !8129, file: !1064, line: 2826, type: !1234)
!8139 = !DILocalVariable(name: "erase_block", scope: !8129, file: !1064, line: 2827, type: !61)
!8140 = !DILocalVariable(name: "a", scope: !8141, file: !1064, line: 2853, type: !61)
!8141 = distinct !DILexicalBlock(scope: !8142, file: !1064, line: 2852, column: 56)
!8142 = distinct !DILexicalBlock(scope: !8129, file: !1064, line: 2852, column: 9)
!8143 = !DILocalVariable(name: "b", scope: !8141, file: !1064, line: 2853, type: !61)
!8144 = !DILocalVariable(name: "c", scope: !8141, file: !1064, line: 2853, type: !61)
!8145 = !DILocation(line: 0, scope: !8129)
!8146 = !DILocation(line: 2826, column: 30, scope: !8129)
!8147 = !DILocation(line: 2829, column: 5, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !1064, line: 2829, column: 5)
!8149 = distinct !DILexicalBlock(scope: !8129, file: !1064, line: 2829, column: 5)
!8150 = !DILocation(line: 2829, column: 5, scope: !8149)
!8151 = !DILocation(line: 2829, column: 5, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8148, file: !1064, line: 2829, column: 5)
!8153 = !DILocation(line: 2836, column: 9, scope: !8129)
!8154 = !DILocation(line: 2838, column: 8, scope: !8129)
!8155 = !DILocation(line: 2838, column: 21, scope: !8129)
!8156 = !DILocation(line: 2847, column: 5, scope: !8129)
!8157 = !DILocation(line: 2848, column: 18, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8129, file: !1064, line: 2847, column: 10)
!8159 = !DILocation(line: 2850, column: 34, scope: !8129)
!8160 = !DILocation(line: 2850, column: 5, scope: !8158)
!8161 = distinct !{!8161, !8156, !8162}
!8162 = !DILocation(line: 2850, column: 43, scope: !8129)
!8163 = !DILocation(line: 2839, column: 32, scope: !8129)
!8164 = !DILocation(line: 2861, column: 53, scope: !8141)
!8165 = !DILocation(line: 2861, column: 40, scope: !8141)
!8166 = !DILocation(line: 2861, column: 25, scope: !8141)
!8167 = !DILocation(line: 2874, column: 16, scope: !8141)
!8168 = !DILocation(line: 2874, column: 13, scope: !8141)
!8169 = !DILocation(line: 0, scope: !8141)
!8170 = !DILocation(line: 2875, column: 24, scope: !8141)
!8171 = !DILocation(line: 2877, column: 21, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8141, file: !1064, line: 2877, column: 13)
!8173 = !DILocation(line: 2877, column: 13, scope: !8141)
!8174 = !DILocation(line: 2879, column: 23, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8176, file: !1064, line: 2879, column: 21)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !1064, line: 2878, column: 120)
!8177 = distinct !DILexicalBlock(scope: !8178, file: !1064, line: 2878, column: 13)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !1064, line: 2878, column: 13)
!8179 = distinct !DILexicalBlock(scope: !8172, file: !1064, line: 2877, column: 27)
!8180 = !DILocation(line: 2879, column: 21, scope: !8176)
!8181 = !DILocation(line: 2878, column: 48, scope: !8177)
!8182 = !DILocation(line: 2878, column: 83, scope: !8177)
!8183 = !DILocation(line: 2878, column: 113, scope: !8177)
!8184 = !DILocation(line: 2878, column: 35, scope: !8177)
!8185 = !DILocation(line: 2878, column: 13, scope: !8178)
!8186 = distinct !{!8186, !8185, !8187}
!8187 = !DILocation(line: 2883, column: 13, scope: !8178)
!8188 = !DILocation(line: 2863, column: 19, scope: !8141)
!8189 = !DILocation(line: 2825, column: 24, scope: !8129)
!8190 = !DILocation(line: 2886, column: 9, scope: !8141)
!8191 = !DILocation(line: 2888, column: 36, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8141, file: !1064, line: 2886, column: 31)
!8193 = !DILocation(line: 2888, column: 41, scope: !8192)
!8194 = !DILocation(line: 2889, column: 17, scope: !8192)
!8195 = !DILocation(line: 2891, column: 36, scope: !8192)
!8196 = !DILocation(line: 2891, column: 41, scope: !8192)
!8197 = !DILocation(line: 2892, column: 17, scope: !8192)
!8198 = !DILocation(line: 2894, column: 36, scope: !8192)
!8199 = !DILocation(line: 2894, column: 41, scope: !8192)
!8200 = !DILocation(line: 2895, column: 17, scope: !8192)
!8201 = !DILocation(line: 2897, column: 17, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !1064, line: 2897, column: 17)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !1064, line: 2897, column: 17)
!8204 = distinct !DILexicalBlock(scope: !8192, file: !1064, line: 2897, column: 17)
!8205 = !DILocation(line: 0, scope: !8192)
!8206 = !DILocation(line: 2906, column: 5, scope: !8129)
!8207 = !DILocation(line: 2908, column: 32, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8129, file: !1064, line: 2906, column: 27)
!8209 = !DILocation(line: 2908, column: 37, scope: !8208)
!8210 = !DILocation(line: 2909, column: 13, scope: !8208)
!8211 = !DILocation(line: 2911, column: 32, scope: !8208)
!8212 = !DILocation(line: 2911, column: 37, scope: !8208)
!8213 = !DILocation(line: 2912, column: 13, scope: !8208)
!8214 = !DILocation(line: 2914, column: 32, scope: !8208)
!8215 = !DILocation(line: 2914, column: 37, scope: !8208)
!8216 = !DILocation(line: 2915, column: 13, scope: !8208)
!8217 = !DILocation(line: 0, scope: !8208)
!8218 = !DILocation(line: 2921, column: 56, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !1064, line: 2921, column: 5)
!8220 = distinct !DILexicalBlock(scope: !8129, file: !1064, line: 2921, column: 5)
!8221 = !DILocation(line: 2921, column: 5, scope: !8220)
!8222 = !DILocation(line: 2921, column: 35, scope: !8220)
!8223 = !DILocation(line: 2921, column: 22, scope: !8220)
!8224 = !DILocation(line: 2922, column: 9, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8219, file: !1064, line: 2921, column: 99)
!8226 = !DILocation(line: 2929, column: 9, scope: !8225)
!8227 = !DILocation(line: 2938, column: 26, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8225, file: !1064, line: 2929, column: 26)
!8229 = !DILocation(line: 2939, column: 37, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8228, file: !1064, line: 2939, column: 17)
!8231 = !DILocation(line: 2939, column: 17, scope: !8228)
!8232 = distinct !{!8232, !8226, !8233}
!8233 = !DILocation(line: 2943, column: 9, scope: !8225)
!8234 = !DILocation(line: 2921, column: 71, scope: !8219)
!8235 = !DILocation(line: 2921, column: 85, scope: !8219)
!8236 = distinct !{!8236, !8221, !8237}
!8237 = !DILocation(line: 2983, column: 5, scope: !8220)
!8238 = !DILocation(line: 2985, column: 21, scope: !8129)
!8239 = !DILocation(line: 2992, column: 9, scope: !8129)
!8240 = !DILocation(line: 3000, column: 5, scope: !8129)
!8241 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1064, file: !1064, line: 2533, type: !1548, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8242)
!8242 = !{!8243, !8244, !8245, !8246, !8247, !8248, !8249, !8250, !8251, !8252, !8253, !8254, !8255, !8256}
!8243 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8241, file: !1064, line: 2533, type: !88)
!8244 = !DILocalVariable(name: "Address", arg: 2, scope: !8241, file: !1064, line: 2533, type: !88)
!8245 = !DILocalVariable(name: "Data", arg: 3, scope: !8241, file: !1064, line: 2533, type: !88)
!8246 = !DILocalVariable(name: "Length", arg: 4, scope: !8241, file: !1064, line: 2533, type: !61)
!8247 = !DILocalVariable(name: "D", scope: !8241, file: !1064, line: 2535, type: !1234)
!8248 = !DILocalVariable(name: "savedMask", scope: !8241, file: !1064, line: 2536, type: !61)
!8249 = !DILocalVariable(name: "address", scope: !8241, file: !1064, line: 2537, type: !61)
!8250 = !DILocalVariable(name: "p_data", scope: !8241, file: !1064, line: 2538, type: !762)
!8251 = !DILocalVariable(name: "p_data_first", scope: !8241, file: !1064, line: 2539, type: !762)
!8252 = !DILocalVariable(name: "result", scope: !8241, file: !1064, line: 2540, type: !940)
!8253 = !DILocalVariable(name: "written", scope: !8241, file: !1064, line: 2541, type: !61)
!8254 = !DILocalVariable(name: "length", scope: !8241, file: !1064, line: 2542, type: !61)
!8255 = !DILocalVariable(name: "cmd1", scope: !8241, file: !1064, line: 2543, type: !61)
!8256 = !DILocalVariable(name: "j", scope: !8257, file: !1064, line: 2599, type: !61)
!8257 = distinct !DILexicalBlock(scope: !8258, file: !1064, line: 2597, column: 61)
!8258 = distinct !DILexicalBlock(scope: !8259, file: !1064, line: 2597, column: 13)
!8259 = distinct !DILexicalBlock(scope: !8241, file: !1064, line: 2583, column: 25)
!8260 = !DILocation(line: 0, scope: !8241)
!8261 = !DILocation(line: 2535, column: 26, scope: !8241)
!8262 = !DILocation(line: 2537, column: 37, scope: !8241)
!8263 = !DILocation(line: 2538, column: 5, scope: !8241)
!8264 = !DILocation(line: 2538, column: 19, scope: !8241)
!8265 = !DILocation(line: 2542, column: 5, scope: !8241)
!8266 = !DILocation(line: 2545, column: 5, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8268, file: !1064, line: 2545, column: 5)
!8268 = distinct !DILexicalBlock(scope: !8241, file: !1064, line: 2545, column: 5)
!8269 = !DILocation(line: 2545, column: 5, scope: !8268)
!8270 = !DILocation(line: 2545, column: 5, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8267, file: !1064, line: 2545, column: 5)
!8272 = !DILocation(line: 2567, column: 9, scope: !8241)
!8273 = !DILocation(line: 2569, column: 8, scope: !8241)
!8274 = !DILocation(line: 2569, column: 21, scope: !8241)
!8275 = !DILocation(line: 2576, column: 5, scope: !8241)
!8276 = !DILocation(line: 2577, column: 18, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8241, file: !1064, line: 2576, column: 10)
!8278 = !DILocation(line: 2579, column: 34, scope: !8241)
!8279 = !DILocation(line: 2579, column: 5, scope: !8277)
!8280 = distinct !{!8280, !8275, !8281}
!8281 = !DILocation(line: 2579, column: 43, scope: !8241)
!8282 = !DILocation(line: 2583, column: 14, scope: !8241)
!8283 = !DILocation(line: 2583, column: 5, scope: !8241)
!8284 = !DILocation(line: 2584, column: 27, scope: !8259)
!8285 = !DILocation(line: 2592, column: 18, scope: !8259)
!8286 = !DILocation(line: 2592, column: 35, scope: !8259)
!8287 = !DILocation(line: 2592, column: 74, scope: !8259)
!8288 = !DILocation(line: 2592, column: 50, scope: !8259)
!8289 = !DILocation(line: 2592, column: 39, scope: !8259)
!8290 = !DILocation(line: 2595, column: 37, scope: !8259)
!8291 = !DILocation(line: 2595, column: 29, scope: !8259)
!8292 = !DILocation(line: 2595, column: 16, scope: !8259)
!8293 = !DILocation(line: 2597, column: 13, scope: !8258)
!8294 = !DILocation(line: 2597, column: 30, scope: !8258)
!8295 = !DILocation(line: 2597, column: 13, scope: !8259)
!8296 = !DILocation(line: 0, scope: !8257)
!8297 = !DILocation(line: 2600, column: 27, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8299, file: !1064, line: 2600, column: 13)
!8299 = distinct !DILexicalBlock(scope: !8257, file: !1064, line: 2600, column: 13)
!8300 = !DILocation(line: 2600, column: 13, scope: !8299)
!8301 = !DILocation(line: 2601, column: 38, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8298, file: !1064, line: 2600, column: 42)
!8303 = !DILocation(line: 2601, column: 17, scope: !8302)
!8304 = !DILocation(line: 2601, column: 36, scope: !8302)
!8305 = !DILocation(line: 2600, column: 38, scope: !8298)
!8306 = distinct !{!8306, !8300, !8307}
!8307 = !DILocation(line: 2602, column: 13, scope: !8299)
!8308 = !DILocation(line: 0, scope: !8259)
!8309 = !DILocation(line: 2606, column: 18, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8259, file: !1064, line: 2606, column: 13)
!8311 = !DILocation(line: 2606, column: 29, scope: !8310)
!8312 = !DILocation(line: 2606, column: 13, scope: !8259)
!8313 = !DILocation(line: 2607, column: 13, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8310, file: !1064, line: 2606, column: 55)
!8315 = !DILocation(line: 2608, column: 9, scope: !8314)
!8316 = !DILocation(line: 2613, column: 16, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8259, file: !1064, line: 2613, column: 13)
!8318 = !DILocation(line: 2613, column: 29, scope: !8317)
!8319 = !DILocation(line: 0, scope: !8317)
!8320 = !DILocation(line: 2613, column: 13, scope: !8259)
!8321 = !DILocation(line: 2614, column: 20, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8317, file: !1064, line: 2613, column: 35)
!8323 = !DILocation(line: 2615, column: 32, scope: !8322)
!8324 = !DILocation(line: 2615, column: 40, scope: !8322)
!8325 = !DILocation(line: 2615, column: 13, scope: !8322)
!8326 = !DILocation(line: 2616, column: 9, scope: !8322)
!8327 = !DILocation(line: 2619, column: 20, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8317, file: !1064, line: 2618, column: 9)
!8329 = !DILocation(line: 2620, column: 32, scope: !8328)
!8330 = !DILocation(line: 2620, column: 40, scope: !8328)
!8331 = !DILocation(line: 2620, column: 13, scope: !8328)
!8332 = !DILocation(line: 2626, column: 21, scope: !8259)
!8333 = !DILocation(line: 2633, column: 37, scope: !8259)
!8334 = !DILocation(line: 2634, column: 45, scope: !8259)
!8335 = !DILocation(line: 2634, column: 42, scope: !8259)
!8336 = !DILocation(line: 2634, column: 40, scope: !8259)
!8337 = !DILocation(line: 2634, column: 58, scope: !8259)
!8338 = !DILocation(line: 2634, column: 29, scope: !8259)
!8339 = !DILocation(line: 2635, column: 28, scope: !8259)
!8340 = !DILocation(line: 2636, column: 9, scope: !8259)
!8341 = !DILocation(line: 2638, column: 26, scope: !8259)
!8342 = !DILocation(line: 2638, column: 9, scope: !8259)
!8343 = !DILocation(line: 2639, column: 29, scope: !8259)
!8344 = !DILocation(line: 2639, column: 9, scope: !8259)
!8345 = !DILocation(line: 2662, column: 9, scope: !8259)
!8346 = !DILocation(line: 2670, column: 9, scope: !8259)
!8347 = !DILocation(line: 2676, column: 89, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8259, file: !1064, line: 2670, column: 13)
!8349 = !DILocation(line: 2676, column: 26, scope: !8348)
!8350 = !DILocation(line: 2678, column: 36, scope: !8259)
!8351 = !DILocation(line: 2678, column: 9, scope: !8348)
!8352 = distinct !{!8352, !8346, !8353}
!8353 = !DILocation(line: 2678, column: 45, scope: !8259)
!8354 = !DILocation(line: 2718, column: 19, scope: !8259)
!8355 = !DILocation(line: 2718, column: 16, scope: !8259)
!8356 = !DILocation(line: 2719, column: 16, scope: !8259)
!8357 = !DILocation(line: 2722, column: 31, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8259, file: !1064, line: 2722, column: 13)
!8359 = !DILocation(line: 2722, column: 13, scope: !8259)
!8360 = distinct !{!8360, !8283, !8361}
!8361 = !DILocation(line: 2725, column: 5, scope: !8241)
!8362 = !DILocation(line: 2748, column: 21, scope: !8241)
!8363 = !DILocation(line: 2755, column: 9, scope: !8241)
!8364 = !DILocation(line: 2757, column: 16, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8241, file: !1064, line: 2757, column: 9)
!8366 = !DILocation(line: 2761, column: 1, scope: !8241)
!8367 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1064, file: !1064, line: 3019, type: !1544, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8368)
!8368 = !{!8369, !8370}
!8369 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8367, file: !1064, line: 3019, type: !88)
!8370 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8367, file: !1064, line: 3019, type: !61)
!8371 = !DILocation(line: 0, scope: !8367)
!8372 = !DILocation(line: 3021, column: 5, scope: !8367)
!8373 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1064, file: !1064, line: 3124, type: !1553, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8374)
!8374 = !{!8375, !8376, !8377, !8378, !8379, !8380, !8381, !8382}
!8375 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8373, file: !1064, line: 3124, type: !88)
!8376 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8373, file: !1064, line: 3124, type: !61)
!8377 = !DILocalVariable(name: "result", scope: !8373, file: !1064, line: 3126, type: !940)
!8378 = !DILocalVariable(name: "savedMask", scope: !8373, file: !1064, line: 3127, type: !61)
!8379 = !DILocalVariable(name: "D", scope: !8373, file: !1064, line: 3128, type: !1234)
!8380 = !DILocalVariable(name: "status_busy", scope: !8373, file: !1064, line: 3129, type: !1286)
!8381 = !DILocalVariable(name: "status_suspend", scope: !8373, file: !1064, line: 3129, type: !1286)
!8382 = !DILocalVariable(name: "check_status", scope: !8383, file: !1064, line: 3141, type: !1286)
!8383 = distinct !DILexicalBlock(scope: !8384, file: !1064, line: 3140, column: 56)
!8384 = distinct !DILexicalBlock(scope: !8373, file: !1064, line: 3140, column: 9)
!8385 = !DILocation(line: 0, scope: !8373)
!8386 = !DILocation(line: 3128, column: 47, scope: !8373)
!8387 = !DILocation(line: 3131, column: 5, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !1064, line: 3131, column: 5)
!8389 = distinct !DILexicalBlock(scope: !8373, file: !1064, line: 3131, column: 5)
!8390 = !DILocation(line: 3131, column: 5, scope: !8389)
!8391 = !DILocation(line: 3131, column: 5, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8388, file: !1064, line: 3131, column: 5)
!8393 = !DILocation(line: 3134, column: 50, scope: !8373)
!8394 = !DILocation(line: 3134, column: 55, scope: !8373)
!8395 = !DILocation(line: 3134, column: 22, scope: !8373)
!8396 = !DILocation(line: 3135, column: 50, scope: !8373)
!8397 = !DILocation(line: 3135, column: 55, scope: !8373)
!8398 = !DILocation(line: 3135, column: 22, scope: !8373)
!8399 = !DILocation(line: 3138, column: 17, scope: !8373)
!8400 = !DILocation(line: 3140, column: 32, scope: !8384)
!8401 = !DILocation(line: 3140, column: 29, scope: !8384)
!8402 = !DILocation(line: 3140, column: 27, scope: !8384)
!8403 = !DILocation(line: 3140, column: 11, scope: !8384)
!8404 = !DILocation(line: 3140, column: 9, scope: !8373)
!8405 = !DILocation(line: 3141, column: 34, scope: !8383)
!8406 = !DILocation(line: 3141, column: 60, scope: !8383)
!8407 = !DILocation(line: 3141, column: 58, scope: !8383)
!8408 = !DILocation(line: 0, scope: !8383)
!8409 = !DILocation(line: 3144, column: 37, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8383, file: !1064, line: 3144, column: 13)
!8411 = !DILocation(line: 3144, column: 35, scope: !8410)
!8412 = !DILocation(line: 3144, column: 16, scope: !8410)
!8413 = !DILocation(line: 3144, column: 52, scope: !8410)
!8414 = !DILocation(line: 3145, column: 21, scope: !8410)
!8415 = !DILocation(line: 3145, column: 38, scope: !8410)
!8416 = !DILocation(line: 3147, column: 13, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8418, file: !1064, line: 3147, column: 13)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !1064, line: 3147, column: 13)
!8419 = distinct !DILexicalBlock(scope: !8410, file: !1064, line: 3145, column: 61)
!8420 = !DILocation(line: 3147, column: 13, scope: !8418)
!8421 = !DILocation(line: 3147, column: 13, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8417, file: !1064, line: 3147, column: 13)
!8423 = !DILocation(line: 3150, column: 13, scope: !8419)
!8424 = !DILocation(line: 3151, column: 33, scope: !8419)
!8425 = !DILocation(line: 3153, column: 9, scope: !8419)
!8426 = !DILocation(line: 3155, column: 20, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8428, file: !1064, line: 3155, column: 17)
!8428 = distinct !DILexicalBlock(scope: !8410, file: !1064, line: 3153, column: 16)
!8429 = !DILocation(line: 3155, column: 31, scope: !8427)
!8430 = !DILocation(line: 3155, column: 17, scope: !8428)
!8431 = !DILocation(line: 3156, column: 36, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8427, file: !1064, line: 3155, column: 54)
!8433 = !DILocation(line: 3156, column: 17, scope: !8432)
!8434 = !DILocation(line: 3157, column: 36, scope: !8432)
!8435 = !DILocation(line: 3157, column: 17, scope: !8432)
!8436 = !DILocation(line: 3158, column: 13, scope: !8432)
!8437 = !DILocation(line: 3191, column: 5, scope: !8373)
!8438 = !DILocation(line: 3193, column: 9, scope: !8373)
!8439 = !DILocation(line: 3160, column: 13, scope: !8428)
!8440 = !DILocation(line: 3173, column: 13, scope: !8428)
!8441 = !DILocation(line: 3194, column: 18, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8443, file: !1064, line: 3193, column: 32)
!8443 = distinct !DILexicalBlock(scope: !8373, file: !1064, line: 3193, column: 9)
!8444 = !DILocation(line: 3195, column: 5, scope: !8442)
!8445 = !DILocation(line: 3197, column: 5, scope: !8373)
!8446 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1064, file: !1064, line: 3225, type: !1544, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8447)
!8447 = !{!8448, !8449, !8450, !8451, !8452}
!8448 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8446, file: !1064, line: 3225, type: !88)
!8449 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8446, file: !1064, line: 3225, type: !61)
!8450 = !DILocalVariable(name: "D", scope: !8446, file: !1064, line: 3227, type: !1234)
!8451 = !DILocalVariable(name: "status", scope: !8446, file: !1064, line: 3228, type: !1286)
!8452 = !DILocalVariable(name: "savedMask", scope: !8446, file: !1064, line: 3229, type: !61)
!8453 = !DILocation(line: 0, scope: !8446)
!8454 = !DILocation(line: 3227, column: 30, scope: !8446)
!8455 = !DILocation(line: 3231, column: 17, scope: !8446)
!8456 = !DILocation(line: 3234, column: 5, scope: !8446)
!8457 = !DILocation(line: 3238, column: 5, scope: !8446)
!8458 = !DILocation(line: 3239, column: 46, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8446, file: !1064, line: 3238, column: 15)
!8460 = !DILocation(line: 3239, column: 51, scope: !8459)
!8461 = !DILocation(line: 3239, column: 18, scope: !8459)
!8462 = !DILocation(line: 3241, column: 31, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8459, file: !1064, line: 3241, column: 13)
!8464 = !DILocation(line: 3241, column: 28, scope: !8463)
!8465 = !DILocation(line: 3241, column: 26, scope: !8463)
!8466 = !DILocation(line: 3241, column: 15, scope: !8463)
!8467 = !DILocation(line: 3241, column: 13, scope: !8459)
!8468 = distinct !{!8468, !8457, !8469}
!8469 = !DILocation(line: 3244, column: 5, scope: !8446)
!8470 = !DILocation(line: 3246, column: 5, scope: !8446)
!8471 = !DILocation(line: 3248, column: 5, scope: !8446)
!8472 = !DILocation(line: 3250, column: 5, scope: !8446)
!8473 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1064, file: !1064, line: 3277, type: !1544, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8474)
!8474 = !{!8475, !8476, !8477}
!8475 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8473, file: !1064, line: 3277, type: !88)
!8476 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8473, file: !1064, line: 3277, type: !61)
!8477 = !DILocalVariable(name: "D", scope: !8473, file: !1064, line: 3279, type: !1234)
!8478 = !DILocation(line: 0, scope: !8473)
!8479 = !DILocation(line: 3279, column: 29, scope: !8473)
!8480 = !DILocation(line: 3281, column: 5, scope: !8473)
!8481 = !DILocation(line: 3282, column: 5, scope: !8473)
!8482 = !DILocation(line: 3283, column: 5, scope: !8473)
!8483 = !DILocation(line: 3285, column: 5, scope: !8473)
!8484 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1064, file: !1064, line: 3332, type: !1570, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8485)
!8485 = !{!8486, !8487, !8488}
!8486 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8484, file: !1064, line: 3332, type: !88)
!8487 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !8484, file: !1064, line: 3332, type: !88)
!8488 = !DILocalVariable(name: "ACTION", arg: 3, scope: !8484, file: !1064, line: 3332, type: !61)
!8489 = !DILocation(line: 0, scope: !8484)
!8490 = !DILocation(line: 3334, column: 5, scope: !8484)
!8491 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1064, file: !1064, line: 2350, type: !1578, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8492)
!8492 = !{!8493, !8494, !8495, !8496}
!8493 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8491, file: !1064, line: 2350, type: !88)
!8494 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !8491, file: !1064, line: 2350, type: !61)
!8495 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !8491, file: !1064, line: 2350, type: !88)
!8496 = !DILocalVariable(name: "D", scope: !8491, file: !1064, line: 2352, type: !1234)
!8497 = !DILocation(line: 0, scope: !8491)
!8498 = !DILocation(line: 2353, column: 9, scope: !8491)
!8499 = !DILocation(line: 2354, column: 12, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !1064, line: 2353, column: 51)
!8501 = distinct !DILexicalBlock(scope: !8491, file: !1064, line: 2353, column: 9)
!8502 = !DILocation(line: 2354, column: 9, scope: !8500)
!8503 = !DILocation(line: 2355, column: 5, scope: !8500)
!8504 = !DILocation(line: 2356, column: 17, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !1064, line: 2356, column: 13)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !1064, line: 2355, column: 71)
!8507 = distinct !DILexicalBlock(scope: !8501, file: !1064, line: 2355, column: 16)
!8508 = !DILocation(line: 2356, column: 14, scope: !8505)
!8509 = !DILocation(line: 2356, column: 28, scope: !8505)
!8510 = !DILocation(line: 2356, column: 49, scope: !8505)
!8511 = !DILocation(line: 2356, column: 56, scope: !8505)
!8512 = !DILocation(line: 2356, column: 70, scope: !8505)
!8513 = !DILocation(line: 2356, column: 80, scope: !8505)
!8514 = !DILocation(line: 2356, column: 13, scope: !8506)
!8515 = !DILocation(line: 2361, column: 9, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !1064, line: 2361, column: 9)
!8517 = distinct !DILexicalBlock(scope: !8518, file: !1064, line: 2361, column: 9)
!8518 = distinct !DILexicalBlock(scope: !8519, file: !1064, line: 2361, column: 9)
!8519 = distinct !DILexicalBlock(scope: !8507, file: !1064, line: 2359, column: 12)
!8520 = !DILocation(line: 2363, column: 5, scope: !8491)
!8521 = !DILocation(line: 2364, column: 1, scope: !8491)
!8522 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1064, file: !1064, line: 3355, type: !1336, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8523)
!8523 = !{!8524, !8525, !8526}
!8524 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8522, file: !1064, line: 3355, type: !88)
!8525 = !DILocalVariable(name: "D", scope: !8522, file: !1064, line: 3357, type: !1234)
!8526 = !DILocalVariable(name: "status", scope: !8522, file: !1064, line: 3358, type: !1034)
!8527 = !DILocation(line: 0, scope: !8522)
!8528 = !DILocation(line: 3366, column: 12, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8522, file: !1064, line: 3366, column: 9)
!8530 = !DILocation(line: 3366, column: 17, scope: !8529)
!8531 = !DILocation(line: 3366, column: 9, scope: !8529)
!8532 = !DILocation(line: 3366, column: 9, scope: !8522)
!8533 = !DILocation(line: 3357, column: 25, scope: !8522)
!8534 = !DILocation(line: 3367, column: 18, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8529, file: !1064, line: 3366, column: 33)
!8536 = !DILocation(line: 3368, column: 25, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8535, file: !1064, line: 3368, column: 13)
!8538 = !DILocation(line: 3368, column: 22, scope: !8537)
!8539 = !DILocation(line: 3368, column: 20, scope: !8537)
!8540 = !DILocation(line: 3368, column: 13, scope: !8535)
!8541 = !DILocation(line: 3373, column: 5, scope: !8522)
!8542 = !DILocation(line: 3374, column: 1, scope: !8522)
!8543 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1064, file: !1064, line: 3044, type: !8544, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8546)
!8544 = !DISubroutineType(types: !8545)
!8545 = !{!940, !88, !61, !460}
!8546 = !{!8547, !8548, !8549, !8550, !8551, !8552, !8553, !8554}
!8547 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8543, file: !1064, line: 3044, type: !88)
!8548 = !DILocalVariable(name: "addr", arg: 2, scope: !8543, file: !1064, line: 3044, type: !61)
!8549 = !DILocalVariable(name: "data", arg: 3, scope: !8543, file: !1064, line: 3044, type: !460)
!8550 = !DILocalVariable(name: "savedMask", scope: !8543, file: !1064, line: 3046, type: !61)
!8551 = !DILocalVariable(name: "D", scope: !8543, file: !1064, line: 3047, type: !1234)
!8552 = !DILocalVariable(name: "result", scope: !8543, file: !1064, line: 3048, type: !940)
!8553 = !DILocalVariable(name: "check_data", scope: !8543, file: !1064, line: 3049, type: !460)
!8554 = !DILocalVariable(name: "status_busy", scope: !8543, file: !1064, line: 3050, type: !1034)
!8555 = !DILocation(line: 0, scope: !8543)
!8556 = !DILocation(line: 3047, column: 43, scope: !8543)
!8557 = !DILocation(line: 3053, column: 47, scope: !8543)
!8558 = !DILocation(line: 3053, column: 52, scope: !8543)
!8559 = !DILocation(line: 3053, column: 19, scope: !8543)
!8560 = !DILocation(line: 3056, column: 9, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8543, file: !1064, line: 3056, column: 9)
!8562 = !DILocation(line: 3056, column: 9, scope: !8543)
!8563 = !DILocation(line: 3058, column: 9, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8565, file: !1064, line: 3058, column: 9)
!8565 = distinct !DILexicalBlock(scope: !8566, file: !1064, line: 3058, column: 9)
!8566 = distinct !DILexicalBlock(scope: !8561, file: !1064, line: 3056, column: 28)
!8567 = !DILocation(line: 3058, column: 9, scope: !8565)
!8568 = !DILocation(line: 3058, column: 9, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8564, file: !1064, line: 3058, column: 9)
!8570 = !DILocation(line: 3060, column: 9, scope: !8566)
!8571 = !DILocation(line: 3062, column: 29, scope: !8566)
!8572 = !DILocation(line: 3063, column: 5, scope: !8566)
!8573 = !DILocation(line: 3065, column: 38, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8561, file: !1064, line: 3065, column: 15)
!8575 = !DILocation(line: 3065, column: 35, scope: !8574)
!8576 = !DILocation(line: 3065, column: 33, scope: !8574)
!8577 = !DILocation(line: 3065, column: 17, scope: !8574)
!8578 = !DILocation(line: 3065, column: 15, scope: !8561)
!8579 = !DILocation(line: 3066, column: 21, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8574, file: !1064, line: 3065, column: 62)
!8581 = !DILocation(line: 3068, column: 9, scope: !8580)
!8582 = !DILocation(line: 3071, column: 23, scope: !8580)
!8583 = !DILocation(line: 3071, column: 22, scope: !8580)
!8584 = !DILocation(line: 3073, column: 24, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8580, file: !1064, line: 3073, column: 13)
!8586 = !DILocation(line: 3073, column: 13, scope: !8580)
!8587 = !DILocation(line: 3078, column: 16, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !1064, line: 3078, column: 16)
!8589 = distinct !DILexicalBlock(scope: !8585, file: !1064, line: 3075, column: 16)
!8590 = !DILocation(line: 3078, column: 16, scope: !8589)
!8591 = !DILocation(line: 3081, column: 58, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8588, file: !1064, line: 3078, column: 46)
!8593 = !DILocation(line: 3081, column: 17, scope: !8592)
!8594 = !DILocation(line: 3082, column: 22, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8592, file: !1064, line: 3082, column: 21)
!8596 = !DILocation(line: 3082, column: 49, scope: !8595)
!8597 = !DILocation(line: 3082, column: 21, scope: !8592)
!8598 = !DILocation(line: 3088, column: 9, scope: !8580)
!8599 = !DILocation(line: 3091, column: 9, scope: !8543)
!8600 = !DILocation(line: 3092, column: 13, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8602, file: !1064, line: 3092, column: 13)
!8602 = distinct !DILexicalBlock(scope: !8543, file: !1064, line: 3091, column: 9)
!8603 = !DILocation(line: 3092, column: 33, scope: !8601)
!8604 = !DILocation(line: 3092, column: 13, scope: !8602)
!8605 = !DILocation(line: 3106, column: 5, scope: !8543)
!8606 = !DILocation(line: 3107, column: 1, scope: !8543)
!8607 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1064, file: !1064, line: 3497, type: !8608, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8610)
!8608 = !DISubroutineType(types: !8609)
!8609 = !{null, !1234, !61}
!8610 = !{!8611, !8612, !8613}
!8611 = !DILocalVariable(name: "D", arg: 1, scope: !8607, file: !1064, line: 3497, type: !1234)
!8612 = !DILocalVariable(name: "addr", arg: 2, scope: !8607, file: !1064, line: 3497, type: !61)
!8613 = !DILocalVariable(name: "savedMask", scope: !8607, file: !1064, line: 3499, type: !61)
!8614 = !DILocation(line: 0, scope: !8607)
!8615 = !DILocation(line: 3501, column: 14, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8607, file: !1064, line: 3501, column: 9)
!8617 = !DILocation(line: 3501, column: 25, scope: !8616)
!8618 = !DILocation(line: 3501, column: 9, scope: !8607)
!8619 = !DILocation(line: 3502, column: 9, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8616, file: !1064, line: 3501, column: 51)
!8621 = !DILocation(line: 3503, column: 5, scope: !8620)
!8622 = !DILocation(line: 3507, column: 17, scope: !8607)
!8623 = !DILocation(line: 3516, column: 5, scope: !8607)
!8624 = !DILocation(line: 3517, column: 31, scope: !8607)
!8625 = !DILocation(line: 3517, column: 38, scope: !8607)
!8626 = !DILocation(line: 3517, column: 43, scope: !8607)
!8627 = !DILocation(line: 3517, column: 59, scope: !8607)
!8628 = !DILocation(line: 3517, column: 56, scope: !8607)
!8629 = !DILocation(line: 3517, column: 5, scope: !8607)
!8630 = !DILocation(line: 3523, column: 5, scope: !8607)
!8631 = !DILocation(line: 3524, column: 1, scope: !8607)
!8632 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1064, file: !1064, line: 2018, type: !7733, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8633)
!8633 = !{!8634, !8635, !8636}
!8634 = !DILocalVariable(name: "driver", arg: 1, scope: !8632, file: !1064, line: 2018, type: !7735)
!8635 = !DILocalVariable(name: "D", arg: 2, scope: !8632, file: !1064, line: 2018, type: !1234)
!8636 = !DILocalVariable(name: "result", scope: !8632, file: !1064, line: 2020, type: !940)
!8637 = !DILocation(line: 0, scope: !8632)
!8638 = !DILocation(line: 2022, column: 13, scope: !8632)
!8639 = !DILocation(line: 2022, column: 5, scope: !8632)
!8640 = !DILocation(line: 2031, column: 16, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8632, file: !1064, line: 2022, column: 31)
!8642 = !DILocation(line: 2031, column: 27, scope: !8641)
!8643 = !DILocation(line: 2033, column: 22, scope: !8641)
!8644 = !DILocation(line: 2034, column: 13, scope: !8641)
!8645 = !DILocation(line: 2049, column: 16, scope: !8641)
!8646 = !DILocation(line: 2049, column: 27, scope: !8641)
!8647 = !DILocation(line: 2051, column: 23, scope: !8641)
!8648 = !DILocation(line: 2053, column: 13, scope: !8641)
!8649 = !DILocation(line: 2058, column: 22, scope: !8641)
!8650 = !DILocation(line: 2059, column: 13, scope: !8641)
!8651 = !DILocation(line: 2079, column: 13, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8653, file: !1064, line: 2079, column: 13)
!8653 = distinct !DILexicalBlock(scope: !8654, file: !1064, line: 2079, column: 13)
!8654 = distinct !DILexicalBlock(scope: !8641, file: !1064, line: 2079, column: 13)
!8655 = !DILocation(line: 2083, column: 5, scope: !8632)
!8656 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1064, file: !1064, line: 2100, type: !8657, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8659)
!8657 = !DISubroutineType(types: !8658)
!8658 = !{!940, !7735, !1234, !61, !61}
!8659 = !{!8660, !8661, !8662, !8663, !8664}
!8660 = !DILocalVariable(name: "driver", arg: 1, scope: !8656, file: !1064, line: 2100, type: !7735)
!8661 = !DILocalVariable(name: "D", arg: 2, scope: !8656, file: !1064, line: 2100, type: !1234)
!8662 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !8656, file: !1064, line: 2100, type: !61)
!8663 = !DILocalVariable(name: "parameter", arg: 4, scope: !8656, file: !1064, line: 2100, type: !61)
!8664 = !DILocalVariable(name: "result", scope: !8656, file: !1064, line: 2102, type: !940)
!8665 = !DILocation(line: 0, scope: !8656)
!8666 = !DILocation(line: 2105, column: 16, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8656, file: !1064, line: 2105, column: 9)
!8668 = !DILocation(line: 2105, column: 24, scope: !8667)
!8669 = !DILocation(line: 2109, column: 12, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8656, file: !1064, line: 2109, column: 9)
!8671 = !DILocation(line: 2109, column: 16, scope: !8670)
!8672 = !DILocation(line: 2109, column: 24, scope: !8670)
!8673 = !DILocation(line: 2109, column: 30, scope: !8670)
!8674 = !DILocation(line: 2109, column: 40, scope: !8670)
!8675 = !DILocation(line: 2109, column: 9, scope: !8656)
!8676 = !DILocation(line: 2118, column: 19, scope: !8656)
!8677 = !DILocation(line: 2118, column: 8, scope: !8656)
!8678 = !DILocation(line: 2118, column: 17, scope: !8656)
!8679 = !DILocation(line: 2119, column: 23, scope: !8656)
!8680 = !DILocation(line: 2119, column: 8, scope: !8656)
!8681 = !DILocation(line: 2119, column: 21, scope: !8656)
!8682 = !DILocation(line: 2122, column: 5, scope: !8656)
!8683 = !DILocation(line: 2125, column: 8, scope: !8656)
!8684 = !DILocation(line: 2125, column: 13, scope: !8656)
!8685 = !DILocation(line: 2125, column: 24, scope: !8656)
!8686 = !DILocation(line: 2126, column: 26, scope: !8656)
!8687 = !DILocation(line: 2126, column: 5, scope: !8656)
!8688 = !DILocation(line: 2128, column: 9, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8656, file: !1064, line: 2128, column: 9)
!8690 = !DILocation(line: 2128, column: 31, scope: !8689)
!8691 = !DILocation(line: 2128, column: 60, scope: !8689)
!8692 = !DILocation(line: 2128, column: 9, scope: !8656)
!8693 = !DILocation(line: 2129, column: 12, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8689, file: !1064, line: 2128, column: 110)
!8695 = !DILocation(line: 2129, column: 17, scope: !8694)
!8696 = !DILocation(line: 2129, column: 28, scope: !8694)
!8697 = !DILocation(line: 2130, column: 9, scope: !8694)
!8698 = !DILocation(line: 2131, column: 5, scope: !8694)
!8699 = !DILocation(line: 2134, column: 14, scope: !8656)
!8700 = !DILocation(line: 2136, column: 5, scope: !8656)
!8701 = !DILocation(line: 2137, column: 1, scope: !8656)
!8702 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1064, file: !1064, line: 3387, type: !8703, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8705)
!8703 = !DISubroutineType(types: !8704)
!8704 = !{null, !1234, !762}
!8705 = !{!8706, !8707, !8708}
!8706 = !DILocalVariable(name: "D", arg: 1, scope: !8702, file: !1064, line: 3387, type: !1234)
!8707 = !DILocalVariable(name: "id", arg: 2, scope: !8702, file: !1064, line: 3387, type: !762)
!8708 = !DILocalVariable(name: "cmd", scope: !8702, file: !1064, line: 3389, type: !460)
!8709 = !DILocation(line: 0, scope: !8702)
!8710 = !DILocation(line: 3389, column: 5, scope: !8702)
!8711 = !DILocation(line: 3405, column: 9, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8702, file: !1064, line: 3405, column: 9)
!8713 = !DILocation(line: 3405, column: 21, scope: !8712)
!8714 = !DILocation(line: 0, scope: !8712)
!8715 = !DILocation(line: 3405, column: 9, scope: !8702)
!8716 = !DILocation(line: 3411, column: 31, scope: !8702)
!8717 = !DILocation(line: 3411, column: 5, scope: !8702)
!8718 = !DILocation(line: 3412, column: 1, scope: !8702)
!8719 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1064, file: !1064, line: 3585, type: !8720, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1063, retainedNodes: !8722)
!8720 = !DISubroutineType(types: !8721)
!8721 = !{null, !6502, !762, !762, !6502, !6502}
!8722 = !{!8723, !8724, !8725, !8726, !8727, !8728}
!8723 = !DILocalVariable(name: "CS", arg: 1, scope: !8719, file: !1064, line: 3585, type: !6502)
!8724 = !DILocalVariable(name: "cmd", arg: 2, scope: !8719, file: !1064, line: 3585, type: !762)
!8725 = !DILocalVariable(name: "data", arg: 3, scope: !8719, file: !1064, line: 3585, type: !762)
!8726 = !DILocalVariable(name: "outl", arg: 4, scope: !8719, file: !1064, line: 3585, type: !6502)
!8727 = !DILocalVariable(name: "inl", arg: 5, scope: !8719, file: !1064, line: 3585, type: !6502)
!8728 = !DILocalVariable(name: "savedMask", scope: !8719, file: !1064, line: 3587, type: !61)
!8729 = !DILocation(line: 0, scope: !8719)
!8730 = !DILocation(line: 3589, column: 17, scope: !8719)
!8731 = !DILocation(line: 3590, column: 5, scope: !8719)
!8732 = !DILocation(line: 3591, column: 5, scope: !8719)
!8733 = !DILocation(line: 3593, column: 1, scope: !8719)
!8734 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1389, file: !1389, line: 110, type: !6980, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1388, retainedNodes: !8735)
!8735 = !{!8736, !8737, !8738, !8739}
!8736 = !DILocalVariable(name: "id", arg: 1, scope: !8734, file: !1389, line: 110, type: !762)
!8737 = !DILocalVariable(name: "i", scope: !8734, file: !1389, line: 114, type: !940)
!8738 = !DILocalVariable(name: "j", scope: !8734, file: !1389, line: 114, type: !940)
!8739 = !DILocalVariable(name: "id_list", scope: !8734, file: !1389, line: 115, type: !8740)
!8740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8741, size: 32)
!8741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1467)
!8742 = !DILocation(line: 0, scope: !8734)
!8743 = !DILocation(line: 119, column: 5, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8734, file: !1389, line: 119, column: 5)
!8745 = !DILocation(line: 119, column: 46, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8744, file: !1389, line: 119, column: 5)
!8747 = !DILocation(line: 119, column: 19, scope: !8746)
!8748 = distinct !{!8748, !8743, !8749}
!8749 = !DILocation(line: 131, column: 5, scope: !8744)
!8750 = !DILocation(line: 121, column: 23, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8752, file: !1389, line: 121, column: 9)
!8752 = distinct !DILexicalBlock(scope: !8753, file: !1389, line: 121, column: 9)
!8753 = distinct !DILexicalBlock(scope: !8746, file: !1389, line: 119, column: 50)
!8754 = !DILocation(line: 121, column: 9, scope: !8752)
!8755 = !DILocation(line: 122, column: 17, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !1389, line: 122, column: 17)
!8757 = distinct !DILexicalBlock(scope: !8751, file: !1389, line: 121, column: 51)
!8758 = !DILocation(line: 122, column: 37, scope: !8756)
!8759 = !DILocation(line: 122, column: 34, scope: !8756)
!8760 = !DILocation(line: 122, column: 17, scope: !8757)
!8761 = !DILocation(line: 121, column: 47, scope: !8751)
!8762 = distinct !{!8762, !8754, !8763}
!8763 = !DILocation(line: 125, column: 9, scope: !8752)
!8764 = !DILocation(line: 0, scope: !8752)
!8765 = !DILocation(line: 127, column: 15, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8753, file: !1389, line: 127, column: 13)
!8767 = !DILocation(line: 127, column: 13, scope: !8753)
!8768 = !DILocation(line: 134, column: 1, scope: !8734)
!8769 = distinct !DISubprogram(name: "CMEM_Index", scope: !1389, file: !1389, line: 153, type: !7135, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1388, retainedNodes: !8770)
!8770 = !{!8771, !8772, !8773, !8780}
!8771 = !DILocalVariable(name: "i", scope: !8769, file: !1389, line: 156, type: !940)
!8772 = !DILocalVariable(name: "j", scope: !8769, file: !1389, line: 156, type: !940)
!8773 = !DILocalVariable(name: "id", scope: !8769, file: !1389, line: 157, type: !8774)
!8774 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1460, line: 89, baseType: !8775)
!8775 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1460, line: 86, size: 64, elements: !8776)
!8776 = !{!8777, !8778}
!8777 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !8775, file: !1460, line: 87, baseType: !1473, size: 64)
!8778 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !8775, file: !1460, line: 88, baseType: !8779, size: 64)
!8779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1034, size: 64, elements: !463)
!8780 = !DILocalVariable(name: "id_list", scope: !8769, file: !1389, line: 158, type: !8740)
!8781 = !DILocation(line: 157, column: 5, scope: !8769)
!8782 = !DILocation(line: 157, column: 17, scope: !8769)
!8783 = !DILocation(line: 0, scope: !8769)
!8784 = !DILocation(line: 161, column: 9, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8769, file: !1389, line: 161, column: 9)
!8786 = !DILocation(line: 161, column: 20, scope: !8785)
!8787 = !DILocation(line: 161, column: 9, scope: !8769)
!8788 = !DILocation(line: 172, column: 58, scope: !8769)
!8789 = !DILocation(line: 172, column: 5, scope: !8769)
!8790 = !DILocation(line: 178, column: 5, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8769, file: !1389, line: 178, column: 5)
!8792 = !DILocation(line: 180, column: 23, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8794, file: !1389, line: 180, column: 9)
!8794 = distinct !DILexicalBlock(scope: !8795, file: !1389, line: 180, column: 9)
!8795 = distinct !DILexicalBlock(scope: !8796, file: !1389, line: 178, column: 53)
!8796 = distinct !DILexicalBlock(scope: !8791, file: !1389, line: 178, column: 5)
!8797 = !DILocation(line: 180, column: 9, scope: !8794)
!8798 = !DILocation(line: 181, column: 17, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !1389, line: 181, column: 17)
!8800 = distinct !DILexicalBlock(scope: !8793, file: !1389, line: 180, column: 51)
!8801 = !DILocation(line: 181, column: 37, scope: !8799)
!8802 = !DILocation(line: 181, column: 34, scope: !8799)
!8803 = !DILocation(line: 181, column: 17, scope: !8800)
!8804 = !DILocation(line: 180, column: 47, scope: !8793)
!8805 = distinct !{!8805, !8797, !8806}
!8806 = !DILocation(line: 184, column: 9, scope: !8794)
!8807 = !DILocation(line: 0, scope: !8794)
!8808 = !DILocation(line: 186, column: 15, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8795, file: !1389, line: 186, column: 13)
!8810 = !DILocation(line: 186, column: 13, scope: !8795)
!8811 = !DILocation(line: 188, column: 26, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8809, file: !1389, line: 186, column: 41)
!8813 = !DILocation(line: 188, column: 24, scope: !8812)
!8814 = !DILocation(line: 189, column: 13, scope: !8812)
!8815 = !DILocation(line: 178, column: 46, scope: !8796)
!8816 = !DILocation(line: 178, column: 19, scope: !8796)
!8817 = distinct !{!8817, !8790, !8818}
!8818 = !DILocation(line: 191, column: 5, scope: !8791)
!8819 = !DILocation(line: 222, column: 12, scope: !8769)
!8820 = !DILocation(line: 223, column: 1, scope: !8769)
!8821 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1389, file: !1389, line: 240, type: !8822, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1388, retainedNodes: !8824)
!8822 = !DISubroutineType(types: !8823)
!8823 = !{!8740, !61}
!8824 = !{!8825}
!8825 = !DILocalVariable(name: "index", arg: 1, scope: !8821, file: !1389, line: 240, type: !61)
!8826 = !DILocation(line: 0, scope: !8821)
!8827 = !DILocation(line: 242, column: 13, scope: !8821)
!8828 = !DILocation(line: 242, column: 5, scope: !8821)
!8829 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1389, file: !1389, line: 254, type: !8830, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1388, retainedNodes: !8832)
!8830 = !DISubroutineType(types: !8831)
!8831 = !{null, !6502, !88, !1033}
!8832 = !{!8833, !8834, !8835, !8836, !8838, !8839}
!8833 = !DILocalVariable(name: "CS", arg: 1, scope: !8829, file: !1389, line: 254, type: !6502)
!8834 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !8829, file: !1389, line: 254, type: !88)
!8835 = !DILocalVariable(name: "flashid", arg: 3, scope: !8829, file: !1389, line: 254, type: !1033)
!8836 = !DILocalVariable(name: "cmd", scope: !8837, file: !1389, line: 258, type: !460)
!8837 = distinct !DILexicalBlock(scope: !8829, file: !1389, line: 257, column: 5)
!8838 = !DILocalVariable(name: "id", scope: !8837, file: !1389, line: 258, type: !1324)
!8839 = !DILocalVariable(name: "i", scope: !8837, file: !1389, line: 258, type: !460)
!8840 = !DILocation(line: 0, scope: !8829)
!8841 = !DILocation(line: 258, column: 9, scope: !8837)
!8842 = !DILocation(line: 258, column: 22, scope: !8837)
!8843 = !DILocation(line: 0, scope: !8837)
!8844 = !DILocation(line: 260, column: 13, scope: !8837)
!8845 = !DILocation(line: 261, column: 9, scope: !8837)
!8846 = !DILocation(line: 263, column: 13, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8837, file: !1389, line: 263, column: 13)
!8848 = !DILocation(line: 263, column: 27, scope: !8847)
!8849 = !DILocation(line: 263, column: 48, scope: !8847)
!8850 = !DILocation(line: 263, column: 13, scope: !8837)
!8851 = !DILocation(line: 264, column: 17, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8847, file: !1389, line: 263, column: 95)
!8853 = !DILocation(line: 265, column: 13, scope: !8852)
!8854 = !DILocation(line: 266, column: 9, scope: !8852)
!8855 = !DILocation(line: 268, column: 9, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8837, file: !1389, line: 268, column: 9)
!8857 = !DILocation(line: 269, column: 26, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !1389, line: 268, column: 50)
!8859 = distinct !DILexicalBlock(scope: !8856, file: !1389, line: 268, column: 9)
!8860 = !DILocation(line: 269, column: 13, scope: !8858)
!8861 = !DILocation(line: 269, column: 24, scope: !8858)
!8862 = !DILocation(line: 268, column: 46, scope: !8859)
!8863 = !DILocation(line: 268, column: 23, scope: !8859)
!8864 = distinct !{!8864, !8855, !8865}
!8865 = !DILocation(line: 270, column: 9, scope: !8856)
!8866 = !DILocation(line: 271, column: 5, scope: !8829)
!8867 = !DILocation(line: 272, column: 5, scope: !8829)
!8868 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1389, file: !1389, line: 285, type: !6980, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1388, retainedNodes: !8869)
!8869 = !{!8870, !8871, !8872, !8873}
!8870 = !DILocalVariable(name: "id", arg: 1, scope: !8868, file: !1389, line: 285, type: !762)
!8871 = !DILocalVariable(name: "i", scope: !8868, file: !1389, line: 289, type: !940)
!8872 = !DILocalVariable(name: "j", scope: !8868, file: !1389, line: 289, type: !940)
!8873 = !DILocalVariable(name: "id_list", scope: !8868, file: !1389, line: 290, type: !8740)
!8874 = !DILocation(line: 0, scope: !8868)
!8875 = !DILocation(line: 294, column: 5, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8868, file: !1389, line: 294, column: 5)
!8877 = !DILocation(line: 294, column: 46, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8876, file: !1389, line: 294, column: 5)
!8879 = !DILocation(line: 294, column: 19, scope: !8878)
!8880 = distinct !{!8880, !8875, !8881}
!8881 = !DILocation(line: 306, column: 5, scope: !8876)
!8882 = !DILocation(line: 296, column: 23, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8884, file: !1389, line: 296, column: 9)
!8884 = distinct !DILexicalBlock(scope: !8885, file: !1389, line: 296, column: 9)
!8885 = distinct !DILexicalBlock(scope: !8878, file: !1389, line: 294, column: 53)
!8886 = !DILocation(line: 296, column: 9, scope: !8884)
!8887 = !DILocation(line: 297, column: 17, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8889, file: !1389, line: 297, column: 17)
!8889 = distinct !DILexicalBlock(scope: !8883, file: !1389, line: 296, column: 51)
!8890 = !DILocation(line: 297, column: 37, scope: !8888)
!8891 = !DILocation(line: 297, column: 34, scope: !8888)
!8892 = !DILocation(line: 297, column: 17, scope: !8889)
!8893 = !DILocation(line: 296, column: 47, scope: !8883)
!8894 = distinct !{!8894, !8886, !8895}
!8895 = !DILocation(line: 300, column: 9, scope: !8884)
!8896 = !DILocation(line: 0, scope: !8884)
!8897 = !DILocation(line: 302, column: 15, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8885, file: !1389, line: 302, column: 13)
!8899 = !DILocation(line: 302, column: 13, scope: !8885)
!8900 = !DILocation(line: 310, column: 1, scope: !8868)
!8901 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1389, file: !1389, line: 328, type: !7135, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1388, retainedNodes: !8902)
!8902 = !{!8903, !8904, !8905, !8906}
!8903 = !DILocalVariable(name: "i", scope: !8901, file: !1389, line: 331, type: !940)
!8904 = !DILocalVariable(name: "j", scope: !8901, file: !1389, line: 331, type: !940)
!8905 = !DILocalVariable(name: "id", scope: !8901, file: !1389, line: 332, type: !8774)
!8906 = !DILocalVariable(name: "id_list", scope: !8901, file: !1389, line: 333, type: !8740)
!8907 = !DILocation(line: 332, column: 5, scope: !8901)
!8908 = !DILocation(line: 332, column: 17, scope: !8901)
!8909 = !DILocation(line: 0, scope: !8901)
!8910 = !DILocation(line: 336, column: 9, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8901, file: !1389, line: 336, column: 9)
!8912 = !DILocation(line: 336, column: 28, scope: !8911)
!8913 = !DILocation(line: 336, column: 9, scope: !8901)
!8914 = !DILocation(line: 344, column: 60, scope: !8901)
!8915 = !DILocation(line: 344, column: 5, scope: !8901)
!8916 = !DILocation(line: 350, column: 5, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8901, file: !1389, line: 350, column: 5)
!8918 = !DILocation(line: 352, column: 23, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !1389, line: 352, column: 9)
!8920 = distinct !DILexicalBlock(scope: !8921, file: !1389, line: 352, column: 9)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !1389, line: 350, column: 53)
!8922 = distinct !DILexicalBlock(scope: !8917, file: !1389, line: 350, column: 5)
!8923 = !DILocation(line: 352, column: 9, scope: !8920)
!8924 = !DILocation(line: 353, column: 17, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8926, file: !1389, line: 353, column: 17)
!8926 = distinct !DILexicalBlock(scope: !8919, file: !1389, line: 352, column: 51)
!8927 = !DILocation(line: 353, column: 37, scope: !8925)
!8928 = !DILocation(line: 353, column: 34, scope: !8925)
!8929 = !DILocation(line: 353, column: 17, scope: !8926)
!8930 = !DILocation(line: 352, column: 47, scope: !8919)
!8931 = distinct !{!8931, !8923, !8932}
!8932 = !DILocation(line: 356, column: 9, scope: !8920)
!8933 = !DILocation(line: 0, scope: !8920)
!8934 = !DILocation(line: 358, column: 15, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8921, file: !1389, line: 358, column: 13)
!8936 = !DILocation(line: 358, column: 13, scope: !8921)
!8937 = !DILocation(line: 360, column: 34, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8935, file: !1389, line: 358, column: 41)
!8939 = !DILocation(line: 360, column: 32, scope: !8938)
!8940 = !DILocation(line: 361, column: 13, scope: !8938)
!8941 = !DILocation(line: 350, column: 46, scope: !8922)
!8942 = !DILocation(line: 350, column: 19, scope: !8922)
!8943 = distinct !{!8943, !8916, !8944}
!8944 = !DILocation(line: 363, column: 5, scope: !8917)
!8945 = !DILocation(line: 364, column: 12, scope: !8901)
!8946 = !DILocation(line: 365, column: 1, scope: !8901)
!8947 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2567, file: !2567, line: 64, type: !8948, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !8954)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{null, !6502, !8950, !1033}
!8950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8951, size: 32)
!8951 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !8952)
!8952 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !8953, line: 158, baseType: !1034)
!8953 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!8954 = !{!8955, !8956, !8957, !8958, !8959, !8961, !8962}
!8955 = !DILocalVariable(name: "CS", arg: 1, scope: !8947, file: !2567, line: 64, type: !6502)
!8956 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !8947, file: !2567, line: 64, type: !8950)
!8957 = !DILocalVariable(name: "flashid", arg: 3, scope: !8947, file: !2567, line: 64, type: !1033)
!8958 = !DILocalVariable(name: "savedMask", scope: !8947, file: !2567, line: 66, type: !61)
!8959 = !DILocalVariable(name: "cmd", scope: !8960, file: !2567, line: 70, type: !460)
!8960 = distinct !DILexicalBlock(scope: !8947, file: !2567, line: 69, column: 5)
!8961 = !DILocalVariable(name: "id", scope: !8960, file: !2567, line: 70, type: !1324)
!8962 = !DILocalVariable(name: "i", scope: !8960, file: !2567, line: 70, type: !460)
!8963 = !DILocation(line: 0, scope: !8947)
!8964 = !DILocation(line: 70, column: 9, scope: !8960)
!8965 = !DILocation(line: 70, column: 22, scope: !8960)
!8966 = !DILocation(line: 0, scope: !8960)
!8967 = !DILocation(line: 72, column: 13, scope: !8960)
!8968 = !DILocation(line: 73, column: 21, scope: !8960)
!8969 = !DILocation(line: 74, column: 9, scope: !8960)
!8970 = !DILocation(line: 75, column: 9, scope: !8960)
!8971 = !DILocation(line: 77, column: 13, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8960, file: !2567, line: 77, column: 13)
!8973 = !DILocation(line: 77, column: 27, scope: !8972)
!8974 = !DILocation(line: 77, column: 48, scope: !8972)
!8975 = !DILocation(line: 77, column: 13, scope: !8960)
!8976 = !DILocation(line: 78, column: 17, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8972, file: !2567, line: 77, column: 87)
!8978 = !DILocation(line: 79, column: 25, scope: !8977)
!8979 = !DILocation(line: 80, column: 13, scope: !8977)
!8980 = !DILocation(line: 81, column: 13, scope: !8977)
!8981 = !DILocation(line: 82, column: 9, scope: !8977)
!8982 = !DILocation(line: 84, column: 9, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8960, file: !2567, line: 84, column: 9)
!8984 = !DILocation(line: 85, column: 26, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !2567, line: 84, column: 50)
!8986 = distinct !DILexicalBlock(scope: !8983, file: !2567, line: 84, column: 9)
!8987 = !DILocation(line: 85, column: 13, scope: !8985)
!8988 = !DILocation(line: 85, column: 24, scope: !8985)
!8989 = !DILocation(line: 84, column: 46, scope: !8986)
!8990 = !DILocation(line: 84, column: 23, scope: !8986)
!8991 = distinct !{!8991, !8982, !8992}
!8992 = !DILocation(line: 86, column: 9, scope: !8983)
!8993 = !DILocation(line: 87, column: 5, scope: !8947)
!8994 = !DILocation(line: 89, column: 1, scope: !8947)
!8995 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1477, file: !1477, line: 248, type: !3771, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1476, retainedNodes: !293)
!8996 = !DILocation(line: 250, column: 5, scope: !8995)
!8997 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1477, file: !1477, line: 270, type: !3771, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1476, retainedNodes: !293)
!8998 = !DILocation(line: 272, column: 5, scope: !8997)
!8999 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1477, file: !1477, line: 294, type: !291, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1476, retainedNodes: !293)
!9000 = !DILocation(line: 296, column: 5, scope: !8999)
!9001 = !DILocation(line: 297, column: 5, scope: !8999)
!9002 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1477, file: !1477, line: 304, type: !291, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1476, retainedNodes: !293)
!9003 = !DILocation(line: 309, column: 5, scope: !9002)
!9004 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1477, file: !1477, line: 312, type: !291, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1476, retainedNodes: !293)
!9005 = !DILocation(line: 317, column: 5, scope: !9004)
!9006 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1477, file: !1477, line: 334, type: !3771, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1476, retainedNodes: !293)
!9007 = !DILocation(line: 336, column: 5, scope: !9006)
!9008 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1477, file: !1477, line: 353, type: !3771, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1476, retainedNodes: !293)
!9009 = !DILocation(line: 355, column: 5, scope: !9008)
!9010 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1477, file: !1477, line: 374, type: !291, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1476, retainedNodes: !293)
!9011 = !DILocation(line: 376, column: 5, scope: !9010)
!9012 = !DILocation(line: 377, column: 1, scope: !9010)
!9013 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1477, file: !1477, line: 395, type: !3771, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1476, retainedNodes: !293)
!9014 = !DILocation(line: 397, column: 5, scope: !9013)
!9015 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1477, file: !1477, line: 416, type: !3771, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1476, retainedNodes: !293)
!9016 = !DILocation(line: 418, column: 5, scope: !9015)
!9017 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1488, file: !1488, line: 254, type: !3771, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !293)
!9018 = !DILocation(line: 256, column: 32, scope: !9017)
!9019 = !DILocation(line: 257, column: 5, scope: !9017)
!9020 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1488, file: !1488, line: 269, type: !7135, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !293)
!9021 = !DILocation(line: 275, column: 24, scope: !9020)
!9022 = !DILocation(line: 278, column: 24, scope: !9020)
!9023 = !DILocation(line: 278, column: 33, scope: !9020)
!9024 = !DILocation(line: 278, column: 49, scope: !9020)
!9025 = !DILocation(line: 278, column: 22, scope: !9020)
!9026 = !DILocation(line: 281, column: 5, scope: !9020)
!9027 = !DILocation(line: 283, column: 34, scope: !9020)
!9028 = !DILocation(line: 283, column: 23, scope: !9020)
!9029 = !DILocation(line: 286, column: 25, scope: !9020)
!9030 = !DILocation(line: 321, column: 5, scope: !9020)
!9031 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1488, file: !1488, line: 332, type: !7135, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9032)
!9032 = !{!9033}
!9033 = !DILocalVariable(name: "result", scope: !9031, file: !1488, line: 334, type: !940)
!9034 = !DILocation(line: 340, column: 30, scope: !9031)
!9035 = !DILocation(line: 343, column: 24, scope: !9031)
!9036 = !DILocation(line: 344, column: 18, scope: !9031)
!9037 = !DILocation(line: 348, column: 17, scope: !9031)
!9038 = !DILocation(line: 353, column: 19, scope: !9031)
!9039 = !DILocation(line: 354, column: 18, scope: !9031)
!9040 = !DILocation(line: 354, column: 27, scope: !9031)
!9041 = !DILocation(line: 354, column: 43, scope: !9031)
!9042 = !DILocation(line: 350, column: 14, scope: !9031)
!9043 = !DILocation(line: 0, scope: !9031)
!9044 = !DILocation(line: 356, column: 16, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9031, file: !1488, line: 356, column: 9)
!9046 = !DILocation(line: 395, column: 1, scope: !9031)
!9047 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1488, file: !1488, line: 406, type: !9048, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !293)
!9048 = !DISubroutineType(types: !2519)
!9049 = !DILocation(line: 408, column: 5, scope: !9047)
!9050 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1488, file: !1488, line: 420, type: !9051, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9053)
!9051 = !DISubroutineType(types: !9052)
!9052 = !{!61, !460}
!9053 = !{!9054, !9055, !9056}
!9054 = !DILocalVariable(name: "CS", arg: 1, scope: !9050, file: !1488, line: 420, type: !460)
!9055 = !DILocalVariable(name: "index", scope: !9050, file: !1488, line: 422, type: !61)
!9056 = !DILocalVariable(name: "list", scope: !9050, file: !1488, line: 423, type: !1805)
!9057 = !DILocation(line: 0, scope: !9050)
!9058 = !DILocation(line: 427, column: 13, scope: !9050)
!9059 = !DILocation(line: 430, column: 34, scope: !9050)
!9060 = !DILocation(line: 430, column: 5, scope: !9050)
!9061 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1488, file: !1488, line: 442, type: !9062, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9064)
!9062 = !DISubroutineType(types: !9063)
!9063 = !{!61, !61, !1677}
!9064 = !{!9065, !9066, !9067}
!9065 = !DILocalVariable(name: "address", arg: 1, scope: !9061, file: !1488, line: 442, type: !61)
!9066 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !9061, file: !1488, line: 442, type: !1677)
!9067 = !DILocalVariable(name: "i", scope: !9061, file: !1488, line: 444, type: !1034)
!9068 = !DILocation(line: 0, scope: !9061)
!9069 = !DILocation(line: 446, column: 23, scope: !9061)
!9070 = !DILocation(line: 448, column: 36, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9072, file: !1488, line: 448, column: 5)
!9072 = distinct !DILexicalBlock(scope: !9061, file: !1488, line: 448, column: 5)
!9073 = !DILocation(line: 448, column: 41, scope: !9071)
!9074 = !DILocation(line: 448, column: 5, scope: !9072)
!9075 = !DILocation(line: 449, column: 39, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !1488, line: 449, column: 13)
!9077 = distinct !DILexicalBlock(scope: !9071, file: !1488, line: 448, column: 54)
!9078 = !DILocation(line: 449, column: 21, scope: !9076)
!9079 = !DILocation(line: 449, column: 46, scope: !9076)
!9080 = !DILocation(line: 450, column: 46, scope: !9076)
!9081 = !DILocation(line: 450, column: 25, scope: !9076)
!9082 = !DILocation(line: 449, column: 13, scope: !9077)
!9083 = !DILocation(line: 448, column: 48, scope: !9071)
!9084 = !DILocation(line: 448, column: 29, scope: !9071)
!9085 = !DILocation(line: 448, column: 31, scope: !9071)
!9086 = distinct !{!9086, !9074, !9087}
!9087 = !DILocation(line: 453, column: 5, scope: !9072)
!9088 = !DILocation(line: 454, column: 27, scope: !9061)
!9089 = !DILocation(line: 454, column: 5, scope: !9061)
!9090 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1488, file: !1488, line: 462, type: !3519, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9091)
!9091 = !{!9092}
!9092 = !DILocalVariable(name: "address", arg: 1, scope: !9090, file: !1488, line: 462, type: !61)
!9093 = !DILocation(line: 0, scope: !9090)
!9094 = !DILocation(line: 464, column: 45, scope: !9090)
!9095 = !DILocation(line: 464, column: 12, scope: !9090)
!9096 = !DILocation(line: 464, column: 5, scope: !9090)
!9097 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1488, file: !1488, line: 487, type: !3519, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9098)
!9098 = !{!9099, !9100, !9101}
!9099 = !DILocalVariable(name: "address", arg: 1, scope: !9097, file: !1488, line: 487, type: !61)
!9100 = !DILocalVariable(name: "index", scope: !9097, file: !1488, line: 490, type: !61)
!9101 = !DILocalVariable(name: "list", scope: !9097, file: !1488, line: 491, type: !1805)
!9102 = !DILocation(line: 0, scope: !9097)
!9103 = !DILocation(line: 490, column: 22, scope: !9097)
!9104 = !DILocation(line: 495, column: 45, scope: !9097)
!9105 = !DILocation(line: 495, column: 12, scope: !9097)
!9106 = !DILocation(line: 495, column: 5, scope: !9097)
!9107 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1488, file: !1488, line: 517, type: !9108, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9112)
!9108 = !DISubroutineType(types: !9109)
!9109 = !{!940, !9110}
!9110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9111, size: 32)
!9111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1691)
!9112 = !{!9113, !9114, !9115}
!9113 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !9107, file: !1488, line: 517, type: !9110)
!9114 = !DILocalVariable(name: "result", scope: !9107, file: !1488, line: 519, type: !61)
!9115 = !DILocalVariable(name: "i", scope: !9107, file: !1488, line: 519, type: !61)
!9116 = !DILocation(line: 0, scope: !9107)
!9117 = !DILocation(line: 522, column: 29, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9119, file: !1488, line: 522, column: 5)
!9119 = distinct !DILexicalBlock(scope: !9107, file: !1488, line: 522, column: 5)
!9120 = !DILocation(line: 522, column: 38, scope: !9118)
!9121 = !DILocation(line: 522, column: 5, scope: !9119)
!9122 = !DILocation(line: 523, column: 31, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9118, file: !1488, line: 522, column: 51)
!9124 = !DILocation(line: 523, column: 37, scope: !9123)
!9125 = !DILocation(line: 523, column: 16, scope: !9123)
!9126 = !DILocation(line: 522, column: 45, scope: !9118)
!9127 = distinct !{!9127, !9121, !9128}
!9128 = !DILocation(line: 524, column: 5, scope: !9119)
!9129 = !DILocation(line: 525, column: 5, scope: !9107)
!9130 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1488, file: !1488, line: 535, type: !9131, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9133)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!61, !61, !61, !1503, !1677}
!9133 = !{!9134, !9135, !9136, !9137, !9138, !9139, !9140, !9141, !9142}
!9134 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9130, file: !1488, line: 536, type: !61)
!9135 = !DILocalVariable(name: "length", arg: 2, scope: !9130, file: !1488, line: 537, type: !61)
!9136 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9130, file: !1488, line: 538, type: !1503)
!9137 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !9130, file: !1488, line: 539, type: !1677)
!9138 = !DILocalVariable(name: "addr", scope: !9130, file: !1488, line: 541, type: !61)
!9139 = !DILocalVariable(name: "ptr", scope: !9130, file: !1488, line: 541, type: !61)
!9140 = !DILocalVariable(name: "blksize", scope: !9130, file: !1488, line: 541, type: !61)
!9141 = !DILocalVariable(name: "total_blocks", scope: !9130, file: !1488, line: 541, type: !61)
!9142 = !DILocalVariable(name: "endaddr", scope: !9130, file: !1488, line: 542, type: !61)
!9143 = !DILocation(line: 0, scope: !9130)
!9144 = !DILocation(line: 542, column: 33, scope: !9130)
!9145 = !DILocation(line: 557, column: 59, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !1488, line: 557, column: 5)
!9147 = distinct !DILexicalBlock(scope: !9130, file: !1488, line: 557, column: 5)
!9148 = !DILocation(line: 557, column: 5, scope: !9147)
!9149 = !DILocation(line: 560, column: 19, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9146, file: !1488, line: 559, column: 5)
!9151 = !DILocation(line: 562, column: 26, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9150, file: !1488, line: 562, column: 13)
!9153 = !DILocation(line: 0, scope: !9152)
!9154 = !DILocation(line: 562, column: 13, scope: !9150)
!9155 = !DILocation(line: 563, column: 39, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9152, file: !1488, line: 562, column: 34)
!9157 = !DILocation(line: 564, column: 29, scope: !9156)
!9158 = !DILocation(line: 564, column: 42, scope: !9156)
!9159 = !DILocation(line: 565, column: 9, scope: !9156)
!9160 = !DILocation(line: 567, column: 45, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9152, file: !1488, line: 567, column: 18)
!9162 = !DILocation(line: 567, column: 26, scope: !9161)
!9163 = !DILocation(line: 567, column: 18, scope: !9152)
!9164 = !DILocation(line: 568, column: 29, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9161, file: !1488, line: 567, column: 59)
!9166 = !DILocation(line: 568, column: 41, scope: !9165)
!9167 = !DILocation(line: 569, column: 9, scope: !9165)
!9168 = !DILocation(line: 572, column: 16, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9161, file: !1488, line: 571, column: 14)
!9170 = !DILocation(line: 573, column: 21, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9169, file: !1488, line: 573, column: 17)
!9172 = !DILocation(line: 573, column: 17, scope: !9169)
!9173 = !DILocation(line: 576, column: 29, scope: !9169)
!9174 = !DILocation(line: 576, column: 39, scope: !9169)
!9175 = !DILocation(line: 577, column: 29, scope: !9169)
!9176 = !DILocation(line: 577, column: 42, scope: !9169)
!9177 = !DILocation(line: 0, scope: !9147)
!9178 = !DILocation(line: 579, column: 14, scope: !9150)
!9179 = !DILocation(line: 580, column: 21, scope: !9150)
!9180 = distinct !{!9180, !9148, !9181}
!9181 = !DILocation(line: 581, column: 5, scope: !9147)
!9182 = !DILocation(line: 586, column: 1, scope: !9130)
!9183 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1488, file: !1488, line: 593, type: !9184, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9186)
!9184 = !DISubroutineType(types: !9185)
!9185 = !{!940, !61, !61, !1503}
!9186 = !{!9187, !9188, !9189}
!9187 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9183, file: !1488, line: 593, type: !61)
!9188 = !DILocalVariable(name: "length", arg: 2, scope: !9183, file: !1488, line: 593, type: !61)
!9189 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9183, file: !1488, line: 593, type: !1503)
!9190 = !DILocation(line: 0, scope: !9183)
!9191 = !DILocation(line: 595, column: 12, scope: !9183)
!9192 = !DILocation(line: 595, column: 5, scope: !9183)
!9193 = !DILocation(line: 597, column: 81, scope: !9183)
!9194 = !DILocation(line: 597, column: 12, scope: !9183)
!9195 = !DILocation(line: 597, column: 5, scope: !9183)
!9196 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1488, file: !1488, line: 606, type: !9184, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9197)
!9197 = !{!9198, !9199, !9200}
!9198 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9196, file: !1488, line: 606, type: !61)
!9199 = !DILocalVariable(name: "length", arg: 2, scope: !9196, file: !1488, line: 606, type: !61)
!9200 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9196, file: !1488, line: 606, type: !1503)
!9201 = !DILocation(line: 0, scope: !9196)
!9202 = !DILocation(line: 624, column: 5, scope: !9196)
!9203 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1488, file: !1488, line: 637, type: !9184, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9204)
!9204 = !{!9205, !9206, !9207, !9208, !9209}
!9205 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9203, file: !1488, line: 637, type: !61)
!9206 = !DILocalVariable(name: "length", arg: 2, scope: !9203, file: !1488, line: 637, type: !61)
!9207 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9203, file: !1488, line: 637, type: !1503)
!9208 = !DILocalVariable(name: "index", scope: !9203, file: !1488, line: 642, type: !61)
!9209 = !DILocalVariable(name: "list", scope: !9203, file: !1488, line: 644, type: !1805)
!9210 = !DILocation(line: 0, scope: !9203)
!9211 = !DILocation(line: 642, column: 22, scope: !9203)
!9212 = !DILocation(line: 648, column: 81, scope: !9203)
!9213 = !DILocation(line: 648, column: 12, scope: !9203)
!9214 = !DILocation(line: 648, column: 5, scope: !9203)
!9215 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1488, file: !1488, line: 658, type: !9184, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9216)
!9216 = !{!9217, !9218, !9219}
!9217 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9215, file: !1488, line: 658, type: !61)
!9218 = !DILocalVariable(name: "length", arg: 2, scope: !9215, file: !1488, line: 658, type: !61)
!9219 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9215, file: !1488, line: 658, type: !1503)
!9220 = !DILocation(line: 0, scope: !9215)
!9221 = !DILocation(line: 688, column: 5, scope: !9215)
!9222 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1488, file: !1488, line: 700, type: !6569, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9223)
!9223 = !{!9224, !9225, !9226}
!9224 = !DILocalVariable(name: "CS", arg: 1, scope: !9222, file: !1488, line: 700, type: !6502)
!9225 = !DILocalVariable(name: "index", scope: !9222, file: !1488, line: 705, type: !61)
!9226 = !DILocalVariable(name: "list", scope: !9222, file: !1488, line: 707, type: !1805)
!9227 = !DILocation(line: 0, scope: !9222)
!9228 = !DILocation(line: 705, column: 22, scope: !9222)
!9229 = !DILocation(line: 711, column: 24, scope: !9222)
!9230 = !DILocation(line: 711, column: 5, scope: !9222)
!9231 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1488, file: !1488, line: 721, type: !9232, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9234)
!9232 = !DISubroutineType(types: !9233)
!9233 = !{null, !1723, !1002, !61}
!9234 = !{!9235, !9236, !9237}
!9235 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !9231, file: !1488, line: 721, type: !1723)
!9236 = !DILocalVariable(name: "index", arg: 2, scope: !9231, file: !1488, line: 721, type: !1002)
!9237 = !DILocalVariable(name: "bankSize", arg: 3, scope: !9231, file: !1488, line: 721, type: !61)
!9238 = !DILocation(line: 0, scope: !9231)
!9239 = !DILocation(line: 723, column: 18, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9231, file: !1488, line: 723, column: 9)
!9241 = !DILocation(line: 723, column: 26, scope: !9240)
!9242 = !DILocation(line: 723, column: 35, scope: !9240)
!9243 = !DILocation(line: 723, column: 9, scope: !9231)
!9244 = !DILocation(line: 724, column: 26, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9240, file: !1488, line: 723, column: 48)
!9246 = !DILocation(line: 724, column: 32, scope: !9245)
!9247 = !DILocation(line: 725, column: 5, scope: !9245)
!9248 = !DILocation(line: 726, column: 18, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9240, file: !1488, line: 725, column: 12)
!9250 = !DILocation(line: 727, column: 26, scope: !9249)
!9251 = !DILocation(line: 727, column: 32, scope: !9249)
!9252 = !DILocation(line: 728, column: 18, scope: !9249)
!9253 = !DILocation(line: 728, column: 26, scope: !9249)
!9254 = !DILocation(line: 728, column: 35, scope: !9249)
!9255 = !DILocation(line: 731, column: 1, scope: !9231)
!9256 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1488, file: !1488, line: 739, type: !9257, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9259)
!9257 = !DISubroutineType(types: !9258)
!9258 = !{!61, !61, !61, !1723, !9110}
!9259 = !{!9260, !9261, !9262, !9263, !9264, !9265, !9266, !9267, !9268}
!9260 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9256, file: !1488, line: 740, type: !61)
!9261 = !DILocalVariable(name: "length", arg: 2, scope: !9256, file: !1488, line: 741, type: !61)
!9262 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !9256, file: !1488, line: 742, type: !1723)
!9263 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !9256, file: !1488, line: 743, type: !9110)
!9264 = !DILocalVariable(name: "Partition", scope: !9256, file: !1488, line: 745, type: !61)
!9265 = !DILocalVariable(name: "Index", scope: !9256, file: !1488, line: 746, type: !940)
!9266 = !DILocalVariable(name: "bankSize", scope: !9256, file: !1488, line: 747, type: !61)
!9267 = !DILocalVariable(name: "NextBankAddr", scope: !9256, file: !1488, line: 748, type: !61)
!9268 = !DILocalVariable(name: "srcBankIdx", scope: !9256, file: !1488, line: 748, type: !61)
!9269 = !DILocation(line: 0, scope: !9256)
!9270 = !DILocation(line: 750, column: 12, scope: !9256)
!9271 = !DILocation(line: 750, column: 5, scope: !9256)
!9272 = !DILocation(line: 752, column: 51, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9274, file: !1488, line: 752, column: 5)
!9274 = distinct !DILexicalBlock(scope: !9256, file: !1488, line: 752, column: 5)
!9275 = !DILocation(line: 752, column: 5, scope: !9274)
!9276 = !DILocation(line: 753, column: 51, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9278, file: !1488, line: 753, column: 13)
!9278 = distinct !DILexicalBlock(scope: !9273, file: !1488, line: 752, column: 70)
!9279 = !DILocation(line: 753, column: 24, scope: !9277)
!9280 = !DILocation(line: 753, column: 13, scope: !9278)
!9281 = !DILocation(line: 758, column: 49, scope: !9278)
!9282 = !DILocation(line: 758, column: 22, scope: !9278)
!9283 = !DILocation(line: 760, column: 22, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9278, file: !1488, line: 760, column: 13)
!9285 = !DILocation(line: 760, column: 13, scope: !9278)
!9286 = !DILocation(line: 761, column: 37, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9284, file: !1488, line: 760, column: 39)
!9288 = !DILocation(line: 762, column: 24, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9287, file: !1488, line: 762, column: 17)
!9290 = !DILocation(line: 762, column: 17, scope: !9287)
!9291 = !DILocation(line: 767, column: 33, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9287, file: !1488, line: 767, column: 17)
!9293 = !DILocation(line: 767, column: 42, scope: !9292)
!9294 = !DILocation(line: 767, column: 17, scope: !9287)
!9295 = !DILocation(line: 768, column: 33, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9292, file: !1488, line: 767, column: 55)
!9297 = !DILocation(line: 768, column: 39, scope: !9296)
!9298 = !DILocation(line: 769, column: 13, scope: !9296)
!9299 = !DILocation(line: 770, column: 46, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9301, file: !1488, line: 770, column: 21)
!9301 = distinct !DILexicalBlock(scope: !9292, file: !1488, line: 769, column: 20)
!9302 = !DILocation(line: 770, column: 21, scope: !9301)
!9303 = !DILocation(line: 773, column: 33, scope: !9301)
!9304 = !DILocation(line: 773, column: 39, scope: !9301)
!9305 = !DILocation(line: 774, column: 33, scope: !9301)
!9306 = !DILocation(line: 774, column: 42, scope: !9301)
!9307 = !DILocation(line: 777, column: 22, scope: !9287)
!9308 = !DILocation(line: 778, column: 20, scope: !9287)
!9309 = !DILocation(line: 779, column: 9, scope: !9287)
!9310 = !DILocation(line: 746, column: 13, scope: !9256)
!9311 = !DILocation(line: 752, column: 66, scope: !9273)
!9312 = distinct !{!9312, !9275, !9313}
!9313 = !DILocation(line: 781, column: 5, scope: !9274)
!9314 = !DILocation(line: 784, column: 5, scope: !9256)
!9315 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1488, file: !1488, line: 796, type: !7135, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9316)
!9316 = !{!9317, !9318}
!9317 = !DILocalVariable(name: "result", scope: !9315, file: !1488, line: 798, type: !940)
!9318 = !DILocalVariable(name: "i", scope: !9315, file: !1488, line: 799, type: !940)
!9319 = !DILocation(line: 803, column: 19, scope: !9315)
!9320 = !DILocation(line: 803, column: 28, scope: !9315)
!9321 = !DILocation(line: 803, column: 17, scope: !9315)
!9322 = !DILocation(line: 822, column: 33, scope: !9315)
!9323 = !DILocation(line: 822, column: 56, scope: !9315)
!9324 = !DILocation(line: 822, column: 88, scope: !9315)
!9325 = !DILocation(line: 822, column: 97, scope: !9315)
!9326 = !DILocation(line: 822, column: 5, scope: !9315)
!9327 = !DILocation(line: 829, column: 39, scope: !9315)
!9328 = !DILocation(line: 829, column: 62, scope: !9315)
!9329 = !DILocation(line: 829, column: 14, scope: !9315)
!9330 = !DILocation(line: 0, scope: !9315)
!9331 = !DILocation(line: 834, column: 16, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9315, file: !1488, line: 834, column: 9)
!9333 = !DILocation(line: 834, column: 9, scope: !9315)
!9334 = !DILocation(line: 838, column: 30, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9315, file: !1488, line: 838, column: 5)
!9336 = !DILocation(line: 838, column: 58, scope: !9335)
!9337 = !DILocation(line: 838, column: 78, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9335, file: !1488, line: 838, column: 5)
!9339 = !DILocation(line: 838, column: 88, scope: !9338)
!9340 = !DILocation(line: 838, column: 5, scope: !9335)
!9341 = !DILocation(line: 839, column: 39, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9338, file: !1488, line: 838, column: 102)
!9343 = !DILocation(line: 839, column: 22, scope: !9342)
!9344 = !DILocation(line: 840, column: 37, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9342, file: !1488, line: 840, column: 13)
!9346 = !DILocation(line: 840, column: 13, scope: !9342)
!9347 = !DILocation(line: 841, column: 36, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9345, file: !1488, line: 840, column: 63)
!9349 = !DILocation(line: 842, column: 9, scope: !9348)
!9350 = !DILocation(line: 838, column: 95, scope: !9338)
!9351 = distinct !{!9351, !9340, !9352}
!9352 = !DILocation(line: 843, column: 5, scope: !9335)
!9353 = !DILocation(line: 871, column: 49, scope: !9315)
!9354 = !DILocation(line: 871, column: 72, scope: !9315)
!9355 = !DILocation(line: 871, column: 47, scope: !9315)
!9356 = !DILocation(line: 871, column: 97, scope: !9315)
!9357 = !DILocation(line: 871, column: 19, scope: !9315)
!9358 = !DILocation(line: 882, column: 14, scope: !9315)
!9359 = !DILocation(line: 887, column: 13, scope: !9315)
!9360 = !DILocation(line: 887, column: 22, scope: !9315)
!9361 = !DILocation(line: 887, column: 5, scope: !9315)
!9362 = !DILocation(line: 889, column: 22, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9315, file: !1488, line: 887, column: 34)
!9364 = !DILocation(line: 890, column: 13, scope: !9363)
!9365 = !DILocation(line: 902, column: 1, scope: !9315)
!9366 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1488, file: !1488, line: 912, type: !9367, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9369)
!9367 = !DISubroutineType(types: !9368)
!9368 = !{null, !772}
!9369 = !{!9370}
!9370 = !DILocalVariable(name: "CS", arg: 1, scope: !9366, file: !1488, line: 912, type: !772)
!9371 = !DILocation(line: 0, scope: !9366)
!9372 = !DILocation(line: 914, column: 12, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9366, file: !1488, line: 914, column: 9)
!9374 = !DILocation(line: 914, column: 9, scope: !9366)
!9375 = !DILocation(line: 918, column: 26, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9373, file: !1488, line: 914, column: 18)
!9377 = !DILocation(line: 918, column: 24, scope: !9376)
!9378 = !DILocation(line: 920, column: 28, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9376, file: !1488, line: 920, column: 13)
!9380 = !DILocation(line: 920, column: 13, scope: !9376)
!9381 = !DILocation(line: 921, column: 13, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9383, file: !1488, line: 921, column: 13)
!9383 = distinct !DILexicalBlock(scope: !9384, file: !1488, line: 921, column: 13)
!9384 = distinct !DILexicalBlock(scope: !9385, file: !1488, line: 921, column: 13)
!9385 = distinct !DILexicalBlock(scope: !9379, file: !1488, line: 920, column: 33)
!9386 = !DILocation(line: 923, column: 19, scope: !9376)
!9387 = !DILocation(line: 923, column: 17, scope: !9376)
!9388 = !DILocation(line: 924, column: 5, scope: !9376)
!9389 = !DILocation(line: 935, column: 14, scope: !9366)
!9390 = !DILocation(line: 936, column: 1, scope: !9366)
!9391 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1488, file: !1488, line: 952, type: !7135, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !293)
!9392 = !DILocation(line: 955, column: 5, scope: !9391)
!9393 = !DILocation(line: 956, column: 12, scope: !9391)
!9394 = !DILocation(line: 956, column: 5, scope: !9391)
!9395 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1488, file: !1488, line: 974, type: !7135, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1487, retainedNodes: !9396)
!9396 = !{!9397}
!9397 = !DILocalVariable(name: "result", scope: !9395, file: !1488, line: 976, type: !940)
!9398 = !DILocation(line: 981, column: 5, scope: !9395)
!9399 = !DILocation(line: 986, column: 24, scope: !9395)
!9400 = !DILocation(line: 986, column: 33, scope: !9395)
!9401 = !DILocation(line: 986, column: 49, scope: !9395)
!9402 = !DILocation(line: 986, column: 22, scope: !9395)
!9403 = !DILocation(line: 1002, column: 19, scope: !9395)
!9404 = !DILocation(line: 1002, column: 17, scope: !9395)
!9405 = !DILocation(line: 1014, column: 22, scope: !9395)
!9406 = !DILocation(line: 1014, column: 5, scope: !9395)
!9407 = !DILocation(line: 1024, column: 33, scope: !9395)
!9408 = !DILocation(line: 1026, column: 27, scope: !9395)
!9409 = !DILocation(line: 1027, column: 26, scope: !9395)
!9410 = !DILocation(line: 1042, column: 33, scope: !9395)
!9411 = !DILocation(line: 1044, column: 32, scope: !9395)
!9412 = !DILocation(line: 1052, column: 18, scope: !9395)
!9413 = !DILocation(line: 1052, column: 27, scope: !9395)
!9414 = !DILocation(line: 1052, column: 43, scope: !9395)
!9415 = !DILocation(line: 1048, column: 14, scope: !9395)
!9416 = !DILocation(line: 0, scope: !9395)
!9417 = !DILocation(line: 1063, column: 5, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9419, file: !1488, line: 1063, column: 5)
!9419 = distinct !DILexicalBlock(scope: !9395, file: !1488, line: 1063, column: 5)
!9420 = !DILocation(line: 1063, column: 5, scope: !9419)
!9421 = !DILocation(line: 1063, column: 5, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9418, file: !1488, line: 1063, column: 5)
!9423 = !DILocation(line: 1096, column: 36, scope: !9395)
!9424 = !DILocation(line: 1096, column: 34, scope: !9395)
!9425 = !DILocation(line: 1101, column: 5, scope: !9395)
!9426 = !DILocation(line: 1103, column: 34, scope: !9395)
!9427 = !DILocation(line: 1109, column: 35, scope: !9395)
!9428 = !DILocation(line: 1110, column: 33, scope: !9395)
!9429 = !DILocation(line: 1111, column: 34, scope: !9395)
!9430 = !DILocation(line: 1113, column: 5, scope: !9395)
!9431 = distinct !DISubprogram(name: "CreateFDMLock", scope: !1846, file: !1846, line: 84, type: !291, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !293)
!9432 = !DILocation(line: 86, column: 1, scope: !9431)
!9433 = distinct !DISubprogram(name: "GetFDMLock", scope: !1846, file: !1846, line: 87, type: !7601, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9434)
!9434 = !{!9435}
!9435 = !DILocalVariable(name: "savedMask", scope: !9433, file: !1846, line: 89, type: !940)
!9436 = !DILocation(line: 90, column: 17, scope: !9433)
!9437 = !DILocation(line: 0, scope: !9433)
!9438 = !DILocation(line: 91, column: 9, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9433, file: !1846, line: 91, column: 9)
!9440 = !DILocation(line: 91, column: 9, scope: !9433)
!9441 = !DILocation(line: 92, column: 17, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9439, file: !1846, line: 91, column: 24)
!9443 = !DILocation(line: 94, column: 9, scope: !9442)
!9444 = !DILocation(line: 0, scope: !9439)
!9445 = !DILocation(line: 102, column: 1, scope: !9433)
!9446 = distinct !DISubprogram(name: "FreeFDMLock", scope: !1846, file: !1846, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9447)
!9447 = !{!9448}
!9448 = !DILocalVariable(name: "savedMask", scope: !9446, file: !1846, line: 105, type: !940)
!9449 = !DILocation(line: 106, column: 17, scope: !9446)
!9450 = !DILocation(line: 0, scope: !9446)
!9451 = !DILocation(line: 107, column: 9, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9446, file: !1846, line: 107, column: 9)
!9453 = !DILocation(line: 107, column: 9, scope: !9446)
!9454 = !DILocation(line: 108, column: 17, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9452, file: !1846, line: 107, column: 24)
!9456 = !DILocation(line: 109, column: 9, scope: !9455)
!9457 = !DILocation(line: 114, column: 1, scope: !9446)
!9458 = !DILocation(line: 111, column: 9, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9452, file: !1846, line: 110, column: 12)
!9460 = !DILocation(line: 112, column: 9, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !1846, line: 112, column: 9)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !1846, line: 112, column: 9)
!9463 = distinct !DILexicalBlock(scope: !9459, file: !1846, line: 112, column: 9)
!9464 = distinct !DISubprogram(name: "create_FDM_lock", scope: !1846, file: !1846, line: 119, type: !291, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !293)
!9465 = !DILocation(line: 123, column: 1, scope: !9464)
!9466 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !1846, file: !1846, line: 130, type: !291, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9467)
!9467 = !{!9468}
!9468 = !DILocalVariable(name: "Result", scope: !9466, file: !1846, line: 132, type: !1902)
!9469 = !DILocation(line: 133, column: 5, scope: !9466)
!9470 = !DILocation(line: 134, column: 18, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9466, file: !1846, line: 133, column: 8)
!9472 = !DILocation(line: 0, scope: !9466)
!9473 = !DILocation(line: 135, column: 21, scope: !9466)
!9474 = !DILocation(line: 135, column: 5, scope: !9471)
!9475 = distinct !{!9475, !9469, !9476}
!9476 = !DILocation(line: 135, column: 43, scope: !9466)
!9477 = !DILocation(line: 136, column: 1, scope: !9466)
!9478 = distinct !DISubprogram(name: "release_FDM_lock", scope: !1846, file: !1846, line: 143, type: !291, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !293)
!9479 = !DILocation(line: 147, column: 5, scope: !9478)
!9480 = !DILocation(line: 148, column: 1, scope: !9478)
!9481 = distinct !DISubprogram(name: "readRawDiskData", scope: !1846, file: !1846, line: 216, type: !9482, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9523)
!9482 = !DISubroutineType(types: !9483)
!9483 = !{!940, !9484, !61, !762, !61}
!9484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9485, size: 32)
!9485 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1793, line: 93, baseType: !9486)
!9486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1793, line: 83, size: 1056, elements: !9487)
!9487 = !{!9488, !9489, !9509, !9510, !9522}
!9488 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !9486, file: !1793, line: 84, baseType: !61, size: 32)
!9489 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !9486, file: !1793, line: 85, baseType: !9490, size: 32, offset: 32)
!9490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9491, size: 32)
!9491 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1260, line: 121, baseType: !9492)
!9492 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 105, size: 480, elements: !9493)
!9493 = !{!9494, !9495, !9496, !9497, !9498, !9499, !9500, !9501, !9502, !9503, !9504, !9505, !9506, !9507, !9508}
!9494 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9492, file: !1260, line: 106, baseType: !1534, size: 32)
!9495 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9492, file: !1260, line: 107, baseType: !1335, size: 32, offset: 32)
!9496 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9492, file: !1260, line: 108, baseType: !1539, size: 32, offset: 64)
!9497 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9492, file: !1260, line: 109, baseType: !1543, size: 32, offset: 96)
!9498 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9492, file: !1260, line: 110, baseType: !1547, size: 32, offset: 128)
!9499 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9492, file: !1260, line: 111, baseType: !1543, size: 32, offset: 160)
!9500 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9492, file: !1260, line: 112, baseType: !1552, size: 32, offset: 192)
!9501 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9492, file: !1260, line: 113, baseType: !1543, size: 32, offset: 224)
!9502 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9492, file: !1260, line: 114, baseType: !1543, size: 32, offset: 256)
!9503 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9492, file: !1260, line: 115, baseType: !1543, size: 32, offset: 288)
!9504 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9492, file: !1260, line: 116, baseType: !1559, size: 32, offset: 320)
!9505 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9492, file: !1260, line: 117, baseType: !1564, size: 32, offset: 352)
!9506 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9492, file: !1260, line: 118, baseType: !1569, size: 32, offset: 384)
!9507 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9492, file: !1260, line: 119, baseType: !1573, size: 32, offset: 416)
!9508 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9492, file: !1260, line: 120, baseType: !1577, size: 32, offset: 448)
!9509 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !9486, file: !1793, line: 86, baseType: !88, size: 32, offset: 64)
!9510 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !9486, file: !1793, line: 87, baseType: !9511, size: 928, offset: 96)
!9511 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1260, line: 99, baseType: !9512)
!9512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1260, line: 90, size: 928, elements: !9513)
!9513 = !{!9514, !9515, !9516, !9517, !9518, !9519, !9520, !9521}
!9514 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9512, file: !1260, line: 91, baseType: !61, size: 32)
!9515 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9512, file: !1260, line: 92, baseType: !1591, size: 256, offset: 32)
!9516 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9512, file: !1260, line: 93, baseType: !1591, size: 256, offset: 288)
!9517 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9512, file: !1260, line: 94, baseType: !1591, size: 256, offset: 544)
!9518 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9512, file: !1260, line: 95, baseType: !61, size: 32, offset: 800)
!9519 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9512, file: !1260, line: 96, baseType: !1583, size: 16, offset: 832)
!9520 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9512, file: !1260, line: 97, baseType: !61, size: 32, offset: 864)
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9512, file: !1260, line: 98, baseType: !61, size: 32, offset: 896)
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !9486, file: !1793, line: 92, baseType: !91, size: 8, offset: 1024)
!9523 = !{!9524, !9525, !9526, !9527, !9528, !9529}
!9524 = !DILocalVariable(name: "D", arg: 1, scope: !9481, file: !1846, line: 216, type: !9484)
!9525 = !DILocalVariable(name: "addr", arg: 2, scope: !9481, file: !1846, line: 216, type: !61)
!9526 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9481, file: !1846, line: 216, type: !762)
!9527 = !DILocalVariable(name: "len", arg: 4, scope: !9481, file: !1846, line: 216, type: !61)
!9528 = !DILocalVariable(name: "phyAddr", scope: !9481, file: !1846, line: 219, type: !61)
!9529 = !DILocalVariable(name: "diskSize", scope: !9481, file: !1846, line: 220, type: !61)
!9530 = !DILocation(line: 0, scope: !9481)
!9531 = !DILocation(line: 220, column: 28, scope: !9481)
!9532 = !DILocation(line: 222, column: 14, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9481, file: !1846, line: 222, column: 9)
!9534 = !DILocation(line: 222, column: 26, scope: !9533)
!9535 = !DILocation(line: 225, column: 51, scope: !9481)
!9536 = !DILocation(line: 225, column: 61, scope: !9481)
!9537 = !DILocation(line: 225, column: 15, scope: !9481)
!9538 = !DILocation(line: 225, column: 70, scope: !9481)
!9539 = !DILocation(line: 227, column: 13, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9481, file: !1846, line: 227, column: 9)
!9541 = !DILocation(line: 227, column: 9, scope: !9481)
!9542 = !DILocation(line: 228, column: 9, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9540, file: !1846, line: 227, column: 23)
!9544 = !DILocation(line: 229, column: 5, scope: !9543)
!9545 = !DILocation(line: 231, column: 5, scope: !9481)
!9546 = !DILocation(line: 233, column: 22, scope: !9481)
!9547 = !DILocation(line: 233, column: 5, scope: !9481)
!9548 = !DILocation(line: 235, column: 5, scope: !9481)
!9549 = !DILocation(line: 237, column: 5, scope: !9481)
!9550 = !DILocation(line: 238, column: 1, scope: !9481)
!9551 = distinct !DISubprogram(name: "MountDevice", scope: !1846, file: !1846, line: 165, type: !9552, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9554)
!9552 = !DISubroutineType(types: !9553)
!9553 = !{null, !9484}
!9554 = !{!9555, !9556}
!9555 = !DILocalVariable(name: "D", arg: 1, scope: !9551, file: !1846, line: 165, type: !9484)
!9556 = !DILocalVariable(name: "Result", scope: !9551, file: !1846, line: 167, type: !940)
!9557 = !DILocation(line: 0, scope: !9551)
!9558 = !DILocation(line: 171, column: 12, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9551, file: !1846, line: 171, column: 9)
!9560 = !DILocation(line: 171, column: 9, scope: !9551)
!9561 = !DILocation(line: 176, column: 5, scope: !9551)
!9562 = !DILocation(line: 186, column: 17, scope: !9551)
!9563 = !DILocation(line: 186, column: 28, scope: !9551)
!9564 = !DILocation(line: 186, column: 43, scope: !9551)
!9565 = !DILocation(line: 186, column: 64, scope: !9551)
!9566 = !DILocation(line: 186, column: 52, scope: !9551)
!9567 = !DILocation(line: 186, column: 14, scope: !9551)
!9568 = !DILocation(line: 188, column: 5, scope: !9551)
!9569 = !DILocation(line: 190, column: 16, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9551, file: !1846, line: 190, column: 9)
!9571 = !DILocation(line: 190, column: 9, scope: !9551)
!9572 = !DILocation(line: 191, column: 9, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !1846, line: 191, column: 9)
!9574 = distinct !DILexicalBlock(scope: !9575, file: !1846, line: 191, column: 9)
!9575 = distinct !DILexicalBlock(scope: !9576, file: !1846, line: 191, column: 9)
!9576 = distinct !DILexicalBlock(scope: !9570, file: !1846, line: 190, column: 31)
!9577 = !DILocation(line: 194, column: 17, scope: !9551)
!9578 = !DILocation(line: 195, column: 1, scope: !9551)
!9579 = distinct !DISubprogram(name: "writeRawDiskData", scope: !1846, file: !1846, line: 277, type: !9482, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9580)
!9580 = !{!9581, !9582, !9583, !9584, !9585, !9586, !9587, !9588, !9589, !9590, !9594, !9595, !9596, !9601}
!9581 = !DILocalVariable(name: "D", arg: 1, scope: !9579, file: !1846, line: 277, type: !9484)
!9582 = !DILocalVariable(name: "addr", arg: 2, scope: !9579, file: !1846, line: 277, type: !61)
!9583 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9579, file: !1846, line: 277, type: !762)
!9584 = !DILocalVariable(name: "len", arg: 4, scope: !9579, file: !1846, line: 277, type: !61)
!9585 = !DILocalVariable(name: "dest", scope: !9579, file: !1846, line: 279, type: !61)
!9586 = !DILocalVariable(name: "src", scope: !9579, file: !1846, line: 279, type: !61)
!9587 = !DILocalVariable(name: "diskSize", scope: !9579, file: !1846, line: 280, type: !61)
!9588 = !DILocalVariable(name: "result", scope: !9579, file: !1846, line: 281, type: !940)
!9589 = !DILocalVariable(name: "DoneLength", scope: !9579, file: !1846, line: 282, type: !61)
!9590 = !DILocalVariable(name: "blockSize", scope: !9591, file: !1846, line: 313, type: !61)
!9591 = distinct !DILexicalBlock(scope: !9592, file: !1846, line: 312, column: 14)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !1846, line: 305, column: 13)
!9593 = distinct !DILexicalBlock(scope: !9579, file: !1846, line: 298, column: 30)
!9594 = !DILocalVariable(name: "programBytes", scope: !9591, file: !1846, line: 314, type: !61)
!9595 = !DILocalVariable(name: "nextBlkAddr", scope: !9591, file: !1846, line: 316, type: !61)
!9596 = !DILocalVariable(name: "Cell", scope: !9597, file: !1846, line: 346, type: !9599)
!9597 = distinct !DILexicalBlock(scope: !9598, file: !1846, line: 345, column: 83)
!9598 = distinct !DILexicalBlock(scope: !9591, file: !1846, line: 345, column: 17)
!9599 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9600, line: 76, baseType: !1034)
!9600 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/flash_read_write_data/GCC")
!9601 = !DILocalVariable(name: "b", scope: !9597, file: !1846, line: 347, type: !762)
!9602 = !DILocation(line: 0, scope: !9579)
!9603 = !DILocation(line: 280, column: 28, scope: !9579)
!9604 = !DILocation(line: 284, column: 14, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9579, file: !1846, line: 284, column: 9)
!9606 = !DILocation(line: 284, column: 9, scope: !9579)
!9607 = !DILocation(line: 288, column: 14, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9579, file: !1846, line: 288, column: 9)
!9609 = !DILocation(line: 288, column: 20, scope: !9608)
!9610 = !DILocation(line: 288, column: 9, scope: !9579)
!9611 = !DILocation(line: 292, column: 13, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9579, file: !1846, line: 292, column: 9)
!9613 = !DILocation(line: 292, column: 9, scope: !9579)
!9614 = !DILocation(line: 293, column: 9, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9612, file: !1846, line: 292, column: 23)
!9616 = !DILocation(line: 294, column: 5, scope: !9615)
!9617 = !DILocation(line: 296, column: 5, scope: !9579)
!9618 = !DILocation(line: 346, column: 17, scope: !9597)
!9619 = !DILocation(line: 298, column: 23, scope: !9579)
!9620 = !DILocation(line: 298, column: 5, scope: !9579)
!9621 = !DILocation(line: 299, column: 52, scope: !9593)
!9622 = !DILocation(line: 299, column: 62, scope: !9593)
!9623 = !DILocation(line: 299, column: 16, scope: !9593)
!9624 = !DILocation(line: 299, column: 71, scope: !9593)
!9625 = !DILocation(line: 299, column: 78, scope: !9593)
!9626 = !DILocation(line: 300, column: 34, scope: !9593)
!9627 = !DILocation(line: 302, column: 12, scope: !9593)
!9628 = !DILocation(line: 302, column: 23, scope: !9593)
!9629 = !DILocation(line: 302, column: 81, scope: !9593)
!9630 = !DILocation(line: 302, column: 45, scope: !9593)
!9631 = !DILocation(line: 302, column: 9, scope: !9593)
!9632 = !DILocation(line: 305, column: 29, scope: !9592)
!9633 = !DILocation(line: 305, column: 57, scope: !9592)
!9634 = !DILocation(line: 305, column: 66, scope: !9592)
!9635 = !DILocation(line: 305, column: 80, scope: !9592)
!9636 = !DILocation(line: 305, column: 13, scope: !9593)
!9637 = !DILocation(line: 306, column: 25, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9592, file: !1846, line: 305, column: 87)
!9639 = !DILocation(line: 306, column: 36, scope: !9638)
!9640 = !DILocation(line: 306, column: 51, scope: !9638)
!9641 = !DILocation(line: 306, column: 60, scope: !9638)
!9642 = !DILocation(line: 306, column: 74, scope: !9638)
!9643 = !DILocation(line: 306, column: 22, scope: !9638)
!9644 = !DILocation(line: 307, column: 24, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9638, file: !1846, line: 307, column: 17)
!9646 = !DILocation(line: 307, column: 17, scope: !9638)
!9647 = !DILocation(line: 310, column: 23, scope: !9638)
!9648 = !DILocation(line: 311, column: 9, scope: !9638)
!9649 = !DILocation(line: 313, column: 47, scope: !9591)
!9650 = !DILocation(line: 313, column: 56, scope: !9591)
!9651 = !DILocation(line: 313, column: 34, scope: !9591)
!9652 = !DILocation(line: 0, scope: !9591)
!9653 = !DILocation(line: 316, column: 42, scope: !9591)
!9654 = !DILocation(line: 316, column: 58, scope: !9591)
!9655 = !DILocation(line: 316, column: 55, scope: !9591)
!9656 = !DILocation(line: 326, column: 22, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9591, file: !1846, line: 326, column: 17)
!9658 = !DILocation(line: 326, column: 37, scope: !9657)
!9659 = !DILocation(line: 326, column: 17, scope: !9591)
!9660 = !DILocation(line: 332, column: 43, scope: !9591)
!9661 = !DILocation(line: 345, column: 30, scope: !9598)
!9662 = !DILocation(line: 345, column: 52, scope: !9598)
!9663 = !DILocation(line: 0, scope: !9597)
!9664 = !DILocation(line: 348, column: 26, scope: !9597)
!9665 = !DILocation(line: 348, column: 24, scope: !9597)
!9666 = !DILocation(line: 348, column: 22, scope: !9597)
!9667 = !DILocation(line: 349, column: 41, scope: !9597)
!9668 = !DILocation(line: 349, column: 24, scope: !9597)
!9669 = !DILocation(line: 349, column: 22, scope: !9597)
!9670 = !DILocation(line: 350, column: 29, scope: !9597)
!9671 = !DILocation(line: 350, column: 40, scope: !9597)
!9672 = !DILocation(line: 350, column: 55, scope: !9597)
!9673 = !DILocation(line: 350, column: 64, scope: !9597)
!9674 = !DILocation(line: 350, column: 26, scope: !9597)
!9675 = !DILocation(line: 351, column: 28, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9597, file: !1846, line: 351, column: 21)
!9677 = !DILocation(line: 354, column: 13, scope: !9598)
!9678 = !DILocation(line: 362, column: 33, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9680, file: !1846, line: 361, column: 24)
!9680 = distinct !DILexicalBlock(scope: !9681, file: !1846, line: 355, column: 21)
!9681 = distinct !DILexicalBlock(scope: !9598, file: !1846, line: 354, column: 20)
!9682 = !DILocation(line: 362, column: 44, scope: !9679)
!9683 = !DILocation(line: 362, column: 59, scope: !9679)
!9684 = !DILocation(line: 362, column: 68, scope: !9679)
!9685 = !DILocation(line: 362, column: 82, scope: !9679)
!9686 = !DILocation(line: 362, column: 30, scope: !9679)
!9687 = !DILocation(line: 364, column: 28, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9681, file: !1846, line: 364, column: 21)
!9689 = !DILocation(line: 364, column: 21, scope: !9681)
!9690 = !DILocation(line: 368, column: 24, scope: !9591)
!9691 = !DILocation(line: 0, scope: !9592)
!9692 = distinct !{!9692, !9620, !9693}
!9693 = !DILocation(line: 370, column: 5, scope: !9579)
!9694 = !DILocation(line: 372, column: 5, scope: !9579)
!9695 = !DILocation(line: 379, column: 1, scope: !9579)
!9696 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !1846, file: !1846, line: 398, type: !9697, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9699)
!9697 = !DISubroutineType(types: !9698)
!9698 = !{!940, !9484, !61}
!9699 = !{!9700, !9701, !9702, !9703}
!9700 = !DILocalVariable(name: "D", arg: 1, scope: !9696, file: !1846, line: 398, type: !9484)
!9701 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !9696, file: !1846, line: 398, type: !61)
!9702 = !DILocalVariable(name: "result", scope: !9696, file: !1846, line: 401, type: !940)
!9703 = !DILocalVariable(name: "block_index", scope: !9696, file: !1846, line: 402, type: !61)
!9704 = !DILocation(line: 0, scope: !9696)
!9705 = !DILocation(line: 402, column: 36, scope: !9696)
!9706 = !DILocation(line: 403, column: 13, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9696, file: !1846, line: 403, column: 9)
!9708 = !DILocation(line: 403, column: 9, scope: !9696)
!9709 = !DILocation(line: 404, column: 9, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9707, file: !1846, line: 403, column: 23)
!9711 = !DILocation(line: 405, column: 5, scope: !9710)
!9712 = !DILocation(line: 407, column: 37, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9696, file: !1846, line: 407, column: 9)
!9714 = !DILocation(line: 407, column: 21, scope: !9713)
!9715 = !DILocation(line: 407, column: 9, scope: !9696)
!9716 = !DILocation(line: 412, column: 5, scope: !9696)
!9717 = !DILocation(line: 414, column: 8, scope: !9696)
!9718 = !DILocation(line: 414, column: 19, scope: !9696)
!9719 = !DILocation(line: 414, column: 32, scope: !9696)
!9720 = !DILocation(line: 414, column: 5, scope: !9696)
!9721 = !DILocation(line: 416, column: 17, scope: !9696)
!9722 = !DILocation(line: 416, column: 28, scope: !9696)
!9723 = !DILocation(line: 416, column: 42, scope: !9696)
!9724 = !DILocation(line: 416, column: 14, scope: !9696)
!9725 = !DILocation(line: 418, column: 5, scope: !9696)
!9726 = !DILocation(line: 420, column: 16, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9696, file: !1846, line: 420, column: 9)
!9728 = !DILocation(line: 424, column: 1, scope: !9696)
!9729 = distinct !DISubprogram(name: "NOR_init", scope: !1846, file: !1846, line: 433, type: !7135, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !293)
!9730 = !DILocation(line: 436, column: 9, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9729, file: !1846, line: 436, column: 9)
!9732 = !DILocation(line: 436, column: 9, scope: !9729)
!9733 = !DILocation(line: 437, column: 9, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9731, file: !1846, line: 436, column: 62)
!9735 = !DILocation(line: 438, column: 9, scope: !9734)
!9736 = !DILocation(line: 439, column: 27, scope: !9734)
!9737 = !DILocation(line: 440, column: 5, scope: !9734)
!9738 = !DILocation(line: 441, column: 5, scope: !9729)
!9739 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !1846, file: !1846, line: 444, type: !7601, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !293)
!9740 = !DILocation(line: 446, column: 12, scope: !9739)
!9741 = !DILocation(line: 446, column: 5, scope: !9739)
!9742 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !1846, file: !1846, line: 449, type: !9743, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9745)
!9743 = !DISubroutineType(types: !9744)
!9744 = !{!940, !61, !61, !762}
!9745 = !{!9746, !9747, !9748, !9749, !9750, !9751, !9752}
!9746 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9742, file: !1846, line: 449, type: !61)
!9747 = !DILocalVariable(name: "page_idx", arg: 2, scope: !9742, file: !1846, line: 449, type: !61)
!9748 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9742, file: !1846, line: 449, type: !762)
!9749 = !DILocalVariable(name: "D", scope: !9742, file: !1846, line: 451, type: !9484)
!9750 = !DILocalVariable(name: "mtdData", scope: !9742, file: !1846, line: 452, type: !1854)
!9751 = !DILocalVariable(name: "result", scope: !9742, file: !1846, line: 453, type: !940)
!9752 = !DILocalVariable(name: "addr", scope: !9742, file: !1846, line: 455, type: !61)
!9753 = !DILocation(line: 0, scope: !9742)
!9754 = !DILocation(line: 452, column: 60, scope: !9742)
!9755 = !DILocation(line: 455, column: 32, scope: !9742)
!9756 = !DILocation(line: 455, column: 22, scope: !9742)
!9757 = !DILocation(line: 455, column: 95, scope: !9742)
!9758 = !DILocation(line: 455, column: 76, scope: !9742)
!9759 = !DILocation(line: 455, column: 118, scope: !9742)
!9760 = !DILocation(line: 455, column: 74, scope: !9742)
!9761 = !DILocation(line: 455, column: 106, scope: !9742)
!9762 = !DILocation(line: 457, column: 14, scope: !9742)
!9763 = !DILocation(line: 459, column: 16, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9742, file: !1846, line: 459, column: 9)
!9765 = !DILocation(line: 463, column: 1, scope: !9742)
!9766 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !1846, file: !1846, line: 466, type: !9743, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9767)
!9767 = !{!9768, !9769, !9770, !9771, !9772, !9773, !9774}
!9768 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9766, file: !1846, line: 466, type: !61)
!9769 = !DILocalVariable(name: "page_idx", arg: 2, scope: !9766, file: !1846, line: 466, type: !61)
!9770 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9766, file: !1846, line: 466, type: !762)
!9771 = !DILocalVariable(name: "D", scope: !9766, file: !1846, line: 468, type: !9484)
!9772 = !DILocalVariable(name: "mtdData", scope: !9766, file: !1846, line: 469, type: !1854)
!9773 = !DILocalVariable(name: "result", scope: !9766, file: !1846, line: 470, type: !940)
!9774 = !DILocalVariable(name: "addr", scope: !9766, file: !1846, line: 472, type: !61)
!9775 = !DILocation(line: 0, scope: !9766)
!9776 = !DILocation(line: 469, column: 60, scope: !9766)
!9777 = !DILocation(line: 472, column: 32, scope: !9766)
!9778 = !DILocation(line: 472, column: 22, scope: !9766)
!9779 = !DILocation(line: 472, column: 95, scope: !9766)
!9780 = !DILocation(line: 472, column: 76, scope: !9766)
!9781 = !DILocation(line: 472, column: 118, scope: !9766)
!9782 = !DILocation(line: 472, column: 74, scope: !9766)
!9783 = !DILocation(line: 472, column: 106, scope: !9766)
!9784 = !DILocation(line: 474, column: 14, scope: !9766)
!9785 = !DILocation(line: 475, column: 16, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9766, file: !1846, line: 475, column: 9)
!9787 = !DILocation(line: 479, column: 1, scope: !9766)
!9788 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !1846, file: !1846, line: 481, type: !9789, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9791)
!9789 = !DISubroutineType(types: !9790)
!9790 = !{!940, !61}
!9791 = !{!9792, !9793}
!9792 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9788, file: !1846, line: 481, type: !61)
!9793 = !DILocalVariable(name: "result", scope: !9788, file: !1846, line: 483, type: !940)
!9794 = !DILocation(line: 0, scope: !9788)
!9795 = !DILocation(line: 484, column: 14, scope: !9788)
!9796 = !DILocation(line: 485, column: 16, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9788, file: !1846, line: 485, column: 9)
!9798 = !DILocation(line: 489, column: 1, scope: !9788)
!9799 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !1846, file: !1846, line: 492, type: !3519, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9800)
!9800 = !{!9801, !9802, !9803}
!9801 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9799, file: !1846, line: 492, type: !61)
!9802 = !DILocalVariable(name: "D", scope: !9799, file: !1846, line: 494, type: !9484)
!9803 = !DILocalVariable(name: "mtdData", scope: !9799, file: !1846, line: 495, type: !1854)
!9804 = !DILocation(line: 0, scope: !9799)
!9805 = !DILocation(line: 495, column: 60, scope: !9799)
!9806 = !DILocation(line: 496, column: 12, scope: !9799)
!9807 = !DILocation(line: 496, column: 5, scope: !9799)
!9808 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !1846, file: !1846, line: 499, type: !3519, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9809)
!9809 = !{!9810, !9811, !9812}
!9810 = !DILocalVariable(name: "block_addr", arg: 1, scope: !9808, file: !1846, line: 499, type: !61)
!9811 = !DILocalVariable(name: "D", scope: !9808, file: !1846, line: 501, type: !9484)
!9812 = !DILocalVariable(name: "mtdData", scope: !9808, file: !1846, line: 502, type: !1854)
!9813 = !DILocation(line: 0, scope: !9808)
!9814 = !DILocation(line: 502, column: 60, scope: !9808)
!9815 = !DILocation(line: 504, column: 12, scope: !9808)
!9816 = !DILocation(line: 504, column: 5, scope: !9808)
!9817 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !1846, file: !1846, line: 510, type: !9818, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9820)
!9818 = !DISubroutineType(types: !9819)
!9819 = !{!940, !61, !1002, !1002}
!9820 = !{!9821, !9822, !9823, !9824, !9825}
!9821 = !DILocalVariable(name: "block_addr", arg: 1, scope: !9817, file: !1846, line: 510, type: !61)
!9822 = !DILocalVariable(name: "block_index", arg: 2, scope: !9817, file: !1846, line: 510, type: !1002)
!9823 = !DILocalVariable(name: "offset", arg: 3, scope: !9817, file: !1846, line: 510, type: !1002)
!9824 = !DILocalVariable(name: "D", scope: !9817, file: !1846, line: 512, type: !9484)
!9825 = !DILocalVariable(name: "mtdData", scope: !9817, file: !1846, line: 513, type: !1854)
!9826 = !DILocation(line: 0, scope: !9817)
!9827 = !DILocation(line: 513, column: 60, scope: !9817)
!9828 = !DILocation(line: 519, column: 20, scope: !9817)
!9829 = !DILocation(line: 519, column: 18, scope: !9817)
!9830 = !DILocation(line: 520, column: 22, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9817, file: !1846, line: 520, column: 9)
!9832 = !DILocation(line: 520, column: 9, scope: !9817)
!9833 = !DILocation(line: 524, column: 28, scope: !9817)
!9834 = !DILocation(line: 524, column: 26, scope: !9817)
!9835 = !DILocation(line: 524, column: 13, scope: !9817)
!9836 = !DILocation(line: 526, column: 5, scope: !9817)
!9837 = !DILocation(line: 527, column: 1, scope: !9817)
!9838 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !1846, file: !1846, line: 532, type: !9839, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9841)
!9839 = !DISubroutineType(types: !9840)
!9840 = !{!940, !61, !61, !1002}
!9841 = !{!9842, !9843, !9844, !9845, !9846}
!9842 = !DILocalVariable(name: "block_index", arg: 1, scope: !9838, file: !1846, line: 532, type: !61)
!9843 = !DILocalVariable(name: "offset", arg: 2, scope: !9838, file: !1846, line: 532, type: !61)
!9844 = !DILocalVariable(name: "addr", arg: 3, scope: !9838, file: !1846, line: 532, type: !1002)
!9845 = !DILocalVariable(name: "D", scope: !9838, file: !1846, line: 534, type: !9484)
!9846 = !DILocalVariable(name: "mtdData", scope: !9838, file: !1846, line: 535, type: !1854)
!9847 = !DILocation(line: 0, scope: !9838)
!9848 = !DILocation(line: 535, column: 60, scope: !9838)
!9849 = !DILocation(line: 537, column: 23, scope: !9838)
!9850 = !DILocation(line: 537, column: 13, scope: !9838)
!9851 = !DILocation(line: 537, column: 79, scope: !9838)
!9852 = !DILocation(line: 537, column: 60, scope: !9838)
!9853 = !DILocation(line: 537, column: 58, scope: !9838)
!9854 = !DILocation(line: 537, column: 88, scope: !9838)
!9855 = !DILocation(line: 537, column: 11, scope: !9838)
!9856 = !DILocation(line: 539, column: 5, scope: !9838)
!9857 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !1846, file: !1846, line: 545, type: !9858, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9860)
!9858 = !DISubroutineType(types: !9859)
!9859 = !{!1902, !940}
!9860 = !{!9861}
!9861 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !9857, file: !1846, line: 545, type: !940)
!9862 = !DILocation(line: 0, scope: !9857)
!9863 = !DILocation(line: 547, column: 9, scope: !9857)
!9864 = !DILocation(line: 558, column: 9, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9866, file: !1846, line: 558, column: 9)
!9866 = distinct !DILexicalBlock(scope: !9867, file: !1846, line: 558, column: 9)
!9867 = distinct !DILexicalBlock(scope: !9868, file: !1846, line: 558, column: 9)
!9868 = distinct !DILexicalBlock(scope: !9869, file: !1846, line: 557, column: 12)
!9869 = distinct !DILexicalBlock(scope: !9870, file: !1846, line: 555, column: 16)
!9870 = distinct !DILexicalBlock(scope: !9871, file: !1846, line: 553, column: 16)
!9871 = distinct !DILexicalBlock(scope: !9872, file: !1846, line: 551, column: 16)
!9872 = distinct !DILexicalBlock(scope: !9873, file: !1846, line: 549, column: 16)
!9873 = distinct !DILexicalBlock(scope: !9857, file: !1846, line: 547, column: 9)
!9874 = !DILocation(line: 560, column: 1, scope: !9857)
!9875 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !1846, file: !1846, line: 561, type: !9876, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9879)
!9876 = !DISubroutineType(types: !9877)
!9877 = !{!9878, !61}
!9878 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1183, line: 127, baseType: !1848)
!9879 = !{!9880, !9881, !9882}
!9880 = !DILocalVariable(name: "address", arg: 1, scope: !9875, file: !1846, line: 561, type: !61)
!9881 = !DILocalVariable(name: "block_size", scope: !9875, file: !1846, line: 563, type: !61)
!9882 = !DILocalVariable(name: "block_index", scope: !9875, file: !1846, line: 564, type: !61)
!9883 = !DILocation(line: 0, scope: !9875)
!9884 = !DILocation(line: 566, column: 19, scope: !9875)
!9885 = !DILocation(line: 567, column: 21, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9875, file: !1846, line: 567, column: 9)
!9887 = !DILocation(line: 567, column: 9, scope: !9875)
!9888 = !DILocation(line: 568, column: 9, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9890, file: !1846, line: 568, column: 9)
!9890 = distinct !DILexicalBlock(scope: !9891, file: !1846, line: 568, column: 9)
!9891 = distinct !DILexicalBlock(scope: !9892, file: !1846, line: 568, column: 9)
!9892 = distinct !DILexicalBlock(scope: !9886, file: !1846, line: 567, column: 45)
!9893 = !DILocation(line: 570, column: 18, scope: !9875)
!9894 = !DILocation(line: 571, column: 9, scope: !9875)
!9895 = !DILocation(line: 574, column: 9, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9897, file: !1846, line: 573, column: 38)
!9897 = distinct !DILexicalBlock(scope: !9898, file: !1846, line: 573, column: 16)
!9898 = distinct !DILexicalBlock(scope: !9875, file: !1846, line: 571, column: 9)
!9899 = !DILocation(line: 576, column: 9, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9901, file: !1846, line: 575, column: 39)
!9901 = distinct !DILexicalBlock(scope: !9897, file: !1846, line: 575, column: 16)
!9902 = !DILocation(line: 578, column: 9, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9904, file: !1846, line: 578, column: 9)
!9904 = distinct !DILexicalBlock(scope: !9905, file: !1846, line: 578, column: 9)
!9905 = distinct !DILexicalBlock(scope: !9906, file: !1846, line: 578, column: 9)
!9906 = distinct !DILexicalBlock(scope: !9901, file: !1846, line: 577, column: 12)
!9907 = !DILocation(line: 0, scope: !9898)
!9908 = !DILocation(line: 580, column: 1, scope: !9875)
!9909 = distinct !DISubprogram(name: "hal_flash_init", scope: !1846, file: !1846, line: 583, type: !7601, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !293)
!9910 = !DILocation(line: 585, column: 5, scope: !9909)
!9911 = !DILocation(line: 586, column: 5, scope: !9909)
!9912 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1846, file: !1846, line: 589, type: !7601, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !293)
!9913 = !DILocation(line: 591, column: 5, scope: !9912)
!9914 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1846, file: !1846, line: 595, type: !9915, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9917)
!9915 = !DISubroutineType(types: !9916)
!9916 = !{!1902, !61, !9878}
!9917 = !{!9918, !9919, !9920, !9921, !9922}
!9918 = !DILocalVariable(name: "start_address", arg: 1, scope: !9914, file: !1846, line: 595, type: !61)
!9919 = !DILocalVariable(name: "block", arg: 2, scope: !9914, file: !1846, line: 595, type: !9878)
!9920 = !DILocalVariable(name: "result", scope: !9914, file: !1846, line: 597, type: !940)
!9921 = !DILocalVariable(name: "block_index", scope: !9914, file: !1846, line: 598, type: !61)
!9922 = !DILocalVariable(name: "erase_type", scope: !9914, file: !1846, line: 599, type: !61)
!9923 = !DILocation(line: 0, scope: !9914)
!9924 = !DILocation(line: 601, column: 9, scope: !9914)
!9925 = !DILocation(line: 602, column: 28, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9927, file: !1846, line: 602, column: 13)
!9927 = distinct !DILexicalBlock(scope: !9928, file: !1846, line: 601, column: 38)
!9928 = distinct !DILexicalBlock(scope: !9914, file: !1846, line: 601, column: 9)
!9929 = !DILocation(line: 602, column: 37, scope: !9926)
!9930 = !DILocation(line: 602, column: 13, scope: !9927)
!9931 = !DILocation(line: 607, column: 28, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9933, file: !1846, line: 607, column: 13)
!9933 = distinct !DILexicalBlock(scope: !9934, file: !1846, line: 606, column: 46)
!9934 = distinct !DILexicalBlock(scope: !9928, file: !1846, line: 606, column: 16)
!9935 = !DILocation(line: 607, column: 38, scope: !9932)
!9936 = !DILocation(line: 607, column: 13, scope: !9933)
!9937 = !DILocation(line: 612, column: 28, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9939, file: !1846, line: 612, column: 13)
!9939 = distinct !DILexicalBlock(scope: !9940, file: !1846, line: 611, column: 46)
!9940 = distinct !DILexicalBlock(scope: !9934, file: !1846, line: 611, column: 16)
!9941 = !DILocation(line: 612, column: 38, scope: !9938)
!9942 = !DILocation(line: 612, column: 13, scope: !9939)
!9943 = !DILocation(line: 0, scope: !9928)
!9944 = !DILocation(line: 621, column: 19, scope: !9914)
!9945 = !DILocation(line: 622, column: 21, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9914, file: !1846, line: 622, column: 9)
!9947 = !DILocation(line: 622, column: 9, scope: !9914)
!9948 = !DILocation(line: 626, column: 17, scope: !9914)
!9949 = !DILocation(line: 627, column: 14, scope: !9914)
!9950 = !DILocation(line: 628, column: 16, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9914, file: !1846, line: 628, column: 9)
!9952 = !DILocation(line: 628, column: 9, scope: !9914)
!9953 = !DILocation(line: 629, column: 16, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9951, file: !1846, line: 628, column: 38)
!9955 = !DILocation(line: 629, column: 9, scope: !9954)
!9956 = !DILocation(line: 632, column: 1, scope: !9914)
!9957 = distinct !DISubprogram(name: "hal_flash_read", scope: !1846, file: !1846, line: 634, type: !9958, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9960)
!9958 = !DISubroutineType(types: !9959)
!9959 = !{!1902, !61, !762, !61}
!9960 = !{!9961, !9962, !9963, !9964, !9965}
!9961 = !DILocalVariable(name: "start_address", arg: 1, scope: !9957, file: !1846, line: 634, type: !61)
!9962 = !DILocalVariable(name: "buffer", arg: 2, scope: !9957, file: !1846, line: 634, type: !762)
!9963 = !DILocalVariable(name: "length", arg: 3, scope: !9957, file: !1846, line: 634, type: !61)
!9964 = !DILocalVariable(name: "D", scope: !9957, file: !1846, line: 636, type: !9484)
!9965 = !DILocalVariable(name: "result", scope: !9957, file: !1846, line: 637, type: !940)
!9966 = !DILocation(line: 0, scope: !9957)
!9967 = !DILocation(line: 639, column: 14, scope: !9957)
!9968 = !DILocation(line: 641, column: 16, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9957, file: !1846, line: 641, column: 9)
!9970 = !DILocation(line: 641, column: 9, scope: !9957)
!9971 = !DILocation(line: 642, column: 16, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9969, file: !1846, line: 641, column: 38)
!9973 = !DILocation(line: 642, column: 9, scope: !9972)
!9974 = !DILocation(line: 645, column: 1, scope: !9957)
!9975 = distinct !DISubprogram(name: "hal_flash_write", scope: !1846, file: !1846, line: 647, type: !9976, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1845, retainedNodes: !9978)
!9976 = !DISubroutineType(types: !9977)
!9977 = !{!1902, !61, !4901, !61}
!9978 = !{!9979, !9980, !9981, !9982, !9983, !9984}
!9979 = !DILocalVariable(name: "address", arg: 1, scope: !9975, file: !1846, line: 647, type: !61)
!9980 = !DILocalVariable(name: "data", arg: 2, scope: !9975, file: !1846, line: 647, type: !4901)
!9981 = !DILocalVariable(name: "length", arg: 3, scope: !9975, file: !1846, line: 647, type: !61)
!9982 = !DILocalVariable(name: "D", scope: !9975, file: !1846, line: 649, type: !9484)
!9983 = !DILocalVariable(name: "result", scope: !9975, file: !1846, line: 650, type: !940)
!9984 = !DILocalVariable(name: "addr", scope: !9985, file: !1846, line: 660, type: !61)
!9985 = distinct !DILexicalBlock(scope: !9986, file: !1846, line: 659, column: 40)
!9986 = distinct !DILexicalBlock(scope: !9975, file: !1846, line: 659, column: 8)
!9987 = !DILocation(line: 0, scope: !9975)
!9988 = !DILocation(line: 652, column: 14, scope: !9975)
!9989 = !DILocation(line: 653, column: 16, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9975, file: !1846, line: 653, column: 9)
!9991 = !DILocation(line: 653, column: 9, scope: !9975)
!9992 = !DILocation(line: 654, column: 16, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9990, file: !1846, line: 653, column: 38)
!9994 = !DILocation(line: 654, column: 9, scope: !9993)
!9995 = !DILocation(line: 659, column: 8, scope: !9986)
!9996 = !DILocation(line: 659, column: 8, scope: !9975)
!9997 = !DILocation(line: 661, column: 25, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9985, file: !1846, line: 661, column: 8)
!9999 = !DILocation(line: 0, scope: !9985)
!10000 = !DILocation(line: 661, column: 58, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9998, file: !1846, line: 661, column: 8)
!10002 = !DILocation(line: 661, column: 8, scope: !9998)
!10003 = !DILocation(line: 662, column: 13, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10001, file: !1846, line: 661, column: 147)
!10005 = !DILocation(line: 661, column: 128, scope: !10001)
!10006 = distinct !{!10006, !10002, !10007}
!10007 = !DILocation(line: 663, column: 8, scope: !9998)
!10008 = !DILocation(line: 668, column: 1, scope: !9975)
!10009 = distinct !DISubprogram(name: "BlockAddress", scope: !1907, file: !1907, line: 111, type: !10010, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1906, retainedNodes: !10012)
!10010 = !DISubroutineType(types: !10011)
!10011 = !{!88, !88, !61}
!10012 = !{!10013, !10014, !10015, !10016, !10017, !10018}
!10013 = !DILocalVariable(name: "DriverData", arg: 1, scope: !10009, file: !1907, line: 111, type: !88)
!10014 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10009, file: !1907, line: 111, type: !61)
!10015 = !DILocalVariable(name: "D", scope: !10009, file: !1907, line: 113, type: !1935)
!10016 = !DILocalVariable(name: "addr", scope: !10009, file: !1907, line: 114, type: !61)
!10017 = !DILocalVariable(name: "region", scope: !10009, file: !1907, line: 115, type: !61)
!10018 = !DILocalVariable(name: "BlockUpperBound", scope: !10009, file: !1907, line: 115, type: !61)
!10019 = !DILocation(line: 0, scope: !10009)
!10020 = !DILocation(line: 117, column: 26, scope: !10009)
!10021 = !DILocation(line: 117, column: 40, scope: !10009)
!10022 = !DILocation(line: 118, column: 28, scope: !10009)
!10023 = !DILocation(line: 118, column: 5, scope: !10009)
!10024 = !DILocation(line: 119, column: 39, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10009, file: !1907, line: 118, column: 43)
!10026 = !DILocation(line: 119, column: 76, scope: !10025)
!10027 = !DILocation(line: 119, column: 52, scope: !10025)
!10028 = !DILocation(line: 119, column: 14, scope: !10025)
!10029 = !DILocation(line: 120, column: 15, scope: !10025)
!10030 = !DILocation(line: 121, column: 50, scope: !10025)
!10031 = !DILocation(line: 121, column: 25, scope: !10025)
!10032 = distinct !{!10032, !10023, !10033}
!10033 = !DILocation(line: 122, column: 5, scope: !10009)
!10034 = !DILocation(line: 123, column: 68, scope: !10009)
!10035 = !DILocation(line: 123, column: 44, scope: !10009)
!10036 = !DILocation(line: 123, column: 25, scope: !10009)
!10037 = !DILocation(line: 123, column: 107, scope: !10009)
!10038 = !DILocation(line: 123, column: 83, scope: !10009)
!10039 = !DILocation(line: 123, column: 10, scope: !10009)
!10040 = !DILocation(line: 125, column: 16, scope: !10009)
!10041 = !DILocation(line: 125, column: 25, scope: !10009)
!10042 = !DILocation(line: 125, column: 5, scope: !10009)
!10043 = distinct !DISubprogram(name: "MapWindow", scope: !1907, file: !1907, line: 180, type: !1540, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1906, retainedNodes: !10044)
!10044 = !{!10045, !10046, !10047, !10048}
!10045 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10043, file: !1907, line: 180, type: !88)
!10046 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10043, file: !1907, line: 180, type: !61)
!10047 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !10043, file: !1907, line: 180, type: !61)
!10048 = !DILocalVariable(name: "D", scope: !10043, file: !1907, line: 182, type: !1935)
!10049 = !DILocation(line: 0, scope: !10043)
!10050 = !DILocation(line: 185, column: 5, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10052, file: !1907, line: 185, column: 5)
!10052 = distinct !DILexicalBlock(scope: !10043, file: !1907, line: 185, column: 5)
!10053 = !DILocation(line: 185, column: 5, scope: !10052)
!10054 = !DILocation(line: 185, column: 5, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10051, file: !1907, line: 185, column: 5)
!10056 = !DILocation(line: 186, column: 27, scope: !10043)
!10057 = !DILocation(line: 186, column: 19, scope: !10043)
!10058 = !DILocation(line: 186, column: 8, scope: !10043)
!10059 = !DILocation(line: 186, column: 17, scope: !10043)
!10060 = !DILocation(line: 188, column: 5, scope: !10043)
!10061 = !DILocation(line: 0, scope: !1928)
!10062 = !DILocation(line: 142, column: 12, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !1928, file: !1907, line: 142, column: 9)
!10064 = !DILocation(line: 142, column: 34, scope: !10063)
!10065 = !DILocation(line: 142, column: 64, scope: !10063)
!10066 = !DILocation(line: 142, column: 75, scope: !10063)
!10067 = !DILocation(line: 142, column: 9, scope: !1928)
!10068 = !DILocation(line: 143, column: 79, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10070, file: !1907, line: 143, column: 13)
!10070 = distinct !DILexicalBlock(scope: !10063, file: !1907, line: 142, column: 99)
!10071 = !DILocation(line: 143, column: 13, scope: !10070)
!10072 = !DILocation(line: 144, column: 72, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10074, file: !1907, line: 144, column: 17)
!10074 = distinct !DILexicalBlock(scope: !10069, file: !1907, line: 143, column: 94)
!10075 = !DILocation(line: 144, column: 83, scope: !10073)
!10076 = !DILocation(line: 144, column: 17, scope: !10074)
!10077 = !DILocation(line: 145, column: 87, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10079, file: !1907, line: 145, column: 21)
!10079 = distinct !DILexicalBlock(scope: !10073, file: !1907, line: 144, column: 107)
!10080 = !DILocation(line: 145, column: 21, scope: !10079)
!10081 = !DILocation(line: 146, column: 33, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10078, file: !1907, line: 145, column: 102)
!10083 = !DILocation(line: 147, column: 25, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10082, file: !1907, line: 147, column: 25)
!10085 = !DILocation(line: 147, column: 62, scope: !10084)
!10086 = !DILocation(line: 147, column: 34, scope: !10084)
!10087 = !DILocation(line: 147, column: 25, scope: !10082)
!10088 = !DILocation(line: 148, column: 91, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10084, file: !1907, line: 147, column: 106)
!10090 = !DILocation(line: 149, column: 111, scope: !10089)
!10091 = !DILocation(line: 149, column: 101, scope: !10089)
!10092 = !DILocation(line: 149, column: 87, scope: !10089)
!10093 = !DILocation(line: 149, column: 99, scope: !10089)
!10094 = !DILocation(line: 150, column: 37, scope: !10089)
!10095 = !DILocation(line: 150, column: 34, scope: !10089)
!10096 = !DILocation(line: 151, column: 21, scope: !10089)
!10097 = !DILocation(line: 152, column: 91, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10084, file: !1907, line: 151, column: 28)
!10099 = !DILocation(line: 153, column: 111, scope: !10098)
!10100 = !DILocation(line: 153, column: 101, scope: !10098)
!10101 = !DILocation(line: 153, column: 87, scope: !10098)
!10102 = !DILocation(line: 153, column: 99, scope: !10098)
!10103 = !DILocation(line: 154, column: 34, scope: !10098)
!10104 = !DILocation(line: 157, column: 32, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10078, file: !1907, line: 156, column: 24)
!10106 = !DILocation(line: 158, column: 83, scope: !10105)
!10107 = !DILocation(line: 159, column: 60, scope: !10105)
!10108 = !DILocation(line: 159, column: 33, scope: !10105)
!10109 = !DILocation(line: 159, column: 30, scope: !10105)
!10110 = !DILocation(line: 162, column: 29, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10073, file: !1907, line: 161, column: 20)
!10112 = !DILocation(line: 163, column: 83, scope: !10111)
!10113 = !DILocation(line: 164, column: 103, scope: !10111)
!10114 = !DILocation(line: 164, column: 93, scope: !10111)
!10115 = !DILocation(line: 164, column: 79, scope: !10111)
!10116 = !DILocation(line: 164, column: 91, scope: !10111)
!10117 = !DILocation(line: 165, column: 56, scope: !10111)
!10118 = !DILocation(line: 165, column: 29, scope: !10111)
!10119 = !DILocation(line: 165, column: 26, scope: !10111)
!10120 = !DILocation(line: 168, column: 24, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10069, file: !1907, line: 167, column: 16)
!10122 = !DILocation(line: 169, column: 75, scope: !10121)
!10123 = !DILocation(line: 170, column: 50, scope: !10121)
!10124 = !DILocation(line: 170, column: 22, scope: !10121)
!10125 = !DILocation(line: 173, column: 21, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10063, file: !1907, line: 172, column: 12)
!10127 = !DILocation(line: 174, column: 75, scope: !10126)
!10128 = !DILocation(line: 175, column: 95, scope: !10126)
!10129 = !DILocation(line: 175, column: 85, scope: !10126)
!10130 = !DILocation(line: 175, column: 71, scope: !10126)
!10131 = !DILocation(line: 175, column: 83, scope: !10126)
!10132 = !DILocation(line: 176, column: 46, scope: !10126)
!10133 = !DILocation(line: 176, column: 18, scope: !10126)
!10134 = !DILocation(line: 0, scope: !10063)
!10135 = !DILocation(line: 178, column: 5, scope: !1928)
!10136 = distinct !DISubprogram(name: "BlockSize", scope: !1907, file: !1907, line: 191, type: !1929, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1906, retainedNodes: !10137)
!10137 = !{!10138, !10139, !10140, !10141, !10142}
!10138 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10136, file: !1907, line: 191, type: !88)
!10139 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10136, file: !1907, line: 191, type: !61)
!10140 = !DILocalVariable(name: "D", scope: !10136, file: !1907, line: 193, type: !1935)
!10141 = !DILocalVariable(name: "region", scope: !10136, file: !1907, line: 194, type: !61)
!10142 = !DILocalVariable(name: "BlockUpperBound", scope: !10136, file: !1907, line: 194, type: !61)
!10143 = !DILocation(line: 0, scope: !10136)
!10144 = !DILocation(line: 196, column: 26, scope: !10136)
!10145 = !DILocation(line: 196, column: 45, scope: !10136)
!10146 = !DILocation(line: 197, column: 28, scope: !10136)
!10147 = !DILocation(line: 197, column: 5, scope: !10136)
!10148 = !DILocation(line: 198, column: 15, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10136, file: !1907, line: 197, column: 43)
!10150 = !DILocation(line: 199, column: 50, scope: !10149)
!10151 = !DILocation(line: 199, column: 25, scope: !10149)
!10152 = distinct !{!10152, !10147, !10153}
!10153 = !DILocation(line: 200, column: 5, scope: !10136)
!10154 = !DILocation(line: 202, column: 35, scope: !10136)
!10155 = !DILocation(line: 202, column: 5, scope: !10136)
!10156 = distinct !DISubprogram(name: "BlockIndex", scope: !1907, file: !1907, line: 205, type: !1929, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1906, retainedNodes: !10157)
!10157 = !{!10158, !10159, !10160, !10161, !10162, !10163}
!10158 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10156, file: !1907, line: 205, type: !88)
!10159 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !10156, file: !1907, line: 205, type: !61)
!10160 = !DILocalVariable(name: "D", scope: !10156, file: !1907, line: 207, type: !1935)
!10161 = !DILocalVariable(name: "region", scope: !10156, file: !1907, line: 208, type: !61)
!10162 = !DILocalVariable(name: "BlockUpperAddr", scope: !10156, file: !1907, line: 208, type: !61)
!10163 = !DILocalVariable(name: "blk_idx", scope: !10156, file: !1907, line: 209, type: !61)
!10164 = !DILocation(line: 0, scope: !10156)
!10165 = !DILocation(line: 211, column: 25, scope: !10156)
!10166 = !DILocation(line: 211, column: 44, scope: !10156)
!10167 = !DILocation(line: 211, column: 81, scope: !10156)
!10168 = !DILocation(line: 211, column: 57, scope: !10156)
!10169 = !DILocation(line: 213, column: 28, scope: !10156)
!10170 = !DILocation(line: 213, column: 40, scope: !10156)
!10171 = !DILocation(line: 213, column: 66, scope: !10156)
!10172 = !DILocation(line: 213, column: 5, scope: !10156)
!10173 = !DILocation(line: 214, column: 17, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10156, file: !1907, line: 213, column: 78)
!10175 = !DILocation(line: 215, column: 18, scope: !10174)
!10176 = !DILocation(line: 216, column: 15, scope: !10174)
!10177 = !DILocation(line: 217, column: 48, scope: !10174)
!10178 = !DILocation(line: 217, column: 85, scope: !10174)
!10179 = !DILocation(line: 217, column: 61, scope: !10174)
!10180 = distinct !{!10180, !10172, !10181}
!10181 = !DILocation(line: 218, column: 5, scope: !10156)
!10182 = !DILocation(line: 221, column: 53, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10184, file: !1907, line: 220, column: 37)
!10184 = distinct !DILexicalBlock(scope: !10156, file: !1907, line: 220, column: 9)
!10185 = !DILocation(line: 221, column: 29, scope: !10183)
!10186 = !DILocation(line: 221, column: 17, scope: !10183)
!10187 = !DILocation(line: 222, column: 5, scope: !10183)
!10188 = !DILocation(line: 0, scope: !10184)
!10189 = !DILocation(line: 225, column: 5, scope: !10156)
!10190 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !1907, file: !1907, line: 232, type: !3771, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1906, retainedNodes: !293)
!10191 = !DILocation(line: 238, column: 5, scope: !10190)
!10192 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !1907, file: !1907, line: 243, type: !3771, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1906, retainedNodes: !293)
!10193 = !DILocation(line: 245, column: 5, scope: !10192)
!10194 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !1907, file: !1907, line: 249, type: !3771, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1906, retainedNodes: !293)
!10195 = !DILocation(line: 254, column: 5, scope: !10194)
!10196 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !1907, file: !1907, line: 259, type: !3771, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1906, retainedNodes: !293)
!10197 = !DILocation(line: 261, column: 5, scope: !10196)
!10198 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !1907, file: !1907, line: 271, type: !6236, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1906, retainedNodes: !10199)
!10199 = !{!10200, !10201}
!10200 = !DILocalVariable(name: "delay", arg: 1, scope: !10198, file: !1907, line: 271, type: !61)
!10201 = !DILocalVariable(name: "ret", scope: !10198, file: !1907, line: 276, type: !2938)
!10202 = !DILocation(line: 0, scope: !10198)
!10203 = !DILocation(line: 277, column: 11, scope: !10198)
!10204 = !DILocation(line: 278, column: 13, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10198, file: !1907, line: 278, column: 9)
!10206 = !DILocation(line: 278, column: 9, scope: !10198)
!10207 = !DILocation(line: 279, column: 9, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10209, file: !1907, line: 279, column: 9)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !1907, line: 279, column: 9)
!10210 = distinct !DILexicalBlock(scope: !10211, file: !1907, line: 279, column: 9)
!10211 = distinct !DILexicalBlock(scope: !10205, file: !1907, line: 278, column: 35)
!10212 = !DILocation(line: 282, column: 1, scope: !10198)
!10213 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2569, file: !2569, line: 58, type: !10214, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !10216)
!10214 = !DISubroutineType(types: !10215)
!10215 = !{null, !2203, !7, !2203, null}
!10216 = !{!10217, !10218, !10219, !10220, !10229}
!10217 = !DILocalVariable(name: "func", arg: 1, scope: !10213, file: !2569, line: 58, type: !2203)
!10218 = !DILocalVariable(name: "line", arg: 2, scope: !10213, file: !2569, line: 58, type: !7)
!10219 = !DILocalVariable(name: "message", arg: 3, scope: !10213, file: !2569, line: 58, type: !2203)
!10220 = !DILocalVariable(name: "ap", scope: !10213, file: !2569, line: 60, type: !10221)
!10221 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !10222, line: 46, baseType: !10223)
!10222 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!10223 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !10224, line: 32, baseType: !10225)
!10224 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!10225 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2569, baseType: !10226)
!10226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !10227)
!10227 = !{!10228}
!10228 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !10226, file: !2569, line: 60, baseType: !88, size: 32)
!10229 = !DILocalVariable(name: "mask", scope: !10213, file: !2569, line: 62, type: !61)
!10230 = !DILocation(line: 0, scope: !10213)
!10231 = !DILocation(line: 60, column: 5, scope: !10213)
!10232 = !DILocation(line: 60, column: 13, scope: !10213)
!10233 = !DILocation(line: 62, column: 5, scope: !10213)
!10234 = !DILocation(line: 63, column: 5, scope: !10213)
!10235 = !DILocation(line: 65, column: 5, scope: !10213)
!10236 = !DILocation(line: 66, column: 5, scope: !10213)
!10237 = !DILocation(line: 67, column: 5, scope: !10213)
!10238 = !DILocation(line: 69, column: 37, scope: !10213)
!10239 = !DILocation(line: 69, column: 5, scope: !10213)
!10240 = !DILocation(line: 71, column: 1, scope: !10213)
!10241 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2569, file: !2569, line: 72, type: !10214, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !10242)
!10242 = !{!10243, !10244, !10245, !10246, !10247}
!10243 = !DILocalVariable(name: "func", arg: 1, scope: !10241, file: !2569, line: 72, type: !2203)
!10244 = !DILocalVariable(name: "line", arg: 2, scope: !10241, file: !2569, line: 72, type: !7)
!10245 = !DILocalVariable(name: "message", arg: 3, scope: !10241, file: !2569, line: 72, type: !2203)
!10246 = !DILocalVariable(name: "ap", scope: !10241, file: !2569, line: 74, type: !10221)
!10247 = !DILocalVariable(name: "mask", scope: !10241, file: !2569, line: 76, type: !61)
!10248 = !DILocation(line: 0, scope: !10241)
!10249 = !DILocation(line: 74, column: 5, scope: !10241)
!10250 = !DILocation(line: 74, column: 13, scope: !10241)
!10251 = !DILocation(line: 76, column: 5, scope: !10241)
!10252 = !DILocation(line: 77, column: 5, scope: !10241)
!10253 = !DILocation(line: 79, column: 5, scope: !10241)
!10254 = !DILocation(line: 80, column: 5, scope: !10241)
!10255 = !DILocation(line: 81, column: 5, scope: !10241)
!10256 = !DILocation(line: 83, column: 37, scope: !10241)
!10257 = !DILocation(line: 83, column: 5, scope: !10241)
!10258 = !DILocation(line: 85, column: 1, scope: !10241)
!10259 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2569, file: !2569, line: 86, type: !10214, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !10260)
!10260 = !{!10261, !10262, !10263, !10264, !10265}
!10261 = !DILocalVariable(name: "func", arg: 1, scope: !10259, file: !2569, line: 86, type: !2203)
!10262 = !DILocalVariable(name: "line", arg: 2, scope: !10259, file: !2569, line: 86, type: !7)
!10263 = !DILocalVariable(name: "message", arg: 3, scope: !10259, file: !2569, line: 86, type: !2203)
!10264 = !DILocalVariable(name: "ap", scope: !10259, file: !2569, line: 88, type: !10221)
!10265 = !DILocalVariable(name: "mask", scope: !10259, file: !2569, line: 90, type: !61)
!10266 = !DILocation(line: 0, scope: !10259)
!10267 = !DILocation(line: 88, column: 5, scope: !10259)
!10268 = !DILocation(line: 88, column: 13, scope: !10259)
!10269 = !DILocation(line: 90, column: 5, scope: !10259)
!10270 = !DILocation(line: 91, column: 5, scope: !10259)
!10271 = !DILocation(line: 93, column: 5, scope: !10259)
!10272 = !DILocation(line: 94, column: 5, scope: !10259)
!10273 = !DILocation(line: 95, column: 5, scope: !10259)
!10274 = !DILocation(line: 97, column: 37, scope: !10259)
!10275 = !DILocation(line: 97, column: 5, scope: !10259)
!10276 = !DILocation(line: 99, column: 1, scope: !10259)
!10277 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2569, file: !2569, line: 101, type: !10278, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !10282)
!10278 = !DISubroutineType(types: !10279)
!10279 = !{null, !2203, !7, !2203, !10280, !7, null}
!10280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10281, size: 32)
!10281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!10282 = !{!10283, !10284, !10285, !10286, !10287}
!10283 = !DILocalVariable(name: "func", arg: 1, scope: !10277, file: !2569, line: 101, type: !2203)
!10284 = !DILocalVariable(name: "line", arg: 2, scope: !10277, file: !2569, line: 101, type: !7)
!10285 = !DILocalVariable(name: "message", arg: 3, scope: !10277, file: !2569, line: 101, type: !2203)
!10286 = !DILocalVariable(name: "data", arg: 4, scope: !10277, file: !2569, line: 101, type: !10280)
!10287 = !DILocalVariable(name: "length", arg: 5, scope: !10277, file: !2569, line: 101, type: !7)
!10288 = !DILocation(line: 0, scope: !10277)
!10289 = !DILocation(line: 103, column: 1, scope: !10277)
!10290 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !1987, file: !1987, line: 87, type: !3519, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !10291)
!10291 = !{!10292, !10293}
!10292 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10290, file: !1987, line: 87, type: !61)
!10293 = !DILocalVariable(name: "value", scope: !10290, file: !1987, line: 89, type: !61)
!10294 = !DILocation(line: 0, scope: !10290)
!10295 = !DILocation(line: 91, column: 41, scope: !10290)
!10296 = !DILocation(line: 91, column: 5, scope: !10290)
!10297 = !DILocation(line: 91, column: 19, scope: !10290)
!10298 = !DILocation(line: 91, column: 31, scope: !10290)
!10299 = !DILocation(line: 92, column: 77, scope: !10290)
!10300 = !DILocation(line: 92, column: 60, scope: !10290)
!10301 = !DILocation(line: 92, column: 31, scope: !10290)
!10302 = !DILocation(line: 94, column: 5, scope: !10290)
!10303 = !DILocation(line: 94, column: 27, scope: !10290)
!10304 = !DILocation(line: 94, column: 39, scope: !10290)
!10305 = !DILocation(line: 94, column: 65, scope: !10290)
!10306 = distinct !{!10306, !10302, !10307}
!10307 = !DILocation(line: 94, column: 70, scope: !10290)
!10308 = !DILocation(line: 96, column: 29, scope: !10290)
!10309 = !DILocation(line: 96, column: 64, scope: !10290)
!10310 = !DILocation(line: 98, column: 5, scope: !10290)
!10311 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !1987, file: !1987, line: 102, type: !10312, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !10314)
!10312 = !DISubroutineType(types: !10313)
!10313 = !{null, !61, !61}
!10314 = !{!10315, !10316}
!10315 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10311, file: !1987, line: 102, type: !61)
!10316 = !DILocalVariable(name: "value", arg: 2, scope: !10311, file: !1987, line: 102, type: !61)
!10317 = !DILocation(line: 0, scope: !10311)
!10318 = !DILocation(line: 106, column: 40, scope: !10311)
!10319 = !DILocation(line: 106, column: 77, scope: !10311)
!10320 = !DILocation(line: 106, column: 102, scope: !10311)
!10321 = !DILocation(line: 106, column: 5, scope: !10311)
!10322 = !DILocation(line: 106, column: 19, scope: !10311)
!10323 = !DILocation(line: 106, column: 31, scope: !10311)
!10324 = !DILocation(line: 107, column: 77, scope: !10311)
!10325 = !DILocation(line: 107, column: 60, scope: !10311)
!10326 = !DILocation(line: 107, column: 31, scope: !10311)
!10327 = !DILocation(line: 109, column: 5, scope: !10311)
!10328 = !DILocation(line: 109, column: 27, scope: !10311)
!10329 = !DILocation(line: 109, column: 39, scope: !10311)
!10330 = !DILocation(line: 109, column: 65, scope: !10311)
!10331 = distinct !{!10331, !10327, !10332}
!10332 = !DILocation(line: 109, column: 70, scope: !10311)
!10333 = !DILocation(line: 111, column: 5, scope: !10311)
!10334 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !1987, file: !1987, line: 114, type: !291, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !293)
!10335 = !DILocation(line: 117, column: 36, scope: !10334)
!10336 = !DILocation(line: 117, column: 18, scope: !10334)
!10337 = !DILocation(line: 118, column: 37, scope: !10334)
!10338 = !DILocation(line: 118, column: 18, scope: !10334)
!10339 = !DILocation(line: 119, column: 37, scope: !10334)
!10340 = !DILocation(line: 119, column: 19, scope: !10334)
!10341 = !DILocation(line: 120, column: 37, scope: !10334)
!10342 = !DILocation(line: 120, column: 19, scope: !10334)
!10343 = !DILocation(line: 121, column: 37, scope: !10334)
!10344 = !DILocation(line: 121, column: 19, scope: !10334)
!10345 = !DILocation(line: 122, column: 37, scope: !10334)
!10346 = !DILocation(line: 122, column: 19, scope: !10334)
!10347 = !DILocation(line: 123, column: 37, scope: !10334)
!10348 = !DILocation(line: 123, column: 19, scope: !10334)
!10349 = !DILocation(line: 125, column: 37, scope: !10334)
!10350 = !DILocation(line: 125, column: 19, scope: !10334)
!10351 = !DILocation(line: 126, column: 37, scope: !10334)
!10352 = !DILocation(line: 126, column: 19, scope: !10334)
!10353 = !DILocation(line: 127, column: 37, scope: !10334)
!10354 = !DILocation(line: 127, column: 19, scope: !10334)
!10355 = !DILocation(line: 128, column: 37, scope: !10334)
!10356 = !DILocation(line: 128, column: 19, scope: !10334)
!10357 = !DILocation(line: 130, column: 36, scope: !10334)
!10358 = !DILocation(line: 130, column: 18, scope: !10334)
!10359 = !DILocation(line: 131, column: 36, scope: !10334)
!10360 = !DILocation(line: 131, column: 18, scope: !10334)
!10361 = !DILocation(line: 133, column: 5, scope: !10334)
!10362 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !1987, file: !1987, line: 140, type: !10363, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !293)
!10363 = !DISubroutineType(types: !10364)
!10364 = !{!7}
!10365 = !DILocation(line: 144, column: 5, scope: !10362)
!10366 = !DILocation(line: 144, column: 19, scope: !10362)
!10367 = !DILocation(line: 144, column: 28, scope: !10362)
!10368 = !DILocation(line: 147, column: 19, scope: !10362)
!10369 = !DILocation(line: 147, column: 28, scope: !10362)
!10370 = !DILocation(line: 150, column: 19, scope: !10362)
!10371 = !DILocation(line: 150, column: 28, scope: !10362)
!10372 = !DILocation(line: 152, column: 5, scope: !10362)
!10373 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !1987, file: !1987, line: 157, type: !7135, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !10374)
!10374 = !{!10375, !10376, !10377, !10378, !10379, !10380}
!10375 = !DILocalVariable(name: "mbist_src", scope: !10373, file: !1987, line: 159, type: !61)
!10376 = !DILocalVariable(name: "mbist_len", scope: !10373, file: !1987, line: 159, type: !61)
!10377 = !DILocalVariable(name: "mbist_data", scope: !10373, file: !1987, line: 159, type: !3492)
!10378 = !DILocalVariable(name: "i", scope: !10373, file: !1987, line: 160, type: !61)
!10379 = !DILocalVariable(name: "bist_data_inv", scope: !10373, file: !1987, line: 160, type: !61)
!10380 = !DILocalVariable(name: "bist_data_random", scope: !10373, file: !1987, line: 160, type: !61)
!10381 = !DILocation(line: 159, column: 36, scope: !10373)
!10382 = !DILocation(line: 0, scope: !10373)
!10383 = !DILocation(line: 165, column: 5, scope: !10373)
!10384 = !DILocation(line: 165, column: 19, scope: !10373)
!10385 = !DILocation(line: 165, column: 30, scope: !10373)
!10386 = !DILocation(line: 166, column: 5, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10373, file: !1987, line: 166, column: 5)
!10388 = !DILocation(line: 167, column: 9, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10390, file: !1987, line: 167, column: 9)
!10390 = distinct !DILexicalBlock(scope: !10391, file: !1987, line: 166, column: 66)
!10391 = distinct !DILexicalBlock(scope: !10387, file: !1987, line: 166, column: 5)
!10392 = !DILocation(line: 168, column: 13, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10394, file: !1987, line: 168, column: 13)
!10394 = distinct !DILexicalBlock(scope: !10395, file: !1987, line: 167, column: 34)
!10395 = distinct !DILexicalBlock(scope: !10389, file: !1987, line: 167, column: 9)
!10396 = !DILocation(line: 168, column: 57, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10393, file: !1987, line: 168, column: 13)
!10398 = distinct !{!10398, !10392, !10399}
!10399 = !DILocation(line: 183, column: 13, scope: !10393)
!10400 = !DILocation(line: 170, column: 42, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10397, file: !1987, line: 168, column: 83)
!10402 = !DILocation(line: 172, column: 42, scope: !10401)
!10403 = !DILocation(line: 174, column: 45, scope: !10401)
!10404 = !DILocation(line: 174, column: 59, scope: !10401)
!10405 = !DILocation(line: 174, column: 154, scope: !10401)
!10406 = !DILocation(line: 174, column: 87, scope: !10401)
!10407 = !DILocation(line: 174, column: 134, scope: !10401)
!10408 = !DILocation(line: 174, column: 42, scope: !10401)
!10409 = !DILocation(line: 175, column: 42, scope: !10401)
!10410 = !DILocation(line: 177, column: 17, scope: !10401)
!10411 = !DILocation(line: 177, column: 39, scope: !10401)
!10412 = !DILocation(line: 177, column: 50, scope: !10401)
!10413 = !DILocation(line: 177, column: 71, scope: !10401)
!10414 = distinct !{!10414, !10410, !10415}
!10415 = !DILocation(line: 177, column: 78, scope: !10401)
!10416 = !DILocation(line: 179, column: 36, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10401, file: !1987, line: 179, column: 21)
!10418 = !DILocation(line: 179, column: 47, scope: !10417)
!10419 = !DILocation(line: 179, column: 69, scope: !10417)
!10420 = !DILocation(line: 168, column: 79, scope: !10397)
!10421 = !DILocation(line: 179, column: 21, scope: !10401)
!10422 = !DILocation(line: 167, column: 30, scope: !10395)
!10423 = !DILocation(line: 167, column: 23, scope: !10395)
!10424 = distinct !{!10424, !10388, !10425}
!10425 = !DILocation(line: 184, column: 9, scope: !10389)
!10426 = !DILocation(line: 166, column: 62, scope: !10391)
!10427 = !DILocation(line: 166, column: 43, scope: !10391)
!10428 = distinct !{!10428, !10386, !10429}
!10429 = !DILocation(line: 185, column: 5, scope: !10387)
!10430 = !DILocation(line: 189, column: 1, scope: !10373)
!10431 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !1987, file: !1987, line: 190, type: !7135, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !293)
!10432 = !DILocation(line: 192, column: 9, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10431, file: !1987, line: 192, column: 9)
!10434 = !DILocation(line: 192, column: 26, scope: !10433)
!10435 = !DILocation(line: 0, scope: !10431)
!10436 = !DILocation(line: 197, column: 1, scope: !10431)
!10437 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !1987, file: !1987, line: 201, type: !291, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !10438)
!10438 = !{!10439, !10440}
!10439 = !DILocalVariable(name: "dqy_in_del", scope: !10437, file: !1987, line: 203, type: !940)
!10440 = !DILocalVariable(name: "dqs_in_del", scope: !10437, file: !1987, line: 204, type: !940)
!10441 = !DILocation(line: 0, scope: !10437)
!10442 = !DILocation(line: 206, column: 5, scope: !10437)
!10443 = !DILocation(line: 206, column: 19, scope: !10437)
!10444 = !DILocation(line: 206, column: 28, scope: !10437)
!10445 = !DILocation(line: 207, column: 19, scope: !10437)
!10446 = !DILocation(line: 207, column: 28, scope: !10437)
!10447 = !DILocation(line: 208, column: 19, scope: !10437)
!10448 = !DILocation(line: 208, column: 28, scope: !10437)
!10449 = !DILocation(line: 209, column: 19, scope: !10437)
!10450 = !DILocation(line: 209, column: 28, scope: !10437)
!10451 = !DILocation(line: 212, column: 23, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10453, file: !1987, line: 211, column: 78)
!10453 = distinct !DILexicalBlock(scope: !10454, file: !1987, line: 211, column: 5)
!10454 = distinct !DILexicalBlock(scope: !10437, file: !1987, line: 211, column: 5)
!10455 = !DILocation(line: 212, column: 32, scope: !10452)
!10456 = !DILocation(line: 213, column: 23, scope: !10452)
!10457 = !DILocation(line: 213, column: 32, scope: !10452)
!10458 = !DILocation(line: 215, column: 19, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10452, file: !1987, line: 215, column: 13)
!10460 = !DILocation(line: 215, column: 15, scope: !10459)
!10461 = !DILocation(line: 215, column: 13, scope: !10452)
!10462 = !DILocation(line: 211, column: 40, scope: !10453)
!10463 = !DILocation(line: 211, column: 5, scope: !10454)
!10464 = distinct !{!10464, !10463, !10465}
!10465 = !DILocation(line: 218, column: 5, scope: !10454)
!10466 = !DILocation(line: 211, column: 57, scope: !10453)
!10467 = !DILocation(line: 212, column: 9, scope: !10452)
!10468 = !DILocation(line: 212, column: 45, scope: !10452)
!10469 = !DILocation(line: 212, column: 83, scope: !10452)
!10470 = !DILocation(line: 212, column: 121, scope: !10452)
!10471 = !DILocation(line: 212, column: 70, scope: !10452)
!10472 = !DILocation(line: 212, column: 108, scope: !10452)
!10473 = !DILocation(line: 212, column: 146, scope: !10452)
!10474 = !DILocation(line: 222, column: 49, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10476, file: !1987, line: 221, column: 84)
!10476 = distinct !DILexicalBlock(scope: !10477, file: !1987, line: 221, column: 9)
!10477 = distinct !DILexicalBlock(scope: !10478, file: !1987, line: 221, column: 9)
!10478 = distinct !DILexicalBlock(scope: !10479, file: !1987, line: 220, column: 25)
!10479 = distinct !DILexicalBlock(scope: !10437, file: !1987, line: 220, column: 9)
!10480 = !DILocation(line: 222, column: 13, scope: !10475)
!10481 = !DILocation(line: 222, column: 27, scope: !10475)
!10482 = !DILocation(line: 222, column: 36, scope: !10475)
!10483 = !DILocation(line: 224, column: 23, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10475, file: !1987, line: 224, column: 17)
!10485 = !DILocation(line: 224, column: 19, scope: !10484)
!10486 = !DILocation(line: 224, column: 17, scope: !10475)
!10487 = distinct !{!10487, !10488, !10489}
!10488 = !DILocation(line: 221, column: 9, scope: !10477)
!10489 = !DILocation(line: 227, column: 9, scope: !10477)
!10490 = !DILocation(line: 230, column: 1, scope: !10437)
!10491 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !1987, file: !1987, line: 253, type: !291, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !293)
!10492 = !DILocation(line: 257, column: 26, scope: !10491)
!10493 = !DILocation(line: 259, column: 5, scope: !10491)
!10494 = !DILocation(line: 259, column: 19, scope: !10491)
!10495 = !DILocation(line: 259, column: 29, scope: !10491)
!10496 = !DILocation(line: 260, column: 5, scope: !10491)
!10497 = !DILocation(line: 260, column: 27, scope: !10491)
!10498 = !DILocation(line: 260, column: 93, scope: !10491)
!10499 = distinct !{!10499, !10496, !10500}
!10500 = !DILocation(line: 260, column: 98, scope: !10491)
!10501 = !DILocation(line: 261, column: 29, scope: !10491)
!10502 = !DILocation(line: 262, column: 5, scope: !10491)
!10503 = !DILocation(line: 262, column: 27, scope: !10491)
!10504 = !DILocation(line: 262, column: 93, scope: !10491)
!10505 = distinct !{!10505, !10502, !10506}
!10506 = !DILocation(line: 262, column: 98, scope: !10491)
!10507 = !DILocation(line: 264, column: 42, scope: !10491)
!10508 = !DILocation(line: 265, column: 48, scope: !10491)
!10509 = !DILocation(line: 267, column: 5, scope: !10491)
!10510 = !DILocation(line: 267, column: 27, scope: !10491)
!10511 = !DILocation(line: 267, column: 39, scope: !10491)
!10512 = !DILocation(line: 267, column: 65, scope: !10491)
!10513 = distinct !{!10513, !10509, !10514}
!10514 = !DILocation(line: 267, column: 70, scope: !10491)
!10515 = !DILocation(line: 269, column: 5, scope: !10491)
!10516 = !DILocation(line: 273, column: 8, scope: !10491)
!10517 = !DILocation(line: 275, column: 5, scope: !10491)
!10518 = !DILocation(line: 275, column: 27, scope: !10491)
!10519 = !DILocation(line: 275, column: 39, scope: !10491)
!10520 = !DILocation(line: 275, column: 65, scope: !10491)
!10521 = distinct !{!10521, !10517, !10522}
!10522 = !DILocation(line: 275, column: 70, scope: !10491)
!10523 = !DILocation(line: 278, column: 9, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10491, file: !1987, line: 278, column: 9)
!10525 = !DILocation(line: 278, column: 44, scope: !10524)
!10526 = !DILocation(line: 278, column: 9, scope: !10491)
!10527 = !DILocation(line: 279, column: 13, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10529, file: !1987, line: 279, column: 12)
!10529 = distinct !DILexicalBlock(scope: !10524, file: !1987, line: 278, column: 55)
!10530 = !DILocation(line: 279, column: 48, scope: !10528)
!10531 = !DILocation(line: 279, column: 56, scope: !10528)
!10532 = !DILocation(line: 0, scope: !10528)
!10533 = !DILocation(line: 288, column: 1, scope: !10491)
!10534 = distinct !DISubprogram(name: "custom_setEMI", scope: !1987, file: !1987, line: 294, type: !10535, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !293)
!10535 = !DISubroutineType(types: !10536)
!10536 = !{!1254}
!10537 = !DILocation(line: 298, column: 5, scope: !10534)
!10538 = !DILocation(line: 300, column: 5, scope: !10534)
!10539 = !DILocation(line: 302, column: 20, scope: !10534)
!10540 = !DILocation(line: 302, column: 18, scope: !10534)
!10541 = !DILocation(line: 303, column: 20, scope: !10534)
!10542 = !DILocation(line: 303, column: 18, scope: !10534)
!10543 = !DILocation(line: 304, column: 20, scope: !10534)
!10544 = !DILocation(line: 304, column: 18, scope: !10534)
!10545 = !DILocation(line: 307, column: 5, scope: !10534)
!10546 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !1987, file: !1987, line: 312, type: !10535, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !293)
!10547 = !DILocation(line: 319, column: 29, scope: !10546)
!10548 = !DILocation(line: 319, column: 5, scope: !10546)
!10549 = !DILocation(line: 319, column: 19, scope: !10546)
!10550 = !DILocation(line: 319, column: 27, scope: !10546)
!10551 = !DILocation(line: 320, column: 29, scope: !10546)
!10552 = !DILocation(line: 320, column: 19, scope: !10546)
!10553 = !DILocation(line: 320, column: 27, scope: !10546)
!10554 = !DILocation(line: 322, column: 30, scope: !10546)
!10555 = !DILocation(line: 322, column: 19, scope: !10546)
!10556 = !DILocation(line: 322, column: 28, scope: !10546)
!10557 = !DILocation(line: 324, column: 30, scope: !10546)
!10558 = !DILocation(line: 324, column: 19, scope: !10546)
!10559 = !DILocation(line: 324, column: 28, scope: !10546)
!10560 = !DILocation(line: 326, column: 31, scope: !10546)
!10561 = !DILocation(line: 326, column: 19, scope: !10546)
!10562 = !DILocation(line: 326, column: 29, scope: !10546)
!10563 = !DILocation(line: 327, column: 31, scope: !10546)
!10564 = !DILocation(line: 327, column: 19, scope: !10546)
!10565 = !DILocation(line: 327, column: 29, scope: !10546)
!10566 = !DILocation(line: 332, column: 30, scope: !10546)
!10567 = !DILocation(line: 332, column: 19, scope: !10546)
!10568 = !DILocation(line: 332, column: 28, scope: !10546)
!10569 = !DILocation(line: 333, column: 30, scope: !10546)
!10570 = !DILocation(line: 333, column: 19, scope: !10546)
!10571 = !DILocation(line: 333, column: 28, scope: !10546)
!10572 = !DILocation(line: 334, column: 30, scope: !10546)
!10573 = !DILocation(line: 334, column: 19, scope: !10546)
!10574 = !DILocation(line: 334, column: 28, scope: !10546)
!10575 = !DILocation(line: 336, column: 30, scope: !10546)
!10576 = !DILocation(line: 336, column: 19, scope: !10546)
!10577 = !DILocation(line: 336, column: 28, scope: !10546)
!10578 = !DILocation(line: 337, column: 30, scope: !10546)
!10579 = !DILocation(line: 337, column: 19, scope: !10546)
!10580 = !DILocation(line: 337, column: 28, scope: !10546)
!10581 = !DILocation(line: 338, column: 30, scope: !10546)
!10582 = !DILocation(line: 338, column: 19, scope: !10546)
!10583 = !DILocation(line: 338, column: 28, scope: !10546)
!10584 = !DILocation(line: 339, column: 30, scope: !10546)
!10585 = !DILocation(line: 339, column: 19, scope: !10546)
!10586 = !DILocation(line: 339, column: 28, scope: !10546)
!10587 = !DILocation(line: 341, column: 5, scope: !10546)
!10588 = !DILocation(line: 345, column: 5, scope: !10546)
!10589 = !DILocation(line: 345, column: 19, scope: !10546)
!10590 = !DILocation(line: 345, column: 28, scope: !10546)
!10591 = !DILocation(line: 346, column: 5, scope: !10546)
!10592 = !DILocation(line: 346, column: 28, scope: !10546)
!10593 = !DILocation(line: 346, column: 82, scope: !10546)
!10594 = distinct !{!10594, !10591, !10595}
!10595 = !DILocation(line: 346, column: 87, scope: !10546)
!10596 = !DILocation(line: 347, column: 28, scope: !10546)
!10597 = !DILocation(line: 348, column: 5, scope: !10546)
!10598 = !DILocation(line: 348, column: 28, scope: !10546)
!10599 = !DILocation(line: 348, column: 82, scope: !10546)
!10600 = distinct !{!10600, !10597, !10601}
!10601 = !DILocation(line: 348, column: 87, scope: !10546)
!10602 = !DILocation(line: 349, column: 28, scope: !10546)
!10603 = !DILocation(line: 351, column: 5, scope: !10546)
!10604 = !DILocation(line: 353, column: 5, scope: !10546)
!10605 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !1987, file: !1987, line: 358, type: !291, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !293)
!10606 = !DILocation(line: 361, column: 36, scope: !10605)
!10607 = !DILocation(line: 361, column: 50, scope: !10605)
!10608 = !DILocation(line: 361, column: 34, scope: !10605)
!10609 = !DILocation(line: 362, column: 50, scope: !10605)
!10610 = !DILocation(line: 362, column: 34, scope: !10605)
!10611 = !DILocation(line: 363, column: 50, scope: !10605)
!10612 = !DILocation(line: 363, column: 34, scope: !10605)
!10613 = !DILocation(line: 364, column: 50, scope: !10605)
!10614 = !DILocation(line: 364, column: 34, scope: !10605)
!10615 = !DILocation(line: 365, column: 50, scope: !10605)
!10616 = !DILocation(line: 365, column: 34, scope: !10605)
!10617 = !DILocation(line: 366, column: 50, scope: !10605)
!10618 = !DILocation(line: 366, column: 34, scope: !10605)
!10619 = !DILocation(line: 367, column: 50, scope: !10605)
!10620 = !DILocation(line: 367, column: 34, scope: !10605)
!10621 = !DILocation(line: 368, column: 50, scope: !10605)
!10622 = !DILocation(line: 368, column: 34, scope: !10605)
!10623 = !DILocation(line: 369, column: 50, scope: !10605)
!10624 = !DILocation(line: 369, column: 34, scope: !10605)
!10625 = !DILocation(line: 370, column: 50, scope: !10605)
!10626 = !DILocation(line: 370, column: 34, scope: !10605)
!10627 = !DILocation(line: 371, column: 50, scope: !10605)
!10628 = !DILocation(line: 371, column: 34, scope: !10605)
!10629 = !DILocation(line: 372, column: 50, scope: !10605)
!10630 = !DILocation(line: 372, column: 34, scope: !10605)
!10631 = !DILocation(line: 373, column: 51, scope: !10605)
!10632 = !DILocation(line: 373, column: 35, scope: !10605)
!10633 = !DILocation(line: 374, column: 51, scope: !10605)
!10634 = !DILocation(line: 374, column: 35, scope: !10605)
!10635 = !DILocation(line: 375, column: 50, scope: !10605)
!10636 = !DILocation(line: 375, column: 34, scope: !10605)
!10637 = !DILocation(line: 376, column: 50, scope: !10605)
!10638 = !DILocation(line: 376, column: 34, scope: !10605)
!10639 = !DILocation(line: 377, column: 50, scope: !10605)
!10640 = !DILocation(line: 377, column: 34, scope: !10605)
!10641 = !DILocation(line: 378, column: 50, scope: !10605)
!10642 = !DILocation(line: 378, column: 34, scope: !10605)
!10643 = !DILocation(line: 379, column: 50, scope: !10605)
!10644 = !DILocation(line: 379, column: 34, scope: !10605)
!10645 = !DILocation(line: 380, column: 50, scope: !10605)
!10646 = !DILocation(line: 380, column: 34, scope: !10605)
!10647 = !DILocation(line: 382, column: 1, scope: !10605)
!10648 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !1987, file: !1987, line: 384, type: !291, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !293)
!10649 = !DILocation(line: 387, column: 5, scope: !10648)
!10650 = !DILocation(line: 387, column: 27, scope: !10648)
!10651 = !DILocation(line: 387, column: 36, scope: !10648)
!10652 = !DILocation(line: 387, column: 76, scope: !10648)
!10653 = distinct !{!10653, !10649, !10654}
!10654 = !DILocation(line: 387, column: 84, scope: !10648)
!10655 = !DILocation(line: 388, column: 50, scope: !10648)
!10656 = !DILocation(line: 388, column: 19, scope: !10648)
!10657 = !DILocation(line: 388, column: 28, scope: !10648)
!10658 = !DILocation(line: 389, column: 50, scope: !10648)
!10659 = !DILocation(line: 389, column: 19, scope: !10648)
!10660 = !DILocation(line: 389, column: 28, scope: !10648)
!10661 = !DILocation(line: 390, column: 50, scope: !10648)
!10662 = !DILocation(line: 390, column: 19, scope: !10648)
!10663 = !DILocation(line: 390, column: 28, scope: !10648)
!10664 = !DILocation(line: 391, column: 50, scope: !10648)
!10665 = !DILocation(line: 391, column: 19, scope: !10648)
!10666 = !DILocation(line: 391, column: 28, scope: !10648)
!10667 = !DILocation(line: 392, column: 50, scope: !10648)
!10668 = !DILocation(line: 392, column: 19, scope: !10648)
!10669 = !DILocation(line: 392, column: 28, scope: !10648)
!10670 = !DILocation(line: 393, column: 50, scope: !10648)
!10671 = !DILocation(line: 393, column: 19, scope: !10648)
!10672 = !DILocation(line: 393, column: 28, scope: !10648)
!10673 = !DILocation(line: 394, column: 51, scope: !10648)
!10674 = !DILocation(line: 394, column: 19, scope: !10648)
!10675 = !DILocation(line: 394, column: 29, scope: !10648)
!10676 = !DILocation(line: 395, column: 51, scope: !10648)
!10677 = !DILocation(line: 395, column: 19, scope: !10648)
!10678 = !DILocation(line: 395, column: 29, scope: !10648)
!10679 = !DILocation(line: 396, column: 50, scope: !10648)
!10680 = !DILocation(line: 396, column: 19, scope: !10648)
!10681 = !DILocation(line: 396, column: 28, scope: !10648)
!10682 = !DILocation(line: 397, column: 50, scope: !10648)
!10683 = !DILocation(line: 397, column: 19, scope: !10648)
!10684 = !DILocation(line: 397, column: 28, scope: !10648)
!10685 = !DILocation(line: 398, column: 50, scope: !10648)
!10686 = !DILocation(line: 398, column: 19, scope: !10648)
!10687 = !DILocation(line: 398, column: 28, scope: !10648)
!10688 = !DILocation(line: 399, column: 50, scope: !10648)
!10689 = !DILocation(line: 399, column: 19, scope: !10648)
!10690 = !DILocation(line: 399, column: 28, scope: !10648)
!10691 = !DILocation(line: 400, column: 50, scope: !10648)
!10692 = !DILocation(line: 400, column: 19, scope: !10648)
!10693 = !DILocation(line: 400, column: 28, scope: !10648)
!10694 = !DILocation(line: 401, column: 50, scope: !10648)
!10695 = !DILocation(line: 401, column: 19, scope: !10648)
!10696 = !DILocation(line: 401, column: 28, scope: !10648)
!10697 = !DILocation(line: 402, column: 50, scope: !10648)
!10698 = !DILocation(line: 402, column: 19, scope: !10648)
!10699 = !DILocation(line: 402, column: 28, scope: !10648)
!10700 = !DILocation(line: 403, column: 50, scope: !10648)
!10701 = !DILocation(line: 403, column: 19, scope: !10648)
!10702 = !DILocation(line: 403, column: 28, scope: !10648)
!10703 = !DILocation(line: 404, column: 50, scope: !10648)
!10704 = !DILocation(line: 404, column: 19, scope: !10648)
!10705 = !DILocation(line: 404, column: 28, scope: !10648)
!10706 = !DILocation(line: 405, column: 50, scope: !10648)
!10707 = !DILocation(line: 405, column: 19, scope: !10648)
!10708 = !DILocation(line: 405, column: 28, scope: !10648)
!10709 = !DILocation(line: 406, column: 50, scope: !10648)
!10710 = !DILocation(line: 406, column: 19, scope: !10648)
!10711 = !DILocation(line: 406, column: 28, scope: !10648)
!10712 = !DILocation(line: 408, column: 1, scope: !10648)
!10713 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !1987, file: !1987, line: 410, type: !291, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !293)
!10714 = !DILocation(line: 413, column: 29, scope: !10713)
!10715 = !DILocation(line: 413, column: 43, scope: !10713)
!10716 = !DILocation(line: 413, column: 51, scope: !10713)
!10717 = !DILocation(line: 413, column: 27, scope: !10713)
!10718 = !DILocation(line: 416, column: 19, scope: !10713)
!10719 = !DILocation(line: 416, column: 29, scope: !10713)
!10720 = !DILocation(line: 417, column: 5, scope: !10713)
!10721 = !DILocation(line: 417, column: 27, scope: !10713)
!10722 = !DILocation(line: 417, column: 93, scope: !10713)
!10723 = distinct !{!10723, !10720, !10724}
!10724 = !DILocation(line: 417, column: 98, scope: !10713)
!10725 = !DILocation(line: 418, column: 29, scope: !10713)
!10726 = !DILocation(line: 419, column: 5, scope: !10713)
!10727 = !DILocation(line: 419, column: 27, scope: !10713)
!10728 = !DILocation(line: 419, column: 93, scope: !10713)
!10729 = distinct !{!10729, !10726, !10730}
!10730 = !DILocation(line: 419, column: 98, scope: !10713)
!10731 = !DILocation(line: 421, column: 5, scope: !10713)
!10732 = !DILocation(line: 422, column: 5, scope: !10713)
!10733 = !DILocation(line: 422, column: 19, scope: !10713)
!10734 = !DILocation(line: 422, column: 28, scope: !10713)
!10735 = !DILocation(line: 423, column: 5, scope: !10713)
!10736 = !DILocation(line: 423, column: 28, scope: !10713)
!10737 = !DILocation(line: 423, column: 82, scope: !10713)
!10738 = distinct !{!10738, !10735, !10739}
!10739 = !DILocation(line: 423, column: 87, scope: !10713)
!10740 = !DILocation(line: 424, column: 28, scope: !10713)
!10741 = !DILocation(line: 425, column: 5, scope: !10713)
!10742 = !DILocation(line: 425, column: 28, scope: !10713)
!10743 = !DILocation(line: 425, column: 82, scope: !10713)
!10744 = distinct !{!10744, !10741, !10745}
!10745 = !DILocation(line: 425, column: 87, scope: !10713)
!10746 = !DILocation(line: 426, column: 28, scope: !10713)
!10747 = !DILocation(line: 428, column: 50, scope: !10713)
!10748 = !DILocation(line: 428, column: 19, scope: !10713)
!10749 = !DILocation(line: 428, column: 28, scope: !10713)
!10750 = !DILocation(line: 432, column: 1, scope: !10713)
!10751 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !1987, file: !1987, line: 434, type: !291, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !293)
!10752 = !DILocation(line: 437, column: 5, scope: !10751)
!10753 = !DILocation(line: 440, column: 5, scope: !10751)
!10754 = !DILocation(line: 440, column: 27, scope: !10751)
!10755 = !DILocation(line: 440, column: 36, scope: !10751)
!10756 = !DILocation(line: 440, column: 76, scope: !10751)
!10757 = distinct !{!10757, !10753, !10758}
!10758 = !DILocation(line: 440, column: 84, scope: !10751)
!10759 = !DILocation(line: 441, column: 45, scope: !10751)
!10760 = !DILocation(line: 441, column: 54, scope: !10751)
!10761 = !DILocation(line: 441, column: 28, scope: !10751)
!10762 = !DILocation(line: 442, column: 19, scope: !10751)
!10763 = !DILocation(line: 442, column: 31, scope: !10751)
!10764 = !DILocation(line: 443, column: 5, scope: !10751)
!10765 = !DILocation(line: 443, column: 27, scope: !10751)
!10766 = !DILocation(line: 443, column: 39, scope: !10751)
!10767 = !DILocation(line: 443, column: 65, scope: !10751)
!10768 = distinct !{!10768, !10764, !10769}
!10769 = !DILocation(line: 443, column: 70, scope: !10751)
!10770 = !DILocation(line: 444, column: 19, scope: !10751)
!10771 = !DILocation(line: 444, column: 28, scope: !10751)
!10772 = !DILocation(line: 445, column: 5, scope: !10751)
!10773 = !DILocation(line: 445, column: 27, scope: !10751)
!10774 = !DILocation(line: 445, column: 91, scope: !10751)
!10775 = distinct !{!10775, !10772, !10776}
!10776 = !DILocation(line: 445, column: 96, scope: !10751)
!10777 = !DILocation(line: 447, column: 43, scope: !10751)
!10778 = !DILocation(line: 447, column: 51, scope: !10751)
!10779 = !DILocation(line: 447, column: 27, scope: !10751)
!10780 = !DILocation(line: 450, column: 1, scope: !10751)
!10781 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !1987, file: !1987, line: 452, type: !10782, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !10785)
!10782 = !DISubroutineType(types: !10783)
!10783 = !{!940, !10784}
!10784 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !1990, line: 43, baseType: !1989)
!10785 = !{!10786, !10787}
!10786 = !DILocalVariable(name: "clock", arg: 1, scope: !10781, file: !1987, line: 452, type: !10784)
!10787 = !DILocalVariable(name: "delay", scope: !10781, file: !1987, line: 457, type: !60)
!10788 = !DILocation(line: 0, scope: !10781)
!10789 = !DILocation(line: 457, column: 5, scope: !10781)
!10790 = !DILocation(line: 457, column: 23, scope: !10781)
!10791 = !DILocation(line: 458, column: 9, scope: !10781)
!10792 = !DILocation(line: 465, column: 9, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10794, file: !1987, line: 458, column: 39)
!10794 = distinct !DILexicalBlock(scope: !10781, file: !1987, line: 458, column: 9)
!10795 = !DILocation(line: 465, column: 23, scope: !10793)
!10796 = !DILocation(line: 465, column: 32, scope: !10793)
!10797 = !DILocation(line: 466, column: 32, scope: !10793)
!10798 = !DILocation(line: 467, column: 9, scope: !10793)
!10799 = !DILocation(line: 467, column: 32, scope: !10793)
!10800 = !DILocation(line: 467, column: 86, scope: !10793)
!10801 = distinct !{!10801, !10798, !10802}
!10802 = !DILocation(line: 467, column: 91, scope: !10793)
!10803 = !DILocation(line: 468, column: 32, scope: !10793)
!10804 = !DILocation(line: 469, column: 9, scope: !10793)
!10805 = !DILocation(line: 469, column: 32, scope: !10793)
!10806 = !DILocation(line: 469, column: 86, scope: !10793)
!10807 = distinct !{!10807, !10804, !10808}
!10808 = !DILocation(line: 469, column: 91, scope: !10793)
!10809 = !DILocation(line: 470, column: 32, scope: !10793)
!10810 = !DILocation(line: 472, column: 20, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10793, file: !1987, line: 472, column: 9)
!10812 = !DILocation(line: 472, column: 25, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10811, file: !1987, line: 472, column: 9)
!10814 = !DILocation(line: 472, column: 31, scope: !10813)
!10815 = !DILocation(line: 472, column: 9, scope: !10811)
!10816 = !DILocation(line: 472, column: 44, scope: !10813)
!10817 = distinct !{!10817, !10815, !10818}
!10818 = !DILocation(line: 472, column: 47, scope: !10811)
!10819 = !DILocation(line: 478, column: 9, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10821, file: !1987, line: 477, column: 12)
!10821 = distinct !DILexicalBlock(scope: !10794, file: !1987, line: 475, column: 16)
!10822 = !DILocation(line: 483, column: 1, scope: !10781)
!10823 = distinct !DISubprogram(name: "emi_mask_master", scope: !1987, file: !1987, line: 487, type: !291, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !293)
!10824 = !DILocation(line: 490, column: 30, scope: !10823)
!10825 = !DILocation(line: 490, column: 44, scope: !10823)
!10826 = !DILocation(line: 490, column: 53, scope: !10823)
!10827 = !DILocation(line: 490, column: 28, scope: !10823)
!10828 = !DILocation(line: 492, column: 1, scope: !10823)
!10829 = distinct !DISubprogram(name: "emi_unmask_master", scope: !1987, file: !1987, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1986, retainedNodes: !293)
!10830 = !DILocation(line: 497, column: 30, scope: !10829)
!10831 = !DILocation(line: 497, column: 44, scope: !10829)
!10832 = !DILocation(line: 497, column: 53, scope: !10829)
!10833 = !DILocation(line: 497, column: 28, scope: !10829)
!10834 = !DILocation(line: 500, column: 1, scope: !10829)
!10835 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2153, file: !2153, line: 56, type: !7616, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !293)
!10836 = !DILocation(line: 61, column: 5, scope: !10835)
!10837 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2153, file: !2153, line: 65, type: !7616, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !293)
!10838 = !DILocation(line: 70, column: 5, scope: !10837)
!10839 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2153, file: !2153, line: 74, type: !291, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !293)
!10840 = !DILocation(line: 79, column: 9, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10842, file: !2153, line: 78, column: 12)
!10842 = distinct !DILexicalBlock(scope: !10839, file: !2153, line: 76, column: 9)
!10843 = !DILocation(line: 81, column: 1, scope: !10839)
!10844 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2153, file: !2153, line: 83, type: !291, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !293)
!10845 = !DILocation(line: 88, column: 9, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10847, file: !2153, line: 87, column: 12)
!10847 = distinct !DILexicalBlock(scope: !10844, file: !2153, line: 85, column: 9)
!10848 = !DILocation(line: 90, column: 1, scope: !10844)
!10849 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2153, file: !2153, line: 92, type: !291, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !293)
!10850 = !DILocation(line: 97, column: 9, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10852, file: !2153, line: 96, column: 12)
!10852 = distinct !DILexicalBlock(scope: !10849, file: !2153, line: 94, column: 9)
!10853 = !DILocation(line: 99, column: 1, scope: !10849)
!10854 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2153, file: !2153, line: 101, type: !291, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2152, retainedNodes: !293)
!10855 = !DILocation(line: 106, column: 9, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !2153, line: 105, column: 12)
!10857 = distinct !DILexicalBlock(scope: !10854, file: !2153, line: 103, column: 9)
!10858 = !DILocation(line: 108, column: 1, scope: !10854)
!10859 = distinct !DISubprogram(name: "__io_putchar", scope: !2571, file: !2571, line: 52, type: !10860, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !10862)
!10860 = !DISubroutineType(types: !10861)
!10861 = !{!7, !7}
!10862 = !{!10863}
!10863 = !DILocalVariable(name: "ch", arg: 1, scope: !10859, file: !2571, line: 52, type: !7)
!10864 = !DILocation(line: 0, scope: !10859)
!10865 = !DILocation(line: 59, column: 35, scope: !10859)
!10866 = !DILocation(line: 59, column: 5, scope: !10859)
!10867 = !DILocation(line: 60, column: 5, scope: !10859)
!10868 = distinct !DISubprogram(name: "main", scope: !2571, file: !2571, line: 174, type: !10363, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !293)
!10869 = !DILocation(line: 177, column: 5, scope: !10868)
!10870 = !DILocation(line: 179, column: 5, scope: !10868)
!10871 = !DILocation(line: 182, column: 5, scope: !10868)
!10872 = !DILocation(line: 319, column: 3, scope: !10873, inlinedAt: !10874)
!10873 = distinct !DISubprogram(name: "__enable_irq", scope: !6227, file: !6227, line: 317, type: !291, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !293)
!10874 = distinct !DILocation(line: 185, column: 5, scope: !10868)
!10875 = !{i64 659782}
!10876 = !DILocation(line: 496, column: 3, scope: !10877, inlinedAt: !10878)
!10877 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !6227, file: !6227, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !293)
!10878 = distinct !DILocation(line: 186, column: 5, scope: !10868)
!10879 = !{i64 664057}
!10880 = !DILocation(line: 189, column: 5, scope: !10868)
!10881 = !DILocation(line: 190, column: 5, scope: !10868)
!10882 = !DILocation(line: 191, column: 5, scope: !10868)
!10883 = !DILocation(line: 193, column: 5, scope: !10868)
!10884 = !DILocation(line: 195, column: 5, scope: !10868)
!10885 = distinct !{!10885, !10884, !10886}
!10886 = !DILocation(line: 195, column: 14, scope: !10868)
!10887 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2571, file: !2571, line: 93, type: !291, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !293)
!10888 = !DILocation(line: 95, column: 5, scope: !10887)
!10889 = !DILocation(line: 96, column: 1, scope: !10887)
!10890 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2571, file: !2571, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !293)
!10891 = !DILocation(line: 106, column: 5, scope: !10890)
!10892 = !DILocation(line: 107, column: 5, scope: !10890)
!10893 = !DILocation(line: 108, column: 5, scope: !10890)
!10894 = !DILocation(line: 109, column: 1, scope: !10890)
!10895 = distinct !DISubprogram(name: "flash_sample", scope: !2571, file: !2571, line: 117, type: !291, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !10896)
!10896 = !{!10897, !10898, !10900, !10901, !10902}
!10897 = !DILocalVariable(name: "status", scope: !10895, file: !2571, line: 119, type: !1902)
!10898 = !DILocalVariable(name: "read_data", scope: !10895, file: !2571, line: 120, type: !10899)
!10899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18, size: 256, elements: !753)
!10900 = !DILocalVariable(name: "i", scope: !10895, file: !2571, line: 120, type: !18)
!10901 = !DILocalVariable(name: "flashTestAddress", scope: !10895, file: !2571, line: 121, type: !18)
!10902 = !DILocalVariable(name: "data", scope: !10895, file: !2571, line: 122, type: !10899)
!10903 = !DILocation(line: 120, column: 5, scope: !10895)
!10904 = !DILocation(line: 120, column: 18, scope: !10895)
!10905 = !DILocation(line: 0, scope: !10895)
!10906 = !DILocation(line: 122, column: 5, scope: !10895)
!10907 = !DILocation(line: 122, column: 18, scope: !10895)
!10908 = !DILocation(line: 124, column: 5, scope: !10895)
!10909 = !DILocation(line: 127, column: 14, scope: !10895)
!10910 = !DILocation(line: 129, column: 16, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10895, file: !2571, line: 129, column: 9)
!10912 = !DILocation(line: 129, column: 9, scope: !10895)
!10913 = !DILocation(line: 130, column: 9, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10911, file: !2571, line: 129, column: 40)
!10915 = !DILocation(line: 131, column: 9, scope: !10914)
!10916 = !DILocation(line: 138, column: 14, scope: !10895)
!10917 = !DILocation(line: 139, column: 16, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10895, file: !2571, line: 139, column: 9)
!10919 = !DILocation(line: 139, column: 9, scope: !10895)
!10920 = !DILocation(line: 140, column: 9, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10918, file: !2571, line: 139, column: 40)
!10922 = !DILocation(line: 141, column: 9, scope: !10921)
!10923 = !DILocation(line: 146, column: 5, scope: !10895)
!10924 = !DILocation(line: 149, column: 5, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10895, file: !2571, line: 149, column: 5)
!10926 = !DILocation(line: 149, column: 25, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10925, file: !2571, line: 149, column: 5)
!10928 = !DILocation(line: 149, column: 19, scope: !10927)
!10929 = distinct !{!10929, !10924, !10930}
!10930 = !DILocation(line: 155, column: 5, scope: !10925)
!10931 = !DILocation(line: 150, column: 13, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10933, file: !2571, line: 150, column: 13)
!10933 = distinct !DILexicalBlock(scope: !10927, file: !2571, line: 149, column: 29)
!10934 = !DILocation(line: 150, column: 29, scope: !10932)
!10935 = !DILocation(line: 150, column: 26, scope: !10932)
!10936 = !DILocation(line: 150, column: 13, scope: !10933)
!10937 = !DILocation(line: 151, column: 13, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10932, file: !2571, line: 150, column: 38)
!10939 = !DILocation(line: 153, column: 13, scope: !10938)
!10940 = !DILocation(line: 161, column: 9, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10942, file: !2571, line: 160, column: 12)
!10942 = distinct !DILexicalBlock(scope: !10895, file: !2571, line: 157, column: 9)
!10943 = !DILocation(line: 164, column: 9, scope: !10941)
!10944 = !DILocation(line: 168, column: 5, scope: !10895)
!10945 = !DILocation(line: 170, column: 5, scope: !10895)
!10946 = !DILocation(line: 171, column: 1, scope: !10895)
!10947 = distinct !DISubprogram(name: "log_uart_init", scope: !2571, file: !2571, line: 68, type: !291, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !10948)
!10948 = !{!10949}
!10949 = !DILocalVariable(name: "uart_config", scope: !10947, file: !2571, line: 70, type: !10950)
!10950 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !654, line: 378, baseType: !10951)
!10951 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 373, size: 128, elements: !10952)
!10952 = !{!10953, !10954, !10955, !10956}
!10953 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !10951, file: !654, line: 374, baseType: !4623, size: 32)
!10954 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !10951, file: !654, line: 375, baseType: !4673, size: 32, offset: 32)
!10955 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !10951, file: !654, line: 376, baseType: !4675, size: 32, offset: 64)
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10951, file: !654, line: 377, baseType: !4677, size: 32, offset: 96)
!10957 = !DILocation(line: 70, column: 5, scope: !10947)
!10958 = !DILocation(line: 70, column: 23, scope: !10947)
!10959 = !DILocation(line: 73, column: 5, scope: !10947)
!10960 = !DILocation(line: 74, column: 5, scope: !10947)
!10961 = !DILocation(line: 75, column: 5, scope: !10947)
!10962 = !DILocation(line: 76, column: 5, scope: !10947)
!10963 = !DILocation(line: 79, column: 17, scope: !10947)
!10964 = !DILocation(line: 79, column: 26, scope: !10947)
!10965 = !DILocation(line: 80, column: 17, scope: !10947)
!10966 = !DILocation(line: 80, column: 29, scope: !10947)
!10967 = !DILocation(line: 81, column: 17, scope: !10947)
!10968 = !DILocation(line: 81, column: 26, scope: !10947)
!10969 = !DILocation(line: 82, column: 17, scope: !10947)
!10970 = !DILocation(line: 82, column: 24, scope: !10947)
!10971 = !DILocation(line: 84, column: 5, scope: !10947)
!10972 = !DILocation(line: 85, column: 1, scope: !10947)
!10973 = distinct !DISubprogram(name: "_close", scope: !2165, file: !2165, line: 5, type: !10860, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !10974)
!10974 = !{!10975}
!10975 = !DILocalVariable(name: "file", arg: 1, scope: !10973, file: !2165, line: 5, type: !7)
!10976 = !DILocation(line: 0, scope: !10973)
!10977 = !DILocation(line: 7, column: 5, scope: !10973)
!10978 = distinct !DISubprogram(name: "_fstat", scope: !2165, file: !2165, line: 10, type: !10979, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !11027)
!10979 = !DISubroutineType(types: !10980)
!10980 = !{!7, !7, !10981}
!10981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10982, size: 32)
!10982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !10983, line: 27, size: 704, elements: !10984)
!10983 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!10984 = !{!10985, !10988, !10991, !10994, !10997, !11000, !11003, !11004, !11007, !11017, !11018, !11019, !11022, !11025}
!10985 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10982, file: !10983, line: 29, baseType: !10986, size: 16)
!10986 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2169, line: 161, baseType: !10987)
!10987 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2209, line: 56, baseType: !1440)
!10988 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10982, file: !10983, line: 30, baseType: !10989, size: 16, offset: 16)
!10989 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2169, line: 139, baseType: !10990)
!10990 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2209, line: 75, baseType: !1036)
!10991 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10982, file: !10983, line: 31, baseType: !10992, size: 32, offset: 32)
!10992 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2169, line: 189, baseType: !10993)
!10993 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2209, line: 90, baseType: !63)
!10994 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10982, file: !10983, line: 32, baseType: !10995, size: 16, offset: 64)
!10995 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2169, line: 194, baseType: !10996)
!10996 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2209, line: 209, baseType: !1036)
!10997 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10982, file: !10983, line: 33, baseType: !10998, size: 16, offset: 80)
!10998 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2169, line: 165, baseType: !10999)
!10999 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2209, line: 60, baseType: !1036)
!11000 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10982, file: !10983, line: 34, baseType: !11001, size: 16, offset: 96)
!11001 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2169, line: 169, baseType: !11002)
!11002 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2209, line: 63, baseType: !1036)
!11003 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10982, file: !10983, line: 35, baseType: !10986, size: 16, offset: 112)
!11004 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10982, file: !10983, line: 36, baseType: !11005, size: 32, offset: 128)
!11005 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2169, line: 157, baseType: !11006)
!11006 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2209, line: 102, baseType: !2225)
!11007 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10982, file: !10983, line: 42, baseType: !11008, size: 128, offset: 192)
!11008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !11009, line: 47, size: 128, elements: !11010)
!11009 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!11010 = !{!11011, !11016}
!11011 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11008, file: !11009, line: 48, baseType: !11012, size: 64)
!11012 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !11013, line: 42, baseType: !11014)
!11013 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!11014 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !11015)
!11015 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!11016 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !11008, file: !11009, line: 49, baseType: !2210, size: 32, offset: 64)
!11017 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10982, file: !10983, line: 43, baseType: !11008, size: 128, offset: 320)
!11018 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10982, file: !10983, line: 44, baseType: !11008, size: 128, offset: 448)
!11019 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10982, file: !10983, line: 45, baseType: !11020, size: 32, offset: 576)
!11020 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2169, line: 102, baseType: !11021)
!11021 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2209, line: 34, baseType: !2210)
!11022 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10982, file: !10983, line: 46, baseType: !11023, size: 32, offset: 608)
!11023 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2169, line: 97, baseType: !11024)
!11024 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2209, line: 30, baseType: !2210)
!11025 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !10982, file: !10983, line: 48, baseType: !11026, size: 64, offset: 640)
!11026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2210, size: 64, elements: !465)
!11027 = !{!11028, !11029}
!11028 = !DILocalVariable(name: "file", arg: 1, scope: !10978, file: !2165, line: 10, type: !7)
!11029 = !DILocalVariable(name: "st", arg: 2, scope: !10978, file: !2165, line: 10, type: !10981)
!11030 = !DILocation(line: 0, scope: !10978)
!11031 = !DILocation(line: 12, column: 5, scope: !10978)
!11032 = distinct !DISubprogram(name: "_isatty", scope: !2165, file: !2165, line: 15, type: !10860, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !11033)
!11033 = !{!11034}
!11034 = !DILocalVariable(name: "file", arg: 1, scope: !11032, file: !2165, line: 15, type: !7)
!11035 = !DILocation(line: 0, scope: !11032)
!11036 = !DILocation(line: 17, column: 5, scope: !11032)
!11037 = distinct !DISubprogram(name: "_lseek", scope: !2165, file: !2165, line: 20, type: !11038, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !11040)
!11038 = !DISubroutineType(types: !11039)
!11039 = !{!7, !7, !7, !7}
!11040 = !{!11041, !11042, !11043}
!11041 = !DILocalVariable(name: "file", arg: 1, scope: !11037, file: !2165, line: 20, type: !7)
!11042 = !DILocalVariable(name: "ptr", arg: 2, scope: !11037, file: !2165, line: 20, type: !7)
!11043 = !DILocalVariable(name: "dir", arg: 3, scope: !11037, file: !2165, line: 20, type: !7)
!11044 = !DILocation(line: 0, scope: !11037)
!11045 = !DILocation(line: 22, column: 5, scope: !11037)
!11046 = distinct !DISubprogram(name: "_open", scope: !2165, file: !2165, line: 25, type: !11047, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !11049)
!11047 = !DISubroutineType(types: !11048)
!11048 = !{!7, !2203, !7, !7}
!11049 = !{!11050, !11051, !11052}
!11050 = !DILocalVariable(name: "name", arg: 1, scope: !11046, file: !2165, line: 25, type: !2203)
!11051 = !DILocalVariable(name: "flags", arg: 2, scope: !11046, file: !2165, line: 25, type: !7)
!11052 = !DILocalVariable(name: "mode", arg: 3, scope: !11046, file: !2165, line: 25, type: !7)
!11053 = !DILocation(line: 0, scope: !11046)
!11054 = !DILocation(line: 27, column: 5, scope: !11046)
!11055 = distinct !DISubprogram(name: "_read", scope: !2165, file: !2165, line: 30, type: !11056, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !11058)
!11056 = !DISubroutineType(types: !11057)
!11057 = !{!7, !7, !2170, !7}
!11058 = !{!11059, !11060, !11061}
!11059 = !DILocalVariable(name: "file", arg: 1, scope: !11055, file: !2165, line: 30, type: !7)
!11060 = !DILocalVariable(name: "ptr", arg: 2, scope: !11055, file: !2165, line: 30, type: !2170)
!11061 = !DILocalVariable(name: "len", arg: 3, scope: !11055, file: !2165, line: 30, type: !7)
!11062 = !DILocation(line: 0, scope: !11055)
!11063 = !DILocation(line: 32, column: 5, scope: !11055)
!11064 = distinct !DISubprogram(name: "_getpid", scope: !2165, file: !2165, line: 48, type: !10363, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !293)
!11065 = !DILocation(line: 50, column: 5, scope: !11064)
!11066 = distinct !DISubprogram(name: "_kill", scope: !2165, file: !2165, line: 56, type: !11067, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !11069)
!11067 = !DISubroutineType(types: !11068)
!11068 = !{!7, !7, !7}
!11069 = !{!11070, !11071}
!11070 = !DILocalVariable(name: "pid", arg: 1, scope: !11066, file: !2165, line: 56, type: !7)
!11071 = !DILocalVariable(name: "sig", arg: 2, scope: !11066, file: !2165, line: 56, type: !7)
!11072 = !DILocation(line: 0, scope: !11066)
!11073 = !DILocation(line: 58, column: 5, scope: !11066)
!11074 = distinct !DISubprogram(name: "_exit", scope: !2165, file: !2165, line: 61, type: !10860, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !11075)
!11075 = !{!11076}
!11076 = !DILocalVariable(name: "val", arg: 1, scope: !11074, file: !2165, line: 61, type: !7)
!11077 = !DILocation(line: 0, scope: !11074)
!11078 = !DILocation(line: 63, column: 5, scope: !11074)
!11079 = !DILocation(line: 0, scope: !2164)
!11080 = !DILocation(line: 73, column: 5, scope: !2164)
!11081 = !{i64 1127}
!11082 = !DILocation(line: 75, column: 14, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !2164, file: !2165, line: 75, column: 9)
!11084 = !DILocation(line: 75, column: 11, scope: !11083)
!11085 = !DILocation(line: 75, column: 9, scope: !2164)
!11086 = !DILocation(line: 81, column: 32, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !2164, file: !2165, line: 81, column: 9)
!11088 = !DILocation(line: 81, column: 15, scope: !11087)
!11089 = !DILocation(line: 92, column: 1, scope: !2164)
!11090 = !DILocation(line: 81, column: 9, scope: !2164)
!11091 = distinct !DISubprogram(name: "_write", scope: !2165, file: !2165, line: 95, type: !11056, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !11092)
!11092 = !{!11093, !11094, !11095, !11096}
!11093 = !DILocalVariable(name: "file", arg: 1, scope: !11091, file: !2165, line: 95, type: !7)
!11094 = !DILocalVariable(name: "ptr", arg: 2, scope: !11091, file: !2165, line: 95, type: !2170)
!11095 = !DILocalVariable(name: "len", arg: 3, scope: !11091, file: !2165, line: 95, type: !7)
!11096 = !DILocalVariable(name: "DataIdx", scope: !11091, file: !2165, line: 97, type: !7)
!11097 = !DILocation(line: 0, scope: !11091)
!11098 = !DILocation(line: 99, column: 31, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11100, file: !2165, line: 99, column: 5)
!11100 = distinct !DILexicalBlock(scope: !11091, file: !2165, line: 99, column: 5)
!11101 = !DILocation(line: 99, column: 5, scope: !11100)
!11102 = !DILocation(line: 100, column: 26, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11099, file: !2165, line: 99, column: 49)
!11104 = !DILocation(line: 100, column: 22, scope: !11103)
!11105 = !DILocation(line: 100, column: 9, scope: !11103)
!11106 = !DILocation(line: 99, column: 45, scope: !11099)
!11107 = distinct !{!11107, !11101, !11108}
!11108 = !DILocation(line: 101, column: 5, scope: !11100)
!11109 = !DILocation(line: 102, column: 5, scope: !11091)
!11110 = distinct !DISubprogram(name: "SysTick_Set", scope: !2369, file: !2369, line: 62, type: !3519, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !11111)
!11111 = !{!11112, !11113}
!11112 = !DILocalVariable(name: "ticks", arg: 1, scope: !11110, file: !2369, line: 62, type: !61)
!11113 = !DILocalVariable(name: "val", scope: !11110, file: !2369, line: 64, type: !61)
!11114 = !DILocation(line: 0, scope: !11110)
!11115 = !DILocation(line: 67, column: 16, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11110, file: !2369, line: 67, column: 9)
!11117 = !DILocation(line: 67, column: 21, scope: !11116)
!11118 = !DILocation(line: 67, column: 9, scope: !11110)
!11119 = !DILocation(line: 72, column: 20, scope: !11110)
!11120 = !DILocation(line: 75, column: 19, scope: !11110)
!11121 = !DILocation(line: 79, column: 20, scope: !11110)
!11122 = !DILocation(line: 80, column: 20, scope: !11110)
!11123 = !DILocation(line: 83, column: 19, scope: !11110)
!11124 = !DILocation(line: 85, column: 5, scope: !11110)
!11125 = !DILocation(line: 86, column: 1, scope: !11110)
!11126 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2369, file: !2369, line: 95, type: !291, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !293)
!11127 = !DILocation(line: 97, column: 28, scope: !11126)
!11128 = !DILocation(line: 98, column: 1, scope: !11126)
!11129 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2369, file: !2369, line: 107, type: !3771, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !293)
!11130 = !DILocation(line: 109, column: 12, scope: !11129)
!11131 = !DILocation(line: 109, column: 5, scope: !11129)
!11132 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2369, file: !2369, line: 119, type: !291, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !11133)
!11133 = !{!11134}
!11134 = !DILocalVariable(name: "cm_mux_sel", scope: !11132, file: !2369, line: 121, type: !460)
!11135 = !DILocation(line: 121, column: 38, scope: !11132)
!11136 = !DILocation(line: 121, column: 26, scope: !11132)
!11137 = !DILocation(line: 0, scope: !11132)
!11138 = !DILocation(line: 123, column: 5, scope: !11132)
!11139 = !DILocation(line: 132, column: 13, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11132, file: !2369, line: 123, column: 25)
!11141 = !DILocation(line: 140, column: 13, scope: !11140)
!11142 = !DILocation(line: 0, scope: !11140)
!11143 = !DILocation(line: 146, column: 26, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11132, file: !2369, line: 146, column: 9)
!11145 = !DILocation(line: 146, column: 50, scope: !11144)
!11146 = !DILocation(line: 146, column: 41, scope: !11144)
!11147 = !DILocation(line: 148, column: 25, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11144, file: !2369, line: 147, column: 52)
!11149 = !DILocation(line: 149, column: 5, scope: !11148)
!11150 = !DILocation(line: 150, column: 1, scope: !11132)
!11151 = distinct !DISubprogram(name: "SystemInit", scope: !2369, file: !2369, line: 158, type: !291, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !293)
!11152 = !DILocation(line: 162, column: 16, scope: !11151)
!11153 = !DILocation(line: 166, column: 16, scope: !11151)
!11154 = !DILocation(line: 169, column: 16, scope: !11151)
!11155 = !DILocation(line: 172, column: 1, scope: !11151)
!11156 = distinct !DISubprogram(name: "CachePreInit", scope: !2369, file: !2369, line: 180, type: !291, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2368, retainedNodes: !293)
!11157 = !DILocation(line: 183, column: 22, scope: !11156)
!11158 = !DILocation(line: 186, column: 21, scope: !11156)
!11159 = !DILocation(line: 189, column: 21, scope: !11156)
!11160 = !DILocation(line: 192, column: 29, scope: !11156)
!11161 = !DILocation(line: 193, column: 33, scope: !11156)
!11162 = !DILocation(line: 195, column: 28, scope: !11156)
!11163 = !DILocation(line: 200, column: 30, scope: !11156)
!11164 = !DILocation(line: 214, column: 1, scope: !11156)
