; ModuleID = 'build/96b_wistrio/sys_heap/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, i32, i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.sys_memory_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.sys_memory_stats = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.z_heap_stress_result = type { i32, i32, i32, i64 }
%struct.z_heap_stress_rec = type { i8* (i8*, i32)*, void (i8*, i8*)*, i8*, i32, %struct.z_heap_stress_block*, i32, i32, i32, i32 }
%struct.z_heap_stress_block = type { i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230976 to i8*), void (i8*)* inttoptr (i32 134229209 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230976 to i8*), void (i8*)* inttoptr (i32 134229199 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230976 to i8*), void (i8*)* inttoptr (i32 134229189 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230976 to i8*), void (i8*)* inttoptr (i32 134229179 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230976 to i8*), void (i8*)* inttoptr (i32 134229169 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230976 to i8*), void (i8*)* inttoptr (i32 134229159 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230976 to i8*), void (i8*)* inttoptr (i32 134229149 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [21 x i8] c"System heap sample\0A\0A\00", align 1
@heap = internal global %struct.sys_heap zeroinitializer, align 4, !dbg !25
@heap_mem = internal global [256 x i8] zeroinitializer, align 1, !dbg !105
@.str.1 = private unnamed_addr constant [58 x i8] c"allocated %zu, free %zu, max allocated %zu, heap size %u\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !122
@.str.24 = private unnamed_addr constant [45 x i8] c"Heap at %p contains %d units in %d buckets\0A\0A\00", align 1
@.str.1.25 = private unnamed_addr constant [187 x i8] c"  bucket#    min units        total      largest      largest\0A             threshold       chunks      (units)      (bytes)\0A  -----------------------------------------------------------\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"%9d %12d %12d %12d %12zd\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"\0AChunk dump:\0A\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"chunk %4d: [%c] size=%-4d left=%-4d right=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [72 x i8] c"\0A%zd free bytes, %zd allocated bytes, overhead = %zd bytes (%zd.%zd%%)\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 123456789, align 8, !dbg !131
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [32 x i8*] [i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !165
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !233
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !262
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !268
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !408
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !444
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct.z_heap_bucket { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.52, i32 0, i32 0), %struct.z_heap_bucket { i32 285933596 } }], align 4, !dbg !454
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !459
@.str.51 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.52 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !479
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !587
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !740
@.str.54 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !709
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !692
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.54, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !665
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !681
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !711
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !725
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !727
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !729
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !731
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !733
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !735
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !745
@.str.56 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !770
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !846
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !835
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !887
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !761
@.str.67 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !953
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1198
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1176
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1162
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1110
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !759
@.str.1.70 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1200
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1180
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1178
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1127
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !757
@.str.2.71 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1213
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1184
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1182
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1136
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !755
@.str.3.72 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1215
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1188
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1186
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1145
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !753
@.str.4.73 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1217
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1192
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1190
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1151
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !751
@.str.5.74 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1219
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1196
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1194
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1160
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !765
@.str.78 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1221
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1418
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1377
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1420
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.78, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1362
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1364
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !763
@.str.1.81 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1427
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1379
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1452
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.81, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1373
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1375
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1381
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1389
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1412
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1415
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !819
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1444
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1446
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1448
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1450
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1454
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1565
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1567
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1563
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1534
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1569
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1108
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.70, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1125
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.71, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1134
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.72, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1143
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.73, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1149
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.74, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1158
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1656
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1680
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1683
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1687
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1691
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1698
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1908
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1917
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1924
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1929
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.130 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.132, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.133, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.134, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.135, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.136, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !1955
@.str.131 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.132 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.133 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.134 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.135 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.136 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2067
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2080
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2188
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2191
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2193
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1922
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1919
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2195
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2231
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1786
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2229
@.str.189 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2792 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !2796, !srcloc !2797
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !2798, !srcloc !2799
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !2800, !srcloc !2801
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !2802, !srcloc !2803
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2804, !srcloc !2805
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !2806, !srcloc !2807
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !2808, !srcloc !2809
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !2810, !srcloc !2811
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !2812, !srcloc !2813
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !2814, !srcloc !2815
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !2816, !srcloc !2817
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !2818, !srcloc !2819
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !2820, !srcloc !2821
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !2822, !srcloc !2823
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !2824, !srcloc !2825
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !2826, !srcloc !2827
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !2828, !srcloc !2829
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !2830, !srcloc !2831
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2832, !srcloc !2833
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !2834, !srcloc !2835
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !2836, !srcloc !2837
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2838, !srcloc !2839
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !2840, !srcloc !2841
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2842, !srcloc !2843
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !2844, !srcloc !2845
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !2846, !srcloc !2847
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !2848, !srcloc !2849
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !2850, !srcloc !2853
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !2854, !srcloc !2855
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2856, !srcloc !2857
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2858, !srcloc !2859
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2860, !srcloc !2861
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2862, !srcloc !2863
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !2864, !srcloc !2865
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !2866, !srcloc !2867
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !2868, !srcloc !2869
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !2870, !srcloc !2871
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2872, !srcloc !2873
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2874, !srcloc !2875
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2876, !srcloc !2877
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2878, !srcloc !2879
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2880, !srcloc !2881
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2882, !srcloc !2883
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !2884, !srcloc !2885
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !2886, !srcloc !2887
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !2888, !srcloc !2889
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !2890, !srcloc !2891
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !2892, !srcloc !2893
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !2894, !srcloc !2895
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2896, !srcloc !2897
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !2898, !srcloc !2899
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2900, !srcloc !2901
  ret void, !dbg !2902
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2905 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0)) #25, !dbg !2908
  tail call void @sys_heap_init(%struct.sys_heap* noundef nonnull @heap, i8* noundef getelementptr inbounds ([256 x i8], [256 x i8]* @heap_mem, i32 0, i32 0), i32 noundef 256) #25, !dbg !2909
  tail call void @print_sys_memory_stats() #26, !dbg !2910
  %1 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull @heap, i32 noundef 150) #25, !dbg !2911
  call void @llvm.dbg.value(metadata i8* %1, metadata !2907, metadata !DIExpression()), !dbg !2912
  tail call void @print_sys_memory_stats() #26, !dbg !2913
  %2 = tail call i8* @sys_heap_aligned_realloc(%struct.sys_heap* noundef nonnull @heap, i8* noundef %1, i32 noundef 0, i32 noundef 100) #25, !dbg !2914
  call void @llvm.dbg.value(metadata i8* %2, metadata !2907, metadata !DIExpression()), !dbg !2912
  tail call void @print_sys_memory_stats() #26, !dbg !2915
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull @heap, i8* noundef %2) #25, !dbg !2916
  tail call void @print_sys_memory_stats() #26, !dbg !2917
  ret void, !dbg !2918
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_sys_memory_stats() local_unnamed_addr #1 !dbg !2919 {
  %1 = alloca %struct.sys_memory_stats, align 4
  %2 = bitcast %struct.sys_memory_stats* %1 to i8*, !dbg !2928
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %2) #24, !dbg !2928
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %1, metadata !2921, metadata !DIExpression()), !dbg !2929
  %3 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef nonnull @heap, %struct.sys_memory_stats* noundef nonnull %1) #25, !dbg !2930
  %4 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !2931
  %5 = load i32, i32* %4, align 4, !dbg !2931
  %6 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !2932
  %7 = load i32, i32* %6, align 4, !dbg !2932
  %8 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !2933
  %9 = load i32, i32* %8, align 4, !dbg !2933
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i32 0, i32 0), i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef 256) #25, !dbg !2934
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %2) #24, !dbg !2935
  ret void, !dbg !2935
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2938, metadata !DIExpression()), !dbg !2939
  ret i32 0, !dbg !2940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !2941 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2945, metadata !DIExpression()), !dbg !2946
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !2947
  ret void, !dbg !2948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !2949 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !2952
  ret i8* %1, !dbg !2953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !2954 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2966, metadata !DIExpression()), !dbg !2975
  call void @llvm.dbg.value(metadata i8* %0, metadata !2965, metadata !DIExpression()), !dbg !2975
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !2976
  ret void, !dbg !2978
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !2979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2983, metadata !DIExpression()), !dbg !2985
  call void @llvm.dbg.value(metadata i8* %1, metadata !2984, metadata !DIExpression()), !dbg !2985
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2986
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !2986
  ret i32 %4, !dbg !2987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !2988 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3000, metadata !DIExpression()), !dbg !3001
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !2997, metadata !DIExpression()), !dbg !3001
  call void @llvm.dbg.value(metadata i8* %1, metadata !2998, metadata !DIExpression()), !dbg !3001
  call void @llvm.dbg.value(metadata i8* %2, metadata !2999, metadata !DIExpression()), !dbg !3001
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3002
  ret void, !dbg !3003
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3004 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3008, metadata !DIExpression()), !dbg !3011
  call void @llvm.dbg.value(metadata i32 %1, metadata !3009, metadata !DIExpression()), !dbg !3011
  call void @llvm.dbg.value(metadata i32 0, metadata !3010, metadata !DIExpression()), !dbg !3011
  %3 = icmp eq i32 %1, 0, !dbg !3012
  br i1 %3, label %13, label %4, !dbg !3015

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3010, metadata !DIExpression()), !dbg !3011
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3016
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3018
  %8 = load i8, i8* %7, align 1, !dbg !3018
  %9 = zext i8 %8 to i32, !dbg !3018
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3016
  %11 = add nuw i32 %5, 1, !dbg !3019
  call void @llvm.dbg.value(metadata i32 %11, metadata !3010, metadata !DIExpression()), !dbg !3011
  %12 = icmp eq i32 %11, %1, !dbg !3012
  br i1 %12, label %13, label %4, !dbg !3015, !llvm.loop !3020

13:                                               ; preds = %4, %2
  ret void, !dbg !3022
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3023 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3027, metadata !DIExpression()), !dbg !3029
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3030
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3030
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3028, metadata !DIExpression()), !dbg !3031
  call void @llvm.va_start(i8* nonnull %3), !dbg !3032
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3033
  %5 = load i32, i32* %4, align 4, !dbg !3033
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3033
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3033
  call void @llvm.va_end(i8* nonnull %3), !dbg !3034
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3035
  ret void, !dbg !3035
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3036 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3040, metadata !DIExpression()), !dbg !3045
  call void @llvm.dbg.value(metadata i32 %1, metadata !3041, metadata !DIExpression()), !dbg !3045
  call void @llvm.dbg.value(metadata i8* %2, metadata !3042, metadata !DIExpression()), !dbg !3045
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3046
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3046
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3043, metadata !DIExpression()), !dbg !3047
  call void @llvm.va_start(i8* nonnull %5), !dbg !3048
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3049
  %7 = load i32, i32* %6, align 4, !dbg !3049
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3049
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3049
  call void @llvm.dbg.value(metadata i32 %9, metadata !3044, metadata !DIExpression()), !dbg !3045
  call void @llvm.va_end(i8* nonnull %5), !dbg !3050
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3051
  ret i32 %9, !dbg !3052
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3053 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3060, metadata !DIExpression()), !dbg !3067
  call void @llvm.dbg.value(metadata i8* %0, metadata !3057, metadata !DIExpression()), !dbg !3067
  call void @llvm.dbg.value(metadata i32 %1, metadata !3058, metadata !DIExpression()), !dbg !3067
  call void @llvm.dbg.value(metadata i8* %2, metadata !3059, metadata !DIExpression()), !dbg !3067
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3068
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3068
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3061, metadata !DIExpression()), !dbg !3069
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3070
  store i8* %0, i8** %7, align 4, !dbg !3070
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3070
  store i32 %1, i32* %8, align 4, !dbg !3070
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3070
  store i32 0, i32* %9, align 4, !dbg !3070
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3071
  %10 = load i32, i32* %9, align 4, !dbg !3072
  %11 = load i32, i32* %8, align 4, !dbg !3074
  %12 = icmp slt i32 %10, %11, !dbg !3075
  br i1 %12, label %13, label %15, !dbg !3076

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3077
  store i8 0, i8* %14, align 1, !dbg !3079
  br label %15, !dbg !3080

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3081
  ret i32 %10, !dbg !3082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3088, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3089, metadata !DIExpression()), !dbg !3090
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3091
  %4 = load i8*, i8** %3, align 4, !dbg !3091
  %5 = icmp eq i8* %4, null, !dbg !3093
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3094
  br i1 %5, label %12, label %8, !dbg !3095

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3096
  %10 = load i32, i32* %9, align 4, !dbg !3096
  %11 = icmp slt i32 %7, %10, !dbg !3097
  br i1 %11, label %15, label %12, !dbg !3098

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3099
  %14 = add nsw i32 %7, 1, !dbg !3101
  store i32 %14, i32* %13, align 4, !dbg !3101
  br label %25, !dbg !3102

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3103
  %17 = icmp eq i32 %7, %16, !dbg !3105
  br i1 %17, label %18, label %21, !dbg !3106

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3107
  store i32 %19, i32* %6, align 4, !dbg !3107
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3109
  store i8 0, i8* %20, align 1, !dbg !3110
  br label %25, !dbg !3111

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3112
  %23 = add nsw i32 %7, 1, !dbg !3114
  store i32 %23, i32* %6, align 4, !dbg !3114
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3115
  store i8 %22, i8* %24, align 1, !dbg !3116
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3117
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3118 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3128, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.value(metadata i8* %1, metadata !3129, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.value(metadata i8* %2, metadata !3130, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.value(metadata i8* %3, metadata !3131, metadata !DIExpression()), !dbg !3132
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3133
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3134
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3135
  unreachable, !dbg !3136
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3137 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3241
  ret %struct.k_thread* %1, !dbg !3242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3248, metadata !DIExpression()), !dbg !3249
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3250, !srcloc !3252
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3253
  ret void, !dbg !3254
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3255 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3256, !srcloc !3258
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3259
  ret %struct.k_thread* %1, !dbg !3260
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3261 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3272, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.value(metadata i8* %1, metadata !3273, metadata !DIExpression()), !dbg !3276
  %3 = icmp eq i8* %1, null, !dbg !3277
  br i1 %3, label %13, label %4, !dbg !3279

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3280
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3280
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3274, metadata !DIExpression()), !dbg !3276
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3281, !range !3282
  call void @llvm.dbg.value(metadata i32 %7, metadata !3275, metadata !DIExpression()), !dbg !3276
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3283
  %8 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3284, !range !3285
  %9 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %8) #26, !dbg !3286
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3287
  %11 = load i32, i32* %10, align 4, !dbg !3288
  %12 = sub i32 %11, %9, !dbg !3288
  store i32 %12, i32* %10, align 4, !dbg !3288
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3289
  br label %13

13:                                               ; preds = %2, %4
  ret void, !dbg !3290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3291 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3295, metadata !DIExpression()), !dbg !3299
  call void @llvm.dbg.value(metadata i8* %1, metadata !3296, metadata !DIExpression()), !dbg !3299
  call void @llvm.dbg.value(metadata i8* %1, metadata !3297, metadata !DIExpression()), !dbg !3299
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3300
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3298, metadata !DIExpression()), !dbg !3299
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3301
  %5 = ptrtoint i8* %4 to i32, !dbg !3302
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3302
  %7 = sub i32 %5, %6, !dbg !3302
  %8 = lshr i32 %7, 3, !dbg !3303
  ret i32 %8, !dbg !3304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3305 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3309, metadata !DIExpression()), !dbg !3314
  call void @llvm.dbg.value(metadata i32 %1, metadata !3310, metadata !DIExpression()), !dbg !3314
  call void @llvm.dbg.value(metadata i1 %2, metadata !3311, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3314
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3315
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3312, metadata !DIExpression()), !dbg !3314
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3313, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3314
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3316
  %6 = bitcast i8* %5 to i16*, !dbg !3316
  %7 = load i16, i16* %6, align 2, !dbg !3316
  %8 = and i16 %7, -2, !dbg !3320
  %9 = zext i1 %2 to i16, !dbg !3320
  %10 = or i16 %8, %9, !dbg !3320
  store i16 %10, i16* %6, align 2, !dbg !3316
  ret void, !dbg !3321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3322 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3327, metadata !DIExpression()), !dbg !3329
  call void @llvm.dbg.value(metadata i32 %1, metadata !3328, metadata !DIExpression()), !dbg !3329
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3330
  %4 = lshr i32 %3, 1, !dbg !3331
  ret i32 %4, !dbg !3332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3333 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3337, metadata !DIExpression()), !dbg !3339
  call void @llvm.dbg.value(metadata i32 %1, metadata !3338, metadata !DIExpression()), !dbg !3339
  %3 = shl i32 %1, 3, !dbg !3340
  %4 = add i32 %3, -4, !dbg !3341
  ret i32 %4, !dbg !3342
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3343 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3347, metadata !DIExpression()), !dbg !3349
  call void @llvm.dbg.value(metadata i32 %1, metadata !3348, metadata !DIExpression()), !dbg !3349
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3350
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3352
  br i1 %4, label %7, label %5, !dbg !3353

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3354
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3356
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3357
  br label %7, !dbg !3358

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3359, !range !3361
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3362
  br i1 %9, label %13, label %10, !dbg !3363

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3364
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3366, !range !3361
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3367
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3368
  call void @llvm.dbg.value(metadata i32 %12, metadata !3348, metadata !DIExpression()), !dbg !3349
  br label %13, !dbg !3369

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3348, metadata !DIExpression()), !dbg !3349
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3370
  ret void, !dbg !3371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3372 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3376, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.value(metadata i32 %1, metadata !3377, metadata !DIExpression()), !dbg !3378
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3379
  %4 = add i32 %3, %1, !dbg !3380
  ret i32 %4, !dbg !3381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3382 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3386, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i32 %1, metadata !3387, metadata !DIExpression()), !dbg !3388
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3389
  %4 = and i32 %3, 1, !dbg !3390
  %5 = icmp ne i32 %4, 0, !dbg !3389
  ret i1 %5, !dbg !3391
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3392 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3394, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.value(metadata i32 %1, metadata !3395, metadata !DIExpression()), !dbg !3399
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3400, !range !3285
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3401
  call void @llvm.dbg.value(metadata i32 %4, metadata !3396, metadata !DIExpression()), !dbg !3402
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3403
  ret void, !dbg !3404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3405 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3409, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i32 %1, metadata !3410, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i32 %2, metadata !3411, metadata !DIExpression()), !dbg !3413
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3414
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3415
  %6 = add i32 %5, %4, !dbg !3416
  call void @llvm.dbg.value(metadata i32 %6, metadata !3412, metadata !DIExpression()), !dbg !3413
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3417
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3418
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3419
  ret void, !dbg !3420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3421 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3423, metadata !DIExpression()), !dbg !3425
  call void @llvm.dbg.value(metadata i32 %1, metadata !3424, metadata !DIExpression()), !dbg !3425
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3426
  %4 = sub i32 %1, %3, !dbg !3427
  ret i32 %4, !dbg !3428
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3429 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3431, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %1, metadata !3432, metadata !DIExpression()), !dbg !3436
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3437, !range !3285
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3438
  call void @llvm.dbg.value(metadata i32 %4, metadata !3433, metadata !DIExpression()), !dbg !3439
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3440
  ret void, !dbg !3441
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3442 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3446, metadata !DIExpression()), !dbg !3449
  call void @llvm.dbg.value(metadata i32 %1, metadata !3447, metadata !DIExpression()), !dbg !3449
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3450
  %4 = add i32 %1, 1, !dbg !3451
  %5 = sub i32 %4, %3, !dbg !3452
  call void @llvm.dbg.value(metadata i32 %5, metadata !3448, metadata !DIExpression()), !dbg !3449
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3453, !range !3454
  %7 = sub nsw i32 31, %6, !dbg !3455
  ret i32 %7, !dbg !3456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3457 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3461, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %1, metadata !3462, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata i32 %2, metadata !3463, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3470
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, i32 0, !dbg !3471
  %5 = load i32, i32* %4, align 4, !dbg !3471
  %6 = icmp eq i32 %5, 0, !dbg !3472
  br i1 %6, label %7, label %12, !dbg !3473

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3474
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3476
  %10 = load i32, i32* %9, align 4, !dbg !3477
  %11 = or i32 %10, %8, !dbg !3477
  store i32 %11, i32* %9, align 4, !dbg !3477
  store i32 %1, i32* %4, align 4, !dbg !3478
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3479
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3480
  br label %14, !dbg !3481

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3466, metadata !DIExpression()), !dbg !3482
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3483, !range !3484
  call void @llvm.dbg.value(metadata i32 %13, metadata !3469, metadata !DIExpression()), !dbg !3482
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3485
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3486
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3487
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3488
  br label %14

14:                                               ; preds = %12, %7
  %15 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3489, !range !3285
  %16 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %15) #26, !dbg !3490
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3491
  %18 = load i32, i32* %17, align 4, !dbg !3492
  %19 = add i32 %18, %16, !dbg !3492
  store i32 %19, i32* %17, align 4, !dbg !3492
  ret void, !dbg !3493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3494 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3496, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata i32 %1, metadata !3497, metadata !DIExpression()), !dbg !3499
  call void @llvm.dbg.value(metadata i32 %2, metadata !3498, metadata !DIExpression()), !dbg !3499
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3500
  ret void, !dbg !3501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3502 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3504, metadata !DIExpression()), !dbg !3507
  call void @llvm.dbg.value(metadata i32 %1, metadata !3505, metadata !DIExpression()), !dbg !3507
  call void @llvm.dbg.value(metadata i32 %2, metadata !3506, metadata !DIExpression()), !dbg !3507
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3508
  ret void, !dbg !3509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3510 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3512, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i32 %1, metadata !3513, metadata !DIExpression()), !dbg !3514
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3515
  ret i32 %3, !dbg !3516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3517 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3521, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %1, metadata !3522, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata i32 %2, metadata !3523, metadata !DIExpression()), !dbg !3526
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3527
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3524, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3525, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3526
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3525, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3526
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3528
  call void @llvm.dbg.value(metadata i8* %5, metadata !3525, metadata !DIExpression()), !dbg !3526
  %6 = bitcast i8* %5 to i16*, !dbg !3529
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3532
  %8 = load i16, i16* %7, align 2, !dbg !3532
  %9 = zext i16 %8 to i32, !dbg !3532
  ret i32 %9, !dbg !3533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3534 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3538, metadata !DIExpression()), !dbg !3539
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3540
  ret %struct.chunk_unit_t* %2, !dbg !3541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3542 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3546, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.value(metadata i32 %1, metadata !3547, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.value(metadata i32 %2, metadata !3548, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.value(metadata i32 %3, metadata !3549, metadata !DIExpression()), !dbg !3552
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3553
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3550, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3552
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3554
  call void @llvm.dbg.value(metadata i8* %6, metadata !3551, metadata !DIExpression()), !dbg !3552
  %7 = trunc i32 %3 to i16, !dbg !3555
  %8 = bitcast i8* %6 to i16*, !dbg !3558
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3559
  store i16 %7, i16* %9, align 2, !dbg !3560
  ret void, !dbg !3561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3562 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3566, metadata !DIExpression()), !dbg !3567
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3568
  ret i32 %2, !dbg !3569
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3570 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3574, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %1, metadata !3575, metadata !DIExpression()), !dbg !3576
  %3 = add i32 %1, 4, !dbg !3577
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3578
  ret i32 %4, !dbg !3579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3584, metadata !DIExpression()), !dbg !3585
  %2 = add i32 %0, 7, !dbg !3586
  %3 = lshr i32 %2, 3, !dbg !3587
  ret i32 %3, !dbg !3588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3589 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3593, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i32 %1, metadata !3594, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i32 %2, metadata !3595, metadata !DIExpression()), !dbg !3596
  %4 = shl i32 %2, 1, !dbg !3597
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !3598
  ret void, !dbg !3599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3600 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3602, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %1, metadata !3603, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %2, metadata !3604, metadata !DIExpression()), !dbg !3605
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !3606
  ret void, !dbg !3607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3608 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3610, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata i32 %1, metadata !3611, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata i32 %2, metadata !3612, metadata !DIExpression()), !dbg !3618
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, !dbg !3619
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3613, metadata !DIExpression()), !dbg !3618
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3620
  %6 = icmp eq i32 %5, %1, !dbg !3621
  br i1 %6, label %7, label %14, !dbg !3622

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3623
  %9 = xor i32 %8, -1, !dbg !3625
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3626
  %11 = load i32, i32* %10, align 4, !dbg !3627
  %12 = and i32 %11, %9, !dbg !3627
  store i32 %12, i32* %10, align 4, !dbg !3627
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3628
  store i32 0, i32* %13, align 4, !dbg !3629
  br label %17, !dbg !3630

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3631
  call void @llvm.dbg.value(metadata i32 %15, metadata !3614, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.value(metadata i32 %5, metadata !3617, metadata !DIExpression()), !dbg !3632
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3633
  store i32 %5, i32* %16, align 4, !dbg !3634
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !3635
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !3636
  br label %17

17:                                               ; preds = %14, %7
  %18 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3637, !range !3285
  %19 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %18) #26, !dbg !3638
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3639
  %21 = load i32, i32* %20, align 4, !dbg !3640
  %22 = sub i32 %21, %19, !dbg !3640
  store i32 %22, i32* %20, align 4, !dbg !3640
  ret void, !dbg !3641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3642 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3644, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i32 %1, metadata !3645, metadata !DIExpression()), !dbg !3646
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !3647
  ret i32 %3, !dbg !3648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3649 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3653, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %1, metadata !3654, metadata !DIExpression()), !dbg !3660
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3661
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3661
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3655, metadata !DIExpression()), !dbg !3660
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !3662
  call void @llvm.dbg.value(metadata i32 %5, metadata !3656, metadata !DIExpression()), !dbg !3660
  %6 = ptrtoint i8* %1 to i32, !dbg !3663
  call void @llvm.dbg.value(metadata i32 %6, metadata !3657, metadata !DIExpression()), !dbg !3660
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !3664
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3664
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3665
  call void @llvm.dbg.value(metadata i32 %9, metadata !3658, metadata !DIExpression()), !dbg !3660
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !3666
  %11 = shl i32 %10, 3, !dbg !3667
  call void @llvm.dbg.value(metadata i32 %11, metadata !3659, metadata !DIExpression()), !dbg !3660
  %12 = sub i32 %9, %6, !dbg !3668
  %13 = add i32 %12, %11, !dbg !3669
  ret i32 %13, !dbg !3670
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3671 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3675, metadata !DIExpression()), !dbg !3681
  call void @llvm.dbg.value(metadata i32 %1, metadata !3676, metadata !DIExpression()), !dbg !3681
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3682
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3682
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3677, metadata !DIExpression()), !dbg !3681
  %5 = icmp eq i32 %1, 0, !dbg !3683
  br i1 %5, label %21, label %6, !dbg !3685

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3686
  br i1 %7, label %21, label %8, !dbg !3687

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3688, !range !3282
  call void @llvm.dbg.value(metadata i32 %9, metadata !3679, metadata !DIExpression()), !dbg !3681
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !3689
  call void @llvm.dbg.value(metadata i32 %10, metadata !3680, metadata !DIExpression()), !dbg !3681
  %11 = icmp eq i32 %10, 0, !dbg !3690
  br i1 %11, label %21, label %12, !dbg !3692

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3693
  %14 = icmp ugt i32 %13, %9, !dbg !3695
  br i1 %14, label %15, label %17, !dbg !3696

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !3697
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !3699
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !3700
  br label %17, !dbg !3701

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !3702
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3703
  call void @llvm.dbg.value(metadata i8* %18, metadata !3678, metadata !DIExpression()), !dbg !3681
  %19 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3704, !range !3285
  %20 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %4, i32 noundef %19) #26, !dbg !3705, !range !3706
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %4, i32 noundef %20) #26, !dbg !3707
  br label %21, !dbg !3708

21:                                               ; preds = %17, %8, %2, %6
  %22 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !3681
  ret i8* %22, !dbg !3709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3710 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3714, metadata !DIExpression()), !dbg !3716
  call void @llvm.dbg.value(metadata i32 %1, metadata !3715, metadata !DIExpression()), !dbg !3716
  %3 = lshr i32 %1, 3, !dbg !3717
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3718
  %5 = load i32, i32* %4, align 4, !dbg !3718
  %6 = icmp uge i32 %3, %5, !dbg !3719
  ret i1 %6, !dbg !3720
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3721 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3725, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i32 %1, metadata !3726, metadata !DIExpression()), !dbg !3740
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3741
  call void @llvm.dbg.value(metadata i32 %3, metadata !3727, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !3728, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3740
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %3, i32 0, !dbg !3742
  %5 = load i32, i32* %4, align 4, !dbg !3742
  %6 = icmp eq i32 %5, 0, !dbg !3743
  br i1 %6, label %19, label %7, !dbg !3744

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !3745
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !3746
  call void @llvm.dbg.value(metadata i32 %9, metadata !3732, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata i32 %8, metadata !3733, metadata !DIExpression()), !dbg !3747
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3748
  %11 = icmp ult i32 %10, %1, !dbg !3750
  br i1 %11, label %13, label %12, !dbg !3751

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !3752
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3754
  store i32 %14, i32* %4, align 4, !dbg !3755
  %15 = add nsw i32 %9, -1, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %15, metadata !3732, metadata !DIExpression()), !dbg !3746
  %16 = icmp eq i32 %15, 0, !dbg !3756
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !3757
  br i1 %18, label %19, label %7, !dbg !3757, !llvm.loop !3758

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3761
  %21 = load i32, i32* %20, align 4, !dbg !3761
  %22 = add nsw i32 %3, 1, !dbg !3762
  %23 = shl nsw i32 -1, %22, !dbg !3762
  %24 = and i32 %21, %23, !dbg !3763
  call void @llvm.dbg.value(metadata i32 %24, metadata !3735, metadata !DIExpression()), !dbg !3740
  %25 = icmp eq i32 %24, 0, !dbg !3764
  br i1 %25, label %30, label %26, !dbg !3765

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !3766, !range !3454
  call void @llvm.dbg.value(metadata i32 %27, metadata !3736, metadata !DIExpression()), !dbg !3767
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %27, i32 0, !dbg !3768
  %29 = load i32, i32* %28, align 4, !dbg !3768
  call void @llvm.dbg.value(metadata i32 %29, metadata !3739, metadata !DIExpression()), !dbg !3767
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !3769
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !3740
  ret i32 %31, !dbg !3770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3771 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3773, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.value(metadata i32 %1, metadata !3774, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.value(metadata i32 %2, metadata !3775, metadata !DIExpression()), !dbg !3779
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3780
  call void @llvm.dbg.value(metadata i32 %4, metadata !3776, metadata !DIExpression()), !dbg !3779
  %5 = sub i32 %2, %1, !dbg !3781
  call void @llvm.dbg.value(metadata i32 %5, metadata !3777, metadata !DIExpression()), !dbg !3779
  %6 = sub i32 %4, %5, !dbg !3782
  call void @llvm.dbg.value(metadata i32 %6, metadata !3778, metadata !DIExpression()), !dbg !3779
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3783
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !3784
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !3785
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3786
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3787
  ret void, !dbg !3788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3789 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3793, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.value(metadata i32 %1, metadata !3794, metadata !DIExpression()), !dbg !3797
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3798
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3795, metadata !DIExpression()), !dbg !3797
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !3799
  call void @llvm.dbg.value(metadata i8* %4, metadata !3796, metadata !DIExpression()), !dbg !3797
  ret i8* %4, !dbg !3800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @increase_allocated_bytes(%struct.z_heap* nocapture noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3801 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3805, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.value(metadata i32 %1, metadata !3806, metadata !DIExpression()), !dbg !3807
  %3 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 4, !dbg !3808
  %4 = load i32, i32* %3, align 4, !dbg !3809
  %5 = add i32 %4, %1, !dbg !3809
  store i32 %5, i32* %3, align 4, !dbg !3809
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 5, !dbg !3810
  %7 = load i32, i32* %6, align 4, !dbg !3810
  %8 = icmp ugt i32 %7, %5, !dbg !3810
  %9 = select i1 %8, i32 %7, i32 %5, !dbg !3810
  store i32 %9, i32* %6, align 4, !dbg !3811
  ret void, !dbg !3812
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3813 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3817, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 %1, metadata !3818, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 %2, metadata !3819, metadata !DIExpression()), !dbg !3829
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3830
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !3830
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !3820, metadata !DIExpression()), !dbg !3829
  %6 = sub i32 0, %1, !dbg !3831
  %7 = and i32 %6, %1, !dbg !3832
  call void @llvm.dbg.value(metadata i32 %7, metadata !3822, metadata !DIExpression()), !dbg !3829
  %8 = icmp eq i32 %7, %1, !dbg !3833
  br i1 %8, label %13, label %9, !dbg !3835

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %10, metadata !3818, metadata !DIExpression()), !dbg !3829
  %11 = icmp ult i32 %7, 4, !dbg !3838
  %12 = select i1 %11, i32 %7, i32 4, !dbg !3838
  br label %17, !dbg !3838

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !3839
  br i1 %14, label %15, label %17, !dbg !3842

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !3843
  br label %59, !dbg !3845

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !3829
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !3846
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !3818, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 %19, metadata !3821, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i32 %18, metadata !3822, metadata !DIExpression()), !dbg !3829
  %21 = icmp eq i32 %2, 0, !dbg !3847
  br i1 %21, label %59, label %22, !dbg !3849

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !3850
  br i1 %23, label %59, label %24, !dbg !3851

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !3852
  %26 = add i32 %25, %20, !dbg !3853
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !3854, !range !3282
  call void @llvm.dbg.value(metadata i32 %27, metadata !3823, metadata !DIExpression()), !dbg !3829
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !3855
  call void @llvm.dbg.value(metadata i32 %28, metadata !3824, metadata !DIExpression()), !dbg !3829
  %29 = icmp eq i32 %28, 0, !dbg !3856
  br i1 %29, label %59, label %30, !dbg !3858

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3859
  call void @llvm.dbg.value(metadata i8* %31, metadata !3825, metadata !DIExpression()), !dbg !3829
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !3860
  %33 = ptrtoint i8* %32 to i32, !dbg !3860
  %34 = add i32 %20, -1, !dbg !3860
  %35 = add i32 %34, %33, !dbg !3860
  %36 = sub i32 0, %20, !dbg !3860
  %37 = and i32 %35, %36, !dbg !3860
  %38 = inttoptr i32 %37 to i8*, !dbg !3861
  %39 = sub i32 0, %18, !dbg !3862
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !3862
  call void @llvm.dbg.value(metadata i8* %40, metadata !3825, metadata !DIExpression()), !dbg !3829
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !3863
  %42 = ptrtoint i8* %41 to i32, !dbg !3863
  %43 = add i32 %42, 7, !dbg !3863
  %44 = and i32 %43, -8, !dbg !3863
  call void @llvm.dbg.value(metadata i32 %44, metadata !3826, metadata !DIExpression()), !dbg !3829
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !3864
  call void @llvm.dbg.value(metadata i32 %45, metadata !3827, metadata !DIExpression()), !dbg !3829
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !3865
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !3866
  %48 = sub i32 %44, %47, !dbg !3866
  %49 = ashr exact i32 %48, 3, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %49, metadata !3828, metadata !DIExpression()), !dbg !3829
  %50 = icmp ugt i32 %45, %28, !dbg !3867
  br i1 %50, label %51, label %52, !dbg !3869

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !3870
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3872
  br label %52, !dbg !3873

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3874
  %54 = icmp ugt i32 %53, %49, !dbg !3876
  br i1 %54, label %55, label %56, !dbg !3877

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !3878
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !3880
  br label %56, !dbg !3881

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !3882
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3883, !range !3285
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %5, i32 noundef %57) #26, !dbg !3884, !range !3706
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %5, i32 noundef %58) #26, !dbg !3885
  br label %59

59:                                               ; preds = %56, %24, %17, %22, %15
  %60 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !3829
  ret i8* %60, !dbg !3886
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !3887 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3891, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.value(metadata i8* %1, metadata !3892, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.value(metadata i32 %2, metadata !3893, metadata !DIExpression()), !dbg !3910
  call void @llvm.dbg.value(metadata i32 %3, metadata !3894, metadata !DIExpression()), !dbg !3910
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3911
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3911
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3895, metadata !DIExpression()), !dbg !3910
  %7 = icmp eq i8* %1, null, !dbg !3912
  br i1 %7, label %8, label %10, !dbg !3914

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !3915
  br label %65, !dbg !3917

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !3918
  br i1 %11, label %12, label %13, !dbg !3920

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !3921
  br label %65, !dbg !3923

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !3924
  br i1 %14, label %65, label %15, !dbg !3926

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3927, !range !3282
  call void @llvm.dbg.value(metadata i32 %16, metadata !3896, metadata !DIExpression()), !dbg !3910
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3928
  call void @llvm.dbg.value(metadata i32 %17, metadata !3897, metadata !DIExpression()), !dbg !3910
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3929
  %19 = ptrtoint i8* %1 to i32, !dbg !3930
  %20 = ptrtoint i8* %18 to i32, !dbg !3930
  %21 = sub i32 %19, %20, !dbg !3930
  call void @llvm.dbg.value(metadata i32 %21, metadata !3898, metadata !DIExpression()), !dbg !3910
  %22 = add i32 %21, %3, !dbg !3931
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !3932
  call void @llvm.dbg.value(metadata i32 %23, metadata !3899, metadata !DIExpression()), !dbg !3910
  %24 = icmp eq i32 %2, 0, !dbg !3933
  br i1 %24, label %29, label %25, !dbg !3934

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !3935
  %27 = and i32 %26, %19, !dbg !3936
  %28 = icmp eq i32 %27, 0, !dbg !3936
  br i1 %28, label %29, label %55, !dbg !3937

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3938
  %31 = icmp eq i32 %23, %30, !dbg !3939
  br i1 %31, label %65, label %32, !dbg !3940

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !3941
  br i1 %33, label %34, label %41, !dbg !3942

34:                                               ; preds = %32
  %35 = sub i32 %23, %30, !dbg !3943
  %36 = shl i32 %35, 3, !dbg !3945
  %37 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3946
  %38 = load i32, i32* %37, align 4, !dbg !3947
  %39 = add i32 %38, %36, !dbg !3947
  store i32 %39, i32* %37, align 4, !dbg !3947
  %40 = add i32 %23, %16, !dbg !3948
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %40) #26, !dbg !3949
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !3950
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %40) #26, !dbg !3951
  br label %65, !dbg !3952

41:                                               ; preds = %32
  %42 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3953
  br i1 %42, label %55, label %43, !dbg !3954

43:                                               ; preds = %41
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3955
  %45 = add i32 %44, %30, !dbg !3956
  %46 = icmp ult i32 %45, %23, !dbg !3957
  br i1 %46, label %55, label %47, !dbg !3958

47:                                               ; preds = %43
  %48 = sub i32 %23, %30, !dbg !3959
  call void @llvm.dbg.value(metadata i32 %48, metadata !3900, metadata !DIExpression()), !dbg !3960
  %49 = shl i32 %48, 3, !dbg !3961
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %6, i32 noundef %49) #26, !dbg !3962
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3963
  %50 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3964
  %51 = icmp ult i32 %48, %50, !dbg !3966
  br i1 %51, label %52, label %54, !dbg !3967

52:                                               ; preds = %47
  %53 = add i32 %48, %17, !dbg !3968
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %53) #26, !dbg !3970
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !3971
  br label %54, !dbg !3972

54:                                               ; preds = %52, %47
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !3973
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !3974
  br label %65

55:                                               ; preds = %43, %41, %25
  %56 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !3975
  call void @llvm.dbg.value(metadata i8* %56, metadata !3906, metadata !DIExpression()), !dbg !3910
  %57 = icmp eq i8* %56, null, !dbg !3976
  br i1 %57, label %65, label %58, !dbg !3977

58:                                               ; preds = %55
  %59 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3978, !range !3285
  %60 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %59) #26, !dbg !3979
  %61 = sub i32 %60, %21, !dbg !3980
  call void @llvm.dbg.value(metadata i32 %61, metadata !3907, metadata !DIExpression()), !dbg !3981
  %62 = icmp ult i32 %61, %3, !dbg !3982
  %63 = select i1 %62, i32 %61, i32 %3, !dbg !3982
  %64 = tail call i8* @memcpy(i8* noundef nonnull %56, i8* noundef nonnull %1, i32 noundef %63) #25, !dbg !3983
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !3984
  br label %65, !dbg !3985

65:                                               ; preds = %34, %54, %29, %58, %55, %13, %12, %8
  %66 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %54 ], [ %1, %29 ], [ %56, %58 ], [ null, %55 ], !dbg !3910
  ret i8* %66, !dbg !3986
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3987 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3991, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata i8* %1, metadata !3992, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata i32 %2, metadata !3993, metadata !DIExpression()), !dbg !4002
  %4 = add i32 %2, -4, !dbg !4003
  call void @llvm.dbg.value(metadata i32 %4, metadata !3993, metadata !DIExpression()), !dbg !4002
  %5 = ptrtoint i8* %1 to i32, !dbg !4004
  %6 = add i32 %5, 7, !dbg !4004
  %7 = and i32 %6, -8, !dbg !4004
  call void @llvm.dbg.value(metadata i32 %7, metadata !3994, metadata !DIExpression()), !dbg !4002
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4005
  %9 = ptrtoint i8* %8 to i32, !dbg !4005
  %10 = and i32 %9, -8, !dbg !4005
  call void @llvm.dbg.value(metadata i32 %10, metadata !3995, metadata !DIExpression()), !dbg !4002
  %11 = sub i32 %10, %7, !dbg !4006
  %12 = lshr exact i32 %11, 3, !dbg !4007
  call void @llvm.dbg.value(metadata i32 %12, metadata !3996, metadata !DIExpression()), !dbg !4002
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4008
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !3997, metadata !DIExpression()), !dbg !4002
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4009
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4010
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4011
  store i32 %12, i32* %15, align 8, !dbg !4012
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4013
  store i32 0, i32* %16, align 4, !dbg !4014
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, !dbg !4015
  store i32 0, i32* %17, align 8, !dbg !4016
  %18 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 4, !dbg !4017
  store i32 0, i32* %18, align 4, !dbg !4018
  %19 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 5, !dbg !4019
  store i32 0, i32* %19, align 8, !dbg !4020
  %20 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4021
  call void @llvm.dbg.value(metadata i32 %20, metadata !3998, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4002
  %21 = shl i32 %20, 2, !dbg !4022
  %22 = add i32 %21, 32, !dbg !4023
  %23 = tail call fastcc i32 @chunksz(i32 noundef %22) #26, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %23, metadata !3999, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata i32 0, metadata !4000, metadata !DIExpression()), !dbg !4025
  %24 = icmp slt i32 %20, 0, !dbg !4026
  br i1 %24, label %25, label %27, !dbg !4028

25:                                               ; preds = %27, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %23) #26, !dbg !4029
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4030
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4031
  %26 = sub i32 %12, %23, !dbg !4032
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %26) #26, !dbg !4033
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %23) #26, !dbg !4034
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4035
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %26) #26, !dbg !4036
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4037
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %23) #26, !dbg !4038
  ret void, !dbg !4039

27:                                               ; preds = %3, %27
  %28 = phi i32 [ %30, %27 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !4000, metadata !DIExpression()), !dbg !4025
  %29 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 6, i32 %28, i32 0, !dbg !4040
  store i32 0, i32* %29, align 4, !dbg !4042
  %30 = add nuw i32 %28, 1, !dbg !4043
  call void @llvm.dbg.value(metadata i32 %30, metadata !4000, metadata !DIExpression()), !dbg !4025
  %31 = icmp eq i32 %28, %20, !dbg !4026
  br i1 %31, label %25, label %27, !dbg !4028, !llvm.loop !4044
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local zeroext i1 @sys_heap_validate(%struct.sys_heap* noundef %0) local_unnamed_addr #12 !dbg !4046 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.sys_memory_stats, align 4
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4070, metadata !DIExpression()), !dbg !4096
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4097
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4097
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4071, metadata !DIExpression()), !dbg !4096
  %7 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef 0) #26, !dbg !4098
  call void @llvm.dbg.value(metadata i32 %7, metadata !4072, metadata !DIExpression()), !dbg !4096
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  call void @llvm.dbg.value(metadata i32 %7, metadata !4072, metadata !DIExpression()), !dbg !4096
  %10 = icmp ult i32 %7, %9, !dbg !4100
  br i1 %10, label %11, label %17, !dbg !4102

11:                                               ; preds = %1, %14
  %12 = phi i32 [ %15, %14 ], [ %7, %1 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !4072, metadata !DIExpression()), !dbg !4096
  %13 = tail call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef nonnull %6, i32 noundef %12) #26, !dbg !4103
  br i1 %13, label %14, label %138, !dbg !4106

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %12) #26, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %15, metadata !4072, metadata !DIExpression()), !dbg !4096
  %16 = icmp ult i32 %15, %9, !dbg !4100
  br i1 %16, label %11, label %17, !dbg !4102, !llvm.loop !4108

17:                                               ; preds = %14, %1
  %18 = phi i32 [ %7, %1 ], [ %15, %14 ], !dbg !4110
  %19 = icmp eq i32 %18, %9, !dbg !4111
  br i1 %19, label %20, label %138, !dbg !4113

20:                                               ; preds = %17
  %21 = bitcast i32* %2 to i8*, !dbg !4114
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4114
  %22 = bitcast i32* %3 to i8*, !dbg !4114
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4114
  %23 = bitcast %struct.sys_memory_stats* %4 to i8*, !dbg !4115
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4115
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %4, metadata !4075, metadata !DIExpression()), !dbg !4116
  call void @llvm.dbg.value(metadata i32* %2, metadata !4073, metadata !DIExpression(DW_OP_deref)), !dbg !4096
  call void @llvm.dbg.value(metadata i32* %3, metadata !4074, metadata !DIExpression(DW_OP_deref)), !dbg !4096
  call fastcc void @get_alloc_info(%struct.z_heap* noundef nonnull %6, i32* noundef nonnull %2, i32* noundef nonnull %3) #26, !dbg !4117
  %24 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef %0, %struct.sys_memory_stats* noundef nonnull %4) #26, !dbg !4118
  %25 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 1, !dbg !4119
  %26 = load i32, i32* %25, align 4, !dbg !4119
  %27 = load i32, i32* %2, align 4, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %27, metadata !4073, metadata !DIExpression()), !dbg !4096
  %28 = icmp eq i32 %26, %27, !dbg !4122
  br i1 %28, label %29, label %136, !dbg !4123

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 0, !dbg !4124
  %31 = load i32, i32* %30, align 4, !dbg !4124
  %32 = load i32, i32* %3, align 4, !dbg !4125
  call void @llvm.dbg.value(metadata i32 %32, metadata !4074, metadata !DIExpression()), !dbg !4096
  %33 = icmp eq i32 %31, %32, !dbg !4126
  br i1 %33, label %34, label %136, !dbg !4127

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 0, metadata !4081, metadata !DIExpression()), !dbg !4128
  %35 = load i32, i32* %8, align 4, !dbg !4129
  %36 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %35) #26, !dbg !4130
  %37 = icmp slt i32 %36, 0, !dbg !4131
  br i1 %37, label %84, label %38, !dbg !4132

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 2
  br label %40, !dbg !4132

40:                                               ; preds = %38, %79
  %41 = phi i32 [ 0, %38 ], [ %80, %79 ]
  call void @llvm.dbg.value(metadata i32 %41, metadata !4081, metadata !DIExpression()), !dbg !4128
  %42 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %41, i32 0, !dbg !4133
  %43 = load i32, i32* %42, align 4, !dbg !4133
  call void @llvm.dbg.value(metadata i32 %43, metadata !4083, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i32 0, metadata !4086, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i32 %43, metadata !4072, metadata !DIExpression()), !dbg !4096
  %44 = icmp eq i32 %43, 0, !dbg !4135
  br i1 %44, label %45, label %50, !dbg !4138

45:                                               ; preds = %40
  %46 = load i32, i32* %39, align 4, !dbg !4139
  %47 = shl nuw i32 1, %41, !dbg !4140
  %48 = and i32 %46, %47, !dbg !4141
  %49 = icmp eq i32 %48, 0, !dbg !4142
  call void @llvm.dbg.value(metadata i1 %71, metadata !4087, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4134
  call void @llvm.dbg.value(metadata i1 %72, metadata !4088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4134
  br i1 %49, label %76, label %136, !dbg !4143

50:                                               ; preds = %40, %63
  %51 = phi i32 [ %65, %63 ], [ %43, %40 ]
  %52 = phi i32 [ %64, %63 ], [ 0, %40 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4072, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata i32 %52, metadata !4086, metadata !DIExpression()), !dbg !4134
  %53 = icmp eq i32 %52, 0, !dbg !4144
  %54 = icmp ne i32 %51, %43, !dbg !4145
  %55 = select i1 %53, i1 true, i1 %54, !dbg !4145
  br i1 %55, label %61, label %56, !dbg !4146

56:                                               ; preds = %50
  %57 = load i32, i32* %39, align 4, !dbg !4139
  %58 = shl nuw i32 1, %41, !dbg !4140
  %59 = and i32 %57, %58, !dbg !4141
  %60 = icmp eq i32 %59, 0, !dbg !4142
  call void @llvm.dbg.value(metadata i1 %71, metadata !4087, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4134
  call void @llvm.dbg.value(metadata i1 %72, metadata !4088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4134
  br i1 %60, label %136, label %74, !dbg !4143

61:                                               ; preds = %50
  %62 = call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4147
  br i1 %62, label %63, label %136, !dbg !4150

63:                                               ; preds = %61
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %51, i1 noundef zeroext true) #26, !dbg !4151
  %64 = add i32 %52, 1, !dbg !4152
  call void @llvm.dbg.value(metadata i32 %64, metadata !4086, metadata !DIExpression()), !dbg !4134
  %65 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4153
  call void @llvm.dbg.value(metadata i32 %65, metadata !4072, metadata !DIExpression()), !dbg !4096
  %66 = icmp eq i32 %65, 0, !dbg !4135
  br i1 %66, label %67, label %50, !dbg !4138, !llvm.loop !4154

67:                                               ; preds = %63
  %68 = load i32, i32* %39, align 4, !dbg !4139
  %69 = shl nuw i32 1, %41, !dbg !4140
  %70 = and i32 %68, %69, !dbg !4141
  %71 = icmp eq i32 %70, 0, !dbg !4142
  call void @llvm.dbg.value(metadata i1 %71, metadata !4087, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4134
  %72 = icmp ne i32 %64, 0, !dbg !4156
  call void @llvm.dbg.value(metadata i1 %72, metadata !4088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4134
  %73 = xor i1 %72, %71, !dbg !4157
  br i1 %73, label %74, label %136, !dbg !4143

74:                                               ; preds = %56, %67
  %75 = phi i1 [ %71, %67 ], [ %60, %56 ]
  br i1 %75, label %76, label %79, !dbg !4159

76:                                               ; preds = %45, %74
  %77 = load i32, i32* %42, align 4, !dbg !4161
  %78 = icmp eq i32 %77, 0, !dbg !4162
  br i1 %78, label %79, label %136, !dbg !4163

79:                                               ; preds = %76, %74
  %80 = add nuw nsw i32 %41, 1, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %80, metadata !4081, metadata !DIExpression()), !dbg !4128
  %81 = load i32, i32* %8, align 4, !dbg !4129
  %82 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %81) #26, !dbg !4130
  %83 = icmp slt i32 %41, %82, !dbg !4131
  br i1 %83, label %40, label %84, !dbg !4132, !llvm.loop !4165

84:                                               ; preds = %79, %34
  %85 = phi i32 [ %35, %34 ], [ %81, %79 ], !dbg !4167
  call void @llvm.dbg.value(metadata i32 0, metadata !4089, metadata !DIExpression()), !dbg !4096
  %86 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %86, metadata !4072, metadata !DIExpression()), !dbg !4096
  %87 = icmp ult i32 %86, %85, !dbg !4171
  br i1 %87, label %88, label %99, !dbg !4172

88:                                               ; preds = %84, %95
  %89 = phi i32 [ %90, %95 ], [ 0, %84 ]
  %90 = phi i32 [ %96, %95 ], [ %86, %84 ]
  call void @llvm.dbg.value(metadata i32 %89, metadata !4089, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata i32 %90, metadata !4072, metadata !DIExpression()), !dbg !4096
  %91 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4173
  br i1 %91, label %92, label %136, !dbg !4176

92:                                               ; preds = %88
  %93 = call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4177
  %94 = icmp eq i32 %93, %89, !dbg !4179
  br i1 %94, label %95, label %136, !dbg !4180

95:                                               ; preds = %92
  call void @llvm.dbg.value(metadata i32 %90, metadata !4089, metadata !DIExpression()), !dbg !4096
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %90, i1 noundef zeroext false) #26, !dbg !4181
  %96 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %90) #26, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %96, metadata !4072, metadata !DIExpression()), !dbg !4096
  %97 = load i32, i32* %8, align 4, !dbg !4167
  %98 = icmp ult i32 %96, %97, !dbg !4171
  br i1 %98, label %88, label %99, !dbg !4172, !llvm.loop !4183

99:                                               ; preds = %95, %84
  %100 = phi i32 [ %86, %84 ], [ %96, %95 ], !dbg !4185
  %101 = phi i32 [ %85, %84 ], [ %97, %95 ], !dbg !4167
  %102 = icmp eq i32 %100, %101, !dbg !4186
  br i1 %102, label %103, label %136, !dbg !4188

103:                                              ; preds = %99
  call void @llvm.dbg.value(metadata i32 0, metadata !4090, metadata !DIExpression()), !dbg !4189
  %104 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %100) #26, !dbg !4190
  %105 = icmp slt i32 %104, 0, !dbg !4191
  br i1 %105, label %125, label %106, !dbg !4192

106:                                              ; preds = %103, %120
  %107 = phi i32 [ %121, %120 ], [ %100, %103 ]
  %108 = phi i32 [ %122, %120 ], [ 0, %103 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !4090, metadata !DIExpression()), !dbg !4189
  %109 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %108, i32 0, !dbg !4193
  %110 = load i32, i32* %109, align 4, !dbg !4193
  call void @llvm.dbg.value(metadata i32 %110, metadata !4092, metadata !DIExpression()), !dbg !4194
  call void @llvm.dbg.value(metadata i32 0, metadata !4095, metadata !DIExpression()), !dbg !4194
  %111 = icmp eq i32 %110, 0, !dbg !4195
  br i1 %111, label %120, label %112, !dbg !4197

112:                                              ; preds = %106, %115
  %113 = phi i32 [ %116, %115 ], [ %110, %106 ]
  call void @llvm.dbg.value(metadata i32 poison, metadata !4095, metadata !DIExpression()), !dbg !4194
  call void @llvm.dbg.value(metadata i32 %113, metadata !4072, metadata !DIExpression()), !dbg !4096
  %114 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4198
  br i1 %114, label %136, label %115, !dbg !4203

115:                                              ; preds = %112
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %113, i1 noundef zeroext true) #26, !dbg !4204
  call void @llvm.dbg.value(metadata i32 poison, metadata !4095, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4194
  %116 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4205
  call void @llvm.dbg.value(metadata i32 %116, metadata !4072, metadata !DIExpression()), !dbg !4096
  %117 = icmp eq i32 %116, %110, !dbg !4206
  br i1 %117, label %118, label %112, !dbg !4207, !llvm.loop !4208

118:                                              ; preds = %115
  %119 = load i32, i32* %8, align 4, !dbg !4210
  br label %120, !dbg !4211

120:                                              ; preds = %118, %106
  %121 = phi i32 [ %119, %118 ], [ %107, %106 ], !dbg !4210
  %122 = add nuw nsw i32 %108, 1, !dbg !4211
  call void @llvm.dbg.value(metadata i32 %122, metadata !4090, metadata !DIExpression()), !dbg !4189
  %123 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %121) #26, !dbg !4190
  %124 = icmp slt i32 %108, %123, !dbg !4191
  br i1 %124, label %106, label %125, !dbg !4192, !llvm.loop !4212

125:                                              ; preds = %120, %103
  %126 = phi i32 [ %100, %103 ], [ %121, %120 ], !dbg !4214
  %127 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4217
  call void @llvm.dbg.value(metadata i32 %127, metadata !4072, metadata !DIExpression()), !dbg !4096
  %128 = icmp ult i32 %127, %126, !dbg !4218
  br i1 %128, label %129, label %136, !dbg !4219

129:                                              ; preds = %125, %129
  %130 = phi i32 [ %133, %129 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i32 %130, metadata !4072, metadata !DIExpression()), !dbg !4096
  %131 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4220
  %132 = xor i1 %131, true, !dbg !4222
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef nonnull %6, i32 noundef %130, i1 noundef zeroext %132) #26, !dbg !4223
  %133 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4224
  call void @llvm.dbg.value(metadata i32 %133, metadata !4072, metadata !DIExpression()), !dbg !4096
  %134 = load i32, i32* %8, align 4, !dbg !4214
  %135 = icmp ult i32 %133, %134, !dbg !4218
  br i1 %135, label %129, label %136, !dbg !4219, !llvm.loop !4225

136:                                              ; preds = %76, %67, %45, %56, %61, %88, %92, %112, %129, %125, %99, %20, %29
  %137 = phi i1 [ false, %29 ], [ false, %20 ], [ false, %99 ], [ true, %125 ], [ true, %129 ], [ false, %112 ], [ false, %92 ], [ false, %88 ], [ false, %61 ], [ false, %56 ], [ false, %45 ], [ false, %67 ], [ false, %76 ], !dbg !4096
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4227
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4227
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4227
  br label %138

138:                                              ; preds = %11, %17, %136
  %139 = phi i1 [ %137, %136 ], [ false, %17 ], [ false, %11 ], !dbg !4096
  ret i1 %139, !dbg !4227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4228 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4232, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 %1, metadata !4233, metadata !DIExpression()), !dbg !4234
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4235
  %4 = add i32 %3, %1, !dbg !4236
  ret i32 %4, !dbg !4237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4238 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4242, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32 %1, metadata !4243, metadata !DIExpression()), !dbg !4244
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4245
  %4 = icmp eq i32 %3, 0, !dbg !4245
  br i1 %4, label %33, label %5, !dbg !4248

5:                                                ; preds = %2
  %6 = add i32 %3, %1, !dbg !4249
  %7 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4249
  %8 = load i32, i32* %7, align 4, !dbg !4249
  %9 = icmp ugt i32 %6, %8, !dbg !4249
  br i1 %9, label %33, label %10, !dbg !4252

10:                                               ; preds = %5
  %11 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4253
  br i1 %11, label %12, label %33, !dbg !4256

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4257
  %14 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4257
  %15 = icmp eq i32 %14, %1, !dbg !4257
  br i1 %15, label %16, label %33, !dbg !4260

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4261
  %18 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4261
  %19 = icmp eq i32 %18, %1, !dbg !4261
  br i1 %19, label %20, label %33, !dbg !4264

20:                                               ; preds = %16
  %21 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4265
  br i1 %21, label %32, label %22, !dbg !4267

22:                                               ; preds = %20
  %23 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4268
  br i1 %23, label %24, label %33, !dbg !4272

24:                                               ; preds = %22
  %25 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4273
  br i1 %25, label %26, label %33, !dbg !4276

26:                                               ; preds = %24
  %27 = tail call fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4277, !range !3484
  %28 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %27) #26, !dbg !4277
  br i1 %28, label %29, label %33, !dbg !4282

29:                                               ; preds = %26
  %30 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4283, !range !3484
  %31 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %30) #26, !dbg !4283
  br i1 %31, label %32, label %33, !dbg !4286

32:                                               ; preds = %20, %29
  br label %33, !dbg !4287

33:                                               ; preds = %29, %26, %24, %22, %16, %12, %10, %5, %2, %32
  %34 = phi i1 [ true, %32 ], [ false, %2 ], [ false, %5 ], [ false, %10 ], [ false, %12 ], [ false, %16 ], [ false, %22 ], [ false, %24 ], [ false, %26 ], [ false, %29 ], !dbg !4244
  ret i1 %34, !dbg !4288
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* nocapture noundef %1, i32* nocapture noundef %2) unnamed_addr #13 !dbg !4289 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4293, metadata !DIExpression()), !dbg !4297
  call void @llvm.dbg.value(metadata i32* %1, metadata !4294, metadata !DIExpression()), !dbg !4297
  call void @llvm.dbg.value(metadata i32* %2, metadata !4295, metadata !DIExpression()), !dbg !4297
  store i32 0, i32* %1, align 4, !dbg !4298
  store i32 0, i32* %2, align 4, !dbg !4299
  %4 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4300
  call void @llvm.dbg.value(metadata i32 %4, metadata !4296, metadata !DIExpression()), !dbg !4297
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1
  call void @llvm.dbg.value(metadata i32 %4, metadata !4296, metadata !DIExpression()), !dbg !4297
  %6 = load i32, i32* %5, align 4, !dbg !4302
  %7 = icmp ult i32 %4, %6, !dbg !4304
  br i1 %7, label %8, label %19, !dbg !4305

8:                                                ; preds = %3, %8
  %9 = phi i32 [ %16, %8 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4296, metadata !DIExpression()), !dbg !4297
  %10 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4306
  %11 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4309, !range !3285
  %12 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef nonnull %0, i32 noundef %11) #26, !dbg !4309
  %13 = select i1 %10, i32* %1, i32* %2, !dbg !4309
  %14 = load i32, i32* %13, align 4, !dbg !4309
  %15 = add i32 %14, %12, !dbg !4309
  store i32 %15, i32* %13, align 4, !dbg !4309
  %16 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %9) #26, !dbg !4310
  call void @llvm.dbg.value(metadata i32 %16, metadata !4296, metadata !DIExpression()), !dbg !4297
  %17 = load i32, i32* %5, align 4, !dbg !4302
  %18 = icmp ult i32 %16, %17, !dbg !4304
  br i1 %18, label %8, label %19, !dbg !4305, !llvm.loop !4311

19:                                               ; preds = %8, %3
  ret void, !dbg !4313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef readonly %0, %struct.sys_memory_stats* noundef writeonly %1) local_unnamed_addr #7 !dbg !4314 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4319, metadata !DIExpression()), !dbg !4321
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !4320, metadata !DIExpression()), !dbg !4321
  %3 = icmp eq %struct.sys_heap* %0, null, !dbg !4322
  %4 = icmp eq %struct.sys_memory_stats* %1, null
  %5 = or i1 %3, %4, !dbg !4324
  br i1 %5, label %20, label %6, !dbg !4324

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4325
  %8 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4325
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %8, i32 0, i32 3, !dbg !4326
  %10 = load i32, i32* %9, align 4, !dbg !4326
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !4327
  store i32 %10, i32* %11, align 4, !dbg !4328
  %12 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4329
  %13 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %12, i32 0, i32 4, !dbg !4330
  %14 = load i32, i32* %13, align 4, !dbg !4330
  %15 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !4331
  store i32 %14, i32* %15, align 4, !dbg !4332
  %16 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4333
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %16, i32 0, i32 5, !dbg !4334
  %18 = load i32, i32* %17, align 4, !dbg !4334
  %19 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !4335
  store i32 %18, i32* %19, align 4, !dbg !4336
  br label %20, !dbg !4337

20:                                               ; preds = %2, %6
  %21 = phi i32 [ 0, %6 ], [ -22, %2 ], !dbg !4321
  ret i32 %21, !dbg !4338
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx.14(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !4339 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4343, metadata !DIExpression()), !dbg !4346
  call void @llvm.dbg.value(metadata i32 %1, metadata !4344, metadata !DIExpression()), !dbg !4346
  call void @llvm.dbg.value(metadata i32 %1, metadata !4345, metadata !DIExpression()), !dbg !4346
  %3 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4347, !range !3454
  %4 = sub nsw i32 31, %3, !dbg !4348
  ret i32 %4, !dbg !4349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used.15(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !4350 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4354, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.value(metadata i32 %1, metadata !4355, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.value(metadata i1 %2, metadata !4356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4359
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4360
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4357, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4358, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4359
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4361
  %6 = bitcast i8* %5 to i16*, !dbg !4361
  %7 = load i16, i16* %6, align 2, !dbg !4361
  %8 = and i16 %7, -2, !dbg !4365
  %9 = zext i1 %2 to i16, !dbg !4365
  %10 = or i16 %8, %9, !dbg !4365
  store i16 %10, i16* %6, align 2, !dbg !4361
  ret void, !dbg !4366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4367 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4369, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i32 %1, metadata !4370, metadata !DIExpression()), !dbg !4371
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4372
  ret i32 %3, !dbg !4373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4374 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4376, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata i32 %1, metadata !4377, metadata !DIExpression()), !dbg !4378
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4379
  %4 = and i32 %3, 1, !dbg !4380
  %5 = icmp ne i32 %4, 0, !dbg !4379
  ret i1 %5, !dbg !4381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4382 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4384, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.value(metadata i32 %1, metadata !4385, metadata !DIExpression()), !dbg !4386
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4387
  %4 = sub i32 %1, %3, !dbg !4388
  ret i32 %4, !dbg !4389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field.19(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4390 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4394, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 %1, metadata !4395, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 %2, metadata !4396, metadata !DIExpression()), !dbg !4399
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4400
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4397, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4398, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4399
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4398, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4399
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4401
  call void @llvm.dbg.value(metadata i8* %5, metadata !4398, metadata !DIExpression()), !dbg !4399
  %6 = bitcast i8* %5 to i16*, !dbg !4402
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4405
  %8 = load i16, i16* %7, align 2, !dbg !4405
  %9 = zext i16 %8 to i32, !dbg !4405
  ret i32 %9, !dbg !4406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4407 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4411, metadata !DIExpression()), !dbg !4412
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4413
  ret %struct.chunk_unit_t* %2, !dbg !4414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4415 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4419, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.value(metadata i32 %1, metadata !4420, metadata !DIExpression()), !dbg !4421
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4422
  %4 = lshr i32 %3, 1, !dbg !4423
  ret i32 %4, !dbg !4424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4425 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4429, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i32 %1, metadata !4430, metadata !DIExpression()), !dbg !4431
  %3 = shl i32 %1, 3, !dbg !4432
  %4 = add i32 %3, -4, !dbg !4433
  ret i32 %4, !dbg !4434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4435 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4437, metadata !DIExpression()), !dbg !4439
  call void @llvm.dbg.value(metadata i32 %1, metadata !4438, metadata !DIExpression()), !dbg !4439
  %3 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4440
  %4 = icmp ugt i32 %3, %1, !dbg !4440
  br i1 %4, label %12, label %5, !dbg !4443

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4444
  %7 = load i32, i32* %6, align 4, !dbg !4444
  %8 = icmp ugt i32 %7, %1, !dbg !4444
  br i1 %8, label %9, label %12, !dbg !4447

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4448
  %11 = icmp ult i32 %10, %7, !dbg !4448
  br label %12, !dbg !4439

12:                                               ; preds = %9, %5, %2
  %13 = phi i1 [ false, %2 ], [ false, %5 ], [ %11, %9 ], !dbg !4439
  ret i1 %13, !dbg !4451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4452 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4454, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i32 %1, metadata !4455, metadata !DIExpression()), !dbg !4456
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4457
  ret i32 %3, !dbg !4458
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_stress(i8* (i8*, i32)* noundef %0, void (i8*, i8*)* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4, i8* noundef %5, i32 noundef %6, i32 noundef %7, %struct.z_heap_stress_result* nocapture noundef %8) local_unnamed_addr #1 !dbg !4459 {
  %10 = alloca %struct.z_heap_stress_rec, align 4
  call void @llvm.dbg.value(metadata i8* (i8*, i32)* %0, metadata !4476, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %1, metadata !4477, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i8* %2, metadata !4478, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i32 %3, metadata !4479, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i32 %4, metadata !4480, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i8* %5, metadata !4481, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i32 %6, metadata !4482, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata i32 %7, metadata !4483, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_result* %8, metadata !4484, metadata !DIExpression()), !dbg !4514
  %11 = bitcast %struct.z_heap_stress_rec* %10 to i8*, !dbg !4515
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4515
  call void @llvm.dbg.declare(metadata %struct.z_heap_stress_rec* %10, metadata !4485, metadata !DIExpression()), !dbg !4516
  %12 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 0, !dbg !4517
  store i8* (i8*, i32)* %0, i8* (i8*, i32)** %12, align 4, !dbg !4517
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 1, !dbg !4517
  store void (i8*, i8*)* %1, void (i8*, i8*)** %13, align 4, !dbg !4517
  %14 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 2, !dbg !4517
  store i8* %2, i8** %14, align 4, !dbg !4517
  %15 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 3, !dbg !4517
  store i32 %3, i32* %15, align 4, !dbg !4517
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 4, !dbg !4517
  %17 = bitcast %struct.z_heap_stress_block** %16 to i8**, !dbg !4517
  store i8* %5, i8** %17, align 4, !dbg !4517
  %18 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 5, !dbg !4517
  %19 = lshr i32 %6, 3, !dbg !4518
  store i32 %19, i32* %18, align 4, !dbg !4517
  %20 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 6, !dbg !4517
  store i32 0, i32* %20, align 4, !dbg !4517
  %21 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 7, !dbg !4517
  store i32 0, i32* %21, align 4, !dbg !4517
  %22 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 8, !dbg !4517
  store i32 %7, i32* %22, align 4, !dbg !4517
  %23 = bitcast %struct.z_heap_stress_result* %8 to i8*, !dbg !4519
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i32 24, i1 false), !dbg !4519
  call void @llvm.dbg.value(metadata i32 0, metadata !4502, metadata !DIExpression()), !dbg !4520
  %24 = icmp eq i32 %4, 0, !dbg !4521
  %25 = bitcast i8* %5 to %struct.z_heap_stress_block*, !dbg !4522
  br i1 %24, label %31, label %26, !dbg !4522

26:                                               ; preds = %9
  %27 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 2
  %28 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 0
  %29 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 1
  %30 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 3
  br label %32, !dbg !4522

31:                                               ; preds = %65, %9
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4523
  ret void, !dbg !4523

32:                                               ; preds = %26, %65
  %33 = phi i32 [ 0, %26 ], [ %66, %65 ]
  %34 = phi i32 [ 0, %26 ], [ %67, %65 ]
  %35 = phi i32 [ 0, %26 ], [ %71, %65 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !4502, metadata !DIExpression()), !dbg !4520
  %36 = call fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4524
  br i1 %36, label %37, label %50, !dbg !4525

37:                                               ; preds = %32
  %38 = tail call fastcc i32 @rand_alloc_size() #26, !dbg !4526
  call void @llvm.dbg.value(metadata i32 %38, metadata !4504, metadata !DIExpression()), !dbg !4527
  %39 = tail call i8* %0(i8* noundef %2, i32 noundef %38) #25, !dbg !4528
  call void @llvm.dbg.value(metadata i8* %39, metadata !4509, metadata !DIExpression()), !dbg !4527
  %40 = load i32, i32* %28, align 8, !dbg !4529
  %41 = add i32 %40, 1, !dbg !4529
  store i32 %41, i32* %28, align 8, !dbg !4529
  %42 = icmp eq i8* %39, null, !dbg !4530
  br i1 %42, label %65, label %43, !dbg !4532

43:                                               ; preds = %37
  %44 = load i32, i32* %29, align 4, !dbg !4533
  %45 = add i32 %44, 1, !dbg !4533
  store i32 %45, i32* %29, align 4, !dbg !4533
  %46 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 0, !dbg !4535
  store i8* %39, i8** %46, align 4, !dbg !4536
  %47 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 1, !dbg !4537
  store i32 %38, i32* %47, align 4, !dbg !4538
  %48 = add i32 %34, 1, !dbg !4539
  store i32 %48, i32* %20, align 4, !dbg !4539
  %49 = add i32 %33, %38, !dbg !4540
  store i32 %49, i32* %21, align 4, !dbg !4540
  br label %65, !dbg !4541

50:                                               ; preds = %32
  %51 = call fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4542
  call void @llvm.dbg.value(metadata i32 %51, metadata !4510, metadata !DIExpression()), !dbg !4543
  %52 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 0, !dbg !4544
  %53 = load i8*, i8** %52, align 4, !dbg !4544
  call void @llvm.dbg.value(metadata i8* %53, metadata !4512, metadata !DIExpression()), !dbg !4543
  %54 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 1, !dbg !4545
  %55 = load i32, i32* %54, align 4, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %55, metadata !4513, metadata !DIExpression()), !dbg !4543
  %56 = load i32, i32* %27, align 8, !dbg !4546
  %57 = add i32 %56, 1, !dbg !4546
  store i32 %57, i32* %27, align 8, !dbg !4546
  %58 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, !dbg !4547
  %59 = add i32 %34, -1, !dbg !4548
  %60 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %59, !dbg !4549
  %61 = bitcast %struct.z_heap_stress_block* %60 to i64*, !dbg !4549
  %62 = bitcast %struct.z_heap_stress_block* %58 to i64*, !dbg !4549
  %63 = load i64, i64* %61, align 4, !dbg !4549
  store i64 %63, i64* %62, align 4, !dbg !4549
  store i32 %59, i32* %20, align 4, !dbg !4550
  %64 = sub i32 %33, %55, !dbg !4551
  store i32 %64, i32* %21, align 4, !dbg !4551
  tail call void %1(i8* noundef %2, i8* noundef %53) #25, !dbg !4552
  br label %65

65:                                               ; preds = %37, %43, %50
  %66 = phi i32 [ %33, %37 ], [ %49, %43 ], [ %64, %50 ], !dbg !4553
  %67 = phi i32 [ %34, %37 ], [ %48, %43 ], [ %59, %50 ]
  %68 = zext i32 %66 to i64, !dbg !4554
  %69 = load i64, i64* %30, align 8, !dbg !4555
  %70 = add i64 %69, %68, !dbg !4555
  store i64 %70, i64* %30, align 8, !dbg !4555
  %71 = add nuw i32 %35, 1, !dbg !4556
  call void @llvm.dbg.value(metadata i32 %71, metadata !4502, metadata !DIExpression()), !dbg !4520
  %72 = icmp eq i32 %71, %4, !dbg !4521
  br i1 %72, label %31, label %32, !dbg !4522, !llvm.loop !4557
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4559 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4564, metadata !DIExpression()), !dbg !4571
  %2 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4572
  %3 = load i32, i32* %2, align 4, !dbg !4572
  %4 = icmp eq i32 %3, 0, !dbg !4573
  br i1 %4, label %26, label %5, !dbg !4574

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 5, !dbg !4575
  %7 = load i32, i32* %6, align 4, !dbg !4575
  %8 = icmp ult i32 %3, %7, !dbg !4576
  br i1 %8, label %9, label %26, !dbg !4577

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 7, !dbg !4578
  %11 = load i32, i32* %10, align 4, !dbg !4578
  %12 = mul i32 %11, 100, !dbg !4579
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 3, !dbg !4580
  %14 = load i32, i32* %13, align 4, !dbg !4580
  %15 = udiv i32 %12, %14, !dbg !4581
  call void @llvm.dbg.value(metadata i32 %15, metadata !4565, metadata !DIExpression()), !dbg !4582
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 8, !dbg !4583
  %17 = load i32, i32* %16, align 4, !dbg !4583
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata i32 -1, metadata !4570, metadata !DIExpression()), !dbg !4582
  %18 = icmp ult i32 %15, %17, !dbg !4584
  br i1 %18, label %19, label %22, !dbg !4586

19:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %17, metadata !4569, metadata !DIExpression()), !dbg !4582
  %20 = udiv i32 -2147483648, %17, !dbg !4587
  %21 = mul i32 %20, %15, !dbg !4589
  call void @llvm.dbg.value(metadata i32 %21, metadata !4570, metadata !DIExpression()), !dbg !4582
  br label %22, !dbg !4590

22:                                               ; preds = %19, %9
  %23 = phi i32 [ %21, %19 ], [ -1, %9 ], !dbg !4582
  call void @llvm.dbg.value(metadata i32 %23, metadata !4570, metadata !DIExpression()), !dbg !4582
  %24 = tail call fastcc i32 @rand32() #26, !dbg !4591
  %25 = icmp ugt i32 %24, %23, !dbg !4592
  br label %26

26:                                               ; preds = %5, %1, %22
  %27 = phi i1 [ %25, %22 ], [ true, %1 ], [ false, %5 ], !dbg !4593
  ret i1 %27, !dbg !4594
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc i32 @rand_alloc_size() unnamed_addr #10 !dbg !4595 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* undef, metadata !4599, metadata !DIExpression()), !dbg !4601
  %1 = tail call fastcc i32 @rand32() #26, !dbg !4602
  %2 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4603, !range !3454
  call void @llvm.dbg.value(metadata i32 %2, metadata !4600, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !4601
  %3 = tail call fastcc i32 @rand32() #26, !dbg !4604
  %4 = shl i32 16, %2, !dbg !4605
  %5 = add i32 %4, -1, !dbg !4605
  %6 = and i32 %5, %3, !dbg !4606
  ret i32 %6, !dbg !4607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4608 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4610, metadata !DIExpression()), !dbg !4611
  %2 = tail call fastcc i32 @rand32() #26, !dbg !4612
  %3 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4613
  %4 = load i32, i32* %3, align 4, !dbg !4613
  %5 = urem i32 %2, %4, !dbg !4614
  ret i32 %5, !dbg !4615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand32() unnamed_addr #7 !dbg !133 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !4616
  %2 = mul i64 %1, 2862933555777941757, !dbg !4617
  %3 = add i64 %2, 3037000493, !dbg !4618
  store i64 %3, i64* @rand32.state, align 8, !dbg !4619
  %4 = lshr i64 %3, 32, !dbg !4620
  %5 = trunc i64 %4 to i32, !dbg !4621
  ret i32 %5, !dbg !4622
}

; Function Attrs: noinline nounwind optsize
define dso_local void @heap_print_info(%struct.z_heap* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4623 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4627, metadata !DIExpression()), !dbg !4648
  call void @llvm.dbg.value(metadata i1 %1, metadata !4628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4648
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4649
  %6 = load i32, i32* %5, align 4, !dbg !4649
  %7 = tail call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef %0, i32 noundef %6) #26, !dbg !4650
  %8 = add i32 %7, 1, !dbg !4651
  call void @llvm.dbg.value(metadata i32 %8, metadata !4630, metadata !DIExpression()), !dbg !4648
  %9 = bitcast i32* %3 to i8*, !dbg !4652
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4652
  %10 = bitcast i32* %4 to i8*, !dbg !4652
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4652
  %11 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4653
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i32 0, i32 0), %struct.chunk_unit_t* noundef %11, i32 noundef %6, i32 noundef %8) #25, !dbg !4654
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([187 x i8], [187 x i8]* @.str.1.25, i32 0, i32 0)) #25, !dbg !4655
  call void @llvm.dbg.value(metadata i32 0, metadata !4629, metadata !DIExpression()), !dbg !4648
  %12 = icmp slt i32 %7, 0, !dbg !4656
  br i1 %12, label %34, label %13, !dbg !4657

13:                                               ; preds = %2, %31
  %14 = phi i32 [ %32, %31 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4629, metadata !DIExpression()), !dbg !4648
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %14, i32 0, !dbg !4658
  %16 = load i32, i32* %15, align 4, !dbg !4658
  call void @llvm.dbg.value(metadata i32 %16, metadata !4635, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata i32 0, metadata !4639, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata i32 0, metadata !4640, metadata !DIExpression()), !dbg !4659
  %17 = icmp eq i32 %16, 0, !dbg !4660
  br i1 %17, label %31, label %18, !dbg !4661

18:                                               ; preds = %13, %18
  %19 = phi i32 [ %25, %18 ], [ 0, %13 ], !dbg !4659
  %20 = phi i32 [ %22, %18 ], [ 0, %13 ], !dbg !4659
  %21 = phi i32 [ %26, %18 ], [ %16, %13 ], !dbg !4662
  call void @llvm.dbg.value(metadata i32 %21, metadata !4641, metadata !DIExpression()), !dbg !4662
  call void @llvm.dbg.value(metadata i32 %20, metadata !4640, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata i32 %19, metadata !4639, metadata !DIExpression()), !dbg !4659
  %22 = add nuw nsw i32 %20, 1, !dbg !4663
  call void @llvm.dbg.value(metadata i32 %22, metadata !4640, metadata !DIExpression()), !dbg !4659
  %23 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4665
  %24 = icmp ugt i32 %19, %23, !dbg !4665
  %25 = select i1 %24, i32 %19, i32 %23, !dbg !4665
  call void @llvm.dbg.value(metadata i32 %25, metadata !4639, metadata !DIExpression()), !dbg !4659
  %26 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4666
  call void @llvm.dbg.value(metadata i32 %26, metadata !4641, metadata !DIExpression()), !dbg !4662
  %27 = icmp eq i32 %26, %16, !dbg !4667
  br i1 %27, label %28, label %18, !dbg !4668, !llvm.loop !4669

28:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %22, metadata !4640, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata i32 %25, metadata !4639, metadata !DIExpression()), !dbg !4659
  %29 = shl nuw i32 1, %14, !dbg !4672
  %30 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef %0, i32 noundef %25) #26, !dbg !4675, !range !3706
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), i32 noundef %14, i32 noundef %29, i32 noundef %22, i32 noundef %25, i32 noundef %30) #25, !dbg !4676
  br label %31, !dbg !4677

31:                                               ; preds = %13, %28
  %32 = add nuw i32 %14, 1, !dbg !4678
  call void @llvm.dbg.value(metadata i32 %32, metadata !4629, metadata !DIExpression()), !dbg !4648
  %33 = icmp eq i32 %14, %7, !dbg !4656
  br i1 %33, label %34, label %13, !dbg !4657, !llvm.loop !4679

34:                                               ; preds = %31, %2
  br i1 %1, label %35, label %47, !dbg !4681

35:                                               ; preds = %34
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !4682
  call void @llvm.dbg.value(metadata i32 0, metadata !4644, metadata !DIExpression()), !dbg !4683
  br label %36, !dbg !4684

36:                                               ; preds = %45, %35
  %37 = phi i32 [ 0, %35 ], [ %46, %45 ], !dbg !4683
  call void @llvm.dbg.value(metadata i32 %37, metadata !4644, metadata !DIExpression()), !dbg !4683
  %38 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4685
  %39 = select i1 %38, i32 42, i32 45, !dbg !4685
  %40 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4688
  %41 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4689
  %42 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4690
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i32 noundef %37, i32 noundef %39, i32 noundef %40, i32 noundef %41, i32 noundef %42) #25, !dbg !4691
  %43 = load i32, i32* %5, align 4, !dbg !4692
  %44 = icmp eq i32 %37, %43, !dbg !4694
  br i1 %44, label %47, label %45, !dbg !4695

45:                                               ; preds = %36
  %46 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %37) #26, !dbg !4696
  call void @llvm.dbg.value(metadata i32 %46, metadata !4644, metadata !DIExpression()), !dbg !4683
  br label %36, !dbg !4697, !llvm.loop !4698

47:                                               ; preds = %36, %34
  call void @llvm.dbg.value(metadata i32* %3, metadata !4631, metadata !DIExpression(DW_OP_deref)), !dbg !4648
  call void @llvm.dbg.value(metadata i32* %4, metadata !4632, metadata !DIExpression(DW_OP_deref)), !dbg !4648
  call fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* noundef nonnull %4, i32* noundef nonnull %3) #26, !dbg !4701
  %48 = load i32, i32* %5, align 4, !dbg !4702
  %49 = shl i32 %48, 3, !dbg !4703
  %50 = or i32 %49, 4, !dbg !4704
  call void @llvm.dbg.value(metadata i32 %50, metadata !4633, metadata !DIExpression()), !dbg !4648
  %51 = load i32, i32* %3, align 4, !dbg !4705
  call void @llvm.dbg.value(metadata i32 %51, metadata !4631, metadata !DIExpression()), !dbg !4648
  %52 = load i32, i32* %4, align 4, !dbg !4706
  call void @llvm.dbg.value(metadata i32 %52, metadata !4632, metadata !DIExpression()), !dbg !4648
  %53 = add i32 %52, %51, !dbg !4707
  %54 = sub i32 %50, %53, !dbg !4707
  call void @llvm.dbg.value(metadata i32 %54, metadata !4634, metadata !DIExpression()), !dbg !4648
  %55 = mul i32 %54, 1000, !dbg !4708
  %56 = lshr exact i32 %50, 1, !dbg !4709
  %57 = add i32 %55, %56, !dbg !4710
  %58 = udiv i32 %57, %50, !dbg !4711
  %59 = freeze i32 %58
  %60 = udiv i32 %59, 10, !dbg !4712
  %61 = mul i32 %60, 10
  %62 = sub i32 %59, %61
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.5, i32 0, i32 0), i32 noundef %51, i32 noundef %52, i32 noundef %54, i32 noundef %60, i32 noundef %62) #25, !dbg !4713
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4714
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4714
  ret void, !dbg !4714
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_print_info(%struct.sys_heap* nocapture noundef readonly %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4715 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4719, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.value(metadata i1 %1, metadata !4720, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4721
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4722
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4722
  tail call void @heap_print_info(%struct.z_heap* noundef %4, i1 noundef zeroext %1) #26, !dbg !4723
  ret void, !dbg !4724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_reset_max(%struct.sys_heap* noundef readonly %0) local_unnamed_addr #7 !dbg !4725 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4729, metadata !DIExpression()), !dbg !4730
  %2 = icmp eq %struct.sys_heap* %0, null, !dbg !4731
  br i1 %2, label %9, label %3, !dbg !4733

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4734
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4734
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 4, !dbg !4735
  %7 = load i32, i32* %6, align 4, !dbg !4735
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 5, !dbg !4736
  store i32 %7, i32* %8, align 4, !dbg !4737
  br label %9, !dbg !4738

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -22, %1 ], !dbg !4730
  ret i32 %10, !dbg !4739
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4740 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4753, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4750, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %1, metadata !4751, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %2, metadata !4752, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %4, metadata !4754, metadata !DIExpression()), !dbg !4881
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4882
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4882
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4755, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata i32 0, metadata !4759, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i1 undef, metadata !4761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4881
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4884

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4884

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4885
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4753, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %30, metadata !4752, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %29, metadata !4759, metadata !DIExpression()), !dbg !4881
  %31 = load i8, i8* %30, align 1, !dbg !4886
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4884

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4886
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4887
  call void @llvm.dbg.value(metadata i8* %34, metadata !4752, metadata !DIExpression()), !dbg !4881
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4887
  call void @llvm.dbg.value(metadata i32 %35, metadata !4763, metadata !DIExpression()), !dbg !4888
  %36 = icmp slt i32 %35, 0, !dbg !4889
  %37 = add i32 %29, 1, !dbg !4887
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4881
  br i1 %36, label %365, label %28, !llvm.loop !4891

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4893
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4768, metadata !DIExpression()), !dbg !4894
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4894
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4813, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4816, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i8* %30, metadata !4819, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i32 -1, metadata !4820, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i32 -1, metadata !4821, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i8* null, metadata !4822, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i8* %14, metadata !4823, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i8 0, metadata !4824, metadata !DIExpression()), !dbg !4895
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4896
  call void @llvm.dbg.value(metadata i8* %39, metadata !4752, metadata !DIExpression()), !dbg !4881
  %40 = load i24, i24* %15, align 8, !dbg !4897
  %41 = and i24 %40, 256, !dbg !4897
  %42 = icmp eq i24 %41, 0, !dbg !4897
  br i1 %42, label %51, label %43, !dbg !4899

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4900
  call void @llvm.dbg.value(metadata i8* %44, metadata !4753, metadata !DIExpression()), !dbg !4881
  %45 = bitcast i8* %27 to i32*, !dbg !4900
  %46 = load i32, i32* %45, align 4, !dbg !4900
  call void @llvm.dbg.value(metadata i32 %46, metadata !4820, metadata !DIExpression()), !dbg !4895
  %47 = icmp slt i32 %46, 0, !dbg !4902
  br i1 %47, label %48, label %56, !dbg !4904

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4905
  store i24 %49, i24* %15, align 8, !dbg !4905
  %50 = sub nsw i32 0, %46, !dbg !4907
  call void @llvm.dbg.value(metadata i32 %50, metadata !4820, metadata !DIExpression()), !dbg !4895
  br label %56, !dbg !4908

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4909
  %53 = icmp eq i24 %52, 0, !dbg !4909
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4911
  br label %56, !dbg !4911

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4912
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4895
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4753, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %58, metadata !4820, metadata !DIExpression()), !dbg !4895
  %60 = and i24 %57, 1024, !dbg !4912
  %61 = icmp eq i24 %60, 0, !dbg !4912
  br i1 %61, label %69, label %62, !dbg !4913

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4914
  call void @llvm.dbg.value(metadata i8* %63, metadata !4753, metadata !DIExpression()), !dbg !4881
  %64 = bitcast i8* %59 to i32*, !dbg !4914
  %65 = load i32, i32* %64, align 4, !dbg !4914
  call void @llvm.dbg.value(metadata i32 %65, metadata !4825, metadata !DIExpression()), !dbg !4915
  %66 = icmp slt i32 %65, 0, !dbg !4916
  br i1 %66, label %67, label %74, !dbg !4918

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4919
  store i24 %68, i24* %15, align 8, !dbg !4919
  br label %74, !dbg !4921

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4922
  %71 = icmp eq i24 %70, 0, !dbg !4922
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4924
  br label %74, !dbg !4924

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4925
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4895
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4895
  call void @llvm.dbg.value(metadata i8* %77, metadata !4753, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %76, metadata !4821, metadata !DIExpression()), !dbg !4895
  store i32 0, i32* %16, align 4, !dbg !4926
  store i32 0, i32* %17, align 8, !dbg !4927
  %78 = lshr i24 %75, 16, !dbg !4925
  call void @llvm.dbg.value(metadata i24 %78, metadata !4828, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4895
  %79 = lshr i24 %75, 11, !dbg !4928
  %80 = and i24 %79, 15, !dbg !4928
  %81 = zext i24 %80 to i32, !dbg !4928
  call void @llvm.dbg.value(metadata i32 %81, metadata !4829, metadata !DIExpression()), !dbg !4895
  %82 = trunc i24 %78 to i3, !dbg !4929
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4929

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4930

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4933
  call void @llvm.dbg.value(metadata i8* %85, metadata !4753, metadata !DIExpression()), !dbg !4881
  %86 = bitcast i8* %77 to i32*, !dbg !4933
  %87 = load i32, i32* %86, align 4, !dbg !4933
  %88 = sext i32 %87 to i64, !dbg !4933
  store i64 %88, i64* %20, align 8, !dbg !4935
  br label %115, !dbg !4936

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4937
  call void @llvm.dbg.value(metadata i8* %90, metadata !4753, metadata !DIExpression()), !dbg !4881
  %91 = bitcast i8* %77 to i32*, !dbg !4937
  %92 = load i32, i32* %91, align 4, !dbg !4937
  %93 = sext i32 %92 to i64, !dbg !4937
  store i64 %93, i64* %20, align 8, !dbg !4940
  br label %115, !dbg !4941

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4942
  %96 = add i32 %95, 7, !dbg !4942
  %97 = and i32 %96, -8, !dbg !4942
  %98 = inttoptr i32 %97 to i8*, !dbg !4942
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4942
  call void @llvm.dbg.value(metadata i8* %99, metadata !4753, metadata !DIExpression()), !dbg !4881
  %100 = inttoptr i32 %97 to i64*, !dbg !4942
  %101 = load i64, i64* %100, align 8, !dbg !4942
  store i64 %101, i64* %20, align 8, !dbg !4943
  br label %115, !dbg !4944

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4945
  %104 = add i32 %103, 7, !dbg !4945
  %105 = and i32 %104, -8, !dbg !4945
  %106 = inttoptr i32 %105 to i8*, !dbg !4945
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4945
  call void @llvm.dbg.value(metadata i8* %107, metadata !4753, metadata !DIExpression()), !dbg !4881
  %108 = inttoptr i32 %105 to i64*, !dbg !4945
  %109 = load i64, i64* %108, align 8, !dbg !4945
  store i64 %109, i64* %20, align 8, !dbg !4946
  br label %115, !dbg !4947

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4948
  call void @llvm.dbg.value(metadata i8* %111, metadata !4753, metadata !DIExpression()), !dbg !4881
  %112 = bitcast i8* %77 to i32*, !dbg !4948
  %113 = load i32, i32* %112, align 4, !dbg !4948
  %114 = sext i32 %113 to i64, !dbg !4949
  store i64 %114, i64* %20, align 8, !dbg !4950
  br label %115, !dbg !4951

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4952
  call void @llvm.dbg.value(metadata i8* %117, metadata !4753, metadata !DIExpression()), !dbg !4881
  %118 = trunc i24 %79 to i4, !dbg !4953
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4953

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4954
  %121 = ashr exact i64 %120, 56, !dbg !4954
  store i64 %121, i64* %20, align 8, !dbg !4957
  br label %177, !dbg !4958

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4959
  %124 = ashr exact i64 %123, 48, !dbg !4959
  store i64 %124, i64* %20, align 8, !dbg !4962
  br label %177, !dbg !4963

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4964

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4967
  call void @llvm.dbg.value(metadata i8* %127, metadata !4753, metadata !DIExpression()), !dbg !4881
  %128 = bitcast i8* %77 to i32*, !dbg !4967
  %129 = load i32, i32* %128, align 4, !dbg !4967
  %130 = zext i32 %129 to i64, !dbg !4967
  store i64 %130, i64* %20, align 8, !dbg !4969
  br label %157, !dbg !4970

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4971
  call void @llvm.dbg.value(metadata i8* %132, metadata !4753, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %132, metadata !4753, metadata !DIExpression()), !dbg !4881
  %133 = bitcast i8* %77 to i32*, !dbg !4971
  %134 = load i32, i32* %133, align 4, !dbg !4971
  %135 = zext i32 %134 to i64, !dbg !4971
  store i64 %135, i64* %20, align 8, !dbg !4971
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4973
  %138 = add i32 %137, 7, !dbg !4973
  %139 = and i32 %138, -8, !dbg !4973
  %140 = inttoptr i32 %139 to i8*, !dbg !4973
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4973
  call void @llvm.dbg.value(metadata i8* %141, metadata !4753, metadata !DIExpression()), !dbg !4881
  %142 = inttoptr i32 %139 to i64*, !dbg !4973
  %143 = load i64, i64* %142, align 8, !dbg !4973
  store i64 %143, i64* %20, align 8, !dbg !4974
  br label %157, !dbg !4975

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4976
  %146 = add i32 %145, 7, !dbg !4976
  %147 = and i32 %146, -8, !dbg !4976
  %148 = inttoptr i32 %147 to i8*, !dbg !4976
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4976
  call void @llvm.dbg.value(metadata i8* %149, metadata !4753, metadata !DIExpression()), !dbg !4881
  %150 = inttoptr i32 %147 to i64*, !dbg !4976
  %151 = load i64, i64* %150, align 8, !dbg !4976
  store i64 %151, i64* %20, align 8, !dbg !4977
  br label %157, !dbg !4978

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4979
  call void @llvm.dbg.value(metadata i8* %153, metadata !4753, metadata !DIExpression()), !dbg !4881
  %154 = bitcast i8* %77 to i32*, !dbg !4979
  %155 = load i32, i32* %154, align 4, !dbg !4979
  %156 = zext i32 %155 to i64, !dbg !4980
  store i64 %156, i64* %20, align 8, !dbg !4981
  br label %157, !dbg !4982

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4983
  call void @llvm.dbg.value(metadata i8* %159, metadata !4753, metadata !DIExpression()), !dbg !4881
  %160 = trunc i24 %79 to i4, !dbg !4984
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4984

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4985
  store i64 %162, i64* %20, align 8, !dbg !4988
  br label %177, !dbg !4989

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4990
  store i64 %164, i64* %20, align 8, !dbg !4993
  br label %177, !dbg !4994

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4995
  %167 = add i32 %166, 7, !dbg !4995
  %168 = and i32 %167, -8, !dbg !4995
  %169 = inttoptr i32 %168 to i8*, !dbg !4995
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4995
  call void @llvm.dbg.value(metadata i8* %170, metadata !4753, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %170, metadata !4753, metadata !DIExpression()), !dbg !4881
  %171 = inttoptr i32 %168 to double*, !dbg !4995
  %172 = load double, double* %171, align 8, !dbg !4995
  store double %172, double* %19, align 8, !dbg !4995
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4999
  call void @llvm.dbg.value(metadata i8* %174, metadata !4753, metadata !DIExpression()), !dbg !4881
  %175 = bitcast i8* %77 to i8**, !dbg !4999
  %176 = load i8*, i8** %175, align 4, !dbg !4999
  store i8* %176, i8** %18, align 8, !dbg !5002
  br label %177, !dbg !5003

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4895
  call void @llvm.dbg.value(metadata i8* %178, metadata !4753, metadata !DIExpression()), !dbg !4881
  %179 = and i24 %75, 3, !dbg !5004
  %180 = icmp eq i24 %179, 0, !dbg !5004
  br i1 %180, label %185, label %181, !dbg !5004

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %182, metadata !4830, metadata !DIExpression()), !dbg !5006
  %183 = icmp slt i32 %182, 0, !dbg !5007
  %184 = add i32 %182, %29, !dbg !5005
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4881
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5009
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5010

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5011
  call void @llvm.dbg.value(metadata i32 %188, metadata !4834, metadata !DIExpression()), !dbg !5012
  %189 = icmp slt i32 %188, 0, !dbg !5013
  %190 = add i32 %29, 1, !dbg !5011
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4881
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5015
  call void @llvm.dbg.value(metadata i8* %192, metadata !4822, metadata !DIExpression()), !dbg !4895
  %193 = icmp sgt i32 %76, -1, !dbg !5016
  br i1 %193, label %194, label %196, !dbg !5018

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %195, metadata !4837, metadata !DIExpression()), !dbg !5021
  br label %241, !dbg !5022

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5023
  call void @llvm.dbg.value(metadata i32 %197, metadata !4837, metadata !DIExpression()), !dbg !5021
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4822, metadata !DIExpression()), !dbg !4895
  %199 = load i64, i64* %20, align 8, !dbg !5025
  %200 = trunc i64 %199 to i8, !dbg !5026
  store i8 %200, i8* %10, align 1, !dbg !5027
  call void @llvm.dbg.value(metadata i8* %23, metadata !4823, metadata !DIExpression()), !dbg !4895
  br label %245, !dbg !5028

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5029
  %203 = icmp eq i24 %202, 0, !dbg !5029
  %204 = trunc i24 %75 to i8, !dbg !5031
  %205 = shl i8 %204, 1, !dbg !5031
  %206 = and i8 %205, 32, !dbg !5031
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5031
  call void @llvm.dbg.value(metadata i8 %207, metadata !4824, metadata !DIExpression()), !dbg !4895
  %208 = load i64, i64* %20, align 8, !dbg !5032
  call void @llvm.dbg.value(metadata i64 %208, metadata !4760, metadata !DIExpression()), !dbg !4881
  %209 = icmp slt i64 %208, 0, !dbg !5033
  br i1 %209, label %210, label %212, !dbg !5035

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4824, metadata !DIExpression()), !dbg !4895
  %211 = sub nsw i64 0, %208, !dbg !5036
  store i64 %211, i64* %20, align 8, !dbg !5038
  br label %212, !dbg !5039

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4895
  call void @llvm.dbg.value(metadata i8 %213, metadata !4824, metadata !DIExpression()), !dbg !4895
  %214 = load i64, i64* %20, align 8, !dbg !5040
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5041
  call void @llvm.dbg.value(metadata i8* %215, metadata !4822, metadata !DIExpression()), !dbg !4895
  br label %216, !dbg !5042

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5043
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5044
  call void @llvm.dbg.value(metadata i8* %218, metadata !4822, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i8 %217, metadata !4824, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.label(metadata !4880), !dbg !5045
  %219 = icmp sgt i32 %76, -1, !dbg !5046
  br i1 %219, label %222, label %220, !dbg !5047

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5048
  br label %245, !dbg !5047

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5050
  %224 = sub i32 %22, %223, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %224, metadata !4839, metadata !DIExpression()), !dbg !5051
  %225 = load i24, i24* %15, align 8, !dbg !5052
  %226 = and i24 %225, -65, !dbg !5052
  store i24 %226, i24* %15, align 8, !dbg !5052
  %227 = icmp ugt i32 %76, %224, !dbg !5053
  br i1 %227, label %228, label %245, !dbg !5055

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5056
  store i32 %229, i32* %16, align 4, !dbg !5058
  br label %245, !dbg !5059

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5060
  %232 = icmp eq i8* %231, null, !dbg !5062
  br i1 %232, label %245, label %233, !dbg !5063

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5064
  %235 = zext i32 %234 to i64, !dbg !5064
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5066
  call void @llvm.dbg.value(metadata i8* %236, metadata !4822, metadata !DIExpression()), !dbg !4895
  %237 = load i24, i24* %15, align 8, !dbg !5067
  %238 = or i24 %237, 1048576, !dbg !5067
  store i24 %238, i24* %15, align 8, !dbg !5067
  store i8 120, i8* %21, align 1, !dbg !5068
  br label %216, !dbg !5069

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5070
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5073
  br label %363, !dbg !5074

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5075
  call void @llvm.dbg.value(metadata i32 %242, metadata !4837, metadata !DIExpression()), !dbg !5021
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5076
  call void @llvm.dbg.value(metadata i32 -1, metadata !4821, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i32 %29, metadata !4759, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8* %192, metadata !4822, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i8* %243, metadata !4823, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i8 0, metadata !4824, metadata !DIExpression()), !dbg !4895
  %244 = icmp eq i8* %192, null, !dbg !5077
  br i1 %244, label %363, label %245, !dbg !5079, !llvm.loop !4891

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5048
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4895
  call void @llvm.dbg.value(metadata i32 0, metadata !4843, metadata !DIExpression()), !dbg !4895
  %250 = zext i8 %249 to i32, !dbg !5080
  %251 = icmp eq i8 %249, 0, !dbg !5082
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4895
  call void @llvm.dbg.value(metadata i32 undef, metadata !4842, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4895
  call void @llvm.dbg.value(metadata i32 undef, metadata !4842, metadata !DIExpression()), !dbg !4895
  %252 = icmp sgt i32 %58, 0, !dbg !5083
  br i1 %252, label %253, label %302, !dbg !5084

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5048
  %255 = icmp eq i24 %254, 0, !dbg !5048
  %256 = ptrtoint i8* %248 to i32, !dbg !5085
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4895
  %257 = ptrtoint i8* %247 to i32, !dbg !5085
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4895
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4895
  %258 = xor i1 %251, true, !dbg !5086
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4895
  %259 = sext i1 %258 to i32, !dbg !5086
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4895
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4895
  %260 = lshr i24 %246, 19, !dbg !5087
  %261 = and i24 %260, 1, !dbg !5087
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5087
  %263 = zext i24 %262 to i32, !dbg !5087
  %264 = add i32 %257, %259, !dbg !5087
  %265 = add i32 %256, %263, !dbg !5087
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4895
  %266 = and i24 %246, 4194304, !dbg !5088
  %267 = icmp eq i24 %266, 0, !dbg !5088
  %268 = load i32, i32* %16, align 4, !dbg !5090
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4842, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4895
  call void @llvm.dbg.value(metadata i32 undef, metadata !4842, metadata !DIExpression()), !dbg !4895
  %269 = load i32, i32* %17, align 8, !dbg !5091
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5091
  call void @llvm.dbg.value(metadata i32 undef, metadata !4842, metadata !DIExpression()), !dbg !4895
  %271 = add i32 %264, %58, !dbg !5091
  %272 = add i32 %265, %268, !dbg !5091
  %273 = add i32 %272, %270, !dbg !5092
  %274 = sub i32 %271, %273, !dbg !5092
  call void @llvm.dbg.value(metadata i32 %274, metadata !4820, metadata !DIExpression()), !dbg !4895
  %275 = and i24 %246, 4, !dbg !5093
  %276 = icmp eq i24 %275, 0, !dbg !5093
  br i1 %276, label %277, label %302, !dbg !5094

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4844, metadata !DIExpression()), !dbg !5095
  %278 = and i24 %246, 64, !dbg !5096
  %279 = icmp eq i24 %278, 0, !dbg !5096
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5097
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5097
  %282 = select i1 %279, i32 32, i32 48, !dbg !5097
  br i1 %280, label %287, label %283, !dbg !5097

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5098
  call void @llvm.dbg.value(metadata i32 %284, metadata !4849, metadata !DIExpression()), !dbg !5099
  %285 = icmp slt i32 %284, 0, !dbg !5100
  %286 = add i32 %29, 1, !dbg !5098
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4881
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4895
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4885
  call void @llvm.dbg.value(metadata i32 %290, metadata !4759, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i8 undef, metadata !4844, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.value(metadata i8 %288, metadata !4824, metadata !DIExpression()), !dbg !4895
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5102
  %292 = add i32 %291, -1, !dbg !5102
  br label %293, !dbg !5102

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5103
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4885
  call void @llvm.dbg.value(metadata i32 %295, metadata !4759, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %294, metadata !4820, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i32 %294, metadata !4820, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4895
  %296 = icmp sgt i32 %294, 0, !dbg !5104
  br i1 %296, label %297, label %302, !dbg !5102

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5105
  call void @llvm.dbg.value(metadata i32 %298, metadata !4820, metadata !DIExpression()), !dbg !4895
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5106
  call void @llvm.dbg.value(metadata i32 %299, metadata !4855, metadata !DIExpression()), !dbg !5107
  %300 = icmp slt i32 %299, 0, !dbg !5108
  %301 = add i32 %295, 1, !dbg !5106
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4881
  br i1 %300, label %361, label %293, !llvm.loop !5110

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4895
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4895
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4885
  call void @llvm.dbg.value(metadata i32 %305, metadata !4759, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %304, metadata !4820, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i8 %303, metadata !4824, metadata !DIExpression()), !dbg !4895
  %306 = icmp eq i8 %303, 0, !dbg !5112
  br i1 %306, label %312, label %307, !dbg !5113

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5114
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5115
  call void @llvm.dbg.value(metadata i32 %309, metadata !4858, metadata !DIExpression()), !dbg !5116
  %310 = icmp slt i32 %309, 0, !dbg !5117
  %311 = add i32 %305, 1, !dbg !5115
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4881
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4885
  call void @llvm.dbg.value(metadata i32 %313, metadata !4759, metadata !DIExpression()), !dbg !4881
  %314 = lshr i24 %246, 20, !dbg !5119
  %315 = lshr i24 %246, 19, !dbg !5120
  %316 = or i24 %314, %315, !dbg !5121
  %317 = and i24 %316, 1, !dbg !5121
  %318 = icmp eq i24 %317, 0, !dbg !5121
  br i1 %318, label %323, label %319, !dbg !5122

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5123
  call void @llvm.dbg.value(metadata i32 %320, metadata !4862, metadata !DIExpression()), !dbg !5124
  %321 = icmp slt i32 %320, 0, !dbg !5125
  %322 = add i32 %313, 1, !dbg !5123
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4881
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4885
  call void @llvm.dbg.value(metadata i32 %324, metadata !4759, metadata !DIExpression()), !dbg !4881
  %325 = and i24 %246, 1048576, !dbg !5127
  %326 = icmp eq i24 %325, 0, !dbg !5127
  br i1 %326, label %333, label %327, !dbg !5128

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5129
  %329 = zext i8 %328 to i32, !dbg !5129
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5129
  call void @llvm.dbg.value(metadata i32 %330, metadata !4868, metadata !DIExpression()), !dbg !5130
  %331 = icmp slt i32 %330, 0, !dbg !5131
  %332 = add i32 %324, 1, !dbg !5129
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4881
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4885
  call void @llvm.dbg.value(metadata i32 %334, metadata !4759, metadata !DIExpression()), !dbg !4881
  %335 = load i32, i32* %16, align 4, !dbg !5133
  call void @llvm.dbg.value(metadata i32 %335, metadata !4843, metadata !DIExpression()), !dbg !4895
  br label %336, !dbg !5134

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5135
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4885
  call void @llvm.dbg.value(metadata i32 %338, metadata !4759, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %337, metadata !4843, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4895
  %339 = icmp sgt i32 %337, 0, !dbg !5136
  br i1 %339, label %340, label %345, !dbg !5134

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5137
  call void @llvm.dbg.value(metadata i32 %341, metadata !4843, metadata !DIExpression()), !dbg !4895
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5138
  call void @llvm.dbg.value(metadata i32 %342, metadata !4872, metadata !DIExpression()), !dbg !5139
  %343 = icmp slt i32 %342, 0, !dbg !5140
  %344 = add i32 %338, 1, !dbg !5138
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4881
  br i1 %343, label %361, label %336, !llvm.loop !5142

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5144
  call void @llvm.dbg.value(metadata i32 %346, metadata !4875, metadata !DIExpression()), !dbg !5145
  %347 = icmp slt i32 %346, 0, !dbg !5146
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4881
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5144
  call void @llvm.dbg.value(metadata i32 %349, metadata !4759, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %304, metadata !4820, metadata !DIExpression()), !dbg !4895
  %350 = icmp sgt i32 %304, 0, !dbg !5148
  br i1 %350, label %351, label %363, !dbg !5149

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5149
  %353 = add i32 %352, %338, !dbg !5149
  br label %354, !dbg !5149

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %355, metadata !4820, metadata !DIExpression()), !dbg !4895
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5150
  call void @llvm.dbg.value(metadata i32 %356, metadata !4877, metadata !DIExpression()), !dbg !5151
  %357 = icmp slt i32 %356, 0, !dbg !5152
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5154
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4881
  call void @llvm.dbg.value(metadata i32 %359, metadata !4820, metadata !DIExpression()), !dbg !4895
  %360 = icmp sgt i32 %355, 1, !dbg !5148
  br i1 %360, label %354, label %363, !dbg !5149, !llvm.loop !5155

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4759, metadata !DIExpression()), !dbg !4881
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4892
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4885
  call void @llvm.dbg.value(metadata i32 %364, metadata !4759, metadata !DIExpression()), !dbg !4881
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4892
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4881
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !5157
  ret i32 %366, !dbg !5157
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5158 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5162, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.value(metadata i8* %1, metadata !5163, metadata !DIExpression()), !dbg !5164
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5165
  store i24 0, i24* %3, align 4, !dbg !5165
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5165
  store i8 0, i8* %4, align 1, !dbg !5165
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5165
  store i32 0, i32* %5, align 4, !dbg !5165
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5165
  store i32 0, i32* %6, align 4, !dbg !5165
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5166
  call void @llvm.dbg.value(metadata i8* %7, metadata !5163, metadata !DIExpression()), !dbg !5164
  %8 = load i8, i8* %7, align 1, !dbg !5167
  %9 = icmp eq i8 %8, 37, !dbg !5169
  br i1 %9, label %10, label %12, !dbg !5170

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5171
  call void @llvm.dbg.value(metadata i8* %11, metadata !5163, metadata !DIExpression()), !dbg !5164
  store i8 37, i8* %4, align 1, !dbg !5173
  br label %18, !dbg !5174

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5175
  call void @llvm.dbg.value(metadata i8* %13, metadata !5163, metadata !DIExpression()), !dbg !5164
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5176
  call void @llvm.dbg.value(metadata i8* %14, metadata !5163, metadata !DIExpression()), !dbg !5164
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5177
  call void @llvm.dbg.value(metadata i8* %15, metadata !5163, metadata !DIExpression()), !dbg !5164
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5178
  call void @llvm.dbg.value(metadata i8* %16, metadata !5163, metadata !DIExpression()), !dbg !5164
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5179
  call void @llvm.dbg.value(metadata i8* %17, metadata !5163, metadata !DIExpression()), !dbg !5164
  br label %18, !dbg !5180

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5164
  ret i8* %19, !dbg !5181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5182 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5186, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i8* %1, metadata !5187, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i8* %2, metadata !5188, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i8* %3, metadata !5189, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i32 0, metadata !5190, metadata !DIExpression()), !dbg !5193
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5194

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5195
  call void @llvm.dbg.value(metadata i32 %9, metadata !5190, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i8* %8, metadata !5188, metadata !DIExpression()), !dbg !5193
  %10 = icmp ult i8* %8, %3, !dbg !5196
  br i1 %10, label %11, label %13, !dbg !5197

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5198
  br label %17, !dbg !5197

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5199

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5200
  %16 = icmp eq i8 %15, 0, !dbg !5199
  br i1 %16, label %24, label %17, !dbg !5194

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5198
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5201
  call void @llvm.dbg.value(metadata i8* %19, metadata !5188, metadata !DIExpression()), !dbg !5193
  %20 = zext i8 %18 to i32, !dbg !5202
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5203
  call void @llvm.dbg.value(metadata i32 %21, metadata !5191, metadata !DIExpression()), !dbg !5204
  %22 = icmp slt i32 %21, 0, !dbg !5205
  %23 = add i32 %9, 1, !dbg !5207
  call void @llvm.dbg.value(metadata i32 undef, metadata !5190, metadata !DIExpression()), !dbg !5193
  br i1 %22, label %24, label %7, !llvm.loop !5208

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5193
  ret i32 %25, !dbg !5210
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5211 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5215, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5216, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i8* %2, metadata !5217, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i8* %3, metadata !5218, metadata !DIExpression()), !dbg !5225
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5226
  %6 = load i8, i8* %5, align 1, !dbg !5226
  %7 = zext i8 %6 to i32, !dbg !5227
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5228
  %9 = icmp eq i32 %8, 0, !dbg !5228
  call void @llvm.dbg.value(metadata i1 %9, metadata !5219, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5225
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5229
  call void @llvm.dbg.value(metadata i32 %10, metadata !5220, metadata !DIExpression()), !dbg !5225
  %11 = ptrtoint i8* %3 to i32, !dbg !5230
  %12 = ptrtoint i8* %2 to i32, !dbg !5230
  %13 = sub i32 %11, %12, !dbg !5230
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5231
  call void @llvm.dbg.value(metadata i8* %14, metadata !5222, metadata !DIExpression()), !dbg !5225
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5232

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5225
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5215, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i8* %18, metadata !5222, metadata !DIExpression()), !dbg !5225
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5233
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5234
  call void @llvm.dbg.value(metadata i32 %25, metadata !5223, metadata !DIExpression()), !dbg !5235
  %26 = icmp ult i32 %25, 10, !dbg !5236
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5237
  %28 = add i32 %27, %25, !dbg !5235
  %29 = trunc i32 %28 to i8, !dbg !5237
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5238
  call void @llvm.dbg.value(metadata i8* %30, metadata !5222, metadata !DIExpression()), !dbg !5225
  store i8 %29, i8* %30, align 1, !dbg !5239
  call void @llvm.dbg.value(metadata i64 %22, metadata !5215, metadata !DIExpression()), !dbg !5225
  %31 = icmp uge i64 %19, %15, !dbg !5240
  %32 = icmp ugt i8* %30, %2, !dbg !5241
  %33 = and i1 %31, %32, !dbg !5241
  br i1 %33, label %17, label %34, !dbg !5242, !llvm.loop !5243

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5245
  %36 = load i24, i24* %35, align 4, !dbg !5245
  %37 = and i24 %36, 32, !dbg !5245
  %38 = icmp eq i24 %37, 0, !dbg !5245
  br i1 %38, label %44, label %39, !dbg !5247

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5248

40:                                               ; preds = %39
  br label %41, !dbg !5250

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5254
  store i24 %43, i24* %35, align 4, !dbg !5254
  br label %44, !dbg !5255

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5255
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5256 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5262, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i8* %1, metadata !5263, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i32 %2, metadata !5264, metadata !DIExpression()), !dbg !5265
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5266
  %5 = load i24, i24* %4, align 4, !dbg !5266
  %6 = lshr i24 %5, 11, !dbg !5266
  %7 = and i24 %6, 15, !dbg !5266
  %8 = zext i24 %7 to i32, !dbg !5266
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5267

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5268
  store i32 %2, i32* %10, align 4, !dbg !5270
  br label %28, !dbg !5271

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5272
  store i8 %12, i8* %1, align 1, !dbg !5273
  br label %28, !dbg !5274

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5275
  %15 = bitcast i8* %1 to i16*, !dbg !5276
  store i16 %14, i16* %15, align 2, !dbg !5277
  br label %28, !dbg !5278

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5279
  store i32 %2, i32* %17, align 4, !dbg !5280
  br label %28, !dbg !5281

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5282
  %20 = bitcast i8* %1 to i64*, !dbg !5283
  store i64 %19, i64* %20, align 8, !dbg !5284
  br label %28, !dbg !5285

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5286
  %23 = bitcast i8* %1 to i64*, !dbg !5287
  store i64 %22, i64* %23, align 8, !dbg !5288
  br label %28, !dbg !5289

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5290
  store i32 %2, i32* %25, align 4, !dbg !5291
  br label %28, !dbg !5292

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5293
  store i32 %2, i32* %27, align 4, !dbg !5294
  br label %28, !dbg !5295

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5296
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5300, metadata !DIExpression()), !dbg !5301
  %2 = add i32 %0, -65, !dbg !5302
  %3 = icmp ult i32 %2, 26, !dbg !5303
  %4 = zext i1 %3 to i32, !dbg !5303
  ret i32 %4, !dbg !5304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5305 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5309, metadata !DIExpression()), !dbg !5310
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5311

2:                                                ; preds = %1
  br label %4, !dbg !5312

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5314

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5315
  ret i32 %5, !dbg !5316
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5317 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5319, metadata !DIExpression()), !dbg !5322
  call void @llvm.dbg.value(metadata i8* %1, metadata !5320, metadata !DIExpression()), !dbg !5322
  call void @llvm.dbg.value(metadata i8 1, metadata !5321, metadata !DIExpression()), !dbg !5322
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5323

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5321, metadata !DIExpression()), !dbg !5322
  call void @llvm.dbg.value(metadata i8* %5, metadata !5320, metadata !DIExpression()), !dbg !5322
  %6 = load i8, i8* %5, align 1, !dbg !5324
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5326

7:                                                ; preds = %4
  br label %11, !dbg !5327

8:                                                ; preds = %4
  br label %11, !dbg !5329

9:                                                ; preds = %4
  br label %11, !dbg !5330

10:                                               ; preds = %4
  br label %11, !dbg !5331

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5332
  %14 = or i24 %13, %12, !dbg !5332
  store i24 %14, i24* %3, align 4, !dbg !5332
  call void @llvm.dbg.value(metadata i8 poison, metadata !5321, metadata !DIExpression()), !dbg !5322
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5320, metadata !DIExpression()), !dbg !5322
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5321, metadata !DIExpression()), !dbg !5322
  call void @llvm.dbg.value(metadata i8* %15, metadata !5320, metadata !DIExpression()), !dbg !5322
  %17 = load i24, i24* %3, align 4, !dbg !5333
  %18 = and i24 %17, 68, !dbg !5335
  %19 = icmp eq i24 %18, 68, !dbg !5335
  br i1 %19, label %20, label %22, !dbg !5335

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5336
  store i24 %21, i24* %3, align 4, !dbg !5336
  br label %22, !dbg !5338

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5339
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5340 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5342, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.value(metadata i8* %1, metadata !5343, metadata !DIExpression()), !dbg !5346
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5347
  %5 = load i24, i24* %4, align 4, !dbg !5348
  %6 = or i24 %5, 128, !dbg !5348
  store i24 %6, i24* %4, align 4, !dbg !5348
  call void @llvm.dbg.value(metadata i8* %1, metadata !5343, metadata !DIExpression()), !dbg !5346
  %7 = load i8, i8* %1, align 1, !dbg !5349
  %8 = icmp eq i8 %7, 42, !dbg !5351
  br i1 %8, label %9, label %12, !dbg !5352

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5353
  store i24 %10, i24* %4, align 4, !dbg !5353
  call void @llvm.dbg.value(metadata i8* %1, metadata !5343, metadata !DIExpression()), !dbg !5346
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5355
  call void @llvm.dbg.value(metadata i8* %11, metadata !5343, metadata !DIExpression()), !dbg !5346
  store i8* %11, i8** %3, align 4, !dbg !5355
  br label %29, !dbg !5356

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5344, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.value(metadata i8** %3, metadata !5343, metadata !DIExpression(DW_OP_deref)), !dbg !5346
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5357
  call void @llvm.dbg.value(metadata i32 %13, metadata !5345, metadata !DIExpression()), !dbg !5346
  %14 = load i8*, i8** %3, align 4, !dbg !5358
  call void @llvm.dbg.value(metadata i8* %14, metadata !5343, metadata !DIExpression()), !dbg !5346
  %15 = icmp eq i8* %14, %1, !dbg !5360
  br i1 %15, label %29, label %16, !dbg !5361

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5362
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5364
  store i32 %13, i32* %18, align 4, !dbg !5365
  %19 = lshr i32 %13, 31, !dbg !5366
  %20 = lshr i24 %17, 1, !dbg !5367
  %21 = and i24 %20, 1, !dbg !5367
  %22 = zext i24 %21 to i32, !dbg !5367
  %23 = or i32 %19, %22, !dbg !5367
  %24 = trunc i32 %23 to i24, !dbg !5367
  %25 = shl nuw nsw i24 %24, 1, !dbg !5367
  %26 = and i24 %17, -131, !dbg !5367
  %27 = or i24 %26, 128, !dbg !5367
  %28 = or i24 %25, %27, !dbg !5367
  store i24 %28, i24* %4, align 4, !dbg !5367
  br label %29, !dbg !5368

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5346
  ret i8* %30, !dbg !5369
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5370 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5372, metadata !DIExpression()), !dbg !5375
  call void @llvm.dbg.value(metadata i8* %1, metadata !5373, metadata !DIExpression()), !dbg !5375
  %4 = load i8, i8* %1, align 1, !dbg !5376
  %5 = icmp eq i8 %4, 46, !dbg !5377
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5378
  %7 = load i24, i24* %6, align 4, !dbg !5379
  %8 = select i1 %5, i24 512, i24 0, !dbg !5379
  %9 = and i24 %7, -513, !dbg !5379
  %10 = or i24 %9, %8, !dbg !5379
  store i24 %10, i24* %6, align 4, !dbg !5379
  br i1 %5, label %11, label %32, !dbg !5380

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5373, metadata !DIExpression()), !dbg !5375
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5381
  call void @llvm.dbg.value(metadata i8* %12, metadata !5373, metadata !DIExpression()), !dbg !5375
  store i8* %12, i8** %3, align 4, !dbg !5381
  %13 = load i8, i8* %12, align 1, !dbg !5382
  %14 = icmp eq i8 %13, 42, !dbg !5384
  br i1 %14, label %15, label %18, !dbg !5385

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5386
  store i24 %16, i24* %6, align 4, !dbg !5386
  call void @llvm.dbg.value(metadata i8* %12, metadata !5373, metadata !DIExpression()), !dbg !5375
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5388
  call void @llvm.dbg.value(metadata i8* %17, metadata !5373, metadata !DIExpression()), !dbg !5375
  store i8* %17, i8** %3, align 4, !dbg !5388
  br label %32, !dbg !5389

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5373, metadata !DIExpression(DW_OP_deref)), !dbg !5375
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5390
  call void @llvm.dbg.value(metadata i32 %19, metadata !5374, metadata !DIExpression()), !dbg !5375
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5391
  store i32 %19, i32* %20, align 4, !dbg !5392
  %21 = lshr i32 %19, 31, !dbg !5393
  %22 = load i24, i24* %6, align 4, !dbg !5394
  %23 = lshr i24 %22, 1, !dbg !5394
  %24 = and i24 %23, 1, !dbg !5394
  %25 = zext i24 %24 to i32, !dbg !5394
  %26 = or i32 %21, %25, !dbg !5394
  %27 = trunc i32 %26 to i24, !dbg !5394
  %28 = shl nuw nsw i24 %27, 1, !dbg !5394
  %29 = and i24 %22, -3, !dbg !5394
  %30 = or i24 %28, %29, !dbg !5394
  store i24 %30, i24* %6, align 4, !dbg !5394
  %31 = load i8*, i8** %3, align 4, !dbg !5395
  call void @llvm.dbg.value(metadata i8* %31, metadata !5373, metadata !DIExpression()), !dbg !5375
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5375
  ret i8* %33, !dbg !5396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5397 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5399, metadata !DIExpression()), !dbg !5401
  call void @llvm.dbg.value(metadata i8* %1, metadata !5400, metadata !DIExpression()), !dbg !5401
  %3 = load i8, i8* %1, align 1, !dbg !5402
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5403

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5404
  call void @llvm.dbg.value(metadata i8* %5, metadata !5400, metadata !DIExpression()), !dbg !5401
  %6 = load i8, i8* %5, align 1, !dbg !5407
  %7 = icmp eq i8 %6, 104, !dbg !5408
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5409
  %9 = load i24, i24* %8, align 4, !dbg !5409
  %10 = and i24 %9, -30721, !dbg !5409
  br i1 %7, label %11, label %14, !dbg !5410

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5411
  store i24 %12, i24* %8, align 4, !dbg !5411
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5413
  call void @llvm.dbg.value(metadata i8* %13, metadata !5400, metadata !DIExpression()), !dbg !5401
  br label %56, !dbg !5414

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5415
  store i24 %15, i24* %8, align 4, !dbg !5415
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5417
  call void @llvm.dbg.value(metadata i8* %17, metadata !5400, metadata !DIExpression()), !dbg !5401
  %18 = load i8, i8* %17, align 1, !dbg !5419
  %19 = icmp eq i8 %18, 108, !dbg !5420
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5421
  %21 = load i24, i24* %20, align 4, !dbg !5421
  %22 = and i24 %21, -30721, !dbg !5421
  br i1 %19, label %23, label %26, !dbg !5422

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5423
  store i24 %24, i24* %20, align 4, !dbg !5423
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5425
  call void @llvm.dbg.value(metadata i8* %25, metadata !5400, metadata !DIExpression()), !dbg !5401
  br label %56, !dbg !5426

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5427
  store i24 %27, i24* %20, align 4, !dbg !5427
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5429
  %30 = load i24, i24* %29, align 4, !dbg !5430
  %31 = and i24 %30, -30721, !dbg !5430
  %32 = or i24 %31, 10240, !dbg !5430
  store i24 %32, i24* %29, align 4, !dbg !5430
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5431
  call void @llvm.dbg.value(metadata i8* %33, metadata !5400, metadata !DIExpression()), !dbg !5401
  br label %56, !dbg !5432

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5433
  %36 = load i24, i24* %35, align 4, !dbg !5434
  %37 = and i24 %36, -30721, !dbg !5434
  %38 = or i24 %37, 12288, !dbg !5434
  store i24 %38, i24* %35, align 4, !dbg !5434
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5435
  call void @llvm.dbg.value(metadata i8* %39, metadata !5400, metadata !DIExpression()), !dbg !5401
  br label %56, !dbg !5436

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5437
  %42 = load i24, i24* %41, align 4, !dbg !5438
  %43 = and i24 %42, -30721, !dbg !5438
  %44 = or i24 %43, 14336, !dbg !5438
  store i24 %44, i24* %41, align 4, !dbg !5438
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5439
  call void @llvm.dbg.value(metadata i8* %45, metadata !5400, metadata !DIExpression()), !dbg !5401
  br label %56, !dbg !5440

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5441
  %48 = load i24, i24* %47, align 4, !dbg !5442
  %49 = and i24 %48, -30723, !dbg !5442
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5443
  call void @llvm.dbg.value(metadata i8* %50, metadata !5400, metadata !DIExpression()), !dbg !5401
  %51 = or i24 %49, 16386, !dbg !5444
  store i24 %51, i24* %47, align 4, !dbg !5444
  br label %56, !dbg !5445

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5446
  %54 = load i24, i24* %53, align 4, !dbg !5447
  %55 = and i24 %54, -30721, !dbg !5447
  store i24 %55, i24* %53, align 4, !dbg !5447
  br label %56, !dbg !5448

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5400, metadata !DIExpression()), !dbg !5401
  ret i8* %57, !dbg !5449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5450 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5452, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.value(metadata i8* %1, metadata !5453, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.value(metadata i8 0, metadata !5454, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.value(metadata i8* %1, metadata !5453, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5457
  %3 = load i8, i8* %1, align 1, !dbg !5458
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5459
  store i8 %3, i8* %4, align 1, !dbg !5460
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5461

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5462

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5463
  %9 = load i24, i24* %8, align 4, !dbg !5463
  %10 = and i24 %9, -458753, !dbg !5463
  %11 = or i24 %10, %7, !dbg !5463
  call void @llvm.dbg.label(metadata !5455), !dbg !5464
  %12 = and i24 %9, 30720, !dbg !5465
  %13 = icmp eq i24 %12, 16384, !dbg !5465
  %14 = zext i1 %13 to i24, !dbg !5467
  %15 = or i24 %11, %14, !dbg !5467
  %16 = icmp eq i8 %3, 99, !dbg !5468
  br i1 %16, label %17, label %43, !dbg !5470

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5471
  %19 = icmp ne i24 %18, 0, !dbg !5471
  call void @llvm.dbg.value(metadata i1 %19, metadata !5454, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5457
  br label %43, !dbg !5473

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5474
  %22 = load i24, i24* %21, align 4, !dbg !5475
  %23 = and i24 %22, -458753, !dbg !5475
  %24 = or i24 %23, 262144, !dbg !5475
  call void @llvm.dbg.value(metadata i8 1, metadata !5454, metadata !DIExpression()), !dbg !5457
  br label %43, !dbg !5476

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5479
  %27 = load i24, i24* %26, align 4, !dbg !5480
  %28 = and i24 %27, -458753, !dbg !5480
  %29 = or i24 %28, 196608, !dbg !5480
  %30 = and i24 %27, 30720, !dbg !5481
  %31 = icmp eq i24 %30, 16384, !dbg !5481
  br label %43, !dbg !5483

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5484
  %34 = load i24, i24* %33, align 4, !dbg !5485
  %35 = and i24 %34, -458753, !dbg !5485
  %36 = or i24 %35, 196608, !dbg !5485
  %37 = and i24 %34, 30720, !dbg !5486
  %38 = icmp ne i24 %37, 0, !dbg !5486
  br label %43, !dbg !5488

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5489
  %41 = load i24, i24* %40, align 4, !dbg !5490
  %42 = or i24 %41, 1, !dbg !5490
  br label %43, !dbg !5491

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5492
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5493
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5494
  call void @llvm.dbg.value(metadata i8* %48, metadata !5453, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.value(metadata i8 poison, metadata !5454, metadata !DIExpression()), !dbg !5457
  %49 = lshr i24 %44, 1, !dbg !5492
  %50 = and i24 %49, 1, !dbg !5492
  %51 = zext i24 %50 to i32, !dbg !5492
  %52 = or i32 %51, %47, !dbg !5492
  %53 = trunc i32 %52 to i24, !dbg !5492
  %54 = shl nuw nsw i24 %53, 1, !dbg !5492
  %55 = and i24 %44, -3, !dbg !5492
  %56 = or i24 %54, %55, !dbg !5492
  store i24 %56, i24* %46, align 4, !dbg !5492
  ret i8* %48, !dbg !5495
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5496 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5501, metadata !DIExpression()), !dbg !5504
  %2 = load i8*, i8** %0, align 4, !dbg !5505
  call void @llvm.dbg.value(metadata i8* %2, metadata !5502, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i32 0, metadata !5503, metadata !DIExpression()), !dbg !5504
  %3 = load i8, i8* %2, align 1, !dbg !5506
  %4 = zext i8 %3 to i32, !dbg !5507
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5508
  %6 = icmp eq i32 %5, 0, !dbg !5509
  br i1 %6, label %19, label %7, !dbg !5509

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5503, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i8* %10, metadata !5502, metadata !DIExpression()), !dbg !5504
  %11 = mul i32 %9, 10, !dbg !5510
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5512
  call void @llvm.dbg.value(metadata i8* %12, metadata !5502, metadata !DIExpression()), !dbg !5504
  %13 = add i32 %11, -48, !dbg !5513
  %14 = add i32 %13, %8, !dbg !5514
  call void @llvm.dbg.value(metadata i32 %14, metadata !5503, metadata !DIExpression()), !dbg !5504
  %15 = load i8, i8* %12, align 1, !dbg !5506
  %16 = zext i8 %15 to i32, !dbg !5507
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5508
  %18 = icmp eq i32 %17, 0, !dbg !5509
  br i1 %18, label %19, label %7, !dbg !5509, !llvm.loop !5515

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5504
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5504
  store i8* %20, i8** %0, align 4, !dbg !5517
  ret i32 %21, !dbg !5518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5521, metadata !DIExpression()), !dbg !5522
  %2 = add i32 %0, -48, !dbg !5523
  %3 = icmp ult i32 %2, 10, !dbg !5524
  %4 = zext i1 %3 to i32, !dbg !5524
  ret i32 %4, !dbg !5525
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5526 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #24, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #24, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #24, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #24, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #24, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #24, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #24, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #24, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #24, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #24, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #24, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #24, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_RUNTIME_STATS\0A\09.equ\09CONFIG_SYS_HEAP_RUNTIME_STATS,1\0A\09.type\09CONFIG_SYS_HEAP_RUNTIME_STATS,%object", ""() #24, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !6052, !srcloc !6053
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !6054, !srcloc !6055
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !6056, !srcloc !6057
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !6058, !srcloc !6059
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !6060, !srcloc !6061
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !6062, !srcloc !6063
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !6064, !srcloc !6065
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !6066, !srcloc !6067
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !6068, !srcloc !6069
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !6070, !srcloc !6071
  ret void, !dbg !6072
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6073 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6075, metadata !DIExpression()), !dbg !6077
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6078, !srcloc !6087
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6078
  call void @llvm.dbg.value(metadata i32 %3, metadata !6084, metadata !DIExpression()) #24, !dbg !6088
  call void @llvm.dbg.value(metadata i32 undef, metadata !6085, metadata !DIExpression()) #24, !dbg !6088
  call void @llvm.dbg.value(metadata i32 %3, metadata !6076, metadata !DIExpression()), !dbg !6077
  call void @llvm.dbg.value(metadata i32 %3, metadata !6089, metadata !DIExpression()) #24, !dbg !6094
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !6096, !srcloc !6097
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !6098
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !6099
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #26, !dbg !6100
  ret i32 0, !dbg !6101
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !6102 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !6107, metadata !DIExpression()), !dbg !6109
  %2 = bitcast i32* %1 to i8*, !dbg !6110
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6110
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6108, metadata !DIExpression()), !dbg !6111
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6112
  %4 = or i32 %3, 268435456, !dbg !6112
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6112
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6113
  %6 = and i32 %5, 268435456, !dbg !6113
  store volatile i32 %6, i32* %1, align 4, !dbg !6114
  %7 = load volatile i32, i32* %1, align 4, !dbg !6115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6116
  ret void, !dbg !6116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #16 !dbg !6117 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !6120, metadata !DIExpression()), !dbg !6121
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !6122
  %2 = and i32 %1, -6145, !dbg !6122
  %3 = or i32 %2, 2048, !dbg !6122
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !6122
  ret void, !dbg !6123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !6124 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6126, metadata !DIExpression()), !dbg !6127
  ret i32 0, !dbg !6128
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6178, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6179, metadata !DIExpression()), !dbg !6180
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6181
  ret void, !dbg !6182
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6183 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6200, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6201, metadata !DIExpression()), !dbg !6203
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6204
  %4 = load i32, i32* %3, align 4, !dbg !6204
  call void @llvm.dbg.value(metadata i32 %4, metadata !6202, metadata !DIExpression()), !dbg !6203
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6205
  ret void, !dbg !6206
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !6207 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6211, metadata !DIExpression()), !dbg !6214
  call void @llvm.dbg.value(metadata i8* %0, metadata !6212, metadata !DIExpression()), !dbg !6214
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6215
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6215
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6213, metadata !DIExpression()), !dbg !6216
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6216
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6217
  %5 = bitcast i8* %4 to i32*, !dbg !6217
  %6 = load i32, i32* %5, align 4, !dbg !6217
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6218
  store i32 %6, i32* %7, align 4, !dbg !6219
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6220
  unreachable, !dbg !6221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6225, metadata !DIExpression()), !dbg !6226
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6227
  ret void, !dbg !6228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6233, metadata !DIExpression()), !dbg !6234
  %2 = icmp sgt i32 %0, -1, !dbg !6235
  br i1 %2, label %3, label %8, !dbg !6237

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6238, !srcloc !6240
  %4 = and i32 %0, 31, !dbg !6241
  %5 = shl nuw i32 1, %4, !dbg !6242
  %6 = lshr i32 %0, 5, !dbg !6243
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6244
  store volatile i32 %5, i32* %7, align 4, !dbg !6245
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6246, !srcloc !6247
  br label %8, !dbg !6248

8:                                                ; preds = %3, %1
  ret void, !dbg !6249
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6252, metadata !DIExpression()), !dbg !6253
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6254
  ret void, !dbg !6255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6258, metadata !DIExpression()), !dbg !6259
  %2 = icmp sgt i32 %0, -1, !dbg !6260
  br i1 %2, label %3, label %8, !dbg !6262

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6263
  %5 = shl nuw i32 1, %4, !dbg !6265
  %6 = lshr i32 %0, 5, !dbg !6266
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6267
  store volatile i32 %5, i32* %7, align 4, !dbg !6268
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6269, !srcloc !6273
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6274, !srcloc !6277
  br label %8, !dbg !6278

8:                                                ; preds = %3, %1
  ret void, !dbg !6279
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !6280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6284, metadata !DIExpression()), !dbg !6285
  %2 = lshr i32 %0, 5, !dbg !6286
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6287
  %4 = load volatile i32, i32* %3, align 4, !dbg !6287
  %5 = and i32 %0, 31, !dbg !6288
  %6 = shl nuw i32 1, %5, !dbg !6288
  %7 = and i32 %4, %6, !dbg !6289
  ret i32 %7, !dbg !6290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !6291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6295, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i32 %1, metadata !6296, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i32 %2, metadata !6297, metadata !DIExpression()), !dbg !6298
  %4 = add i32 %1, 1, !dbg !6299
  call void @llvm.dbg.value(metadata i32 %4, metadata !6296, metadata !DIExpression()), !dbg !6298
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6302
  ret void, !dbg !6303
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !6304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6308, metadata !DIExpression()), !dbg !6310
  call void @llvm.dbg.value(metadata i32 %1, metadata !6309, metadata !DIExpression()), !dbg !6310
  %3 = trunc i32 %1 to i8, !dbg !6311
  %4 = shl i8 %3, 4, !dbg !6311
  %5 = and i32 %0, 15, !dbg !6313
  %6 = add nsw i32 %5, -4, !dbg !6313
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6313
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6313
  %9 = icmp slt i32 %0, 0, !dbg !6313
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6313
  store volatile i8 %4, i8* %10, align 1, !dbg !6311
  ret void, !dbg !6314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6315 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6317, metadata !DIExpression()), !dbg !6318
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6319
  ret void, !dbg !6320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6321 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6323
  tail call void @z_arm_int_exit() #25, !dbg !6324
  ret void, !dbg !6325
}

; Function Attrs: optsize
declare !dbg !6326 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6327 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6329 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6331
  tail call void @z_bss_zero() #25, !dbg !6332
  tail call void @z_data_copy() #25, !dbg !6333
  tail call void @z_arm_interrupt_init() #25, !dbg !6334
  tail call void @z_cstart() #28, !dbg !6335
  unreachable, !dbg !6335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6336 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6337
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6338, !srcloc !6341
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6342, !srcloc !6345
  ret void, !dbg !6346
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6350, metadata !DIExpression()), !dbg !6351
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6352
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6353
  store i32 %0, i32* %3, align 4, !dbg !6354
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6355
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6356
  store i32 %4, i32* %5, align 4, !dbg !6357
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6358
  %7 = or i32 %6, 268435456, !dbg !6358
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6358
  call void @llvm.dbg.value(metadata i32 0, metadata !6359, metadata !DIExpression()) #24, !dbg !6362
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6364, !srcloc !6365
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6366
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6367
  %10 = load i32, i32* %9, align 4, !dbg !6367
  ret i32 %10, !dbg !6368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6369 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6479, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6480, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i8* %2, metadata !6481, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6482, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i8* %4, metadata !6483, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i8* %5, metadata !6484, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i8* %6, metadata !6485, metadata !DIExpression()), !dbg !6487
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6488
  call void @llvm.dbg.value(metadata i8* %8, metadata !6486, metadata !DIExpression()), !dbg !6487
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6489
  %10 = bitcast i8* %9 to i32*, !dbg !6489
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6490
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6491
  %12 = bitcast i8* %8 to i32*, !dbg !6492
  store i32 %11, i32* %12, align 4, !dbg !6493
  %13 = ptrtoint i8* %4 to i32, !dbg !6494
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6495
  %15 = bitcast i8* %14 to i32*, !dbg !6495
  store i32 %13, i32* %15, align 4, !dbg !6496
  %16 = ptrtoint i8* %5 to i32, !dbg !6497
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6498
  %18 = bitcast i8* %17 to i32*, !dbg !6498
  store i32 %16, i32* %18, align 4, !dbg !6499
  %19 = ptrtoint i8* %6 to i32, !dbg !6500
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6501
  %21 = bitcast i8* %20 to i32*, !dbg !6501
  store i32 %19, i32* %21, align 4, !dbg !6502
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6503
  %23 = bitcast i8* %22 to i32*, !dbg !6503
  store i32 16777216, i32* %23, align 4, !dbg !6504
  %24 = ptrtoint i8* %8 to i32, !dbg !6505
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6506
  store i32 %24, i32* %25, align 8, !dbg !6507
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6508
  store i32 0, i32* %26, align 4, !dbg !6509
  ret void, !dbg !6510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6516, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.value(metadata i32 %1, metadata !6517, metadata !DIExpression()), !dbg !6522
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6523
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6518, metadata !DIExpression()), !dbg !6522
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6524
  br i1 %4, label %19, label %5, !dbg !6526

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6521, metadata !DIExpression()), !dbg !6522
  %6 = icmp eq i32 %0, -22, !dbg !6527
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6527
  %8 = load i32, i32* %7, align 4, !dbg !6527
  br i1 %6, label %16, label %9, !dbg !6529

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6527
  %11 = icmp ule i32 %10, %0, !dbg !6527
  %12 = icmp ugt i32 %8, %0, !dbg !6527
  %13 = and i1 %12, %11, !dbg !6527
  %14 = icmp ugt i32 %8, %1, !dbg !6527
  %15 = and i1 %14, %13, !dbg !6527
  br i1 %15, label %18, label %19, !dbg !6527

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6527
  br i1 %17, label %18, label %19, !dbg !6529

18:                                               ; preds = %9, %16
  br label %19, !dbg !6530

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6522
  ret i32 %20, !dbg !6532
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6537, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata i8* %1, metadata !6538, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6539, metadata !DIExpression()), !dbg !6540
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6541
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6542
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !6543, !srcloc !6544
  unreachable, !dbg !6545
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6546 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6564, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.value(metadata i32 %1, metadata !6565, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.value(metadata i32 %2, metadata !6566, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6567, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.value(metadata i32 0, metadata !6568, metadata !DIExpression()), !dbg !6574
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6575
  %9 = and i32 %8, 511, !dbg !6576
  call void @llvm.dbg.value(metadata i32 %9, metadata !6569, metadata !DIExpression()), !dbg !6574
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6577
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6577
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6578
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6578
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6573, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.value(metadata i32 0, metadata !6580, metadata !DIExpression()) #24, !dbg !6583
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6585, !srcloc !6586
  call void @llvm.dbg.value(metadata i8* %6, metadata !6571, metadata !DIExpression(DW_OP_deref)), !dbg !6574
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6587
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6572, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.value(metadata i8* %5, metadata !6570, metadata !DIExpression(DW_OP_deref)), !dbg !6574
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6588
  call void @llvm.dbg.value(metadata i32 %12, metadata !6568, metadata !DIExpression()), !dbg !6574
  %13 = load i8, i8* %5, align 1, !dbg !6589, !range !6591
  call void @llvm.dbg.value(metadata i8 %13, metadata !6570, metadata !DIExpression()), !dbg !6574
  %14 = icmp eq i8 %13, 0, !dbg !6589
  br i1 %14, label %15, label %32, !dbg !6592

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6593
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !6594
  %18 = load i8, i8* %6, align 1, !dbg !6595, !range !6591
  call void @llvm.dbg.value(metadata i8 %18, metadata !6571, metadata !DIExpression()), !dbg !6574
  %19 = icmp eq i8 %18, 0, !dbg !6595
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6597
  %21 = load i32, i32* %20, align 4, !dbg !6597
  br i1 %19, label %27, label %22, !dbg !6598

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6599
  %24 = icmp eq i32 %23, 0, !dbg !6602
  br i1 %24, label %25, label %31, !dbg !6603

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6604
  br label %29, !dbg !6606

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6607
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6597
  br label %31, !dbg !6609

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !6609
  br label %32, !dbg !6610

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6610
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6610
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6610
  ret void, !dbg !6610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6616, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata i32 %1, metadata !6617, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata i32 %2, metadata !6618, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata i8* %3, metadata !6619, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata i8 0, metadata !6620, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6621, metadata !DIExpression()), !dbg !6622
  store i8 0, i8* %3, align 1, !dbg !6623
  %5 = icmp ult i32 %2, -16777216, !dbg !6624
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6626
  br i1 %8, label %16, label %9, !dbg !6626

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6627
  %11 = icmp eq i32 %10, 0, !dbg !6627
  br i1 %11, label %12, label %13, !dbg !6629

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6621, metadata !DIExpression()), !dbg !6622
  store i8 1, i8* %3, align 1, !dbg !6632
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6622
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6621, metadata !DIExpression()), !dbg !6622
  br label %16, !dbg !6635

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6622
  ret %struct.__esf* %17, !dbg !6636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6637 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6641, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i32 %1, metadata !6642, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i8* %2, metadata !6643, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i32 0, metadata !6644, metadata !DIExpression()), !dbg !6645
  store i8 0, i8* %2, align 1, !dbg !6646
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6647

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6648
  call void @llvm.dbg.value(metadata i32 %5, metadata !6644, metadata !DIExpression()), !dbg !6645
  br label %11, !dbg !6650

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6651
  call void @llvm.dbg.value(metadata i32 %7, metadata !6644, metadata !DIExpression()), !dbg !6645
  br label %11, !dbg !6652

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6653
  call void @llvm.dbg.value(metadata i32 0, metadata !6644, metadata !DIExpression()), !dbg !6645
  br label %11, !dbg !6654

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6655
  call void @llvm.dbg.value(metadata i32 0, metadata !6644, metadata !DIExpression()), !dbg !6645
  br label %11, !dbg !6656

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6657
  br label %11, !dbg !6658

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6659
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6660 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6664, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i8* %1, metadata !6665, metadata !DIExpression()), !dbg !6667
  call void @llvm.dbg.value(metadata i32 0, metadata !6666, metadata !DIExpression()), !dbg !6667
  store i8 0, i8* %1, align 1, !dbg !6668
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6669
  %4 = and i32 %3, 2, !dbg !6671
  %5 = icmp eq i32 %4, 0, !dbg !6672
  br i1 %5, label %6, label %33, !dbg !6673

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6674
  %8 = icmp sgt i32 %7, -1, !dbg !6676
  br i1 %8, label %9, label %33, !dbg !6677

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6678
  %11 = and i32 %10, 1073741824, !dbg !6680
  %12 = icmp eq i32 %11, 0, !dbg !6681
  br i1 %12, label %33, label %13, !dbg !6682

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6683
  br i1 %14, label %15, label %18, !dbg !6686

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6687
  %17 = load i32, i32* %16, align 4, !dbg !6687
  call void @llvm.dbg.value(metadata i32 %17, metadata !6666, metadata !DIExpression()), !dbg !6667
  br label %33, !dbg !6689

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6690
  %20 = and i32 %19, 255, !dbg !6692
  %21 = icmp eq i32 %20, 0, !dbg !6693
  br i1 %21, label %24, label %22, !dbg !6694

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6695
  call void @llvm.dbg.value(metadata i32 %23, metadata !6666, metadata !DIExpression()), !dbg !6667
  br label %33, !dbg !6697

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6698
  %26 = and i32 %25, 65280, !dbg !6700
  %27 = icmp eq i32 %26, 0, !dbg !6701
  br i1 %27, label %29, label %28, !dbg !6702

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6703
  call void @llvm.dbg.value(metadata i32 0, metadata !6666, metadata !DIExpression()), !dbg !6667
  br label %33, !dbg !6705

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6706
  %31 = icmp ult i32 %30, 65536, !dbg !6708
  br i1 %31, label %33, label %32, !dbg !6709

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6710
  call void @llvm.dbg.value(metadata i32 0, metadata !6666, metadata !DIExpression()), !dbg !6667
  br label %33, !dbg !6712

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6667
  call void @llvm.dbg.value(metadata i32 %34, metadata !6666, metadata !DIExpression()), !dbg !6667
  ret i32 %34, !dbg !6713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6714 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6716, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i32 %1, metadata !6717, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i8* %2, metadata !6718, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i32 0, metadata !6719, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i32 -22, metadata !6720, metadata !DIExpression()), !dbg !6729
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6730
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6732
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6734
  %7 = and i32 %6, 2, !dbg !6735
  %8 = icmp eq i32 %7, 0, !dbg !6736
  br i1 %8, label %19, label %9, !dbg !6737

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6738
  call void @llvm.dbg.value(metadata i32 %10, metadata !6721, metadata !DIExpression()), !dbg !6739
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6740
  %12 = and i32 %11, 128, !dbg !6742
  %13 = icmp eq i32 %12, 0, !dbg !6743
  br i1 %13, label %19, label %14, !dbg !6744

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6720, metadata !DIExpression()), !dbg !6729
  %15 = icmp eq i32 %1, 0, !dbg !6745
  br i1 %15, label %19, label %16, !dbg !6748

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6749
  %18 = and i32 %17, -129, !dbg !6749
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6749
  br label %19, !dbg !6751

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6729
  call void @llvm.dbg.value(metadata i32 %20, metadata !6720, metadata !DIExpression()), !dbg !6729
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6752
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6754
  %23 = and i32 %22, 16, !dbg !6755
  %24 = icmp eq i32 %23, 0, !dbg !6755
  br i1 %24, label %25, label %29, !dbg !6756

25:                                               ; preds = %19
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6757
  %27 = and i32 %26, 2, !dbg !6758
  %28 = icmp eq i32 %27, 0, !dbg !6758
  br i1 %28, label %38, label %29, !dbg !6759

29:                                               ; preds = %25, %19
  %30 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6760
  %31 = and i32 %30, 2048, !dbg !6761
  %32 = icmp eq i32 %31, 0, !dbg !6761
  br i1 %32, label %38, label %33, !dbg !6762

33:                                               ; preds = %29
  %34 = ptrtoint %struct.__esf* %0 to i32, !dbg !6763
  %35 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %34) #25, !dbg !6764
  call void @llvm.dbg.value(metadata i32 %35, metadata !6724, metadata !DIExpression()), !dbg !6765
  %36 = icmp eq i32 %35, 0, !dbg !6766
  br i1 %36, label %38, label %37, !dbg !6768

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %35, metadata !6769, metadata !DIExpression()) #24, !dbg !6772
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %35) #24, !dbg !6775, !srcloc !6776
  call void @llvm.dbg.value(metadata i32 2, metadata !6719, metadata !DIExpression()), !dbg !6729
  br label %38, !dbg !6777

38:                                               ; preds = %37, %33, %29, %25
  %39 = phi i32 [ 0, %29 ], [ 0, %25 ], [ 2, %37 ], [ 0, %33 ], !dbg !6729
  call void @llvm.dbg.value(metadata i32 %39, metadata !6719, metadata !DIExpression()), !dbg !6729
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6778
  %41 = or i32 %40, 255, !dbg !6778
  store volatile i32 %41, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6778
  store i8 0, i8* %2, align 1, !dbg !6779
  ret i32 %39, !dbg !6780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #16 !dbg !6781 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6785, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.value(metadata i32 %0, metadata !6786, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.value(metadata i8* %1, metadata !6787, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.value(metadata i32 0, metadata !6788, metadata !DIExpression()), !dbg !6792
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6793
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6795
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6797
  %6 = and i32 %5, 512, !dbg !6798
  %7 = icmp eq i32 %6, 0, !dbg !6798
  br i1 %7, label %18, label %8, !dbg !6799

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6800
  call void @llvm.dbg.value(metadata i32 %9, metadata !6789, metadata !DIExpression()), !dbg !6801
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6802
  %11 = and i32 %10, 32768, !dbg !6804
  %12 = icmp ne i32 %11, 0, !dbg !6805
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6806
  br i1 %14, label %15, label %18, !dbg !6806

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6807
  %17 = and i32 %16, -32769, !dbg !6807
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6807
  br label %18, !dbg !6811

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6812
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6814
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6816
  %22 = or i32 %21, 65280, !dbg !6816
  store volatile i32 %22, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6816
  store i8 0, i8* %1, align 1, !dbg !6817
  ret void, !dbg !6818
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #16 !dbg !6819 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6825, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata i32 0, metadata !6826, metadata !DIExpression()), !dbg !6827
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6828
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6830
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6832
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6834
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6836
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6838
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6840
  %8 = or i32 %7, -65536, !dbg !6840
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6840
  ret void, !dbg !6841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6842 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6846, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.value(metadata i8* %0, metadata !6847, metadata !DIExpression()), !dbg !6848
  store i8 0, i8* %0, align 1, !dbg !6849
  ret void, !dbg !6850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6851 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6855, metadata !DIExpression()), !dbg !6858
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6859
  %3 = load i32, i32* %2, align 4, !dbg !6859
  %4 = inttoptr i32 %3 to i16*, !dbg !6860
  call void @llvm.dbg.value(metadata i16* %4, metadata !6856, metadata !DIExpression()), !dbg !6858
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6861
  %6 = or i32 %5, 256, !dbg !6861
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6861
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6862, !srcloc !6865
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6866, !srcloc !6869
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6870
  %8 = load i16, i16* %7, align 2, !dbg !6871
  call void @llvm.dbg.value(metadata i16 %8, metadata !6857, metadata !DIExpression()), !dbg !6858
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6872
  %10 = and i32 %9, -257, !dbg !6872
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6872
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6873, !srcloc !6865
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6875, !srcloc !6869
  %11 = icmp eq i16 %8, -8446, !dbg !6877
  ret i1 %11, !dbg !6879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !6880 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6881
  %2 = or i32 %1, 16, !dbg !6881
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6881
  ret void, !dbg !6882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !6883 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6886, metadata !DIExpression()), !dbg !6887
  br label %1, !dbg !6888

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6886, metadata !DIExpression()), !dbg !6887
  tail call fastcc void @__NVIC_SetPriority.34(i32 noundef %2) #26, !dbg !6890
  %3 = add nuw nsw i32 %2, 1, !dbg !6893
  call void @llvm.dbg.value(metadata i32 %3, metadata !6886, metadata !DIExpression()), !dbg !6887
  %4 = icmp eq i32 %3, 45, !dbg !6894
  br i1 %4, label %5, label %1, !dbg !6888, !llvm.loop !6895

5:                                                ; preds = %1
  ret void, !dbg !6897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.34(i32 noundef %0) unnamed_addr #16 !dbg !6898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6900, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.value(metadata i32 1, metadata !6901, metadata !DIExpression()), !dbg !6902
  %2 = and i32 %0, 15, !dbg !6903
  %3 = add nsw i32 %2, -4, !dbg !6903
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6903
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6903
  %6 = icmp slt i32 %0, 0, !dbg !6903
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6903
  store volatile i8 16, i8* %7, align 1, !dbg !6904
  ret void, !dbg !6906
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6907 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7013, metadata !DIExpression()), !dbg !7014
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7015
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7017
  br i1 %3, label %4, label %12, !dbg !7018

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7019, !srcloc !7031
  call void @llvm.dbg.value(metadata i32 %5, metadata !7022, metadata !DIExpression()) #24, !dbg !7032
  %6 = icmp eq i32 %5, 0, !dbg !7033
  br i1 %6, label %12, label %7, !dbg !7034

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7035
  %9 = or i32 %8, 268435456, !dbg !7035
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7035
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7037
  %11 = and i32 %10, -32769, !dbg !7037
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7037
  br label %12, !dbg !7038

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7039
  ret void, !dbg !7040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7041 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7042
  ret void, !dbg !7043
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !270 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !388, metadata !DIExpression()), !dbg !7044
  call void @llvm.dbg.value(metadata i8 0, metadata !389, metadata !DIExpression()), !dbg !7044
  call void @llvm.dbg.value(metadata i32 64, metadata !391, metadata !DIExpression()), !dbg !7044
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7045
  %3 = load i32, i32* %2, align 4, !dbg !7045
  %4 = add i32 %3, -64, !dbg !7047
  call void @llvm.dbg.value(metadata i32 %4, metadata !390, metadata !DIExpression()), !dbg !7044
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7048
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7049
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7050
  call void @llvm.dbg.value(metadata i8 1, metadata !389, metadata !DIExpression()), !dbg !7044
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7051
  ret void, !dbg !7052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7053 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7054
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7055, !srcloc !7058
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7059, !srcloc !7062
  ret void, !dbg !7063
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7064 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7065, !srcloc !7068
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7069
  ret void, !dbg !7070
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !7071 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7086, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata i8 %1, metadata !7087, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata i32 %2, metadata !7088, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata i32 %3, metadata !7089, metadata !DIExpression()), !dbg !7090
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7091
  ret void, !dbg !7093
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !7094 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7099, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.value(metadata i8 %1, metadata !7100, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.value(metadata i32 undef, metadata !7101, metadata !DIExpression()), !dbg !7104
  call void @llvm.dbg.value(metadata i32 undef, metadata !7102, metadata !DIExpression()), !dbg !7104
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7105
  call void @llvm.dbg.value(metadata i8 %3, metadata !7103, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7104
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7106
  call void @llvm.dbg.value(metadata i32 %4, metadata !7103, metadata !DIExpression()), !dbg !7104
  %5 = trunc i32 %4 to i8, !dbg !7107
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7108
  ret void, !dbg !7109
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !7110 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7114, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i8 %1, metadata !7115, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i8 %2, metadata !7116, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i1 %3, metadata !7117, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7120
  %5 = zext i8 %2 to i32, !dbg !7121
  call void @llvm.dbg.value(metadata i32 %5, metadata !7119, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i32 0, metadata !7118, metadata !DIExpression()), !dbg !7120
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7119, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i32 0, metadata !7118, metadata !DIExpression()), !dbg !7120
  %7 = icmp eq i8 %1, 0, !dbg !7122
  br i1 %7, label %29, label %8, !dbg !7125

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7119, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.value(metadata i32 %10, metadata !7118, metadata !DIExpression()), !dbg !7120
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7126
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7129
  %13 = load i32, i32* %12, align 4, !dbg !7129
  %14 = icmp eq i32 %13, 0, !dbg !7130
  br i1 %14, label %25, label %15, !dbg !7131

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7132

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7134
  %18 = icmp eq i32 %17, 0, !dbg !7134
  br i1 %18, label %29, label %19, !dbg !7135

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7136
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7137
  call void @llvm.dbg.value(metadata i32 %21, metadata !7119, metadata !DIExpression()), !dbg !7120
  %22 = icmp eq i32 %21, -22, !dbg !7138
  br i1 %22, label %29, label %23, !dbg !7140

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7141
  call void @llvm.dbg.value(metadata i32 %24, metadata !7119, metadata !DIExpression()), !dbg !7120
  br label %25, !dbg !7142

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7120
  call void @llvm.dbg.value(metadata i32 %26, metadata !7119, metadata !DIExpression()), !dbg !7120
  %27 = add nuw nsw i32 %10, 1, !dbg !7143
  call void @llvm.dbg.value(metadata i32 %27, metadata !7118, metadata !DIExpression()), !dbg !7120
  %28 = icmp eq i32 %27, %6, !dbg !7122
  br i1 %28, label %29, label %8, !dbg !7125, !llvm.loop !7144

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7120
  ret i32 %30, !dbg !7146
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7147 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7151, metadata !DIExpression()), !dbg !7153
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7154
  %3 = load i32, i32* %2, align 4, !dbg !7154
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7155, !range !3454
  %5 = icmp ult i32 %4, 2, !dbg !7155
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7156
  br i1 %7, label %8, label %15, !dbg !7156

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7157
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7158
  %11 = load i32, i32* %10, align 4, !dbg !7158
  %12 = and i32 %11, %9, !dbg !7159
  %13 = icmp eq i32 %12, 0, !dbg !7160
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7152, metadata !DIExpression()), !dbg !7153
  ret i32 %16, !dbg !7161
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7162 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7166, metadata !DIExpression()), !dbg !7169
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7167, metadata !DIExpression()), !dbg !7169
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7170
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7170
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7168, metadata !DIExpression()), !dbg !7171
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7172
  %6 = load i32, i32* %5, align 4, !dbg !7172
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7173
  store i32 %6, i32* %7, align 4, !dbg !7174
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7175
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7176
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7177
  %11 = load i32, i32* %10, align 4, !dbg !7177
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7178
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7179
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7180
  ret i32 %12, !dbg !7181
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7182 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7189, metadata !DIExpression()), !dbg !7193
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7190, metadata !DIExpression()), !dbg !7193
  call void @llvm.dbg.value(metadata i32 undef, metadata !7191, metadata !DIExpression()), !dbg !7193
  call void @llvm.dbg.value(metadata i32 %2, metadata !7192, metadata !DIExpression()), !dbg !7193
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7194
  %5 = load i32, i32* %4, align 4, !dbg !7194
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7195
  %7 = or i32 %6, %5, !dbg !7196
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7197
  store i32 %7, i32* %8, align 4, !dbg !7198
  ret void, !dbg !7199
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !7200 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7204, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7205, metadata !DIExpression()), !dbg !7206
  %3 = zext i8 %0 to i32, !dbg !7207
  %4 = icmp ugt i8 %0, 7, !dbg !7209
  br i1 %4, label %6, label %5, !dbg !7210

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7211
  br label %6, !dbg !7212

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7206
  ret i32 %7, !dbg !7213
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !7214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7218, metadata !DIExpression()), !dbg !7220
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7219, metadata !DIExpression()), !dbg !7220
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7221
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7222
  %4 = load i32, i32* %3, align 4, !dbg !7222
  %5 = and i32 %4, -32, !dbg !7223
  %6 = or i32 %5, %0, !dbg !7224
  %7 = or i32 %6, 16, !dbg !7224
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7225
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7226
  %9 = load i32, i32* %8, align 4, !dbg !7226
  %10 = or i32 %9, 1, !dbg !7227
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7228
  ret void, !dbg !7229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !7230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7233, metadata !DIExpression()), !dbg !7234
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7235
  ret void, !dbg !7236
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7241, metadata !DIExpression()), !dbg !7242
  %2 = icmp ult i32 %0, 33, !dbg !7243
  br i1 %2, label %11, label %3, !dbg !7245

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7246
  br i1 %4, label %11, label %5, !dbg !7248

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7249
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7250, !range !3454
  %8 = mul nsw i32 %7, -2, !dbg !7251
  %9 = add nsw i32 %8, 62, !dbg !7251
  %10 = and i32 %9, 62, !dbg !7252
  br label %11, !dbg !7253

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7242
  ret i32 %12, !dbg !7254
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !7255 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7259, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.value(metadata i8 %1, metadata !7260, metadata !DIExpression()), !dbg !7261
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7262
  ret void, !dbg !7264
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !7265 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7269, metadata !DIExpression()), !dbg !7276
  call void @llvm.dbg.value(metadata i8 %1, metadata !7270, metadata !DIExpression()), !dbg !7276
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7277
  call void @llvm.dbg.value(metadata i8 %3, metadata !7271, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7276
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7278
  call void @llvm.dbg.value(metadata i32 %4, metadata !7271, metadata !DIExpression()), !dbg !7276
  %5 = icmp ne i32 %4, -22, !dbg !7279
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7280
  call void @llvm.dbg.value(metadata i32 %4, metadata !7272, metadata !DIExpression()), !dbg !7281
  br i1 %7, label %8, label %12, !dbg !7280

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7272, metadata !DIExpression()), !dbg !7281
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7282
  %10 = add i32 %9, 1, !dbg !7285
  call void @llvm.dbg.value(metadata i32 %10, metadata !7272, metadata !DIExpression()), !dbg !7281
  %11 = icmp eq i32 %10, 8, !dbg !7286
  br i1 %11, label %12, label %8, !dbg !7287, !llvm.loop !7288

12:                                               ; preds = %8, %2
  ret void, !dbg !7290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !7291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7294, metadata !DIExpression()), !dbg !7295
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7296
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7297
  ret void, !dbg !7298
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7299 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7304
  %2 = icmp ugt i32 %1, 8, !dbg !7306
  br i1 %2, label %14, label %3, !dbg !7307

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7308
  call void @llvm.dbg.value(metadata i32 0, metadata !7303, metadata !DIExpression()), !dbg !7309
  %4 = icmp eq i32 %1, 0, !dbg !7310
  br i1 %4, label %12, label %5, !dbg !7313

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7313

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7303, metadata !DIExpression()), !dbg !7309
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7314
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7316
  %10 = add nuw i32 %8, 1, !dbg !7317
  call void @llvm.dbg.value(metadata i32 %10, metadata !7303, metadata !DIExpression()), !dbg !7309
  %11 = icmp eq i32 %10, %1, !dbg !7310
  br i1 %11, label %12, label %7, !dbg !7313, !llvm.loop !7318

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7320
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7321
  tail call void @arm_core_mpu_enable() #26, !dbg !7322
  br label %14, !dbg !7323

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7309
  ret i32 %15, !dbg !7324
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7325 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7332, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i8* %1, metadata !7333, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i8* %0, metadata !7334, metadata !DIExpression()), !dbg !7335
  %3 = load i8, i8* %1, align 1, !dbg !7336
  %4 = icmp eq i8 %3, 0, !dbg !7337
  br i1 %4, label %13, label %5, !dbg !7338

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7332, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i8* %8, metadata !7333, metadata !DIExpression()), !dbg !7335
  store i8 %6, i8* %7, align 1, !dbg !7339
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7341
  call void @llvm.dbg.value(metadata i8* %9, metadata !7332, metadata !DIExpression()), !dbg !7335
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7342
  call void @llvm.dbg.value(metadata i8* %10, metadata !7333, metadata !DIExpression()), !dbg !7335
  %11 = load i8, i8* %10, align 1, !dbg !7336
  %12 = icmp eq i8 %11, 0, !dbg !7337
  br i1 %12, label %13, label %5, !dbg !7338, !llvm.loop !7343

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7345
  ret i8* %0, !dbg !7346
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7347 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7351, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i8* %1, metadata !7352, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i32 %2, metadata !7353, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i8* %0, metadata !7354, metadata !DIExpression()), !dbg !7355
  %4 = icmp eq i32 %2, 0, !dbg !7356
  br i1 %4, label %22, label %5, !dbg !7357

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7351, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i32 %7, metadata !7353, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i8* %8, metadata !7352, metadata !DIExpression()), !dbg !7355
  %9 = load i8, i8* %8, align 1, !dbg !7358
  %10 = icmp eq i8 %9, 0, !dbg !7359
  br i1 %10, label %16, label %11, !dbg !7360

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7361
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7363
  call void @llvm.dbg.value(metadata i8* %12, metadata !7352, metadata !DIExpression()), !dbg !7355
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7364
  call void @llvm.dbg.value(metadata i8* %13, metadata !7351, metadata !DIExpression()), !dbg !7355
  %14 = add i32 %7, -1, !dbg !7365
  call void @llvm.dbg.value(metadata i32 %14, metadata !7353, metadata !DIExpression()), !dbg !7355
  %15 = icmp eq i32 %14, 0, !dbg !7356
  br i1 %15, label %22, label %5, !dbg !7357, !llvm.loop !7366

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7351, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i32 %18, metadata !7353, metadata !DIExpression()), !dbg !7355
  store i8 0, i8* %17, align 1, !dbg !7368
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7370
  call void @llvm.dbg.value(metadata i8* %19, metadata !7351, metadata !DIExpression()), !dbg !7355
  %20 = add i32 %18, -1, !dbg !7371
  call void @llvm.dbg.value(metadata i32 %20, metadata !7353, metadata !DIExpression()), !dbg !7355
  %21 = icmp eq i32 %20, 0, !dbg !7372
  br i1 %21, label %22, label %16, !dbg !7373, !llvm.loop !7374

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7376
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7377 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7381, metadata !DIExpression()), !dbg !7384
  call void @llvm.dbg.value(metadata i32 %1, metadata !7382, metadata !DIExpression()), !dbg !7384
  call void @llvm.dbg.value(metadata i32 %1, metadata !7383, metadata !DIExpression()), !dbg !7384
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7385

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7381, metadata !DIExpression()), !dbg !7384
  %6 = load i8, i8* %5, align 1, !dbg !7386
  %7 = icmp eq i8 %6, %3, !dbg !7387
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7388
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7389
  call void @llvm.dbg.value(metadata i8* %10, metadata !7381, metadata !DIExpression()), !dbg !7384
  br i1 %9, label %11, label %4, !dbg !7388, !llvm.loop !7391

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7393
  ret i8* %12, !dbg !7394
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7395 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7397, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i32 %1, metadata !7398, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i8* null, metadata !7399, metadata !DIExpression()), !dbg !7400
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7401

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7400
  call void @llvm.dbg.value(metadata i8* %6, metadata !7399, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.value(metadata i8* %5, metadata !7397, metadata !DIExpression()), !dbg !7400
  %7 = load i8, i8* %5, align 1, !dbg !7402
  %8 = icmp eq i8 %7, %3, !dbg !7405
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7406
  call void @llvm.dbg.value(metadata i8* %9, metadata !7399, metadata !DIExpression()), !dbg !7400
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7407
  call void @llvm.dbg.value(metadata i8* %10, metadata !7397, metadata !DIExpression()), !dbg !7400
  %11 = icmp eq i8 %7, 0, !dbg !7408
  br i1 %11, label %12, label %4, !dbg !7408, !llvm.loop !7409

12:                                               ; preds = %4
  ret i8* %9, !dbg !7411
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7412 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7416, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.value(metadata i32 0, metadata !7417, metadata !DIExpression()), !dbg !7418
  %2 = load i8, i8* %0, align 1, !dbg !7419
  %3 = icmp eq i8 %2, 0, !dbg !7420
  br i1 %3, label %11, label %4, !dbg !7421

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7417, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.value(metadata i8* %6, metadata !7416, metadata !DIExpression()), !dbg !7418
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7422
  call void @llvm.dbg.value(metadata i8* %7, metadata !7416, metadata !DIExpression()), !dbg !7418
  %8 = add i32 %5, 1, !dbg !7424
  call void @llvm.dbg.value(metadata i32 %8, metadata !7417, metadata !DIExpression()), !dbg !7418
  %9 = load i8, i8* %7, align 1, !dbg !7419
  %10 = icmp eq i8 %9, 0, !dbg !7420
  br i1 %10, label %11, label %4, !dbg !7421, !llvm.loop !7425

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7418
  ret i32 %12, !dbg !7427
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7428 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7432, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.value(metadata i32 %1, metadata !7433, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.value(metadata i32 0, metadata !7434, metadata !DIExpression()), !dbg !7435
  %3 = load i8, i8* %0, align 1, !dbg !7436
  %4 = icmp ne i8 %3, 0, !dbg !7437
  %5 = icmp ne i32 %1, 0, !dbg !7438
  %6 = and i1 %4, %5, !dbg !7438
  br i1 %6, label %7, label %16, !dbg !7439

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7434, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.value(metadata i8* %9, metadata !7432, metadata !DIExpression()), !dbg !7435
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7440
  call void @llvm.dbg.value(metadata i8* %10, metadata !7432, metadata !DIExpression()), !dbg !7435
  %11 = add nuw i32 %8, 1, !dbg !7442
  call void @llvm.dbg.value(metadata i32 %11, metadata !7434, metadata !DIExpression()), !dbg !7435
  %12 = load i8, i8* %10, align 1, !dbg !7436
  %13 = icmp ne i8 %12, 0, !dbg !7437
  %14 = icmp ult i32 %11, %1, !dbg !7438
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7438
  br i1 %15, label %7, label %16, !dbg !7439, !llvm.loop !7443

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7435
  ret i32 %17, !dbg !7445
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7450, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.value(metadata i8* %1, metadata !7451, metadata !DIExpression()), !dbg !7452
  %3 = load i8, i8* %0, align 1, !dbg !7453
  %4 = load i8, i8* %1, align 1, !dbg !7454
  %5 = icmp ne i8 %3, %4, !dbg !7455
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7456
  br i1 %7, label %18, label %8, !dbg !7456

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7451, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.value(metadata i8* %10, metadata !7450, metadata !DIExpression()), !dbg !7452
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7457
  call void @llvm.dbg.value(metadata i8* %11, metadata !7450, metadata !DIExpression()), !dbg !7452
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7459
  call void @llvm.dbg.value(metadata i8* %12, metadata !7451, metadata !DIExpression()), !dbg !7452
  %13 = load i8, i8* %11, align 1, !dbg !7453
  %14 = load i8, i8* %12, align 1, !dbg !7454
  %15 = icmp ne i8 %13, %14, !dbg !7455
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7456
  br i1 %17, label %18, label %8, !dbg !7456, !llvm.loop !7460

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7453
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7454
  %21 = zext i8 %19 to i32, !dbg !7463
  %22 = zext i8 %20 to i32, !dbg !7464
  %23 = sub nsw i32 %21, %22, !dbg !7465
  ret i32 %23, !dbg !7466
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7467 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7471, metadata !DIExpression()), !dbg !7474
  call void @llvm.dbg.value(metadata i8* %1, metadata !7472, metadata !DIExpression()), !dbg !7474
  call void @llvm.dbg.value(metadata i32 %2, metadata !7473, metadata !DIExpression()), !dbg !7474
  %4 = icmp eq i32 %2, 0, !dbg !7475
  br i1 %4, label %23, label %5, !dbg !7475

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7473, metadata !DIExpression()), !dbg !7474
  call void @llvm.dbg.value(metadata i8* %7, metadata !7472, metadata !DIExpression()), !dbg !7474
  call void @llvm.dbg.value(metadata i8* %8, metadata !7471, metadata !DIExpression()), !dbg !7474
  %9 = load i8, i8* %8, align 1, !dbg !7476
  %10 = load i8, i8* %7, align 1, !dbg !7477
  %11 = icmp ne i8 %9, %10, !dbg !7478
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7479
  br i1 %13, label %19, label %14, !dbg !7479

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7480
  call void @llvm.dbg.value(metadata i8* %15, metadata !7471, metadata !DIExpression()), !dbg !7474
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7482
  call void @llvm.dbg.value(metadata i8* %16, metadata !7472, metadata !DIExpression()), !dbg !7474
  %17 = add i32 %6, -1, !dbg !7483
  call void @llvm.dbg.value(metadata i32 %17, metadata !7473, metadata !DIExpression()), !dbg !7474
  %18 = icmp eq i32 %17, 0, !dbg !7475
  br i1 %18, label %23, label %5, !dbg !7475, !llvm.loop !7484

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7487
  %21 = zext i8 %10 to i32, !dbg !7488
  %22 = sub nsw i32 %20, %21, !dbg !7489
  br label %23, !dbg !7490

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7490
  ret i32 %24, !dbg !7491
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7492 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7497, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.value(metadata i8* %1, metadata !7498, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.value(metadata i8** %2, metadata !7499, metadata !DIExpression()), !dbg !7502
  %4 = icmp eq i8* %0, null, !dbg !7503
  br i1 %4, label %5, label %7, !dbg !7503

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7504
  br label %7, !dbg !7503

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7503
  call void @llvm.dbg.value(metadata i8* %8, metadata !7500, metadata !DIExpression()), !dbg !7502
  %9 = load i8, i8* %8, align 1, !dbg !7505
  %10 = icmp eq i8 %9, 0, !dbg !7505
  br i1 %10, label %33, label %11, !dbg !7506

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7500, metadata !DIExpression()), !dbg !7502
  %14 = zext i8 %12 to i32, !dbg !7505
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7507
  %16 = icmp eq i8* %15, null, !dbg !7506
  br i1 %16, label %21, label %17, !dbg !7508

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7509
  call void @llvm.dbg.value(metadata i8* %18, metadata !7500, metadata !DIExpression()), !dbg !7502
  %19 = load i8, i8* %18, align 1, !dbg !7505
  %20 = icmp eq i8 %19, 0, !dbg !7505
  br i1 %20, label %33, label %11, !dbg !7506, !llvm.loop !7511

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7501, metadata !DIExpression()), !dbg !7502
  %24 = zext i8 %22 to i32, !dbg !7513
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7514
  %26 = icmp eq i8* %25, null, !dbg !7515
  br i1 %26, label %27, label %31, !dbg !7516

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7517
  call void @llvm.dbg.value(metadata i8* %28, metadata !7501, metadata !DIExpression()), !dbg !7502
  %29 = load i8, i8* %28, align 1, !dbg !7513
  %30 = icmp eq i8 %29, 0, !dbg !7513
  br i1 %30, label %33, label %21, !dbg !7519, !llvm.loop !7520

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7522
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7525
  br label %33, !dbg !7526

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7502
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7502
  store i8* %34, i8** %2, align 4, !dbg !7502
  ret i8* %35, !dbg !7527
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7528 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7530, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata i8* %1, metadata !7531, metadata !DIExpression()), !dbg !7532
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7533
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7534
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7535
  ret i8* %0, !dbg !7536
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7537 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7539, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i8* %1, metadata !7540, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i32 %2, metadata !7541, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i8* %0, metadata !7542, metadata !DIExpression()), !dbg !7544
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7545
  call void @llvm.dbg.value(metadata i32 %4, metadata !7543, metadata !DIExpression()), !dbg !7544
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7546
  call void @llvm.dbg.value(metadata i8* %5, metadata !7539, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i8* %1, metadata !7540, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i32 %2, metadata !7541, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i32 %2, metadata !7541, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7544
  %6 = icmp eq i32 %2, 0, !dbg !7547
  br i1 %6, label %18, label %7, !dbg !7548

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7549
  call void @llvm.dbg.value(metadata i8* %9, metadata !7539, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i8* %10, metadata !7540, metadata !DIExpression()), !dbg !7544
  %12 = load i8, i8* %10, align 1, !dbg !7550
  %13 = icmp eq i8 %12, 0, !dbg !7551
  br i1 %13, label %18, label %14, !dbg !7552

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7553
  call void @llvm.dbg.value(metadata i8* %15, metadata !7540, metadata !DIExpression()), !dbg !7544
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7555
  call void @llvm.dbg.value(metadata i8* %16, metadata !7539, metadata !DIExpression()), !dbg !7544
  store i8 %12, i8* %9, align 1, !dbg !7556
  call void @llvm.dbg.value(metadata i32 %11, metadata !7541, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i32 %11, metadata !7541, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7544
  %17 = icmp eq i32 %11, 0, !dbg !7547
  br i1 %17, label %18, label %7, !dbg !7548, !llvm.loop !7557

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7544
  store i8 0, i8* %19, align 1, !dbg !7559
  ret i8* %0, !dbg !7560
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7561 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7565, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i8* %1, metadata !7566, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i32 %2, metadata !7567, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i8* %0, metadata !7568, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i8* %1, metadata !7569, metadata !DIExpression()), !dbg !7570
  %4 = icmp eq i32 %2, 0, !dbg !7571
  br i1 %4, label %31, label %5, !dbg !7573

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7569, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i8* %0, metadata !7568, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i32 %2, metadata !7567, metadata !DIExpression()), !dbg !7570
  %6 = add i32 %2, -1, !dbg !7574
  call void @llvm.dbg.value(metadata i32 %6, metadata !7567, metadata !DIExpression()), !dbg !7570
  %7 = icmp eq i32 %6, 0, !dbg !7575
  br i1 %7, label %23, label %8, !dbg !7576

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7577
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7577
  br label %11, !dbg !7577

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7569, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i8* %14, metadata !7568, metadata !DIExpression()), !dbg !7570
  %15 = load i8, i8* %14, align 1, !dbg !7578
  %16 = load i8, i8* %13, align 1, !dbg !7579
  %17 = icmp eq i8 %15, %16, !dbg !7580
  br i1 %17, label %18, label %23, !dbg !7577

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7581
  call void @llvm.dbg.value(metadata i8* %19, metadata !7568, metadata !DIExpression()), !dbg !7570
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7583
  call void @llvm.dbg.value(metadata i8* %20, metadata !7569, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i32 %12, metadata !7567, metadata !DIExpression()), !dbg !7570
  %21 = add i32 %12, -1, !dbg !7574
  call void @llvm.dbg.value(metadata i32 %21, metadata !7567, metadata !DIExpression()), !dbg !7570
  %22 = icmp eq i32 %21, 0, !dbg !7575
  br i1 %22, label %23, label %11, !dbg !7576, !llvm.loop !7584

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7570
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7570
  %26 = load i8, i8* %24, align 1, !dbg !7586
  %27 = zext i8 %26 to i32, !dbg !7586
  %28 = load i8, i8* %25, align 1, !dbg !7587
  %29 = zext i8 %28 to i32, !dbg !7587
  %30 = sub nsw i32 %27, %29, !dbg !7588
  br label %31, !dbg !7589

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7570
  ret i32 %32, !dbg !7590
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7591 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7595, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i8* %1, metadata !7596, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i32 %2, metadata !7597, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i8* %0, metadata !7598, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i8* %1, metadata !7599, metadata !DIExpression()), !dbg !7600
  %4 = ptrtoint i8* %0 to i32, !dbg !7601
  %5 = ptrtoint i8* %1 to i32, !dbg !7601
  %6 = sub i32 %4, %5, !dbg !7601
  %7 = icmp ult i32 %6, %2, !dbg !7603
  br i1 %7, label %10, label %8, !dbg !7604

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7599, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i8* %0, metadata !7598, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i32 %2, metadata !7597, metadata !DIExpression()), !dbg !7600
  %9 = icmp eq i32 %2, 0, !dbg !7605
  br i1 %9, label %26, label %17, !dbg !7607

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7597, metadata !DIExpression()), !dbg !7600
  %12 = add i32 %11, -1, !dbg !7608
  call void @llvm.dbg.value(metadata i32 %12, metadata !7597, metadata !DIExpression()), !dbg !7600
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7611
  %14 = load i8, i8* %13, align 1, !dbg !7611
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7612
  store i8 %14, i8* %15, align 1, !dbg !7613
  %16 = icmp eq i32 %12, 0, !dbg !7614
  br i1 %16, label %26, label %10, !dbg !7615, !llvm.loop !7616

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7599, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i8* %19, metadata !7598, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i32 %20, metadata !7597, metadata !DIExpression()), !dbg !7600
  %21 = load i8, i8* %18, align 1, !dbg !7618
  store i8 %21, i8* %19, align 1, !dbg !7620
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7621
  call void @llvm.dbg.value(metadata i8* %22, metadata !7598, metadata !DIExpression()), !dbg !7600
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7622
  call void @llvm.dbg.value(metadata i8* %23, metadata !7599, metadata !DIExpression()), !dbg !7600
  %24 = add i32 %20, -1, !dbg !7623
  call void @llvm.dbg.value(metadata i32 %24, metadata !7597, metadata !DIExpression()), !dbg !7600
  %25 = icmp eq i32 %24, 0, !dbg !7605
  br i1 %25, label %26, label %17, !dbg !7607, !llvm.loop !7624

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7626
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7627 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7633, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %1, metadata !7634, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 %2, metadata !7635, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %0, metadata !7636, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %1, metadata !7637, metadata !DIExpression()), !dbg !7638
  %4 = icmp eq i32 %2, 0, !dbg !7639
  br i1 %4, label %14, label %5, !dbg !7640

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7637, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %7, metadata !7636, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 %8, metadata !7635, metadata !DIExpression()), !dbg !7638
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7641
  call void @llvm.dbg.value(metadata i8* %9, metadata !7637, metadata !DIExpression()), !dbg !7638
  %10 = load i8, i8* %6, align 1, !dbg !7643
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7644
  call void @llvm.dbg.value(metadata i8* %11, metadata !7636, metadata !DIExpression()), !dbg !7638
  store i8 %10, i8* %7, align 1, !dbg !7645
  %12 = add i32 %8, -1, !dbg !7646
  call void @llvm.dbg.value(metadata i32 %12, metadata !7635, metadata !DIExpression()), !dbg !7638
  %13 = icmp eq i32 %12, 0, !dbg !7639
  br i1 %13, label %14, label %5, !dbg !7640, !llvm.loop !7647

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7649
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7650 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7654, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i32 %1, metadata !7655, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i32 %2, metadata !7656, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i8* %0, metadata !7657, metadata !DIExpression()), !dbg !7659
  %4 = trunc i32 %1 to i8, !dbg !7660
  call void @llvm.dbg.value(metadata i8 %4, metadata !7658, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i32 %2, metadata !7656, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i8* %0, metadata !7657, metadata !DIExpression()), !dbg !7659
  %5 = icmp eq i32 %2, 0, !dbg !7661
  br i1 %5, label %12, label %6, !dbg !7662

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7656, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.value(metadata i8* %8, metadata !7657, metadata !DIExpression()), !dbg !7659
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7663
  call void @llvm.dbg.value(metadata i8* %9, metadata !7657, metadata !DIExpression()), !dbg !7659
  store i8 %4, i8* %8, align 1, !dbg !7665
  %10 = add i32 %7, -1, !dbg !7666
  call void @llvm.dbg.value(metadata i32 %10, metadata !7656, metadata !DIExpression()), !dbg !7659
  %11 = icmp eq i32 %10, 0, !dbg !7661
  br i1 %11, label %12, label %6, !dbg !7662, !llvm.loop !7667

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7669
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7670 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7674, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i32 %1, metadata !7675, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i32 %2, metadata !7676, metadata !DIExpression()), !dbg !7680
  %4 = icmp eq i32 %2, 0, !dbg !7681
  br i1 %4, label %17, label %5, !dbg !7682

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7683

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7684
  call void @llvm.dbg.value(metadata i8* %9, metadata !7677, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i32 %8, metadata !7676, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i8* %9, metadata !7677, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7684
  %10 = load i8, i8* %9, align 1, !dbg !7685
  %11 = icmp eq i8 %10, %6, !dbg !7688
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7689
  call void @llvm.dbg.value(metadata i8* %12, metadata !7677, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i32 %13, metadata !7676, metadata !DIExpression()), !dbg !7680
  br i1 %15, label %16, label %7, !dbg !7689, !llvm.loop !7690

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7692

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7680
  ret i8* %19, !dbg !7693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7694 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7696, metadata !DIExpression()), !dbg !7697
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7698
  ret void, !dbg !7699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7702, metadata !DIExpression()), !dbg !7703
  ret i32 -1, !dbg !7704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7709, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.value(metadata i32* %1, metadata !7710, metadata !DIExpression()), !dbg !7711
  %3 = ptrtoint i32* %1 to i32, !dbg !7712
  %4 = and i32 %3, -2, !dbg !7712
  %5 = icmp eq i32 %4, 2, !dbg !7712
  br i1 %5, label %6, label %9, !dbg !7712

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7713
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !7713
  br label %9, !dbg !7714

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7714
  ret i32 %10, !dbg !7715
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7718, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.value(metadata i32* %1, metadata !7719, metadata !DIExpression()), !dbg !7720
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7721
  ret i32 %3, !dbg !7722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7723 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7726, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i32* %1, metadata !7727, metadata !DIExpression()), !dbg !7728
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7729, !srcloc !7731
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7732
  ret i32 %3, !dbg !7733
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7734 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7739, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32* %1, metadata !7740, metadata !DIExpression()), !dbg !7743
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7744
  call void @llvm.dbg.value(metadata i32 %3, metadata !7741, metadata !DIExpression()), !dbg !7743
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7745
  call void @llvm.dbg.value(metadata i32 %4, metadata !7742, metadata !DIExpression()), !dbg !7743
  %5 = icmp ne i32 %3, %4, !dbg !7746
  %6 = sext i1 %5 to i32, !dbg !7747
  ret i32 %6, !dbg !7748
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7749 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7753, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.value(metadata i32 %1, metadata !7754, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.value(metadata i32 %2, metadata !7755, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.value(metadata i32* %3, metadata !7756, metadata !DIExpression()), !dbg !7757
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7758
  ret i32 %5, !dbg !7759
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7760 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7762, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.value(metadata i32 %1, metadata !7763, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.value(metadata i32 %2, metadata !7764, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.value(metadata i32* %3, metadata !7765, metadata !DIExpression()), !dbg !7766
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7767, !srcloc !7769
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7770
  ret i32 %5, !dbg !7771
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7772 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7774, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32 %1, metadata !7775, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32 %2, metadata !7776, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32* %3, metadata !7777, metadata !DIExpression()), !dbg !7782
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7783
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7785
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7785
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7785
  br i1 %11, label %33, label %12, !dbg !7785

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7782
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7782
  call void @llvm.dbg.value(metadata i8* %14, metadata !7780, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32 %13, metadata !7778, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32 %1, metadata !7779, metadata !DIExpression()), !dbg !7782
  br label %15, !dbg !7786

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7788
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7782
  call void @llvm.dbg.value(metadata i8* %17, metadata !7780, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32 %16, metadata !7779, metadata !DIExpression()), !dbg !7782
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7789
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7792
  call void @llvm.dbg.value(metadata i8* %19, metadata !7780, metadata !DIExpression()), !dbg !7782
  %20 = load i8, i8* %17, align 1, !dbg !7793
  %21 = zext i8 %20 to i32, !dbg !7794
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !7789
  %23 = icmp eq i32 %22, -1, !dbg !7795
  br i1 %23, label %30, label %24, !dbg !7796

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7797
  call void @llvm.dbg.value(metadata i32 %25, metadata !7779, metadata !DIExpression()), !dbg !7782
  %26 = icmp eq i32 %25, 0, !dbg !7798
  br i1 %26, label %27, label %15, !dbg !7799, !llvm.loop !7800

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7802
  call void @llvm.dbg.value(metadata i32 %28, metadata !7778, metadata !DIExpression()), !dbg !7782
  %29 = icmp eq i32 %28, 0, !dbg !7803
  br i1 %29, label %30, label %12, !dbg !7804, !llvm.loop !7805

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7782
  call void @llvm.dbg.value(metadata i32 %31, metadata !7778, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.label(metadata !7781), !dbg !7808
  %32 = sub i32 %2, %31, !dbg !7809
  br label %33, !dbg !7810

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7782
  ret i32 %34, !dbg !7811
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7812 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7816, metadata !DIExpression()), !dbg !7817
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7818
  %3 = icmp eq i32 %2, -1, !dbg !7820
  br i1 %3, label %8, label %4, !dbg !7821

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7822
  %6 = icmp eq i32 %5, -1, !dbg !7823
  %7 = sext i1 %6 to i32, !dbg !7822
  br label %8, !dbg !7824

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7817
  ret i32 %9, !dbg !7825
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7826 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7828, metadata !DIExpression()), !dbg !7839
  %8 = bitcast i64* %2 to i8*, !dbg !7840
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #24, !dbg !7840
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !7829, metadata !DIExpression()), !dbg !7841
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !7841
  store i64 %9, i64* %2, align 8, !dbg !7841
  %10 = bitcast i64* %4 to i8*, !dbg !7842
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #24, !dbg !7842
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !7837, metadata !DIExpression()), !dbg !7843
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !7843
  store i64 %11, i64* %4, align 8, !dbg !7843
  %12 = bitcast i64* %6 to i8*, !dbg !7844
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #24, !dbg !7844
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !7838, metadata !DIExpression()), !dbg !7845
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !7845
  store i64 %13, i64* %6, align 8, !dbg !7845
  %14 = trunc i64 %9 to i32, !dbg !7846
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !7846
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #26, !dbg !7848
  %17 = trunc i64 %13 to i32, !dbg !7849
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !7849
  br i1 %16, label %19, label %26, !dbg !7849

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !7849
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !7849
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #26, !dbg !7850
  br i1 %22, label %23, label %26, !dbg !7851

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #26, !dbg !7852
  br i1 %24, label %25, label %26, !dbg !7853

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #26, !dbg !7854
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #26, !dbg !7855
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #26, !dbg !7856
  br label %26, !dbg !7857

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !7839
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #24, !dbg !7858
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #24, !dbg !7858
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #24, !dbg !7858
  ret i32 %27, !dbg !7858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !7859 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7864, metadata !DIExpression()), !dbg !7865
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7866, !srcloc !7868
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #26, !dbg !7869
  ret i1 %2, !dbg !7870
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7871 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !7876, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.value(metadata i32 %1, metadata !7877, metadata !DIExpression()), !dbg !7878
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !7879
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !7879
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !7880
  %6 = load i8, i8* %5, align 4, !dbg !7880
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !7881
  %8 = load i16, i16* %7, align 2, !dbg !7881
  %9 = zext i16 %8 to i32, !dbg !7882
  %10 = or i32 %9, %1, !dbg !7883
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #26, !dbg !7884
  ret void, !dbg !7885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !7886 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7889, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8 %1, metadata !7890, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i32 %2, metadata !7891, metadata !DIExpression()), !dbg !7892
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7893, !srcloc !7895
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #26, !dbg !7896
  ret void, !dbg !7897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !7898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7900, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i8 %1, metadata !7901, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i32 %2, metadata !7902, metadata !DIExpression()), !dbg !7907
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !7908
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !7908
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !7908
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !7903, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i8* undef, metadata !7904, metadata !DIExpression()), !dbg !7907
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7909
  %8 = bitcast i8** %7 to %struct.z_heap_bucket**, !dbg !7909
  %9 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %8, align 4, !dbg !7909
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !7906, metadata !DIExpression()), !dbg !7907
  %10 = and i32 %2, 786432
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 1048577, !dbg !7910
  %13 = icmp ne i32 %12, 1048577, !dbg !7910
  %14 = or i1 %13, %11, !dbg !7910
  %15 = xor i32 %2, 786432, !dbg !7910
  %16 = select i1 %14, i32 %2, i32 %15, !dbg !7910
  call void @llvm.dbg.value(metadata i32 %16, metadata !7902, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i32 %16, metadata !7902, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !7907
  %17 = and i32 %16, 1, !dbg !7912
  %18 = icmp eq i32 %17, 0, !dbg !7914
  %19 = zext i8 %1 to i32, !dbg !7915
  %20 = shl nuw i32 1, %19, !dbg !7915
  br i1 %18, label %25, label %21, !dbg !7916

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %9, i32 0, i32 0, !dbg !7917
  %23 = load i32, i32* %22, align 4, !dbg !7919
  %24 = or i32 %23, %20, !dbg !7919
  store i32 %24, i32* %22, align 4, !dbg !7919
  br label %30, !dbg !7920

25:                                               ; preds = %3
  %26 = xor i32 %20, -1, !dbg !7921
  %27 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %9, i32 0, i32 0, !dbg !7923
  %28 = load i32, i32* %27, align 4, !dbg !7924
  %29 = and i32 %28, %26, !dbg !7924
  store i32 %29, i32* %27, align 4, !dbg !7924
  br label %30

30:                                               ; preds = %25, %21
  %31 = and i32 %16, -1048577, !dbg !7925
  call void @llvm.dbg.value(metadata i32 %31, metadata !7902, metadata !DIExpression()), !dbg !7907
  %32 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !7926
  %33 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %32, align 4, !dbg !7926
  %34 = tail call i32 %33(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %31) #25, !dbg !7927
  ret void, !dbg !7928
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !7929 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7931, metadata !DIExpression()), !dbg !7932
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !7933
  ret i1 %2, !dbg !7934
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7935 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7937, metadata !DIExpression()), !dbg !7938
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7939
  ret void, !dbg !7940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7945, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.value(metadata i32 %1, metadata !7946, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7947, metadata !DIExpression()), !dbg !7951
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7952
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7952
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7952
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7948, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.value(metadata i32 %0, metadata !7950, metadata !DIExpression()), !dbg !7951
  %7 = icmp slt i32 %0, %1, !dbg !7953
  br i1 %7, label %8, label %22, !dbg !7956

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7950, metadata !DIExpression()), !dbg !7951
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7957
  %11 = icmp eq i32 %10, 0, !dbg !7957
  br i1 %11, label %19, label %12, !dbg !7960

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7961
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7963
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7963
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7965
  br i1 %15, label %19, label %16, !dbg !7966

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7967
  %18 = load i8*, i8** %17, align 4, !dbg !7967
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !7968
  br label %19, !dbg !7969

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7970
  call void @llvm.dbg.value(metadata i32 %20, metadata !7950, metadata !DIExpression()), !dbg !7951
  %21 = icmp eq i32 %20, %1, !dbg !7953
  br i1 %21, label %22, label %8, !dbg !7956, !llvm.loop !7971

22:                                               ; preds = %19, %3
  ret void, !dbg !7973
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !7974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7976, metadata !DIExpression()), !dbg !7977
  %2 = shl nuw i32 1, %0, !dbg !7978
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !7981
  ret i32 %3, !dbg !7982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !7983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7987, metadata !DIExpression()), !dbg !7988
  %2 = shl nuw i32 1, %0, !dbg !7989
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !7992
  ret void, !dbg !7993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7997, metadata !DIExpression()), !dbg !7998
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !7999
  ret void, !dbg !8000
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !8001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8003, metadata !DIExpression()), !dbg !8004
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !8005
  %3 = and i32 %2, %0, !dbg !8005
  %4 = icmp eq i32 %3, %0, !dbg !8006
  %5 = zext i1 %4 to i32, !dbg !8006
  ret i32 %5, !dbg !8007
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8008 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8010, metadata !DIExpression()), !dbg !8011
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8012
  ret void, !dbg !8013
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8014 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8016, metadata !DIExpression()), !dbg !8017
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8018
  ret void, !dbg !8019
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8020 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8022, metadata !DIExpression()), !dbg !8023
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8024
  ret void, !dbg !8025
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8026 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8028, metadata !DIExpression()), !dbg !8029
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8030
  ret void, !dbg !8031
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8032 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8034, metadata !DIExpression()), !dbg !8035
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8036
  ret void, !dbg !8037
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8038 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8040, metadata !DIExpression()), !dbg !8041
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8042
  ret void, !dbg !8043
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8046, metadata !DIExpression()), !dbg !8047
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8048
  ret i32 0, !dbg !8049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !713 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !717, metadata !DIExpression()), !dbg !8050
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8051
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8053
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8055
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8057
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8059
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8061
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8063
  ret void, !dbg !8065
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8068, metadata !DIExpression()), !dbg !8070
  call void @llvm.dbg.value(metadata i32 0, metadata !8069, metadata !DIExpression()), !dbg !8070
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8071
  %3 = load i32, i32* %2, align 4, !dbg !8071
  call void @llvm.dbg.value(metadata i32 %3, metadata !8069, metadata !DIExpression()), !dbg !8070
  %4 = shl nuw i32 1, %0, !dbg !8072
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8073
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8074
  ret void, !dbg !8075
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8078, metadata !DIExpression()), !dbg !8079
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8080
  %3 = or i32 %2, %0, !dbg !8080
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8080
  ret void, !dbg !8081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !8082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8084, metadata !DIExpression()), !dbg !8085
  %2 = icmp slt i32 %0, 32, !dbg !8086
  br i1 %2, label %3, label %5, !dbg !8088

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8089
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8091
  br label %5, !dbg !8092

5:                                                ; preds = %1, %3
  ret void, !dbg !8093
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8096, metadata !DIExpression()), !dbg !8097
  %2 = xor i32 %0, -1, !dbg !8098
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8098
  %4 = and i32 %3, %2, !dbg !8098
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8098
  ret void, !dbg !8099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !8100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8104, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.value(metadata i32 %1, metadata !8105, metadata !DIExpression()), !dbg !8106
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8107

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8108
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8110
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8111
  br label %11, !dbg !8112

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8113
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8114
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8115
  br label %11, !dbg !8116

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8117
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8118
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8119
  br label %11, !dbg !8120

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8121
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8122
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8123
  br label %11, !dbg !8124

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8128, metadata !DIExpression()), !dbg !8129
  %2 = xor i32 %0, -1, !dbg !8130
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8130
  %4 = and i32 %3, %2, !dbg !8130
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8130
  ret void, !dbg !8131
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8134, metadata !DIExpression()), !dbg !8135
  %2 = xor i32 %0, -1, !dbg !8136
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8136
  %4 = and i32 %3, %2, !dbg !8136
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8136
  ret void, !dbg !8137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8140, metadata !DIExpression()), !dbg !8141
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8142
  %3 = or i32 %2, %0, !dbg !8142
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8142
  ret void, !dbg !8143
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8146, metadata !DIExpression()), !dbg !8147
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8148
  %3 = or i32 %2, %0, !dbg !8148
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8148
  ret void, !dbg !8149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !8150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8154, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8155, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i8* %2, metadata !8156, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !8157, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8159, metadata !DIExpression()), !dbg !8160
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8161
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8161
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8163
  br i1 %6, label %7, label %9, !dbg !8164

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8165
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8166
  store i8* %2, i8** %8, align 4, !dbg !8167
  br label %9, !dbg !8168

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8160
  ret i32 %10, !dbg !8169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8172, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !8173, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8174, metadata !DIExpression()), !dbg !8175
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8176
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8177
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8178
  store i8* null, i8** %3, align 4, !dbg !8179
  ret void, !dbg !8180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !8181 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8183, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata i8* %1, metadata !8184, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.value(metadata i8* %1, metadata !8185, metadata !DIExpression()), !dbg !8188
  %3 = bitcast i8* %1 to i32*, !dbg !8189
  %4 = load i32, i32* %3, align 4, !dbg !8189
  %5 = add i32 %4, -37, !dbg !8189
  %6 = icmp ult i32 %5, -9, !dbg !8189
  br i1 %6, label %15, label %7, !dbg !8191

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8192
  %9 = inttoptr i32 %8 to i32*, !dbg !8193
  call void @llvm.dbg.value(metadata i32* %9, metadata !8186, metadata !DIExpression()), !dbg !8188
  %10 = load volatile i32, i32* %9, align 4, !dbg !8194
  call void @llvm.dbg.value(metadata i32 %10, metadata !8187, metadata !DIExpression()), !dbg !8188
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8195
  %12 = bitcast i8* %11 to i32*, !dbg !8195
  %13 = load i32, i32* %12, align 4, !dbg !8195
  %14 = or i32 %13, %10, !dbg !8196
  call void @llvm.dbg.value(metadata i32 %14, metadata !8187, metadata !DIExpression()), !dbg !8188
  store volatile i32 %14, i32* %9, align 4, !dbg !8197
  br label %15, !dbg !8198

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8188
  ret i32 %16, !dbg !8199
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !8200 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8202, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.value(metadata i8* %1, metadata !8203, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.value(metadata i8* %1, metadata !8204, metadata !DIExpression()), !dbg !8207
  %3 = bitcast i8* %1 to i32*, !dbg !8208
  %4 = load i32, i32* %3, align 4, !dbg !8208
  %5 = add i32 %4, -37, !dbg !8208
  %6 = icmp ult i32 %5, -9, !dbg !8208
  br i1 %6, label %16, label %7, !dbg !8210

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8211
  %9 = inttoptr i32 %8 to i32*, !dbg !8212
  call void @llvm.dbg.value(metadata i32* %9, metadata !8205, metadata !DIExpression()), !dbg !8207
  %10 = load volatile i32, i32* %9, align 4, !dbg !8213
  call void @llvm.dbg.value(metadata i32 %10, metadata !8206, metadata !DIExpression()), !dbg !8207
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8214
  %12 = bitcast i8* %11 to i32*, !dbg !8214
  %13 = load i32, i32* %12, align 4, !dbg !8214
  %14 = xor i32 %13, -1, !dbg !8215
  %15 = and i32 %10, %14, !dbg !8216
  call void @llvm.dbg.value(metadata i32 %15, metadata !8206, metadata !DIExpression()), !dbg !8207
  store volatile i32 %15, i32* %9, align 4, !dbg !8217
  br label %16, !dbg !8218

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8207
  ret i32 %17, !dbg !8219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #7 !dbg !8220 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8222, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i8* %1, metadata !8223, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i32* %2, metadata !8224, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i8* %1, metadata !8225, metadata !DIExpression()), !dbg !8229
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8230
  call void @llvm.dbg.value(metadata i32 %4, metadata !8226, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i32 %4, metadata !8227, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.value(metadata i32 %4, metadata !8228, metadata !DIExpression()), !dbg !8229
  %5 = bitcast i8* %1 to i32*, !dbg !8231
  %6 = load i32, i32* %5, align 4, !dbg !8231
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !8232

7:                                                ; preds = %3
  br label %10, !dbg !8233

8:                                                ; preds = %3
  br label %10, !dbg !8235

9:                                                ; preds = %3
  br label %10, !dbg !8236

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !8237
  br label %12, !dbg !8238

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !8229
  ret i32 %13, !dbg !8238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !8239 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8241, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i8* %1, metadata !8242, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i8* %2, metadata !8243, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i8* %1, metadata !8244, metadata !DIExpression()), !dbg !8249
  %4 = bitcast i8* %1 to i32*, !dbg !8250
  %5 = load i32, i32* %4, align 4, !dbg !8250
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8251
  call void @llvm.dbg.value(metadata i32 %6, metadata !8248, metadata !DIExpression()), !dbg !8249
  %7 = icmp slt i32 %6, 0, !dbg !8252
  br i1 %7, label %22, label %8, !dbg !8254

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8244, metadata !DIExpression()), !dbg !8249
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8255
  %10 = bitcast i8* %9 to i32*, !dbg !8255
  %11 = load i32, i32* %10, align 4, !dbg !8255
  %12 = lshr i32 %11, 16, !dbg !8255
  %13 = and i32 %12, 7, !dbg !8255
  %14 = lshr i32 %11, 8, !dbg !8256
  %15 = and i32 %14, 31, !dbg !8256
  %16 = shl i32 %13, %15, !dbg !8257
  call void @llvm.dbg.value(metadata i32 %16, metadata !8247, metadata !DIExpression()), !dbg !8249
  %17 = and i32 %11, 255, !dbg !8258
  %18 = or i32 %17, 1073887232, !dbg !8259
  %19 = inttoptr i32 %18 to i32*, !dbg !8260
  call void @llvm.dbg.value(metadata i32* %19, metadata !8245, metadata !DIExpression()), !dbg !8249
  %20 = load volatile i32, i32* %19, align 4, !dbg !8261
  call void @llvm.dbg.value(metadata i32 %20, metadata !8246, metadata !DIExpression()), !dbg !8249
  %21 = or i32 %16, %20, !dbg !8262
  call void @llvm.dbg.value(metadata i32 %21, metadata !8246, metadata !DIExpression()), !dbg !8249
  store volatile i32 %21, i32* %19, align 4, !dbg !8263
  br label %22, !dbg !8264

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8249
  ret i32 %23, !dbg !8265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8270, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.value(metadata i32 0, metadata !8271, metadata !DIExpression()), !dbg !8272
  %2 = add i32 %0, -1, !dbg !8273
  %3 = icmp ult i32 %2, 4, !dbg !8273
  br i1 %3, label %4, label %7, !dbg !8273

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8273
  %6 = load i32, i32* %5, align 4, !dbg !8273
  call void @llvm.dbg.value(metadata i32 %6, metadata !8271, metadata !DIExpression()), !dbg !8272
  br label %7, !dbg !8274

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8272
  ret i32 %8, !dbg !8275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8276 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8278, metadata !DIExpression()), !dbg !8281
  tail call void @config_enable_default_clocks() #25, !dbg !8282
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8283
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8283
  %4 = lshr i32 %3, 4, !dbg !8283
  %5 = and i32 %4, 15, !dbg !8283
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8283
  %7 = load i8, i8* %6, align 1, !dbg !8283
  %8 = zext i8 %7 to i32, !dbg !8283
  %9 = lshr i32 %2, %8, !dbg !8283
  call void @llvm.dbg.value(metadata i32 %9, metadata !8279, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !8280, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8281
  %10 = icmp ult i32 %9, 32000000, !dbg !8284
  br i1 %10, label %11, label %13, !dbg !8286

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !8287
  br label %13, !dbg !8289

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8290
  tail call fastcc void @set_up_plls() #26, !dbg !8291
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8292
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #26, !dbg !8295
  br label %14, !dbg !8296

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8297
  %16 = icmp eq i32 %15, 12, !dbg !8298
  br i1 %16, label %17, label %14, !dbg !8296, !llvm.loop !8299

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !8301
  br i1 %18, label %19, label %21, !dbg !8303

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !8304
  br label %21, !dbg !8306

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !8307
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8308
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8309
  ret i32 0, !dbg !8310
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !8311 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8313
  %2 = and i32 %1, 240, !dbg !8313
  ret i32 %2, !dbg !8314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !8315 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8316
  %2 = icmp eq i32 %1, 1, !dbg !8320
  br i1 %2, label %7, label %3, !dbg !8321

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8322
  br label %4, !dbg !8324

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8325
  %6 = icmp eq i32 %5, 1, !dbg !8326
  br i1 %6, label %7, label %4, !dbg !8324, !llvm.loop !8327

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8329
  br label %8, !dbg !8332

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8333
  %10 = icmp eq i32 %9, 1, !dbg !8334
  br i1 %10, label %11, label %8, !dbg !8332, !llvm.loop !8335

11:                                               ; preds = %8
  ret void, !dbg !8337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8338 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8339
  %2 = icmp eq i32 %1, 12, !dbg !8341
  br i1 %2, label %3, label %4, !dbg !8342

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8343
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8345
  br label %4, !dbg !8346

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8347
  tail call void @config_pll_sysclock() #25, !dbg !8348
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8349
  br label %5, !dbg !8350

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8351
  %7 = icmp eq i32 %6, 1, !dbg !8352
  br i1 %7, label %8, label %5, !dbg !8350, !llvm.loop !8353

8:                                                ; preds = %5
  ret void, !dbg !8355
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !8356 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8358, metadata !DIExpression()), !dbg !8359
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8360
  %2 = and i32 %1, -241, !dbg !8360
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8360
  ret void, !dbg !8361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !8362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8364, metadata !DIExpression()), !dbg !8365
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8366
  %3 = and i32 %2, -4, !dbg !8366
  %4 = or i32 %3, %0, !dbg !8366
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8366
  ret void, !dbg !8367
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !8368 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8369
  %2 = and i32 %1, 12, !dbg !8369
  ret i32 %2, !dbg !8370
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !8371 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8373, metadata !DIExpression()), !dbg !8374
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8375
  %2 = and i32 %1, -1793, !dbg !8375
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8375
  ret void, !dbg !8376
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !8377 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8379, metadata !DIExpression()), !dbg !8380
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8381
  %2 = and i32 %1, -14337, !dbg !8381
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8381
  ret void, !dbg !8382
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !8383 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8384
  %2 = icmp eq i32 %1, 1, !dbg !8386
  br i1 %2, label %7, label %3, !dbg !8387

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8388
  br label %4, !dbg !8390

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8391
  %6 = icmp eq i32 %5, 1, !dbg !8392
  br i1 %6, label %7, label %4, !dbg !8390, !llvm.loop !8393

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #26, !dbg !8395
  br label %8, !dbg !8396

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8397
  %10 = icmp eq i32 %9, 4, !dbg !8398
  br i1 %10, label %11, label %8, !dbg !8396, !llvm.loop !8399

11:                                               ; preds = %8
  ret void, !dbg !8401
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !8402 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8403
  %2 = and i32 %1, -16777217, !dbg !8403
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8403
  ret void, !dbg !8404
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !8405 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8406
  %2 = or i32 %1, 16777216, !dbg !8406
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8406
  ret void, !dbg !8407
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !8408 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8409
  %2 = lshr i32 %1, 25, !dbg !8410
  %3 = and i32 %2, 1, !dbg !8410
  ret i32 %3, !dbg !8411
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !8412 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8413
  %2 = lshr i32 %1, 1, !dbg !8414
  %3 = and i32 %2, 1, !dbg !8414
  ret i32 %3, !dbg !8415
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !8416 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8417
  %2 = or i32 %1, 1, !dbg !8417
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8417
  ret void, !dbg !8418
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !8419 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8420
  %2 = or i32 %1, 1, !dbg !8420
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8420
  ret void, !dbg !8421
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !8422 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8423
  %2 = lshr i32 %1, 1, !dbg !8424
  %3 = and i32 %2, 1, !dbg !8424
  ret i32 %3, !dbg !8425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8426 {
  ret i32 16000000, !dbg !8428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !8431 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8432
  ret void, !dbg !8433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !8434 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8438, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.value(metadata i32 262144, metadata !8439, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8440, metadata !DIExpression()), !dbg !8441
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8442
  %2 = and i32 %1, -16580609, !dbg !8442
  %3 = or i32 %2, 4456448, !dbg !8442
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8442
  ret void, !dbg !8443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #11 !dbg !8444 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !8445
  %2 = zext i8 %1 to i32, !dbg !8445
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !8445
  ret i32 %3, !dbg !8446
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !8447 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #26, !dbg !8448
  ret void, !dbg !8449
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #15 !dbg !8450 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8452, metadata !DIExpression()), !dbg !8454
  %2 = bitcast i32* %1 to i8*, !dbg !8455
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8455
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8453, metadata !DIExpression()), !dbg !8456
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8457
  %4 = or i32 %3, 1, !dbg !8457
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8457
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8458
  %6 = and i32 %5, 1, !dbg !8458
  store volatile i32 %6, i32* %1, align 4, !dbg !8459
  %7 = load volatile i32, i32* %1, align 4, !dbg !8460
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8461
  ret void, !dbg !8461
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8462 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8464, metadata !DIExpression()), !dbg !8465
  %2 = tail call fastcc zeroext i1 @device_is_ready.63() #26, !dbg !8466
  br i1 %2, label %3, label %4, !dbg !8468

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8469
  br label %4, !dbg !8470

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8465
  ret i32 %5, !dbg !8471
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.63() unnamed_addr #1 !dbg !8472 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8476, metadata !DIExpression()), !dbg !8477
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8478, !srcloc !8480
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.64() #26, !dbg !8481
  ret i1 %1, !dbg !8482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8483 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8484
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8485
  ret void, !dbg !8486
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8489, metadata !DIExpression()), !dbg !8490
  %2 = icmp eq i32 %0, 10, !dbg !8491
  br i1 %2, label %3, label %4, !dbg !8493

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !8494
  br label %4, !dbg !8496

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8497
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !8498
  ret i32 %0, !dbg !8499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8500 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8503, metadata !DIExpression()), !dbg !8505
  call void @llvm.dbg.value(metadata i8 %0, metadata !8504, metadata !DIExpression()), !dbg !8505
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8506, !srcloc !8508
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !8509
  ret void, !dbg !8510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8511 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8513, metadata !DIExpression()), !dbg !8516
  call void @llvm.dbg.value(metadata i8 %0, metadata !8514, metadata !DIExpression()), !dbg !8516
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8517
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8515, metadata !DIExpression()), !dbg !8516
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8518
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8518
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #25, !dbg !8519
  ret void, !dbg !8520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.64() unnamed_addr #1 !dbg !8521 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8523, metadata !DIExpression()), !dbg !8524
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !8525
  ret i1 %1, !dbg !8526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8527 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8574, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8575, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8576, metadata !DIExpression()), !dbg !8577
  ret void, !dbg !8578
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8579 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8581, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i8 %1, metadata !8582, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i32 %2, metadata !8583, metadata !DIExpression()), !dbg !8586
  %5 = bitcast i32* %4 to i8*, !dbg !8587
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8587
  call void @llvm.dbg.value(metadata i32* %4, metadata !8585, metadata !DIExpression(DW_OP_deref)), !dbg !8586
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8588
  call void @llvm.dbg.value(metadata i32 %6, metadata !8584, metadata !DIExpression()), !dbg !8586
  %7 = icmp eq i32 %6, 0, !dbg !8589
  br i1 %7, label %8, label %31, !dbg !8591

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8584, metadata !DIExpression()), !dbg !8586
  %9 = and i32 %2, 131072, !dbg !8592
  %10 = icmp eq i32 %9, 0, !dbg !8594
  br i1 %10, label %28, label %11, !dbg !8595

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8596
  %13 = icmp eq i32 %12, 0, !dbg !8599
  br i1 %13, label %18, label %14, !dbg !8600

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8601
  %16 = shl nuw i32 1, %15, !dbg !8601
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8603
  br label %25, !dbg !8604

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8605
  %20 = icmp eq i32 %19, 0, !dbg !8607
  %21 = zext i8 %1 to i32, !dbg !8586
  br i1 %20, label %25, label %22, !dbg !8608

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8609
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8611
  br label %25, !dbg !8612

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8613
  %27 = load i32, i32* %4, align 4, !dbg !8614
  call void @llvm.dbg.value(metadata i32 %30, metadata !8585, metadata !DIExpression()), !dbg !8586
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8615
  br label %31, !dbg !8616

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8613
  %30 = load i32, i32* %4, align 4, !dbg !8614
  call void @llvm.dbg.value(metadata i32 %30, metadata !8585, metadata !DIExpression()), !dbg !8586
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8615
  call void @llvm.dbg.value(metadata i32 0, metadata !8584, metadata !DIExpression()), !dbg !8586
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8617
  ret i32 %6, !dbg !8617
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !8618 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8622, metadata !DIExpression()), !dbg !8627
  call void @llvm.dbg.value(metadata i32* %1, metadata !8623, metadata !DIExpression()), !dbg !8627
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8628
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8628
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8628
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8624, metadata !DIExpression()), !dbg !8627
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8629
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8629
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8629
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8626, metadata !DIExpression()), !dbg !8627
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8630
  store i32 %9, i32* %1, align 4, !dbg !8631
  ret i32 0, !dbg !8632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !8633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8635, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i32 %1, metadata !8636, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.value(metadata i32 %2, metadata !8637, metadata !DIExpression()), !dbg !8641
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8642
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8642
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8642
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8638, metadata !DIExpression()), !dbg !8641
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8643
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8643
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8643
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8639, metadata !DIExpression()), !dbg !8641
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8644
  call void @llvm.dbg.value(metadata i32 %10, metadata !8640, metadata !DIExpression()), !dbg !8641
  %11 = xor i32 %1, -1, !dbg !8645
  %12 = and i32 %10, %11, !dbg !8646
  %13 = and i32 %2, %1, !dbg !8647
  %14 = or i32 %12, %13, !dbg !8648
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8649
  ret i32 0, !dbg !8650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !8651 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8653, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata i32 %1, metadata !8654, metadata !DIExpression()), !dbg !8657
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8658
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8658
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8658
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8655, metadata !DIExpression()), !dbg !8657
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8659
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8659
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8659
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8656, metadata !DIExpression()), !dbg !8657
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8660
  store volatile i32 %1, i32* %9, align 4, !dbg !8660
  ret i32 0, !dbg !8661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !8662 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8664, metadata !DIExpression()), !dbg !8668
  call void @llvm.dbg.value(metadata i32 %1, metadata !8665, metadata !DIExpression()), !dbg !8668
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8669
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8669
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8669
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8666, metadata !DIExpression()), !dbg !8668
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8670
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8670
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8670
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8667, metadata !DIExpression()), !dbg !8668
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8671
  ret i32 0, !dbg !8672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !8673 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8675, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i32 %1, metadata !8676, metadata !DIExpression()), !dbg !8679
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8680
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8680
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8680
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8677, metadata !DIExpression()), !dbg !8679
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8681
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8681
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8681
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8678, metadata !DIExpression()), !dbg !8679
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8682
  %10 = load volatile i32, i32* %9, align 4, !dbg !8682
  %11 = xor i32 %10, %1, !dbg !8682
  store volatile i32 %11, i32* %9, align 4, !dbg !8682
  ret i32 0, !dbg !8683
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8684 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8686, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i8 %1, metadata !8687, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i32 %2, metadata !8688, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i32 %3, metadata !8689, metadata !DIExpression()), !dbg !8696
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8697
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8697
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8697
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8690, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i8* undef, metadata !8691, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i32 0, metadata !8693, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i32 0, metadata !8694, metadata !DIExpression()), !dbg !8696
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8698

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8699
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8703
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8704
  %12 = load i32, i32* %11, align 4, !dbg !8704
  %13 = icmp eq i32 %10, %12, !dbg !8705
  br i1 %13, label %14, label %29, !dbg !8706

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !8707
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !8709
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !8710
  br label %29, !dbg !8711

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8712
  %17 = load i8*, i8** %16, align 4, !dbg !8712
  call void @llvm.dbg.value(metadata i8* %17, metadata !8691, metadata !DIExpression()), !dbg !8696
  %18 = zext i8 %1 to i32, !dbg !8713
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !8715
  %20 = icmp eq i32 %19, 0, !dbg !8716
  br i1 %20, label %21, label %29, !dbg !8717

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8718
  %23 = load i32, i32* %22, align 4, !dbg !8718
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8719
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8720

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8693, metadata !DIExpression()), !dbg !8696
  br label %27, !dbg !8721

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8693, metadata !DIExpression()), !dbg !8696
  br label %27, !dbg !8723

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8693, metadata !DIExpression()), !dbg !8696
  br label %27, !dbg !8724

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8696
  call void @llvm.dbg.value(metadata i32 %28, metadata !8693, metadata !DIExpression()), !dbg !8696
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !8725
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !8726
  br label %29, !dbg !8726

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8696
  call void @llvm.dbg.value(metadata i32 %30, metadata !8694, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.label(metadata !8695), !dbg !8727
  ret i32 %30, !dbg !8728
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #13 !dbg !8729 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8731, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8732, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i1 %2, metadata !8733, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8735
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8736
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8736
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8736
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8734, metadata !DIExpression()), !dbg !8735
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8737
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8738
  ret i32 %8, !dbg !8739
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #13 !dbg !8740 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8746, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8747, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i1 %2, metadata !8748, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8749
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8750
  br i1 %4, label %10, label %5, !dbg !8752

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8753
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8756
  %8 = or i1 %7, %2, !dbg !8757
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8757
  br i1 %2, label %11, label %13, !dbg !8757

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8758

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8759
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8762
  br label %13, !dbg !8763

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8749
  ret i32 %14, !dbg !8764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8765 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8769, metadata !DIExpression()), !dbg !8770
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8771
  %3 = icmp eq %struct._snode* %2, null, !dbg !8771
  ret i1 %3, !dbg !8771
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !8772 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8776, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8777, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8778, metadata !DIExpression()), !dbg !8780
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8781
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8779, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8778, metadata !DIExpression()), !dbg !8780
  %4 = icmp eq %struct._snode* %3, null, !dbg !8783
  br i1 %4, label %15, label %5, !dbg !8781

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8779, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8778, metadata !DIExpression()), !dbg !8780
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8785
  br i1 %6, label %9, label %11, !dbg !8788

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8779, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8778, metadata !DIExpression()), !dbg !8780
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8785
  br i1 %8, label %9, label %11, !dbg !8788, !llvm.loop !8789

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8790
  br label %15, !dbg !8790

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8779, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8778, metadata !DIExpression()), !dbg !8780
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8783
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8779, metadata !DIExpression()), !dbg !8780
  %14 = icmp eq %struct._snode* %13, null, !dbg !8783
  br i1 %14, label %15, label %7, !dbg !8781, !llvm.loop !8789

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8793 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8797, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8798, metadata !DIExpression()), !dbg !8799
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8800
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8800
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8800
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8801
  %5 = icmp eq %struct._snode* %4, null, !dbg !8801
  br i1 %5, label %6, label %8, !dbg !8800

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8803
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8803
  br label %8, !dbg !8803

8:                                                ; preds = %6, %2
  ret void, !dbg !8800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8805 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8809, metadata !DIExpression()), !dbg !8810
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8811
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8811
  ret %struct._snode* %3, !dbg !8812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8813 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8817, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8818, metadata !DIExpression()), !dbg !8819
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8820
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8821
  ret void, !dbg !8822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8823 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8825, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8826, metadata !DIExpression()), !dbg !8827
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8828
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8829
  ret void, !dbg !8830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8831 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8833, metadata !DIExpression()), !dbg !8834
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8835
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8835
  ret %struct._snode* %3, !dbg !8836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8837 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8839, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8840, metadata !DIExpression()), !dbg !8841
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8842
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8843
  ret void, !dbg !8844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8845 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8849, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8850, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8851, metadata !DIExpression()), !dbg !8852
  %4 = icmp eq %struct._snode* %1, null, !dbg !8853
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8855
  br i1 %4, label %6, label %11, !dbg !8856

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8857
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8859
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8859
  br i1 %8, label %9, label %15, !dbg !8857

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8861
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8861
  br label %15, !dbg !8861

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8863
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8865
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8865
  br i1 %13, label %14, label %15, !dbg !8863

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8867
  br label %15, !dbg !8867

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8856
  ret void, !dbg !8856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8869 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8873, metadata !DIExpression()), !dbg !8874
  %2 = icmp eq %struct._snode* %0, null, !dbg !8875
  br i1 %2, label %5, label %3, !dbg !8875

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8875
  br label %5, !dbg !8875

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8875
  ret %struct._snode* %6, !dbg !8875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8876 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8878, metadata !DIExpression()), !dbg !8879
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8880
  ret %struct._snode* %2, !dbg !8880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8881 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8883, metadata !DIExpression()), !dbg !8884
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8885
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8885
  ret %struct._snode* %3, !dbg !8886
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8889, metadata !DIExpression()), !dbg !8892
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !8893, !range !8894
  call void @llvm.dbg.value(metadata i32 %2, metadata !8890, metadata !DIExpression()), !dbg !8892
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !8895
  call void @llvm.dbg.value(metadata i32 %3, metadata !8891, metadata !DIExpression()), !dbg !8892
  ret i32 %3, !dbg !8896
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8899, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i8* %1, metadata !8900, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i8* %1, metadata !8901, metadata !DIExpression()), !dbg !8902
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8903
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8903
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8904
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8904
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8904
  %8 = shl nuw i32 1, %0, !dbg !8905
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !8906
  ret void, !dbg !8907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8908 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8912, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i32 %1, metadata !8913, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8914, metadata !DIExpression()), !dbg !8918
  %4 = bitcast i64* %3 to i8*, !dbg !8919
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !8919
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !8916, metadata !DIExpression()), !dbg !8918
  store i64 4294967328, i64* %3, align 8, !dbg !8920
  call void @llvm.dbg.value(metadata i64* %3, metadata !8916, metadata !DIExpression(DW_OP_deref)), !dbg !8918
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !8921
  call void @llvm.dbg.value(metadata i32 %5, metadata !8917, metadata !DIExpression()), !dbg !8918
  %6 = icmp eq i32 %5, 0, !dbg !8922
  br i1 %6, label %7, label %8, !dbg !8924

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !8925
  br label %8, !dbg !8926

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !8927
  ret void, !dbg !8927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8928 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8930, metadata !DIExpression()), !dbg !8933
  call void @llvm.dbg.value(metadata i8* %0, metadata !8931, metadata !DIExpression()), !dbg !8933
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8934
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8932, metadata !DIExpression()), !dbg !8933
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8935
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8935
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !8936
  ret i32 %5, !dbg !8937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8940, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i32 %1, metadata !8941, metadata !DIExpression()), !dbg !8943
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !8944
  call void @llvm.dbg.value(metadata i32 %3, metadata !8942, metadata !DIExpression()), !dbg !8943
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !8945
  ret void, !dbg !8946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !8947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8951, metadata !DIExpression()), !dbg !8952
  %2 = sdiv i32 %0, 4, !dbg !8953
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8954
  %6 = add nsw i32 %5, 16, !dbg !8955
  %7 = shl i32 15, %6, !dbg !8956
  %8 = or i32 %7, %2, !dbg !8957
  ret i32 %8, !dbg !8958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8964, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i32 %1, metadata !8965, metadata !DIExpression()), !dbg !8966
  %3 = and i32 %1, 3, !dbg !8967
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !8967
  %5 = load volatile i32, i32* %4, align 4, !dbg !8967
  %6 = lshr i32 %1, 16, !dbg !8967
  %7 = xor i32 %6, -1, !dbg !8967
  %8 = and i32 %5, %7, !dbg !8967
  call void @llvm.dbg.value(metadata i32 %6, metadata !8968, metadata !DIExpression()) #24, !dbg !8972
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !8974, !srcloc !8975
  call void @llvm.dbg.value(metadata i32 %9, metadata !8971, metadata !DIExpression()) #24, !dbg !8972
  call void @llvm.dbg.value(metadata i32 %9, metadata !8976, metadata !DIExpression()) #24, !dbg !8981
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !8983, !range !3454
  %11 = shl i32 %0, %10, !dbg !8967
  %12 = or i32 %11, %8, !dbg !8967
  store volatile i32 %12, i32* %4, align 4, !dbg !8967
  ret void, !dbg !8984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8985 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8989, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8990, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata i32 %2, metadata !8991, metadata !DIExpression()), !dbg !8994
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8995
  %5 = icmp eq %struct._snode* %4, null, !dbg !8995
  br i1 %5, label %21, label %6, !dbg !8995

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !8997
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8993, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8992, metadata !DIExpression()), !dbg !8994
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8998
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8998
  %11 = load i32, i32* %10, align 4, !dbg !8998
  %12 = and i32 %11, %2, !dbg !9002
  %13 = icmp eq i32 %12, 0, !dbg !9002
  br i1 %13, label %19, label %14, !dbg !9003

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8992, metadata !DIExpression()), !dbg !8994
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9004
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9004
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9004
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !9006
  br label %19, !dbg !9007

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8992, metadata !DIExpression()), !dbg !8994
  %20 = icmp eq %struct._snode* %8, null, !dbg !9008
  br i1 %20, label %21, label %6, !dbg !9008

21:                                               ; preds = %19, %3
  ret void, !dbg !9009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9012, metadata !DIExpression()), !dbg !9013
  %2 = and i32 %0, 3, !dbg !9014
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !9014
  %4 = load volatile i32, i32* %3, align 4, !dbg !9014
  %5 = lshr i32 %0, 16, !dbg !9014
  %6 = and i32 %4, %5, !dbg !9014
  call void @llvm.dbg.value(metadata i32 %5, metadata !8968, metadata !DIExpression()) #24, !dbg !9015
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !9017, !srcloc !8975
  call void @llvm.dbg.value(metadata i32 %7, metadata !8971, metadata !DIExpression()) #24, !dbg !9015
  call void @llvm.dbg.value(metadata i32 %7, metadata !8976, metadata !DIExpression()) #24, !dbg !9018
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9020, !range !3454
  %9 = lshr i32 %6, %8, !dbg !9021
  ret i32 %9, !dbg !9022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9023 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9028, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.value(metadata i32 %1, metadata !9029, metadata !DIExpression()), !dbg !9030
  %3 = shl i32 %1, 16, !dbg !9031
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9031
  store volatile i32 %3, i32* %4, align 4, !dbg !9031
  ret void, !dbg !9032
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !9033 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9037, metadata !DIExpression()), !dbg !9038
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9039
  %3 = load volatile i32, i32* %2, align 4, !dbg !9039
  ret i32 %3, !dbg !9040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9041 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9043, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i32 %1, metadata !9044, metadata !DIExpression()), !dbg !9045
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9046
  store volatile i32 %1, i32* %3, align 4, !dbg !9046
  ret void, !dbg !9047
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !9048 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9050, metadata !DIExpression()), !dbg !9051
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9052
  %3 = load volatile i32, i32* %2, align 4, !dbg !9052
  ret i32 %3, !dbg !9053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !9054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9058, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.value(metadata i32* %1, metadata !9059, metadata !DIExpression()), !dbg !9060
  %3 = and i32 %0, 131072, !dbg !9061
  %4 = icmp eq i32 %3, 0, !dbg !9063
  br i1 %4, label %22, label %5, !dbg !9064

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9065
  %6 = and i32 %0, 2, !dbg !9067
  %7 = icmp eq i32 %6, 0, !dbg !9069
  br i1 %7, label %11, label %8, !dbg !9070

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9071
  %10 = icmp eq i32 %9, 0, !dbg !9071
  br i1 %10, label %33, label %11, !dbg !9074

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9075
  store i32 %12, i32* %1, align 4, !dbg !9075
  %13 = and i32 %0, 16, !dbg !9076
  %14 = icmp eq i32 %13, 0, !dbg !9078
  br i1 %14, label %17, label %15, !dbg !9079

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9080
  br label %31, !dbg !9082

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9083
  %19 = icmp eq i32 %18, 0, !dbg !9085
  br i1 %19, label %33, label %20, !dbg !9086

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9087
  br label %31, !dbg !9089

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9090
  %24 = icmp eq i32 %23, 0, !dbg !9092
  br i1 %24, label %31, label %25, !dbg !9093

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9094
  %27 = icmp eq i32 %26, 0, !dbg !9097
  br i1 %27, label %28, label %31, !dbg !9098

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9099
  br label %33, !dbg !9100

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9060
  ret i32 %34, !dbg !9100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9101 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9105, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.value(metadata i32 %1, metadata !9106, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.value(metadata i32 %2, metadata !9107, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.value(metadata i32 %3, metadata !9108, metadata !DIExpression()), !dbg !9116
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9117
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9117
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9117
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9109, metadata !DIExpression()), !dbg !9116
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9118
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9118
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9118
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9110, metadata !DIExpression()), !dbg !9116
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !9119
  call void @llvm.dbg.value(metadata i32 %11, metadata !9111, metadata !DIExpression()), !dbg !9116
  %12 = and i32 %2, 48, !dbg !9120
  call void @llvm.dbg.value(metadata i32 %12, metadata !9112, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.value(metadata i32 %2, metadata !9113, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9116
  call void @llvm.dbg.value(metadata i32 %2, metadata !9114, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9116
  call void @llvm.dbg.value(metadata i32 %2, metadata !9115, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9116
  %13 = lshr i32 %2, 6, !dbg !9121
  %14 = and i32 %13, 1, !dbg !9121
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !9122
  %15 = lshr i32 %2, 7, !dbg !9123
  %16 = and i32 %15, 3, !dbg !9123
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !9124
  %17 = lshr i32 %2, 9, !dbg !9125
  %18 = and i32 %17, 3, !dbg !9125
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !9126
  %19 = icmp eq i32 %12, 32, !dbg !9127
  br i1 %19, label %20, label %24, !dbg !9129

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9130
  br i1 %21, label %22, label %23, !dbg !9133

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9134
  br label %24, !dbg !9136

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9137
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9139
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !9140
  ret void, !dbg !9141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9144, metadata !DIExpression()), !dbg !9146
  %2 = shl nuw i32 1, %0, !dbg !9147
  call void @llvm.dbg.value(metadata i32 %2, metadata !9145, metadata !DIExpression()), !dbg !9146
  ret i32 %2, !dbg !9148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !9149 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9153, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.value(metadata i32 %1, metadata !9154, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.value(metadata i32 %2, metadata !9155, metadata !DIExpression()), !dbg !9156
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9157
  %5 = load volatile i32, i32* %4, align 4, !dbg !9157
  %6 = xor i32 %1, -1, !dbg !9157
  %7 = and i32 %5, %6, !dbg !9157
  %8 = mul i32 %2, %1, !dbg !9157
  %9 = or i32 %7, %8, !dbg !9157
  store volatile i32 %9, i32* %4, align 4, !dbg !9157
  ret void, !dbg !9158
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9159 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9161, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.value(metadata i32 %1, metadata !9162, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.value(metadata i32 %2, metadata !9163, metadata !DIExpression()), !dbg !9164
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9165
  %5 = load volatile i32, i32* %4, align 4, !dbg !9165
  call void @llvm.dbg.value(metadata i32 %1, metadata !8968, metadata !DIExpression()) #24, !dbg !9166
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9168, !srcloc !8975
  call void @llvm.dbg.value(metadata i32 %6, metadata !8971, metadata !DIExpression()) #24, !dbg !9166
  call void @llvm.dbg.value(metadata i32 %6, metadata !8976, metadata !DIExpression()) #24, !dbg !9169
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9171, !range !3454
  %8 = shl nuw nsw i32 %7, 1, !dbg !9165
  %9 = shl i32 3, %8, !dbg !9165
  %10 = xor i32 %9, -1, !dbg !9165
  %11 = and i32 %5, %10, !dbg !9165
  call void @llvm.dbg.value(metadata i32 %1, metadata !8968, metadata !DIExpression()) #24, !dbg !9172
  call void @llvm.dbg.value(metadata i32 %6, metadata !8971, metadata !DIExpression()) #24, !dbg !9172
  call void @llvm.dbg.value(metadata i32 %6, metadata !8976, metadata !DIExpression()) #24, !dbg !9174
  %12 = shl i32 %2, %8, !dbg !9165
  %13 = or i32 %11, %12, !dbg !9165
  store volatile i32 %13, i32* %4, align 4, !dbg !9165
  ret void, !dbg !9176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9177 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9179, metadata !DIExpression()), !dbg !9182
  call void @llvm.dbg.value(metadata i32 %1, metadata !9180, metadata !DIExpression()), !dbg !9182
  call void @llvm.dbg.value(metadata i32 %2, metadata !9181, metadata !DIExpression()), !dbg !9182
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9183
  %5 = load volatile i32, i32* %4, align 4, !dbg !9183
  call void @llvm.dbg.value(metadata i32 %1, metadata !8968, metadata !DIExpression()) #24, !dbg !9184
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9186, !srcloc !8975
  call void @llvm.dbg.value(metadata i32 %6, metadata !8971, metadata !DIExpression()) #24, !dbg !9184
  call void @llvm.dbg.value(metadata i32 %6, metadata !8976, metadata !DIExpression()) #24, !dbg !9187
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9189, !range !3454
  %8 = shl nuw nsw i32 %7, 1, !dbg !9183
  %9 = shl i32 3, %8, !dbg !9183
  %10 = xor i32 %9, -1, !dbg !9183
  %11 = and i32 %5, %10, !dbg !9183
  call void @llvm.dbg.value(metadata i32 %1, metadata !8968, metadata !DIExpression()) #24, !dbg !9190
  call void @llvm.dbg.value(metadata i32 %6, metadata !8971, metadata !DIExpression()) #24, !dbg !9190
  call void @llvm.dbg.value(metadata i32 %6, metadata !8976, metadata !DIExpression()) #24, !dbg !9192
  %12 = shl i32 %2, %8, !dbg !9183
  %13 = or i32 %11, %12, !dbg !9183
  store volatile i32 %13, i32* %4, align 4, !dbg !9183
  ret void, !dbg !9194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9195 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9197, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %1, metadata !9198, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %2, metadata !9199, metadata !DIExpression()), !dbg !9200
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9201
  %5 = load volatile i32, i32* %4, align 4, !dbg !9201
  call void @llvm.dbg.value(metadata i32 %1, metadata !8968, metadata !DIExpression()) #24, !dbg !9202
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9204, !srcloc !8975
  call void @llvm.dbg.value(metadata i32 %6, metadata !8971, metadata !DIExpression()) #24, !dbg !9202
  call void @llvm.dbg.value(metadata i32 %6, metadata !8976, metadata !DIExpression()) #24, !dbg !9205
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9207, !range !3454
  %8 = shl nuw nsw i32 %7, 2, !dbg !9201
  %9 = shl i32 15, %8, !dbg !9201
  %10 = xor i32 %9, -1, !dbg !9201
  %11 = and i32 %5, %10, !dbg !9201
  call void @llvm.dbg.value(metadata i32 %1, metadata !8968, metadata !DIExpression()) #24, !dbg !9208
  call void @llvm.dbg.value(metadata i32 %6, metadata !8971, metadata !DIExpression()) #24, !dbg !9208
  call void @llvm.dbg.value(metadata i32 %6, metadata !8976, metadata !DIExpression()) #24, !dbg !9210
  %12 = shl i32 %2, %8, !dbg !9201
  %13 = or i32 %11, %12, !dbg !9201
  store volatile i32 %13, i32* %4, align 4, !dbg !9201
  ret void, !dbg !9212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9213 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9215, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i32 %1, metadata !9216, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.value(metadata i32 %2, metadata !9217, metadata !DIExpression()), !dbg !9218
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9219
  %5 = load volatile i32, i32* %4, align 4, !dbg !9219
  %6 = lshr i32 %1, 8, !dbg !9219
  call void @llvm.dbg.value(metadata i32 %6, metadata !8968, metadata !DIExpression()) #24, !dbg !9220
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !9222, !srcloc !8975
  call void @llvm.dbg.value(metadata i32 %7, metadata !8971, metadata !DIExpression()) #24, !dbg !9220
  call void @llvm.dbg.value(metadata i32 %7, metadata !8976, metadata !DIExpression()) #24, !dbg !9223
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9225, !range !3454
  %9 = shl nuw nsw i32 %8, 2, !dbg !9219
  %10 = shl i32 15, %9, !dbg !9219
  %11 = xor i32 %10, -1, !dbg !9219
  %12 = and i32 %5, %11, !dbg !9219
  call void @llvm.dbg.value(metadata i32 %6, metadata !8968, metadata !DIExpression()) #24, !dbg !9226
  call void @llvm.dbg.value(metadata i32 %7, metadata !8971, metadata !DIExpression()) #24, !dbg !9226
  call void @llvm.dbg.value(metadata i32 %7, metadata !8976, metadata !DIExpression()) #24, !dbg !9228
  %13 = shl i32 %2, %9, !dbg !9219
  %14 = or i32 %12, %13, !dbg !9219
  store volatile i32 %14, i32* %4, align 4, !dbg !9219
  ret void, !dbg !9230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9231 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9233, metadata !DIExpression()), !dbg !9236
  call void @llvm.dbg.value(metadata i32 %1, metadata !9234, metadata !DIExpression()), !dbg !9236
  call void @llvm.dbg.value(metadata i32 %2, metadata !9235, metadata !DIExpression()), !dbg !9236
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9237
  %5 = load volatile i32, i32* %4, align 4, !dbg !9237
  call void @llvm.dbg.value(metadata i32 %1, metadata !8968, metadata !DIExpression()) #24, !dbg !9238
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9240, !srcloc !8975
  call void @llvm.dbg.value(metadata i32 %6, metadata !8971, metadata !DIExpression()) #24, !dbg !9238
  call void @llvm.dbg.value(metadata i32 %6, metadata !8976, metadata !DIExpression()) #24, !dbg !9241
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9243, !range !3454
  %8 = shl nuw nsw i32 %7, 1, !dbg !9237
  %9 = shl i32 3, %8, !dbg !9237
  %10 = xor i32 %9, -1, !dbg !9237
  %11 = and i32 %5, %10, !dbg !9237
  call void @llvm.dbg.value(metadata i32 %1, metadata !8968, metadata !DIExpression()) #24, !dbg !9244
  call void @llvm.dbg.value(metadata i32 %6, metadata !8971, metadata !DIExpression()) #24, !dbg !9244
  call void @llvm.dbg.value(metadata i32 %6, metadata !8976, metadata !DIExpression()) #24, !dbg !9246
  %12 = shl i32 %2, %8, !dbg !9237
  %13 = or i32 %11, %12, !dbg !9237
  store volatile i32 %13, i32* %4, align 4, !dbg !9237
  ret void, !dbg !9248
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9249 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9251, metadata !DIExpression()), !dbg !9254
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9255
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9255
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9255
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9252, metadata !DIExpression()), !dbg !9254
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9256
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9257
  %6 = tail call fastcc zeroext i1 @device_is_ready.76() #26, !dbg !9258
  br i1 %6, label %7, label %11, !dbg !9260

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9261
  call void @llvm.dbg.value(metadata i32 %8, metadata !9253, metadata !DIExpression()), !dbg !9254
  %9 = icmp slt i32 %8, 0, !dbg !9262
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9264
  br label %11, !dbg !9264

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9254
  ret i32 %12, !dbg !9265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.76() unnamed_addr #1 !dbg !9266 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9270, metadata !DIExpression()), !dbg !9271
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9272, !srcloc !9274
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.77() #26, !dbg !9275
  ret i1 %1, !dbg !9276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9277 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9281, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i8 1, metadata !9282, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9283, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 0, metadata !9284, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9285, metadata !DIExpression()), !dbg !9286
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9287
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9287
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9287
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9283, metadata !DIExpression()), !dbg !9286
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9288
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9291
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9292
  call void @llvm.dbg.value(metadata i32 %7, metadata !9284, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.value(metadata i32 %7, metadata !9284, metadata !DIExpression()), !dbg !9286
  ret i32 %7, !dbg !9293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.77() unnamed_addr #1 !dbg !9294 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9296, metadata !DIExpression()), !dbg !9297
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !9298
  ret i1 %1, !dbg !9299
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9300 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9304, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %1, metadata !9305, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %2, metadata !9306, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %3, metadata !9307, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 0, metadata !9308, metadata !DIExpression()), !dbg !9312
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9313
  %5 = icmp eq i32 %3, 17, !dbg !9314
  br i1 %5, label %6, label %14, !dbg !9315

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9316
  call void @llvm.dbg.value(metadata i32 %7, metadata !9309, metadata !DIExpression()), !dbg !9317
  %8 = icmp eq i32 %7, 0, !dbg !9318
  %9 = shl nuw i32 1, %1, !dbg !9320
  br i1 %8, label %12, label %10, !dbg !9321

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9322
  br label %14, !dbg !9324

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9325
  br label %14, !dbg !9328

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9329
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !9330 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9332, metadata !DIExpression()), !dbg !9336
  call void @llvm.dbg.value(metadata i8* %1, metadata !9333, metadata !DIExpression()), !dbg !9336
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9337
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9337
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9337
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9334, metadata !DIExpression()), !dbg !9336
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9338
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9338
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9340
  %9 = icmp eq i32 %8, 0, !dbg !9340
  br i1 %9, label %12, label %10, !dbg !9341

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9342
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9344
  br label %12, !dbg !9345

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9346
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9348
  %15 = icmp eq i32 %14, 0, !dbg !9348
  br i1 %15, label %19, label %16, !dbg !9349

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9350
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9351
  store i8 %18, i8* %1, align 1, !dbg !9352
  br label %19, !dbg !9353

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9336
  ret i32 %20, !dbg !9354
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9355 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9357, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata i8 %1, metadata !9358, metadata !DIExpression()), !dbg !9361
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9362
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9362
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9362
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9359, metadata !DIExpression()), !dbg !9361
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9363

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9364
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9367
  %10 = icmp eq i32 %9, 0, !dbg !9367
  br i1 %10, label %18, label %11, !dbg !9368

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9369, !srcloc !9376
  call void @llvm.dbg.value(metadata i32 undef, metadata !9372, metadata !DIExpression()) #24, !dbg !9377
  call void @llvm.dbg.value(metadata i32 undef, metadata !9373, metadata !DIExpression()) #24, !dbg !9377
  call void @llvm.dbg.value(metadata i32 undef, metadata !9360, metadata !DIExpression()), !dbg !9361
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9378
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9380
  %15 = icmp eq i32 %14, 0, !dbg !9380
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9369
  br i1 %15, label %17, label %19, !dbg !9381

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9372, metadata !DIExpression()) #24, !dbg !9377
  call void @llvm.dbg.value(metadata i32 %16, metadata !9360, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.value(metadata i32 undef, metadata !9382, metadata !DIExpression()) #24, !dbg !9385
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !9387, !srcloc !9388
  br label %18, !dbg !9389

18:                                               ; preds = %17, %7
  br label %7, !dbg !9364, !llvm.loop !9390

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9369
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9392
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9393
  call void @llvm.dbg.value(metadata i32 %20, metadata !9382, metadata !DIExpression()) #24, !dbg !9394
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !9396, !srcloc !9388
  ret void, !dbg !9397
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !9398 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9400, metadata !DIExpression()), !dbg !9403
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9404
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9404
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9404
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9401, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.value(metadata i32 0, metadata !9402, metadata !DIExpression()), !dbg !9403
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9405
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9405
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9407
  %8 = icmp ne i32 %7, 0, !dbg !9407
  %9 = zext i1 %8 to i32, !dbg !9408
  call void @llvm.dbg.value(metadata i32 %9, metadata !9402, metadata !DIExpression()), !dbg !9403
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9409
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9411
  %12 = icmp eq i32 %11, 0, !dbg !9411
  %13 = or i32 %9, 2, !dbg !9412
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9412
  call void @llvm.dbg.value(metadata i32 %14, metadata !9402, metadata !DIExpression()), !dbg !9403
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9413
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9415
  %17 = icmp eq i32 %16, 0, !dbg !9415
  %18 = or i32 %14, 4, !dbg !9416
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %19, metadata !9402, metadata !DIExpression()), !dbg !9403
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9417
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9419
  %22 = icmp eq i32 %21, 0, !dbg !9419
  %23 = or i32 %19, 8, !dbg !9420
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9420
  call void @llvm.dbg.value(metadata i32 %24, metadata !9402, metadata !DIExpression()), !dbg !9403
  %25 = and i32 %24, 8, !dbg !9421
  %26 = icmp eq i32 %25, 0, !dbg !9421
  br i1 %26, label %29, label %27, !dbg !9423

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9424
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9426
  br label %29, !dbg !9427

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9428
  %31 = icmp eq i32 %30, 0, !dbg !9428
  br i1 %31, label %34, label %32, !dbg !9430

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9431
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9433
  br label %34, !dbg !9434

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9435
  %36 = icmp eq i32 %35, 0, !dbg !9435
  br i1 %36, label %39, label %37, !dbg !9437

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9438
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9440
  br label %39, !dbg !9441

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9442
  %41 = icmp eq i32 %40, 0, !dbg !9442
  br i1 %41, label %44, label %42, !dbg !9444

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9445
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9447
  br label %44, !dbg !9448

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9449
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9450
  ret i32 %24, !dbg !9451
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9452 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9454, metadata !DIExpression()), !dbg !9463
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9455, metadata !DIExpression()), !dbg !9463
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9464
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9464
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9464
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9456, metadata !DIExpression()), !dbg !9463
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9465
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9465
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9465
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9457, metadata !DIExpression()), !dbg !9463
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9466
  %10 = load i8, i8* %9, align 4, !dbg !9466
  %11 = zext i8 %10 to i32, !dbg !9467
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9468
  call void @llvm.dbg.value(metadata i32 %12, metadata !9459, metadata !DIExpression()), !dbg !9463
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9469
  %14 = load i8, i8* %13, align 1, !dbg !9469
  %15 = zext i8 %14 to i32, !dbg !9470
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9471
  call void @llvm.dbg.value(metadata i32 %16, metadata !9460, metadata !DIExpression()), !dbg !9463
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9472
  %18 = load i8, i8* %17, align 2, !dbg !9472
  %19 = zext i8 %18 to i32, !dbg !9473
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9474
  call void @llvm.dbg.value(metadata i32 %20, metadata !9461, metadata !DIExpression()), !dbg !9463
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9475
  %22 = load i8, i8* %21, align 1, !dbg !9475
  %23 = zext i8 %22 to i32, !dbg !9476
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9477
  call void @llvm.dbg.value(metadata i32 %24, metadata !9462, metadata !DIExpression()), !dbg !9463
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9478

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9480
  br i1 %26, label %69, label %27, !dbg !9482

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9483

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9484
  br i1 %29, label %65, label %30, !dbg !9484

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9486
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9463
  br i1 %31, label %38, label %34, !dbg !9488

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9489
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9489

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9492
  br i1 %37, label %38, label %69, !dbg !9493

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9494
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9495
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9496
  %41 = icmp eq i32 %12, %40, !dbg !9498
  br i1 %41, label %43, label %42, !dbg !9499

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9500
  br label %43, !dbg !9502

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9503
  %45 = icmp eq i32 %16, %44, !dbg !9505
  br i1 %45, label %47, label %46, !dbg !9506

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9507
  br label %47, !dbg !9509

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9510
  %49 = icmp eq i32 %20, %48, !dbg !9512
  br i1 %49, label %51, label %50, !dbg !9513

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9514
  br label %51, !dbg !9516

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9517
  %53 = icmp eq i32 %24, %52, !dbg !9519
  br i1 %53, label %55, label %54, !dbg !9520

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9521
  br label %55, !dbg !9523

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9524
  %57 = load i32, i32* %56, align 4, !dbg !9524
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9526
  %59 = load i32, i32* %58, align 4, !dbg !9526
  %60 = icmp eq i32 %57, %59, !dbg !9527
  br i1 %60, label %63, label %61, !dbg !9528

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9529
  %62 = load i32, i32* %56, align 4, !dbg !9531
  store i32 %62, i32* %58, align 4, !dbg !9532
  br label %63, !dbg !9533

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9534
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9535
  br label %69, !dbg !9536

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9484
  %67 = and i8 %66, 1, !dbg !9484
  %68 = icmp eq i8 %67, 0, !dbg !9484
  br i1 %68, label %30, label %69, !dbg !9484

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9463
  ret i32 %70, !dbg !9537
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9538 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9540, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9541, metadata !DIExpression()), !dbg !9543
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9544
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9544
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9544
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9542, metadata !DIExpression()), !dbg !9543
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9545
  %7 = load i32, i32* %6, align 4, !dbg !9545
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9546
  store i32 %7, i32* %8, align 4, !dbg !9547
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9548, !range !9549
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9550
  %11 = trunc i32 %10 to i8, !dbg !9550
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9551
  store i8 %11, i8* %12, align 4, !dbg !9552
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9553, !range !9554
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9555
  %15 = trunc i32 %14 to i8, !dbg !9555
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9556
  store i8 %15, i8* %16, align 1, !dbg !9557
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9558
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9559, !range !9549
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9560
  %20 = trunc i32 %19 to i8, !dbg !9560
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9561
  store i8 %20, i8* %21, align 2, !dbg !9562
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9563, !range !9564
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9565
  %24 = trunc i32 %23 to i8, !dbg !9565
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9566
  store i8 %24, i8* %25, align 1, !dbg !9567
  ret i32 0, !dbg !9568
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !9569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9573, metadata !DIExpression()), !dbg !9575
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9576
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9576
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9576
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9574, metadata !DIExpression()), !dbg !9575
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9577
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9577
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9578
  ret i32 %7, !dbg !9579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9584, metadata !DIExpression()), !dbg !9585
  %2 = icmp eq i32 %0, 1024, !dbg !9586
  %3 = select i1 %2, i32 2, i32 0, !dbg !9586
  %4 = icmp eq i32 %0, 1536, !dbg !9586
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9586
  ret i32 %5, !dbg !9587
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !9588 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9590, metadata !DIExpression()), !dbg !9592
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9593
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9593
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9593
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9591, metadata !DIExpression()), !dbg !9592
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9594
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9594
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9595
  ret i32 %7, !dbg !9596
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9601, metadata !DIExpression()), !dbg !9602
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9603
  %3 = icmp ult i32 %2, 4, !dbg !9603
  br i1 %3, label %4, label %7, !dbg !9603

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9603
  %6 = load i32, i32* %5, align 4, !dbg !9603
  br label %7, !dbg !9603

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9604
  ret i32 %8, !dbg !9606
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !9607 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9609, metadata !DIExpression()), !dbg !9611
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9612
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9612
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9612
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9610, metadata !DIExpression()), !dbg !9611
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9613
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9613
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9614
  ret i32 %7, !dbg !9615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9620, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.value(metadata i32 %1, metadata !9621, metadata !DIExpression()), !dbg !9622
  %3 = icmp eq i32 %0, 4096, !dbg !9623
  %4 = icmp eq i32 %1, 0, !dbg !9623
  %5 = select i1 %4, i32 4, i32 3, !dbg !9623
  %6 = select i1 %4, i32 3, i32 2, !dbg !9623
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9623
  ret i32 %7, !dbg !9624
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !9625 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9627, metadata !DIExpression()), !dbg !9629
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9630
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9630
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9630
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9628, metadata !DIExpression()), !dbg !9629
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9631
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9631
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9632
  ret i32 %7, !dbg !9633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9638, metadata !DIExpression()), !dbg !9639
  %2 = icmp eq i32 %0, 768, !dbg !9640
  %3 = zext i1 %2 to i32, !dbg !9639
  ret i32 %3, !dbg !9642
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9643 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9648, metadata !DIExpression()), !dbg !9649
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9650
  %3 = load volatile i32, i32* %2, align 4, !dbg !9650
  %4 = and i32 %3, 768, !dbg !9650
  ret i32 %4, !dbg !9651
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9652 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9654, metadata !DIExpression()), !dbg !9655
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9656
  %3 = load volatile i32, i32* %2, align 4, !dbg !9656
  %4 = and i32 %3, 4096, !dbg !9656
  ret i32 %4, !dbg !9657
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9658 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9660, metadata !DIExpression()), !dbg !9661
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9662
  %3 = load volatile i32, i32* %2, align 4, !dbg !9662
  %4 = and i32 %3, 12288, !dbg !9662
  ret i32 %4, !dbg !9663
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9664 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9666, metadata !DIExpression()), !dbg !9667
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9668
  %3 = load volatile i32, i32* %2, align 4, !dbg !9668
  %4 = and i32 %3, 1536, !dbg !9668
  ret i32 %4, !dbg !9669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !9670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9674, metadata !DIExpression()), !dbg !9675
  %2 = icmp eq i32 %0, 2, !dbg !9676
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9676
  %4 = icmp eq i32 %0, 1, !dbg !9676
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9676
  ret i32 %5, !dbg !9677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !9678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9682, metadata !DIExpression()), !dbg !9683
  %2 = icmp ult i32 %0, 3, !dbg !9684
  br i1 %2, label %3, label %6, !dbg !9684

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9684
  %5 = load i32, i32* %4, align 4, !dbg !9684
  br label %6, !dbg !9684

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9685
  ret i32 %7, !dbg !9687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9692, metadata !DIExpression()), !dbg !9694
  call void @llvm.dbg.value(metadata i32 %1, metadata !9693, metadata !DIExpression()), !dbg !9694
  %3 = icmp eq i32 %0, 4, !dbg !9695
  %4 = icmp eq i32 %1, 0, !dbg !9695
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9695
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9695
  ret i32 %6, !dbg !9696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9701, metadata !DIExpression()), !dbg !9702
  %2 = icmp eq i32 %0, 1, !dbg !9703
  %3 = select i1 %2, i32 768, i32 0, !dbg !9702
  ret i32 %3, !dbg !9705
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9706 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9710, metadata !DIExpression()), !dbg !9711
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9712
  %3 = load volatile i32, i32* %2, align 4, !dbg !9712
  %4 = and i32 %3, -8193, !dbg !9712
  store volatile i32 %4, i32* %2, align 4, !dbg !9712
  ret void, !dbg !9713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !9714 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9718, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i32 %1, metadata !9719, metadata !DIExpression()), !dbg !9721
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9722
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9722
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9722
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9720, metadata !DIExpression()), !dbg !9721
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9723
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9723
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9724
  ret void, !dbg !9725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !9726 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9728, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.value(metadata i32 %1, metadata !9729, metadata !DIExpression()), !dbg !9731
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9732
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9732
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9732
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9730, metadata !DIExpression()), !dbg !9731
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9733
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9733
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9734
  ret void, !dbg !9735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !9736 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9738, metadata !DIExpression()), !dbg !9741
  call void @llvm.dbg.value(metadata i32 %1, metadata !9739, metadata !DIExpression()), !dbg !9741
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9742
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9742
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9742
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9740, metadata !DIExpression()), !dbg !9741
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9743
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9743
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9744
  ret void, !dbg !9745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !9746 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9748, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.value(metadata i32 %1, metadata !9749, metadata !DIExpression()), !dbg !9751
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9752
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9752
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9752
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9750, metadata !DIExpression()), !dbg !9751
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9753
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9753
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9754
  ret void, !dbg !9755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9756 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9758, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata i32 %1, metadata !9759, metadata !DIExpression()), !dbg !9763
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9764
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9764
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9764
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9760, metadata !DIExpression()), !dbg !9763
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9765
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9765
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9765
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9761, metadata !DIExpression()), !dbg !9763
  %10 = bitcast i32* %3 to i8*, !dbg !9766
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9766
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9767
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9767
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9771
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9771
  %15 = load i8*, i8** %14, align 4, !dbg !9771
  call void @llvm.dbg.value(metadata i32* %3, metadata !9762, metadata !DIExpression(DW_OP_deref)), !dbg !9763
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9772
  %17 = icmp slt i32 %16, 0, !dbg !9773
  br i1 %17, label %23, label %18, !dbg !9774

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9775
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9775
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !9776
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9777
  %22 = load i32, i32* %3, align 4, !dbg !9778
  call void @llvm.dbg.value(metadata i32 %22, metadata !9762, metadata !DIExpression()), !dbg !9763
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !9779
  br label %23, !dbg !9780

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9780
  ret void, !dbg !9780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9783, metadata !DIExpression()), !dbg !9784
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9785
  %3 = load volatile i32, i32* %2, align 4, !dbg !9785
  %4 = or i32 %3, 8192, !dbg !9785
  store volatile i32 %4, i32* %2, align 4, !dbg !9785
  ret void, !dbg !9786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9787 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9789, metadata !DIExpression()), !dbg !9793
  call void @llvm.dbg.value(metadata i8* %1, metadata !9790, metadata !DIExpression()), !dbg !9793
  call void @llvm.dbg.value(metadata i32* %2, metadata !9791, metadata !DIExpression()), !dbg !9793
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9794
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9794
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9794
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9792, metadata !DIExpression()), !dbg !9793
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9795
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9795
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9797
  br i1 %9, label %12, label %10, !dbg !9798

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !9799
  br label %12, !dbg !9800

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9793
  ret i32 %13, !dbg !9801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9802 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9806, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.value(metadata i32 0, metadata !9807, metadata !DIExpression()), !dbg !9808
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9809
  %3 = load volatile i32, i32* %2, align 4, !dbg !9809
  %4 = and i32 %3, -32769, !dbg !9809
  store volatile i32 %4, i32* %2, align 4, !dbg !9809
  ret void, !dbg !9810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !9811 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9815, metadata !DIExpression()), !dbg !9819
  call void @llvm.dbg.value(metadata i32 %1, metadata !9816, metadata !DIExpression()), !dbg !9819
  call void @llvm.dbg.value(metadata i32 0, metadata !9817, metadata !DIExpression()), !dbg !9819
  call void @llvm.dbg.value(metadata i32 %2, metadata !9818, metadata !DIExpression()), !dbg !9819
  %4 = mul i32 %1, 25, !dbg !9820
  %5 = shl i32 %2, 2, !dbg !9820
  %6 = udiv i32 %4, %5, !dbg !9820
  %7 = udiv i32 %6, 100, !dbg !9820
  %8 = shl nuw nsw i32 %7, 4, !dbg !9820
  %9 = mul i32 %7, -100, !dbg !9820
  %10 = add i32 %9, %6, !dbg !9820
  %11 = shl i32 %10, 4, !dbg !9820
  %12 = add i32 %11, 50, !dbg !9820
  %13 = udiv i32 %12, 100, !dbg !9820
  %14 = and i32 %13, 240, !dbg !9820
  %15 = add nuw nsw i32 %14, %8, !dbg !9820
  %16 = and i32 %13, 15, !dbg !9820
  %17 = and i32 %15, 65520, !dbg !9823
  %18 = or i32 %17, %16, !dbg !9823
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9824
  store volatile i32 %18, i32* %19, align 4, !dbg !9825
  ret void, !dbg !9826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9827 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9829, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i32 %1, metadata !9830, metadata !DIExpression()), !dbg !9831
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9832
  %4 = load volatile i32, i32* %3, align 4, !dbg !9832
  %5 = and i32 %4, -769, !dbg !9832
  %6 = or i32 %5, %1, !dbg !9832
  store volatile i32 %6, i32* %3, align 4, !dbg !9832
  ret void, !dbg !9833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9834 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9836, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata i32 %1, metadata !9837, metadata !DIExpression()), !dbg !9838
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9839
  %4 = load volatile i32, i32* %3, align 4, !dbg !9839
  %5 = and i32 %4, -4097, !dbg !9839
  %6 = or i32 %5, %1, !dbg !9839
  store volatile i32 %6, i32* %3, align 4, !dbg !9839
  ret void, !dbg !9840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9841 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9843, metadata !DIExpression()), !dbg !9845
  call void @llvm.dbg.value(metadata i32 %1, metadata !9844, metadata !DIExpression()), !dbg !9845
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9846
  %4 = load volatile i32, i32* %3, align 4, !dbg !9846
  %5 = and i32 %4, -12289, !dbg !9846
  %6 = or i32 %5, %1, !dbg !9846
  store volatile i32 %6, i32* %3, align 4, !dbg !9846
  ret void, !dbg !9847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !9848 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9850, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i32 %1, metadata !9851, metadata !DIExpression()), !dbg !9852
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9853
  %4 = load volatile i32, i32* %3, align 4, !dbg !9853
  %5 = and i32 %4, -1537, !dbg !9853
  %6 = or i32 %5, %1, !dbg !9853
  store volatile i32 %6, i32* %3, align 4, !dbg !9853
  ret void, !dbg !9854
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9855 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9857, metadata !DIExpression()), !dbg !9858
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9859
  %3 = load volatile i32, i32* %2, align 4, !dbg !9859
  %4 = lshr i32 %3, 3, !dbg !9860
  %5 = and i32 %4, 1, !dbg !9860
  ret i32 %5, !dbg !9861
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9862 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9864, metadata !DIExpression()), !dbg !9865
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9866
  %3 = load volatile i32, i32* %2, align 4, !dbg !9866
  %4 = and i32 %3, 1, !dbg !9866
  ret i32 %4, !dbg !9867
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9868 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9870, metadata !DIExpression()), !dbg !9871
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9872
  %3 = load volatile i32, i32* %2, align 4, !dbg !9872
  %4 = lshr i32 %3, 1, !dbg !9873
  %5 = and i32 %4, 1, !dbg !9873
  ret i32 %5, !dbg !9874
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9875 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9877, metadata !DIExpression()), !dbg !9878
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9879
  %3 = load volatile i32, i32* %2, align 4, !dbg !9879
  %4 = lshr i32 %3, 8, !dbg !9880
  %5 = and i32 %4, 1, !dbg !9880
  ret i32 %5, !dbg !9881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9882 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9884, metadata !DIExpression()), !dbg !9885
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9886
  store volatile i32 -257, i32* %2, align 4, !dbg !9886
  ret void, !dbg !9887
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9888 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9890, metadata !DIExpression()), !dbg !9892
  %3 = bitcast i32* %2 to i8*, !dbg !9893
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9893
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9891, metadata !DIExpression()), !dbg !9894
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9895
  %5 = load volatile i32, i32* %4, align 4, !dbg !9895
  store volatile i32 %5, i32* %2, align 4, !dbg !9896
  %6 = load volatile i32, i32* %2, align 4, !dbg !9897
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9898
  %8 = load volatile i32, i32* %7, align 4, !dbg !9898
  store volatile i32 %8, i32* %2, align 4, !dbg !9899
  %9 = load volatile i32, i32* %2, align 4, !dbg !9900
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9901
  ret void, !dbg !9901
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9902 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9904, metadata !DIExpression()), !dbg !9906
  %3 = bitcast i32* %2 to i8*, !dbg !9907
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9907
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9905, metadata !DIExpression()), !dbg !9908
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9909
  %5 = load volatile i32, i32* %4, align 4, !dbg !9909
  store volatile i32 %5, i32* %2, align 4, !dbg !9910
  %6 = load volatile i32, i32* %2, align 4, !dbg !9911
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9912
  %8 = load volatile i32, i32* %7, align 4, !dbg !9912
  store volatile i32 %8, i32* %2, align 4, !dbg !9913
  %9 = load volatile i32, i32* %2, align 4, !dbg !9914
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9915
  ret void, !dbg !9915
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9916 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9918, metadata !DIExpression()), !dbg !9920
  %3 = bitcast i32* %2 to i8*, !dbg !9921
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9921
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9919, metadata !DIExpression()), !dbg !9922
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9923
  %5 = load volatile i32, i32* %4, align 4, !dbg !9923
  store volatile i32 %5, i32* %2, align 4, !dbg !9924
  %6 = load volatile i32, i32* %2, align 4, !dbg !9925
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9926
  %8 = load volatile i32, i32* %7, align 4, !dbg !9926
  store volatile i32 %8, i32* %2, align 4, !dbg !9927
  %9 = load volatile i32, i32* %2, align 4, !dbg !9928
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9929
  ret void, !dbg !9929
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9930 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9932, metadata !DIExpression()), !dbg !9934
  %3 = bitcast i32* %2 to i8*, !dbg !9935
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9935
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9933, metadata !DIExpression()), !dbg !9936
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9937
  %5 = load volatile i32, i32* %4, align 4, !dbg !9937
  store volatile i32 %5, i32* %2, align 4, !dbg !9938
  %6 = load volatile i32, i32* %2, align 4, !dbg !9939
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9940
  %8 = load volatile i32, i32* %7, align 4, !dbg !9940
  store volatile i32 %8, i32* %2, align 4, !dbg !9941
  %9 = load volatile i32, i32* %2, align 4, !dbg !9942
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9943
  ret void, !dbg !9943
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9944 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9946, metadata !DIExpression()), !dbg !9947
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9948
  %3 = load volatile i32, i32* %2, align 4, !dbg !9948
  %4 = lshr i32 %3, 7, !dbg !9949
  %5 = and i32 %4, 1, !dbg !9949
  ret i32 %5, !dbg !9950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !9951 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9955, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i8 %1, metadata !9956, metadata !DIExpression()), !dbg !9957
  %3 = zext i8 %1 to i32, !dbg !9958
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9959
  store volatile i32 %3, i32* %4, align 4, !dbg !9960
  ret void, !dbg !9961
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9962 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9964, metadata !DIExpression()), !dbg !9965
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9966
  %3 = load volatile i32, i32* %2, align 4, !dbg !9966
  %4 = lshr i32 %3, 5, !dbg !9967
  %5 = and i32 %4, 1, !dbg !9967
  ret i32 %5, !dbg !9968
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9969 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9973, metadata !DIExpression()), !dbg !9974
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9975
  %3 = load volatile i32, i32* %2, align 4, !dbg !9975
  %4 = trunc i32 %3 to i8, !dbg !9976
  ret i8 %4, !dbg !9977
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !9978 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9980, metadata !DIExpression()), !dbg !9986
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9987
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9987
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9987
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9981, metadata !DIExpression()), !dbg !9986
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9988
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !9988
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !9988
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !9982, metadata !DIExpression()), !dbg !9986
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !9989
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !9990
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !9990
  %10 = tail call fastcc zeroext i1 @device_is_ready.83(%struct.device* noundef %9) #26, !dbg !9992
  br i1 %10, label %11, label %49, !dbg !9993

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !9994
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !9995
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9995
  %15 = load i8*, i8** %14, align 4, !dbg !9995
  %16 = tail call fastcc i32 @clock_control_on.84(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !9996
  call void @llvm.dbg.value(metadata i32 %16, metadata !9985, metadata !DIExpression()), !dbg !9986
  %17 = icmp eq i32 %16, 0, !dbg !9997
  br i1 %17, label %18, label %49, !dbg !9999

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10000
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10000
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10001
  call void @llvm.dbg.value(metadata i32 %21, metadata !9985, metadata !DIExpression()), !dbg !9986
  %22 = icmp slt i32 %21, 0, !dbg !10002
  br i1 %22, label %49, label %23, !dbg !10004

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10005
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10005
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10006
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10007
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10008
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10009
  %28 = load i32, i32* %27, align 4, !dbg !10009
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10011

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !9983, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i32 4096, metadata !9984, metadata !DIExpression()), !dbg !9986
  br label %31, !dbg !10012

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !9983, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i32 0, metadata !9984, metadata !DIExpression()), !dbg !9986
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10015
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10015
  call void @llvm.dbg.value(metadata i32 %33, metadata !9984, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i32 %32, metadata !9983, metadata !DIExpression()), !dbg !9986
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10016
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10017
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10018
  %36 = load i8, i8* %35, align 4, !dbg !10018, !range !6591
  %37 = icmp eq i8 %36, 0, !dbg !10018
  br i1 %37, label %39, label %38, !dbg !10020

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10021
  br label %39, !dbg !10023

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10024
  %41 = load i32, i32* %40, align 4, !dbg !10024
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10025
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10026
  %43 = load i8, i8* %42, align 4, !dbg !10026, !range !6591
  %44 = icmp eq i8 %43, 0, !dbg !10026
  br i1 %44, label %47, label %45, !dbg !10028

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10029
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10031
  br label %47, !dbg !10032

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10033
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10034
  br label %49, !dbg !10035

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !9986
  ret i32 %50, !dbg !10036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10037 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10041, metadata !DIExpression()), !dbg !10045
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10046
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10046
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10046
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10042, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10043, metadata !DIExpression()), !dbg !10045
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10047
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10048
  ret void, !dbg !10049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.83(%struct.device* noundef %0) unnamed_addr #1 !dbg !10050 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10054, metadata !DIExpression()), !dbg !10055
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10056, !srcloc !10058
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.85(%struct.device* noundef %0) #26, !dbg !10059
  ret i1 %2, !dbg !10060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.84(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10061 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10063, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.value(metadata i8* %1, metadata !10064, metadata !DIExpression()), !dbg !10066
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10067
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10067
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10067
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10065, metadata !DIExpression()), !dbg !10066
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10068
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10068
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10069
  ret i32 %8, !dbg !10070
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10071 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10075, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i8 0, metadata !10076, metadata !DIExpression()), !dbg !10079
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10080
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10080
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10078, metadata !DIExpression(DW_OP_deref)), !dbg !10079
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10081
  call void @llvm.dbg.value(metadata i32 %4, metadata !10077, metadata !DIExpression()), !dbg !10079
  %5 = icmp slt i32 %4, 0, !dbg !10082
  br i1 %5, label %9, label %6, !dbg !10084

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10085
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10078, metadata !DIExpression()), !dbg !10079
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10086
  br label %9, !dbg !10087

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10079
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10088
  ret i32 %10, !dbg !10088
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10089 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10091, metadata !DIExpression()), !dbg !10093
  call void @llvm.dbg.value(metadata i32 12, metadata !10092, metadata !DIExpression()), !dbg !10093
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10094
  %3 = load volatile i32, i32* %2, align 4, !dbg !10094
  %4 = or i32 %3, 12, !dbg !10094
  store volatile i32 %4, i32* %2, align 4, !dbg !10094
  ret void, !dbg !10095
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !10096 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10098, metadata !DIExpression()), !dbg !10102
  call void @llvm.dbg.value(metadata i32 %1, metadata !10099, metadata !DIExpression()), !dbg !10102
  call void @llvm.dbg.value(metadata i32 %2, metadata !10100, metadata !DIExpression()), !dbg !10102
  call void @llvm.dbg.value(metadata i32 0, metadata !10101, metadata !DIExpression()), !dbg !10102
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10103
  %5 = load volatile i32, i32* %4, align 4, !dbg !10103
  %6 = and i32 %5, -5633, !dbg !10103
  %7 = or i32 %2, %1, !dbg !10103
  %8 = or i32 %7, %6, !dbg !10103
  store volatile i32 %8, i32* %4, align 4, !dbg !10103
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10104
  %10 = load volatile i32, i32* %9, align 4, !dbg !10104
  %11 = and i32 %10, -12289, !dbg !10104
  store volatile i32 %11, i32* %9, align 4, !dbg !10104
  ret void, !dbg !10105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10106 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10108, metadata !DIExpression()), !dbg !10109
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10110
  %3 = load volatile i32, i32* %2, align 4, !dbg !10110
  %4 = or i32 %3, 8, !dbg !10110
  store volatile i32 %4, i32* %2, align 4, !dbg !10110
  ret void, !dbg !10111
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10112 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10116, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10117, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.value(metadata i32 0, metadata !10118, metadata !DIExpression()), !dbg !10119
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10120
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10120
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10121
  %5 = load i8, i8* %4, align 4, !dbg !10121
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10122
  ret i32 %6, !dbg !10123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.85(%struct.device* noundef %0) unnamed_addr #1 !dbg !10124 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10126, metadata !DIExpression()), !dbg !10127
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10128
  ret i1 %2, !dbg !10129
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !10130 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10132, metadata !DIExpression()), !dbg !10133
  tail call fastcc void @__NVIC_SetPriority.87() #26, !dbg !10134
  store i32 3199, i32* @last_load, align 4, !dbg !10135
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10136
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10137
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10138
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10139
  %3 = or i32 %2, 7, !dbg !10139
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10139
  ret i32 0, !dbg !10140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.87() unnamed_addr #16 !dbg !10141 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10143, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata i32 1, metadata !10144, metadata !DIExpression()), !dbg !10145
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10146
  ret void, !dbg !10149
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10150 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10152, metadata !DIExpression()), !dbg !10154
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10155
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10156
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10157
  %5 = add i32 %4, %3, !dbg !10157
  store i32 %5, i32* @cycle_count, align 4, !dbg !10157
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10158
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10159
  %7 = sub i32 %5, %6, !dbg !10162
  %8 = udiv i32 %7, 3200, !dbg !10163
  call void @llvm.dbg.value(metadata i32 %8, metadata !10153, metadata !DIExpression()), !dbg !10154
  %9 = mul nuw i32 %8, 3200, !dbg !10164
  %10 = add i32 %9, %6, !dbg !10165
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10165
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10166
  tail call void @z_arm_int_exit() #25, !dbg !10167
  ret void, !dbg !10168
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !10169 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10174
  call void @llvm.dbg.value(metadata i32 %1, metadata !10171, metadata !DIExpression()), !dbg !10175
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10176
  call void @llvm.dbg.value(metadata i32 %2, metadata !10172, metadata !DIExpression()), !dbg !10175
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10177
  call void @llvm.dbg.value(metadata i32 %3, metadata !10173, metadata !DIExpression()), !dbg !10175
  %4 = and i32 %2, 65536, !dbg !10178
  %5 = icmp ne i32 %4, 0, !dbg !10178
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10180
  %8 = load i32, i32* @last_load, align 4, !dbg !10175
  br i1 %7, label %9, label %13, !dbg !10180

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10181
  %11 = add i32 %10, %8, !dbg !10181
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10181
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10183
  br label %13, !dbg !10184

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10185
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10186
  %16 = add i32 %14, %15, !dbg !10187
  ret i32 %16, !dbg !10188
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10193, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i1 %1, metadata !10194, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10206
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10207
  br i1 %4, label %5, label %8, !dbg !10207

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10209
  %7 = and i32 %6, -2, !dbg !10209
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10209
  store i32 -16777216, i32* @last_load, align 4, !dbg !10211
  br label %54, !dbg !10212

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10213
  call void @llvm.dbg.value(metadata i32 %9, metadata !10198, metadata !DIExpression()), !dbg !10206
  br i1 %3, label %18, label %10, !dbg !10214

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10214
  call void @llvm.dbg.value(metadata i32 undef, metadata !10193, metadata !DIExpression()), !dbg !10206
  %12 = icmp slt i32 %11, 1, !dbg !10215
  br i1 %12, label %18, label %13, !dbg !10215

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !10215
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !10215
  %16 = mul nuw nsw i32 %15, 3200, !dbg !10215
  %17 = add nuw nsw i32 %16, 3199, !dbg !10215
  br label %18, !dbg !10215

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10193, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10216, metadata !DIExpression()) #24, !dbg !10223
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10225, !srcloc !10231
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10225
  call void @llvm.dbg.value(metadata i32 %21, metadata !10228, metadata !DIExpression()) #24, !dbg !10232
  call void @llvm.dbg.value(metadata i32 undef, metadata !10229, metadata !DIExpression()) #24, !dbg !10232
  call void @llvm.dbg.value(metadata i32 %21, metadata !10222, metadata !DIExpression()) #24, !dbg !10223
  call void @llvm.dbg.value(metadata i32 %21, metadata !10199, metadata !DIExpression()), !dbg !10206
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10233
  call void @llvm.dbg.value(metadata i32 %22, metadata !10204, metadata !DIExpression()), !dbg !10206
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10234
  call void @llvm.dbg.value(metadata i32 %23, metadata !10196, metadata !DIExpression()), !dbg !10206
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10235
  %25 = add i32 %24, %22, !dbg !10235
  store i32 %25, i32* @cycle_count, align 4, !dbg !10235
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10236
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10237
  %27 = sub i32 %25, %26, !dbg !10238
  call void @llvm.dbg.value(metadata i32 %27, metadata !10205, metadata !DIExpression()), !dbg !10206
  %28 = icmp slt i32 %27, 0, !dbg !10239
  br i1 %28, label %38, label %29, !dbg !10241

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10195, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i32 undef, metadata !10195, metadata !DIExpression()), !dbg !10206
  %30 = add nuw i32 %19, %27, !dbg !10242
  %31 = urem i32 %30, 3200, !dbg !10244
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10195, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10206
  %32 = sub nuw nsw i32 %19, %31, !dbg !10245
  call void @llvm.dbg.value(metadata i32 %32, metadata !10195, metadata !DIExpression()), !dbg !10206
  %33 = icmp ugt i32 %32, 1024, !dbg !10246
  br i1 %33, label %34, label %36, !dbg !10246

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10195, metadata !DIExpression()), !dbg !10206
  %35 = icmp ugt i32 %32, 16771200, !dbg !10247
  br i1 %35, label %38, label %36, !dbg !10249

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16771200, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10250
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10251
  call void @llvm.dbg.value(metadata i32 %40, metadata !10197, metadata !DIExpression()), !dbg !10206
  %41 = add nsw i32 %39, -1, !dbg !10252
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10253
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10254
  %42 = icmp ult i32 %23, %40, !dbg !10255
  br i1 %42, label %43, label %48, !dbg !10257

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10258
  %45 = add i32 %23, %9, !dbg !10260
  %46 = sub i32 %45, %40, !dbg !10261
  %47 = add i32 %46, %44, !dbg !10258
  br label %52, !dbg !10262

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10263
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10265
  %51 = add i32 %49, %50, !dbg !10265
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10266
  store i32 %53, i32* @cycle_count, align 4, !dbg !10266
  call void @llvm.dbg.value(metadata i32 %21, metadata !10267, metadata !DIExpression()) #24, !dbg !10273
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10272, metadata !DIExpression()) #24, !dbg !10273
  call void @llvm.dbg.value(metadata i32 %21, metadata !10275, metadata !DIExpression()) #24, !dbg !10278
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !10280, !srcloc !10281
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10282
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10283 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10216, metadata !DIExpression()) #24, !dbg !10287
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10289, !srcloc !10231
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10289
  call void @llvm.dbg.value(metadata i32 %2, metadata !10228, metadata !DIExpression()) #24, !dbg !10291
  call void @llvm.dbg.value(metadata i32 undef, metadata !10229, metadata !DIExpression()) #24, !dbg !10291
  call void @llvm.dbg.value(metadata i32 %2, metadata !10222, metadata !DIExpression()) #24, !dbg !10287
  call void @llvm.dbg.value(metadata i32 %2, metadata !10285, metadata !DIExpression()), !dbg !10292
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10293
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10294
  %5 = add i32 %4, %3, !dbg !10295
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10296
  %7 = sub i32 %5, %6, !dbg !10297
  call void @llvm.dbg.value(metadata i32 %7, metadata !10286, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata i32 %2, metadata !10267, metadata !DIExpression()) #24, !dbg !10298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10272, metadata !DIExpression()) #24, !dbg !10298
  call void @llvm.dbg.value(metadata i32 %2, metadata !10275, metadata !DIExpression()) #24, !dbg !10300
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10302, !srcloc !10281
  %8 = udiv i32 %7, 3200, !dbg !10303
  ret i32 %8, !dbg !10304
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10305 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10216, metadata !DIExpression()) #24, !dbg !10309
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10311, !srcloc !10231
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10311
  call void @llvm.dbg.value(metadata i32 %2, metadata !10228, metadata !DIExpression()) #24, !dbg !10313
  call void @llvm.dbg.value(metadata i32 undef, metadata !10229, metadata !DIExpression()) #24, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %2, metadata !10222, metadata !DIExpression()) #24, !dbg !10309
  call void @llvm.dbg.value(metadata i32 %2, metadata !10307, metadata !DIExpression()), !dbg !10314
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10315
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10316
  %5 = add i32 %4, %3, !dbg !10317
  call void @llvm.dbg.value(metadata i32 %5, metadata !10308, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.value(metadata i32 %2, metadata !10267, metadata !DIExpression()) #24, !dbg !10318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10272, metadata !DIExpression()) #24, !dbg !10318
  call void @llvm.dbg.value(metadata i32 %2, metadata !10275, metadata !DIExpression()) #24, !dbg !10320
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10322, !srcloc !10281
  ret i32 %5, !dbg !10323
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !10324 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10325
  %2 = icmp eq i32 %1, -16777216, !dbg !10327
  br i1 %2, label %3, label %6, !dbg !10328

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10329
  %5 = or i32 %4, 1, !dbg !10329
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10329
  br label %6, !dbg !10331

6:                                                ; preds = %3, %0
  ret void, !dbg !10332
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !10333 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10334
  %2 = and i32 %1, -2, !dbg !10334
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10334
  ret void, !dbg !10335
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10336 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10362, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i8 %1, metadata !10363, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10364, metadata !DIExpression()), !dbg !10365
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10366
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10366
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10365
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10367
  %8 = load i8, i8* %6, align 4, !dbg !10368
  %9 = zext i8 %8 to i32, !dbg !10369
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10369
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10370
  br i1 %11, label %18, label %24, !dbg !10371

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10365
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10367
  %14 = load i8, i8* %6, align 4, !dbg !10368
  %15 = zext i8 %14 to i32, !dbg !10369
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10369
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10370
  br i1 %17, label %18, label %24, !dbg !10371, !llvm.loop !10372

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10374
  %21 = load i8, i8* %20, align 1, !dbg !10374
  %22 = icmp eq i8 %21, %1, !dbg !10377
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10378
  br i1 %22, label %24, label %12, !dbg !10379

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10365
  ret i32 %25, !dbg !10380
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10381 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10392, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata i8 %1, metadata !10393, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata i32 %2, metadata !10394, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata i32 0, metadata !10397, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata i32 0, metadata !10398, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata i8 0, metadata !10399, metadata !DIExpression()), !dbg !10409
  %4 = icmp eq i8 %1, 0, !dbg !10410
  br i1 %4, label %35, label %5, !dbg !10411

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10410
  br label %9, !dbg !10411

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10399, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.value(metadata i32 %29, metadata !10397, metadata !DIExpression()), !dbg !10408
  %8 = icmp eq i32 %34, %6, !dbg !10410
  br i1 %8, label %35, label %9, !dbg !10411, !llvm.loop !10412

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10399, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.value(metadata i32 %11, metadata !10397, metadata !DIExpression()), !dbg !10408
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10414
  %13 = load i32, i32* %12, align 4, !dbg !10414
  call void @llvm.dbg.value(metadata i32 %13, metadata !10396, metadata !DIExpression()), !dbg !10408
  %14 = and i32 %13, 31, !dbg !10415
  %15 = icmp ult i32 %14, 16, !dbg !10416
  br i1 %15, label %16, label %20, !dbg !10417

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10418
  %18 = load i32, i32* %17, align 4, !dbg !10418
  %19 = or i32 %18, 32, !dbg !10420
  call void @llvm.dbg.value(metadata i32 %19, metadata !10397, metadata !DIExpression()), !dbg !10408
  br label %28, !dbg !10421

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10422

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10423
  %23 = load i32, i32* %22, align 4, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %23, metadata !10401, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10424
  %24 = lshr i32 %23, 7, !dbg !10425
  %25 = and i32 %24, 16, !dbg !10425
  %26 = or i32 %25, %23, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %26, metadata !10397, metadata !DIExpression()), !dbg !10408
  br label %28, !dbg !10426

27:                                               ; preds = %20
  br label %28, !dbg !10427

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10408
  call void @llvm.dbg.value(metadata i32 %29, metadata !10397, metadata !DIExpression()), !dbg !10408
  %30 = lshr i32 %13, 5, !dbg !10427
  %31 = and i32 %30, 255, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %31, metadata !10395, metadata !DIExpression()), !dbg !10408
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10428
  call void @llvm.dbg.value(metadata i32 %32, metadata !10398, metadata !DIExpression()), !dbg !10408
  %33 = icmp slt i32 %32, 0, !dbg !10429
  %34 = add nuw nsw i32 %10, 1, !dbg !10431
  call void @llvm.dbg.value(metadata i32 %34, metadata !10399, metadata !DIExpression()), !dbg !10409
  br i1 %33, label %35, label %7, !dbg !10432

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10433
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10438, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.value(metadata i32 %1, metadata !10439, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.value(metadata i32 %2, metadata !10440, metadata !DIExpression()), !dbg !10442
  %4 = icmp ugt i32 %0, 175, !dbg !10443
  br i1 %4, label %17, label %5, !dbg !10445

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10446
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10447
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10447
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10441, metadata !DIExpression()), !dbg !10442
  %9 = lshr i32 1888, %6, !dbg !10448
  %10 = and i32 %9, 1, !dbg !10448
  %11 = icmp eq i32 %10, 0, !dbg !10448
  br i1 %11, label %12, label %17, !dbg !10450

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.92(%struct.device* noundef %8) #26, !dbg !10451
  br i1 %13, label %14, label %17, !dbg !10452

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !10453
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #25, !dbg !10454
  br label %17, !dbg !10455

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !10442
  ret i32 %18, !dbg !10456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.92(%struct.device* noundef %0) unnamed_addr #1 !dbg !10457 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10461, metadata !DIExpression()), !dbg !10462
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10463, !srcloc !10465
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.93(%struct.device* noundef %0) #26, !dbg !10466
  ret i1 %2, !dbg !10467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.93(%struct.device* noundef %0) unnamed_addr #1 !dbg !10468 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10470, metadata !DIExpression()), !dbg !10471
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10472
  ret i1 %2, !dbg !10473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10474 {
  ret void, !dbg !10475
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !10476 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10478, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.value(metadata i32 0, metadata !10479, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.value(metadata i32 0, metadata !10480, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.value(metadata i32 0, metadata !10481, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.value(metadata i32 0, metadata !10482, metadata !DIExpression()), !dbg !10483
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10484
  call void @llvm.dbg.value(metadata i32 %1, metadata !10478, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !10483
  %2 = lshr i32 %1, 2, !dbg !10485
  %3 = and i32 %2, 3, !dbg !10485
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !10485

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10486
  %6 = lshr i32 %5, 13, !dbg !10488
  %7 = and i32 %6, 7, !dbg !10488
  call void @llvm.dbg.value(metadata i32 %7, metadata !10482, metadata !DIExpression()), !dbg !10483
  %8 = shl nuw nsw i32 65536, %7, !dbg !10489
  br label %31, !dbg !10490

9:                                                ; preds = %0
  br label %31, !dbg !10491

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10492
  call void @llvm.dbg.value(metadata i32 %11, metadata !10479, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !10483
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10493
  call void @llvm.dbg.value(metadata i32 %12, metadata !10480, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !10483
  %13 = lshr i32 %11, 18, !dbg !10494
  %14 = and i32 %13, 15, !dbg !10494
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !10495
  %16 = load i8, i8* %15, align 1, !dbg !10495
  %17 = zext i8 %16 to i32, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %17, metadata !10479, metadata !DIExpression()), !dbg !10483
  %18 = lshr i32 %12, 22, !dbg !10496
  %19 = and i32 %18, 3, !dbg !10496
  %20 = add nuw nsw i32 %19, 1, !dbg !10497
  call void @llvm.dbg.value(metadata i32 %20, metadata !10480, metadata !DIExpression()), !dbg !10483
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10498
  %22 = and i32 %21, 65536, !dbg !10499
  call void @llvm.dbg.value(metadata i32 %22, metadata !10481, metadata !DIExpression()), !dbg !10483
  %23 = icmp eq i32 %22, 0, !dbg !10500
  br i1 %23, label %24, label %27, !dbg !10502

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !10503
  %26 = udiv i32 %25, %20, !dbg !10505
  br label %31, !dbg !10506

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !10507
  %29 = udiv i32 %28, %20, !dbg !10509
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !10510
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10511
  %34 = lshr i32 %33, 4, !dbg !10512
  %35 = and i32 %34, 15, !dbg !10512
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !10513
  %37 = load i8, i8* %36, align 1, !dbg !10513
  %38 = zext i8 %37 to i32, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %38, metadata !10478, metadata !DIExpression()), !dbg !10483
  %39 = lshr i32 %32, %38, !dbg !10514
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !10514
  ret void, !dbg !10515
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10516 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10524
  %2 = and i32 %1, 16711935, !dbg !10524
  %3 = or i32 %2, 45056, !dbg !10524
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10524
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10525
  %5 = or i32 %4, 256, !dbg !10525
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10525
  %6 = tail call i32 @HAL_GetTick() #25, !dbg !10526
  call void @llvm.dbg.value(metadata i32 %6, metadata !10522, metadata !DIExpression()), !dbg !10527
  br label %7, !dbg !10528

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10529
  %9 = and i32 %8, 512, !dbg !10529
  %10 = icmp eq i32 %9, 0, !dbg !10530
  br i1 %10, label %11, label %15, !dbg !10528

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #25, !dbg !10531
  %13 = sub i32 %12, %6, !dbg !10534
  %14 = icmp ugt i32 %13, 2, !dbg !10535
  br i1 %14, label %47, label %7, !dbg !10536, !llvm.loop !10537

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10539
  %17 = and i32 %16, -4, !dbg !10539
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10539
  br label %18, !dbg !10540

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10541
  %20 = and i32 %19, 12, !dbg !10541
  %21 = icmp eq i32 %20, 0, !dbg !10542
  br i1 %21, label %26, label %22, !dbg !10540

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #25, !dbg !10543
  %24 = sub i32 %23, %6, !dbg !10546
  %25 = icmp ugt i32 %24, 5000, !dbg !10547
  br i1 %25, label %47, label %18, !dbg !10548, !llvm.loop !10549

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !10551
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !10552
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #25, !dbg !10553
  call void @llvm.dbg.value(metadata i32 %28, metadata !10523, metadata !DIExpression()), !dbg !10527
  %29 = icmp eq i32 %28, 0, !dbg !10554
  br i1 %29, label %30, label %47, !dbg !10556

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10557
  %32 = and i32 %31, -285278210, !dbg !10557
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10557
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10558
  %34 = and i32 %33, -262145, !dbg !10558
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10558
  %35 = tail call i32 @HAL_GetTick() #25, !dbg !10559
  call void @llvm.dbg.value(metadata i32 %35, metadata !10522, metadata !DIExpression()), !dbg !10527
  br label %36, !dbg !10560

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10561
  %38 = and i32 %37, 33554432, !dbg !10561
  %39 = icmp eq i32 %38, 0, !dbg !10562
  br i1 %39, label %44, label %40, !dbg !10560

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #25, !dbg !10563
  %42 = sub i32 %41, %35, !dbg !10566
  %43 = icmp ugt i32 %42, 2, !dbg !10567
  br i1 %43, label %47, label %36, !dbg !10568, !llvm.loop !10569

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10571
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10572
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10573
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10574
  %46 = or i32 %45, 16777216, !dbg !10574
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10574
  br label %47, !dbg !10575

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !10527
  ret i32 %48, !dbg !10576
}

; Function Attrs: optsize
declare !dbg !10577 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !10579 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !10582 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10608, metadata !DIExpression()), !dbg !10621
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10622
  br i1 %3, label %385, label %4, !dbg !10624

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10625
  %6 = and i32 %5, 12, !dbg !10625
  call void @llvm.dbg.value(metadata i32 %6, metadata !10611, metadata !DIExpression()), !dbg !10621
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10626
  %8 = and i32 %7, 65536, !dbg !10626
  call void @llvm.dbg.value(metadata i32 %8, metadata !10612, metadata !DIExpression()), !dbg !10621
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10627
  %10 = load i32, i32* %9, align 4, !dbg !10627
  %11 = and i32 %10, 1, !dbg !10629
  %12 = icmp eq i32 %11, 0, !dbg !10630
  br i1 %12, label %69, label %13, !dbg !10631

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !10632
  br i1 %14, label %19, label %15, !dbg !10635

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !10636
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !10637
  br i1 %18, label %19, label %27, !dbg !10637

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10638
  %21 = and i32 %20, 131072, !dbg !10638
  %22 = icmp eq i32 %21, 0, !dbg !10641
  br i1 %22, label %69, label %23, !dbg !10642

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10643
  %25 = load i32, i32* %24, align 4, !dbg !10643
  %26 = icmp eq i32 %25, 0, !dbg !10644
  br i1 %26, label %385, label %69, !dbg !10645

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10646
  %29 = load i32, i32* %28, align 4, !dbg !10646
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !10650

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10651
  %32 = or i32 %31, 65536, !dbg !10651
  br label %48, !dbg !10651

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10653
  %35 = and i32 %34, -65537, !dbg !10653
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10653
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10653
  %37 = and i32 %36, -262145, !dbg !10653
  br label %48, !dbg !10653

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10656
  %40 = or i32 %39, 262144, !dbg !10656
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10656
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10656
  %42 = or i32 %41, 65536, !dbg !10656
  br label %48, !dbg !10656

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10659
  %45 = and i32 %44, -65537, !dbg !10659
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10659
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10659
  %47 = and i32 %46, -262145, !dbg !10659
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10661
  %50 = load i32, i32* %28, align 4, !dbg !10662
  %51 = icmp eq i32 %50, 0, !dbg !10664
  %52 = tail call i32 @HAL_GetTick() #25, !dbg !10665
  call void @llvm.dbg.value(metadata i32 %52, metadata !10609, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.value(metadata i32 %52, metadata !10609, metadata !DIExpression()), !dbg !10621
  br i1 %51, label %61, label %53, !dbg !10666

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10667
  %55 = and i32 %54, 131072, !dbg !10667
  %56 = icmp eq i32 %55, 0, !dbg !10669
  br i1 %56, label %57, label %69, !dbg !10670

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #25, !dbg !10671
  %59 = sub i32 %58, %52, !dbg !10674
  %60 = icmp ugt i32 %59, 100, !dbg !10675
  br i1 %60, label %385, label %53, !dbg !10676, !llvm.loop !10677

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10679
  %63 = and i32 %62, 131072, !dbg !10679
  %64 = icmp eq i32 %63, 0, !dbg !10681
  br i1 %64, label %69, label %65, !dbg !10682

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !10683
  %67 = sub i32 %66, %52, !dbg !10686
  %68 = icmp ugt i32 %67, 100, !dbg !10687
  br i1 %68, label %385, label %61, !dbg !10688, !llvm.loop !10689

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !10691
  %71 = and i32 %70, 2, !dbg !10693
  %72 = icmp eq i32 %71, 0, !dbg !10694
  br i1 %72, label %118, label %73, !dbg !10695

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !10696
  br i1 %74, label %79, label %75, !dbg !10699

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !10700
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !10701
  br i1 %78, label %79, label %87, !dbg !10701

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10702
  %81 = and i32 %80, 2, !dbg !10702
  %82 = icmp eq i32 %81, 0, !dbg !10705
  br i1 %82, label %111, label %83, !dbg !10706

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10707
  %85 = load i32, i32* %84, align 4, !dbg !10707
  %86 = icmp eq i32 %85, 1, !dbg !10708
  br i1 %86, label %111, label %385, !dbg !10709

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10710
  %89 = load i32, i32* %88, align 4, !dbg !10710
  %90 = icmp eq i32 %89, 0, !dbg !10713
  br i1 %90, label %101, label %91, !dbg !10714

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10715
  %92 = tail call i32 @HAL_GetTick() #25, !dbg !10717
  call void @llvm.dbg.value(metadata i32 %92, metadata !10609, metadata !DIExpression()), !dbg !10621
  br label %93, !dbg !10718

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10719
  %95 = and i32 %94, 2, !dbg !10719
  %96 = icmp eq i32 %95, 0, !dbg !10720
  br i1 %96, label %97, label %111, !dbg !10718

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #25, !dbg !10721
  %99 = sub i32 %98, %92, !dbg !10724
  %100 = icmp ugt i32 %99, 2, !dbg !10725
  br i1 %100, label %385, label %93, !dbg !10726, !llvm.loop !10727

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10729
  %102 = tail call i32 @HAL_GetTick() #25, !dbg !10731
  call void @llvm.dbg.value(metadata i32 %102, metadata !10609, metadata !DIExpression()), !dbg !10621
  br label %103, !dbg !10732

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10733
  %105 = and i32 %104, 2, !dbg !10733
  %106 = icmp eq i32 %105, 0, !dbg !10734
  br i1 %106, label %118, label %107, !dbg !10732

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #25, !dbg !10735
  %109 = sub i32 %108, %102, !dbg !10738
  %110 = icmp ugt i32 %109, 2, !dbg !10739
  br i1 %110, label %385, label %103, !dbg !10740, !llvm.loop !10741

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10743
  %113 = and i32 %112, -7937, !dbg !10743
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10743
  %115 = load i32, i32* %114, align 4, !dbg !10743
  %116 = shl i32 %115, 8, !dbg !10743
  %117 = or i32 %116, %113, !dbg !10743
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10743
  br label %118, !dbg !10744

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !10744
  %120 = and i32 %119, 16, !dbg !10746
  %121 = icmp eq i32 %120, 0, !dbg !10747
  br i1 %121, label %215, label %122, !dbg !10748

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !10749
  br i1 %123, label %124, label %179, !dbg !10752

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10753
  %126 = and i32 %125, 512, !dbg !10753
  %127 = icmp eq i32 %126, 0, !dbg !10756
  br i1 %127, label %132, label %128, !dbg !10757

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !10758
  %130 = load i32, i32* %129, align 4, !dbg !10758
  %131 = icmp eq i32 %130, 0, !dbg !10759
  br i1 %131, label %385, label %132, !dbg !10760

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !10761
  %134 = load i32, i32* %133, align 4, !dbg !10761
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10764
  %136 = and i32 %135, 57344, !dbg !10764
  %137 = icmp ugt i32 %134, %136, !dbg !10765
  br i1 %137, label %138, label %152, !dbg !10766

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #26, !dbg !10767
  %140 = icmp eq i32 %139, 0, !dbg !10770
  br i1 %140, label %141, label %385, !dbg !10771

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10772
  %143 = and i32 %142, -57345, !dbg !10772
  %144 = load i32, i32* %133, align 4, !dbg !10772
  %145 = or i32 %143, %144, !dbg !10772
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10772
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10773
  %147 = and i32 %146, 16777215, !dbg !10773
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !10773
  %149 = load i32, i32* %148, align 4, !dbg !10773
  %150 = shl i32 %149, 24, !dbg !10773
  %151 = or i32 %150, %147, !dbg !10773
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10773
  br label %165, !dbg !10774

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10775
  %154 = and i32 %153, -57345, !dbg !10775
  %155 = or i32 %154, %134, !dbg !10775
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10775
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10777
  %157 = and i32 %156, 16777215, !dbg !10777
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !10777
  %159 = load i32, i32* %158, align 4, !dbg !10777
  %160 = shl i32 %159, 24, !dbg !10777
  %161 = or i32 %160, %157, !dbg !10777
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10777
  %162 = load i32, i32* %133, align 4, !dbg !10778
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #26, !dbg !10780
  %164 = icmp eq i32 %163, 0, !dbg !10781
  br i1 %164, label %165, label %385, !dbg !10782

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !10783
  %167 = lshr i32 %166, 13, !dbg !10784
  %168 = shl i32 65536, %167, !dbg !10785
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10786
  %170 = lshr i32 %169, 4, !dbg !10787
  %171 = and i32 %170, 15, !dbg !10787
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !10788
  %173 = load i8, i8* %172, align 1, !dbg !10788
  %174 = zext i8 %173 to i32, !dbg !10788
  %175 = lshr i32 %168, %174, !dbg !10789
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !10790
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !10791
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #25, !dbg !10792
  call void @llvm.dbg.value(metadata i32 %177, metadata !10610, metadata !DIExpression()), !dbg !10621
  %178 = icmp eq i32 %177, 0, !dbg !10793
  br i1 %178, label %215, label %385, !dbg !10795

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !10796
  %181 = load i32, i32* %180, align 4, !dbg !10796
  %182 = icmp eq i32 %181, 0, !dbg !10799
  br i1 %182, label %205, label %183, !dbg !10800

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !10801
  %184 = tail call i32 @HAL_GetTick() #25, !dbg !10803
  call void @llvm.dbg.value(metadata i32 %184, metadata !10609, metadata !DIExpression()), !dbg !10621
  br label %185, !dbg !10804

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10805
  %187 = and i32 %186, 512, !dbg !10805
  %188 = icmp eq i32 %187, 0, !dbg !10806
  br i1 %188, label %189, label %193, !dbg !10804

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #25, !dbg !10807
  %191 = sub i32 %190, %184, !dbg !10810
  %192 = icmp ugt i32 %191, 2, !dbg !10811
  br i1 %192, label %385, label %185, !dbg !10812, !llvm.loop !10813

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10815
  %195 = and i32 %194, -57345, !dbg !10815
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !10815
  %197 = load i32, i32* %196, align 4, !dbg !10815
  %198 = or i32 %195, %197, !dbg !10815
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10815
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10816
  %200 = and i32 %199, 16777215, !dbg !10816
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !10816
  %202 = load i32, i32* %201, align 4, !dbg !10816
  %203 = shl i32 %202, 24, !dbg !10816
  %204 = or i32 %203, %200, !dbg !10816
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10816
  br label %215, !dbg !10817

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !10818
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !10820
  call void @llvm.dbg.value(metadata i32 %206, metadata !10609, metadata !DIExpression()), !dbg !10621
  br label %207, !dbg !10821

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10822
  %209 = and i32 %208, 512, !dbg !10822
  %210 = icmp eq i32 %209, 0, !dbg !10823
  br i1 %210, label %215, label %211, !dbg !10821

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #25, !dbg !10824
  %213 = sub i32 %212, %206, !dbg !10827
  %214 = icmp ugt i32 %213, 2, !dbg !10828
  br i1 %214, label %385, label %207, !dbg !10829, !llvm.loop !10830

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !10832
  %217 = and i32 %216, 8, !dbg !10834
  %218 = icmp eq i32 %217, 0, !dbg !10835
  br i1 %218, label %243, label %219, !dbg !10836

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10837
  %221 = load i32, i32* %220, align 4, !dbg !10837
  %222 = icmp eq i32 %221, 0, !dbg !10840
  br i1 %222, label %233, label %223, !dbg !10841

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !10842
  %224 = tail call i32 @HAL_GetTick() #25, !dbg !10844
  call void @llvm.dbg.value(metadata i32 %224, metadata !10609, metadata !DIExpression()), !dbg !10621
  br label %225, !dbg !10845

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10846
  %227 = and i32 %226, 2, !dbg !10846
  %228 = icmp eq i32 %227, 0, !dbg !10847
  br i1 %228, label %229, label %243, !dbg !10845

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !10848
  %231 = sub i32 %230, %224, !dbg !10851
  %232 = icmp ugt i32 %231, 2, !dbg !10852
  br i1 %232, label %385, label %225, !dbg !10853, !llvm.loop !10854

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !10856
  %234 = tail call i32 @HAL_GetTick() #25, !dbg !10858
  call void @llvm.dbg.value(metadata i32 %234, metadata !10609, metadata !DIExpression()), !dbg !10621
  br label %235, !dbg !10859

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10860
  %237 = and i32 %236, 2, !dbg !10860
  %238 = icmp eq i32 %237, 0, !dbg !10861
  br i1 %238, label %243, label %239, !dbg !10859

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #25, !dbg !10862
  %241 = sub i32 %240, %234, !dbg !10865
  %242 = icmp ugt i32 %241, 2, !dbg !10866
  br i1 %242, label %385, label %235, !dbg !10867, !llvm.loop !10868

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !10870
  %245 = and i32 %244, 4, !dbg !10871
  %246 = icmp eq i32 %245, 0, !dbg !10872
  br i1 %246, label %320, label %247, !dbg !10873

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !10613, metadata !DIExpression()), !dbg !10874
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10875
  %249 = and i32 %248, 268435456, !dbg !10875
  %250 = icmp eq i32 %249, 0, !dbg !10875
  br i1 %250, label %251, label %258, !dbg !10876

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !10877
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !10877
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10617, metadata !DIExpression()), !dbg !10877
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10877
  %254 = or i32 %253, 268435456, !dbg !10877
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10877
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10877
  %256 = and i32 %255, 268435456, !dbg !10877
  store volatile i32 %256, i32* %2, align 4, !dbg !10877
  %257 = load volatile i32, i32* %2, align 4, !dbg !10877
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !10878
  call void @llvm.dbg.value(metadata i32 1, metadata !10613, metadata !DIExpression()), !dbg !10874
  br label %258, !dbg !10879

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !10613, metadata !DIExpression()), !dbg !10874
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10880
  %260 = and i32 %259, 256, !dbg !10880
  %261 = icmp eq i32 %260, 0, !dbg !10880
  br i1 %261, label %262, label %274, !dbg !10882

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10883
  %264 = or i32 %263, 256, !dbg !10883
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10883
  %265 = tail call i32 @HAL_GetTick() #25, !dbg !10885
  call void @llvm.dbg.value(metadata i32 %265, metadata !10609, metadata !DIExpression()), !dbg !10621
  br label %266, !dbg !10886

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10887
  %268 = and i32 %267, 256, !dbg !10887
  %269 = icmp eq i32 %268, 0, !dbg !10887
  br i1 %269, label %270, label %274, !dbg !10886

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #25, !dbg !10888
  %272 = sub i32 %271, %265, !dbg !10891
  %273 = icmp ugt i32 %272, 100, !dbg !10892
  br i1 %273, label %385, label %266, !dbg !10893, !llvm.loop !10894

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10896
  %276 = load i32, i32* %275, align 4, !dbg !10896
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !10899

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10900
  %279 = or i32 %278, 256, !dbg !10900
  br label %295, !dbg !10900

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10902
  %282 = and i32 %281, -257, !dbg !10902
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10902
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10902
  %284 = and i32 %283, -1025, !dbg !10902
  br label %295, !dbg !10902

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10905
  %287 = or i32 %286, 1024, !dbg !10905
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10905
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10905
  %289 = or i32 %288, 256, !dbg !10905
  br label %295, !dbg !10905

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10908
  %292 = and i32 %291, -257, !dbg !10908
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10908
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10908
  %294 = and i32 %293, -1025, !dbg !10908
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10910
  %297 = load i32, i32* %275, align 4, !dbg !10911
  %298 = icmp eq i32 %297, 0, !dbg !10913
  %299 = tail call i32 @HAL_GetTick() #25, !dbg !10914
  call void @llvm.dbg.value(metadata i32 %299, metadata !10609, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.value(metadata i32 %299, metadata !10609, metadata !DIExpression()), !dbg !10621
  br i1 %298, label %308, label %300, !dbg !10915

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10916
  %302 = and i32 %301, 512, !dbg !10916
  %303 = icmp eq i32 %302, 0, !dbg !10918
  br i1 %303, label %304, label %316, !dbg !10919

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #25, !dbg !10920
  %306 = sub i32 %305, %299, !dbg !10923
  %307 = icmp ugt i32 %306, 5000, !dbg !10924
  br i1 %307, label %385, label %300, !dbg !10925, !llvm.loop !10926

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10928
  %310 = and i32 %309, 512, !dbg !10928
  %311 = icmp eq i32 %310, 0, !dbg !10930
  br i1 %311, label %316, label %312, !dbg !10931

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #25, !dbg !10932
  %314 = sub i32 %313, %299, !dbg !10935
  %315 = icmp ugt i32 %314, 5000, !dbg !10936
  br i1 %315, label %385, label %308, !dbg !10937, !llvm.loop !10938

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !10940

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10941
  %319 = and i32 %318, -268435457, !dbg !10941
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !10941
  br label %320, !dbg !10944

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !10945
  %322 = load i32, i32* %321, align 4, !dbg !10945
  %323 = icmp eq i32 %322, 0, !dbg !10947
  br i1 %323, label %384, label %324, !dbg !10948

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !10949
  br i1 %325, label %366, label %326, !dbg !10952

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !10953
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10956
  %328 = tail call i32 @HAL_GetTick() #25, !dbg !10956
  call void @llvm.dbg.value(metadata i32 %328, metadata !10609, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.value(metadata i32 %328, metadata !10609, metadata !DIExpression()), !dbg !10621
  br i1 %327, label %329, label %358, !dbg !10957

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10958
  %331 = and i32 %330, 33554432, !dbg !10958
  %332 = icmp eq i32 %331, 0, !dbg !10960
  br i1 %332, label %337, label %333, !dbg !10961

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #25, !dbg !10962
  %335 = sub i32 %334, %328, !dbg !10965
  %336 = icmp ugt i32 %335, 2, !dbg !10966
  br i1 %336, label %385, label %329, !dbg !10967, !llvm.loop !10968

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10970
  %339 = and i32 %338, -16580609, !dbg !10970
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !10970
  %341 = load i32, i32* %340, align 4, !dbg !10970
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !10970
  %343 = load i32, i32* %342, align 4, !dbg !10970
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !10970
  %345 = load i32, i32* %344, align 4, !dbg !10970
  %346 = or i32 %339, %341, !dbg !10970
  %347 = or i32 %346, %343, !dbg !10970
  %348 = or i32 %347, %345, !dbg !10970
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10970
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10971
  %349 = tail call i32 @HAL_GetTick() #25, !dbg !10972
  call void @llvm.dbg.value(metadata i32 %349, metadata !10609, metadata !DIExpression()), !dbg !10621
  br label %350, !dbg !10973

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10974
  %352 = and i32 %351, 33554432, !dbg !10974
  %353 = icmp eq i32 %352, 0, !dbg !10975
  br i1 %353, label %354, label %384, !dbg !10973

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #25, !dbg !10976
  %356 = sub i32 %355, %349, !dbg !10979
  %357 = icmp ugt i32 %356, 2, !dbg !10980
  br i1 %357, label %385, label %350, !dbg !10981, !llvm.loop !10982

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10984
  %360 = and i32 %359, 33554432, !dbg !10984
  %361 = icmp eq i32 %360, 0, !dbg !10986
  br i1 %361, label %384, label %362, !dbg !10987

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #25, !dbg !10988
  %364 = sub i32 %363, %328, !dbg !10991
  %365 = icmp ugt i32 %364, 2, !dbg !10992
  br i1 %365, label %385, label %358, !dbg !10993, !llvm.loop !10994

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !10996
  br i1 %367, label %385, label %368, !dbg !10999

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11000
  call void @llvm.dbg.value(metadata i32 %369, metadata !10612, metadata !DIExpression()), !dbg !10621
  %370 = and i32 %369, 65536, !dbg !11002
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11004
  %372 = load i32, i32* %371, align 4, !dbg !11004
  %373 = icmp eq i32 %370, %372, !dbg !11005
  br i1 %373, label %374, label %385, !dbg !11006

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !11007
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11008
  %377 = load i32, i32* %376, align 4, !dbg !11008
  %378 = icmp eq i32 %375, %377, !dbg !11009
  br i1 %378, label %379, label %385, !dbg !11010

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !11011
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11012
  %382 = load i32, i32* %381, align 4, !dbg !11012
  %383 = icmp eq i32 %380, %382, !dbg !11013
  br i1 %383, label %384, label %385, !dbg !11014

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !11015

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !10621
  ret i32 %386, !dbg !11016
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #15 !dbg !11017 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11019, metadata !DIExpression()), !dbg !11028
  call void @llvm.dbg.value(metadata i32 0, metadata !11021, metadata !DIExpression()), !dbg !11028
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11029
  %4 = and i32 %3, 240, !dbg !11029
  %5 = icmp eq i32 %4, 0, !dbg !11030
  br i1 %5, label %6, label %31, !dbg !11031

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11032
  %8 = and i32 %7, 268435456, !dbg !11032
  %9 = icmp eq i32 %8, 0, !dbg !11032
  br i1 %9, label %12, label %10, !dbg !11033

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11034
  call void @llvm.dbg.value(metadata i32 %11, metadata !11020, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !11028
  br label %22, !dbg !11036

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !11037
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !11037
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11022, metadata !DIExpression()), !dbg !11037
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11037
  %15 = or i32 %14, 268435456, !dbg !11037
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11037
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11037
  %17 = and i32 %16, 268435456, !dbg !11037
  store volatile i32 %17, i32* %2, align 4, !dbg !11037
  %18 = load volatile i32, i32* %2, align 4, !dbg !11037
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !11038
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11039
  call void @llvm.dbg.value(metadata i32 %19, metadata !11020, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !11028
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11040
  %21 = and i32 %20, -268435457, !dbg !11040
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11040
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !11041
  call void @llvm.dbg.value(metadata i32 %24, metadata !11020, metadata !DIExpression()), !dbg !11028
  %25 = icmp eq i32 %24, 6144, !dbg !11042
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !11044
  call void @llvm.dbg.value(metadata i32 undef, metadata !11021, metadata !DIExpression()), !dbg !11028
  br i1 %27, label %28, label %31, !dbg !11045

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11047
  %30 = or i32 %29, 4, !dbg !11047
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11047
  br label %31, !dbg !11047

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11045
  %34 = and i32 %33, -2, !dbg !11045
  %35 = or i32 %34, %32, !dbg !11045
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11045
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11050
  %37 = and i32 %36, 1, !dbg !11050
  %38 = xor i32 %37, %32, !dbg !11028
  ret i32 %38, !dbg !11052
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11053 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11066, metadata !DIExpression()), !dbg !11070
  call void @llvm.dbg.value(metadata i32 %1, metadata !11067, metadata !DIExpression()), !dbg !11070
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11071
  br i1 %3, label %136, label %4, !dbg !11073

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11074
  %6 = and i32 %5, 1, !dbg !11074
  %7 = icmp ult i32 %6, %1, !dbg !11076
  br i1 %7, label %8, label %20, !dbg !11077

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !11078
  br i1 %9, label %10, label %13, !dbg !11082

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11083
  %12 = or i32 %11, 4, !dbg !11083
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11083
  br label %13, !dbg !11083

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11082
  %15 = and i32 %14, -2, !dbg !11082
  %16 = or i32 %15, %1, !dbg !11082
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11082
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11085
  %18 = and i32 %17, 1, !dbg !11085
  %19 = icmp eq i32 %18, %1, !dbg !11087
  br i1 %19, label %20, label %136, !dbg !11088

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11089
  %22 = load i32, i32* %21, align 4, !dbg !11089
  %23 = and i32 %22, 2, !dbg !11091
  %24 = icmp eq i32 %23, 0, !dbg !11092
  br i1 %24, label %32, label %25, !dbg !11093

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11094
  %27 = and i32 %26, -241, !dbg !11094
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11094
  %29 = load i32, i32* %28, align 4, !dbg !11094
  %30 = or i32 %27, %29, !dbg !11094
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11094
  %31 = load i32, i32* %21, align 4, !dbg !11096
  br label %32, !dbg !11098

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !11096
  %34 = and i32 %33, 1, !dbg !11099
  %35 = icmp eq i32 %34, 0, !dbg !11100
  br i1 %35, label %93, label %36, !dbg !11101

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11102
  %38 = load i32, i32* %37, align 4, !dbg !11102
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !11105

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11106
  %41 = and i32 %40, 131072, !dbg !11106
  %42 = icmp eq i32 %41, 0, !dbg !11109
  br i1 %42, label %136, label %55, !dbg !11110

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11111
  %45 = and i32 %44, 33554432, !dbg !11111
  %46 = icmp eq i32 %45, 0, !dbg !11115
  br i1 %46, label %136, label %55, !dbg !11116

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11117
  %49 = and i32 %48, 2, !dbg !11117
  %50 = icmp eq i32 %49, 0, !dbg !11121
  br i1 %50, label %136, label %55, !dbg !11122

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11123
  %53 = and i32 %52, 512, !dbg !11123
  %54 = icmp eq i32 %53, 0, !dbg !11126
  br i1 %54, label %136, label %55, !dbg !11127

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11128
  %57 = and i32 %56, -4, !dbg !11128
  %58 = or i32 %57, %38, !dbg !11128
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11128
  %59 = tail call i32 @HAL_GetTick() #25, !dbg !11129
  call void @llvm.dbg.value(metadata i32 %59, metadata !11068, metadata !DIExpression()), !dbg !11070
  %60 = load i32, i32* %37, align 4, !dbg !11130
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !11132

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11133
  %63 = and i32 %62, 12, !dbg !11133
  %64 = icmp eq i32 %63, 8, !dbg !11135
  br i1 %64, label %93, label %65, !dbg !11136

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !11137
  %67 = sub i32 %66, %59, !dbg !11140
  %68 = icmp ugt i32 %67, 5000, !dbg !11141
  br i1 %68, label %136, label %61, !dbg !11142, !llvm.loop !11143

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11145
  %71 = and i32 %70, 12, !dbg !11145
  %72 = icmp eq i32 %71, 12, !dbg !11148
  br i1 %72, label %93, label %73, !dbg !11149

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #25, !dbg !11150
  %75 = sub i32 %74, %59, !dbg !11153
  %76 = icmp ugt i32 %75, 5000, !dbg !11154
  br i1 %76, label %136, label %69, !dbg !11155, !llvm.loop !11156

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11158
  %79 = and i32 %78, 12, !dbg !11158
  %80 = icmp eq i32 %79, 4, !dbg !11161
  br i1 %80, label %93, label %81, !dbg !11162

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !11163
  %83 = sub i32 %82, %59, !dbg !11166
  %84 = icmp ugt i32 %83, 5000, !dbg !11167
  br i1 %84, label %136, label %77, !dbg !11168, !llvm.loop !11169

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11171
  %87 = and i32 %86, 12, !dbg !11171
  %88 = icmp eq i32 %87, 0, !dbg !11173
  br i1 %88, label %93, label %89, !dbg !11174

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #25, !dbg !11175
  %91 = sub i32 %90, %59, !dbg !11178
  %92 = icmp ugt i32 %91, 5000, !dbg !11179
  br i1 %92, label %136, label %85, !dbg !11180, !llvm.loop !11181

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11183
  %95 = and i32 %94, 1, !dbg !11183
  %96 = icmp ugt i32 %95, %1, !dbg !11185
  br i1 %96, label %97, label %103, !dbg !11186

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11187
  %99 = and i32 %98, -2, !dbg !11187
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11187
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11190
  %101 = and i32 %100, 1, !dbg !11190
  %102 = icmp eq i32 %101, 0, !dbg !11192
  br i1 %102, label %103, label %136, !dbg !11193

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !11194
  %105 = and i32 %104, 4, !dbg !11196
  %106 = icmp eq i32 %105, 0, !dbg !11197
  br i1 %106, label %114, label %107, !dbg !11198

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11199
  %109 = and i32 %108, -1793, !dbg !11199
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11199
  %111 = load i32, i32* %110, align 4, !dbg !11199
  %112 = or i32 %109, %111, !dbg !11199
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11199
  %113 = load i32, i32* %21, align 4, !dbg !11201
  br label %114, !dbg !11203

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !11201
  %116 = and i32 %115, 8, !dbg !11204
  %117 = icmp eq i32 %116, 0, !dbg !11205
  br i1 %117, label %125, label %118, !dbg !11206

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11207
  %120 = and i32 %119, -14337, !dbg !11207
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11207
  %122 = load i32, i32* %121, align 4, !dbg !11207
  %123 = shl i32 %122, 3, !dbg !11207
  %124 = or i32 %123, %120, !dbg !11207
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11207
  br label %125, !dbg !11209

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11210
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11211
  %128 = lshr i32 %127, 4, !dbg !11212
  %129 = and i32 %128, 15, !dbg !11212
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !11213
  %131 = load i8, i8* %130, align 1, !dbg !11213
  %132 = zext i8 %131 to i32, !dbg !11213
  %133 = lshr i32 %126, %132, !dbg !11214
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !11215
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !11216
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #25, !dbg !11217
  call void @llvm.dbg.value(metadata i32 %135, metadata !11069, metadata !DIExpression()), !dbg !11070
  br label %136, !dbg !11218

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !11070
  ret i32 %137, !dbg !11219
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #17 !dbg !11220 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11228
  call void @llvm.dbg.value(metadata i32 %1, metadata !11222, metadata !DIExpression()), !dbg !11229
  %2 = lshr i32 %1, 2, !dbg !11230
  %3 = and i32 %2, 3, !dbg !11230
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !11230

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11227, metadata !DIExpression()), !dbg !11229
  br label %26, !dbg !11231

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !11234
  %7 = and i32 %6, 15, !dbg !11234
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !11236
  %9 = load i8, i8* %8, align 1, !dbg !11236
  call void @llvm.dbg.value(metadata i8 %9, metadata !11223, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11229
  %10 = lshr i32 %1, 22, !dbg !11237
  %11 = and i32 %10, 3, !dbg !11237
  %12 = add nuw nsw i32 %11, 1, !dbg !11238
  call void @llvm.dbg.value(metadata i32 %12, metadata !11224, metadata !DIExpression()), !dbg !11229
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11239
  %14 = and i32 %13, 65536, !dbg !11239
  %15 = icmp eq i32 %14, 0, !dbg !11241
  %16 = zext i8 %9 to i32, !dbg !11242
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !11242
  %18 = mul nuw i32 %17, %16, !dbg !11242
  %19 = udiv i32 %18, %12, !dbg !11243
  call void @llvm.dbg.value(metadata i32 %19, metadata !11225, metadata !DIExpression()), !dbg !11229
  call void @llvm.dbg.value(metadata i32 %19, metadata !11227, metadata !DIExpression()), !dbg !11229
  br label %26, !dbg !11244

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11245
  %23 = lshr i32 %22, 13, !dbg !11247
  %24 = and i32 %23, 7, !dbg !11247
  call void @llvm.dbg.value(metadata i32 %24, metadata !11226, metadata !DIExpression()), !dbg !11229
  %25 = shl nuw nsw i32 65536, %24, !dbg !11248
  call void @llvm.dbg.value(metadata i32 %25, metadata !11227, metadata !DIExpression()), !dbg !11229
  br label %26, !dbg !11249

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !11250
  call void @llvm.dbg.value(metadata i32 %27, metadata !11227, metadata !DIExpression()), !dbg !11229
  ret i32 %27, !dbg !11251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11252 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11254, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 %1, metadata !11255, metadata !DIExpression()), !dbg !11269
  call void @llvm.dbg.value(metadata i32 %2, metadata !11256, metadata !DIExpression()), !dbg !11269
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11270
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #24, !dbg !11270
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11257, metadata !DIExpression()), !dbg !11271
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11272
  store i32 2, i32* %7, align 4, !dbg !11273
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11274
  store i32 2, i32* %8, align 4, !dbg !11275
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11276
  store i32 0, i32* %9, align 4, !dbg !11277
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11278
  store i32 256, i32* %10, align 4, !dbg !11279
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11280
  store i32 0, i32* %11, align 4, !dbg !11281
  %12 = bitcast i32* %5 to i8*, !dbg !11282
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !11282
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11267, metadata !DIExpression()), !dbg !11282
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11282
  %14 = or i32 %13, 1, !dbg !11282
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11282
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11282
  %16 = and i32 %15, 1, !dbg !11282
  store volatile i32 %16, i32* %5, align 4, !dbg !11282
  %17 = load volatile i32, i32* %5, align 4, !dbg !11282
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !11283
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11284
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11285
  %19 = and i32 %18, -1996488705, !dbg !11285
  %20 = or i32 %2, %1, !dbg !11285
  %21 = or i32 %20, %19, !dbg !11285
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11285
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #24, !dbg !11286
  ret void, !dbg !11286
}

; Function Attrs: optsize
declare !dbg !11287 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !11291 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11292
  ret void, !dbg !11293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !11294 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11295
  ret void, !dbg !11296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11297 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11298
  ret i32 %1, !dbg !11299
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !11300 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11301
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11302
  %3 = lshr i32 %2, 8, !dbg !11303
  %4 = and i32 %3, 7, !dbg !11303
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11304
  %6 = load i8, i8* %5, align 1, !dbg !11304
  %7 = zext i8 %6 to i32, !dbg !11304
  %8 = lshr i32 %1, %7, !dbg !11305
  ret i32 %8, !dbg !11306
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !11307 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11308
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11309
  %3 = lshr i32 %2, 11, !dbg !11310
  %4 = and i32 %3, 7, !dbg !11310
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11311
  %6 = load i8, i8* %5, align 1, !dbg !11311
  %7 = zext i8 %6 to i32, !dbg !11311
  %8 = lshr i32 %1, %7, !dbg !11312
  ret i32 %8, !dbg !11313
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #17 !dbg !11314 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11318, metadata !DIExpression()), !dbg !11319
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11320
  store i32 31, i32* %2, align 4, !dbg !11321
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11322
  %4 = and i32 %3, 262144, !dbg !11324
  %5 = icmp eq i32 %4, 0, !dbg !11325
  br i1 %5, label %8, label %6, !dbg !11326

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11327
  store i32 5, i32* %7, align 4, !dbg !11329
  br label %15, !dbg !11330

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11331
  %10 = and i32 %9, 65536, !dbg !11333
  %11 = icmp eq i32 %10, 0, !dbg !11334
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11335
  br i1 %11, label %14, label %13, !dbg !11336

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !11337
  br label %15, !dbg !11339

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11340
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11342
  %17 = and i32 %16, 1, !dbg !11344
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11345
  store i32 %17, i32* %18, align 4, !dbg !11347
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11348
  %20 = lshr i32 %19, 8, !dbg !11349
  %21 = and i32 %20, 31, !dbg !11349
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11350
  store i32 %21, i32* %22, align 4, !dbg !11351
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11352
  %24 = lshr i32 %23, 8, !dbg !11354
  %25 = and i32 %24, 1, !dbg !11354
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !11355
  store i32 %25, i32* %26, align 4, !dbg !11357
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11358
  %28 = lshr i32 %27, 24, !dbg !11359
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11360
  store i32 %28, i32* %29, align 4, !dbg !11361
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11362
  %31 = and i32 %30, 57344, !dbg !11363
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !11364
  store i32 %31, i32* %32, align 4, !dbg !11365
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11366
  %34 = and i32 %33, 1024, !dbg !11368
  %35 = icmp eq i32 %34, 0, !dbg !11369
  br i1 %35, label %38, label %36, !dbg !11370

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11371
  store i32 5, i32* %37, align 4, !dbg !11373
  br label %45, !dbg !11374

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11375
  %40 = and i32 %39, 256, !dbg !11377
  %41 = icmp eq i32 %40, 0, !dbg !11378
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11379
  br i1 %41, label %44, label %43, !dbg !11380

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !11381
  br label %45, !dbg !11383

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !11384
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11386
  %47 = and i32 %46, 1, !dbg !11388
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11389
  store i32 %47, i32* %48, align 4, !dbg !11391
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11392
  %50 = and i32 %49, 16777216, !dbg !11394
  %51 = icmp eq i32 %50, 0, !dbg !11395
  %52 = select i1 %51, i32 1, i32 2, !dbg !11396
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !11397
  store i32 %52, i32* %53, align 4, !dbg !11399
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11400
  %55 = and i32 %54, 65536, !dbg !11401
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11402
  store i32 %55, i32* %56, align 4, !dbg !11403
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11404
  %58 = and i32 %57, 3932160, !dbg !11405
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11406
  store i32 %58, i32* %59, align 4, !dbg !11407
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11408
  %61 = and i32 %60, 12582912, !dbg !11409
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11410
  store i32 %61, i32* %62, align 4, !dbg !11411
  ret void, !dbg !11412
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !11413 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11417, metadata !DIExpression()), !dbg !11419
  call void @llvm.dbg.value(metadata i32* %1, metadata !11418, metadata !DIExpression()), !dbg !11419
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11420
  store i32 15, i32* %3, align 4, !dbg !11421
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11422
  %5 = and i32 %4, 3, !dbg !11423
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11424
  store i32 %5, i32* %6, align 4, !dbg !11425
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11426
  %8 = and i32 %7, 240, !dbg !11427
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11428
  store i32 %8, i32* %9, align 4, !dbg !11429
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11430
  %11 = and i32 %10, 1792, !dbg !11431
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11432
  store i32 %11, i32* %12, align 4, !dbg !11433
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11434
  %14 = lshr i32 %13, 3, !dbg !11435
  %15 = and i32 %14, 1792, !dbg !11435
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11436
  store i32 %15, i32* %16, align 4, !dbg !11437
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11438
  %18 = and i32 %17, 1, !dbg !11438
  store i32 %18, i32* %1, align 4, !dbg !11439
  ret void, !dbg !11440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11441 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11442
  %2 = and i32 %1, 128, !dbg !11442
  %3 = icmp eq i32 %2, 0, !dbg !11442
  br i1 %3, label %5, label %4, !dbg !11444

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11445
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11447
  br label %5, !dbg !11448

5:                                                ; preds = %4, %0
  ret void, !dbg !11449
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11450 {
  ret void, !dbg !11451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !11452 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11455, metadata !DIExpression()), !dbg !11456
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11457
  ret void, !dbg !11458
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !11459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11462, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i32 1000, metadata !11463, metadata !DIExpression()), !dbg !11464
  %2 = udiv i32 %0, 1000, !dbg !11465
  %3 = add nsw i32 %2, -1, !dbg !11466
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11467
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11468
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11469
  ret void, !dbg !11470
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !11471 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11473, metadata !DIExpression()), !dbg !11476
  %3 = bitcast i32* %2 to i8*, !dbg !11477
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11477
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11474, metadata !DIExpression()), !dbg !11478
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11479
  store volatile i32 %4, i32* %2, align 4, !dbg !11478
  call void @llvm.dbg.value(metadata i32 %0, metadata !11475, metadata !DIExpression()), !dbg !11476
  %5 = load volatile i32, i32* %2, align 4, !dbg !11480
  %6 = icmp eq i32 %0, -1, !dbg !11481
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11475, metadata !DIExpression()), !dbg !11476
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11476
  call void @llvm.dbg.value(metadata i32 %8, metadata !11475, metadata !DIExpression()), !dbg !11476
  br label %9, !dbg !11483

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11475, metadata !DIExpression()), !dbg !11476
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11484
  call void @llvm.dbg.value(metadata i32 undef, metadata !11475, metadata !DIExpression()), !dbg !11476
  %12 = shl i32 %11, 15, !dbg !11476
  %13 = ashr i32 %12, 31, !dbg !11476
  %14 = add i32 %13, %10, !dbg !11476
  call void @llvm.dbg.value(metadata i32 %14, metadata !11475, metadata !DIExpression()), !dbg !11476
  %15 = icmp eq i32 %14, 0, !dbg !11487
  br i1 %15, label %16, label %9, !dbg !11483

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11488
  ret void, !dbg !11488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11491, metadata !DIExpression()), !dbg !11492
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11493
  ret void, !dbg !11494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !11495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11500, metadata !DIExpression()), !dbg !11503
  call void @llvm.dbg.value(metadata i32 0, metadata !11501, metadata !DIExpression()), !dbg !11503
  call void @llvm.dbg.value(metadata i32 0, metadata !11502, metadata !DIExpression()), !dbg !11503
  %2 = add i32 %0, -32000001, !dbg !11504
  %3 = icmp ult i32 %2, -32000000, !dbg !11504
  br i1 %3, label %22, label %4, !dbg !11504

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11506
  %6 = icmp eq i32 %5, 2048, !dbg !11509
  br i1 %6, label %7, label %9, !dbg !11510

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !11511
  call void @llvm.dbg.value(metadata i32 undef, metadata !11502, metadata !DIExpression()), !dbg !11503
  br i1 %8, label %16, label %17, !dbg !11514

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11515
  %11 = icmp eq i32 %10, 4096, !dbg !11517
  br i1 %11, label %12, label %14, !dbg !11518

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !11519
  call void @llvm.dbg.value(metadata i32 undef, metadata !11502, metadata !DIExpression()), !dbg !11503
  br i1 %13, label %16, label %17, !dbg !11514

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !11522
  call void @llvm.dbg.value(metadata i32 undef, metadata !11502, metadata !DIExpression()), !dbg !11503
  br i1 %15, label %16, label %17, !dbg !11514

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #26, !dbg !11525
  br label %17, !dbg !11528

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #26, !dbg !11529
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11530
  %20 = icmp ne i32 %19, %18, !dbg !11532
  %21 = zext i1 %20 to i32, !dbg !11533
  br label %22, !dbg !11533

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !11503
  call void @llvm.dbg.value(metadata i32 %23, metadata !11501, metadata !DIExpression()), !dbg !11503
  ret i32 %23, !dbg !11534
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !11535 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11536
  %2 = and i32 %1, 6144, !dbg !11536
  ret i32 %2, !dbg !11537
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #16 !dbg !11538 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11539
  %2 = or i32 %1, 4, !dbg !11539
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11539
  ret void, !dbg !11540
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !11541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11543, metadata !DIExpression()), !dbg !11544
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11545
  %3 = and i32 %2, -2, !dbg !11545
  %4 = or i32 %3, %0, !dbg !11545
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11545
  ret void, !dbg !11546
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !11547 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11548
  %2 = and i32 %1, 1, !dbg !11548
  ret i32 %2, !dbg !11549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct.sys_memory_stats* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !11550 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11567, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11568, metadata !DIExpression()), !dbg !11571
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11572
  %4 = icmp eq i32 %3, 0, !dbg !11574
  br i1 %4, label %5, label %19, !dbg !11575

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #26, !dbg !11576
  call void @llvm.dbg.value(metadata i32 %6, metadata !11570, metadata !DIExpression()), !dbg !11571
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.104() #26, !dbg !11578
  %8 = icmp eq i32 %7, 1, !dbg !11580
  br i1 %8, label %13, label %9, !dbg !11581

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.105() #26, !dbg !11582
  br label %10, !dbg !11584

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.104() #26, !dbg !11585
  %12 = icmp eq i32 %11, 1, !dbg !11586
  br i1 %12, label %13, label %10, !dbg !11584, !llvm.loop !11587

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !11589
  %15 = load i32, i32* %14, align 4, !dbg !11589
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !11590
  %17 = load i32, i32* %16, align 4, !dbg !11590
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.106(i32 noundef 0, i32 noundef %15, i32 noundef %17) #26, !dbg !11591
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.sys_memory_stats* noundef %1) #26, !dbg !11592
  call void @llvm.dbg.value(metadata i32 %18, metadata !11569, metadata !DIExpression()), !dbg !11571
  br label %19, !dbg !11593

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !11594
  call void @llvm.dbg.value(metadata i32 %20, metadata !11569, metadata !DIExpression()), !dbg !11571
  ret i32 %20, !dbg !11595
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !11596 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11600, metadata !DIExpression()), !dbg !11601
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.108() #26, !dbg !11602
  %2 = icmp ne i32 %1, 0, !dbg !11604
  %3 = zext i1 %2 to i32, !dbg !11605
  call void @llvm.dbg.value(metadata i32 %3, metadata !11600, metadata !DIExpression()), !dbg !11601
  ret i32 %3, !dbg !11606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #5 !dbg !11607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11611, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !11612, metadata !DIExpression()), !dbg !11614
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !11615
  %4 = load i32, i32* %3, align 4, !dbg !11615
  %5 = lshr i32 %4, 18, !dbg !11616
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !11617
  %7 = load i8, i8* %6, align 1, !dbg !11617
  %8 = zext i8 %7 to i32, !dbg !11618
  %9 = mul i32 %8, %0, !dbg !11619
  call void @llvm.dbg.value(metadata i32 %9, metadata !11613, metadata !DIExpression()), !dbg !11614
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !11620
  %11 = load i32, i32* %10, align 4, !dbg !11620
  %12 = lshr i32 %11, 22, !dbg !11621
  %13 = add nuw nsw i32 %12, 1, !dbg !11622
  %14 = udiv i32 %9, %13, !dbg !11623
  call void @llvm.dbg.value(metadata i32 %14, metadata !11613, metadata !DIExpression()), !dbg !11614
  ret i32 %14, !dbg !11624
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.104() unnamed_addr #17 !dbg !11625 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11626
  %2 = lshr i32 %1, 1, !dbg !11627
  %3 = and i32 %2, 1, !dbg !11627
  ret i32 %3, !dbg !11628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.105() unnamed_addr #16 !dbg !11629 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11630
  %2 = or i32 %1, 1, !dbg !11630
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11630
  ret void, !dbg !11631
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.106(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11634, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i32 %1, metadata !11635, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i32 %2, metadata !11636, metadata !DIExpression()), !dbg !11637
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11638
  %5 = and i32 %4, -16580609, !dbg !11638
  %6 = or i32 %1, %0, !dbg !11638
  %7 = or i32 %6, %2, !dbg !11638
  %8 = or i32 %7, %5, !dbg !11638
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11638
  ret void, !dbg !11639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #16 !dbg !11640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11644, metadata !DIExpression()), !dbg !11648
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11645, metadata !DIExpression()), !dbg !11648
  call void @llvm.dbg.value(metadata i32 0, metadata !11646, metadata !DIExpression()), !dbg !11648
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !11649
  %4 = load i32, i32* %3, align 4, !dbg !11649
  %5 = lshr i32 %4, 4, !dbg !11649
  %6 = and i32 %5, 15, !dbg !11649
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11649
  %8 = load i8, i8* %7, align 1, !dbg !11649
  %9 = zext i8 %8 to i32, !dbg !11649
  %10 = lshr i32 %0, %9, !dbg !11649
  call void @llvm.dbg.value(metadata i32 %10, metadata !11647, metadata !DIExpression()), !dbg !11648
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11650
  %12 = icmp ult i32 %11, %10, !dbg !11652
  br i1 %12, label %13, label %16, !dbg !11653

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11654
  call void @llvm.dbg.value(metadata i32 %14, metadata !11646, metadata !DIExpression()), !dbg !11648
  %15 = icmp eq i32 %14, 0, !dbg !11656
  br i1 %15, label %16, label %30, !dbg !11658

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.107() #26, !dbg !11659
  br label %17, !dbg !11661

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.108() #26, !dbg !11662
  %19 = icmp eq i32 %18, 1, !dbg !11663
  br i1 %19, label %20, label %17, !dbg !11661, !llvm.loop !11664

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11666
  tail call fastcc void @LL_RCC_SetAHBPrescaler.109(i32 noundef %21) #26, !dbg !11667
  tail call fastcc void @LL_RCC_SetSysClkSource.110() #26, !dbg !11668
  br label %22, !dbg !11669

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.111() #26, !dbg !11670
  %24 = icmp eq i32 %23, 12, !dbg !11671
  br i1 %24, label %25, label %22, !dbg !11669, !llvm.loop !11672

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !11674
  %27 = load i32, i32* %26, align 4, !dbg !11674
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.112(i32 noundef %27) #26, !dbg !11675
  %28 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !11676
  %29 = load i32, i32* %28, align 4, !dbg !11676
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.113(i32 noundef %29) #26, !dbg !11677
  br label %30, !dbg !11678

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11679
  %33 = icmp ugt i32 %32, %10, !dbg !11681
  br i1 %33, label %34, label %36, !dbg !11682

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11683
  call void @llvm.dbg.value(metadata i32 %35, metadata !11646, metadata !DIExpression()), !dbg !11648
  br label %36, !dbg !11685

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11648
  call void @llvm.dbg.value(metadata i32 %37, metadata !11646, metadata !DIExpression()), !dbg !11648
  %38 = icmp eq i32 %37, 0, !dbg !11686
  br i1 %38, label %39, label %40, !dbg !11688

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11689
  br label %40, !dbg !11691

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.107() unnamed_addr #16 !dbg !11693 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11694
  %2 = or i32 %1, 16777216, !dbg !11694
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11694
  ret void, !dbg !11695
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.108() unnamed_addr #17 !dbg !11696 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11697
  %2 = lshr i32 %1, 25, !dbg !11698
  %3 = and i32 %2, 1, !dbg !11698
  ret i32 %3, !dbg !11699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.109(i32 noundef %0) unnamed_addr #16 !dbg !11700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11702, metadata !DIExpression()), !dbg !11703
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11704
  %3 = and i32 %2, -241, !dbg !11704
  %4 = or i32 %3, %0, !dbg !11704
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11704
  ret void, !dbg !11705
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.110() unnamed_addr #16 !dbg !11706 {
  call void @llvm.dbg.value(metadata i32 3, metadata !11708, metadata !DIExpression()), !dbg !11709
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11710
  %2 = or i32 %1, 3, !dbg !11710
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11710
  ret void, !dbg !11711
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.111() unnamed_addr #17 !dbg !11712 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11713
  %2 = and i32 %1, 12, !dbg !11713
  ret i32 %2, !dbg !11714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.112(i32 noundef %0) unnamed_addr #16 !dbg !11715 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11717, metadata !DIExpression()), !dbg !11718
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11719
  %3 = and i32 %2, -1793, !dbg !11719
  %4 = or i32 %3, %0, !dbg !11719
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11719
  ret void, !dbg !11720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.113(i32 noundef %0) unnamed_addr #16 !dbg !11721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11723, metadata !DIExpression()), !dbg !11724
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11725
  %3 = and i32 %2, -14337, !dbg !11725
  %4 = or i32 %3, %0, !dbg !11725
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11725
  ret void, !dbg !11726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct.sys_memory_stats* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !11727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11731, metadata !DIExpression()), !dbg !11737
  call void @llvm.dbg.value(metadata i32 %1, metadata !11732, metadata !DIExpression()), !dbg !11737
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !11733, metadata !DIExpression()), !dbg !11737
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %3, metadata !11734, metadata !DIExpression()), !dbg !11737
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11738
  %6 = icmp eq i32 %5, 0, !dbg !11740
  br i1 %6, label %7, label %25, !dbg !11741

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #26, !dbg !11742
  call void @llvm.dbg.value(metadata i32 %8, metadata !11736, metadata !DIExpression()), !dbg !11737
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !11744
  %10 = icmp eq i32 %9, 1, !dbg !11746
  br i1 %10, label %19, label %11, !dbg !11747

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11748
  br i1 %12, label %13, label %14, !dbg !11751

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11752
  br label %15, !dbg !11754

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !11755
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !11757
  br label %16, !dbg !11758

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !11759
  %18 = icmp eq i32 %17, 1, !dbg !11760
  br i1 %18, label %19, label %16, !dbg !11758, !llvm.loop !11761

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !11763
  %21 = load i32, i32* %20, align 4, !dbg !11763
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !11764
  %23 = load i32, i32* %22, align 4, !dbg !11764
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.106(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #26, !dbg !11765
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.sys_memory_stats* noundef %3) #26, !dbg !11766
  call void @llvm.dbg.value(metadata i32 %24, metadata !11735, metadata !DIExpression()), !dbg !11737
  br label %25, !dbg !11767

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !11768
  call void @llvm.dbg.value(metadata i32 %26, metadata !11735, metadata !DIExpression()), !dbg !11737
  ret i32 %26, !dbg !11769
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !11770 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11771
  %2 = lshr i32 %1, 17, !dbg !11772
  %3 = and i32 %2, 1, !dbg !11772
  ret i32 %3, !dbg !11773
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !11774 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11775
  %2 = or i32 %1, 262144, !dbg !11775
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11775
  ret void, !dbg !11776
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !11777 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11778
  %2 = and i32 %1, -262145, !dbg !11778
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11778
  ret void, !dbg !11779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !11780 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11781
  %2 = or i32 %1, 65536, !dbg !11781
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11781
  ret void, !dbg !11782
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11783 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11786, metadata !DIExpression()), !dbg !11802
  call void @llvm.dbg.value(metadata i32 undef, metadata !11786, metadata !DIExpression()), !dbg !11802
  call void @llvm.dbg.value(metadata i32 undef, metadata !11786, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11802
  ret void, !dbg !11803
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11804 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11808, metadata !DIExpression()), !dbg !11810
  %2 = icmp eq i8* %0, null, !dbg !11811
  br i1 %2, label %29, label %3, !dbg !11813

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11814
  %5 = icmp eq i8 %4, 0, !dbg !11815
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11816
  br i1 %6, label %29, label %8, !dbg !11816

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11809, metadata !DIExpression()), !dbg !11810
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11817

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11809, metadata !DIExpression()), !dbg !11810
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11819
  br i1 %10, label %11, label %15, !dbg !11824

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11825
  %13 = load i8*, i8** %12, align 4, !dbg !11825
  %14 = icmp eq i8* %13, %0, !dbg !11826
  br i1 %14, label %29, label %15, !dbg !11827

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11828
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11809, metadata !DIExpression()), !dbg !11810
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11829
  br i1 %17, label %7, label %8, !dbg !11830, !llvm.loop !11831

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11809, metadata !DIExpression()), !dbg !11810
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11833
  br i1 %20, label %21, label %26, !dbg !11837

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11838
  %23 = load i8*, i8** %22, align 4, !dbg !11838
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !11839
  %25 = icmp eq i32 %24, 0, !dbg !11840
  br i1 %25, label %29, label %26, !dbg !11841

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11842
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11809, metadata !DIExpression()), !dbg !11810
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11843
  br i1 %28, label %29, label %18, !dbg !11817, !llvm.loop !11844

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11810
  ret %struct.device* %30, !dbg !11846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !11847 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11851, metadata !DIExpression()), !dbg !11852
  %2 = icmp eq %struct.device* %0, null, !dbg !11853
  br i1 %2, label %14, label %3, !dbg !11855

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11856
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11856
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11857
  %7 = load i8, i8* %6, align 1, !dbg !11857
  %8 = and i8 %7, 1, !dbg !11857
  %9 = icmp eq i8 %8, 0, !dbg !11857
  br i1 %9, label %14, label %10, !dbg !11858

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11859
  %12 = load i8, i8* %11, align 1, !dbg !11859
  %13 = icmp eq i8 %12, 0, !dbg !11860
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11852
  ret i1 %15, !dbg !11861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !11862 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11867, metadata !DIExpression()), !dbg !11868
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11869
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11870
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11871 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11879, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11880, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i8* %2, metadata !11881, metadata !DIExpression()), !dbg !11884
  %5 = bitcast i32* %4 to i8*, !dbg !11885
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11885
  call void @llvm.dbg.value(metadata i32 0, metadata !11882, metadata !DIExpression()), !dbg !11884
  store i32 0, i32* %4, align 4, !dbg !11886
  call void @llvm.dbg.value(metadata i32* %4, metadata !11882, metadata !DIExpression(DW_OP_deref)), !dbg !11884
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11887
  call void @llvm.dbg.value(metadata i16* %6, metadata !11883, metadata !DIExpression()), !dbg !11884
  %7 = load i32, i32* %4, align 4, !dbg !11888
  call void @llvm.dbg.value(metadata i32 %7, metadata !11882, metadata !DIExpression()), !dbg !11884
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11889
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11890
  ret i32 %8, !dbg !11891
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11892 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11896, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i32* %1, metadata !11897, metadata !DIExpression()), !dbg !11902
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11903
  %4 = load i16*, i16** %3, align 4, !dbg !11903
  call void @llvm.dbg.value(metadata i16* %4, metadata !11898, metadata !DIExpression()), !dbg !11902
  %5 = icmp eq i16* %4, null, !dbg !11904
  br i1 %5, label %14, label %6, !dbg !11905

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11906
  call void @llvm.dbg.value(metadata i32 %7, metadata !11899, metadata !DIExpression()), !dbg !11906
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11907
  %9 = load i16, i16* %8, align 2, !dbg !11907
  %10 = add i16 %9, -32767, !dbg !11908
  %11 = icmp ult i16 %10, 2, !dbg !11908
  %12 = add i32 %7, 1, !dbg !11909
  call void @llvm.dbg.value(metadata i32 %12, metadata !11899, metadata !DIExpression()), !dbg !11906
  br i1 %11, label %13, label %6, !dbg !11908, !llvm.loop !11911

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11914
  br label %14, !dbg !11915

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11917 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11921, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i32 %1, metadata !11922, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11923, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i8* %3, metadata !11924, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i32 0, metadata !11925, metadata !DIExpression()), !dbg !11933
  %5 = icmp eq i32 %1, 0, !dbg !11934
  br i1 %5, label %16, label %8, !dbg !11935

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11925, metadata !DIExpression()), !dbg !11933
  %7 = icmp eq i32 %15, %1, !dbg !11934
  br i1 %7, label %16, label %8, !dbg !11935, !llvm.loop !11936

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11925, metadata !DIExpression()), !dbg !11933
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11938
  %11 = load i16, i16* %10, align 2, !dbg !11938
  call void @llvm.dbg.value(metadata i16 %11, metadata !11927, metadata !DIExpression()), !dbg !11939
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !11940
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11930, metadata !DIExpression()), !dbg !11939
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !11941
  call void @llvm.dbg.value(metadata i32 %13, metadata !11931, metadata !DIExpression()), !dbg !11939
  %14 = icmp slt i32 %13, 0, !dbg !11942
  %15 = add nuw i32 %9, 1, !dbg !11944
  call void @llvm.dbg.value(metadata i32 %15, metadata !11925, metadata !DIExpression()), !dbg !11933
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !11946 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11950, metadata !DIExpression()), !dbg !11953
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11951, metadata !DIExpression()), !dbg !11953
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11952, metadata !DIExpression()), !dbg !11953
  %2 = sext i16 %0 to i32, !dbg !11954
  %3 = icmp slt i16 %0, 1, !dbg !11956
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11957
  %6 = add nsw i32 %2, -1, !dbg !11957
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11957
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11957
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11951, metadata !DIExpression()), !dbg !11953
  ret %struct.device* %8, !dbg !11958
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11959 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11961, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11962, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata i8* %2, metadata !11963, metadata !DIExpression()), !dbg !11966
  %5 = bitcast i32* %4 to i8*, !dbg !11967
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11967
  call void @llvm.dbg.value(metadata i32 0, metadata !11964, metadata !DIExpression()), !dbg !11966
  store i32 0, i32* %4, align 4, !dbg !11968
  call void @llvm.dbg.value(metadata i32* %4, metadata !11964, metadata !DIExpression(DW_OP_deref)), !dbg !11966
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11969
  call void @llvm.dbg.value(metadata i16* %6, metadata !11965, metadata !DIExpression()), !dbg !11966
  %7 = load i32, i32* %4, align 4, !dbg !11970
  call void @llvm.dbg.value(metadata i32 %7, metadata !11964, metadata !DIExpression()), !dbg !11966
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11971
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11972
  ret i32 %8, !dbg !11973
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11974 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11976, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i32* %1, metadata !11977, metadata !DIExpression()), !dbg !11981
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11982
  %4 = load i16*, i16** %3, align 4, !dbg !11982
  call void @llvm.dbg.value(metadata i16* %4, metadata !11978, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i32 0, metadata !11979, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i32 0, metadata !11980, metadata !DIExpression()), !dbg !11981
  %5 = icmp eq i16* %4, null, !dbg !11983
  br i1 %5, label %22, label %6, !dbg !11985

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11979, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i16* %8, metadata !11978, metadata !DIExpression()), !dbg !11981
  %9 = load i16, i16* %8, align 2, !dbg !11986
  %10 = icmp eq i16 %9, -32768, !dbg !11990
  call void @llvm.dbg.value(metadata i32 undef, metadata !11979, metadata !DIExpression()), !dbg !11981
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11991
  call void @llvm.dbg.value(metadata i16* %11, metadata !11978, metadata !DIExpression()), !dbg !11981
  %12 = zext i1 %10 to i32, !dbg !11992
  %13 = add i32 %7, %12, !dbg !11992
  call void @llvm.dbg.value(metadata i32 %13, metadata !11979, metadata !DIExpression()), !dbg !11981
  %14 = icmp eq i32 %13, 2, !dbg !11993
  br i1 %14, label %15, label %6, !dbg !11994

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11981
  call void @llvm.dbg.value(metadata i32 %16, metadata !11980, metadata !DIExpression()), !dbg !11981
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11995
  %18 = load i16, i16* %17, align 2, !dbg !11995
  %19 = icmp eq i16 %18, 32767, !dbg !11996
  %20 = add i32 %16, 1, !dbg !11997
  call void @llvm.dbg.value(metadata i32 %20, metadata !11980, metadata !DIExpression()), !dbg !11981
  br i1 %19, label %21, label %15, !dbg !11999, !llvm.loop !12000

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12002
  br label %22, !dbg !12003

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12004
  call void @llvm.dbg.value(metadata i16* %23, metadata !11978, metadata !DIExpression()), !dbg !11981
  ret i16* %23, !dbg !12005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12006 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12009
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12010
  ret i32* %2, !dbg !12011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12012 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12160, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12161, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12162, metadata !DIExpression()), !dbg !12163
  ret void, !dbg !12164
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12169, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.value(metadata i32 %1, metadata !12170, metadata !DIExpression()), !dbg !12171
  ret void, !dbg !12172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12173 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12177, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.value(metadata i32 %1, metadata !12178, metadata !DIExpression()), !dbg !12179
  ret void, !dbg !12180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12185, metadata !DIExpression()), !dbg !12187
  call void @llvm.dbg.value(metadata i8* %1, metadata !12186, metadata !DIExpression()), !dbg !12187
  ret i32 -134, !dbg !12188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12193, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.value(metadata i8* %1, metadata !12194, metadata !DIExpression()), !dbg !12195
  ret i32 -134, !dbg !12196
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12200, metadata !DIExpression()), !dbg !12201
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12202, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 undef, metadata !12205, metadata !DIExpression()) #24, !dbg !12209
  call void @llvm.dbg.value(metadata i32 undef, metadata !12206, metadata !DIExpression()) #24, !dbg !12209
  br label %3, !dbg !12210

3:                                                ; preds = %3, %1
  br label %3, !dbg !12211, !llvm.loop !12214
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12221, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12222, metadata !DIExpression()), !dbg !12223
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12224
  unreachable, !dbg !12224
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12227, metadata !DIExpression()), !dbg !12228
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12229
  unreachable, !dbg !12229
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12232, metadata !DIExpression()), !dbg !12236
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12233, metadata !DIExpression()), !dbg !12236
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12237, !srcloc !12208
  call void @llvm.dbg.value(metadata i32 undef, metadata !12205, metadata !DIExpression()) #24, !dbg !12239
  call void @llvm.dbg.value(metadata i32 undef, metadata !12206, metadata !DIExpression()) #24, !dbg !12239
  call void @llvm.dbg.value(metadata i32 undef, metadata !12234, metadata !DIExpression()), !dbg !12236
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12235, metadata !DIExpression()), !dbg !12236
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12240
  br i1 %4, label %6, label %5, !dbg !12242

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12243
  br label %7, !dbg !12244

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12243
  br label %7, !dbg !12247

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12237
  call void @llvm.dbg.value(metadata i32 %8, metadata !12205, metadata !DIExpression()) #24, !dbg !12239
  call void @llvm.dbg.value(metadata i32 %8, metadata !12234, metadata !DIExpression()), !dbg !12236
  %9 = tail call fastcc %struct.k_thread* @k_current_get.120() #27, !dbg !12249
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12235, metadata !DIExpression()), !dbg !12236
  call void @llvm.dbg.value(metadata i32 undef, metadata !12250, metadata !DIExpression()) #24, !dbg !12253
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !12255, !srcloc !12256
  tail call fastcc void @k_thread_abort.121(%struct.k_thread* noundef %9) #26, !dbg !12257
  ret void, !dbg !12260
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.120() unnamed_addr #9 !dbg !12261 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.122() #27, !dbg !12265
  ret %struct.k_thread* %1, !dbg !12266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.121(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12267 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12271, metadata !DIExpression()), !dbg !12272
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12273, !srcloc !12275
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12276
  ret void, !dbg !12277
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.122() unnamed_addr #9 !dbg !12278 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12279, !srcloc !12281
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12282
  ret %struct.k_thread* %1, !dbg !12283
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12284 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12288, metadata !DIExpression()), !dbg !12291
  call void @llvm.dbg.value(metadata i32 %1, metadata !12289, metadata !DIExpression()), !dbg !12291
  call void @llvm.dbg.value(metadata i32 %2, metadata !12290, metadata !DIExpression()), !dbg !12291
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12292
  ret void, !dbg !12293
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12294 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12298, metadata !DIExpression()), !dbg !12301
  call void @llvm.dbg.value(metadata i8* %1, metadata !12299, metadata !DIExpression()), !dbg !12301
  call void @llvm.dbg.value(metadata i32 %2, metadata !12300, metadata !DIExpression()), !dbg !12301
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12302
  ret void, !dbg !12303
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12304 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12305
  ret void, !dbg !12306
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12309, metadata !DIExpression()), !dbg !12310
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12311
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12312
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12313
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12314
  %4 = trunc i32 %0 to i8, !dbg !12315
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12316
  store i8 %4, i8* %5, align 4, !dbg !12317
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12318
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12319
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12320
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12321
  store i8* %8, i8** %9, align 4, !dbg !12322
  ret void, !dbg !12323
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12326, metadata !DIExpression()), !dbg !12332
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12333
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12327, metadata !DIExpression()), !dbg !12332
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12334
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12328, metadata !DIExpression()), !dbg !12332
  call void @llvm.dbg.value(metadata i8* null, metadata !12331, metadata !DIExpression()), !dbg !12332
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12335
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12336
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !12337
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12338
  ret void, !dbg !12339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12340 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12344, metadata !DIExpression()), !dbg !12345
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12346
  ret i8* %2, !dbg !12347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12353, metadata !DIExpression()), !dbg !12354
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12355
  %3 = load i8, i8* %2, align 1, !dbg !12356
  %4 = and i8 %3, -5, !dbg !12356
  store i8 %4, i8* %2, align 1, !dbg !12356
  ret void, !dbg !12357
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12358 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12361
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12362
  %3 = ptrtoint i8* %2 to i32, !dbg !12371
  %4 = add i32 %3, 2048, !dbg !12372
  call void @llvm.dbg.value(metadata i32 %4, metadata !12366, metadata !DIExpression()) #24, !dbg !12373
  call void @llvm.dbg.value(metadata i32 %4, metadata !12374, metadata !DIExpression()) #24, !dbg !12377
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !12379, !srcloc !12380
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12381
  %6 = or i32 %5, 512, !dbg !12381
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12381
  tail call fastcc void @__NVIC_SetPriority.129(i32 noundef -2, i32 noundef 255) #25, !dbg !12382
  tail call fastcc void @__NVIC_SetPriority.129(i32 noundef -5, i32 noundef 0) #25, !dbg !12385
  tail call fastcc void @__NVIC_SetPriority.129(i32 noundef -12, i32 noundef 0) #25, !dbg !12386
  tail call fastcc void @__NVIC_SetPriority.129(i32 noundef -11, i32 noundef 0) #25, !dbg !12387
  tail call fastcc void @__NVIC_SetPriority.129(i32 noundef -10, i32 noundef 0) #25, !dbg !12388
  tail call fastcc void @__NVIC_SetPriority.129(i32 noundef -4, i32 noundef 0) #25, !dbg !12389
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12390
  %8 = or i32 %7, 458752, !dbg !12390
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12390
  tail call void @z_arm_fault_init() #25, !dbg !12391
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12392
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12393
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12396
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12397
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12398
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12399
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !12399
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12360, metadata !DIExpression()), !dbg !12400
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12401
  call void @z_device_state_init() #25, !dbg !12402
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12403
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12404
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12405
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !12406
  unreachable, !dbg !12406
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1935, metadata !DIExpression()), !dbg !12407
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12408
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12408
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1936, metadata !DIExpression()), !dbg !12407
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1936, metadata !DIExpression()), !dbg !12407
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12409
  br i1 %7, label %8, label %35, !dbg !12410

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1936, metadata !DIExpression()), !dbg !12407
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12411
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12411
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1946, metadata !DIExpression()), !dbg !12412
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12413
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12413
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12414
  call void @llvm.dbg.value(metadata i32 %14, metadata !1950, metadata !DIExpression()), !dbg !12412
  %15 = icmp eq %struct.device* %11, null, !dbg !12415
  br i1 %15, label %32, label %16, !dbg !12417

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12418
  br i1 %17, label %26, label %18, !dbg !12421

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12422
  call void @llvm.dbg.value(metadata i32 %19, metadata !1950, metadata !DIExpression()), !dbg !12412
  %20 = icmp ult i32 %19, 255, !dbg !12424
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12424
  call void @llvm.dbg.value(metadata i32 %21, metadata !1950, metadata !DIExpression()), !dbg !12412
  %22 = trunc i32 %21 to i8, !dbg !12425
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12426
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12426
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12427
  store i8 %22, i8* %25, align 1, !dbg !12428
  br label %26, !dbg !12429

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12430
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12430
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12431
  %30 = load i8, i8* %29, align 1, !dbg !12432
  %31 = or i8 %30, 1, !dbg !12432
  store i8 %31, i8* %29, align 1, !dbg !12432
  br label %32, !dbg !12433

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12434
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1936, metadata !DIExpression()), !dbg !12407
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12409
  br i1 %34, label %8, label %35, !dbg !12410, !llvm.loop !12435

35:                                               ; preds = %32, %1
  ret void, !dbg !12437
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.129(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12440, metadata !DIExpression()), !dbg !12442
  call void @llvm.dbg.value(metadata i32 %1, metadata !12441, metadata !DIExpression()), !dbg !12442
  %3 = trunc i32 %1 to i8, !dbg !12443
  %4 = shl i8 %3, 4, !dbg !12443
  %5 = and i32 %0, 15, !dbg !12446
  %6 = add nsw i32 %5, -4, !dbg !12447
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12448
  store volatile i8 %4, i8* %7, align 1, !dbg !12449
  ret void, !dbg !12450
}

; Function Attrs: optsize
declare !dbg !12451 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12452 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12455, metadata !DIExpression()), !dbg !12456
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12457
  store i8 1, i8* %2, align 1, !dbg !12458
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12459
  store i8 1, i8* %3, align 4, !dbg !12460
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12461
  store i32 0, i32* %4, align 4, !dbg !12462
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12463
  store i32 0, i32* %5, align 4, !dbg !12464
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12465
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12466
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12467
  ret void, !dbg !12468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12469 {
  tail call void @z_sched_init() #25, !dbg !12474
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12475
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i32 0, i32 0)) #25, !dbg !12476
  call void @llvm.dbg.value(metadata i8* %1, metadata !12473, metadata !DIExpression()), !dbg !12477
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12478
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12479
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12480
  ret i8* %1, !dbg !12481
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !12482 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12486, metadata !DIExpression()), !dbg !12487
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12488
  unreachable, !dbg !12489
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12490 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12492, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i8* %1, metadata !12493, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i8* %2, metadata !12494, metadata !DIExpression()), !dbg !12495
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12496
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12497
  tail call void @boot_banner() #25, !dbg !12498
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12499
  tail call void @z_init_static_threads() #25, !dbg !12500
  tail call void @main() #25, !dbg !12501
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12502
  %5 = and i8 %4, -2, !dbg !12502
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12502
  ret void, !dbg !12503
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12504 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12514, metadata !DIExpression()), !dbg !12516
  call void @llvm.dbg.value(metadata i8* %1, metadata !12515, metadata !DIExpression()), !dbg !12516
  ret void, !dbg !12517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12518 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12520, metadata !DIExpression()), !dbg !12522
  call void @llvm.dbg.value(metadata i8* %1, metadata !12521, metadata !DIExpression()), !dbg !12522
  ret void, !dbg !12523
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12524 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !12525, !srcloc !12532
  call void @llvm.dbg.value(metadata i32 %1, metadata !12528, metadata !DIExpression()) #24, !dbg !12533
  %2 = icmp ne i32 %1, 0, !dbg !12534
  ret i1 %2, !dbg !12535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !12536 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12537
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12538
  %3 = load i8, i8* %2, align 4, !dbg !12539
  %4 = or i8 %3, 1, !dbg !12539
  store i8 %4, i8* %2, align 4, !dbg !12539
  ret void, !dbg !12540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !12541 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12542
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12543
  %3 = load i8, i8* %2, align 4, !dbg !12544
  %4 = and i8 %3, -2, !dbg !12544
  store i8 %4, i8* %2, align 4, !dbg !12544
  ret void, !dbg !12545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12546 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12547
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12548
  %3 = load i8, i8* %2, align 4, !dbg !12548
  %4 = and i8 %3, 1, !dbg !12549
  %5 = icmp ne i8 %4, 0, !dbg !12550
  ret i1 %5, !dbg !12551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12552 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12556, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i8* %1, metadata !12557, metadata !DIExpression()), !dbg !12558
  ret i32 -88, !dbg !12559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12564, metadata !DIExpression()), !dbg !12565
  ret i8* null, !dbg !12566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !12567 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12571, metadata !DIExpression()), !dbg !12574
  call void @llvm.dbg.value(metadata i8* %1, metadata !12572, metadata !DIExpression()), !dbg !12574
  call void @llvm.dbg.value(metadata i32 %2, metadata !12573, metadata !DIExpression()), !dbg !12574
  ret i32 -88, !dbg !12575
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1957 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2071, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i8* %1, metadata !2072, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 %2, metadata !2073, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 0, metadata !2074, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i8 undef, metadata !2076, metadata !DIExpression()), !dbg !12576
  %4 = icmp eq i8* %1, null, !dbg !12577
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12579
  br i1 %6, label %46, label %7, !dbg !12579

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12580
  %9 = load i8, i8* %8, align 1, !dbg !12580
  call void @llvm.dbg.value(metadata i8 %9, metadata !2076, metadata !DIExpression()), !dbg !12576
  %10 = add i32 %2, -1, !dbg !12581
  call void @llvm.dbg.value(metadata i32 %10, metadata !2073, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i8 0, metadata !2077, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i8 %9, metadata !2076, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 0, metadata !2074, metadata !DIExpression()), !dbg !12576
  %11 = icmp eq i8 %9, 0, !dbg !12583
  br i1 %11, label %12, label %15, !dbg !12585

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12586
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12587
  store i8 0, i8* %14, align 1, !dbg !12588
  br label %46, !dbg !12589

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2077, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i8 %17, metadata !2076, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 %18, metadata !2074, metadata !DIExpression()), !dbg !12576
  %19 = zext i8 %17 to i32, !dbg !12590
  %20 = zext i8 %16 to i32, !dbg !12591
  %21 = shl nuw i32 1, %20, !dbg !12591
  call void @llvm.dbg.value(metadata i32 %21, metadata !2075, metadata !DIExpression()), !dbg !12576
  %22 = and i32 %21, %19, !dbg !12593
  %23 = icmp eq i32 %22, 0, !dbg !12595
  br i1 %23, label %42, label %24, !dbg !12596

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12597
  %26 = sub i32 %10, %18, !dbg !12598
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12599
  %28 = load i8*, i8** %27, align 4, !dbg !12599
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12600
  %30 = load i32, i32* %29, align 4, !dbg !12600
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12601
  %32 = add i32 %31, %18, !dbg !12602
  call void @llvm.dbg.value(metadata i32 %32, metadata !2074, metadata !DIExpression()), !dbg !12576
  %33 = trunc i32 %21 to i8, !dbg !12603
  %34 = xor i8 %33, -1, !dbg !12603
  %35 = and i8 %17, %34, !dbg !12603
  call void @llvm.dbg.value(metadata i8 %35, metadata !2076, metadata !DIExpression()), !dbg !12576
  %36 = icmp eq i8 %35, 0, !dbg !12604
  br i1 %36, label %12, label %37, !dbg !12606

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12607
  %39 = sub i32 %10, %32, !dbg !12609
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !12610
  %41 = add i32 %40, %32, !dbg !12611
  call void @llvm.dbg.value(metadata i32 %41, metadata !2074, metadata !DIExpression()), !dbg !12576
  br label %42, !dbg !12612

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12576
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12576
  call void @llvm.dbg.value(metadata i8 %44, metadata !2076, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 %43, metadata !2074, metadata !DIExpression()), !dbg !12576
  %45 = add i8 %16, 1, !dbg !12613
  call void @llvm.dbg.value(metadata i8 %45, metadata !2077, metadata !DIExpression()), !dbg !12582
  br label %15, !dbg !12585

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), %3 ], !dbg !12576
  ret i8* %47, !dbg !12614
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12615 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12619, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata i32 %1, metadata !12620, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata i8* %2, metadata !12621, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata i32 %3, metadata !12622, metadata !DIExpression()), !dbg !12624
  %5 = icmp ult i32 %1, %3, !dbg !12625
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12625
  call void @llvm.dbg.value(metadata i32 %6, metadata !12623, metadata !DIExpression()), !dbg !12624
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !12626
  ret i32 %6, !dbg !12627
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12628 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12632, metadata !DIExpression()), !dbg !12633
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !12634
  ret void, !dbg !12635
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12636 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12645, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12646, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i32 %2, metadata !12647, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12648, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i8* %4, metadata !12649, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i8* %5, metadata !12650, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i8* %6, metadata !12651, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i32 %7, metadata !12652, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i32 %8, metadata !12653, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i8* undef, metadata !12654, metadata !DIExpression()), !dbg !12656
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12657
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !12658
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12659
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12660
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12661
  call void @llvm.dbg.value(metadata i8* %13, metadata !12655, metadata !DIExpression()), !dbg !12656
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !12662
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12663
  store i8* null, i8** %14, align 4, !dbg !12664
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12665
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12665
  br i1 %16, label %20, label %17, !dbg !12667

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !12668
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !12668
  br label %20, !dbg !12669

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12656
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12670
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !12672
  ret i8* %13, !dbg !12673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !12674 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12679, metadata !DIExpression()), !dbg !12680
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12681
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12682
  ret void, !dbg !12683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !12684 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12689, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata i32 %1, metadata !12690, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata i32 %2, metadata !12691, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata i32 %3, metadata !12692, metadata !DIExpression()), !dbg !12693
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12694
  store %union.anon* null, %union.anon** %5, align 8, !dbg !12695
  %6 = trunc i32 %3 to i8, !dbg !12696
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12697
  store i8 %6, i8* %7, align 4, !dbg !12698
  %8 = trunc i32 %2 to i8, !dbg !12699
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12700
  store i8 %8, i8* %9, align 1, !dbg !12701
  %10 = trunc i32 %1 to i8, !dbg !12702
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12703
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12703
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12703
  store i8 %10, i8* %13, align 2, !dbg !12704
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12705
  store i8 0, i8* %14, align 1, !dbg !12706
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12707
  ret void, !dbg !12708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !12709 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12713, metadata !DIExpression()), !dbg !12721
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12714, metadata !DIExpression()), !dbg !12721
  call void @llvm.dbg.value(metadata i32 %2, metadata !12715, metadata !DIExpression()), !dbg !12721
  call void @llvm.dbg.value(metadata i32 0, metadata !12720, metadata !DIExpression()), !dbg !12721
  %4 = add i32 %2, 7, !dbg !12722
  %5 = and i32 %4, -8, !dbg !12722
  %6 = add i32 %5, 64, !dbg !12722
  call void @llvm.dbg.value(metadata i32 %6, metadata !12716, metadata !DIExpression()), !dbg !12721
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.139(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12724
  call void @llvm.dbg.value(metadata i8* %7, metadata !12719, metadata !DIExpression()), !dbg !12721
  call void @llvm.dbg.value(metadata i32 %5, metadata !12717, metadata !DIExpression()), !dbg !12721
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12725
  call void @llvm.dbg.value(metadata i8* %8, metadata !12718, metadata !DIExpression()), !dbg !12721
  call void @llvm.dbg.value(metadata i32 0, metadata !12720, metadata !DIExpression()), !dbg !12721
  %9 = ptrtoint i8* %7 to i32, !dbg !12726
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12727
  store i32 %9, i32* %10, align 4, !dbg !12728
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12729
  store i32 %5, i32* %11, align 4, !dbg !12730
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12731
  store i32 0, i32* %12, align 4, !dbg !12732
  call void @llvm.dbg.value(metadata i8* %8, metadata !12718, metadata !DIExpression()), !dbg !12721
  ret i8* %8, !dbg !12733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.139(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12734 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12738, metadata !DIExpression()), !dbg !12739
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12740
  ret i8* %2, !dbg !12741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12742 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12747, metadata !DIExpression()), !dbg !12748
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12749
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12750
  ret void, !dbg !12751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12752 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12754, metadata !DIExpression()), !dbg !12755
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12756
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12757
  ret void, !dbg !12758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12759 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12763, metadata !DIExpression()), !dbg !12764
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12765
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12766
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12767
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12768
  ret void, !dbg !12769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12770 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12775, metadata !DIExpression()), !dbg !12776
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12777
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12778
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12779
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12780
  ret void, !dbg !12781
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12782 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12799, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12790, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12791, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i32 %2, metadata !12792, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12793, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i8* %4, metadata !12794, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i8* %5, metadata !12795, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i8* %6, metadata !12796, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i32 %7, metadata !12797, metadata !DIExpression()), !dbg !12800
  call void @llvm.dbg.value(metadata i32 %8, metadata !12798, metadata !DIExpression()), !dbg !12800
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12801
  %13 = icmp eq i64 %11, -1, !dbg !12802
  br i1 %13, label %15, label %14, !dbg !12804

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12805
  br label %15, !dbg !12807

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12808
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12809 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12814, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12813, metadata !DIExpression()), !dbg !12815
  %4 = icmp eq i64 %3, 0, !dbg !12816
  br i1 %4, label %5, label %6, !dbg !12818

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12819
  br label %7, !dbg !12821

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12822
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12824
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12825 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12829, metadata !DIExpression()), !dbg !12830
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12831, !srcloc !12833
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12834
  ret void, !dbg !12835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12836 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12839, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12838, metadata !DIExpression()), !dbg !12840
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12841
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12842
  ret void, !dbg !12843
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12844 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12846, metadata !DIExpression()), !dbg !12866
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12867

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !12868
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12864, metadata !DIExpression()), !dbg !12869
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12870

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12846, metadata !DIExpression()), !dbg !12866
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12871
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12871
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12874
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12874
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12875
  %9 = load i32, i32* %8, align 4, !dbg !12875
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12876
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12876
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12877
  %13 = load i8*, i8** %12, align 4, !dbg !12877
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12878
  %15 = load i8*, i8** %14, align 4, !dbg !12878
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12879
  %17 = load i8*, i8** %16, align 4, !dbg !12879
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12880
  %19 = load i32, i32* %18, align 4, !dbg !12880
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12881
  %21 = load i32, i32* %20, align 4, !dbg !12881
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !12882
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12883
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12884
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12885
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12885
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12886
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12846, metadata !DIExpression()), !dbg !12866
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12887
  br i1 %27, label %2, label %1, !dbg !12867, !llvm.loop !12889

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !12868
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12864, metadata !DIExpression()), !dbg !12869
  br label %29, !dbg !12870

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !12891
  ret void, !dbg !12892

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12864, metadata !DIExpression()), !dbg !12869
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12893
  %33 = load i32, i32* %32, align 4, !dbg !12893
  %34 = icmp eq i32 %33, -1, !dbg !12897
  br i1 %34, label %43, label %35, !dbg !12898

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12899
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12899
  %38 = icmp sgt i32 %33, 0, !dbg !12901
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12901
  %40 = zext i32 %39 to i64, !dbg !12901
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !12901
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12902
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !12902
  br label %43, !dbg !12903

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12904
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12864, metadata !DIExpression()), !dbg !12869
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12905
  br i1 %45, label %30, label %29, !dbg !12870, !llvm.loop !12907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12909 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12914, metadata !DIExpression()), !dbg !12915
  call void @llvm.dbg.value(metadata i64 %0, metadata !12916, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i32 1000, metadata !12921, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i32 10000, metadata !12922, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i8 1, metadata !12923, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i8 0, metadata !12924, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i8 1, metadata !12925, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i8 0, metadata !12926, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i8 1, metadata !12927, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i8 0, metadata !12928, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i64 0, metadata !12929, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i64 0, metadata !12929, metadata !DIExpression()), !dbg !12933
  %2 = mul i64 %0, 10, !dbg !12935
  ret i64 %2, !dbg !12941
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !12942 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12944, metadata !DIExpression()), !dbg !12948
  call void @llvm.dbg.value(metadata i8* %1, metadata !12945, metadata !DIExpression()), !dbg !12948
  call void @llvm.dbg.value(metadata i8* %2, metadata !12946, metadata !DIExpression()), !dbg !12948
  call void @llvm.dbg.value(metadata i8* %3, metadata !12947, metadata !DIExpression()), !dbg !12948
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12949
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12950
  %7 = load i8, i8* %6, align 4, !dbg !12951
  %8 = or i8 %7, 4, !dbg !12951
  store i8 %8, i8* %6, align 4, !dbg !12951
  tail call void @z_thread_essential_clear() #26, !dbg !12952
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !12953
  unreachable, !dbg !12953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12954 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12958, metadata !DIExpression()), !dbg !12959
  ret i32 -134, !dbg !12960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12961 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12965, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata i32 %1, metadata !12966, metadata !DIExpression()), !dbg !12967
  ret i32 -134, !dbg !12968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !12969 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12976, metadata !DIExpression()), !dbg !12978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !12977, metadata !DIExpression()), !dbg !12978
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12979
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !12981
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12978
  ret i32 %6, !dbg !12982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !12983 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12987, metadata !DIExpression()), !dbg !12988
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !12989
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12988
  ret i32 %3, !dbg !12991
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12992 {
  tail call void @sys_clock_idle_exit() #25, !dbg !12994
  ret void, !dbg !12995
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !12996 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12998, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata i8* %1, metadata !12999, metadata !DIExpression()), !dbg !13001
  call void @llvm.dbg.value(metadata i8* %2, metadata !13000, metadata !DIExpression()), !dbg !13001
  br label %4, !dbg !13002

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13003, !srcloc !13010
  call void @llvm.dbg.value(metadata i32 undef, metadata !13006, metadata !DIExpression()) #24, !dbg !13011
  call void @llvm.dbg.value(metadata i32 undef, metadata !13007, metadata !DIExpression()) #24, !dbg !13011
  tail call fastcc void @k_cpu_idle() #26, !dbg !13012
  br label %4, !dbg !13002, !llvm.loop !13013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13015 {
  tail call void @arch_cpu_idle() #25, !dbg !13016
  ret void, !dbg !13017
}

; Function Attrs: optsize
declare !dbg !13018 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13019 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13023, metadata !DIExpression()), !dbg !13027
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13024, metadata !DIExpression()), !dbg !13027
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13028
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13028
  %5 = load i8, i8* %4, align 2, !dbg !13028
  call void @llvm.dbg.value(metadata i8 %5, metadata !13025, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13027
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13029
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13029
  %8 = load i8, i8* %7, align 2, !dbg !13029
  call void @llvm.dbg.value(metadata i8 %8, metadata !13026, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13027
  %9 = icmp eq i8 %8, %5, !dbg !13030
  %10 = sext i8 %5 to i32, !dbg !13032
  %11 = sext i8 %8 to i32, !dbg !13032
  %12 = sub nsw i32 %11, %10, !dbg !13032
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13032
  ret i32 %13, !dbg !13033
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13034 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13038, metadata !DIExpression()), !dbg !13039
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !13040
  %3 = icmp eq i32 %2, 0, !dbg !13042
  br i1 %3, label %8, label %4, !dbg !13043

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !13044
  %6 = add i32 %5, %2, !dbg !13046
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13047
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !13048
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !13049
  br label %8, !dbg !13050

8:                                                ; preds = %4, %1
  ret void, !dbg !13051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !13052 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13056, metadata !DIExpression()), !dbg !13058
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13059
  call void @llvm.dbg.value(metadata i32 %1, metadata !13057, metadata !DIExpression()), !dbg !13058
  ret i32 %1, !dbg !13060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13065, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.value(metadata i32 %1, metadata !13066, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.value(metadata i32 0, metadata !13067, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !13083
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13085, !srcloc !13091
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13085
  call void @llvm.dbg.value(metadata i32 %4, metadata !13088, metadata !DIExpression()) #24, !dbg !13092
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !13092
  call void @llvm.dbg.value(metadata i32 %4, metadata !13082, metadata !DIExpression()) #24, !dbg !13083
  call void @llvm.dbg.value(metadata i32 %4, metadata !13073, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.value(metadata i32 undef, metadata !13067, metadata !DIExpression()), !dbg !13075
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13093
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !13096
  %6 = icmp sgt i32 %0, 0, !dbg !13097
  %7 = icmp sgt i32 %5, 2, !dbg !13099
  %8 = select i1 %7, i32 %5, i32 2, !dbg !13099
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !13099
  store i32 %9, i32* @slice_ticks, align 4, !dbg !13100
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13101
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13102
  call void @llvm.dbg.value(metadata i32 %4, metadata !13103, metadata !DIExpression()) #24, !dbg !13109
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !13109
  call void @llvm.dbg.value(metadata i32 %4, metadata !13111, metadata !DIExpression()) #24, !dbg !13114
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !13116, !srcloc !13117
  call void @llvm.dbg.value(metadata i32 1, metadata !13067, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.value(metadata i32 undef, metadata !13067, metadata !DIExpression()), !dbg !13075
  ret void, !dbg !13118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !13119 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13121, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.value(metadata i32 %0, metadata !13123, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13138
  call void @llvm.dbg.value(metadata i32 1000, metadata !13126, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i32 10000, metadata !13127, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i8 1, metadata !13128, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i1 true, metadata !13129, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13138
  call void @llvm.dbg.value(metadata i1 true, metadata !13130, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13138
  call void @llvm.dbg.value(metadata i8 0, metadata !13131, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i1 true, metadata !13132, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13138
  call void @llvm.dbg.value(metadata i1 false, metadata !13133, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13138
  call void @llvm.dbg.value(metadata i64 0, metadata !13134, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.value(metadata i64 0, metadata !13134, metadata !DIExpression()), !dbg !13138
  %2 = mul i32 %0, 10, !dbg !13140
  ret i32 %2, !dbg !13146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13149, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !13152
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13154, !srcloc !13091
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13154
  call void @llvm.dbg.value(metadata i32 %3, metadata !13088, metadata !DIExpression()) #24, !dbg !13156
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !13156
  call void @llvm.dbg.value(metadata i32 %3, metadata !13082, metadata !DIExpression()) #24, !dbg !13152
  call void @llvm.dbg.value(metadata i32 %3, metadata !13150, metadata !DIExpression()), !dbg !13151
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13157
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13159
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13160
  br i1 %6, label %7, label %8, !dbg !13161

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13162
  call void @llvm.dbg.value(metadata i32 %3, metadata !13103, metadata !DIExpression()) #24, !dbg !13164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !13164
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()) #24, !dbg !13166
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13168, !srcloc !13117
  br label %24, !dbg !13169

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13170
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !13171
  %10 = icmp eq i32 %9, 0, !dbg !13171
  br i1 %10, label %21, label %11, !dbg !13173

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !13174
  br i1 %12, label %13, label %21, !dbg !13175

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13176
  %15 = icmp sgt i32 %14, %0, !dbg !13179
  br i1 %15, label %19, label %16, !dbg !13180

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13181
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !13181
  call void @llvm.dbg.value(metadata i32 %18, metadata !13150, metadata !DIExpression()), !dbg !13151
  br label %22, !dbg !13183

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13184
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13184
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13186
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13151
  call void @llvm.dbg.value(metadata i32 %23, metadata !13150, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i32 %23, metadata !13103, metadata !DIExpression()) #24, !dbg !13188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !13188
  call void @llvm.dbg.value(metadata i32 %23, metadata !13111, metadata !DIExpression()) #24, !dbg !13190
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !13192, !srcloc !13117
  br label %24, !dbg !13193

24:                                               ; preds = %22, %7
  ret void, !dbg !13193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13194 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13198, metadata !DIExpression()), !dbg !13200
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13201
  %3 = icmp eq i32 %2, 0, !dbg !13201
  br i1 %3, label %16, label %4, !dbg !13202

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13203
  br i1 %5, label %16, label %6, !dbg !13204

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13205
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13205
  %9 = load i8, i8* %8, align 2, !dbg !13205
  %10 = sext i8 %9 to i32, !dbg !13206
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13207
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13208
  br i1 %12, label %16, label %13, !dbg !13209

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13210
  %15 = xor i1 %14, true, !dbg !13211
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13200
  call void @llvm.dbg.value(metadata i1 %17, metadata !13199, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13200
  ret i1 %17, !dbg !13212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13213 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13217, metadata !DIExpression()), !dbg !13219
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13220
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13218, metadata !DIExpression()), !dbg !13219
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13221
  br i1 %3, label %5, label %4, !dbg !13223

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13224
  br label %5, !dbg !13226

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13217, metadata !DIExpression()), !dbg !13219
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13227
  ret i32 %6, !dbg !13228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13229 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13231, metadata !DIExpression()), !dbg !13233
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13234
  %3 = load i8, i8* %2, align 1, !dbg !13234
  call void @llvm.dbg.value(metadata i8 %3, metadata !13232, metadata !DIExpression()), !dbg !13233
  %4 = and i8 %3, 31, !dbg !13235
  %5 = icmp ne i8 %4, 0, !dbg !13236
  ret i1 %5, !dbg !13237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13238 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13240, metadata !DIExpression()), !dbg !13241
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13242
  br i1 %2, label %3, label %7, !dbg !13244

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13245, metadata !DIExpression()) #24, !dbg !13248
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13251
  %5 = load i8, i8* %4, align 1, !dbg !13252
  %6 = and i8 %5, 127, !dbg !13252
  store i8 %6, i8* %4, align 1, !dbg !13252
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13253, metadata !DIExpression()) #24, !dbg !13256
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13260
  br label %7, !dbg !13261

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13262, metadata !DIExpression()) #24, !dbg !13265
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13267
  %9 = load i8, i8* %8, align 1, !dbg !13268
  %10 = or i8 %9, -128, !dbg !13268
  store i8 %10, i8* %8, align 1, !dbg !13268
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13269, metadata !DIExpression()) #24, !dbg !13272
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13276, metadata !DIExpression()) #24, !dbg !13284
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13282, metadata !DIExpression()) #24, !dbg !13284
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13286
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13283, metadata !DIExpression()) #24, !dbg !13284
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13288
  br i1 %12, label %23, label %13, !dbg !13286

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13283, metadata !DIExpression()) #24, !dbg !13284
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13290
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13283, metadata !DIExpression()) #24, !dbg !13284
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !13291
  %17 = icmp sgt i32 %16, 0, !dbg !13294
  br i1 %17, label %18, label %20, !dbg !13295

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13296
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !13298
  br label %25, !dbg !13299

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !13288
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13283, metadata !DIExpression()) #24, !dbg !13284
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13288
  br i1 %22, label %23, label %13, !dbg !13286, !llvm.loop !13300

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13302
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !13303
  br label %25, !dbg !13304

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13305
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13306
  %28 = zext i1 %27 to i32, !dbg !13306
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !13307
  ret void, !dbg !13308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13309 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13311, metadata !DIExpression()), !dbg !13312
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !13313
  ret i1 %2, !dbg !13314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13315 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13317, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13318, metadata !DIExpression()), !dbg !13319
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13320
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !13321
  ret void, !dbg !13322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13323 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13327, metadata !DIExpression()), !dbg !13328
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13329
  br i1 %2, label %6, label %3, !dbg !13329

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13330
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13330
  br label %6, !dbg !13329

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13329
  ret %struct._dnode* %7, !dbg !13331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13332 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13336, metadata !DIExpression()), !dbg !13340
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13337, metadata !DIExpression()), !dbg !13340
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13341
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13341
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13338, metadata !DIExpression()), !dbg !13340
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13342
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13343
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13344
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13345
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13346
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13347
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13348
  ret void, !dbg !13349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13350 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13354, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13355, metadata !DIExpression()), !dbg !13356
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13357
  br i1 %3, label %6, label %4, !dbg !13358

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !13359
  br label %6, !dbg !13358

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13358
  ret %struct._dnode* %7, !dbg !13360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13361 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13365, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13366, metadata !DIExpression()), !dbg !13368
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13369
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13369
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13367, metadata !DIExpression()), !dbg !13368
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13370
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13371
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13372
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13373
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13374
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13375
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13376
  ret void, !dbg !13377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13380, metadata !DIExpression()), !dbg !13382
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13383
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13390, metadata !DIExpression()) #24, !dbg !13392
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13393
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13394
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13394
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13381, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13395, metadata !DIExpression()) #24, !dbg !13401
  call void @llvm.dbg.value(metadata i32 %0, metadata !13400, metadata !DIExpression()) #24, !dbg !13401
  %6 = icmp eq i32 %0, 0, !dbg !13404
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13406
  br i1 %6, label %8, label %15, !dbg !13407

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !13408
  br i1 %9, label %15, label %10, !dbg !13410

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !13411
  br i1 %11, label %15, label %12, !dbg !13413

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !13414
  %14 = icmp eq i32 %13, 0, !dbg !13414
  br i1 %14, label %18, label %15, !dbg !13416

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13417
  br i1 %16, label %18, label %17, !dbg !13420

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13421
  br label %18, !dbg !13423

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13406
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13406
  ret void, !dbg !13424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13425 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13429, metadata !DIExpression()), !dbg !13432
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13430, metadata !DIExpression()), !dbg !13432
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !13433
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13431, metadata !DIExpression()), !dbg !13432
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13430, metadata !DIExpression()), !dbg !13432
  ret %struct.k_thread* %3, !dbg !13434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13437, metadata !DIExpression()), !dbg !13438
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13439
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13440
  %4 = xor i1 %3, true, !dbg !13441
  ret i1 %4, !dbg !13442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13443 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13445, metadata !DIExpression()), !dbg !13446
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13447
  %3 = load i16, i16* %2, align 2, !dbg !13447
  %4 = icmp ult i16 %3, 128, !dbg !13448
  %5 = zext i1 %4 to i32, !dbg !13448
  ret i32 %5, !dbg !13449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13450 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13456, metadata !DIExpression()), !dbg !13457
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13458
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !13459
  %4 = xor i1 %3, true, !dbg !13460
  ret i1 %4, !dbg !13461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13462 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13468, metadata !DIExpression()), !dbg !13469
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13470
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13470
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13471
  ret i1 %4, !dbg !13472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13473 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13475, metadata !DIExpression()), !dbg !13477
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13476, metadata !DIExpression()), !dbg !13477
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13478
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13478
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !13479
  br i1 %5, label %9, label %6, !dbg !13480

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13481
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !13481
  br label %9, !dbg !13480

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !13480
  ret %struct._dnode* %10, !dbg !13482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13483 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13487, metadata !DIExpression()), !dbg !13488
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13489
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13489
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13490
  ret i1 %4, !dbg !13491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13492 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13496, metadata !DIExpression()), !dbg !13499
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13500
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13500
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13497, metadata !DIExpression()), !dbg !13499
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13501
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13501
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13498, metadata !DIExpression()), !dbg !13499
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13502
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13503
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13504
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13505
  tail call fastcc void @sys_dnode_init.144(%struct._dnode* noundef %0) #26, !dbg !13506
  ret void, !dbg !13507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.144(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13508 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13510, metadata !DIExpression()), !dbg !13511
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13512
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13513
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13514
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13515
  ret void, !dbg !13516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13517 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13521, metadata !DIExpression()), !dbg !13523
  call void @llvm.dbg.value(metadata i32 128, metadata !13522, metadata !DIExpression()), !dbg !13523
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13524
  %3 = load i8, i8* %2, align 1, !dbg !13524
  %4 = icmp slt i8 %3, 0, !dbg !13525
  ret i1 %4, !dbg !13526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13531, metadata !DIExpression()), !dbg !13533
  call void @llvm.dbg.value(metadata i32 %1, metadata !13532, metadata !DIExpression()), !dbg !13533
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !13534
  ret i1 %3, !dbg !13535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !13536 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13538, metadata !DIExpression()), !dbg !13539
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13540
  ret i1 %2, !dbg !13541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13542 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13544, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.value(metadata i32 %1, metadata !13545, metadata !DIExpression()), !dbg !13546
  %3 = icmp slt i32 %0, %1, !dbg !13547
  ret i1 %3, !dbg !13548
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13549 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13551, metadata !DIExpression()), !dbg !13555
  call void @llvm.dbg.value(metadata i32 0, metadata !13552, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !13557
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13559, !srcloc !13091
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13559
  call void @llvm.dbg.value(metadata i32 %3, metadata !13088, metadata !DIExpression()) #24, !dbg !13561
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !13561
  call void @llvm.dbg.value(metadata i32 %3, metadata !13082, metadata !DIExpression()) #24, !dbg !13557
  call void @llvm.dbg.value(metadata i32 %3, metadata !13554, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata i32 undef, metadata !13552, metadata !DIExpression()), !dbg !13556
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13562
  call void @llvm.dbg.value(metadata i32 %3, metadata !13103, metadata !DIExpression()) #24, !dbg !13567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !13567
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()) #24, !dbg !13569
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13571, !srcloc !13117
  call void @llvm.dbg.value(metadata i32 1, metadata !13552, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata i32 undef, metadata !13552, metadata !DIExpression()), !dbg !13556
  ret void, !dbg !13572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13573 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13575, metadata !DIExpression()), !dbg !13576
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13577
  br i1 %2, label %24, label %3, !dbg !13579

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !13580
  br i1 %4, label %5, label %24, !dbg !13581

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13262, metadata !DIExpression()) #24, !dbg !13582
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13585
  %7 = load i8, i8* %6, align 1, !dbg !13586
  %8 = or i8 %7, -128, !dbg !13586
  store i8 %8, i8* %6, align 1, !dbg !13586
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13269, metadata !DIExpression()) #24, !dbg !13587
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13276, metadata !DIExpression()) #24, !dbg !13589
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13282, metadata !DIExpression()) #24, !dbg !13589
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13591
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13283, metadata !DIExpression()) #24, !dbg !13589
  %10 = icmp eq %struct._dnode* %9, null, !dbg !13592
  br i1 %10, label %21, label %11, !dbg !13591

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13283, metadata !DIExpression()) #24, !dbg !13589
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !13593
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13283, metadata !DIExpression()) #24, !dbg !13589
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !13594
  %15 = icmp sgt i32 %14, 0, !dbg !13595
  br i1 %15, label %16, label %18, !dbg !13596

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13597
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !13598
  br label %23, !dbg !13599

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !13592
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13283, metadata !DIExpression()) #24, !dbg !13589
  %20 = icmp eq %struct._dnode* %19, null, !dbg !13592
  br i1 %20, label %21, label %11, !dbg !13591, !llvm.loop !13600

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13602
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !13603
  br label %23, !dbg !13604

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !13605
  br label %24, !dbg !13606

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !13607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13608 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13610, metadata !DIExpression()), !dbg !13611
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13612
  br i1 %2, label %6, label %3, !dbg !13613

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !13614
  %5 = xor i1 %4, true, !dbg !13613
  br label %6, !dbg !13613

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !13615
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13616 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13618, metadata !DIExpression()), !dbg !13622
  call void @llvm.dbg.value(metadata i32 0, metadata !13619, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !13624
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13626, !srcloc !13091
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13626
  call void @llvm.dbg.value(metadata i32 %3, metadata !13088, metadata !DIExpression()) #24, !dbg !13628
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !13628
  call void @llvm.dbg.value(metadata i32 %3, metadata !13082, metadata !DIExpression()) #24, !dbg !13624
  call void @llvm.dbg.value(metadata i32 %3, metadata !13621, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()), !dbg !13623
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !13629
  call void @llvm.dbg.value(metadata i32 %3, metadata !13103, metadata !DIExpression()) #24, !dbg !13632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !13632
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()) #24, !dbg !13634
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13636, !srcloc !13117
  call void @llvm.dbg.value(metadata i32 1, metadata !13619, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()), !dbg !13623
  ret void, !dbg !13637
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13640, metadata !DIExpression()), !dbg !13642
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !13643
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13645, !srcloc !13091
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13645
  call void @llvm.dbg.value(metadata i32 %3, metadata !13088, metadata !DIExpression()) #24, !dbg !13647
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !13647
  call void @llvm.dbg.value(metadata i32 %3, metadata !13082, metadata !DIExpression()) #24, !dbg !13643
  call void @llvm.dbg.value(metadata i32 %3, metadata !13641, metadata !DIExpression()), !dbg !13642
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !13648
  br i1 %4, label %5, label %6, !dbg !13650

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13103, metadata !DIExpression()) #24, !dbg !13651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !13651
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()) #24, !dbg !13654
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13656, !srcloc !13117
  br label %8, !dbg !13657

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.149(%struct.k_thread* noundef %0) #26, !dbg !13658
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13659
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13660
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !13660
  br label %8, !dbg !13661

8:                                                ; preds = %6, %5
  ret void, !dbg !13661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13664, metadata !DIExpression()), !dbg !13665
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13666
  %3 = load i8, i8* %2, align 1, !dbg !13666
  %4 = and i8 %3, 4, !dbg !13667
  %5 = icmp eq i8 %4, 0, !dbg !13668
  ret i1 %5, !dbg !13669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.149(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13672, metadata !DIExpression()), !dbg !13673
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13674
  %3 = load i8, i8* %2, align 1, !dbg !13675
  %4 = and i8 %3, -5, !dbg !13675
  store i8 %4, i8* %2, align 1, !dbg !13675
  ret void, !dbg !13676
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !13677 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !13680, metadata !DIExpression()), !dbg !13681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13679, metadata !DIExpression()), !dbg !13681
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !13682
  br i1 %4, label %5, label %9, !dbg !13684

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !13685
  br i1 %6, label %7, label %9, !dbg !13686

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !13687, metadata !DIExpression()) #24, !dbg !13693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13692, metadata !DIExpression()) #24, !dbg !13693
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !13696
  br label %10, !dbg !13697

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !13103, metadata !DIExpression()) #24, !dbg !13698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !13698
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()) #24, !dbg !13701
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13703, !srcloc !13117
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !13704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !13705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13709, metadata !DIExpression()), !dbg !13710
  call void @llvm.dbg.value(metadata i32 %0, metadata !13711, metadata !DIExpression()), !dbg !13716
  %2 = icmp eq i32 %0, 0, !dbg !13718
  br i1 %2, label %3, label %6, !dbg !13719

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13720, !srcloc !13727
  call void @llvm.dbg.value(metadata i32 %4, metadata !13723, metadata !DIExpression()) #24, !dbg !13728
  %5 = icmp eq i32 %4, 0, !dbg !13729
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !13710
  ret i1 %7, !dbg !13730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !13731 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13734
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13733, metadata !DIExpression()), !dbg !13735
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13736
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !13737
  ret i1 %3, !dbg !13738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !13739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13741, metadata !DIExpression()), !dbg !13743
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !13744
  call void @llvm.dbg.value(metadata i32 %2, metadata !13742, metadata !DIExpression()), !dbg !13743
  ret i32 %2, !dbg !13745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13746 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13748, metadata !DIExpression()), !dbg !13752
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !13753
  call void @llvm.dbg.value(metadata i32 0, metadata !13749, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !13755
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13757, !srcloc !13091
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13757
  call void @llvm.dbg.value(metadata i32 %4, metadata !13088, metadata !DIExpression()) #24, !dbg !13759
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !13759
  call void @llvm.dbg.value(metadata i32 %4, metadata !13082, metadata !DIExpression()) #24, !dbg !13755
  call void @llvm.dbg.value(metadata i32 %4, metadata !13751, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i32 undef, metadata !13749, metadata !DIExpression()), !dbg !13754
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13760
  br i1 %5, label %6, label %10, !dbg !13764

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13245, metadata !DIExpression()) #24, !dbg !13765
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13768
  %8 = load i8, i8* %7, align 1, !dbg !13769
  %9 = and i8 %8, 127, !dbg !13769
  store i8 %9, i8* %7, align 1, !dbg !13769
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13253, metadata !DIExpression()) #24, !dbg !13770
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13772
  br label %10, !dbg !13773

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !13774
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13775
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !13776
  %13 = zext i1 %12 to i32, !dbg !13776
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !13777
  call void @llvm.dbg.value(metadata i32 %4, metadata !13103, metadata !DIExpression()) #24, !dbg !13778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !13778
  call void @llvm.dbg.value(metadata i32 %4, metadata !13111, metadata !DIExpression()) #24, !dbg !13780
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !13782, !srcloc !13117
  call void @llvm.dbg.value(metadata i32 1, metadata !13749, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.value(metadata i32 undef, metadata !13749, metadata !DIExpression()), !dbg !13754
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13783
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !13785
  br i1 %15, label %16, label %17, !dbg !13786

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !13787
  br label %17, !dbg !13789

17:                                               ; preds = %16, %10
  ret void, !dbg !13790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13791 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13793, metadata !DIExpression()), !dbg !13794
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13795
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13796
  ret i32 %3, !dbg !13797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13798 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13800, metadata !DIExpression()), !dbg !13801
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13802
  %3 = load i8, i8* %2, align 1, !dbg !13803
  %4 = or i8 %3, 16, !dbg !13803
  store i8 %4, i8* %2, align 1, !dbg !13803
  ret void, !dbg !13804
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !13805 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13806, !srcloc !13091
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13806
  call void @llvm.dbg.value(metadata i32 %2, metadata !13088, metadata !DIExpression()) #24, !dbg !13808
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !13808
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !13809
  ret void, !dbg !13810
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !13811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13813, metadata !DIExpression()), !dbg !13814
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !13815
  br i1 %2, label %3, label %5, !dbg !13817

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !13818
  br label %6, !dbg !13820

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13111, metadata !DIExpression()) #24, !dbg !13821
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !13824, !srcloc !13117
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !13825
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13826 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13828, metadata !DIExpression()), !dbg !13830
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !13831
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13833, !srcloc !13091
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13833
  call void @llvm.dbg.value(metadata i32 %3, metadata !13088, metadata !DIExpression()) #24, !dbg !13835
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !13835
  call void @llvm.dbg.value(metadata i32 %3, metadata !13082, metadata !DIExpression()) #24, !dbg !13831
  call void @llvm.dbg.value(metadata i32 %3, metadata !13829, metadata !DIExpression()), !dbg !13830
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !13836
  br i1 %4, label %6, label %5, !dbg !13838

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13103, metadata !DIExpression()) #24, !dbg !13839
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !13839
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()) #24, !dbg !13842
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13844, !srcloc !13117
  br label %8, !dbg !13845

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !13846
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13847
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13848
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !13848
  br label %8, !dbg !13849

8:                                                ; preds = %6, %5
  ret void, !dbg !13849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13852, metadata !DIExpression()), !dbg !13853
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13854
  %3 = load i8, i8* %2, align 1, !dbg !13854
  %4 = and i8 %3, 16, !dbg !13855
  %5 = icmp ne i8 %4, 0, !dbg !13856
  ret i1 %5, !dbg !13857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13858 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13860, metadata !DIExpression()), !dbg !13861
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13862
  %3 = load i8, i8* %2, align 1, !dbg !13863
  %4 = and i8 %3, -17, !dbg !13863
  store i8 %4, i8* %2, align 1, !dbg !13863
  ret void, !dbg !13864
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13865 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13875, metadata !DIExpression()), !dbg !13879
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13873, metadata !DIExpression()), !dbg !13879
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13874, metadata !DIExpression()), !dbg !13879
  call void @llvm.dbg.value(metadata i32 0, metadata !13876, metadata !DIExpression()), !dbg !13880
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !13881
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13883, !srcloc !13091
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13883
  call void @llvm.dbg.value(metadata i32 %5, metadata !13088, metadata !DIExpression()) #24, !dbg !13885
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !13885
  call void @llvm.dbg.value(metadata i32 %5, metadata !13082, metadata !DIExpression()) #24, !dbg !13881
  call void @llvm.dbg.value(metadata i32 %5, metadata !13878, metadata !DIExpression()), !dbg !13880
  call void @llvm.dbg.value(metadata i32 undef, metadata !13876, metadata !DIExpression()), !dbg !13880
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !13886
  call void @llvm.dbg.value(metadata i32 %5, metadata !13103, metadata !DIExpression()) #24, !dbg !13889
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !13889
  call void @llvm.dbg.value(metadata i32 %5, metadata !13111, metadata !DIExpression()) #24, !dbg !13891
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !13893, !srcloc !13117
  call void @llvm.dbg.value(metadata i32 1, metadata !13876, metadata !DIExpression()), !dbg !13880
  call void @llvm.dbg.value(metadata i32 undef, metadata !13876, metadata !DIExpression()), !dbg !13880
  ret void, !dbg !13894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13895 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13899, metadata !DIExpression()), !dbg !13900
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13897, metadata !DIExpression()), !dbg !13900
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13898, metadata !DIExpression()), !dbg !13900
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !13901
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !13902
  ret void, !dbg !13903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13904 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13908, metadata !DIExpression()), !dbg !13910
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13909, metadata !DIExpression()), !dbg !13910
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !13911
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !13912
  %3 = icmp eq %union.anon* %1, null, !dbg !13913
  br i1 %3, label %21, label %4, !dbg !13915

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13916
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13918
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13919
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13276, metadata !DIExpression()) #24, !dbg !13920
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13282, metadata !DIExpression()) #24, !dbg !13920
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !13922
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13283, metadata !DIExpression()) #24, !dbg !13920
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13923
  br i1 %8, label %19, label %9, !dbg !13922

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13283, metadata !DIExpression()) #24, !dbg !13920
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13924
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13283, metadata !DIExpression()) #24, !dbg !13920
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !13925
  %13 = icmp sgt i32 %12, 0, !dbg !13926
  br i1 %13, label %14, label %16, !dbg !13927

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13928
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !13929
  br label %21, !dbg !13930

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !13923
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13283, metadata !DIExpression()) #24, !dbg !13920
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13923
  br i1 %18, label %19, label %9, !dbg !13922, !llvm.loop !13931

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13933
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !13934
  br label %21, !dbg !13935

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13937 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13942, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13941, metadata !DIExpression()), !dbg !13943
  %4 = icmp eq i64 %3, -1, !dbg !13944
  br i1 %4, label %6, label %5, !dbg !13946

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.150(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !13947
  br label %6, !dbg !13949

6:                                                ; preds = %5, %2
  ret void, !dbg !13950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.150(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13951 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13954, metadata !DIExpression()), !dbg !13955
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13953, metadata !DIExpression()), !dbg !13955
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13956
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13957
  ret void, !dbg !13958
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13959 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13961, metadata !DIExpression()), !dbg !13969
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13970
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13970
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13962, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata i32 0, metadata !13963, metadata !DIExpression()), !dbg !13971
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !13972
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13974, !srcloc !13091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13088, metadata !DIExpression()) #24, !dbg !13976
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !13976
  call void @llvm.dbg.value(metadata i32 undef, metadata !13082, metadata !DIExpression()) #24, !dbg !13972
  call void @llvm.dbg.value(metadata i32 undef, metadata !13965, metadata !DIExpression()), !dbg !13971
  call void @llvm.dbg.value(metadata i32 undef, metadata !13963, metadata !DIExpression()), !dbg !13971
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13977
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !13978
  %7 = load i8, i8* %6, align 1, !dbg !13978
  %8 = and i8 %7, 40, !dbg !13979
  %9 = icmp eq i8 %8, 0, !dbg !13979
  call void @llvm.dbg.value(metadata i1 %9, metadata !13966, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13980
  br i1 %9, label %10, label %17, !dbg !13981

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13982
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !13982
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !13982
  %14 = icmp eq %union.anon* %13, null, !dbg !13986
  br i1 %14, label %16, label %15, !dbg !13987

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !13988
  br label %16, !dbg !13990

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.149(%struct.k_thread* noundef nonnull %3) #26, !dbg !13991
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !13992
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !13993
  br label %17, !dbg !13994

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !13974
  call void @llvm.dbg.value(metadata i32 %18, metadata !13088, metadata !DIExpression()) #24, !dbg !13976
  call void @llvm.dbg.value(metadata i32 %18, metadata !13082, metadata !DIExpression()) #24, !dbg !13972
  call void @llvm.dbg.value(metadata i32 %18, metadata !13965, metadata !DIExpression()), !dbg !13971
  call void @llvm.dbg.value(metadata i32 undef, metadata !13103, metadata !DIExpression()) #24, !dbg !13995
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !13995
  call void @llvm.dbg.value(metadata i32 undef, metadata !13111, metadata !DIExpression()) #24, !dbg !13997
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !13999, !srcloc !13117
  call void @llvm.dbg.value(metadata i32 1, metadata !13963, metadata !DIExpression()), !dbg !13971
  call void @llvm.dbg.value(metadata i32 undef, metadata !13963, metadata !DIExpression()), !dbg !13971
  ret void, !dbg !14000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14001 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14003, metadata !DIExpression()), !dbg !14004
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14005
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !14006
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14007
  store %union.anon* null, %union.anon** %2, align 8, !dbg !14008
  ret void, !dbg !14009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14010 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14012, metadata !DIExpression()), !dbg !14013
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14014
  %3 = load i8, i8* %2, align 1, !dbg !14015
  %4 = and i8 %3, -3, !dbg !14015
  store i8 %4, i8* %2, align 1, !dbg !14015
  ret void, !dbg !14016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14019, metadata !DIExpression()), !dbg !14020
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14021
  br i1 %2, label %3, label %7, !dbg !14023

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13245, metadata !DIExpression()) #24, !dbg !14024
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14027
  %5 = load i8, i8* %4, align 1, !dbg !14028
  %6 = and i8 %5, 127, !dbg !14028
  store i8 %6, i8* %4, align 1, !dbg !14028
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13253, metadata !DIExpression()) #24, !dbg !14029
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14031
  br label %7, !dbg !14032

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14033
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14034
  %10 = zext i1 %9 to i32, !dbg !14034
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !14035
  ret void, !dbg !14036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14037 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14039, metadata !DIExpression()), !dbg !14040
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14041
  %3 = load i8, i8* %2, align 1, !dbg !14042
  %4 = or i8 %3, 2, !dbg !14042
  store i8 %4, i8* %2, align 1, !dbg !14042
  ret void, !dbg !14043
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !14044 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14046, metadata !DIExpression()), !dbg !14050
  call void @llvm.dbg.value(metadata i32 0, metadata !14047, metadata !DIExpression()), !dbg !14051
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14052
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14054, !srcloc !13091
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14054
  call void @llvm.dbg.value(metadata i32 %3, metadata !13088, metadata !DIExpression()) #24, !dbg !14056
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14056
  call void @llvm.dbg.value(metadata i32 %3, metadata !13082, metadata !DIExpression()) #24, !dbg !14052
  call void @llvm.dbg.value(metadata i32 %3, metadata !14049, metadata !DIExpression()), !dbg !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()), !dbg !14051
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !14057
  call void @llvm.dbg.value(metadata i32 %3, metadata !13103, metadata !DIExpression()) #24, !dbg !14060
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !14060
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()) #24, !dbg !14062
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14064, !srcloc !13117
  call void @llvm.dbg.value(metadata i32 1, metadata !14047, metadata !DIExpression()), !dbg !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()), !dbg !14051
  ret void, !dbg !14065
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14066 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14072, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata i32 %0, metadata !14070, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14071, metadata !DIExpression()), !dbg !14077
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14078
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !14079
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14080
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14081
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14082
  call void @llvm.dbg.value(metadata i32 %6, metadata !14073, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata i32 0, metadata !14074, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14084
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14086, !srcloc !13091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13088, metadata !DIExpression()) #24, !dbg !14088
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14088
  call void @llvm.dbg.value(metadata i32 undef, metadata !13082, metadata !DIExpression()) #24, !dbg !14084
  call void @llvm.dbg.value(metadata i32 undef, metadata !14076, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()), !dbg !14083
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14089
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14093
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !14094
  br i1 %10, label %11, label %12, !dbg !14095

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14096
  br label %12, !dbg !14098

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !14086
  call void @llvm.dbg.value(metadata i32 %13, metadata !13088, metadata !DIExpression()) #24, !dbg !14088
  call void @llvm.dbg.value(metadata i32 %13, metadata !13082, metadata !DIExpression()) #24, !dbg !14084
  call void @llvm.dbg.value(metadata i32 %13, metadata !14076, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata i32 undef, metadata !13103, metadata !DIExpression()) #24, !dbg !14099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !14099
  call void @llvm.dbg.value(metadata i32 undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14101
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !14103, !srcloc !13117
  call void @llvm.dbg.value(metadata i32 1, metadata !14074, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata i32 undef, metadata !14074, metadata !DIExpression()), !dbg !14083
  ret i32 %6, !dbg !14104
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14105 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14110, metadata !DIExpression()), !dbg !14113
  call void @llvm.dbg.value(metadata i64 undef, metadata !14112, metadata !DIExpression()), !dbg !14113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14109, metadata !DIExpression()), !dbg !14113
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14111, metadata !DIExpression()), !dbg !14113
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14114
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14116
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14118, !srcloc !13091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13088, metadata !DIExpression()) #24, !dbg !14120
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14120
  call void @llvm.dbg.value(metadata i32 undef, metadata !13082, metadata !DIExpression()) #24, !dbg !14116
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14121
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !14122
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !13687, metadata !DIExpression()) #24, !dbg !14123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13692, metadata !DIExpression()) #24, !dbg !14123
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !14125
  ret i32 %9, !dbg !14126
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14127 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14131, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14132, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.value(metadata i32 0, metadata !14133, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14138
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14140, !srcloc !13091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13088, metadata !DIExpression()) #24, !dbg !14142
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14142
  call void @llvm.dbg.value(metadata i32 undef, metadata !13082, metadata !DIExpression()) #24, !dbg !14138
  call void @llvm.dbg.value(metadata i32 undef, metadata !14135, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14132, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.value(metadata i32 undef, metadata !14133, metadata !DIExpression()), !dbg !14137
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14143
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14132, metadata !DIExpression()), !dbg !14136
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14146
  br i1 %5, label %7, label %6, !dbg !14148

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14149
  br label %7, !dbg !14151

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14140
  call void @llvm.dbg.value(metadata i32 %8, metadata !13088, metadata !DIExpression()) #24, !dbg !14142
  call void @llvm.dbg.value(metadata i32 %8, metadata !13082, metadata !DIExpression()) #24, !dbg !14138
  call void @llvm.dbg.value(metadata i32 %8, metadata !14135, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata i32 undef, metadata !13103, metadata !DIExpression()) #24, !dbg !14152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !14152
  call void @llvm.dbg.value(metadata i32 undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14154
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !14156, !srcloc !13117
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14132, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.value(metadata i32 undef, metadata !14133, metadata !DIExpression()), !dbg !14137
  ret %struct.k_thread* %4, !dbg !14157
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14158 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14160, metadata !DIExpression()), !dbg !14165
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14161, metadata !DIExpression()), !dbg !14165
  call void @llvm.dbg.value(metadata i32 0, metadata !14162, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14167
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14169, !srcloc !13091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13088, metadata !DIExpression()) #24, !dbg !14171
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14171
  call void @llvm.dbg.value(metadata i32 undef, metadata !13082, metadata !DIExpression()) #24, !dbg !14167
  call void @llvm.dbg.value(metadata i32 undef, metadata !14164, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14161, metadata !DIExpression()), !dbg !14165
  call void @llvm.dbg.value(metadata i32 undef, metadata !14162, metadata !DIExpression()), !dbg !14166
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14172
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14161, metadata !DIExpression()), !dbg !14165
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14175
  br i1 %5, label %8, label %6, !dbg !14177

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14178
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14180
  br label %8, !dbg !14181

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14169
  call void @llvm.dbg.value(metadata i32 %9, metadata !13088, metadata !DIExpression()) #24, !dbg !14171
  call void @llvm.dbg.value(metadata i32 %9, metadata !13082, metadata !DIExpression()) #24, !dbg !14167
  call void @llvm.dbg.value(metadata i32 %9, metadata !14164, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i32 undef, metadata !13103, metadata !DIExpression()) #24, !dbg !14182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !14182
  call void @llvm.dbg.value(metadata i32 undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14184
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !14186, !srcloc !13117
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14161, metadata !DIExpression()), !dbg !14165
  call void @llvm.dbg.value(metadata i32 undef, metadata !14162, metadata !DIExpression()), !dbg !14166
  ret %struct.k_thread* %4, !dbg !14187
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14188 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14190, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14046, metadata !DIExpression()) #24, !dbg !14192
  call void @llvm.dbg.value(metadata i32 0, metadata !14047, metadata !DIExpression()) #24, !dbg !14194
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14195
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14197, !srcloc !13091
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14197
  call void @llvm.dbg.value(metadata i32 %3, metadata !13088, metadata !DIExpression()) #24, !dbg !14199
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14199
  call void @llvm.dbg.value(metadata i32 %3, metadata !13082, metadata !DIExpression()) #24, !dbg !14195
  call void @llvm.dbg.value(metadata i32 %3, metadata !14049, metadata !DIExpression()) #24, !dbg !14194
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #24, !dbg !14194
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14200
  call void @llvm.dbg.value(metadata i32 %3, metadata !13103, metadata !DIExpression()) #24, !dbg !14201
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !14201
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()) #24, !dbg !14203
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14205, !srcloc !13117
  call void @llvm.dbg.value(metadata i32 1, metadata !14047, metadata !DIExpression()) #24, !dbg !14194
  call void @llvm.dbg.value(metadata i32 undef, metadata !14047, metadata !DIExpression()) #24, !dbg !14194
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14206
  ret void, !dbg !14207
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()), !dbg !14216
  call void @llvm.dbg.value(metadata i32 %1, metadata !14211, metadata !DIExpression()), !dbg !14216
  call void @llvm.dbg.value(metadata i8 0, metadata !14212, metadata !DIExpression()), !dbg !14216
  call void @llvm.dbg.value(metadata i32 0, metadata !14213, metadata !DIExpression()), !dbg !14217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14218
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14220, !srcloc !13091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13088, metadata !DIExpression()) #24, !dbg !14222
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14222
  call void @llvm.dbg.value(metadata i32 undef, metadata !13082, metadata !DIExpression()) #24, !dbg !14218
  call void @llvm.dbg.value(metadata i32 undef, metadata !14215, metadata !DIExpression()), !dbg !14217
  call void @llvm.dbg.value(metadata i8 poison, metadata !14212, metadata !DIExpression()), !dbg !14216
  call void @llvm.dbg.value(metadata i32 undef, metadata !14213, metadata !DIExpression()), !dbg !14217
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14223
  call void @llvm.dbg.value(metadata i1 %6, metadata !14212, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14216
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14226

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13245, metadata !DIExpression()) #24, !dbg !14227
  %11 = load i8, i8* %4, align 1, !dbg !14233
  %12 = and i8 %11, 127, !dbg !14233
  store i8 %12, i8* %4, align 1, !dbg !14233
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13253, metadata !DIExpression()) #24, !dbg !14234
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14236
  store i8 %9, i8* %8, align 2, !dbg !14237
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13262, metadata !DIExpression()) #24, !dbg !14238
  %13 = load i8, i8* %4, align 1, !dbg !14240
  %14 = or i8 %13, -128, !dbg !14240
  store i8 %14, i8* %4, align 1, !dbg !14240
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13269, metadata !DIExpression()) #24, !dbg !14241
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13276, metadata !DIExpression()) #24, !dbg !14243
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13282, metadata !DIExpression()) #24, !dbg !14243
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14245
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13283, metadata !DIExpression()) #24, !dbg !14243
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14246
  br i1 %16, label %26, label %17, !dbg !14245

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13283, metadata !DIExpression()) #24, !dbg !14243
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14247
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13283, metadata !DIExpression()) #24, !dbg !14243
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !14248
  %21 = icmp sgt i32 %20, 0, !dbg !14249
  br i1 %21, label %22, label %23, !dbg !14250

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !14251
  br label %27, !dbg !14252

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !14246
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13283, metadata !DIExpression()) #24, !dbg !14243
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14246
  br i1 %25, label %26, label %17, !dbg !14245, !llvm.loop !14253

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !14255
  br label %27, !dbg !14256

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14257
  br label %29, !dbg !14258

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14259
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14220
  call void @llvm.dbg.value(metadata i32 %30, metadata !13088, metadata !DIExpression()) #24, !dbg !14222
  call void @llvm.dbg.value(metadata i32 %30, metadata !13082, metadata !DIExpression()) #24, !dbg !14218
  call void @llvm.dbg.value(metadata i32 %30, metadata !14215, metadata !DIExpression()), !dbg !14217
  call void @llvm.dbg.value(metadata i32 undef, metadata !13103, metadata !DIExpression()) #24, !dbg !14261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !14261
  call void @llvm.dbg.value(metadata i32 undef, metadata !13111, metadata !DIExpression()) #24, !dbg !14263
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !14265, !srcloc !13117
  call void @llvm.dbg.value(metadata i8 poison, metadata !14212, metadata !DIExpression()), !dbg !14216
  call void @llvm.dbg.value(metadata i32 undef, metadata !14213, metadata !DIExpression()), !dbg !14217
  ret i1 %6, !dbg !14266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14267 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14271, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i32 %1, metadata !14272, metadata !DIExpression()), !dbg !14274
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14275
  call void @llvm.dbg.value(metadata i1 %3, metadata !14273, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14274
  br i1 %3, label %4, label %12, !dbg !14276

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14278
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14279
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14279
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14279
  %9 = load i8, i8* %8, align 1, !dbg !14279
  %10 = icmp eq i8 %9, 0, !dbg !14280
  br i1 %10, label %11, label %12, !dbg !14281

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14282
  br label %12, !dbg !14284

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14285
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14286 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14288, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14292
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14294, !srcloc !13091
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14294
  call void @llvm.dbg.value(metadata i32 %2, metadata !13088, metadata !DIExpression()) #24, !dbg !14296
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14296
  call void @llvm.dbg.value(metadata i32 %2, metadata !13082, metadata !DIExpression()) #24, !dbg !14292
  call void @llvm.dbg.value(metadata i32 %2, metadata !14290, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.value(metadata i32 undef, metadata !14288, metadata !DIExpression()), !dbg !14291
  tail call fastcc void @z_sched_lock() #26, !dbg !14297
  call void @llvm.dbg.value(metadata i32 %2, metadata !13103, metadata !DIExpression()) #24, !dbg !14300
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !14300
  call void @llvm.dbg.value(metadata i32 %2, metadata !13111, metadata !DIExpression()) #24, !dbg !14302
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14304, !srcloc !13117
  call void @llvm.dbg.value(metadata i32 1, metadata !14288, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.value(metadata i32 undef, metadata !14288, metadata !DIExpression()), !dbg !14291
  ret void, !dbg !14305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14306 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14307
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14308
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14308
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14308
  %5 = load i8, i8* %4, align 1, !dbg !14309
  %6 = add i8 %5, -1, !dbg !14309
  store i8 %6, i8* %4, align 1, !dbg !14309
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14310, !srcloc !14312
  ret void, !dbg !14313
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14314 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14316, metadata !DIExpression()), !dbg !14319
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14320
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14322, !srcloc !13091
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14322
  call void @llvm.dbg.value(metadata i32 %2, metadata !13088, metadata !DIExpression()) #24, !dbg !14324
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14324
  call void @llvm.dbg.value(metadata i32 %2, metadata !13082, metadata !DIExpression()) #24, !dbg !14320
  call void @llvm.dbg.value(metadata i32 %2, metadata !14318, metadata !DIExpression()), !dbg !14319
  call void @llvm.dbg.value(metadata i32 undef, metadata !14316, metadata !DIExpression()), !dbg !14319
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14325
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14328
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14328
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14328
  %7 = load i8, i8* %6, align 1, !dbg !14329
  %8 = add i8 %7, 1, !dbg !14329
  store i8 %8, i8* %6, align 1, !dbg !14329
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14330
  call void @llvm.dbg.value(metadata i32 %2, metadata !13103, metadata !DIExpression()) #24, !dbg !14331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !14331
  call void @llvm.dbg.value(metadata i32 %2, metadata !13111, metadata !DIExpression()) #24, !dbg !14333
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14335, !srcloc !13117
  call void @llvm.dbg.value(metadata i32 1, metadata !14316, metadata !DIExpression()), !dbg !14319
  call void @llvm.dbg.value(metadata i32 undef, metadata !14316, metadata !DIExpression()), !dbg !14319
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14336
  ret void, !dbg !14337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14338 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14339
  ret %struct.k_thread* %1, !dbg !14340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14341 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14345, metadata !DIExpression()), !dbg !14350
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14346, metadata !DIExpression()), !dbg !14350
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14351
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14347, metadata !DIExpression()), !dbg !14350
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14352
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14348, metadata !DIExpression()), !dbg !14350
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !14353
  call void @llvm.dbg.value(metadata i32 %5, metadata !14349, metadata !DIExpression()), !dbg !14350
  %6 = icmp sgt i32 %5, 0, !dbg !14354
  br i1 %6, label %17, label %7, !dbg !14356

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14357
  br i1 %8, label %17, label %9, !dbg !14359

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14360
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14360
  %12 = load i32, i32* %11, align 8, !dbg !14360
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14362
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14362
  %15 = load i32, i32* %14, align 8, !dbg !14362
  %16 = icmp ult i32 %12, %15, !dbg !14363
  br label %17, !dbg !14364

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14365
  ret i1 %18, !dbg !14366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14367 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14384, metadata !DIExpression()), !dbg !14399
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14385, metadata !DIExpression()), !dbg !14399
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14400
  %5 = load i32, i32* %4, align 4, !dbg !14401
  %6 = add nsw i32 %5, 1, !dbg !14401
  store i32 %6, i32* %4, align 4, !dbg !14401
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14402
  store i32 %5, i32* %7, align 8, !dbg !14403
  %8 = load i32, i32* %4, align 4, !dbg !14404
  %9 = icmp eq i32 %8, 0, !dbg !14405
  br i1 %9, label %10, label %32, !dbg !14406

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14407
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14407
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14387, metadata !DIExpression()), !dbg !14407
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14407
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14407
  %14 = load i32, i32* %13, align 4, !dbg !14407
  %15 = shl i32 %14, 2, !dbg !14407
  %16 = alloca i8, i32 %15, align 8, !dbg !14407
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14407
  store i8* %16, i8** %17, align 4, !dbg !14407
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14407
  %19 = alloca i8, i32 %14, align 8, !dbg !14407
  store i8* %19, i8** %18, align 4, !dbg !14407
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14407
  store i32 -1, i32* %20, align 4, !dbg !14407
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14408
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14396, metadata !DIExpression()), !dbg !14409
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14386, metadata !DIExpression()), !dbg !14399
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14410
  br i1 %22, label %23, label %24, !dbg !14407

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14410
  br label %32, !dbg !14411

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14386, metadata !DIExpression()), !dbg !14399
  %26 = load i32, i32* %4, align 4, !dbg !14412
  %27 = add nsw i32 %26, 1, !dbg !14412
  store i32 %27, i32* %4, align 4, !dbg !14412
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14414
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14414
  store i32 %26, i32* %29, align 8, !dbg !14415
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14408
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14396, metadata !DIExpression()), !dbg !14409
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14386, metadata !DIExpression()), !dbg !14399
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14410
  br i1 %31, label %23, label %24, !dbg !14407, !llvm.loop !14416

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14418
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14419
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !14420
  ret void, !dbg !14421
}

; Function Attrs: optsize
declare !dbg !14422 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14427 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14430 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14432, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14433, metadata !DIExpression()), !dbg !14434
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14435
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14436
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !14437
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14438
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14438
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14440
  br i1 %7, label %8, label %10, !dbg !14441

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14442
  store i32 0, i32* %9, align 4, !dbg !14444
  br label %10, !dbg !14445

10:                                               ; preds = %8, %2
  ret void, !dbg !14446
}

; Function Attrs: optsize
declare !dbg !14447 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14448 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14452, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14453, metadata !DIExpression()), !dbg !14455
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14456
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !14457
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14454, metadata !DIExpression()), !dbg !14455
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14453, metadata !DIExpression()), !dbg !14455
  ret %struct.k_thread* %4, !dbg !14458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14459 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14463, metadata !DIExpression()), !dbg !14464
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !14465
  ret %struct.rbnode* %2, !dbg !14466
}

; Function Attrs: optsize
declare !dbg !14467 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !14470 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14480, metadata !DIExpression()), !dbg !14484
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14485
  %3 = load i32, i32* %2, align 4, !dbg !14485
  %4 = icmp eq i32 %3, 0, !dbg !14487
  br i1 %4, label %10, label %5, !dbg !14488

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14481, metadata !DIExpression()), !dbg !14484
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14489, !range !3454
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14490
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14482, metadata !DIExpression()), !dbg !14484
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !14491
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14483, metadata !DIExpression()), !dbg !14484
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14481, metadata !DIExpression()), !dbg !14484
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14484
  ret %struct.k_thread* %11, !dbg !14492
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14493 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14497, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.value(metadata i32 0, metadata !14498, metadata !DIExpression()), !dbg !14500
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14501
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14499, metadata !DIExpression()), !dbg !14500
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14502
  br i1 %3, label %8, label %4, !dbg !14503

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14504
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14506
  call void @llvm.dbg.value(metadata i32 1, metadata !14498, metadata !DIExpression()), !dbg !14500
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14501
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14499, metadata !DIExpression()), !dbg !14500
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14502
  br i1 %7, label %8, label %4, !dbg !14503, !llvm.loop !14507

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14500
  ret i32 %9, !dbg !14509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !14510 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14512, metadata !DIExpression()), !dbg !14513
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14514
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !14515
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14516
  ret %struct.k_thread* %4, !dbg !14517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !14518 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !14527, metadata !DIExpression()), !dbg !14528
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !14529
  tail call fastcc void @sys_dlist_init.157(%struct._dnode* noundef nonnull %2) #26, !dbg !14530
  ret void, !dbg !14531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.157(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14532 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14536, metadata !DIExpression()), !dbg !14537
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14538
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14539
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14540
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14541
  ret void, !dbg !14542
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !14543 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !14544
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !14545
  ret void, !dbg !14546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !14547 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14552, metadata !DIExpression()), !dbg !14553
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14554
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !14554
  %4 = load i8, i8* %3, align 2, !dbg !14554
  %5 = sext i8 %4 to i32, !dbg !14555
  ret i32 %5, !dbg !14556
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14557 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14561, metadata !DIExpression()), !dbg !14564
  call void @llvm.dbg.value(metadata i32 %1, metadata !14562, metadata !DIExpression()), !dbg !14564
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14563, metadata !DIExpression()), !dbg !14564
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14565
  ret void, !dbg !14566
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !14567 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !14568
  br i1 %1, label %8, label %2, !dbg !14569

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !14570
  br i1 %3, label %8, label %4, !dbg !14571

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14572
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !14573
  %7 = xor i1 %6, true, !dbg !14571
  br label %8, !dbg !14571

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !14574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !14575 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14576, !range !6591
  %2 = icmp eq i8 %1, 0, !dbg !14576
  ret i1 %2, !dbg !14577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !14578 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14581
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14583, !srcloc !13091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13088, metadata !DIExpression()) #24, !dbg !14585
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14585
  call void @llvm.dbg.value(metadata i32 undef, metadata !13082, metadata !DIExpression()) #24, !dbg !14581
  call void @llvm.dbg.value(metadata i32 undef, metadata !14580, metadata !DIExpression()), !dbg !14586
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14587
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13245, metadata !DIExpression()) #24, !dbg !14590
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !14592
  %4 = load i8, i8* %3, align 1, !dbg !14593
  %5 = and i8 %4, 127, !dbg !14593
  store i8 %5, i8* %3, align 1, !dbg !14593
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13253, metadata !DIExpression()) #24, !dbg !14594
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !14596
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14597
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13262, metadata !DIExpression()) #24, !dbg !14598
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !14600
  %8 = load i8, i8* %7, align 1, !dbg !14601
  %9 = or i8 %8, -128, !dbg !14601
  store i8 %9, i8* %7, align 1, !dbg !14601
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13269, metadata !DIExpression()) #24, !dbg !14602
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13276, metadata !DIExpression()) #24, !dbg !14604
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13282, metadata !DIExpression()) #24, !dbg !14604
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14606
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13283, metadata !DIExpression()) #24, !dbg !14604
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14607
  br i1 %11, label %22, label %12, !dbg !14606

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13283, metadata !DIExpression()) #24, !dbg !14604
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14608
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13283, metadata !DIExpression()) #24, !dbg !14604
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !14609
  %16 = icmp sgt i32 %15, 0, !dbg !14610
  br i1 %16, label %17, label %19, !dbg !14611

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14612
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !14613
  br label %24, !dbg !14614

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !14607
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13283, metadata !DIExpression()) #24, !dbg !14604
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14607
  br i1 %21, label %22, label %12, !dbg !14606, !llvm.loop !14615

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14617
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !14618
  br label %24, !dbg !14619

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !14583
  call void @llvm.dbg.value(metadata i32 %25, metadata !13088, metadata !DIExpression()) #24, !dbg !14585
  call void @llvm.dbg.value(metadata i32 %25, metadata !13082, metadata !DIExpression()) #24, !dbg !14581
  call void @llvm.dbg.value(metadata i32 %25, metadata !14580, metadata !DIExpression()), !dbg !14586
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14620
  call void @llvm.dbg.value(metadata i32 undef, metadata !13687, metadata !DIExpression()) #24, !dbg !14621
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13692, metadata !DIExpression()) #24, !dbg !14621
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !14623
  ret void, !dbg !14624
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !14625 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14629, metadata !DIExpression()), !dbg !14632
  %3 = icmp eq i64 %2, -1, !dbg !14633
  br i1 %3, label %4, label %6, !dbg !14635

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14636
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !14638
  br label %11, !dbg !14639

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14630, metadata !DIExpression()), !dbg !14632
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !14640
  %8 = sext i32 %7 to i64, !dbg !14640
  call void @llvm.dbg.value(metadata i64 %8, metadata !14630, metadata !DIExpression()), !dbg !14632
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !14641
  %10 = trunc i64 %9 to i32, !dbg !14641
  call void @llvm.dbg.value(metadata i32 %10, metadata !14631, metadata !DIExpression()), !dbg !14632
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !14632
  ret i32 %12, !dbg !14642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14643 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14647, metadata !DIExpression()), !dbg !14648
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14649, !srcloc !14651
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !14652
  ret void, !dbg !14653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !14654 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14658, metadata !DIExpression()), !dbg !14662
  %2 = icmp eq i64 %0, 0, !dbg !14663
  br i1 %2, label %3, label %4, !dbg !14665

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !14666
  br label %29, !dbg !14668

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !14660, metadata !DIExpression()), !dbg !14662
  %5 = icmp sgt i64 %0, -3, !dbg !14669
  br i1 %5, label %6, label %10, !dbg !14671

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14672
  %8 = trunc i64 %0 to i32, !dbg !14674
  %9 = add i32 %7, %8, !dbg !14674
  call void @llvm.dbg.value(metadata i32 %9, metadata !14659, metadata !DIExpression()), !dbg !14662
  br label %13, !dbg !14675

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !14676
  %12 = sub i32 -2, %11, !dbg !14676
  call void @llvm.dbg.value(metadata i32 %12, metadata !14659, metadata !DIExpression()), !dbg !14662
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !14678
  call void @llvm.dbg.value(metadata i32 %14, metadata !14659, metadata !DIExpression()), !dbg !14662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14679
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14681, !srcloc !13091
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !14681
  call void @llvm.dbg.value(metadata i32 %16, metadata !13088, metadata !DIExpression()) #24, !dbg !14683
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14683
  call void @llvm.dbg.value(metadata i32 %16, metadata !13082, metadata !DIExpression()) #24, !dbg !14679
  call void @llvm.dbg.value(metadata i32 %16, metadata !14661, metadata !DIExpression()), !dbg !14662
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14684
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !14685
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !14686
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14687
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !14688
  tail call fastcc void @z_add_thread_timeout.150(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !14688
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14689
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !14690
  call void @llvm.dbg.value(metadata i32 %16, metadata !13687, metadata !DIExpression()) #24, !dbg !14691
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13692, metadata !DIExpression()) #24, !dbg !14691
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !14693
  %22 = zext i32 %14 to i64, !dbg !14694
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14695
  %24 = zext i32 %23 to i64, !dbg !14695
  %25 = sub nsw i64 %22, %24, !dbg !14696
  call void @llvm.dbg.value(metadata i64 %25, metadata !14658, metadata !DIExpression()), !dbg !14662
  %26 = icmp sgt i64 %25, 0, !dbg !14697
  %27 = select i1 %26, i64 %25, i64 0, !dbg !14697
  %28 = trunc i64 %27 to i32, !dbg !14697
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !14662
  ret i32 %30, !dbg !14698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !14699 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14701, metadata !DIExpression()), !dbg !14702
  call void @llvm.dbg.value(metadata i64 %0, metadata !13123, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i32 10000, metadata !13126, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i32 1000, metadata !13127, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i8 1, metadata !13128, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i1 false, metadata !13129, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14703
  call void @llvm.dbg.value(metadata i1 false, metadata !13130, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14703
  call void @llvm.dbg.value(metadata i8 0, metadata !13131, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i1 false, metadata !13132, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14703
  call void @llvm.dbg.value(metadata i1 true, metadata !13133, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14703
  call void @llvm.dbg.value(metadata i64 0, metadata !13134, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i64 0, metadata !13134, metadata !DIExpression()), !dbg !14703
  call void @llvm.dbg.value(metadata i64 %0, metadata !13123, metadata !DIExpression()), !dbg !14703
  %2 = udiv i64 %0, 10, !dbg !14705
  ret i64 %2, !dbg !14709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !14710 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14711, !srcloc !14713
  tail call void @z_impl_k_yield() #26, !dbg !14714
  ret void, !dbg !14715
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !14716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14720, metadata !DIExpression()), !dbg !14722
  %2 = sext i32 %0 to i64, !dbg !14723
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !14724
  call void @llvm.dbg.value(metadata i64 %3, metadata !14721, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14722
  %4 = shl i64 %3, 32, !dbg !14725
  %5 = ashr exact i64 %4, 32, !dbg !14725
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !14726
  call void @llvm.dbg.value(metadata i32 %6, metadata !14721, metadata !DIExpression()), !dbg !14722
  %7 = sext i32 %6 to i64, !dbg !14727
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !14728
  %9 = trunc i64 %8 to i32, !dbg !14728
  ret i32 %9, !dbg !14729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !14730 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14732, metadata !DIExpression()), !dbg !14733
  call void @llvm.dbg.value(metadata i64 %0, metadata !13123, metadata !DIExpression()), !dbg !14734
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13126, metadata !DIExpression()), !dbg !14734
  call void @llvm.dbg.value(metadata i32 10000, metadata !13127, metadata !DIExpression()), !dbg !14734
  call void @llvm.dbg.value(metadata i8 1, metadata !13128, metadata !DIExpression()), !dbg !14734
  call void @llvm.dbg.value(metadata i1 false, metadata !13129, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14734
  call void @llvm.dbg.value(metadata i1 true, metadata !13130, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14734
  call void @llvm.dbg.value(metadata i8 0, metadata !13131, metadata !DIExpression()), !dbg !14734
  call void @llvm.dbg.value(metadata i1 false, metadata !13132, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14734
  call void @llvm.dbg.value(metadata i1 true, metadata !13133, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14734
  call void @llvm.dbg.value(metadata i64 0, metadata !13134, metadata !DIExpression()), !dbg !14734
  call void @llvm.dbg.value(metadata i64 0, metadata !13134, metadata !DIExpression()), !dbg !14734
  %2 = add i64 %0, 99, !dbg !14736
  call void @llvm.dbg.value(metadata i64 %2, metadata !13123, metadata !DIExpression()), !dbg !14734
  %3 = udiv i64 %2, 100, !dbg !14737
  ret i64 %3, !dbg !14738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !14739 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14741, metadata !DIExpression()), !dbg !14742
  call void @llvm.dbg.value(metadata i64 %0, metadata !13123, metadata !DIExpression()), !dbg !14743
  call void @llvm.dbg.value(metadata i32 10000, metadata !13126, metadata !DIExpression()), !dbg !14743
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13127, metadata !DIExpression()), !dbg !14743
  call void @llvm.dbg.value(metadata i8 1, metadata !13128, metadata !DIExpression()), !dbg !14743
  call void @llvm.dbg.value(metadata i1 false, metadata !13129, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14743
  call void @llvm.dbg.value(metadata i1 false, metadata !13130, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14743
  call void @llvm.dbg.value(metadata i8 0, metadata !13131, metadata !DIExpression()), !dbg !14743
  call void @llvm.dbg.value(metadata i1 true, metadata !13132, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14743
  call void @llvm.dbg.value(metadata i1 false, metadata !13133, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14743
  call void @llvm.dbg.value(metadata i64 0, metadata !13134, metadata !DIExpression()), !dbg !14743
  call void @llvm.dbg.value(metadata i64 0, metadata !13134, metadata !DIExpression()), !dbg !14743
  %2 = mul i64 %0, 100, !dbg !14745
  ret i64 %2, !dbg !14747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14748 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14750, metadata !DIExpression()), !dbg !14751
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !14752
  br i1 %2, label %14, label %3, !dbg !14754

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14755
  %5 = icmp slt i32 %4, 0, !dbg !14757
  br i1 %5, label %6, label %10, !dbg !14758

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14759
  %8 = load i8, i8* %7, align 1, !dbg !14759
  %9 = icmp eq i8 %8, 16, !dbg !14762
  br i1 %9, label %10, label %14, !dbg !14763

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14764
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14765
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14766, !srcloc !13727
  call void @llvm.dbg.value(metadata i32 %11, metadata !13723, metadata !DIExpression()) #24, !dbg !14770
  %12 = icmp eq i32 %11, 0, !dbg !14771
  br i1 %12, label %13, label %14, !dbg !14772

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14773
  br label %14, !dbg !14775

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !14776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14777 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14779, metadata !DIExpression()), !dbg !14780
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14781
  %3 = load i8, i8* %2, align 1, !dbg !14781
  %4 = and i8 %3, 2, !dbg !14782
  %5 = icmp ne i8 %4, 0, !dbg !14783
  ret i1 %5, !dbg !14784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !14785 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14790
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14789, metadata !DIExpression()), !dbg !14791
  ret %struct.k_thread* %1, !dbg !14792
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !14793 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14794, !srcloc !13727
  call void @llvm.dbg.value(metadata i32 %1, metadata !13723, metadata !DIExpression()) #24, !dbg !14797
  %2 = icmp eq i32 %1, 0, !dbg !14798
  br i1 %2, label %3, label %8, !dbg !14799

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14800
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !14801
  %6 = icmp ne i32 %5, 0, !dbg !14799
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14802
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14803 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14805, metadata !DIExpression()), !dbg !14807
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14808
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14810, !srcloc !13091
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14810
  call void @llvm.dbg.value(metadata i32 %3, metadata !13088, metadata !DIExpression()) #24, !dbg !14812
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14812
  call void @llvm.dbg.value(metadata i32 %3, metadata !13082, metadata !DIExpression()) #24, !dbg !14808
  call void @llvm.dbg.value(metadata i32 %3, metadata !14806, metadata !DIExpression()), !dbg !14807
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14813
  %5 = load i8, i8* %4, align 4, !dbg !14813
  %6 = and i8 %5, 1, !dbg !14815
  %7 = icmp eq i8 %6, 0, !dbg !14816
  br i1 %7, label %9, label %8, !dbg !14817

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13103, metadata !DIExpression()) #24, !dbg !14818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !14818
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()) #24, !dbg !14821
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14823, !srcloc !13117
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !14824, !srcloc !14826
  br label %24, !dbg !14827

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14828
  %11 = load i8, i8* %10, align 1, !dbg !14828
  %12 = and i8 %11, 8, !dbg !14830
  %13 = icmp eq i8 %12, 0, !dbg !14831
  br i1 %13, label %15, label %14, !dbg !14832

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !13103, metadata !DIExpression()) #24, !dbg !14833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !14833
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()) #24, !dbg !14836
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14838, !srcloc !13117
  br label %24, !dbg !14839

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !14840
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14841
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14843
  br i1 %17, label %18, label %23, !dbg !14844

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14845, !srcloc !13727
  call void @llvm.dbg.value(metadata i32 %19, metadata !13723, metadata !DIExpression()) #24, !dbg !14848
  %20 = icmp eq i32 %19, 0, !dbg !14849
  br i1 %20, label %21, label %23, !dbg !14850

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !13687, metadata !DIExpression()) #24, !dbg !14851
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13692, metadata !DIExpression()) #24, !dbg !14851
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14854
  br label %23, !dbg !14855

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !13103, metadata !DIExpression()) #24, !dbg !14856
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !14856
  call void @llvm.dbg.value(metadata i32 %3, metadata !13111, metadata !DIExpression()) #24, !dbg !14858
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14860, !srcloc !13117
  br label %24, !dbg !14861

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !14861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14862 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14864, metadata !DIExpression()), !dbg !14865
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14866
  %3 = load i8, i8* %2, align 1, !dbg !14866
  %4 = and i8 %3, 8, !dbg !14868
  %5 = icmp eq i8 %4, 0, !dbg !14869
  br i1 %5, label %6, label %20, !dbg !14870

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14871
  %8 = or i8 %7, 8, !dbg !14871
  store i8 %8, i8* %2, align 1, !dbg !14871
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !14873
  br i1 %9, label %10, label %12, !dbg !14875

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13245, metadata !DIExpression()) #24, !dbg !14876
  %11 = and i8 %8, 95, !dbg !14879
  store i8 %11, i8* %2, align 1, !dbg !14879
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13253, metadata !DIExpression()) #24, !dbg !14880
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !14882
  br label %12, !dbg !14883

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14884
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14884
  %15 = icmp eq %union.anon* %14, null, !dbg !14886
  br i1 %15, label %17, label %16, !dbg !14887

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14888
  br label %17, !dbg !14890

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14891
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14892
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !14893
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14894
  br label %20, !dbg !14895

20:                                               ; preds = %17, %1
  ret void, !dbg !14896
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14897 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14901, metadata !DIExpression()), !dbg !14903
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14904
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14902, metadata !DIExpression()), !dbg !14903
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14905
  br i1 %3, label %10, label %4, !dbg !14906

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14907
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14909
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14910, metadata !DIExpression()), !dbg !14916
  call void @llvm.dbg.value(metadata i32 0, metadata !14915, metadata !DIExpression()), !dbg !14916
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14918
  store i32 0, i32* %7, align 4, !dbg !14919
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14920
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14904
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14902, metadata !DIExpression()), !dbg !14903
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14905
  br i1 %9, label %10, label %4, !dbg !14906, !llvm.loop !14921

10:                                               ; preds = %4, %1
  ret void, !dbg !14923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14924 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14929, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14928, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14933
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14935, !srcloc !13091
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14935
  call void @llvm.dbg.value(metadata i32 %4, metadata !13088, metadata !DIExpression()) #24, !dbg !14937
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14937
  call void @llvm.dbg.value(metadata i32 %4, metadata !13082, metadata !DIExpression()) #24, !dbg !14933
  call void @llvm.dbg.value(metadata i32 %4, metadata !14930, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i32 0, metadata !14931, metadata !DIExpression()), !dbg !14932
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14938
  %6 = load i8, i8* %5, align 1, !dbg !14938
  %7 = and i8 %6, 8, !dbg !14940
  %8 = icmp eq i8 %7, 0, !dbg !14941
  br i1 %8, label %9, label %24, !dbg !14942

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14929, metadata !DIExpression()), !dbg !14932
  %11 = icmp eq i64 %10, 0, !dbg !14943
  br i1 %11, label %24, label %12, !dbg !14945

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14946
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14948
  br i1 %14, label %24, label %15, !dbg !14949

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14950
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !14950
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14951
  %19 = icmp eq %union.anon* %17, %18, !dbg !14952
  br i1 %19, label %24, label %20, !dbg !14953

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14954
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !14956
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14957
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !14958
  call void @llvm.dbg.value(metadata i32 %4, metadata !13687, metadata !DIExpression()) #24, !dbg !14959
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13692, metadata !DIExpression()) #24, !dbg !14959
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !14961
  call void @llvm.dbg.value(metadata i32 %23, metadata !14931, metadata !DIExpression()), !dbg !14932
  br label %26, !dbg !14962

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !14963
  call void @llvm.dbg.value(metadata i32 %25, metadata !14931, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.value(metadata i32 %4, metadata !13103, metadata !DIExpression()) #24, !dbg !14964
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !14964
  call void @llvm.dbg.value(metadata i32 %4, metadata !13111, metadata !DIExpression()) #24, !dbg !14966
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14968, !srcloc !13117
  br label %26, !dbg !14969

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14932
  ret i32 %27, !dbg !14970
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14971 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14975, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.value(metadata i32 %1, metadata !14976, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.value(metadata i8* %2, metadata !14977, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.value(metadata i8 0, metadata !14979, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.value(metadata i32 0, metadata !14980, metadata !DIExpression()), !dbg !14984
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13076, metadata !DIExpression()) #24, !dbg !14985
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14987, !srcloc !13091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13088, metadata !DIExpression()) #24, !dbg !14989
  call void @llvm.dbg.value(metadata i32 undef, metadata !13089, metadata !DIExpression()) #24, !dbg !14989
  call void @llvm.dbg.value(metadata i32 undef, metadata !13082, metadata !DIExpression()) #24, !dbg !14985
  call void @llvm.dbg.value(metadata i32 undef, metadata !14982, metadata !DIExpression()), !dbg !14984
  call void @llvm.dbg.value(metadata i8 poison, metadata !14979, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.value(metadata i32 undef, metadata !14980, metadata !DIExpression()), !dbg !14984
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !14990
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14978, metadata !DIExpression()), !dbg !14983
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14993
  br i1 %7, label %12, label %8, !dbg !14995

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14996, metadata !DIExpression()), !dbg !15004
  call void @llvm.dbg.value(metadata i32 %1, metadata !15002, metadata !DIExpression()), !dbg !15004
  call void @llvm.dbg.value(metadata i8* %2, metadata !15003, metadata !DIExpression()), !dbg !15004
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14910, metadata !DIExpression()), !dbg !15007
  call void @llvm.dbg.value(metadata i32 %1, metadata !14915, metadata !DIExpression()), !dbg !15007
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !15009
  store i32 %1, i32* %9, align 4, !dbg !15010
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !15011
  store i8* %2, i8** %10, align 4, !dbg !15012
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15013
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15014
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !15015
  call void @llvm.dbg.value(metadata i8 1, metadata !14979, metadata !DIExpression()), !dbg !14983
  br label %12, !dbg !15016

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !14987
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !14987
  call void @llvm.dbg.value(metadata i32 %14, metadata !13088, metadata !DIExpression()) #24, !dbg !14989
  call void @llvm.dbg.value(metadata i32 %14, metadata !13082, metadata !DIExpression()) #24, !dbg !14985
  call void @llvm.dbg.value(metadata i32 %14, metadata !14982, metadata !DIExpression()), !dbg !14984
  call void @llvm.dbg.value(metadata i8 poison, metadata !14979, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.value(metadata i32 undef, metadata !13103, metadata !DIExpression()) #24, !dbg !15017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13108, metadata !DIExpression()) #24, !dbg !15017
  call void @llvm.dbg.value(metadata i32 undef, metadata !13111, metadata !DIExpression()) #24, !dbg !15019
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !15021, !srcloc !13117
  call void @llvm.dbg.value(metadata i32 undef, metadata !14980, metadata !DIExpression()), !dbg !14984
  ret i1 %13, !dbg !15022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15023 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15029, metadata !DIExpression()), !dbg !15034
  call void @llvm.dbg.value(metadata i64 undef, metadata !15031, metadata !DIExpression()), !dbg !15034
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15028, metadata !DIExpression()), !dbg !15034
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15030, metadata !DIExpression()), !dbg !15034
  call void @llvm.dbg.value(metadata i8** %4, metadata !15032, metadata !DIExpression()), !dbg !15034
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !15035
  call void @llvm.dbg.value(metadata i32 %6, metadata !15033, metadata !DIExpression()), !dbg !15034
  %7 = icmp eq i8** %4, null, !dbg !15036
  br i1 %7, label %12, label %8, !dbg !15038

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15039
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15041
  %11 = load i8*, i8** %10, align 4, !dbg !15041
  store i8* %11, i8** %4, align 4, !dbg !15042
  br label %12, !dbg !15043

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15044
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15045 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !15047
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !15048
  ret void, !dbg !15049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15050 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15060, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15058, metadata !DIExpression()), !dbg !15077
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15059, metadata !DIExpression()), !dbg !15077
  %5 = icmp eq i64 %4, -1, !dbg !15078
  br i1 %5, label %55, label %6, !dbg !15080

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15081
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !15082
  call void @llvm.dbg.value(metadata i32 0, metadata !15061, metadata !DIExpression()), !dbg !15083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15084, metadata !DIExpression()) #24, !dbg !15091
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15093, !srcloc !15099
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !15093
  call void @llvm.dbg.value(metadata i32 %9, metadata !15096, metadata !DIExpression()) #24, !dbg !15100
  call void @llvm.dbg.value(metadata i32 undef, metadata !15097, metadata !DIExpression()) #24, !dbg !15100
  call void @llvm.dbg.value(metadata i32 %9, metadata !15090, metadata !DIExpression()) #24, !dbg !15091
  call void @llvm.dbg.value(metadata i32 %9, metadata !15067, metadata !DIExpression()), !dbg !15083
  call void @llvm.dbg.value(metadata i32 undef, metadata !15061, metadata !DIExpression()), !dbg !15083
  %10 = icmp slt i64 %4, -1, !dbg !15101
  br i1 %10, label %11, label %17, !dbg !15102

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !15103
  %13 = add i64 %4, %12, !dbg !15104
  %14 = sub i64 -2, %13, !dbg !15104
  call void @llvm.dbg.value(metadata i64 %14, metadata !15071, metadata !DIExpression()), !dbg !15105
  %15 = icmp sgt i64 %14, 1, !dbg !15106
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15106
  br label %22, !dbg !15107

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15108
  %19 = tail call fastcc i32 @elapsed.168() #26, !dbg !15110
  %20 = sext i32 %19 to i64, !dbg !15110
  %21 = add nsw i64 %18, %20, !dbg !15111
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15112
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15113
  store i64 %23, i64* %24, align 8, !dbg !15114
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !15115
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !15068, metadata !DIExpression()), !dbg !15117
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15118
  br i1 %26, label %42, label %27, !dbg !15118

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15119
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !15068, metadata !DIExpression()), !dbg !15117
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15123
  %31 = load i64, i64* %30, align 8, !dbg !15123
  %32 = icmp slt i64 %28, %31, !dbg !15124
  br i1 %32, label %33, label %38, !dbg !15125

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15123
  %35 = sub nsw i64 %31, %28, !dbg !15126
  store i64 %35, i64* %34, align 8, !dbg !15126
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15128
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15129
  tail call fastcc void @sys_dlist_insert.169(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !15130
  br label %44, !dbg !15131

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15132
  store i64 %39, i64* %24, align 8, !dbg !15132
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !15133
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !15068, metadata !DIExpression()), !dbg !15117
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15118
  br i1 %41, label %42, label %27, !dbg !15118, !llvm.loop !15134

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15136
  tail call fastcc void @sys_dlist_append.170(%struct._dnode* noundef %43) #26, !dbg !15139
  br label %44, !dbg !15140

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !15141
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15142
  br i1 %46, label %47, label %54, !dbg !15143

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !15144
  call void @llvm.dbg.value(metadata i32 %48, metadata !15074, metadata !DIExpression()), !dbg !15145
  %49 = icmp ne i32 %48, 0, !dbg !15146
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15148
  br i1 %52, label %54, label %53, !dbg !15148

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !15149
  br label %54, !dbg !15151

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15152, metadata !DIExpression()) #24, !dbg !15158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15157, metadata !DIExpression()) #24, !dbg !15158
  call void @llvm.dbg.value(metadata i32 %9, metadata !15160, metadata !DIExpression()) #24, !dbg !15163
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15165, !srcloc !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15061, metadata !DIExpression()), !dbg !15083
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.168() unnamed_addr #1 !dbg !15168 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15171
  %2 = icmp eq i32 %1, 0, !dbg !15172
  br i1 %2, label %3, label %5, !dbg !15171

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !15173
  br label %5, !dbg !15171

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15171
  ret i32 %6, !dbg !15174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15175 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.173() #26, !dbg !15181
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15179, metadata !DIExpression()), !dbg !15182
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15183
  ret %struct._timeout* %2, !dbg !15184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.169(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15185 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15189, metadata !DIExpression()), !dbg !15193
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15190, metadata !DIExpression()), !dbg !15193
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15194
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15194
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15191, metadata !DIExpression()), !dbg !15193
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15195
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15196
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15197
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15198
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15199
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15200
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15201
  ret void, !dbg !15202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15203 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15207, metadata !DIExpression()), !dbg !15209
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15210
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.171(%struct._dnode* noundef %2) #26, !dbg !15211
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15208, metadata !DIExpression()), !dbg !15209
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15212
  ret %struct._timeout* %4, !dbg !15213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.170(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15214 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15219, metadata !DIExpression()), !dbg !15222
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15220, metadata !DIExpression()), !dbg !15222
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15223
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15221, metadata !DIExpression()), !dbg !15222
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15224
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15225
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15226
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15227
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15228
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15229
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15230
  ret void, !dbg !15231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15232 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !15237
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15234, metadata !DIExpression()), !dbg !15238
  %2 = tail call fastcc i32 @elapsed.168() #26, !dbg !15239
  call void @llvm.dbg.value(metadata i32 %2, metadata !15235, metadata !DIExpression()), !dbg !15238
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15240
  br i1 %3, label %14, label %4, !dbg !15242

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15243
  %6 = load i64, i64* %5, align 8, !dbg !15243
  %7 = sext i32 %2 to i64, !dbg !15244
  %8 = sub nsw i64 %6, %7, !dbg !15245
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15246
  br i1 %9, label %14, label %10, !dbg !15247

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15248
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15248
  %13 = trunc i64 %12 to i32, !dbg !15248
  call void @llvm.dbg.value(metadata i32 %13, metadata !15236, metadata !DIExpression()), !dbg !15238
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15250
  call void @llvm.dbg.value(metadata i32 %15, metadata !15236, metadata !DIExpression()), !dbg !15238
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15251
  %17 = icmp ne i32 %16, 0, !dbg !15253
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15254
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15254
  call void @llvm.dbg.value(metadata i32 %20, metadata !15236, metadata !DIExpression()), !dbg !15238
  ret i32 %20, !dbg !15255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.171(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15256 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15260, metadata !DIExpression()), !dbg !15262
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15261, metadata !DIExpression()), !dbg !15262
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15263
  br i1 %2, label %5, label %3, !dbg !15264

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.172(%struct._dnode* noundef nonnull %0) #26, !dbg !15265
  br label %5, !dbg !15264

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15264
  ret %struct._dnode* %6, !dbg !15266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.172(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15267 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15269, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15270, metadata !DIExpression()), !dbg !15271
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15272
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15273
  br i1 %3, label %7, label %4, !dbg !15274

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15275
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15275
  br label %7, !dbg !15274

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15274
  ret %struct._dnode* %8, !dbg !15276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.173() unnamed_addr #5 !dbg !15277 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15281, metadata !DIExpression()), !dbg !15282
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.174() #26, !dbg !15283
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15283
  ret %struct._dnode* %3, !dbg !15284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.174() unnamed_addr #5 !dbg !15285 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15289, metadata !DIExpression()), !dbg !15290
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15291
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15292
  ret i1 %2, !dbg !15293
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15294 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15298, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata i32 -22, metadata !15299, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata i32 0, metadata !15300, metadata !DIExpression()), !dbg !15304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15084, metadata !DIExpression()) #24, !dbg !15305
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15307, !srcloc !15099
  call void @llvm.dbg.value(metadata i32 undef, metadata !15096, metadata !DIExpression()) #24, !dbg !15309
  call void @llvm.dbg.value(metadata i32 undef, metadata !15097, metadata !DIExpression()) #24, !dbg !15309
  call void @llvm.dbg.value(metadata i32 undef, metadata !15090, metadata !DIExpression()) #24, !dbg !15305
  call void @llvm.dbg.value(metadata i32 undef, metadata !15302, metadata !DIExpression()), !dbg !15304
  call void @llvm.dbg.value(metadata i32 -22, metadata !15299, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata i32 undef, metadata !15300, metadata !DIExpression()), !dbg !15304
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15299, metadata !DIExpression()), !dbg !15303
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.177(%struct._dnode* noundef %3) #26, !dbg !15310
  br i1 %4, label %5, label %6, !dbg !15314

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !15315
  call void @llvm.dbg.value(metadata i32 0, metadata !15299, metadata !DIExpression()), !dbg !15303
  br label %6, !dbg !15317

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15303
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15307
  call void @llvm.dbg.value(metadata i32 %8, metadata !15096, metadata !DIExpression()) #24, !dbg !15309
  call void @llvm.dbg.value(metadata i32 %8, metadata !15090, metadata !DIExpression()) #24, !dbg !15305
  call void @llvm.dbg.value(metadata i32 %8, metadata !15302, metadata !DIExpression()), !dbg !15304
  call void @llvm.dbg.value(metadata i32 %7, metadata !15299, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #24, !dbg !15318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15157, metadata !DIExpression()) #24, !dbg !15318
  call void @llvm.dbg.value(metadata i32 undef, metadata !15160, metadata !DIExpression()) #24, !dbg !15320
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15322, !srcloc !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15300, metadata !DIExpression()), !dbg !15304
  ret i32 %7, !dbg !15323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.177(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15324 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15330, metadata !DIExpression()), !dbg !15331
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15332
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15332
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15333
  ret i1 %4, !dbg !15334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15335 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15337, metadata !DIExpression()), !dbg !15338
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15339
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15341
  br i1 %3, label %10, label %4, !dbg !15342

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15343
  %6 = load i64, i64* %5, align 8, !dbg !15343
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15345
  %8 = load i64, i64* %7, align 8, !dbg !15346
  %9 = add nsw i64 %8, %6, !dbg !15346
  store i64 %9, i64* %7, align 8, !dbg !15346
  br label %10, !dbg !15347

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15348
  tail call fastcc void @sys_dlist_remove.178(%struct._dnode* noundef %11) #26, !dbg !15349
  ret void, !dbg !15350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.178(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15351 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15355, metadata !DIExpression()), !dbg !15358
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15359
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15359
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15356, metadata !DIExpression()), !dbg !15358
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15360
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15360
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15357, metadata !DIExpression()), !dbg !15358
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15361
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15362
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15363
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15364
  tail call fastcc void @sys_dnode_init.179(%struct._dnode* noundef %0) #26, !dbg !15365
  ret void, !dbg !15366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.179(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15367 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15369, metadata !DIExpression()), !dbg !15370
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15371
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15372
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15373
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15374
  ret void, !dbg !15375
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15376 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15382, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata i64 0, metadata !15383, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata i32 0, metadata !15384, metadata !DIExpression()), !dbg !15388
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15084, metadata !DIExpression()) #24, !dbg !15389
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15391, !srcloc !15099
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15391
  call void @llvm.dbg.value(metadata i32 %3, metadata !15096, metadata !DIExpression()) #24, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15097, metadata !DIExpression()) #24, !dbg !15393
  call void @llvm.dbg.value(metadata i32 %3, metadata !15090, metadata !DIExpression()) #24, !dbg !15389
  call void @llvm.dbg.value(metadata i32 %3, metadata !15386, metadata !DIExpression()), !dbg !15388
  call void @llvm.dbg.value(metadata i64 0, metadata !15383, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata i32 undef, metadata !15384, metadata !DIExpression()), !dbg !15388
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15394
  call void @llvm.dbg.value(metadata i64 %4, metadata !15383, metadata !DIExpression()), !dbg !15387
  call void @llvm.dbg.value(metadata i32 %3, metadata !15152, metadata !DIExpression()) #24, !dbg !15397
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15157, metadata !DIExpression()) #24, !dbg !15397
  call void @llvm.dbg.value(metadata i32 %3, metadata !15160, metadata !DIExpression()) #24, !dbg !15399
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15401, !srcloc !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15384, metadata !DIExpression()), !dbg !15388
  ret i64 %4, !dbg !15402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15403 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15405, metadata !DIExpression()), !dbg !15409
  call void @llvm.dbg.value(metadata i64 0, metadata !15406, metadata !DIExpression()), !dbg !15409
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.180(%struct._timeout* noundef %0) #26, !dbg !15410
  br i1 %2, label %21, label %3, !dbg !15412

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15413
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15407, metadata !DIExpression()), !dbg !15414
  call void @llvm.dbg.value(metadata i64 0, metadata !15406, metadata !DIExpression()), !dbg !15409
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15415
  br i1 %5, label %16, label %6, !dbg !15417

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15407, metadata !DIExpression()), !dbg !15414
  call void @llvm.dbg.value(metadata i64 %8, metadata !15406, metadata !DIExpression()), !dbg !15409
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15418
  %10 = load i64, i64* %9, align 8, !dbg !15418
  %11 = add nsw i64 %10, %8, !dbg !15420
  call void @llvm.dbg.value(metadata i64 %11, metadata !15406, metadata !DIExpression()), !dbg !15409
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15421
  br i1 %12, label %16, label %13, !dbg !15423

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15424
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15407, metadata !DIExpression()), !dbg !15414
  call void @llvm.dbg.value(metadata i64 %11, metadata !15406, metadata !DIExpression()), !dbg !15409
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15415
  br i1 %15, label %16, label %6, !dbg !15417, !llvm.loop !15425

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15409
  call void @llvm.dbg.value(metadata i64 %17, metadata !15406, metadata !DIExpression()), !dbg !15409
  %18 = tail call fastcc i32 @elapsed.168() #26, !dbg !15427
  %19 = sext i32 %18 to i64, !dbg !15427
  %20 = sub nsw i64 %17, %19, !dbg !15428
  br label %21, !dbg !15429

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15409
  ret i64 %22, !dbg !15430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.180(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15431 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15435, metadata !DIExpression()), !dbg !15436
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15437
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.177(%struct._dnode* noundef %2) #26, !dbg !15438
  %4 = xor i1 %3, true, !dbg !15439
  ret i1 %4, !dbg !15440
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15441 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15443, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata i64 0, metadata !15444, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata i32 0, metadata !15445, metadata !DIExpression()), !dbg !15449
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15084, metadata !DIExpression()) #24, !dbg !15450
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15452, !srcloc !15099
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15452
  call void @llvm.dbg.value(metadata i32 %3, metadata !15096, metadata !DIExpression()) #24, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !15097, metadata !DIExpression()) #24, !dbg !15454
  call void @llvm.dbg.value(metadata i32 %3, metadata !15090, metadata !DIExpression()) #24, !dbg !15450
  call void @llvm.dbg.value(metadata i32 %3, metadata !15447, metadata !DIExpression()), !dbg !15449
  call void @llvm.dbg.value(metadata i64 0, metadata !15444, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()), !dbg !15449
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15455
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15458
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15444, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15448
  call void @llvm.dbg.value(metadata i32 %3, metadata !15152, metadata !DIExpression()) #24, !dbg !15459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15157, metadata !DIExpression()) #24, !dbg !15459
  call void @llvm.dbg.value(metadata i32 %3, metadata !15160, metadata !DIExpression()) #24, !dbg !15461
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15463, !srcloc !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15445, metadata !DIExpression()), !dbg !15449
  %6 = add i64 %5, %4, !dbg !15464
  ret i64 %6, !dbg !15465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15466 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15468, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 0, metadata !15469, metadata !DIExpression()), !dbg !15473
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15084, metadata !DIExpression()) #24, !dbg !15474
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15476, !srcloc !15099
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15476
  call void @llvm.dbg.value(metadata i32 %2, metadata !15096, metadata !DIExpression()) #24, !dbg !15478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15097, metadata !DIExpression()) #24, !dbg !15478
  call void @llvm.dbg.value(metadata i32 %2, metadata !15090, metadata !DIExpression()) #24, !dbg !15474
  call void @llvm.dbg.value(metadata i32 %2, metadata !15471, metadata !DIExpression()), !dbg !15473
  call void @llvm.dbg.value(metadata i32 -1, metadata !15468, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !15469, metadata !DIExpression()), !dbg !15473
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !15479
  call void @llvm.dbg.value(metadata i32 %3, metadata !15468, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 %2, metadata !15152, metadata !DIExpression()) #24, !dbg !15482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15157, metadata !DIExpression()) #24, !dbg !15482
  call void @llvm.dbg.value(metadata i32 %2, metadata !15160, metadata !DIExpression()) #24, !dbg !15484
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15486, !srcloc !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15469, metadata !DIExpression()), !dbg !15473
  ret i32 %3, !dbg !15487
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15488 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15490, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata i1 %1, metadata !15491, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15500
  call void @llvm.dbg.value(metadata i32 0, metadata !15492, metadata !DIExpression()), !dbg !15501
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15084, metadata !DIExpression()) #24, !dbg !15502
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15504, !srcloc !15099
  call void @llvm.dbg.value(metadata i32 undef, metadata !15096, metadata !DIExpression()) #24, !dbg !15506
  call void @llvm.dbg.value(metadata i32 undef, metadata !15097, metadata !DIExpression()) #24, !dbg !15506
  call void @llvm.dbg.value(metadata i32 undef, metadata !15090, metadata !DIExpression()) #24, !dbg !15502
  call void @llvm.dbg.value(metadata i32 undef, metadata !15494, metadata !DIExpression()), !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !15492, metadata !DIExpression()), !dbg !15501
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !15507
  call void @llvm.dbg.value(metadata i32 %4, metadata !15495, metadata !DIExpression()), !dbg !15508
  call void @llvm.dbg.value(metadata i1 undef, metadata !15498, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15508
  %5 = icmp slt i32 %4, 2, !dbg !15509
  call void @llvm.dbg.value(metadata i1 %5, metadata !15499, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15508
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !15510
  call void @llvm.dbg.value(metadata i1 %6, metadata !15498, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15508
  br i1 %7, label %11, label %8, !dbg !15510

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !15512
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !15512
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !15514
  br label %11, !dbg !15515

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !15504
  call void @llvm.dbg.value(metadata i32 %12, metadata !15096, metadata !DIExpression()) #24, !dbg !15506
  call void @llvm.dbg.value(metadata i32 %12, metadata !15090, metadata !DIExpression()) #24, !dbg !15502
  call void @llvm.dbg.value(metadata i32 %12, metadata !15494, metadata !DIExpression()), !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #24, !dbg !15516
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15157, metadata !DIExpression()) #24, !dbg !15516
  call void @llvm.dbg.value(metadata i32 undef, metadata !15160, metadata !DIExpression()) #24, !dbg !15518
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !15520, !srcloc !15166
  call void @llvm.dbg.value(metadata i32 1, metadata !15492, metadata !DIExpression()), !dbg !15501
  call void @llvm.dbg.value(metadata i32 undef, metadata !15492, metadata !DIExpression()), !dbg !15501
  ret void, !dbg !15521
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !15522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15526, metadata !DIExpression()), !dbg !15531
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !15532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15084, metadata !DIExpression()) #24, !dbg !15533
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15535, !srcloc !15099
  call void @llvm.dbg.value(metadata i32 undef, metadata !15096, metadata !DIExpression()) #24, !dbg !15537
  call void @llvm.dbg.value(metadata i32 undef, metadata !15097, metadata !DIExpression()) #24, !dbg !15537
  call void @llvm.dbg.value(metadata i32 undef, metadata !15090, metadata !DIExpression()) #24, !dbg !15533
  call void @llvm.dbg.value(metadata i32 undef, metadata !15527, metadata !DIExpression()), !dbg !15531
  store i32 %0, i32* @announce_remaining, align 4, !dbg !15531
  call void @llvm.dbg.value(metadata i32 undef, metadata !15527, metadata !DIExpression()), !dbg !15531
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !15538
  %4 = icmp eq %struct._timeout* %3, null, !dbg !15539
  br i1 %4, label %28, label %5, !dbg !15540

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !15541
  %10 = load i64, i64* %9, align 8, !dbg !15541
  %11 = sext i32 %8 to i64, !dbg !15542
  %12 = icmp sgt i64 %10, %11, !dbg !15543
  br i1 %12, label %26, label %13, !dbg !15544

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !15531
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !15528, metadata !DIExpression()), !dbg !15545
  %15 = trunc i64 %10 to i32, !dbg !15546
  call void @llvm.dbg.value(metadata i32 %15, metadata !15530, metadata !DIExpression()), !dbg !15545
  %16 = sext i32 %15 to i64, !dbg !15547
  %17 = load i64, i64* @curr_tick, align 8, !dbg !15548
  %18 = add i64 %17, %16, !dbg !15548
  store i64 %18, i64* @curr_tick, align 8, !dbg !15548
  store i64 0, i64* %9, align 8, !dbg !15549
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !15550
  call void @llvm.dbg.value(metadata i32 %14, metadata !15152, metadata !DIExpression()) #24, !dbg !15551
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15157, metadata !DIExpression()) #24, !dbg !15551
  call void @llvm.dbg.value(metadata i32 %14, metadata !15160, metadata !DIExpression()) #24, !dbg !15553
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !15555, !srcloc !15166
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !15556
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !15556
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !15557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15084, metadata !DIExpression()) #24, !dbg !15558
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15560, !srcloc !15099
  call void @llvm.dbg.value(metadata i32 undef, metadata !15096, metadata !DIExpression()) #24, !dbg !15562
  call void @llvm.dbg.value(metadata i32 undef, metadata !15097, metadata !DIExpression()) #24, !dbg !15562
  call void @llvm.dbg.value(metadata i32 undef, metadata !15090, metadata !DIExpression()) #24, !dbg !15558
  call void @llvm.dbg.value(metadata i32 undef, metadata !15527, metadata !DIExpression()), !dbg !15531
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !15563
  %23 = sub nsw i32 %22, %15, !dbg !15563
  store i32 %23, i32* @announce_remaining, align 4, !dbg !15531
  call void @llvm.dbg.value(metadata i32 undef, metadata !15527, metadata !DIExpression()), !dbg !15531
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !15538
  %25 = icmp eq %struct._timeout* %24, null, !dbg !15539
  br i1 %25, label %28, label %5, !dbg !15540, !llvm.loop !15564

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !15566
  store i64 %27, i64* %9, align 8, !dbg !15566
  br label %32, !dbg !15569

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !15531
  %31 = sext i32 %30 to i64, !dbg !15570
  br label %32, !dbg !15570

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !15570
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !15531
  %36 = load i64, i64* @curr_tick, align 8, !dbg !15571
  %37 = add i64 %36, %33, !dbg !15571
  store i64 %37, i64* @curr_tick, align 8, !dbg !15571
  store i32 0, i32* @announce_remaining, align 4, !dbg !15572
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !15573
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !15574
  call void @llvm.dbg.value(metadata i32 %35, metadata !15152, metadata !DIExpression()) #24, !dbg !15575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15157, metadata !DIExpression()) #24, !dbg !15575
  call void @llvm.dbg.value(metadata i32 %35, metadata !15160, metadata !DIExpression()) #24, !dbg !15577
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !15579, !srcloc !15166
  ret void, !dbg !15580
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !15581 {
  call void @llvm.dbg.value(metadata i64 0, metadata !15585, metadata !DIExpression()), !dbg !15589
  call void @llvm.dbg.value(metadata i32 0, metadata !15586, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15084, metadata !DIExpression()) #24, !dbg !15591
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15593, !srcloc !15099
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15593
  call void @llvm.dbg.value(metadata i32 %2, metadata !15096, metadata !DIExpression()) #24, !dbg !15595
  call void @llvm.dbg.value(metadata i32 undef, metadata !15097, metadata !DIExpression()) #24, !dbg !15595
  call void @llvm.dbg.value(metadata i32 %2, metadata !15090, metadata !DIExpression()) #24, !dbg !15591
  call void @llvm.dbg.value(metadata i32 %2, metadata !15588, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.value(metadata i64 0, metadata !15585, metadata !DIExpression()), !dbg !15589
  call void @llvm.dbg.value(metadata i32 undef, metadata !15586, metadata !DIExpression()), !dbg !15590
  %3 = load i64, i64* @curr_tick, align 8, !dbg !15596
  %4 = tail call fastcc i32 @elapsed.168() #26, !dbg !15599
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !15585, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15589
  call void @llvm.dbg.value(metadata i32 %2, metadata !15152, metadata !DIExpression()) #24, !dbg !15600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15157, metadata !DIExpression()) #24, !dbg !15600
  call void @llvm.dbg.value(metadata i32 %2, metadata !15160, metadata !DIExpression()) #24, !dbg !15602
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15604, !srcloc !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15586, metadata !DIExpression()), !dbg !15590
  %5 = sext i32 %4 to i64, !dbg !15599
  %6 = add i64 %3, %5, !dbg !15605
  ret i64 %6, !dbg !15606
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !15607 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15608
  %2 = trunc i64 %1 to i32, !dbg !15609
  ret i32 %2, !dbg !15610
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !15611 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15612
  ret i64 %1, !dbg !15613
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !15614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15616, metadata !DIExpression()), !dbg !15623
  %2 = icmp eq i32 %0, 0, !dbg !15624
  br i1 %2, label %10, label %3, !dbg !15626

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !15627
  call void @llvm.dbg.value(metadata i32 %4, metadata !15617, metadata !DIExpression()), !dbg !15623
  %5 = shl i32 %0, 5, !dbg !15628
  call void @llvm.dbg.value(metadata i32 %5, metadata !15618, metadata !DIExpression()), !dbg !15623
  br label %6, !dbg !15629

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !15630
  call void @llvm.dbg.value(metadata i32 %7, metadata !15619, metadata !DIExpression()), !dbg !15631
  %8 = sub i32 %7, %4, !dbg !15632
  %9 = icmp ult i32 %8, %5, !dbg !15634
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !15635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !15636 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !15637
  ret i32 %1, !dbg !15638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !15639 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !15641
  ret i32 %1, !dbg !15642
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !15643 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15647, metadata !DIExpression()), !dbg !15649
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !15650

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !15651
  br label %14, !dbg !15655

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15648, metadata !DIExpression()), !dbg !15649
  %6 = icmp slt i64 %2, -1, !dbg !15656
  br i1 %6, label %7, label %9, !dbg !15659

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !15660
  br label %14, !dbg !15661

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !15663
  %11 = icmp ugt i64 %2, 1, !dbg !15664
  %12 = select i1 %11, i64 %2, i64 1, !dbg !15664
  %13 = add nsw i64 %10, %12, !dbg !15665
  br label %14, !dbg !15666

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !15667
  ret i64 %15, !dbg !15668
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !15669 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.189, i32 0, i32 0)) #25, !dbg !15671
  ret void, !dbg !15672
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!742, !2, !2234, !27, !124, !2236, !2238, !138, !2264, !2302, !167, !235, !2304, !2315, !2361, !2363, !2391, !2419, !2462, !2533, !2578, !264, !410, !2606, !446, !456, !481, !589, !772, !2611, !889, !955, !1223, !1456, !2632, !1571, !1658, !2634, !2705, !2754, !1693, !2757, !1700, !2062, !2775, !2082, !2777, !2197, !2780}
!llvm.ident = !{!2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782, !2782}
!llvm.module.flags = !{!2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "heap", scope: !27, file: !107, line: 13, type: !112, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "heap_mem", scope: !27, file: !107, line: 12, type: !108, isLocal: true, isDefinition: true)
!107 = !DIFile(filename: "zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 2048, elements: !110)
!109 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!110 = !{!111}
!111 = !DISubrange(count: 256)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !114)
!113 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!114 = !{!115, !118, !119}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !112, file: !113, line: 57, baseType: !116, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !113, line: 57, flags: DIFlagFwdDecl)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !112, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !112, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !121, line: 214, baseType: !32)
!121 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "_char_out", scope: !124, file: !127, line: 54, type: !128, isLocal: false, isDefinition: true)
!124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !126, splitDebugInlining: false, nameTableKind: None)
!125 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!126 = !{!122}
!127 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!103, !103}
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "state", scope: !133, file: !134, line: 227, type: !163, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "rand32", scope: !134, file: !134, line: 225, type: !135, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !162)
!134 = !DIFile(filename: "zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!135 = !DISubroutineType(types: !136)
!136 = !{!137}
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !148, globals: !161, splitDebugInlining: false, nameTableKind: None)
!139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!140 = !{!30, !141}
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !142, line: 54, baseType: !32, size: 32, elements: !143)
!142 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!145 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!146 = !DIEnumerator(name: "FREE_PREV", value: 2)
!147 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!148 = !{!102, !103, !149, !150, !137, !153}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !152)
!152 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !156)
!156 = !{!157}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !155, file: !142, line: 58, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 64, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 8)
!161 = !{!131}
!162 = !{}
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !164)
!164 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !167, file: !197, line: 60, type: !198, isLocal: true, isDefinition: true, align: 32)
!167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !169, globals: !196, splitDebugInlining: false, nameTableKind: None)
!168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!169 = !{!170, !190}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 386, baseType: !173)
!172 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 370, size: 448, elements: !174)
!174 = !{!175, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !173, file: !172, line: 372, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !137)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !173, file: !172, line: 373, baseType: !176, size: 32, offset: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !173, file: !172, line: 374, baseType: !176, size: 32, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !173, file: !172, line: 375, baseType: !176, size: 32, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !173, file: !172, line: 376, baseType: !176, size: 32, offset: 128)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !173, file: !172, line: 377, baseType: !176, size: 32, offset: 160)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !173, file: !172, line: 378, baseType: !176, size: 32, offset: 192)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !173, file: !172, line: 379, baseType: !176, size: 32, offset: 224)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !173, file: !172, line: 380, baseType: !176, size: 32, offset: 256)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !173, file: !172, line: 381, baseType: !176, size: 32, offset: 288)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !173, file: !172, line: 382, baseType: !176, size: 32, offset: 320)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !173, file: !172, line: 383, baseType: !176, size: 32, offset: 352)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !173, file: !172, line: 384, baseType: !176, size: 32, offset: 384)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !173, file: !172, line: 385, baseType: !176, size: 32, offset: 416)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 364, baseType: !192)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 360, size: 64, elements: !193)
!193 = !{!194, !195}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !192, file: !172, line: 362, baseType: !176, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !192, file: !172, line: 363, baseType: !176, size: 32, offset: 32)
!196 = !{!165}
!197 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !199)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !200, line: 51, size: 64, elements: !201)
!200 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !{!202, !232}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !199, file: !200, line: 60, baseType: !203, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!204 = !DISubroutineType(types: !205)
!205 = !{!103, !206}
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !209, line: 378, size: 192, elements: !210)
!209 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !{!211, !214, !215, !216, !225, !226}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !208, file: !209, line: 380, baseType: !212, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !208, file: !209, line: 382, baseType: !13, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !208, file: !209, line: 384, baseType: !13, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !208, file: !209, line: 386, baseType: !217, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !209, line: 351, size: 16, elements: !219)
!219 = !{!220, !223}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !218, file: !209, line: 359, baseType: !221, size: 8)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !222)
!222 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !218, file: !209, line: 364, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!224 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !208, file: !209, line: 388, baseType: !102, size: 32, offset: 128)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !208, file: !209, line: 396, baseType: !227, size: 32, offset: 160)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !229)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !209, line: 43, baseType: !230)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !231)
!231 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !199, file: !200, line: 65, baseType: !206, size: 32, offset: 32)
!233 = !DIGlobalVariableExpression(var: !234, expr: !DIExpression())
!234 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !235, file: !238, line: 71, type: !239, isLocal: true, isDefinition: true, align: 32)
!235 = distinct !DICompileUnit(language: DW_LANG_C99, file: !236, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !237, splitDebugInlining: false, nameTableKind: None)
!236 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!237 = !{!233}
!238 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !200, line: 51, size: 64, elements: !241)
!241 = !{!242, !261}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !240, file: !200, line: 60, baseType: !243, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DISubroutineType(types: !245)
!245 = !{!103, !246}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !209, line: 378, size: 192, elements: !249)
!249 = !{!250, !251, !252, !253, !259, !260}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !248, file: !209, line: 380, baseType: !212, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !248, file: !209, line: 382, baseType: !13, size: 32, offset: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !248, file: !209, line: 384, baseType: !13, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !248, file: !209, line: 386, baseType: !254, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !209, line: 351, size: 16, elements: !256)
!256 = !{!257, !258}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !255, file: !209, line: 359, baseType: !221, size: 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !255, file: !209, line: 364, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !248, file: !209, line: 388, baseType: !102, size: 32, offset: 128)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !248, file: !209, line: 396, baseType: !227, size: 32, offset: 160)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !240, file: !200, line: 65, baseType: !246, size: 32, offset: 32)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "static_regions", scope: !264, file: !271, line: 62, type: !406, isLocal: true, isDefinition: true)
!264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !267, splitDebugInlining: false, nameTableKind: None)
!265 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!266 = !{!120, !103, !137, !102}
!267 = !{!268, !262}
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !270, file: !271, line: 198, type: !392, isLocal: true, isDefinition: true)
!270 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !271, file: !271, line: 175, type: !272, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !387)
!271 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!272 = !DISubroutineType(types: !273)
!273 = !{null, !274}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !276, line: 245, size: 1024, elements: !277)
!276 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!277 = !{!278, !345, !358, !359, !360, !361, !367, !382}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !275, file: !276, line: 247, baseType: !279, size: 384)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !276, line: 57, size: 384, elements: !280)
!280 = !{!281, !309, !317, !318, !319, !330, !331, !332}
!281 = !DIDerivedType(tag: DW_TAG_member, scope: !279, file: !276, line: 60, baseType: !282, size: 64)
!282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !279, file: !276, line: 60, size: 64, elements: !283)
!283 = !{!284, !300}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !282, file: !276, line: 61, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !286, line: 49, baseType: !287)
!286 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !286, line: 37, size: 64, elements: !288)
!288 = !{!289, !295}
!289 = !DIDerivedType(tag: DW_TAG_member, scope: !287, file: !286, line: 38, baseType: !290, size: 32)
!290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !287, file: !286, line: 38, size: 32, elements: !291)
!291 = !{!292, !294}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !290, file: !286, line: 39, baseType: !293, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !290, file: !286, line: 40, baseType: !293, size: 32)
!295 = !DIDerivedType(tag: DW_TAG_member, scope: !287, file: !286, line: 42, baseType: !296, size: 32, offset: 32)
!296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !287, file: !286, line: 42, size: 32, elements: !297)
!297 = !{!298, !299}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !296, file: !286, line: 43, baseType: !293, size: 32)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !296, file: !286, line: 44, baseType: !293, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !282, file: !276, line: 62, baseType: !301, size: 64)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !303)
!302 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!303 = !{!304}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !301, file: !302, line: 50, baseType: !305, size: 64)
!305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !306, size: 64, elements: !307)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!307 = !{!308}
!308 = !DISubrange(count: 2)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !279, file: !276, line: 68, baseType: !310, size: 32, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !312, line: 233, baseType: !313)
!312 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 231, size: 64, elements: !314)
!314 = !{!315}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !313, file: !312, line: 232, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !286, line: 48, baseType: !287)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !279, file: !276, line: 71, baseType: !221, size: 8, offset: 96)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !279, file: !276, line: 74, baseType: !221, size: 8, offset: 104)
!319 = !DIDerivedType(tag: DW_TAG_member, scope: !279, file: !276, line: 90, baseType: !320, size: 16, offset: 112)
!320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !279, file: !276, line: 90, size: 16, elements: !321)
!321 = !{!322, !329}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !276, line: 91, baseType: !323, size: 16)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !320, file: !276, line: 91, size: 16, elements: !324)
!324 = !{!325, !328}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !323, file: !276, line: 96, baseType: !326, size: 8)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !327)
!327 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !323, file: !276, line: 97, baseType: !221, size: 8, offset: 8)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !320, file: !276, line: 100, baseType: !151, size: 16)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !279, file: !276, line: 107, baseType: !137, size: 32, offset: 128)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !279, file: !276, line: 127, baseType: !102, size: 32, offset: 160)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !279, file: !276, line: 131, baseType: !333, size: 192, offset: 192)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !312, line: 244, size: 192, elements: !334)
!334 = !{!335, !336, !342}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !333, file: !312, line: 245, baseType: !285, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !333, file: !312, line: 246, baseType: !337, size: 32, offset: 64)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !312, line: 242, baseType: !338)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 32)
!339 = !DISubroutineType(types: !340)
!340 = !{null, !341}
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !333, file: !312, line: 249, baseType: !343, size: 64, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !344)
!344 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !275, file: !276, line: 250, baseType: !346, size: 288, offset: 384)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !347, line: 25, size: 288, elements: !348)
!347 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!348 = !{!349, !350, !351, !352, !353, !354, !355, !356, !357}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !346, file: !347, line: 26, baseType: !137, size: 32)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !346, file: !347, line: 27, baseType: !137, size: 32, offset: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !346, file: !347, line: 28, baseType: !137, size: 32, offset: 64)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !346, file: !347, line: 29, baseType: !137, size: 32, offset: 96)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !346, file: !347, line: 30, baseType: !137, size: 32, offset: 128)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !346, file: !347, line: 31, baseType: !137, size: 32, offset: 160)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !346, file: !347, line: 32, baseType: !137, size: 32, offset: 192)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !346, file: !347, line: 33, baseType: !137, size: 32, offset: 224)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !346, file: !347, line: 34, baseType: !137, size: 32, offset: 256)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !275, file: !276, line: 253, baseType: !102, size: 32, offset: 672)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !275, file: !276, line: 256, baseType: !311, size: 64, offset: 704)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !275, file: !276, line: 294, baseType: !103, size: 32, offset: 768)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !275, file: !276, line: 300, baseType: !362, size: 96, offset: 800)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !276, line: 149, size: 96, elements: !363)
!363 = !{!364, !365, !366}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !362, file: !276, line: 153, baseType: !22, size: 32)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !362, file: !276, line: 162, baseType: !120, size: 32, offset: 32)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !362, file: !276, line: 168, baseType: !120, size: 32, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !275, file: !276, line: 325, baseType: !368, size: 32, offset: 896)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !370, line: 5073, size: 160, elements: !371)
!370 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!371 = !{!372, !378, !379}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !369, file: !370, line: 5074, baseType: !373, size: 96)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !374)
!374 = !{!375, !376, !377}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !373, file: !113, line: 57, baseType: !116, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !373, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !373, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !369, file: !370, line: 5075, baseType: !311, size: 64, offset: 96)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !369, file: !370, line: 5076, baseType: !380, offset: 160)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !381, line: 43, elements: !162)
!381 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !275, file: !276, line: 343, baseType: !383, size: 64, offset: 928)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !347, line: 60, size: 64, elements: !384)
!384 = !{!385, !386}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !383, file: !347, line: 63, baseType: !137, size: 32)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !383, file: !347, line: 66, baseType: !137, size: 32, offset: 32)
!387 = !{!388, !389, !390, !391}
!388 = !DILocalVariable(name: "thread", arg: 1, scope: !270, file: !271, line: 175, type: !274)
!389 = !DILocalVariable(name: "region_num", scope: !270, file: !271, line: 200, type: !221)
!390 = !DILocalVariable(name: "guard_start", scope: !270, file: !271, line: 265, type: !22)
!391 = !DILocalVariable(name: "guard_size", scope: !270, file: !271, line: 266, type: !120)
!392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !393, size: 96, elements: !404)
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !394, line: 52, size: 96, elements: !395)
!394 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !{!396, !397, !398}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !393, file: !394, line: 53, baseType: !22, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !393, file: !394, line: 54, baseType: !120, size: 32, offset: 32)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !393, file: !394, line: 55, baseType: !399, size: 32, offset: 64)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !400, line: 151, baseType: !401)
!400 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !400, line: 149, size: 32, elements: !402)
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !401, file: !400, line: 150, baseType: !137, size: 32)
!404 = !{!405}
!405 = !DISubrange(count: 1)
!406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !407, size: 96, elements: !404)
!407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !393)
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !410, file: !443, line: 39, type: !221, isLocal: true, isDefinition: true)
!410 = distinct !DICompileUnit(language: DW_LANG_C99, file: !411, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !412, globals: !442, splitDebugInlining: false, nameTableKind: None)
!411 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!412 = !{!413, !102, !103, !430, !221}
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !415, line: 1168, baseType: !416)
!415 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 1155, size: 352, elements: !417)
!417 = !{!418, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !416, file: !415, line: 1157, baseType: !419, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !416, file: !415, line: 1158, baseType: !176, size: 32, offset: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !416, file: !415, line: 1159, baseType: !176, size: 32, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !416, file: !415, line: 1160, baseType: !176, size: 32, offset: 96)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !416, file: !415, line: 1161, baseType: !176, size: 32, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !416, file: !415, line: 1162, baseType: !176, size: 32, offset: 160)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !416, file: !415, line: 1163, baseType: !176, size: 32, offset: 192)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !416, file: !415, line: 1164, baseType: !176, size: 32, offset: 224)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !416, file: !415, line: 1165, baseType: !176, size: 32, offset: 256)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !416, file: !415, line: 1166, baseType: !176, size: 32, offset: 288)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !416, file: !415, line: 1167, baseType: !176, size: 32, offset: 320)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !432)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !433, line: 27, size: 96, elements: !434)
!433 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!434 = !{!435, !436, !437}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !432, file: !433, line: 29, baseType: !137, size: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !432, file: !433, line: 31, baseType: !212, size: 32, offset: 32)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !432, file: !433, line: 37, baseType: !438, size: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !400, line: 146, baseType: !439)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !400, line: 141, size: 32, elements: !440)
!440 = !{!441}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !439, file: !400, line: 143, baseType: !137, size: 32)
!442 = !{!408}
!443 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !446, file: !453, line: 21, type: !128, isLocal: true, isDefinition: true)
!446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !447, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !448, globals: !452, splitDebugInlining: false, nameTableKind: None)
!447 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!448 = !{!449, !103, !102}
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 32)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !451, line: 22, baseType: !103)
!451 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!452 = !{!444}
!453 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!454 = !DIGlobalVariableExpression(var: !455, expr: !DIExpression())
!455 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !456, file: !461, line: 13, type: !478, isLocal: true, isDefinition: true)
!456 = distinct !DICompileUnit(language: DW_LANG_C99, file: !457, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !458, splitDebugInlining: false, nameTableKind: None)
!457 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!458 = !{!459, !454}
!459 = !DIGlobalVariableExpression(var: !460, expr: !DIExpression())
!460 = distinct !DIGlobalVariable(name: "mpu_config", scope: !456, file: !461, line: 37, type: !462, isLocal: false, isDefinition: true)
!461 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !433, line: 41, size: 64, elements: !464)
!464 = !{!465, !466}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !463, file: !433, line: 43, baseType: !137, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !463, file: !433, line: 45, baseType: !467, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !469)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !433, line: 27, size: 96, elements: !470)
!470 = !{!471, !472, !473}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !469, file: !433, line: 29, baseType: !137, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !469, file: !433, line: 31, baseType: !212, size: 32, offset: 32)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !469, file: !433, line: 37, baseType: !474, size: 32, offset: 64)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !400, line: 146, baseType: !475)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !400, line: 141, size: 32, elements: !476)
!476 = !{!477}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !475, file: !400, line: 143, baseType: !137, size: 32)
!478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 192, elements: !307)
!479 = !DIGlobalVariableExpression(var: !480, expr: !DIExpression())
!480 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !481, file: !578, line: 36, type: !579, isLocal: true, isDefinition: true, align: 32)
!481 = distinct !DICompileUnit(language: DW_LANG_C99, file: !482, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !483, retainedTypes: !495, globals: !577, splitDebugInlining: false, nameTableKind: None)
!482 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!483 = !{!484, !490}
!484 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !485, line: 506, baseType: !32, size: 32, elements: !486)
!485 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!486 = !{!487, !488, !489}
!487 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!488 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!489 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!490 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !485, line: 512, baseType: !32, size: 32, elements: !491)
!491 = !{!492, !493, !494}
!492 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!493 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!494 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!495 = !{!496, !566, !571, !531, !490, !484, !576, !102}
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !498)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !485, line: 523, size: 288, elements: !499)
!499 = !{!500, !521, !527, !532, !536, !537, !538, !542, !562}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !498, file: !485, line: 524, baseType: !501, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 32)
!502 = !DISubroutineType(types: !503)
!503 = !{!103, !504, !519, !520}
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 32)
!505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !209, line: 378, size: 192, elements: !507)
!507 = !{!508, !509, !510, !511, !517, !518}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !506, file: !209, line: 380, baseType: !212, size: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !506, file: !209, line: 382, baseType: !13, size: 32, offset: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !506, file: !209, line: 384, baseType: !13, size: 32, offset: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !506, file: !209, line: 386, baseType: !512, size: 32, offset: 96)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 32)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !209, line: 351, size: 16, elements: !514)
!514 = !{!515, !516}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !513, file: !209, line: 359, baseType: !221, size: 8)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !513, file: !209, line: 364, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !506, file: !209, line: 388, baseType: !102, size: 32, offset: 128)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !506, file: !209, line: 396, baseType: !227, size: 32, offset: 160)
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !485, line: 237, baseType: !221)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !485, line: 257, baseType: !137)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !498, file: !485, line: 530, baseType: !522, size: 32, offset: 32)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = !DISubroutineType(types: !524)
!524 = !{!103, !504, !525}
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 32)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !485, line: 229, baseType: !137)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !498, file: !485, line: 532, baseType: !528, size: 32, offset: 64)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 32)
!529 = !DISubroutineType(types: !530)
!530 = !{!103, !504, !531, !526}
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !485, line: 216, baseType: !137)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !498, file: !485, line: 535, baseType: !533, size: 32, offset: 96)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DISubroutineType(types: !535)
!535 = !{!103, !504, !531}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !498, file: !485, line: 537, baseType: !533, size: 32, offset: 128)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !498, file: !485, line: 539, baseType: !533, size: 32, offset: 160)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !498, file: !485, line: 541, baseType: !539, size: 32, offset: 192)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 32)
!540 = !DISubroutineType(types: !541)
!541 = !{!103, !504, !519, !484, !490}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !498, file: !485, line: 544, baseType: !543, size: 32, offset: 224)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 32)
!544 = !DISubroutineType(types: !545)
!545 = !{!103, !504, !546, !224}
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 32)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !485, line: 478, size: 96, elements: !548)
!548 = !{!549, !556, !561}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !547, file: !485, line: 482, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !551, line: 33, baseType: !552)
!551 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !551, line: 29, size: 32, elements: !553)
!553 = !{!554}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !552, file: !551, line: 30, baseType: !555, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !547, file: !485, line: 485, baseType: !557, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !485, line: 464, baseType: !558)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 32)
!559 = !DISubroutineType(types: !560)
!560 = !{null, !504, !546, !531}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !547, file: !485, line: 493, baseType: !531, size: 32, offset: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !498, file: !485, line: 547, baseType: !563, size: 32, offset: 256)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 32)
!564 = !DISubroutineType(types: !565)
!565 = !{!137, !504}
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 32)
!567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !485, line: 428, size: 32, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !568, file: !485, line: 434, baseType: !531, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !573)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !485, line: 441, size: 32, elements: !574)
!574 = !{!575}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !573, file: !485, line: 447, baseType: !531, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 32)
!577 = !{!479}
!578 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !200, line: 51, size: 64, elements: !581)
!581 = !{!582, !586}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !580, file: !200, line: 60, baseType: !583, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 32)
!584 = !DISubroutineType(types: !585)
!585 = !{!103, !504}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !580, file: !200, line: 65, baseType: !504, size: 32, offset: 32)
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !589, file: !661, line: 48, type: !737, isLocal: true, isDefinition: true)
!589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !591, retainedTypes: !647, globals: !658, splitDebugInlining: false, nameTableKind: None)
!590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!591 = !{!30, !592}
!592 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !172, line: 69, baseType: !103, size: 32, elements: !593)
!593 = !{!594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646}
!594 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!595 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!596 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!597 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!598 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!599 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!600 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!601 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!602 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!603 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!604 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!605 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!606 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!607 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!608 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!609 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!610 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!611 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!612 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!613 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!614 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!615 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!616 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!617 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!618 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!619 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!620 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!621 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!622 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!623 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!624 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!625 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!626 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!627 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!628 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!629 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!630 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!631 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!632 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!633 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!634 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!635 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!636 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!637 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!638 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!639 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!640 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!641 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!642 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!643 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!644 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!645 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!646 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!647 = !{!120, !103, !102, !648}
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 32)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !172, line: 270, baseType: !650)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 262, size: 192, elements: !651)
!651 = !{!652, !653, !654, !655, !656, !657}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !650, file: !172, line: 264, baseType: !176, size: 32)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !650, file: !172, line: 265, baseType: !176, size: 32, offset: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !650, file: !172, line: 266, baseType: !176, size: 32, offset: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !650, file: !172, line: 267, baseType: !176, size: 32, offset: 96)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !650, file: !172, line: 268, baseType: !176, size: 32, offset: 128)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !650, file: !172, line: 269, baseType: !176, size: 32, offset: 160)
!658 = !{!659, !665, !681, !692, !709, !587, !711, !725, !727, !729, !731, !733, !735}
!659 = !DIGlobalVariableExpression(var: !660, expr: !DIExpression())
!660 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !589, file: !661, line: 424, type: !662, isLocal: false, isDefinition: true, align: 16)
!661 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 64, elements: !663)
!663 = !{!664}
!664 = !DISubrange(count: 4)
!665 = !DIGlobalVariableExpression(var: !666, expr: !DIExpression())
!666 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !589, file: !661, line: 424, type: !667, isLocal: false, isDefinition: true, align: 32)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !209, line: 378, size: 192, elements: !669)
!669 = !{!670, !671, !672, !673, !679, !680}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !668, file: !209, line: 380, baseType: !212, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !668, file: !209, line: 382, baseType: !13, size: 32, offset: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !668, file: !209, line: 384, baseType: !13, size: 32, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !668, file: !209, line: 386, baseType: !674, size: 32, offset: 96)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 32)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !209, line: 351, size: 16, elements: !676)
!676 = !{!677, !678}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !675, file: !209, line: 359, baseType: !221, size: 8)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !675, file: !209, line: 364, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !668, file: !209, line: 388, baseType: !102, size: 32, offset: 128)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !668, file: !209, line: 396, baseType: !227, size: 32, offset: 160)
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !589, file: !661, line: 424, type: !683, isLocal: true, isDefinition: true, align: 32)
!683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !200, line: 51, size: 64, elements: !685)
!685 = !{!686, !691}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !684, file: !200, line: 60, baseType: !687, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 32)
!688 = !DISubroutineType(types: !689)
!689 = !{!103, !690}
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !684, file: !200, line: 65, baseType: !690, size: 32, offset: 32)
!692 = !DIGlobalVariableExpression(var: !693, expr: !DIExpression())
!693 = distinct !DIGlobalVariable(name: "exti_data", scope: !589, file: !661, line: 423, type: !694, isLocal: true, isDefinition: true)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !661, line: 107, size: 1024, elements: !695)
!695 = !{!696}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !694, file: !661, line: 109, baseType: !697, size: 1024)
!697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !698, size: 1024, elements: !707)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !661, line: 101, size: 64, elements: !699)
!699 = !{!700, !706}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !698, file: !661, line: 102, baseType: !701, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !702, line: 63, baseType: !703)
!702 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 32)
!704 = !DISubroutineType(types: !705)
!705 = !{null, !103, !102}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !698, file: !661, line: 103, baseType: !102, size: 32, offset: 32)
!707 = !{!708}
!708 = !DISubrange(count: 16)
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !589, file: !661, line: 424, type: !675, isLocal: true, isDefinition: true, align: 8)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !713, file: !661, line: 493, type: !718, isLocal: true, isDefinition: true, align: 32)
!713 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !661, file: !661, line: 460, type: !714, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !716)
!714 = !DISubroutineType(types: !715)
!715 = !{null, !690}
!716 = !{!717}
!717 = !DILocalVariable(name: "dev", arg: 1, scope: !713, file: !661, line: 460, type: !690)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !719)
!719 = !{!720, !722, !723, !724}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !718, file: !10, line: 55, baseType: !721, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !718, file: !10, line: 57, baseType: !721, size: 32, offset: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !718, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !718, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !713, file: !661, line: 497, type: !718, isLocal: true, isDefinition: true, align: 32)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !713, file: !661, line: 507, type: !718, isLocal: true, isDefinition: true, align: 32)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !713, file: !661, line: 512, type: !718, isLocal: true, isDefinition: true, align: 32)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !713, file: !661, line: 516, type: !718, isLocal: true, isDefinition: true, align: 32)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !713, file: !661, line: 523, type: !718, isLocal: true, isDefinition: true, align: 32)
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !713, file: !661, line: 527, type: !718, isLocal: true, isDefinition: true, align: 32)
!737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !738, size: 512, elements: !707)
!738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !739)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !172, line: 127, baseType: !592)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !742, file: !747, line: 21, type: !767, isLocal: false, isDefinition: true, align: 16)
!742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !743, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !744, splitDebugInlining: false, nameTableKind: None)
!743 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!744 = !{!745, !740, !751, !753, !755, !757, !759, !761, !763, !765}
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !742, file: !747, line: 16, type: !748, isLocal: false, isDefinition: true, align: 16)
!747 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 176, elements: !749)
!749 = !{!750}
!750 = !DISubrange(count: 11)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !742, file: !747, line: 28, type: !662, isLocal: false, isDefinition: true, align: 16)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !742, file: !747, line: 35, type: !662, isLocal: false, isDefinition: true, align: 16)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !742, file: !747, line: 42, type: !662, isLocal: false, isDefinition: true, align: 16)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !742, file: !747, line: 49, type: !662, isLocal: false, isDefinition: true, align: 16)
!759 = !DIGlobalVariableExpression(var: !760, expr: !DIExpression())
!760 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !742, file: !747, line: 56, type: !662, isLocal: false, isDefinition: true, align: 16)
!761 = !DIGlobalVariableExpression(var: !762, expr: !DIExpression())
!762 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !742, file: !747, line: 63, type: !662, isLocal: false, isDefinition: true, align: 16)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !742, file: !747, line: 70, type: !662, isLocal: false, isDefinition: true, align: 16)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !742, file: !747, line: 77, type: !662, isLocal: false, isDefinition: true, align: 16)
!767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 48, elements: !768)
!768 = !{!769}
!769 = !DISubrange(count: 3)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !772, file: !815, line: 398, type: !848, isLocal: true, isDefinition: true)
!772 = distinct !DICompileUnit(language: DW_LANG_C99, file: !773, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !774, retainedTypes: !787, globals: !812, splitDebugInlining: false, nameTableKind: None)
!773 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!774 = !{!775, !30, !780}
!775 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !776, line: 190, baseType: !32, size: 32, elements: !777)
!776 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!777 = !{!778, !779}
!778 = !DIEnumerator(name: "SUCCESS", value: 0)
!779 = !DIEnumerator(name: "ERROR", value: 1)
!780 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !781, line: 44, baseType: !32, size: 32, elements: !782)
!781 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!784 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!785 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!786 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!787 = !{!102, !103, !137, !788, !806, !149}
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 386, baseType: !790)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 370, size: 448, elements: !791)
!791 = !{!792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !790, file: !172, line: 372, baseType: !176, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !790, file: !172, line: 373, baseType: !176, size: 32, offset: 32)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !790, file: !172, line: 374, baseType: !176, size: 32, offset: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !790, file: !172, line: 375, baseType: !176, size: 32, offset: 96)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !790, file: !172, line: 376, baseType: !176, size: 32, offset: 128)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !790, file: !172, line: 377, baseType: !176, size: 32, offset: 160)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !790, file: !172, line: 378, baseType: !176, size: 32, offset: 192)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !790, file: !172, line: 379, baseType: !176, size: 32, offset: 224)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !790, file: !172, line: 380, baseType: !176, size: 32, offset: 256)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !790, file: !172, line: 381, baseType: !176, size: 32, offset: 288)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !790, file: !172, line: 382, baseType: !176, size: 32, offset: 320)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !790, file: !172, line: 383, baseType: !176, size: 32, offset: 352)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !790, file: !172, line: 384, baseType: !176, size: 32, offset: 384)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !790, file: !172, line: 385, baseType: !176, size: 32, offset: 416)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 32)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !808, line: 343, size: 64, elements: !809)
!808 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !807, file: !808, line: 344, baseType: !137, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !807, file: !808, line: 345, baseType: !137, size: 32, offset: 32)
!812 = !{!813, !819, !835, !846, !770}
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !772, file: !815, line: 752, type: !816, isLocal: false, isDefinition: true, align: 16)
!815 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 512, elements: !817)
!817 = !{!818}
!818 = !DISubrange(count: 32)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !772, file: !815, line: 752, type: !821, isLocal: false, isDefinition: true, align: 32)
!821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !209, line: 378, size: 192, elements: !823)
!823 = !{!824, !825, !826, !827, !833, !834}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !822, file: !209, line: 380, baseType: !212, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !822, file: !209, line: 382, baseType: !13, size: 32, offset: 32)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !822, file: !209, line: 384, baseType: !13, size: 32, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !822, file: !209, line: 386, baseType: !828, size: 32, offset: 96)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !209, line: 351, size: 16, elements: !830)
!830 = !{!831, !832}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !829, file: !209, line: 359, baseType: !221, size: 8)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !829, file: !209, line: 364, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !822, file: !209, line: 388, baseType: !102, size: 32, offset: 128)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !822, file: !209, line: 396, baseType: !227, size: 32, offset: 160)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !772, file: !815, line: 752, type: !837, isLocal: true, isDefinition: true, align: 32)
!837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !200, line: 51, size: 64, elements: !839)
!839 = !{!840, !845}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !838, file: !200, line: 60, baseType: !841, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DISubroutineType(types: !843)
!843 = !{!103, !844}
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !838, file: !200, line: 65, baseType: !844, size: 32, offset: 32)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !772, file: !815, line: 752, type: !829, isLocal: true, isDefinition: true, align: 8)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !781, line: 100, size: 224, elements: !849)
!849 = !{!850, !856, !857, !866, !871, !876, !882}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !848, file: !781, line: 101, baseType: !851, size: 32)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !781, line: 76, baseType: !852)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 32)
!853 = !DISubroutineType(types: !854)
!854 = !{!103, !844, !855}
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !781, line: 56, baseType: !102)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !848, file: !781, line: 102, baseType: !851, size: 32, offset: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !848, file: !781, line: 103, baseType: !858, size: 32, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !781, line: 83, baseType: !859)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 32)
!860 = !DISubroutineType(types: !861)
!861 = !{!103, !844, !855, !862, !102}
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !781, line: 72, baseType: !863)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32)
!864 = !DISubroutineType(types: !865)
!865 = !{null, !844, !855, !102}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !848, file: !781, line: 104, baseType: !867, size: 32, offset: 96)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !781, line: 79, baseType: !868)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!869 = !DISubroutineType(types: !870)
!870 = !{!103, !844, !855, !149}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !848, file: !781, line: 105, baseType: !872, size: 32, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !781, line: 88, baseType: !873)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!874 = !DISubroutineType(types: !875)
!875 = !{!780, !844, !855}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !848, file: !781, line: 106, baseType: !877, size: 32, offset: 160)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !781, line: 92, baseType: !878)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DISubroutineType(types: !880)
!880 = !{!103, !844, !855, !881}
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !781, line: 64, baseType: !102)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !848, file: !781, line: 107, baseType: !883, size: 32, offset: 192)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !781, line: 96, baseType: !884)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = !DISubroutineType(types: !886)
!886 = !{!103, !844, !855, !102}
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !889, file: !946, line: 603, type: !948, isLocal: true, isDefinition: true, align: 32)
!889 = distinct !DICompileUnit(language: DW_LANG_C99, file: !890, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !891, globals: !943, splitDebugInlining: false, nameTableKind: None)
!890 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!891 = !{!102, !103, !892}
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !894)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !895, line: 336, size: 160, elements: !896)
!895 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!896 = !{!897, !917, !921, !925, !938}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !894, file: !895, line: 365, baseType: !898, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!899 = !DISubroutineType(types: !900)
!900 = !{!103, !901, !916}
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !903)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !209, line: 378, size: 192, elements: !904)
!904 = !{!905, !906, !907, !908, !914, !915}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !903, file: !209, line: 380, baseType: !212, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !903, file: !209, line: 382, baseType: !13, size: 32, offset: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !903, file: !209, line: 384, baseType: !13, size: 32, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !903, file: !209, line: 386, baseType: !909, size: 32, offset: 96)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !209, line: 351, size: 16, elements: !911)
!911 = !{!912, !913}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !910, file: !209, line: 359, baseType: !221, size: 8)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !910, file: !209, line: 364, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !903, file: !209, line: 388, baseType: !102, size: 32, offset: 128)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !903, file: !209, line: 396, baseType: !227, size: 32, offset: 160)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !894, file: !895, line: 366, baseType: !918, size: 32, offset: 32)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 32)
!919 = !DISubroutineType(types: !920)
!920 = !{null, !901, !222}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !894, file: !895, line: 374, baseType: !922, size: 32, offset: 64)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = !DISubroutineType(types: !924)
!924 = !{!103, !901}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !894, file: !895, line: 377, baseType: !926, size: 32, offset: 96)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DISubroutineType(types: !928)
!928 = !{!103, !901, !929}
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !895, line: 122, size: 64, elements: !932)
!932 = !{!933, !934, !935, !936, !937}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !931, file: !895, line: 123, baseType: !137, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !931, file: !895, line: 124, baseType: !221, size: 8, offset: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !931, file: !895, line: 125, baseType: !221, size: 8, offset: 40)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !931, file: !895, line: 126, baseType: !221, size: 8, offset: 48)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !931, file: !895, line: 127, baseType: !221, size: 8, offset: 56)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !894, file: !895, line: 379, baseType: !939, size: 32, offset: 128)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DISubroutineType(types: !941)
!941 = !{!103, !901, !942}
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!943 = !{!887, !944}
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !889, file: !946, line: 38, type: !947, isLocal: true, isDefinition: true)
!946 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !901)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !200, line: 51, size: 64, elements: !950)
!950 = !{!951, !952}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !949, file: !200, line: 60, baseType: !922, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !949, file: !200, line: 65, baseType: !901, size: 32, offset: 32)
!953 = !DIGlobalVariableExpression(var: !954, expr: !DIExpression())
!954 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !955, file: !1106, line: 762, type: !1202, isLocal: true, isDefinition: true)
!955 = distinct !DICompileUnit(language: DW_LANG_C99, file: !956, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !957, retainedTypes: !964, globals: !1103, splitDebugInlining: false, nameTableKind: None)
!956 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!957 = !{!30, !484, !490, !958, !780}
!958 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !702, line: 43, baseType: !32, size: 32, elements: !959)
!959 = !{!960, !961, !962, !963}
!960 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!961 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!962 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!963 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!964 = !{!102, !103, !965, !1029, !1034, !531, !490, !484, !1039, !1040, !137, !1054, !1010, !1062, !1063, !1064}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !485, line: 523, size: 288, elements: !968)
!968 = !{!969, !988, !992, !996, !1000, !1001, !1002, !1006, !1025}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !967, file: !485, line: 524, baseType: !970, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!971 = !DISubroutineType(types: !972)
!972 = !{!103, !973, !519, !520}
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !975)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !209, line: 378, size: 192, elements: !976)
!976 = !{!977, !978, !979, !980, !986, !987}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !975, file: !209, line: 380, baseType: !212, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !975, file: !209, line: 382, baseType: !13, size: 32, offset: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !975, file: !209, line: 384, baseType: !13, size: 32, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !975, file: !209, line: 386, baseType: !981, size: 32, offset: 96)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !209, line: 351, size: 16, elements: !983)
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !982, file: !209, line: 359, baseType: !221, size: 8)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !982, file: !209, line: 364, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !975, file: !209, line: 388, baseType: !102, size: 32, offset: 128)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !975, file: !209, line: 396, baseType: !227, size: 32, offset: 160)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !967, file: !485, line: 530, baseType: !989, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DISubroutineType(types: !991)
!991 = !{!103, !973, !525}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !967, file: !485, line: 532, baseType: !993, size: 32, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = !DISubroutineType(types: !995)
!995 = !{!103, !973, !531, !526}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !967, file: !485, line: 535, baseType: !997, size: 32, offset: 96)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DISubroutineType(types: !999)
!999 = !{!103, !973, !531}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !967, file: !485, line: 537, baseType: !997, size: 32, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !967, file: !485, line: 539, baseType: !997, size: 32, offset: 160)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !967, file: !485, line: 541, baseType: !1003, size: 32, offset: 192)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!103, !973, !519, !484, !490}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !967, file: !485, line: 544, baseType: !1007, size: 32, offset: 224)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 32)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!103, !973, !1010, !224}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !485, line: 478, size: 96, elements: !1012)
!1012 = !{!1013, !1019, !1024}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1011, file: !485, line: 482, baseType: !1014, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !551, line: 33, baseType: !1015)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !551, line: 29, size: 32, elements: !1016)
!1016 = !{!1017}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1015, file: !551, line: 30, baseType: !1018, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1011, file: !485, line: 485, baseType: !1020, size: 32, offset: 32)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !485, line: 464, baseType: !1021)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{null, !973, !1010, !531}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1011, file: !485, line: 493, baseType: !531, size: 32, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !967, file: !485, line: 547, baseType: !1026, size: 32, offset: 256)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!137, !973}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !485, line: 428, size: 32, elements: !1032)
!1032 = !{!1033}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1031, file: !485, line: 434, baseType: !531, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1036)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !485, line: 441, size: 32, elements: !1037)
!1037 = !{!1038}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1036, file: !485, line: 447, baseType: !531, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 314, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 303, size: 320, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1042, file: !172, line: 305, baseType: !176, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1042, file: !172, line: 306, baseType: !176, size: 32, offset: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1042, file: !172, line: 307, baseType: !176, size: 32, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1042, file: !172, line: 308, baseType: !176, size: 32, offset: 96)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1042, file: !172, line: 309, baseType: !176, size: 32, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1042, file: !172, line: 310, baseType: !176, size: 32, offset: 160)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1042, file: !172, line: 311, baseType: !176, size: 32, offset: 192)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1042, file: !172, line: 312, baseType: !176, size: 32, offset: 224)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1042, file: !172, line: 313, baseType: !1053, size: 64, offset: 256)
!1053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 64, elements: !307)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !172, line: 325, baseType: !1056)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 320, size: 192, elements: !1057)
!1057 = !{!1058, !1059, !1060}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1056, file: !172, line: 322, baseType: !176, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1056, file: !172, line: 323, baseType: !176, size: 32, offset: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1056, file: !172, line: 324, baseType: !1061, size: 128, offset: 64)
!1061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 128, elements: !663)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 32)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1066)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !781, line: 100, size: 224, elements: !1067)
!1067 = !{!1068, !1073, !1074, !1083, !1088, !1093, !1098}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1066, file: !781, line: 101, baseType: !1069, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !781, line: 76, baseType: !1070)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!103, !973, !855}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1066, file: !781, line: 102, baseType: !1069, size: 32, offset: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1066, file: !781, line: 103, baseType: !1075, size: 32, offset: 64)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !781, line: 83, baseType: !1076)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!103, !973, !855, !1079, !102}
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !781, line: 72, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{null, !973, !855, !102}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1066, file: !781, line: 104, baseType: !1084, size: 32, offset: 96)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !781, line: 79, baseType: !1085)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 32)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!103, !973, !855, !149}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1066, file: !781, line: 105, baseType: !1089, size: 32, offset: 128)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !781, line: 88, baseType: !1090)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 32)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!780, !973, !855}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1066, file: !781, line: 106, baseType: !1094, size: 32, offset: 160)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !781, line: 92, baseType: !1095)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!103, !973, !855, !881}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1066, file: !781, line: 107, baseType: !1099, size: 32, offset: 192)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !781, line: 96, baseType: !1100)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!103, !973, !855, !102}
!1103 = !{!1104, !1108, !1110, !1120, !1125, !1127, !1129, !1134, !1136, !1138, !1143, !1145, !1147, !1149, !1151, !1153, !1158, !1160, !1162, !1176, !1178, !1180, !1182, !1184, !1186, !1188, !1190, !1192, !1194, !1196, !953, !1198, !1200, !1213, !1215, !1217, !1219}
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !955, file: !1106, line: 762, type: !1107, isLocal: false, isDefinition: true, align: 16)
!1106 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 128, elements: !159)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !955, file: !1106, line: 762, type: !974, isLocal: false, isDefinition: true, align: 32)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !955, file: !1106, line: 762, type: !1112, isLocal: true, isDefinition: true, align: 32)
!1112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1113)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !200, line: 51, size: 64, elements: !1114)
!1114 = !{!1115, !1119}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1113, file: !200, line: 60, baseType: !1116, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!103, !973}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1113, file: !200, line: 65, baseType: !973, size: 32, offset: 32)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !955, file: !1106, line: 766, type: !1122, isLocal: false, isDefinition: true, align: 16)
!1122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 144, elements: !1123)
!1123 = !{!1124}
!1124 = !DISubrange(count: 9)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !955, file: !1106, line: 766, type: !974, isLocal: false, isDefinition: true, align: 32)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !955, file: !1106, line: 766, type: !1112, isLocal: true, isDefinition: true, align: 32)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !955, file: !1106, line: 770, type: !1131, isLocal: false, isDefinition: true, align: 16)
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 96, elements: !1132)
!1132 = !{!1133}
!1133 = !DISubrange(count: 6)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !955, file: !1106, line: 770, type: !974, isLocal: false, isDefinition: true, align: 32)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !955, file: !1106, line: 770, type: !1112, isLocal: true, isDefinition: true, align: 32)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !955, file: !1106, line: 774, type: !1140, isLocal: false, isDefinition: true, align: 16)
!1140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 80, elements: !1141)
!1141 = !{!1142}
!1142 = !DISubrange(count: 5)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !955, file: !1106, line: 774, type: !974, isLocal: false, isDefinition: true, align: 32)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !955, file: !1106, line: 774, type: !1112, isLocal: true, isDefinition: true, align: 32)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !955, file: !1106, line: 778, type: !1140, isLocal: false, isDefinition: true, align: 16)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !955, file: !1106, line: 778, type: !974, isLocal: false, isDefinition: true, align: 32)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !955, file: !1106, line: 778, type: !1112, isLocal: true, isDefinition: true, align: 32)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !955, file: !1106, line: 790, type: !1155, isLocal: false, isDefinition: true, align: 16)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 112, elements: !1156)
!1156 = !{!1157}
!1157 = !DISubrange(count: 7)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !955, file: !1106, line: 790, type: !974, isLocal: false, isDefinition: true, align: 32)
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !955, file: !1106, line: 790, type: !1112, isLocal: true, isDefinition: true, align: 32)
!1162 = !DIGlobalVariableExpression(var: !1163, expr: !DIExpression())
!1163 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !955, file: !1106, line: 762, type: !1164, isLocal: true, isDefinition: true)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1165, line: 237, size: 128, elements: !1166)
!1165 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1166 = !{!1167, !1168, !1169}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1164, file: !1165, line: 239, baseType: !1036, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1164, file: !1165, line: 241, baseType: !973, size: 32, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1164, file: !1165, line: 243, baseType: !1170, size: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !551, line: 40, baseType: !1171)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !551, line: 35, size: 64, elements: !1172)
!1172 = !{!1173, !1175}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1171, file: !551, line: 36, baseType: !1174, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1171, file: !551, line: 37, baseType: !1174, size: 32, offset: 32)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !955, file: !1106, line: 762, type: !982, isLocal: true, isDefinition: true, align: 8)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !955, file: !1106, line: 766, type: !1164, isLocal: true, isDefinition: true)
!1180 = !DIGlobalVariableExpression(var: !1181, expr: !DIExpression())
!1181 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !955, file: !1106, line: 766, type: !982, isLocal: true, isDefinition: true, align: 8)
!1182 = !DIGlobalVariableExpression(var: !1183, expr: !DIExpression())
!1183 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !955, file: !1106, line: 770, type: !1164, isLocal: true, isDefinition: true)
!1184 = !DIGlobalVariableExpression(var: !1185, expr: !DIExpression())
!1185 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !955, file: !1106, line: 770, type: !982, isLocal: true, isDefinition: true, align: 8)
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !955, file: !1106, line: 774, type: !1164, isLocal: true, isDefinition: true)
!1188 = !DIGlobalVariableExpression(var: !1189, expr: !DIExpression())
!1189 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !955, file: !1106, line: 774, type: !982, isLocal: true, isDefinition: true, align: 8)
!1190 = !DIGlobalVariableExpression(var: !1191, expr: !DIExpression())
!1191 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !955, file: !1106, line: 778, type: !1164, isLocal: true, isDefinition: true)
!1192 = !DIGlobalVariableExpression(var: !1193, expr: !DIExpression())
!1193 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !955, file: !1106, line: 778, type: !982, isLocal: true, isDefinition: true, align: 8)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !955, file: !1106, line: 790, type: !1164, isLocal: true, isDefinition: true)
!1196 = !DIGlobalVariableExpression(var: !1197, expr: !DIExpression())
!1197 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !955, file: !1106, line: 790, type: !982, isLocal: true, isDefinition: true, align: 8)
!1198 = !DIGlobalVariableExpression(var: !1199, expr: !DIExpression())
!1199 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !955, file: !1106, line: 656, type: !966, isLocal: true, isDefinition: true)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !955, file: !1106, line: 766, type: !1202, isLocal: true, isDefinition: true)
!1202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1165, line: 224, size: 160, elements: !1204)
!1204 = !{!1205, !1206, !1207, !1208}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1203, file: !1165, line: 226, baseType: !1031, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1203, file: !1165, line: 228, baseType: !149, size: 32, offset: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1203, file: !1165, line: 230, baseType: !103, size: 32, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1203, file: !1165, line: 231, baseType: !1209, size: 64, offset: 96)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !808, line: 343, size: 64, elements: !1210)
!1210 = !{!1211, !1212}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1209, file: !808, line: 344, baseType: !137, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1209, file: !808, line: 345, baseType: !137, size: 32, offset: 32)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !955, file: !1106, line: 770, type: !1202, isLocal: true, isDefinition: true)
!1215 = !DIGlobalVariableExpression(var: !1216, expr: !DIExpression())
!1216 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !955, file: !1106, line: 774, type: !1202, isLocal: true, isDefinition: true)
!1217 = !DIGlobalVariableExpression(var: !1218, expr: !DIExpression())
!1218 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !955, file: !1106, line: 778, type: !1202, isLocal: true, isDefinition: true)
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !955, file: !1106, line: 790, type: !1202, isLocal: true, isDefinition: true)
!1221 = !DIGlobalVariableExpression(var: !1222, expr: !DIExpression())
!1222 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1223, file: !1361, line: 1914, type: !1429, isLocal: true, isDefinition: true)
!1223 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1224, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1225, retainedTypes: !1258, globals: !1358, splitDebugInlining: false, nameTableKind: None)
!1224 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!1225 = !{!30, !1226, !1233, !1240, !1247, !1253, !780}
!1226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !895, line: 47, baseType: !32, size: 32, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1231, !1232}
!1228 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1229 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1230 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1231 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1232 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1233 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !895, line: 75, baseType: !32, size: 32, elements: !1234)
!1234 = !{!1235, !1236, !1237, !1238, !1239}
!1235 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1236 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1237 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1238 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1239 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !895, line: 92, baseType: !32, size: 32, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245, !1246}
!1242 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1243 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1244 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1245 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1246 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1247 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !895, line: 84, baseType: !32, size: 32, elements: !1248)
!1248 = !{!1249, !1250, !1251, !1252}
!1249 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1250 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1251 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1252 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1253 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !895, line: 107, baseType: !32, size: 32, elements: !1254)
!1254 = !{!1255, !1256, !1257}
!1255 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1256 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1257 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1258 = !{!102, !103, !1259, !222, !221, !1308, !137, !855, !1319, !151}
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1261)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !895, line: 336, size: 160, elements: !1262)
!1262 = !{!1263, !1282, !1286, !1290, !1303}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1261, file: !895, line: 365, baseType: !1264, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!103, !1267, !916}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !209, line: 378, size: 192, elements: !1270)
!1270 = !{!1271, !1272, !1273, !1274, !1280, !1281}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1269, file: !209, line: 380, baseType: !212, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1269, file: !209, line: 382, baseType: !13, size: 32, offset: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1269, file: !209, line: 384, baseType: !13, size: 32, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1269, file: !209, line: 386, baseType: !1275, size: 32, offset: 96)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !209, line: 351, size: 16, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1276, file: !209, line: 359, baseType: !221, size: 8)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1276, file: !209, line: 364, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1269, file: !209, line: 388, baseType: !102, size: 32, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1269, file: !209, line: 396, baseType: !227, size: 32, offset: 160)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1261, file: !895, line: 366, baseType: !1283, size: 32, offset: 32)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{null, !1267, !222}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1261, file: !895, line: 374, baseType: !1287, size: 32, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!103, !1267}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1261, file: !895, line: 377, baseType: !1291, size: 32, offset: 96)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!103, !1267, !1294}
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1296)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !895, line: 122, size: 64, elements: !1297)
!1297 = !{!1298, !1299, !1300, !1301, !1302}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1296, file: !895, line: 123, baseType: !137, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1296, file: !895, line: 124, baseType: !221, size: 8, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1296, file: !895, line: 125, baseType: !221, size: 8, offset: 40)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1296, file: !895, line: 126, baseType: !221, size: 8, offset: 48)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1296, file: !895, line: 127, baseType: !221, size: 8, offset: 56)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1261, file: !895, line: 379, baseType: !1304, size: 32, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{!103, !1267, !1307}
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !172, line: 505, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 496, size: 224, elements: !1311)
!1311 = !{!1312, !1313, !1314, !1315, !1316, !1317, !1318}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1310, file: !172, line: 498, baseType: !176, size: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1310, file: !172, line: 499, baseType: !176, size: 32, offset: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1310, file: !172, line: 500, baseType: !176, size: 32, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1310, file: !172, line: 501, baseType: !176, size: 32, offset: 96)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1310, file: !172, line: 502, baseType: !176, size: 32, offset: 128)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1310, file: !172, line: 503, baseType: !176, size: 32, offset: 160)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1310, file: !172, line: 504, baseType: !176, size: 32, offset: 192)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !781, line: 100, size: 224, elements: !1322)
!1322 = !{!1323, !1328, !1329, !1338, !1343, !1348, !1353}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1321, file: !781, line: 101, baseType: !1324, size: 32)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !781, line: 76, baseType: !1325)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{!103, !1267, !855}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1321, file: !781, line: 102, baseType: !1324, size: 32, offset: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1321, file: !781, line: 103, baseType: !1330, size: 32, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !781, line: 83, baseType: !1331)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!103, !1267, !855, !1334, !102}
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !781, line: 72, baseType: !1335)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{null, !1267, !855, !102}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1321, file: !781, line: 104, baseType: !1339, size: 32, offset: 96)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !781, line: 79, baseType: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 32)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!103, !1267, !855, !149}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1321, file: !781, line: 105, baseType: !1344, size: 32, offset: 128)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !781, line: 88, baseType: !1345)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 32)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{!780, !1267, !855}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1321, file: !781, line: 106, baseType: !1349, size: 32, offset: 160)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !781, line: 92, baseType: !1350)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 32)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{!103, !1267, !855, !881}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1321, file: !781, line: 107, baseType: !1354, size: 32, offset: 192)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !781, line: 96, baseType: !1355)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 32)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!103, !1267, !855, !102}
!1358 = !{!1359, !1362, !1364, !1371, !1373, !1375, !1377, !1379, !1221, !1381, !1389, !1412, !1415, !1418, !1420, !1427, !1444, !1446, !1448, !1450, !1452}
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1223, file: !1361, line: 1914, type: !1107, isLocal: false, isDefinition: true, align: 16)
!1361 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1223, file: !1361, line: 1914, type: !1268, isLocal: false, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1223, file: !1361, line: 1914, type: !1366, isLocal: true, isDefinition: true, align: 32)
!1366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !200, line: 51, size: 64, elements: !1368)
!1368 = !{!1369, !1370}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1367, file: !200, line: 60, baseType: !1287, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1367, file: !200, line: 65, baseType: !1267, size: 32, offset: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1223, file: !1361, line: 1914, type: !1107, isLocal: false, isDefinition: true, align: 16)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1223, file: !1361, line: 1914, type: !1268, isLocal: false, isDefinition: true, align: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1223, file: !1361, line: 1914, type: !1366, isLocal: true, isDefinition: true, align: 32)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1223, file: !1361, line: 1914, type: !1276, isLocal: true, isDefinition: true, align: 8)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1223, file: !1361, line: 1914, type: !1276, isLocal: true, isDefinition: true, align: 8)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1223, file: !1361, line: 1914, type: !1383, isLocal: true, isDefinition: true)
!1383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1384, size: 64, elements: !404)
!1384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !808, line: 343, size: 64, elements: !1386)
!1386 = !{!1387, !1388}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1385, file: !808, line: 344, baseType: !137, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1385, file: !808, line: 345, baseType: !137, size: 32, offset: 32)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1223, file: !1361, line: 1914, type: !1391, isLocal: true, isDefinition: true)
!1391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1393, line: 60, size: 64, elements: !1394)
!1393 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1394 = !{!1395, !1411}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1392, file: !1393, line: 69, baseType: !1396, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1398)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1393, line: 50, size: 64, elements: !1399)
!1399 = !{!1400, !1409, !1410}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1398, file: !1393, line: 52, baseType: !1401, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1404, line: 37, baseType: !1405)
!1404 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1404, line: 32, size: 64, elements: !1406)
!1406 = !{!1407, !1408}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1405, file: !1404, line: 34, baseType: !137, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1405, file: !1404, line: 36, baseType: !137, size: 32, offset: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1398, file: !1393, line: 54, baseType: !221, size: 8, offset: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1398, file: !1393, line: 56, baseType: !221, size: 8, offset: 40)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1392, file: !1393, line: 71, baseType: !221, size: 8, offset: 32)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1223, file: !1361, line: 1914, type: !1414, isLocal: true, isDefinition: true)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 64, elements: !404)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1223, file: !1361, line: 1914, type: !1417, isLocal: true, isDefinition: true)
!1417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1402, size: 128, elements: !307)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1223, file: !1361, line: 1539, type: !1260, isLocal: true, isDefinition: true)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1223, file: !1361, line: 1914, type: !1422, isLocal: true, isDefinition: true)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1423, line: 74, size: 64, elements: !1424)
!1423 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1424 = !{!1425, !1426}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1422, file: !1423, line: 76, baseType: !137, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1422, file: !1423, line: 78, baseType: !1267, size: 32, offset: 32)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1223, file: !1361, line: 1914, type: !1429, isLocal: true, isDefinition: true)
!1429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1430)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1423, line: 22, size: 224, elements: !1431)
!1431 = !{!1432, !1433, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1430, file: !1423, line: 24, baseType: !1308, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1430, file: !1423, line: 26, baseType: !1434, size: 32, offset: 32)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1430, file: !1423, line: 28, baseType: !120, size: 32, offset: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1430, file: !1423, line: 30, baseType: !224, size: 8, offset: 96)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1430, file: !1423, line: 32, baseType: !103, size: 32, offset: 128)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1430, file: !1423, line: 34, baseType: !224, size: 8, offset: 160)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1430, file: !1423, line: 36, baseType: !224, size: 8, offset: 168)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1430, file: !1423, line: 38, baseType: !224, size: 8, offset: 176)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1430, file: !1423, line: 40, baseType: !224, size: 8, offset: 184)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1430, file: !1423, line: 41, baseType: !1443, size: 32, offset: 192)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1223, file: !1361, line: 1914, type: !1383, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1223, file: !1361, line: 1914, type: !1391, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1223, file: !1361, line: 1914, type: !1414, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1223, file: !1361, line: 1914, type: !1417, isLocal: true, isDefinition: true)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1223, file: !1361, line: 1914, type: !1422, isLocal: true, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1456, file: !1536, line: 65, type: !176, isLocal: true, isDefinition: true)
!1456 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1457, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1458, retainedTypes: !1459, globals: !1533, splitDebugInlining: false, nameTableKind: None)
!1457 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!1458 = !{!592}
!1459 = !{!1460, !1462, !721, !221, !137, !1470, !1501}
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1461, line: 46, baseType: !343)
!1461 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !415, line: 712, baseType: !1464)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 706, size: 128, elements: !1465)
!1465 = !{!1466, !1467, !1468, !1469}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1464, file: !415, line: 708, baseType: !176, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1464, file: !415, line: 709, baseType: !176, size: 32, offset: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1464, file: !415, line: 710, baseType: !176, size: 32, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1464, file: !415, line: 711, baseType: !419, size: 32, offset: 96)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !415, line: 360, baseType: !1472)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 345, size: 28704, elements: !1473)
!1473 = !{!1474, !1476, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1491, !1496, !1500}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1472, file: !415, line: 347, baseType: !1475, size: 256)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 256, elements: !159)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1472, file: !415, line: 348, baseType: !1477, size: 768, offset: 256)
!1477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 768, elements: !1478)
!1478 = !{!1479}
!1479 = !DISubrange(count: 24)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1472, file: !415, line: 349, baseType: !1475, size: 256, offset: 1024)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1472, file: !415, line: 350, baseType: !1477, size: 768, offset: 1280)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1472, file: !415, line: 351, baseType: !1475, size: 256, offset: 2048)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1472, file: !415, line: 352, baseType: !1477, size: 768, offset: 2304)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1472, file: !415, line: 353, baseType: !1475, size: 256, offset: 3072)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1472, file: !415, line: 354, baseType: !1477, size: 768, offset: 3328)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1472, file: !415, line: 355, baseType: !1475, size: 256, offset: 4096)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1472, file: !415, line: 356, baseType: !1488, size: 1792, offset: 4352)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 1792, elements: !1489)
!1489 = !{!1490}
!1490 = !DISubrange(count: 56)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1472, file: !415, line: 357, baseType: !1492, size: 1920, offset: 6144)
!1492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 1920, elements: !1494)
!1493 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !221)
!1494 = !{!1495}
!1495 = !DISubrange(count: 240)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1472, file: !415, line: 358, baseType: !1497, size: 20608, offset: 8064)
!1497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 20608, elements: !1498)
!1498 = !{!1499}
!1499 = !DISubrange(count: 644)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1472, file: !415, line: 359, baseType: !176, size: 32, offset: 28672)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 402, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 379, size: 1120, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1510, !1511, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1524, !1525, !1526, !1528, !1530, !1532}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1503, file: !415, line: 381, baseType: !419, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1503, file: !415, line: 382, baseType: !176, size: 32, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1503, file: !415, line: 383, baseType: !176, size: 32, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1503, file: !415, line: 384, baseType: !176, size: 32, offset: 96)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1503, file: !415, line: 385, baseType: !176, size: 32, offset: 128)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1503, file: !415, line: 386, baseType: !176, size: 32, offset: 160)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1503, file: !415, line: 387, baseType: !1512, size: 96, offset: 192)
!1512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 96, elements: !1513)
!1513 = !{!1514}
!1514 = !DISubrange(count: 12)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1503, file: !415, line: 388, baseType: !176, size: 32, offset: 288)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1503, file: !415, line: 389, baseType: !176, size: 32, offset: 320)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1503, file: !415, line: 390, baseType: !176, size: 32, offset: 352)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1503, file: !415, line: 391, baseType: !176, size: 32, offset: 384)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1503, file: !415, line: 392, baseType: !176, size: 32, offset: 416)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1503, file: !415, line: 393, baseType: !176, size: 32, offset: 448)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1503, file: !415, line: 394, baseType: !176, size: 32, offset: 480)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1503, file: !415, line: 395, baseType: !1523, size: 64, offset: 512)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 64, elements: !307)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1503, file: !415, line: 396, baseType: !419, size: 32, offset: 576)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1503, file: !415, line: 397, baseType: !419, size: 32, offset: 608)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1503, file: !415, line: 398, baseType: !1527, size: 128, offset: 640)
!1527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 128, elements: !663)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1503, file: !415, line: 399, baseType: !1529, size: 160, offset: 768)
!1529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 160, elements: !1141)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1503, file: !415, line: 400, baseType: !1531, size: 160, offset: 928)
!1531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 160, elements: !1141)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1503, file: !415, line: 401, baseType: !176, size: 32, offset: 1088)
!1533 = !{!1534, !1560, !1563, !1565, !1567, !1454}
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1456, file: !1536, line: 285, type: !1537, isLocal: true, isDefinition: true, align: 32)
!1536 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1538)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !200, line: 51, size: 64, elements: !1539)
!1539 = !{!1540, !1559}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1538, file: !200, line: 60, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!103, !1544}
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1546)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !209, line: 378, size: 192, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1557, !1558}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1546, file: !209, line: 380, baseType: !212, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1546, file: !209, line: 382, baseType: !13, size: 32, offset: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1546, file: !209, line: 384, baseType: !13, size: 32, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1546, file: !209, line: 386, baseType: !1552, size: 32, offset: 96)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 32)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !209, line: 351, size: 16, elements: !1554)
!1554 = !{!1555, !1556}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1553, file: !209, line: 359, baseType: !221, size: 8)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1553, file: !209, line: 364, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1546, file: !209, line: 388, baseType: !102, size: 32, offset: 128)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1546, file: !209, line: 396, baseType: !227, size: 32, offset: 160)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1538, file: !200, line: 65, baseType: !1544, size: 32, offset: 32)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "lock", scope: !1456, file: !1536, line: 34, type: !1562, isLocal: true, isDefinition: true)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !381, line: 43, elements: !162)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "last_load", scope: !1456, file: !1536, line: 36, type: !137, isLocal: true, isDefinition: true)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1456, file: !1536, line: 48, type: !137, isLocal: true, isDefinition: true)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1456, file: !1536, line: 54, type: !137, isLocal: true, isDefinition: true)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1571, file: !1652, line: 22, type: !1654, isLocal: true, isDefinition: true)
!1571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1572, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !483, retainedTypes: !1573, globals: !1649, splitDebugInlining: false, nameTableKind: None)
!1572 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!1573 = !{!1574, !1638, !1643, !531, !490, !484, !1648, !102}
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1576)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !485, line: 523, size: 288, elements: !1577)
!1577 = !{!1578, !1597, !1601, !1605, !1609, !1610, !1611, !1615, !1634}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1576, file: !485, line: 524, baseType: !1579, size: 32)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 32)
!1580 = !DISubroutineType(types: !1581)
!1581 = !{!103, !1582, !519, !520}
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !209, line: 378, size: 192, elements: !1585)
!1585 = !{!1586, !1587, !1588, !1589, !1595, !1596}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1584, file: !209, line: 380, baseType: !212, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1584, file: !209, line: 382, baseType: !13, size: 32, offset: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1584, file: !209, line: 384, baseType: !13, size: 32, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1584, file: !209, line: 386, baseType: !1590, size: 32, offset: 96)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 32)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !209, line: 351, size: 16, elements: !1592)
!1592 = !{!1593, !1594}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1591, file: !209, line: 359, baseType: !221, size: 8)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1591, file: !209, line: 364, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1584, file: !209, line: 388, baseType: !102, size: 32, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1584, file: !209, line: 396, baseType: !227, size: 32, offset: 160)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1576, file: !485, line: 530, baseType: !1598, size: 32, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!103, !1582, !525}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1576, file: !485, line: 532, baseType: !1602, size: 32, offset: 64)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!103, !1582, !531, !526}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1576, file: !485, line: 535, baseType: !1606, size: 32, offset: 96)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 32)
!1607 = !DISubroutineType(types: !1608)
!1608 = !{!103, !1582, !531}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1576, file: !485, line: 537, baseType: !1606, size: 32, offset: 128)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1576, file: !485, line: 539, baseType: !1606, size: 32, offset: 160)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1576, file: !485, line: 541, baseType: !1612, size: 32, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 32)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{!103, !1582, !519, !484, !490}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1576, file: !485, line: 544, baseType: !1616, size: 32, offset: 224)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!103, !1582, !1619, !224}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !485, line: 478, size: 96, elements: !1621)
!1621 = !{!1622, !1628, !1633}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1620, file: !485, line: 482, baseType: !1623, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !551, line: 33, baseType: !1624)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !551, line: 29, size: 32, elements: !1625)
!1625 = !{!1626}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1624, file: !551, line: 30, baseType: !1627, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1620, file: !485, line: 485, baseType: !1629, size: 32, offset: 32)
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !485, line: 464, baseType: !1630)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{null, !1582, !1619, !531}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1620, file: !485, line: 493, baseType: !531, size: 32, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1576, file: !485, line: 547, baseType: !1635, size: 32, offset: 256)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!137, !1582}
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !485, line: 428, size: 32, elements: !1641)
!1641 = !{!1642}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1640, file: !485, line: 434, baseType: !531, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1645)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !485, line: 441, size: 32, elements: !1646)
!1646 = !{!1647}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1645, file: !485, line: 447, baseType: !531, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 32)
!1649 = !{!1650, !1569}
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1651 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1571, file: !1652, line: 37, type: !1653, isLocal: true, isDefinition: true)
!1652 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1655, size: 352, elements: !749)
!1655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1582)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1658, file: !1682, line: 129, type: !1690, isLocal: false, isDefinition: true)
!1658 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1659, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1660, globals: !1679, splitDebugInlining: false, nameTableKind: None)
!1659 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!1660 = !{!1661}
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 386, baseType: !1663)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 370, size: 448, elements: !1664)
!1664 = !{!1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1663, file: !172, line: 372, baseType: !176, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1663, file: !172, line: 373, baseType: !176, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1663, file: !172, line: 374, baseType: !176, size: 32, offset: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1663, file: !172, line: 375, baseType: !176, size: 32, offset: 96)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1663, file: !172, line: 376, baseType: !176, size: 32, offset: 128)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1663, file: !172, line: 377, baseType: !176, size: 32, offset: 160)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1663, file: !172, line: 378, baseType: !176, size: 32, offset: 192)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1663, file: !172, line: 379, baseType: !176, size: 32, offset: 224)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1663, file: !172, line: 380, baseType: !176, size: 32, offset: 256)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1663, file: !172, line: 381, baseType: !176, size: 32, offset: 288)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1663, file: !172, line: 382, baseType: !176, size: 32, offset: 320)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1663, file: !172, line: 383, baseType: !176, size: 32, offset: 352)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1663, file: !172, line: 384, baseType: !176, size: 32, offset: 384)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1663, file: !172, line: 385, baseType: !176, size: 32, offset: 416)
!1679 = !{!1680, !1683, !1687, !1656}
!1680 = !DIGlobalVariableExpression(var: !1681, expr: !DIExpression())
!1681 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1658, file: !1682, line: 126, type: !137, isLocal: false, isDefinition: true)
!1682 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1658, file: !1682, line: 127, type: !1685, isLocal: false, isDefinition: true)
!1685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1686, size: 72, elements: !1123)
!1686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !221)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1658, file: !1682, line: 128, type: !1689, isLocal: false, isDefinition: true)
!1689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1686, size: 128, elements: !707)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1686, size: 64, elements: !159)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1693, file: !1696, line: 23, type: !1697, isLocal: false, isDefinition: true)
!1693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1694, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1695, splitDebugInlining: false, nameTableKind: None)
!1694 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!1695 = !{!1691}
!1696 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1700, file: !1704, line: 86, type: !1952, isLocal: false, isDefinition: true, align: 512)
!1700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1701, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1702, retainedTypes: !1711, globals: !1785, splitDebugInlining: false, nameTableKind: None)
!1701 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!1702 = !{!1703, !30, !592}
!1703 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1704, line: 63, baseType: !32, size: 32, elements: !1705)
!1704 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1705 = !{!1706, !1707, !1708, !1709, !1710}
!1706 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1707 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1708 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1709 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1710 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1711 = !{!120, !102, !103, !1712, !1062, !137, !1743, !721, !221, !1768}
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1714)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1715, line: 51, size: 64, elements: !1716)
!1715 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1716 = !{!1717, !1738}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1714, file: !1715, line: 52, baseType: !1718, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1715, line: 38, baseType: !1719)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!103, !1722, !1737, !151}
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !209, line: 378, size: 192, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1729, !1735, !1736}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1724, file: !209, line: 380, baseType: !212, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1724, file: !209, line: 382, baseType: !13, size: 32, offset: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1724, file: !209, line: 384, baseType: !13, size: 32, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1724, file: !209, line: 386, baseType: !1730, size: 32, offset: 96)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !209, line: 351, size: 16, elements: !1732)
!1732 = !{!1733, !1734}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1731, file: !209, line: 359, baseType: !221, size: 8)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1731, file: !209, line: 364, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1724, file: !209, line: 388, baseType: !102, size: 32, offset: 128)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1724, file: !209, line: 396, baseType: !227, size: 32, offset: 160)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1714, file: !1715, line: 53, baseType: !1739, size: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1715, line: 47, baseType: !1740)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DISubroutineType(types: !1742)
!1742 = !{!103, !1722, !1737, !151, !137}
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 402, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 379, size: 1120, elements: !1746)
!1746 = !{!1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1745, file: !415, line: 381, baseType: !419, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1745, file: !415, line: 382, baseType: !176, size: 32, offset: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1745, file: !415, line: 383, baseType: !176, size: 32, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1745, file: !415, line: 384, baseType: !176, size: 32, offset: 96)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1745, file: !415, line: 385, baseType: !176, size: 32, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1745, file: !415, line: 386, baseType: !176, size: 32, offset: 160)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1745, file: !415, line: 387, baseType: !1512, size: 96, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1745, file: !415, line: 388, baseType: !176, size: 32, offset: 288)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1745, file: !415, line: 389, baseType: !176, size: 32, offset: 320)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1745, file: !415, line: 390, baseType: !176, size: 32, offset: 352)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1745, file: !415, line: 391, baseType: !176, size: 32, offset: 384)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1745, file: !415, line: 392, baseType: !176, size: 32, offset: 416)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1745, file: !415, line: 393, baseType: !176, size: 32, offset: 448)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1745, file: !415, line: 394, baseType: !176, size: 32, offset: 480)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1745, file: !415, line: 395, baseType: !1523, size: 64, offset: 512)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1745, file: !415, line: 396, baseType: !419, size: 32, offset: 576)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1745, file: !415, line: 397, baseType: !419, size: 32, offset: 608)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1745, file: !415, line: 398, baseType: !1527, size: 128, offset: 640)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1745, file: !415, line: 399, baseType: !1529, size: 160, offset: 768)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1745, file: !415, line: 400, baseType: !1531, size: 160, offset: 928)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1745, file: !415, line: 401, baseType: !176, size: 32, offset: 1088)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !415, line: 360, baseType: !1770)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 345, size: 28704, elements: !1771)
!1771 = !{!1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1770, file: !415, line: 347, baseType: !1475, size: 256)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1770, file: !415, line: 348, baseType: !1477, size: 768, offset: 256)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1770, file: !415, line: 349, baseType: !1475, size: 256, offset: 1024)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1770, file: !415, line: 350, baseType: !1477, size: 768, offset: 1280)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1770, file: !415, line: 351, baseType: !1475, size: 256, offset: 2048)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1770, file: !415, line: 352, baseType: !1477, size: 768, offset: 2304)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1770, file: !415, line: 353, baseType: !1475, size: 256, offset: 3072)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1770, file: !415, line: 354, baseType: !1477, size: 768, offset: 3328)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1770, file: !415, line: 355, baseType: !1475, size: 256, offset: 4096)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1770, file: !415, line: 356, baseType: !1488, size: 1792, offset: 4352)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1770, file: !415, line: 357, baseType: !1492, size: 1920, offset: 6144)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1770, file: !415, line: 358, baseType: !1497, size: 20608, offset: 8064)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1770, file: !415, line: 359, baseType: !176, size: 32, offset: 28672)
!1785 = !{!1786, !1908, !1917, !1919, !1698, !1922, !1924, !1929}
!1786 = !DIGlobalVariableExpression(var: !1787, expr: !DIExpression())
!1787 = distinct !DIGlobalVariable(name: "_kernel", scope: !1700, file: !1704, line: 40, type: !1788, isLocal: false, isDefinition: true)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !312, line: 158, size: 288, elements: !1789)
!1789 = !{!1790, !1903}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1788, file: !312, line: 159, baseType: !1791, size: 192)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1792, size: 192, elements: !404)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !312, line: 100, size: 192, elements: !1793)
!1793 = !{!1794, !1795, !1796, !1897, !1898, !1899, !1900}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1792, file: !312, line: 102, baseType: !137, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1792, file: !312, line: 105, baseType: !1062, size: 32, offset: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1792, file: !312, line: 108, baseType: !1797, size: 32, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 32)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !276, line: 245, size: 1024, elements: !1799)
!1799 = !{!1800, !1858, !1870, !1871, !1872, !1873, !1879, !1892}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1798, file: !276, line: 247, baseType: !1801, size: 384)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !276, line: 57, size: 384, elements: !1802)
!1802 = !{!1803, !1827, !1834, !1835, !1836, !1845, !1846, !1847}
!1803 = !DIDerivedType(tag: DW_TAG_member, scope: !1801, file: !276, line: 60, baseType: !1804, size: 64)
!1804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1801, file: !276, line: 60, size: 64, elements: !1805)
!1805 = !{!1806, !1821}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1804, file: !276, line: 61, baseType: !1807, size: 64)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !286, line: 49, baseType: !1808)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !286, line: 37, size: 64, elements: !1809)
!1809 = !{!1810, !1816}
!1810 = !DIDerivedType(tag: DW_TAG_member, scope: !1808, file: !286, line: 38, baseType: !1811, size: 32)
!1811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1808, file: !286, line: 38, size: 32, elements: !1812)
!1812 = !{!1813, !1815}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1811, file: !286, line: 39, baseType: !1814, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1811, file: !286, line: 40, baseType: !1814, size: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, scope: !1808, file: !286, line: 42, baseType: !1817, size: 32, offset: 32)
!1817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1808, file: !286, line: 42, size: 32, elements: !1818)
!1818 = !{!1819, !1820}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1817, file: !286, line: 43, baseType: !1814, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1817, file: !286, line: 44, baseType: !1814, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1804, file: !276, line: 62, baseType: !1822, size: 64)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !1823)
!1823 = !{!1824}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1822, file: !302, line: 50, baseType: !1825, size: 64)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 64, elements: !307)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1801, file: !276, line: 68, baseType: !1828, size: 32, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !312, line: 233, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 231, size: 64, elements: !1831)
!1831 = !{!1832}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1830, file: !312, line: 232, baseType: !1833, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !286, line: 48, baseType: !1808)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1801, file: !276, line: 71, baseType: !221, size: 8, offset: 96)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1801, file: !276, line: 74, baseType: !221, size: 8, offset: 104)
!1836 = !DIDerivedType(tag: DW_TAG_member, scope: !1801, file: !276, line: 90, baseType: !1837, size: 16, offset: 112)
!1837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1801, file: !276, line: 90, size: 16, elements: !1838)
!1838 = !{!1839, !1844}
!1839 = !DIDerivedType(tag: DW_TAG_member, scope: !1837, file: !276, line: 91, baseType: !1840, size: 16)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1837, file: !276, line: 91, size: 16, elements: !1841)
!1841 = !{!1842, !1843}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1840, file: !276, line: 96, baseType: !326, size: 8)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1840, file: !276, line: 97, baseType: !221, size: 8, offset: 8)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1837, file: !276, line: 100, baseType: !151, size: 16)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1801, file: !276, line: 107, baseType: !137, size: 32, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1801, file: !276, line: 127, baseType: !102, size: 32, offset: 160)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1801, file: !276, line: 131, baseType: !1848, size: 192, offset: 192)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !312, line: 244, size: 192, elements: !1849)
!1849 = !{!1850, !1851, !1857}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1848, file: !312, line: 245, baseType: !1807, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1848, file: !312, line: 246, baseType: !1852, size: 32, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !312, line: 242, baseType: !1853)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{null, !1856}
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1848, file: !312, line: 249, baseType: !343, size: 64, offset: 128)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1798, file: !276, line: 250, baseType: !1859, size: 288, offset: 384)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !347, line: 25, size: 288, elements: !1860)
!1860 = !{!1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1859, file: !347, line: 26, baseType: !137, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1859, file: !347, line: 27, baseType: !137, size: 32, offset: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1859, file: !347, line: 28, baseType: !137, size: 32, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1859, file: !347, line: 29, baseType: !137, size: 32, offset: 96)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1859, file: !347, line: 30, baseType: !137, size: 32, offset: 128)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1859, file: !347, line: 31, baseType: !137, size: 32, offset: 160)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1859, file: !347, line: 32, baseType: !137, size: 32, offset: 192)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1859, file: !347, line: 33, baseType: !137, size: 32, offset: 224)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1859, file: !347, line: 34, baseType: !137, size: 32, offset: 256)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1798, file: !276, line: 253, baseType: !102, size: 32, offset: 672)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1798, file: !276, line: 256, baseType: !1829, size: 64, offset: 704)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1798, file: !276, line: 294, baseType: !103, size: 32, offset: 768)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1798, file: !276, line: 300, baseType: !1874, size: 96, offset: 800)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !276, line: 149, size: 96, elements: !1875)
!1875 = !{!1876, !1877, !1878}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1874, file: !276, line: 153, baseType: !22, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1874, file: !276, line: 162, baseType: !120, size: 32, offset: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1874, file: !276, line: 168, baseType: !120, size: 32, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1798, file: !276, line: 325, baseType: !1880, size: 32, offset: 896)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !370, line: 5073, size: 160, elements: !1882)
!1882 = !{!1883, !1889, !1890}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1881, file: !370, line: 5074, baseType: !1884, size: 96)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !1885)
!1885 = !{!1886, !1887, !1888}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1884, file: !113, line: 57, baseType: !116, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1884, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1884, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1881, file: !370, line: 5075, baseType: !1829, size: 64, offset: 96)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1881, file: !370, line: 5076, baseType: !1891, offset: 160)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !381, line: 43, elements: !162)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1798, file: !276, line: 343, baseType: !1893, size: 64, offset: 928)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !347, line: 60, size: 64, elements: !1894)
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1893, file: !347, line: 63, baseType: !137, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1893, file: !347, line: 66, baseType: !137, size: 32, offset: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1792, file: !312, line: 111, baseType: !1797, size: 32, offset: 96)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1792, file: !312, line: 124, baseType: !103, size: 32, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1792, file: !312, line: 127, baseType: !221, size: 8, offset: 160)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1792, file: !312, line: 153, baseType: !1901, offset: 168)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1902, line: 33, elements: !162)
!1902 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1788, file: !312, line: 170, baseType: !1904, size: 96, offset: 192)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !312, line: 83, size: 96, elements: !1905)
!1905 = !{!1906, !1907}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1904, file: !312, line: 86, baseType: !1797, size: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1904, file: !312, line: 90, baseType: !1833, size: 64, offset: 32)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1700, file: !1704, line: 43, type: !1910, isLocal: false, isDefinition: true, align: 512)
!1910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1911, size: 8704, elements: !1915)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1912, line: 47, size: 8, elements: !1913)
!1912 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1913 = !{!1914}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1911, file: !1912, line: 48, baseType: !109, size: 8)
!1915 = !{!1916}
!1916 = !DISubrange(count: 1088)
!1917 = !DIGlobalVariableExpression(var: !1918, expr: !DIExpression())
!1918 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1700, file: !1704, line: 44, type: !1798, isLocal: false, isDefinition: true)
!1919 = !DIGlobalVariableExpression(var: !1920, expr: !DIExpression())
!1920 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1700, file: !1704, line: 48, type: !1921, isLocal: false, isDefinition: true)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1798, size: 1024, elements: !404)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1700, file: !1704, line: 217, type: !224, isLocal: false, isDefinition: true)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1700, file: !1704, line: 50, type: !1926, isLocal: true, isDefinition: true, align: 512)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1911, size: 2560, elements: !1927)
!1927 = !{!405, !1928}
!1928 = !DISubrange(count: 320)
!1929 = !DIGlobalVariableExpression(var: !1930, expr: !DIExpression())
!1930 = distinct !DIGlobalVariable(name: "levels", scope: !1931, file: !1704, line: 232, type: !1951, isLocal: true, isDefinition: true)
!1931 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1704, file: !1704, line: 230, type: !1932, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !1934)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{null, !1703}
!1934 = !{!1935, !1936, !1946, !1950}
!1935 = !DILocalVariable(name: "level", arg: 1, scope: !1931, file: !1704, line: 230, type: !1703)
!1936 = !DILocalVariable(name: "entry", scope: !1931, file: !1704, line: 244, type: !1937)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1939)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !200, line: 51, size: 64, elements: !1940)
!1940 = !{!1941, !1945}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1939, file: !200, line: 60, baseType: !1942, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 32)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{!103, !1722}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1939, file: !200, line: 65, baseType: !1722, size: 32, offset: 32)
!1946 = !DILocalVariable(name: "dev", scope: !1947, file: !1704, line: 247, type: !1722)
!1947 = distinct !DILexicalBlock(scope: !1948, file: !1704, line: 246, column: 64)
!1948 = distinct !DILexicalBlock(scope: !1949, file: !1704, line: 246, column: 2)
!1949 = distinct !DILexicalBlock(scope: !1931, file: !1704, line: 246, column: 2)
!1950 = !DILocalVariable(name: "rc", scope: !1947, file: !1704, line: 248, type: !103)
!1951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1937, size: 192, elements: !1132)
!1952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1911, size: 16896, elements: !1953)
!1953 = !{!405, !1954}
!1954 = !DISubrange(count: 2112)
!1955 = !DIGlobalVariableExpression(var: !1956, expr: !DIExpression())
!1956 = distinct !DIGlobalVariable(name: "states_str", scope: !1957, file: !1958, line: 276, type: !2079, isLocal: true, isDefinition: true)
!1957 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1958, file: !1958, line: 271, type: !1959, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !2070)
!1958 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1959 = !DISubroutineType(types: !1960)
!1960 = !{!212, !1961, !1062, !120}
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !276, line: 347, baseType: !1962)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 32)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !276, line: 245, size: 1024, elements: !1964)
!1964 = !{!1965, !2023, !2035, !2036, !2037, !2038, !2044, !2057}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1963, file: !276, line: 247, baseType: !1966, size: 384)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !276, line: 57, size: 384, elements: !1967)
!1967 = !{!1968, !1992, !1999, !2000, !2001, !2010, !2011, !2012}
!1968 = !DIDerivedType(tag: DW_TAG_member, scope: !1966, file: !276, line: 60, baseType: !1969, size: 64)
!1969 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1966, file: !276, line: 60, size: 64, elements: !1970)
!1970 = !{!1971, !1986}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1969, file: !276, line: 61, baseType: !1972, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !286, line: 49, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !286, line: 37, size: 64, elements: !1974)
!1974 = !{!1975, !1981}
!1975 = !DIDerivedType(tag: DW_TAG_member, scope: !1973, file: !286, line: 38, baseType: !1976, size: 32)
!1976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1973, file: !286, line: 38, size: 32, elements: !1977)
!1977 = !{!1978, !1980}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1976, file: !286, line: 39, baseType: !1979, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1976, file: !286, line: 40, baseType: !1979, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, scope: !1973, file: !286, line: 42, baseType: !1982, size: 32, offset: 32)
!1982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1973, file: !286, line: 42, size: 32, elements: !1983)
!1983 = !{!1984, !1985}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1982, file: !286, line: 43, baseType: !1979, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1982, file: !286, line: 44, baseType: !1979, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1969, file: !276, line: 62, baseType: !1987, size: 64)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !1988)
!1988 = !{!1989}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1987, file: !302, line: 50, baseType: !1990, size: 64)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1991, size: 64, elements: !307)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1966, file: !276, line: 68, baseType: !1993, size: 32, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !312, line: 233, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 231, size: 64, elements: !1996)
!1996 = !{!1997}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1995, file: !312, line: 232, baseType: !1998, size: 64)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !286, line: 48, baseType: !1973)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1966, file: !276, line: 71, baseType: !221, size: 8, offset: 96)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1966, file: !276, line: 74, baseType: !221, size: 8, offset: 104)
!2001 = !DIDerivedType(tag: DW_TAG_member, scope: !1966, file: !276, line: 90, baseType: !2002, size: 16, offset: 112)
!2002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1966, file: !276, line: 90, size: 16, elements: !2003)
!2003 = !{!2004, !2009}
!2004 = !DIDerivedType(tag: DW_TAG_member, scope: !2002, file: !276, line: 91, baseType: !2005, size: 16)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2002, file: !276, line: 91, size: 16, elements: !2006)
!2006 = !{!2007, !2008}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2005, file: !276, line: 96, baseType: !326, size: 8)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2005, file: !276, line: 97, baseType: !221, size: 8, offset: 8)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2002, file: !276, line: 100, baseType: !151, size: 16)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1966, file: !276, line: 107, baseType: !137, size: 32, offset: 128)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1966, file: !276, line: 127, baseType: !102, size: 32, offset: 160)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1966, file: !276, line: 131, baseType: !2013, size: 192, offset: 192)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !312, line: 244, size: 192, elements: !2014)
!2014 = !{!2015, !2016, !2022}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2013, file: !312, line: 245, baseType: !1972, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2013, file: !312, line: 246, baseType: !2017, size: 32, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !312, line: 242, baseType: !2018)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!2019 = !DISubroutineType(types: !2020)
!2020 = !{null, !2021}
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2013, file: !312, line: 249, baseType: !343, size: 64, offset: 128)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1963, file: !276, line: 250, baseType: !2024, size: 288, offset: 384)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !347, line: 25, size: 288, elements: !2025)
!2025 = !{!2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2024, file: !347, line: 26, baseType: !137, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2024, file: !347, line: 27, baseType: !137, size: 32, offset: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2024, file: !347, line: 28, baseType: !137, size: 32, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2024, file: !347, line: 29, baseType: !137, size: 32, offset: 96)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2024, file: !347, line: 30, baseType: !137, size: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2024, file: !347, line: 31, baseType: !137, size: 32, offset: 160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2024, file: !347, line: 32, baseType: !137, size: 32, offset: 192)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2024, file: !347, line: 33, baseType: !137, size: 32, offset: 224)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2024, file: !347, line: 34, baseType: !137, size: 32, offset: 256)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1963, file: !276, line: 253, baseType: !102, size: 32, offset: 672)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1963, file: !276, line: 256, baseType: !1994, size: 64, offset: 704)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1963, file: !276, line: 294, baseType: !103, size: 32, offset: 768)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1963, file: !276, line: 300, baseType: !2039, size: 96, offset: 800)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !276, line: 149, size: 96, elements: !2040)
!2040 = !{!2041, !2042, !2043}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2039, file: !276, line: 153, baseType: !22, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2039, file: !276, line: 162, baseType: !120, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2039, file: !276, line: 168, baseType: !120, size: 32, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1963, file: !276, line: 325, baseType: !2045, size: 32, offset: 896)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 32)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !370, line: 5073, size: 160, elements: !2047)
!2047 = !{!2048, !2054, !2055}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2046, file: !370, line: 5074, baseType: !2049, size: 96)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2050)
!2050 = !{!2051, !2052, !2053}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2049, file: !113, line: 57, baseType: !116, size: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2049, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2049, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2046, file: !370, line: 5075, baseType: !1994, size: 64, offset: 96)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2046, file: !370, line: 5076, baseType: !2056, offset: 160)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !381, line: 43, elements: !162)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1963, file: !276, line: 343, baseType: !2058, size: 64, offset: 928)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !347, line: 60, size: 64, elements: !2059)
!2059 = !{!2060, !2061}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2058, file: !347, line: 63, baseType: !137, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2058, file: !347, line: 66, baseType: !137, size: 32, offset: 32)
!2062 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2063, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2064, globals: !2066, splitDebugInlining: false, nameTableKind: None)
!2063 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2064 = !{!102, !212, !1460, !221, !103, !2065, !24, !120, !1062, !22, !137, !163}
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!2066 = !{!1955, !2067}
!2067 = !DIGlobalVariableExpression(var: !2068, expr: !DIExpression())
!2068 = distinct !DIGlobalVariable(name: "states_sz", scope: !1957, file: !1958, line: 279, type: !2069, isLocal: true, isDefinition: true)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1653, size: 256, elements: !159)
!2070 = !{!2071, !2072, !2073, !2074, !2075, !2076, !2077}
!2071 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1957, file: !1958, line: 271, type: !1961)
!2072 = !DILocalVariable(name: "buf", arg: 2, scope: !1957, file: !1958, line: 271, type: !1062)
!2073 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1957, file: !1958, line: 271, type: !120)
!2074 = !DILocalVariable(name: "off", scope: !1957, file: !1958, line: 273, type: !120)
!2075 = !DILocalVariable(name: "bit", scope: !1957, file: !1958, line: 274, type: !221)
!2076 = !DILocalVariable(name: "thread_state", scope: !1957, file: !1958, line: 275, type: !221)
!2077 = !DILocalVariable(name: "index", scope: !2078, file: !1958, line: 293, type: !221)
!2078 = distinct !DILexicalBlock(scope: !1957, file: !1958, line: 293, column: 2)
!2079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 256, elements: !159)
!2080 = !DIGlobalVariableExpression(var: !2081, expr: !DIExpression())
!2081 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2082, file: !2190, line: 56, type: !2179, isLocal: false, isDefinition: true)
!2082 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2083, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2084, globals: !2187, splitDebugInlining: false, nameTableKind: None)
!2083 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2084 = !{!2085, !1062, !102, !2185, !1737, !1460, !721, !103, !137, !163, !2186}
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 32)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !276, line: 245, size: 1024, elements: !2087)
!2087 = !{!2088, !2146, !2158, !2159, !2160, !2161, !2167, !2180}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2086, file: !276, line: 247, baseType: !2089, size: 384)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !276, line: 57, size: 384, elements: !2090)
!2090 = !{!2091, !2115, !2122, !2123, !2124, !2133, !2134, !2135}
!2091 = !DIDerivedType(tag: DW_TAG_member, scope: !2089, file: !276, line: 60, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2089, file: !276, line: 60, size: 64, elements: !2093)
!2093 = !{!2094, !2109}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2092, file: !276, line: 61, baseType: !2095, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !286, line: 49, baseType: !2096)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !286, line: 37, size: 64, elements: !2097)
!2097 = !{!2098, !2104}
!2098 = !DIDerivedType(tag: DW_TAG_member, scope: !2096, file: !286, line: 38, baseType: !2099, size: 32)
!2099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2096, file: !286, line: 38, size: 32, elements: !2100)
!2100 = !{!2101, !2103}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2099, file: !286, line: 39, baseType: !2102, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2099, file: !286, line: 40, baseType: !2102, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, scope: !2096, file: !286, line: 42, baseType: !2105, size: 32, offset: 32)
!2105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2096, file: !286, line: 42, size: 32, elements: !2106)
!2106 = !{!2107, !2108}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2105, file: !286, line: 43, baseType: !2102, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2105, file: !286, line: 44, baseType: !2102, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2092, file: !276, line: 62, baseType: !2110, size: 64)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2110, file: !302, line: 50, baseType: !2113, size: 64)
!2113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2114, size: 64, elements: !307)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2089, file: !276, line: 68, baseType: !2116, size: 32, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !312, line: 233, baseType: !2118)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 231, size: 64, elements: !2119)
!2119 = !{!2120}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2118, file: !312, line: 232, baseType: !2121, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !286, line: 48, baseType: !2096)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2089, file: !276, line: 71, baseType: !221, size: 8, offset: 96)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2089, file: !276, line: 74, baseType: !221, size: 8, offset: 104)
!2124 = !DIDerivedType(tag: DW_TAG_member, scope: !2089, file: !276, line: 90, baseType: !2125, size: 16, offset: 112)
!2125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2089, file: !276, line: 90, size: 16, elements: !2126)
!2126 = !{!2127, !2132}
!2127 = !DIDerivedType(tag: DW_TAG_member, scope: !2125, file: !276, line: 91, baseType: !2128, size: 16)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2125, file: !276, line: 91, size: 16, elements: !2129)
!2129 = !{!2130, !2131}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2128, file: !276, line: 96, baseType: !326, size: 8)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2128, file: !276, line: 97, baseType: !221, size: 8, offset: 8)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2125, file: !276, line: 100, baseType: !151, size: 16)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2089, file: !276, line: 107, baseType: !137, size: 32, offset: 128)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2089, file: !276, line: 127, baseType: !102, size: 32, offset: 160)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2089, file: !276, line: 131, baseType: !2136, size: 192, offset: 192)
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !312, line: 244, size: 192, elements: !2137)
!2137 = !{!2138, !2139, !2145}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2136, file: !312, line: 245, baseType: !2095, size: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2136, file: !312, line: 246, baseType: !2140, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !312, line: 242, baseType: !2141)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{null, !2144}
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2136, file: !312, line: 249, baseType: !343, size: 64, offset: 128)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2086, file: !276, line: 250, baseType: !2147, size: 288, offset: 384)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !347, line: 25, size: 288, elements: !2148)
!2148 = !{!2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2147, file: !347, line: 26, baseType: !137, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2147, file: !347, line: 27, baseType: !137, size: 32, offset: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2147, file: !347, line: 28, baseType: !137, size: 32, offset: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2147, file: !347, line: 29, baseType: !137, size: 32, offset: 96)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2147, file: !347, line: 30, baseType: !137, size: 32, offset: 128)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2147, file: !347, line: 31, baseType: !137, size: 32, offset: 160)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2147, file: !347, line: 32, baseType: !137, size: 32, offset: 192)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2147, file: !347, line: 33, baseType: !137, size: 32, offset: 224)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2147, file: !347, line: 34, baseType: !137, size: 32, offset: 256)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2086, file: !276, line: 253, baseType: !102, size: 32, offset: 672)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2086, file: !276, line: 256, baseType: !2117, size: 64, offset: 704)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2086, file: !276, line: 294, baseType: !103, size: 32, offset: 768)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2086, file: !276, line: 300, baseType: !2162, size: 96, offset: 800)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !276, line: 149, size: 96, elements: !2163)
!2163 = !{!2164, !2165, !2166}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2162, file: !276, line: 153, baseType: !22, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2162, file: !276, line: 162, baseType: !120, size: 32, offset: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2162, file: !276, line: 168, baseType: !120, size: 32, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2086, file: !276, line: 325, baseType: !2168, size: 32, offset: 896)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 32)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !370, line: 5073, size: 160, elements: !2170)
!2170 = !{!2171, !2177, !2178}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2169, file: !370, line: 5074, baseType: !2172, size: 96)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2173)
!2173 = !{!2174, !2175, !2176}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2172, file: !113, line: 57, baseType: !116, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2172, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2172, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2169, file: !370, line: 5075, baseType: !2117, size: 64, offset: 96)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2169, file: !370, line: 5076, baseType: !2179, offset: 160)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !381, line: 43, elements: !162)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2086, file: !276, line: 343, baseType: !2181, size: 64, offset: 928)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !347, line: 60, size: 64, elements: !2182)
!2182 = !{!2183, !2184}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2181, file: !347, line: 63, baseType: !137, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2181, file: !347, line: 66, baseType: !137, size: 32, offset: 32)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 32)
!2187 = !{!2080, !2188, !2191, !2193}
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2082, file: !2190, line: 404, type: !103, isLocal: true, isDefinition: true)
!2190 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2082, file: !2190, line: 405, type: !103, isLocal: true, isDefinition: true)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "pending_current", scope: !2082, file: !2190, line: 425, type: !2085, isLocal: true, isDefinition: true)
!2195 = !DIGlobalVariableExpression(var: !2196, expr: !DIExpression())
!2196 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2197, file: !2227, line: 15, type: !163, isLocal: true, isDefinition: true)
!2197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2199, globals: !2224, splitDebugInlining: false, nameTableKind: None)
!2198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2199 = !{!1460, !102, !721, !137, !163, !103, !2200, !1062, !343}
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 32)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !312, line: 244, size: 192, elements: !2202)
!2202 = !{!2203, !2218, !2223}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2201, file: !312, line: 245, baseType: !2204, size: 64)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !286, line: 49, baseType: !2205)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !286, line: 37, size: 64, elements: !2206)
!2206 = !{!2207, !2213}
!2207 = !DIDerivedType(tag: DW_TAG_member, scope: !2205, file: !286, line: 38, baseType: !2208, size: 32)
!2208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2205, file: !286, line: 38, size: 32, elements: !2209)
!2209 = !{!2210, !2212}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2208, file: !286, line: 39, baseType: !2211, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2208, file: !286, line: 40, baseType: !2211, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, scope: !2205, file: !286, line: 42, baseType: !2214, size: 32, offset: 32)
!2214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2205, file: !286, line: 42, size: 32, elements: !2215)
!2215 = !{!2216, !2217}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2214, file: !286, line: 43, baseType: !2211, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2214, file: !286, line: 44, baseType: !2211, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2201, file: !312, line: 246, baseType: !2219, size: 32, offset: 64)
!2219 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !312, line: 242, baseType: !2220)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{null, !2200}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2201, file: !312, line: 249, baseType: !343, size: 64, offset: 128)
!2224 = !{!2195, !2225, !2229, !2231}
!2225 = !DIGlobalVariableExpression(var: !2226, expr: !DIExpression())
!2226 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2197, file: !2227, line: 19, type: !2228, isLocal: true, isDefinition: true)
!2227 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !381, line: 43, elements: !162)
!2229 = !DIGlobalVariableExpression(var: !2230, expr: !DIExpression())
!2230 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2197, file: !2227, line: 25, type: !103, isLocal: true, isDefinition: true)
!2231 = !DIGlobalVariableExpression(var: !2232, expr: !DIExpression())
!2232 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2197, file: !2227, line: 17, type: !2233, isLocal: true, isDefinition: true)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !286, line: 48, baseType: !2205)
!2234 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2235, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2235 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2237, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2237 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2238 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2239, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2240, splitDebugInlining: false, nameTableKind: None)
!2239 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2240 = !{!102, !120, !1737, !24, !2241, !22, !2246, !103, !149, !150}
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !2243)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !2244)
!2244 = !{!2245}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2243, file: !142, line: 58, baseType: !158, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !2248)
!2248 = !{!2249, !2252, !2253, !2254, !2255, !2256, !2257}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2247, file: !142, line: 69, baseType: !2250, size: 64)
!2250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2251, size: 64, elements: !307)
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !142, line: 61, baseType: !137)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2247, file: !142, line: 70, baseType: !2251, size: 32, offset: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2247, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2247, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2247, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2247, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2247, file: !142, line: 77, baseType: !2258, offset: 224)
!2258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2259, elements: !2262)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !2260)
!2260 = !{!2261}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2259, file: !142, line: 65, baseType: !2251, size: 32)
!2262 = !{!2263}
!2263 = !DISubrange(count: 0)
!2264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2266, retainedTypes: !2286, splitDebugInlining: false, nameTableKind: None)
!2265 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2266 = !{!2267, !2275}
!2267 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2268, line: 69, baseType: !32, size: 32, elements: !2269)
!2268 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2269 = !{!2270, !2271, !2272, !2273, !2274}
!2270 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2271 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2272 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2273 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2274 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2275 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2268, line: 56, baseType: !32, size: 32, elements: !2276)
!2276 = !{!2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285}
!2277 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2278 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2279 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2280 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2281 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2282 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2283 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2284 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2285 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2286 = !{!103, !2267, !2275, !2287, !327, !231, !2289, !2290, !222, !152, !212, !120, !102, !22, !32, !2292, !2293, !2294, !2295, !2296, !344, !2297, !2288, !2298, !2299, !2300, !2301}
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2268, line: 31, baseType: !2288)
!2288 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !344)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !121, line: 329, baseType: !32)
!2290 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2268, line: 32, baseType: !2291)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !164)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!2295 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !121, line: 145, baseType: !103)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 32)
!2302 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2303, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2303 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2305, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2306, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2305 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2306 = !{!2307, !30}
!2307 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2308, line: 27, baseType: !32, size: 32, elements: !2309)
!2308 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2309 = !{!2310, !2311, !2312, !2313, !2314}
!2310 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2311 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2312 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2313 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2314 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2315 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2316, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2317, retainedTypes: !2318, splitDebugInlining: false, nameTableKind: None)
!2316 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2317 = !{!592, !2307, !30}
!2318 = !{!739, !2319, !102, !103, !721, !137, !221, !2336}
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !415, line: 360, baseType: !2321)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 345, size: 28704, elements: !2322)
!2322 = !{!2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2321, file: !415, line: 347, baseType: !1475, size: 256)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2321, file: !415, line: 348, baseType: !1477, size: 768, offset: 256)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2321, file: !415, line: 349, baseType: !1475, size: 256, offset: 1024)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2321, file: !415, line: 350, baseType: !1477, size: 768, offset: 1280)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2321, file: !415, line: 351, baseType: !1475, size: 256, offset: 2048)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2321, file: !415, line: 352, baseType: !1477, size: 768, offset: 2304)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2321, file: !415, line: 353, baseType: !1475, size: 256, offset: 3072)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2321, file: !415, line: 354, baseType: !1477, size: 768, offset: 3328)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2321, file: !415, line: 355, baseType: !1475, size: 256, offset: 4096)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2321, file: !415, line: 356, baseType: !1488, size: 1792, offset: 4352)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2321, file: !415, line: 357, baseType: !1492, size: 1920, offset: 6144)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2321, file: !415, line: 358, baseType: !1497, size: 20608, offset: 8064)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2321, file: !415, line: 359, baseType: !176, size: 32, offset: 28672)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 402, baseType: !2338)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 379, size: 1120, elements: !2339)
!2339 = !{!2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2338, file: !415, line: 381, baseType: !419, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2338, file: !415, line: 382, baseType: !176, size: 32, offset: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2338, file: !415, line: 383, baseType: !176, size: 32, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2338, file: !415, line: 384, baseType: !176, size: 32, offset: 96)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2338, file: !415, line: 385, baseType: !176, size: 32, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2338, file: !415, line: 386, baseType: !176, size: 32, offset: 160)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2338, file: !415, line: 387, baseType: !1512, size: 96, offset: 192)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2338, file: !415, line: 388, baseType: !176, size: 32, offset: 288)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2338, file: !415, line: 389, baseType: !176, size: 32, offset: 320)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2338, file: !415, line: 390, baseType: !176, size: 32, offset: 352)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2338, file: !415, line: 391, baseType: !176, size: 32, offset: 384)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2338, file: !415, line: 392, baseType: !176, size: 32, offset: 416)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2338, file: !415, line: 393, baseType: !176, size: 32, offset: 448)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2338, file: !415, line: 394, baseType: !176, size: 32, offset: 480)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2338, file: !415, line: 395, baseType: !1523, size: 64, offset: 512)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2338, file: !415, line: 396, baseType: !419, size: 32, offset: 576)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2338, file: !415, line: 397, baseType: !419, size: 32, offset: 608)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2338, file: !415, line: 398, baseType: !1527, size: 128, offset: 640)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2338, file: !415, line: 399, baseType: !1529, size: 160, offset: 768)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2338, file: !415, line: 400, baseType: !1531, size: 160, offset: 928)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2338, file: !415, line: 401, baseType: !176, size: 32, offset: 1088)
!2361 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2362, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2362 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2363 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2364, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2365, splitDebugInlining: false, nameTableKind: None)
!2364 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2365 = !{!102, !103, !22, !2366}
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 402, baseType: !2368)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 379, size: 1120, elements: !2369)
!2369 = !{!2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2368, file: !415, line: 381, baseType: !419, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2368, file: !415, line: 382, baseType: !176, size: 32, offset: 32)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2368, file: !415, line: 383, baseType: !176, size: 32, offset: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2368, file: !415, line: 384, baseType: !176, size: 32, offset: 96)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2368, file: !415, line: 385, baseType: !176, size: 32, offset: 128)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2368, file: !415, line: 386, baseType: !176, size: 32, offset: 160)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2368, file: !415, line: 387, baseType: !1512, size: 96, offset: 192)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2368, file: !415, line: 388, baseType: !176, size: 32, offset: 288)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2368, file: !415, line: 389, baseType: !176, size: 32, offset: 320)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2368, file: !415, line: 390, baseType: !176, size: 32, offset: 352)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2368, file: !415, line: 391, baseType: !176, size: 32, offset: 384)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2368, file: !415, line: 392, baseType: !176, size: 32, offset: 416)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2368, file: !415, line: 393, baseType: !176, size: 32, offset: 448)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2368, file: !415, line: 394, baseType: !176, size: 32, offset: 480)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2368, file: !415, line: 395, baseType: !1523, size: 64, offset: 512)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2368, file: !415, line: 396, baseType: !419, size: 32, offset: 576)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2368, file: !415, line: 397, baseType: !419, size: 32, offset: 608)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2368, file: !415, line: 398, baseType: !1527, size: 128, offset: 640)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2368, file: !415, line: 399, baseType: !1529, size: 160, offset: 768)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2368, file: !415, line: 400, baseType: !1531, size: 160, offset: 928)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2368, file: !415, line: 401, baseType: !176, size: 32, offset: 1088)
!2391 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2392, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2393, splitDebugInlining: false, nameTableKind: None)
!2392 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2393 = !{!2394, !102, !103}
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 402, baseType: !2396)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 379, size: 1120, elements: !2397)
!2397 = !{!2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2396, file: !415, line: 381, baseType: !419, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2396, file: !415, line: 382, baseType: !176, size: 32, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2396, file: !415, line: 383, baseType: !176, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2396, file: !415, line: 384, baseType: !176, size: 32, offset: 96)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2396, file: !415, line: 385, baseType: !176, size: 32, offset: 128)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2396, file: !415, line: 386, baseType: !176, size: 32, offset: 160)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2396, file: !415, line: 387, baseType: !1512, size: 96, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2396, file: !415, line: 388, baseType: !176, size: 32, offset: 288)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2396, file: !415, line: 389, baseType: !176, size: 32, offset: 320)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2396, file: !415, line: 390, baseType: !176, size: 32, offset: 352)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2396, file: !415, line: 391, baseType: !176, size: 32, offset: 384)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2396, file: !415, line: 392, baseType: !176, size: 32, offset: 416)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2396, file: !415, line: 393, baseType: !176, size: 32, offset: 448)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2396, file: !415, line: 394, baseType: !176, size: 32, offset: 480)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2396, file: !415, line: 395, baseType: !1523, size: 64, offset: 512)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2396, file: !415, line: 396, baseType: !419, size: 32, offset: 576)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2396, file: !415, line: 397, baseType: !419, size: 32, offset: 608)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2396, file: !415, line: 398, baseType: !1527, size: 128, offset: 640)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2396, file: !415, line: 399, baseType: !1529, size: 160, offset: 768)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2396, file: !415, line: 400, baseType: !1531, size: 160, offset: 928)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2396, file: !415, line: 401, baseType: !176, size: 32, offset: 1088)
!2419 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2420, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2421, splitDebugInlining: false, nameTableKind: None)
!2420 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2421 = !{!2422, !137, !102, !103}
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2424, line: 98, size: 256, elements: !2425)
!2424 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2425 = !{!2426, !2431, !2436, !2441, !2446, !2451, !2456, !2461}
!2426 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !2424, line: 99, baseType: !2427, size: 32)
!2427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2423, file: !2424, line: 99, size: 32, elements: !2428)
!2428 = !{!2429, !2430}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2427, file: !2424, line: 99, baseType: !137, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2427, file: !2424, line: 99, baseType: !137, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !2424, line: 100, baseType: !2432, size: 32, offset: 32)
!2432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2423, file: !2424, line: 100, size: 32, elements: !2433)
!2433 = !{!2434, !2435}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2432, file: !2424, line: 100, baseType: !137, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2432, file: !2424, line: 100, baseType: !137, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !2424, line: 101, baseType: !2437, size: 32, offset: 64)
!2437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2423, file: !2424, line: 101, size: 32, elements: !2438)
!2438 = !{!2439, !2440}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2437, file: !2424, line: 101, baseType: !137, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2437, file: !2424, line: 101, baseType: !137, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !2424, line: 102, baseType: !2442, size: 32, offset: 96)
!2442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2423, file: !2424, line: 102, size: 32, elements: !2443)
!2443 = !{!2444, !2445}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2442, file: !2424, line: 102, baseType: !137, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2442, file: !2424, line: 102, baseType: !137, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !2424, line: 103, baseType: !2447, size: 32, offset: 128)
!2447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2423, file: !2424, line: 103, size: 32, elements: !2448)
!2448 = !{!2449, !2450}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2447, file: !2424, line: 103, baseType: !137, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2447, file: !2424, line: 103, baseType: !137, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !2424, line: 104, baseType: !2452, size: 32, offset: 160)
!2452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2423, file: !2424, line: 104, size: 32, elements: !2453)
!2453 = !{!2454, !2455}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2452, file: !2424, line: 104, baseType: !137, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2452, file: !2424, line: 104, baseType: !137, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !2424, line: 105, baseType: !2457, size: 32, offset: 192)
!2457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2423, file: !2424, line: 105, size: 32, elements: !2458)
!2458 = !{!2459, !2460}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2457, file: !2424, line: 105, baseType: !137, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2457, file: !2424, line: 105, baseType: !137, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2423, file: !2424, line: 106, baseType: !137, size: 32, offset: 224)
!2462 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2463, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2306, retainedTypes: !2464, splitDebugInlining: false, nameTableKind: None)
!2463 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2464 = !{!2465, !102, !103, !2490, !150, !137}
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 402, baseType: !2467)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 379, size: 1120, elements: !2468)
!2468 = !{!2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2467, file: !415, line: 381, baseType: !419, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2467, file: !415, line: 382, baseType: !176, size: 32, offset: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2467, file: !415, line: 383, baseType: !176, size: 32, offset: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2467, file: !415, line: 384, baseType: !176, size: 32, offset: 96)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2467, file: !415, line: 385, baseType: !176, size: 32, offset: 128)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2467, file: !415, line: 386, baseType: !176, size: 32, offset: 160)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2467, file: !415, line: 387, baseType: !1512, size: 96, offset: 192)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2467, file: !415, line: 388, baseType: !176, size: 32, offset: 288)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2467, file: !415, line: 389, baseType: !176, size: 32, offset: 320)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2467, file: !415, line: 390, baseType: !176, size: 32, offset: 352)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2467, file: !415, line: 391, baseType: !176, size: 32, offset: 384)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2467, file: !415, line: 392, baseType: !176, size: 32, offset: 416)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2467, file: !415, line: 393, baseType: !176, size: 32, offset: 448)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2467, file: !415, line: 394, baseType: !176, size: 32, offset: 480)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2467, file: !415, line: 395, baseType: !1523, size: 64, offset: 512)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2467, file: !415, line: 396, baseType: !419, size: 32, offset: 576)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2467, file: !415, line: 397, baseType: !419, size: 32, offset: 608)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2467, file: !415, line: 398, baseType: !1527, size: 128, offset: 640)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2467, file: !415, line: 399, baseType: !1529, size: 160, offset: 768)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2467, file: !415, line: 400, baseType: !1531, size: 160, offset: 928)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2467, file: !415, line: 401, baseType: !176, size: 32, offset: 1088)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2424, line: 141, baseType: !2492)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2424, line: 97, size: 256, elements: !2493)
!2493 = !{!2494}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2492, file: !2424, line: 107, baseType: !2495, size: 256)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2424, line: 98, size: 256, elements: !2496)
!2496 = !{!2497, !2502, !2507, !2512, !2517, !2522, !2527, !2532}
!2497 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !2424, line: 99, baseType: !2498, size: 32)
!2498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !2424, line: 99, size: 32, elements: !2499)
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2498, file: !2424, line: 99, baseType: !137, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2498, file: !2424, line: 99, baseType: !137, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !2424, line: 100, baseType: !2503, size: 32, offset: 32)
!2503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !2424, line: 100, size: 32, elements: !2504)
!2504 = !{!2505, !2506}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2503, file: !2424, line: 100, baseType: !137, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2503, file: !2424, line: 100, baseType: !137, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !2424, line: 101, baseType: !2508, size: 32, offset: 64)
!2508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !2424, line: 101, size: 32, elements: !2509)
!2509 = !{!2510, !2511}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2508, file: !2424, line: 101, baseType: !137, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2508, file: !2424, line: 101, baseType: !137, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !2424, line: 102, baseType: !2513, size: 32, offset: 96)
!2513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !2424, line: 102, size: 32, elements: !2514)
!2514 = !{!2515, !2516}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2513, file: !2424, line: 102, baseType: !137, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2513, file: !2424, line: 102, baseType: !137, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !2424, line: 103, baseType: !2518, size: 32, offset: 128)
!2518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !2424, line: 103, size: 32, elements: !2519)
!2519 = !{!2520, !2521}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2518, file: !2424, line: 103, baseType: !137, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2518, file: !2424, line: 103, baseType: !137, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !2424, line: 104, baseType: !2523, size: 32, offset: 160)
!2523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !2424, line: 104, size: 32, elements: !2524)
!2524 = !{!2525, !2526}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2523, file: !2424, line: 104, baseType: !137, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2523, file: !2424, line: 104, baseType: !137, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2495, file: !2424, line: 105, baseType: !2528, size: 32, offset: 192)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2495, file: !2424, line: 105, size: 32, elements: !2529)
!2529 = !{!2530, !2531}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2528, file: !2424, line: 105, baseType: !137, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2528, file: !2424, line: 105, baseType: !137, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2495, file: !2424, line: 106, baseType: !137, size: 32, offset: 224)
!2533 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2534, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1458, retainedTypes: !2535, splitDebugInlining: false, nameTableKind: None)
!2534 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2535 = !{!739, !721, !221, !137, !2536, !2553}
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !415, line: 360, baseType: !2538)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 345, size: 28704, elements: !2539)
!2539 = !{!2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2538, file: !415, line: 347, baseType: !1475, size: 256)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2538, file: !415, line: 348, baseType: !1477, size: 768, offset: 256)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2538, file: !415, line: 349, baseType: !1475, size: 256, offset: 1024)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2538, file: !415, line: 350, baseType: !1477, size: 768, offset: 1280)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2538, file: !415, line: 351, baseType: !1475, size: 256, offset: 2048)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2538, file: !415, line: 352, baseType: !1477, size: 768, offset: 2304)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2538, file: !415, line: 353, baseType: !1475, size: 256, offset: 3072)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2538, file: !415, line: 354, baseType: !1477, size: 768, offset: 3328)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2538, file: !415, line: 355, baseType: !1475, size: 256, offset: 4096)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2538, file: !415, line: 356, baseType: !1488, size: 1792, offset: 4352)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2538, file: !415, line: 357, baseType: !1492, size: 1920, offset: 6144)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2538, file: !415, line: 358, baseType: !1497, size: 20608, offset: 8064)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2538, file: !415, line: 359, baseType: !176, size: 32, offset: 28672)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 402, baseType: !2555)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 379, size: 1120, elements: !2556)
!2556 = !{!2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2555, file: !415, line: 381, baseType: !419, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2555, file: !415, line: 382, baseType: !176, size: 32, offset: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2555, file: !415, line: 383, baseType: !176, size: 32, offset: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2555, file: !415, line: 384, baseType: !176, size: 32, offset: 96)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2555, file: !415, line: 385, baseType: !176, size: 32, offset: 128)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2555, file: !415, line: 386, baseType: !176, size: 32, offset: 160)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2555, file: !415, line: 387, baseType: !1512, size: 96, offset: 192)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2555, file: !415, line: 388, baseType: !176, size: 32, offset: 288)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2555, file: !415, line: 389, baseType: !176, size: 32, offset: 320)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2555, file: !415, line: 390, baseType: !176, size: 32, offset: 352)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2555, file: !415, line: 391, baseType: !176, size: 32, offset: 384)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2555, file: !415, line: 392, baseType: !176, size: 32, offset: 416)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2555, file: !415, line: 393, baseType: !176, size: 32, offset: 448)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2555, file: !415, line: 394, baseType: !176, size: 32, offset: 480)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2555, file: !415, line: 395, baseType: !1523, size: 64, offset: 512)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2555, file: !415, line: 396, baseType: !419, size: 32, offset: 576)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2555, file: !415, line: 397, baseType: !419, size: 32, offset: 608)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2555, file: !415, line: 398, baseType: !1527, size: 128, offset: 640)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2555, file: !415, line: 399, baseType: !1529, size: 160, offset: 768)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2555, file: !415, line: 400, baseType: !1531, size: 160, offset: 928)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2555, file: !415, line: 401, baseType: !176, size: 32, offset: 1088)
!2578 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2579, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2580, splitDebugInlining: false, nameTableKind: None)
!2579 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2580 = !{!2581, !102, !103}
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !415, line: 402, baseType: !2583)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 379, size: 1120, elements: !2584)
!2584 = !{!2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2583, file: !415, line: 381, baseType: !419, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2583, file: !415, line: 382, baseType: !176, size: 32, offset: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2583, file: !415, line: 383, baseType: !176, size: 32, offset: 64)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2583, file: !415, line: 384, baseType: !176, size: 32, offset: 96)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2583, file: !415, line: 385, baseType: !176, size: 32, offset: 128)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2583, file: !415, line: 386, baseType: !176, size: 32, offset: 160)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2583, file: !415, line: 387, baseType: !1512, size: 96, offset: 192)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2583, file: !415, line: 388, baseType: !176, size: 32, offset: 288)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2583, file: !415, line: 389, baseType: !176, size: 32, offset: 320)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2583, file: !415, line: 390, baseType: !176, size: 32, offset: 352)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2583, file: !415, line: 391, baseType: !176, size: 32, offset: 384)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2583, file: !415, line: 392, baseType: !176, size: 32, offset: 416)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2583, file: !415, line: 393, baseType: !176, size: 32, offset: 448)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2583, file: !415, line: 394, baseType: !176, size: 32, offset: 480)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2583, file: !415, line: 395, baseType: !1523, size: 64, offset: 512)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2583, file: !415, line: 396, baseType: !419, size: 32, offset: 576)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2583, file: !415, line: 397, baseType: !419, size: 32, offset: 608)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2583, file: !415, line: 398, baseType: !1527, size: 128, offset: 640)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2583, file: !415, line: 399, baseType: !1529, size: 160, offset: 768)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2583, file: !415, line: 400, baseType: !1531, size: 160, offset: 928)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2583, file: !415, line: 401, baseType: !176, size: 32, offset: 1088)
!2606 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2607, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2608, splitDebugInlining: false, nameTableKind: None)
!2607 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2608 = !{!109, !1062, !120, !916, !2609, !222, !102}
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !222)
!2611 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2612, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2613, splitDebugInlining: false, nameTableKind: None)
!2612 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2613 = !{!2614}
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 386, baseType: !2616)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 370, size: 448, elements: !2617)
!2617 = !{!2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2616, file: !172, line: 372, baseType: !176, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2616, file: !172, line: 373, baseType: !176, size: 32, offset: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2616, file: !172, line: 374, baseType: !176, size: 32, offset: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2616, file: !172, line: 375, baseType: !176, size: 32, offset: 96)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2616, file: !172, line: 376, baseType: !176, size: 32, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2616, file: !172, line: 377, baseType: !176, size: 32, offset: 160)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2616, file: !172, line: 378, baseType: !176, size: 32, offset: 192)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2616, file: !172, line: 379, baseType: !176, size: 32, offset: 224)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2616, file: !172, line: 380, baseType: !176, size: 32, offset: 256)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2616, file: !172, line: 381, baseType: !176, size: 32, offset: 288)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2616, file: !172, line: 382, baseType: !176, size: 32, offset: 320)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2616, file: !172, line: 383, baseType: !176, size: 32, offset: 352)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2616, file: !172, line: 384, baseType: !176, size: 32, offset: 384)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2616, file: !172, line: 385, baseType: !176, size: 32, offset: 416)
!2632 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2633, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2633 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2634 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2635, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2636, retainedTypes: !2652, splitDebugInlining: false, nameTableKind: None)
!2635 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2636 = !{!2637, !2644, !2648}
!2637 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2638, line: 39, baseType: !32, size: 32, elements: !2639)
!2638 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2639 = !{!2640, !2641, !2642, !2643}
!2640 = !DIEnumerator(name: "HAL_OK", value: 0)
!2641 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2642 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2643 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2644 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !776, line: 183, baseType: !32, size: 32, elements: !2645)
!2645 = !{!2646, !2647}
!2646 = !DIEnumerator(name: "DISABLE", value: 0)
!2647 = !DIEnumerator(name: "ENABLE", value: 1)
!2648 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !776, line: 177, baseType: !32, size: 32, elements: !2649)
!2649 = !{!2650, !2651}
!2650 = !DIEnumerator(name: "RESET", value: 0)
!2651 = !DIEnumerator(name: "SET", value: 1)
!2652 = !{!2653, !102, !137, !221, !2671, !2672, !2678, !151, !2691, !163, !2704}
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 386, baseType: !2655)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 370, size: 448, elements: !2656)
!2656 = !{!2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2655, file: !172, line: 372, baseType: !176, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2655, file: !172, line: 373, baseType: !176, size: 32, offset: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2655, file: !172, line: 374, baseType: !176, size: 32, offset: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2655, file: !172, line: 375, baseType: !176, size: 32, offset: 96)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2655, file: !172, line: 376, baseType: !176, size: 32, offset: 128)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2655, file: !172, line: 377, baseType: !176, size: 32, offset: 160)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2655, file: !172, line: 378, baseType: !176, size: 32, offset: 192)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2655, file: !172, line: 379, baseType: !176, size: 32, offset: 224)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2655, file: !172, line: 380, baseType: !176, size: 32, offset: 256)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2655, file: !172, line: 381, baseType: !176, size: 32, offset: 288)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2655, file: !172, line: 382, baseType: !176, size: 32, offset: 320)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2655, file: !172, line: 383, baseType: !176, size: 32, offset: 352)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2655, file: !172, line: 384, baseType: !176, size: 32, offset: 384)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2655, file: !172, line: 385, baseType: !176, size: 32, offset: 416)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 364, baseType: !2674)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 360, size: 64, elements: !2675)
!2675 = !{!2676, !2677}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2674, file: !172, line: 362, baseType: !176, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2674, file: !172, line: 363, baseType: !176, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 286, baseType: !2680)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 275, size: 288, elements: !2681)
!2681 = !{!2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2680, file: !172, line: 277, baseType: !176, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2680, file: !172, line: 278, baseType: !176, size: 32, offset: 32)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2680, file: !172, line: 279, baseType: !176, size: 32, offset: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2680, file: !172, line: 280, baseType: !176, size: 32, offset: 96)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2680, file: !172, line: 281, baseType: !176, size: 32, offset: 128)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2680, file: !172, line: 282, baseType: !176, size: 32, offset: 160)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2680, file: !172, line: 283, baseType: !176, size: 32, offset: 192)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2680, file: !172, line: 284, baseType: !176, size: 32, offset: 224)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2680, file: !172, line: 285, baseType: !176, size: 32, offset: 256)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 314, baseType: !2693)
!2693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 303, size: 320, elements: !2694)
!2694 = !{!2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2693, file: !172, line: 305, baseType: !176, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2693, file: !172, line: 306, baseType: !176, size: 32, offset: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2693, file: !172, line: 307, baseType: !176, size: 32, offset: 64)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2693, file: !172, line: 308, baseType: !176, size: 32, offset: 96)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2693, file: !172, line: 309, baseType: !176, size: 32, offset: 128)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2693, file: !172, line: 310, baseType: !176, size: 32, offset: 160)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2693, file: !172, line: 311, baseType: !176, size: 32, offset: 192)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2693, file: !172, line: 312, baseType: !176, size: 32, offset: 224)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2693, file: !172, line: 313, baseType: !1053, size: 64, offset: 256)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!2705 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2706, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2707, retainedTypes: !2708, splitDebugInlining: false, nameTableKind: None)
!2706 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2707 = !{!775}
!2708 = !{!2709, !137, !2717, !2723, !2736}
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !415, line: 712, baseType: !2711)
!2711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !415, line: 706, size: 128, elements: !2712)
!2712 = !{!2713, !2714, !2715, !2716}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2711, file: !415, line: 708, baseType: !176, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2711, file: !415, line: 709, baseType: !176, size: 32, offset: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2711, file: !415, line: 710, baseType: !176, size: 32, offset: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2711, file: !415, line: 711, baseType: !419, size: 32, offset: 96)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 364, baseType: !2719)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 360, size: 64, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2719, file: !172, line: 362, baseType: !176, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2719, file: !172, line: 363, baseType: !176, size: 32, offset: 32)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 286, baseType: !2725)
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 275, size: 288, elements: !2726)
!2726 = !{!2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2725, file: !172, line: 277, baseType: !176, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2725, file: !172, line: 278, baseType: !176, size: 32, offset: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2725, file: !172, line: 279, baseType: !176, size: 32, offset: 64)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2725, file: !172, line: 280, baseType: !176, size: 32, offset: 96)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2725, file: !172, line: 281, baseType: !176, size: 32, offset: 128)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2725, file: !172, line: 282, baseType: !176, size: 32, offset: 160)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2725, file: !172, line: 283, baseType: !176, size: 32, offset: 192)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2725, file: !172, line: 284, baseType: !176, size: 32, offset: 224)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2725, file: !172, line: 285, baseType: !176, size: 32, offset: 256)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 386, baseType: !2738)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 370, size: 448, elements: !2739)
!2739 = !{!2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2738, file: !172, line: 372, baseType: !176, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2738, file: !172, line: 373, baseType: !176, size: 32, offset: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2738, file: !172, line: 374, baseType: !176, size: 32, offset: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2738, file: !172, line: 375, baseType: !176, size: 32, offset: 96)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2738, file: !172, line: 376, baseType: !176, size: 32, offset: 128)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2738, file: !172, line: 377, baseType: !176, size: 32, offset: 160)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2738, file: !172, line: 378, baseType: !176, size: 32, offset: 192)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2738, file: !172, line: 379, baseType: !176, size: 32, offset: 224)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2738, file: !172, line: 380, baseType: !176, size: 32, offset: 256)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2738, file: !172, line: 381, baseType: !176, size: 32, offset: 288)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2738, file: !172, line: 382, baseType: !176, size: 32, offset: 320)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2738, file: !172, line: 383, baseType: !176, size: 32, offset: 352)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2738, file: !172, line: 384, baseType: !176, size: 32, offset: 384)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2738, file: !172, line: 385, baseType: !176, size: 32, offset: 416)
!2754 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2755, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2756, splitDebugInlining: false, nameTableKind: None)
!2755 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2756 = !{!102, !120}
!2757 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2758, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2759, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2758 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2759 = !{!2760, !2767, !30}
!2760 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2761, line: 14, baseType: !32, size: 32, elements: !2762)
!2761 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2762 = !{!2763, !2764, !2765, !2766}
!2763 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2764 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2765 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2766 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2761, line: 42, baseType: !32, size: 32, elements: !2768)
!2768 = !{!2769, !2770, !2771, !2772, !2773, !2774}
!2769 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2770 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2771 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2772 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2773 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2774 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2775 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2776, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2776 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2777 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2778, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2779, splitDebugInlining: false, nameTableKind: None)
!2778 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2779 = !{!22, !102, !103}
!2780 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2781, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2781 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!2782 = !{!"Ubuntu clang version 14.0.6"}
!2783 = !{i32 7, !"Dwarf Version", i32 4}
!2784 = !{i32 2, !"Debug Info Version", i32 3}
!2785 = !{i32 1, !"wchar_size", i32 4}
!2786 = !{i32 1, !"min_enum_size", i32 4}
!2787 = !{i32 1, !"branch-target-enforcement", i32 0}
!2788 = !{i32 1, !"sign-return-address", i32 0}
!2789 = !{i32 1, !"sign-return-address-all", i32 0}
!2790 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2791 = !{i32 7, !"frame-pointer", i32 2}
!2792 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2793, file: !2793, line: 26, type: !2794, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2234, retainedNodes: !162)
!2793 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2794 = !DISubroutineType(types: !2795)
!2795 = !{null}
!2796 = !DILocation(line: 28, column: 1, scope: !2792)
!2797 = !{i64 2152483038, i64 2152483058, i64 2152483121}
!2798 = !DILocation(line: 29, column: 1, scope: !2792)
!2799 = !{i64 2152483453, i64 2152483473, i64 2152483536}
!2800 = !DILocation(line: 30, column: 1, scope: !2792)
!2801 = !{i64 2152487933, i64 2152487953, i64 2152488016}
!2802 = !DILocation(line: 31, column: 1, scope: !2792)
!2803 = !{i64 2152488352, i64 2152488372, i64 2152488435}
!2804 = !DILocation(line: 33, column: 1, scope: !2792)
!2805 = !{i64 2152488644, i64 2152488664, i64 2152488727}
!2806 = !DILocation(line: 35, column: 1, scope: !2792)
!2807 = !{i64 2152488969, i64 2152488989, i64 2152489052}
!2808 = !DILocation(line: 50, column: 1, scope: !2792)
!2809 = !{i64 2152489396, i64 2152489416, i64 2152489479}
!2810 = !DILocation(line: 54, column: 1, scope: !2792)
!2811 = !{i64 2152489835, i64 2152489855, i64 2152489918}
!2812 = !DILocation(line: 61, column: 1, scope: !2792)
!2813 = !{i64 2152490152, i64 2152490172, i64 2152490235}
!2814 = !DILocation(line: 63, column: 1, scope: !2792)
!2815 = !{i64 2152490532, i64 2152490552, i64 2152490615}
!2816 = !DILocation(line: 64, column: 1, scope: !2792)
!2817 = !{i64 2152491054, i64 2152491074, i64 2152491137}
!2818 = !DILocation(line: 65, column: 1, scope: !2792)
!2819 = !{i64 2152491552, i64 2152491572, i64 2152491635}
!2820 = !DILocation(line: 66, column: 1, scope: !2792)
!2821 = !{i64 2152492034, i64 2152492054, i64 2152492117}
!2822 = !DILocation(line: 67, column: 1, scope: !2792)
!2823 = !{i64 2152492541, i64 2152492561, i64 2152492624}
!2824 = !DILocation(line: 68, column: 1, scope: !2792)
!2825 = !{i64 2152493029, i64 2152493049, i64 2152493112}
!2826 = !DILocation(line: 70, column: 1, scope: !2792)
!2827 = !{i64 2152493497, i64 2152493517, i64 2152493580}
!2828 = !DILocation(line: 71, column: 1, scope: !2792)
!2829 = !{i64 2152493939, i64 2152493959, i64 2152494022}
!2830 = !DILocation(line: 72, column: 1, scope: !2792)
!2831 = !{i64 2152494397, i64 2152494417, i64 2152494480}
!2832 = !DILocation(line: 79, column: 1, scope: !2792)
!2833 = !{i64 2152494851, i64 2152494871, i64 2152494934}
!2834 = !DILocation(line: 80, column: 1, scope: !2792)
!2835 = !{i64 2152495362, i64 2152495382, i64 2152495445}
!2836 = !DILocation(line: 82, column: 1, scope: !2792)
!2837 = !{i64 2152495853, i64 2152495873, i64 2152495936}
!2838 = !DILocation(line: 97, column: 1, scope: !2792)
!2839 = !{i64 2152496190, i64 2152496210, i64 2152496273}
!2840 = !DILocation(line: 99, column: 1, scope: !2792)
!2841 = !{i64 2152496408, i64 2152496428, i64 2152496491}
!2842 = !DILocation(line: 102, column: 1, scope: !2792)
!2843 = !{i64 2152496665, i64 2152496685, i64 2152496748}
!2844 = !DILocation(line: 105, column: 1, scope: !2792)
!2845 = !{i64 2152496905, i64 2152496925, i64 2152496988}
!2846 = !DILocation(line: 115, column: 1, scope: !2792)
!2847 = !{i64 2152497244, i64 2152497264, i64 2152497327}
!2848 = !DILocation(line: 118, column: 1, scope: !2792)
!2849 = !{i64 2152501649, i64 2152501669, i64 2152501732}
!2850 = !DILocation(line: 32, column: 1, scope: !2851)
!2851 = !DILexicalBlockFile(scope: !2792, file: !2852, discriminator: 0)
!2852 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2853 = !{i64 2152502005, i64 2152502025, i64 2152502088}
!2854 = !DILocation(line: 33, column: 1, scope: !2851)
!2855 = !{i64 2152502517, i64 2152502537, i64 2152502600}
!2856 = !DILocation(line: 53, column: 1, scope: !2851)
!2857 = !{i64 2152503025, i64 2152503045, i64 2152503108}
!2858 = !DILocation(line: 54, column: 1, scope: !2851)
!2859 = !{i64 2152503443, i64 2152503463, i64 2152503526}
!2860 = !DILocation(line: 55, column: 1, scope: !2851)
!2861 = !{i64 2152503861, i64 2152503881, i64 2152503944}
!2862 = !DILocation(line: 56, column: 1, scope: !2851)
!2863 = !{i64 2152504279, i64 2152504299, i64 2152504362}
!2864 = !DILocation(line: 57, column: 1, scope: !2851)
!2865 = !{i64 2152504697, i64 2152504717, i64 2152504780}
!2866 = !DILocation(line: 58, column: 1, scope: !2851)
!2867 = !{i64 2152505115, i64 2152505135, i64 2152505198}
!2868 = !DILocation(line: 59, column: 1, scope: !2851)
!2869 = !{i64 2152505533, i64 2152505553, i64 2152505616}
!2870 = !DILocation(line: 60, column: 1, scope: !2851)
!2871 = !{i64 2152505957, i64 2152505977, i64 2152506040}
!2872 = !DILocation(line: 61, column: 1, scope: !2851)
!2873 = !{i64 2152506274, i64 2152506294, i64 2152506357}
!2874 = !DILocation(line: 70, column: 1, scope: !2851)
!2875 = !{i64 2152506503, i64 2152506523, i64 2152506586}
!2876 = !DILocation(line: 72, column: 1, scope: !2851)
!2877 = !{i64 2152506835, i64 2152506855, i64 2152506918}
!2878 = !DILocation(line: 73, column: 1, scope: !2851)
!2879 = !{i64 2152507285, i64 2152507305, i64 2152507368}
!2880 = !DILocation(line: 74, column: 1, scope: !2851)
!2881 = !{i64 2152507735, i64 2152507755, i64 2152507818}
!2882 = !DILocation(line: 75, column: 1, scope: !2851)
!2883 = !{i64 2152508185, i64 2152508205, i64 2152508268}
!2884 = !DILocation(line: 76, column: 1, scope: !2851)
!2885 = !{i64 2152508635, i64 2152508655, i64 2152508718}
!2886 = !DILocation(line: 77, column: 1, scope: !2851)
!2887 = !{i64 2152509085, i64 2152509105, i64 2152509168}
!2888 = !DILocation(line: 78, column: 1, scope: !2851)
!2889 = !{i64 2152509535, i64 2152509555, i64 2152509618}
!2890 = !DILocation(line: 79, column: 1, scope: !2851)
!2891 = !{i64 2152509985, i64 2152510005, i64 2152510068}
!2892 = !DILocation(line: 80, column: 1, scope: !2851)
!2893 = !{i64 2152510438, i64 2152510458, i64 2152510521}
!2894 = !DILocation(line: 84, column: 1, scope: !2851)
!2895 = !{i64 2152514831, i64 2152514851, i64 2152514914}
!2896 = !DILocation(line: 91, column: 1, scope: !2851)
!2897 = !{i64 2152515228, i64 2152515248, i64 2152515311}
!2898 = !DILocation(line: 93, column: 1, scope: !2851)
!2899 = !{i64 2152515595, i64 2152515615, i64 2152515678}
!2900 = !DILocation(line: 106, column: 1, scope: !2851)
!2901 = !{i64 2152515865, i64 2152515885, i64 2152515948}
!2902 = !DILocation(line: 11, column: 1, scope: !2903)
!2903 = !DILexicalBlockFile(scope: !2792, file: !2904, discriminator: 0)
!2904 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2905 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 17, type: !2794, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2906)
!2906 = !{!2907}
!2907 = !DILocalVariable(name: "p", scope: !2905, file: !107, line: 19, type: !102)
!2908 = !DILocation(line: 21, column: 2, scope: !2905)
!2909 = !DILocation(line: 23, column: 2, scope: !2905)
!2910 = !DILocation(line: 24, column: 2, scope: !2905)
!2911 = !DILocation(line: 26, column: 6, scope: !2905)
!2912 = !DILocation(line: 0, scope: !2905)
!2913 = !DILocation(line: 27, column: 2, scope: !2905)
!2914 = !DILocation(line: 29, column: 6, scope: !2905)
!2915 = !DILocation(line: 30, column: 2, scope: !2905)
!2916 = !DILocation(line: 32, column: 2, scope: !2905)
!2917 = !DILocation(line: 33, column: 2, scope: !2905)
!2918 = !DILocation(line: 34, column: 1, scope: !2905)
!2919 = distinct !DISubprogram(name: "print_sys_memory_stats", scope: !107, file: !107, line: 36, type: !2794, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2920)
!2920 = !{!2921}
!2921 = !DILocalVariable(name: "stats", scope: !2919, file: !107, line: 38, type: !2922)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2923, line: 24, size: 96, elements: !2924)
!2923 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2924 = !{!2925, !2926, !2927}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2922, file: !2923, line: 25, baseType: !120, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2922, file: !2923, line: 26, baseType: !120, size: 32, offset: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2922, file: !2923, line: 27, baseType: !120, size: 32, offset: 64)
!2928 = !DILocation(line: 38, column: 2, scope: !2919)
!2929 = !DILocation(line: 38, column: 26, scope: !2919)
!2930 = !DILocation(line: 40, column: 2, scope: !2919)
!2931 = !DILocation(line: 43, column: 9, scope: !2919)
!2932 = !DILocation(line: 43, column: 32, scope: !2919)
!2933 = !DILocation(line: 44, column: 9, scope: !2919)
!2934 = !DILocation(line: 42, column: 2, scope: !2919)
!2935 = !DILocation(line: 45, column: 1, scope: !2919)
!2936 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !127, file: !127, line: 45, type: !129, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2937)
!2937 = !{!2938}
!2938 = !DILocalVariable(name: "c", arg: 1, scope: !2936, file: !127, line: 45, type: !103)
!2939 = !DILocation(line: 0, scope: !2936)
!2940 = !DILocation(line: 50, column: 2, scope: !2936)
!2941 = distinct !DISubprogram(name: "__printk_hook_install", scope: !127, file: !127, line: 63, type: !2942, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2944)
!2942 = !DISubroutineType(types: !2943)
!2943 = !{null, !128}
!2944 = !{!2945}
!2945 = !DILocalVariable(name: "fn", arg: 1, scope: !2941, file: !127, line: 63, type: !128)
!2946 = !DILocation(line: 0, scope: !2941)
!2947 = !DILocation(line: 65, column: 12, scope: !2941)
!2948 = !DILocation(line: 66, column: 1, scope: !2941)
!2949 = distinct !DISubprogram(name: "__printk_get_hook", scope: !127, file: !127, line: 76, type: !2950, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !162)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{!102}
!2952 = !DILocation(line: 78, column: 9, scope: !2949)
!2953 = !DILocation(line: 78, column: 2, scope: !2949)
!2954 = distinct !DISubprogram(name: "vprintk", scope: !127, file: !127, line: 113, type: !2955, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2964)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{null, !212, !2957}
!2957 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2958, line: 99, baseType: !2959)
!2958 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2959 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2958, line: 40, baseType: !2960)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !127, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2962)
!2962 = !{!2963}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2961, file: !127, line: 79, baseType: !102, size: 32)
!2964 = !{!2965, !2966, !2967}
!2965 = !DILocalVariable(name: "fmt", arg: 1, scope: !2954, file: !127, line: 113, type: !212)
!2966 = !DILocalVariable(name: "ap", arg: 2, scope: !2954, file: !127, line: 113, type: !2957)
!2967 = !DILocalVariable(name: "ctx", scope: !2968, file: !127, line: 121, type: !2970)
!2968 = distinct !DILexicalBlock(scope: !2969, file: !127, line: 120, column: 27)
!2969 = distinct !DILexicalBlock(scope: !2954, file: !127, line: 120, column: 6)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !127, line: 81, size: 32, elements: !2971)
!2971 = !{!2972, !2973}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !2970, file: !127, line: 85, baseType: !32, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2970, file: !127, line: 86, baseType: !2974, offset: 32)
!2974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, elements: !2262)
!2975 = !DILocation(line: 0, scope: !2954)
!2976 = !DILocation(line: 148, column: 3, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2969, file: !127, line: 138, column: 9)
!2978 = !DILocation(line: 155, column: 1, scope: !2954)
!2979 = distinct !DISubprogram(name: "char_out", scope: !127, file: !127, line: 107, type: !2980, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2982)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{!103, !103, !102}
!2982 = !{!2983, !2984}
!2983 = !DILocalVariable(name: "c", arg: 1, scope: !2979, file: !127, line: 107, type: !103)
!2984 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !2979, file: !127, line: 107, type: !102)
!2985 = !DILocation(line: 0, scope: !2979)
!2986 = !DILocation(line: 110, column: 9, scope: !2979)
!2987 = !DILocation(line: 110, column: 2, scope: !2979)
!2988 = distinct !DISubprogram(name: "cbvprintf", scope: !2989, file: !2989, line: 739, type: !2990, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2996)
!2989 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2990 = !DISubroutineType(types: !2991)
!2991 = !{!103, !2992, !102, !212, !2957}
!2992 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !2989, line: 297, baseType: !2993)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 32)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!103, null}
!2996 = !{!2997, !2998, !2999, !3000}
!2997 = !DILocalVariable(name: "out", arg: 1, scope: !2988, file: !2989, line: 739, type: !2992)
!2998 = !DILocalVariable(name: "ctx", arg: 2, scope: !2988, file: !2989, line: 739, type: !102)
!2999 = !DILocalVariable(name: "format", arg: 3, scope: !2988, file: !2989, line: 739, type: !212)
!3000 = !DILocalVariable(name: "ap", arg: 4, scope: !2988, file: !2989, line: 739, type: !2957)
!3001 = !DILocation(line: 0, scope: !2988)
!3002 = !DILocation(line: 741, column: 9, scope: !2988)
!3003 = !DILocation(line: 741, column: 2, scope: !2988)
!3004 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !127, file: !127, line: 157, type: !3005, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3007)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{null, !1062, !120}
!3007 = !{!3008, !3009, !3010}
!3008 = !DILocalVariable(name: "c", arg: 1, scope: !3004, file: !127, line: 157, type: !1062)
!3009 = !DILocalVariable(name: "n", arg: 2, scope: !3004, file: !127, line: 157, type: !120)
!3010 = !DILocalVariable(name: "i", scope: !3004, file: !127, line: 159, type: !120)
!3011 = !DILocation(line: 0, scope: !3004)
!3012 = !DILocation(line: 164, column: 16, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3014, file: !127, line: 164, column: 2)
!3014 = distinct !DILexicalBlock(scope: !3004, file: !127, line: 164, column: 2)
!3015 = !DILocation(line: 164, column: 2, scope: !3014)
!3016 = !DILocation(line: 165, column: 3, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3013, file: !127, line: 164, column: 26)
!3018 = !DILocation(line: 165, column: 13, scope: !3017)
!3019 = !DILocation(line: 164, column: 22, scope: !3013)
!3020 = distinct !{!3020, !3015, !3021}
!3021 = !DILocation(line: 166, column: 2, scope: !3014)
!3022 = !DILocation(line: 171, column: 1, scope: !3004)
!3023 = distinct !DISubprogram(name: "printk", scope: !127, file: !127, line: 203, type: !3024, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3026)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{null, !212, null}
!3026 = !{!3027, !3028}
!3027 = !DILocalVariable(name: "fmt", arg: 1, scope: !3023, file: !127, line: 203, type: !212)
!3028 = !DILocalVariable(name: "ap", scope: !3023, file: !127, line: 205, type: !2957)
!3029 = !DILocation(line: 0, scope: !3023)
!3030 = !DILocation(line: 205, column: 2, scope: !3023)
!3031 = !DILocation(line: 205, column: 10, scope: !3023)
!3032 = !DILocation(line: 207, column: 2, scope: !3023)
!3033 = !DILocation(line: 209, column: 2, scope: !3023)
!3034 = !DILocation(line: 211, column: 2, scope: !3023)
!3035 = !DILocation(line: 212, column: 1, scope: !3023)
!3036 = distinct !DISubprogram(name: "snprintk", scope: !127, file: !127, line: 239, type: !3037, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3039)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{!103, !1062, !120, !212, null}
!3039 = !{!3040, !3041, !3042, !3043, !3044}
!3040 = !DILocalVariable(name: "str", arg: 1, scope: !3036, file: !127, line: 239, type: !1062)
!3041 = !DILocalVariable(name: "size", arg: 2, scope: !3036, file: !127, line: 239, type: !120)
!3042 = !DILocalVariable(name: "fmt", arg: 3, scope: !3036, file: !127, line: 239, type: !212)
!3043 = !DILocalVariable(name: "ap", scope: !3036, file: !127, line: 241, type: !2957)
!3044 = !DILocalVariable(name: "ret", scope: !3036, file: !127, line: 242, type: !103)
!3045 = !DILocation(line: 0, scope: !3036)
!3046 = !DILocation(line: 241, column: 2, scope: !3036)
!3047 = !DILocation(line: 241, column: 10, scope: !3036)
!3048 = !DILocation(line: 244, column: 2, scope: !3036)
!3049 = !DILocation(line: 245, column: 8, scope: !3036)
!3050 = !DILocation(line: 246, column: 2, scope: !3036)
!3051 = !DILocation(line: 249, column: 1, scope: !3036)
!3052 = !DILocation(line: 248, column: 2, scope: !3036)
!3053 = distinct !DISubprogram(name: "vsnprintk", scope: !127, file: !127, line: 251, type: !3054, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3056)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!103, !1062, !120, !212, !2957}
!3056 = !{!3057, !3058, !3059, !3060, !3061}
!3057 = !DILocalVariable(name: "str", arg: 1, scope: !3053, file: !127, line: 251, type: !1062)
!3058 = !DILocalVariable(name: "size", arg: 2, scope: !3053, file: !127, line: 251, type: !120)
!3059 = !DILocalVariable(name: "fmt", arg: 3, scope: !3053, file: !127, line: 251, type: !212)
!3060 = !DILocalVariable(name: "ap", arg: 4, scope: !3053, file: !127, line: 251, type: !2957)
!3061 = !DILocalVariable(name: "ctx", scope: !3053, file: !127, line: 253, type: !3062)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !127, line: 217, size: 96, elements: !3063)
!3063 = !{!3064, !3065, !3066}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3062, file: !127, line: 218, baseType: !1062, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3062, file: !127, line: 219, baseType: !103, size: 32, offset: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3062, file: !127, line: 220, baseType: !103, size: 32, offset: 64)
!3067 = !DILocation(line: 0, scope: !3053)
!3068 = !DILocation(line: 253, column: 2, scope: !3053)
!3069 = !DILocation(line: 253, column: 21, scope: !3053)
!3070 = !DILocation(line: 253, column: 27, scope: !3053)
!3071 = !DILocation(line: 255, column: 2, scope: !3053)
!3072 = !DILocation(line: 257, column: 10, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3053, file: !127, line: 257, column: 6)
!3074 = !DILocation(line: 257, column: 22, scope: !3073)
!3075 = !DILocation(line: 257, column: 16, scope: !3073)
!3076 = !DILocation(line: 257, column: 6, scope: !3053)
!3077 = !DILocation(line: 258, column: 3, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3073, file: !127, line: 257, column: 27)
!3079 = !DILocation(line: 258, column: 18, scope: !3078)
!3080 = !DILocation(line: 259, column: 2, scope: !3078)
!3081 = !DILocation(line: 262, column: 1, scope: !3053)
!3082 = !DILocation(line: 261, column: 2, scope: !3053)
!3083 = distinct !DISubprogram(name: "str_out", scope: !127, file: !127, line: 223, type: !3084, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3087)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{!103, !103, !3086}
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 32)
!3087 = !{!3088, !3089}
!3088 = !DILocalVariable(name: "c", arg: 1, scope: !3083, file: !127, line: 223, type: !103)
!3089 = !DILocalVariable(name: "ctx", arg: 2, scope: !3083, file: !127, line: 223, type: !3086)
!3090 = !DILocation(line: 0, scope: !3083)
!3091 = !DILocation(line: 225, column: 11, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !3083, file: !127, line: 225, column: 6)
!3093 = !DILocation(line: 225, column: 15, scope: !3092)
!3094 = !DILocation(line: 0, scope: !3092)
!3095 = !DILocation(line: 225, column: 23, scope: !3092)
!3096 = !DILocation(line: 225, column: 45, scope: !3092)
!3097 = !DILocation(line: 225, column: 37, scope: !3092)
!3098 = !DILocation(line: 225, column: 6, scope: !3083)
!3099 = !DILocation(line: 226, column: 8, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3092, file: !127, line: 225, column: 50)
!3101 = !DILocation(line: 226, column: 13, scope: !3100)
!3102 = !DILocation(line: 227, column: 3, scope: !3100)
!3103 = !DILocation(line: 230, column: 29, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3083, file: !127, line: 230, column: 6)
!3105 = !DILocation(line: 230, column: 17, scope: !3104)
!3106 = !DILocation(line: 230, column: 6, scope: !3083)
!3107 = !DILocation(line: 231, column: 22, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3104, file: !127, line: 230, column: 34)
!3109 = !DILocation(line: 231, column: 3, scope: !3108)
!3110 = !DILocation(line: 231, column: 26, scope: !3108)
!3111 = !DILocation(line: 232, column: 2, scope: !3108)
!3112 = !DILocation(line: 233, column: 28, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3104, file: !127, line: 232, column: 9)
!3114 = !DILocation(line: 233, column: 22, scope: !3113)
!3115 = !DILocation(line: 233, column: 3, scope: !3113)
!3116 = !DILocation(line: 233, column: 26, scope: !3113)
!3117 = !DILocation(line: 237, column: 1, scope: !3083)
!3118 = distinct !DISubprogram(name: "z_thread_entry", scope: !3119, file: !3119, line: 30, type: !3120, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !3127)
!3119 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3120 = !DISubroutineType(types: !3121)
!3121 = !{null, !3122, !102, !102, !102}
!3122 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3123, line: 46, baseType: !3124)
!3123 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 32)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{null, !102, !102, !102}
!3127 = !{!3128, !3129, !3130, !3131}
!3128 = !DILocalVariable(name: "entry", arg: 1, scope: !3118, file: !3119, line: 30, type: !3122)
!3129 = !DILocalVariable(name: "p1", arg: 2, scope: !3118, file: !3119, line: 31, type: !102)
!3130 = !DILocalVariable(name: "p2", arg: 3, scope: !3118, file: !3119, line: 31, type: !102)
!3131 = !DILocalVariable(name: "p3", arg: 4, scope: !3118, file: !3119, line: 31, type: !102)
!3132 = !DILocation(line: 0, scope: !3118)
!3133 = !DILocation(line: 36, column: 2, scope: !3118)
!3134 = !DILocation(line: 38, column: 17, scope: !3118)
!3135 = !DILocation(line: 38, column: 2, scope: !3118)
!3136 = !DILocation(line: 45, column: 2, scope: !3118)
!3137 = distinct !DISubprogram(name: "k_current_get", scope: !370, file: !370, line: 530, type: !3138, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !162)
!3138 = !DISubroutineType(types: !3139)
!3139 = !{!3140}
!3140 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !276, line: 347, baseType: !3141)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 32)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !276, line: 245, size: 1024, elements: !3143)
!3143 = !{!3144, !3202, !3214, !3215, !3216, !3217, !3223, !3236}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3142, file: !276, line: 247, baseType: !3145, size: 384)
!3145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !276, line: 57, size: 384, elements: !3146)
!3146 = !{!3147, !3171, !3178, !3179, !3180, !3189, !3190, !3191}
!3147 = !DIDerivedType(tag: DW_TAG_member, scope: !3145, file: !276, line: 60, baseType: !3148, size: 64)
!3148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3145, file: !276, line: 60, size: 64, elements: !3149)
!3149 = !{!3150, !3165}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3148, file: !276, line: 61, baseType: !3151, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !286, line: 49, baseType: !3152)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !286, line: 37, size: 64, elements: !3153)
!3153 = !{!3154, !3160}
!3154 = !DIDerivedType(tag: DW_TAG_member, scope: !3152, file: !286, line: 38, baseType: !3155, size: 32)
!3155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3152, file: !286, line: 38, size: 32, elements: !3156)
!3156 = !{!3157, !3159}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3155, file: !286, line: 39, baseType: !3158, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3155, file: !286, line: 40, baseType: !3158, size: 32)
!3160 = !DIDerivedType(tag: DW_TAG_member, scope: !3152, file: !286, line: 42, baseType: !3161, size: 32, offset: 32)
!3161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3152, file: !286, line: 42, size: 32, elements: !3162)
!3162 = !{!3163, !3164}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3161, file: !286, line: 43, baseType: !3158, size: 32)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3161, file: !286, line: 44, baseType: !3158, size: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3148, file: !276, line: 62, baseType: !3166, size: 64)
!3166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !3167)
!3167 = !{!3168}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3166, file: !302, line: 50, baseType: !3169, size: 64)
!3169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3170, size: 64, elements: !307)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3145, file: !276, line: 68, baseType: !3172, size: 32, offset: 64)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !312, line: 233, baseType: !3174)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 231, size: 64, elements: !3175)
!3175 = !{!3176}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3174, file: !312, line: 232, baseType: !3177, size: 64)
!3177 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !286, line: 48, baseType: !3152)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3145, file: !276, line: 71, baseType: !221, size: 8, offset: 96)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3145, file: !276, line: 74, baseType: !221, size: 8, offset: 104)
!3180 = !DIDerivedType(tag: DW_TAG_member, scope: !3145, file: !276, line: 90, baseType: !3181, size: 16, offset: 112)
!3181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3145, file: !276, line: 90, size: 16, elements: !3182)
!3182 = !{!3183, !3188}
!3183 = !DIDerivedType(tag: DW_TAG_member, scope: !3181, file: !276, line: 91, baseType: !3184, size: 16)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3181, file: !276, line: 91, size: 16, elements: !3185)
!3185 = !{!3186, !3187}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3184, file: !276, line: 96, baseType: !326, size: 8)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3184, file: !276, line: 97, baseType: !221, size: 8, offset: 8)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3181, file: !276, line: 100, baseType: !151, size: 16)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3145, file: !276, line: 107, baseType: !137, size: 32, offset: 128)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3145, file: !276, line: 127, baseType: !102, size: 32, offset: 160)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3145, file: !276, line: 131, baseType: !3192, size: 192, offset: 192)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !312, line: 244, size: 192, elements: !3193)
!3193 = !{!3194, !3195, !3201}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3192, file: !312, line: 245, baseType: !3151, size: 64)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3192, file: !312, line: 246, baseType: !3196, size: 32, offset: 64)
!3196 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !312, line: 242, baseType: !3197)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{null, !3200}
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 32)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3192, file: !312, line: 249, baseType: !343, size: 64, offset: 128)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3142, file: !276, line: 250, baseType: !3203, size: 288, offset: 384)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !347, line: 25, size: 288, elements: !3204)
!3204 = !{!3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3203, file: !347, line: 26, baseType: !137, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3203, file: !347, line: 27, baseType: !137, size: 32, offset: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3203, file: !347, line: 28, baseType: !137, size: 32, offset: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3203, file: !347, line: 29, baseType: !137, size: 32, offset: 96)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3203, file: !347, line: 30, baseType: !137, size: 32, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3203, file: !347, line: 31, baseType: !137, size: 32, offset: 160)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3203, file: !347, line: 32, baseType: !137, size: 32, offset: 192)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3203, file: !347, line: 33, baseType: !137, size: 32, offset: 224)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3203, file: !347, line: 34, baseType: !137, size: 32, offset: 256)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3142, file: !276, line: 253, baseType: !102, size: 32, offset: 672)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3142, file: !276, line: 256, baseType: !3173, size: 64, offset: 704)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3142, file: !276, line: 294, baseType: !103, size: 32, offset: 768)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3142, file: !276, line: 300, baseType: !3218, size: 96, offset: 800)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !276, line: 149, size: 96, elements: !3219)
!3219 = !{!3220, !3221, !3222}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3218, file: !276, line: 153, baseType: !22, size: 32)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3218, file: !276, line: 162, baseType: !120, size: 32, offset: 32)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3218, file: !276, line: 168, baseType: !120, size: 32, offset: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3142, file: !276, line: 325, baseType: !3224, size: 32, offset: 896)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 32)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !370, line: 5073, size: 160, elements: !3226)
!3226 = !{!3227, !3233, !3234}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3225, file: !370, line: 5074, baseType: !3228, size: 96)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3229)
!3229 = !{!3230, !3231, !3232}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3228, file: !113, line: 57, baseType: !116, size: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3228, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3228, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3225, file: !370, line: 5075, baseType: !3173, size: 64, offset: 96)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3225, file: !370, line: 5076, baseType: !3235, offset: 160)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !381, line: 43, elements: !162)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3142, file: !276, line: 343, baseType: !3237, size: 64, offset: 928)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !347, line: 60, size: 64, elements: !3238)
!3238 = !{!3239, !3240}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3237, file: !347, line: 63, baseType: !137, size: 32)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3237, file: !347, line: 66, baseType: !137, size: 32, offset: 32)
!3241 = !DILocation(line: 535, column: 9, scope: !3137)
!3242 = !DILocation(line: 535, column: 2, scope: !3137)
!3243 = distinct !DISubprogram(name: "k_thread_abort", scope: !3244, file: !3244, line: 188, type: !3245, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !3247)
!3244 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!3245 = !DISubroutineType(types: !3246)
!3246 = !{null, !3140}
!3247 = !{!3248}
!3248 = !DILocalVariable(name: "thread", arg: 1, scope: !3243, file: !3244, line: 188, type: !3140)
!3249 = !DILocation(line: 0, scope: !3243)
!3250 = !DILocation(line: 197, column: 2, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3243, file: !3244, line: 197, column: 2)
!3252 = !{i64 2152212354}
!3253 = !DILocation(line: 198, column: 2, scope: !3243)
!3254 = !DILocation(line: 199, column: 1, scope: !3243)
!3255 = distinct !DISubprogram(name: "z_current_get", scope: !3244, file: !3244, line: 173, type: !3138, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2236, retainedNodes: !162)
!3256 = !DILocation(line: 180, column: 2, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3255, file: !3244, line: 180, column: 2)
!3258 = !{i64 2152212286}
!3259 = !DILocation(line: 181, column: 9, scope: !3255)
!3260 = !DILocation(line: 181, column: 2, scope: !3255)
!3261 = distinct !DISubprogram(name: "sys_heap_free", scope: !3262, file: !3262, line: 163, type: !3263, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3271)
!3262 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3263 = !DISubroutineType(types: !3264)
!3264 = !{null, !3265, !102}
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 32)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3267)
!3267 = !{!3268, !3269, !3270}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3266, file: !113, line: 57, baseType: !2246, size: 32)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3266, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3266, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3271 = !{!3272, !3273, !3274, !3275}
!3272 = !DILocalVariable(name: "heap", arg: 1, scope: !3261, file: !3262, line: 163, type: !3265)
!3273 = !DILocalVariable(name: "mem", arg: 2, scope: !3261, file: !3262, line: 163, type: !102)
!3274 = !DILocalVariable(name: "h", scope: !3261, file: !3262, line: 168, type: !2246)
!3275 = !DILocalVariable(name: "c", scope: !3261, file: !3262, line: 169, type: !2251)
!3276 = !DILocation(line: 0, scope: !3261)
!3277 = !DILocation(line: 165, column: 10, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3261, file: !3262, line: 165, column: 6)
!3279 = !DILocation(line: 165, column: 6, scope: !3261)
!3280 = !DILocation(line: 168, column: 27, scope: !3261)
!3281 = !DILocation(line: 169, column: 16, scope: !3261)
!3282 = !{i32 0, i32 536870912}
!3283 = !DILocation(line: 187, column: 2, scope: !3261)
!3284 = !DILocation(line: 189, column: 44, scope: !3261)
!3285 = !{i32 0, i32 32768}
!3286 = !DILocation(line: 189, column: 24, scope: !3261)
!3287 = !DILocation(line: 189, column: 5, scope: !3261)
!3288 = !DILocation(line: 189, column: 21, scope: !3261)
!3289 = !DILocation(line: 197, column: 2, scope: !3261)
!3290 = !DILocation(line: 198, column: 1, scope: !3261)
!3291 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3262, file: !3262, line: 157, type: !3292, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3294)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{!2251, !2246, !102}
!3294 = !{!3295, !3296, !3297, !3298}
!3295 = !DILocalVariable(name: "h", arg: 1, scope: !3291, file: !3262, line: 157, type: !2246)
!3296 = !DILocalVariable(name: "p", arg: 2, scope: !3291, file: !3262, line: 157, type: !102)
!3297 = !DILocalVariable(name: "mem", scope: !3291, file: !3262, line: 159, type: !1737)
!3298 = !DILocalVariable(name: "base", scope: !3291, file: !3262, line: 159, type: !1737)
!3299 = !DILocation(line: 0, scope: !3291)
!3300 = !DILocation(line: 159, column: 39, scope: !3291)
!3301 = !DILocation(line: 160, column: 14, scope: !3291)
!3302 = !DILocation(line: 160, column: 38, scope: !3291)
!3303 = !DILocation(line: 160, column: 46, scope: !3291)
!3304 = !DILocation(line: 160, column: 2, scope: !3291)
!3305 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !3306, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3308)
!3306 = !DISubroutineType(types: !3307)
!3307 = !{null, !2246, !2251, !224}
!3308 = !{!3309, !3310, !3311, !3312, !3313}
!3309 = !DILocalVariable(name: "h", arg: 1, scope: !3305, file: !142, line: 147, type: !2246)
!3310 = !DILocalVariable(name: "c", arg: 2, scope: !3305, file: !142, line: 147, type: !2251)
!3311 = !DILocalVariable(name: "used", arg: 3, scope: !3305, file: !142, line: 147, type: !224)
!3312 = !DILocalVariable(name: "buf", scope: !3305, file: !142, line: 149, type: !2241)
!3313 = !DILocalVariable(name: "cmem", scope: !3305, file: !142, line: 150, type: !102)
!3314 = !DILocation(line: 0, scope: !3305)
!3315 = !DILocation(line: 149, column: 22, scope: !3305)
!3316 = !DILocation(line: 0, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3318, file: !142, line: 159, column: 7)
!3318 = distinct !DILexicalBlock(scope: !3319, file: !142, line: 158, column: 9)
!3319 = distinct !DILexicalBlock(scope: !3305, file: !142, line: 152, column: 6)
!3320 = !DILocation(line: 159, column: 7, scope: !3318)
!3321 = !DILocation(line: 165, column: 1, scope: !3305)
!3322 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !3323, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3326)
!3323 = !DISubroutineType(types: !3324)
!3324 = !{!3325, !2246, !2251}
!3325 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !142, line: 62, baseType: !137)
!3326 = !{!3327, !3328}
!3327 = !DILocalVariable(name: "h", arg: 1, scope: !3322, file: !142, line: 142, type: !2246)
!3328 = !DILocalVariable(name: "c", arg: 2, scope: !3322, file: !142, line: 142, type: !2251)
!3329 = !DILocation(line: 0, scope: !3322)
!3330 = !DILocation(line: 144, column: 9, scope: !3322)
!3331 = !DILocation(line: 144, column: 42, scope: !3322)
!3332 = !DILocation(line: 144, column: 2, scope: !3322)
!3333 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !3334, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3336)
!3334 = !DISubroutineType(types: !3335)
!3335 = !{!120, !2246, !3325}
!3336 = !{!3337, !3338}
!3337 = !DILocalVariable(name: "h", arg: 1, scope: !3333, file: !142, line: 245, type: !2246)
!3338 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !3333, file: !142, line: 245, type: !3325)
!3339 = !DILocation(line: 0, scope: !3333)
!3340 = !DILocation(line: 247, column: 20, scope: !3333)
!3341 = !DILocation(line: 247, column: 33, scope: !3333)
!3342 = !DILocation(line: 247, column: 2, scope: !3333)
!3343 = distinct !DISubprogram(name: "free_chunk", scope: !3262, file: !3262, line: 133, type: !3344, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3346)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{null, !2246, !2251}
!3346 = !{!3347, !3348}
!3347 = !DILocalVariable(name: "h", arg: 1, scope: !3343, file: !3262, line: 133, type: !2246)
!3348 = !DILocalVariable(name: "c", arg: 2, scope: !3343, file: !3262, line: 133, type: !2251)
!3349 = !DILocation(line: 0, scope: !3343)
!3350 = !DILocation(line: 136, column: 21, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3343, file: !3262, line: 136, column: 6)
!3352 = !DILocation(line: 136, column: 7, scope: !3351)
!3353 = !DILocation(line: 136, column: 6, scope: !3343)
!3354 = !DILocation(line: 137, column: 3, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3351, file: !3262, line: 136, column: 41)
!3356 = !DILocation(line: 138, column: 22, scope: !3355)
!3357 = !DILocation(line: 138, column: 3, scope: !3355)
!3358 = !DILocation(line: 139, column: 2, scope: !3355)
!3359 = !DILocation(line: 142, column: 21, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3343, file: !3262, line: 142, column: 6)
!3361 = !{i32 -65535, i32 536903678}
!3362 = !DILocation(line: 142, column: 7, scope: !3360)
!3363 = !DILocation(line: 142, column: 6, scope: !3343)
!3364 = !DILocation(line: 143, column: 3, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3360, file: !3262, line: 142, column: 40)
!3366 = !DILocation(line: 144, column: 19, scope: !3365)
!3367 = !DILocation(line: 144, column: 3, scope: !3365)
!3368 = !DILocation(line: 145, column: 7, scope: !3365)
!3369 = !DILocation(line: 146, column: 2, scope: !3365)
!3370 = !DILocation(line: 148, column: 2, scope: !3343)
!3371 = !DILocation(line: 149, column: 1, scope: !3343)
!3372 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !3373, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3375)
!3373 = !DISubroutineType(types: !3374)
!3374 = !{!2251, !2246, !2251}
!3375 = !{!3376, !3377}
!3376 = !DILocalVariable(name: "h", arg: 1, scope: !3372, file: !142, line: 204, type: !2246)
!3377 = !DILocalVariable(name: "c", arg: 2, scope: !3372, file: !142, line: 204, type: !2251)
!3378 = !DILocation(line: 0, scope: !3372)
!3379 = !DILocation(line: 206, column: 13, scope: !3372)
!3380 = !DILocation(line: 206, column: 11, scope: !3372)
!3381 = !DILocation(line: 206, column: 2, scope: !3372)
!3382 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !3383, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3385)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{!224, !2246, !2251}
!3385 = !{!3386, !3387}
!3386 = !DILocalVariable(name: "h", arg: 1, scope: !3382, file: !142, line: 137, type: !2246)
!3387 = !DILocalVariable(name: "c", arg: 2, scope: !3382, file: !142, line: 137, type: !2251)
!3388 = !DILocation(line: 0, scope: !3382)
!3389 = !DILocation(line: 139, column: 9, scope: !3382)
!3390 = !DILocation(line: 139, column: 42, scope: !3382)
!3391 = !DILocation(line: 139, column: 2, scope: !3382)
!3392 = distinct !DISubprogram(name: "free_list_remove", scope: !3262, file: !3262, line: 60, type: !3344, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3393)
!3393 = !{!3394, !3395, !3396}
!3394 = !DILocalVariable(name: "h", arg: 1, scope: !3392, file: !3262, line: 60, type: !2246)
!3395 = !DILocalVariable(name: "c", arg: 2, scope: !3392, file: !3262, line: 60, type: !2251)
!3396 = !DILocalVariable(name: "bidx", scope: !3397, file: !3262, line: 63, type: !103)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !3262, line: 62, column: 31)
!3398 = distinct !DILexicalBlock(scope: !3392, file: !3262, line: 62, column: 6)
!3399 = !DILocation(line: 0, scope: !3392)
!3400 = !DILocation(line: 63, column: 28, scope: !3397)
!3401 = !DILocation(line: 63, column: 14, scope: !3397)
!3402 = !DILocation(line: 0, scope: !3397)
!3403 = !DILocation(line: 64, column: 3, scope: !3397)
!3404 = !DILocation(line: 66, column: 1, scope: !3392)
!3405 = distinct !DISubprogram(name: "merge_chunks", scope: !3262, file: !3262, line: 125, type: !3406, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3408)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{null, !2246, !2251, !2251}
!3408 = !{!3409, !3410, !3411, !3412}
!3409 = !DILocalVariable(name: "h", arg: 1, scope: !3405, file: !3262, line: 125, type: !2246)
!3410 = !DILocalVariable(name: "lc", arg: 2, scope: !3405, file: !3262, line: 125, type: !2251)
!3411 = !DILocalVariable(name: "rc", arg: 3, scope: !3405, file: !3262, line: 125, type: !2251)
!3412 = !DILocalVariable(name: "newsz", scope: !3405, file: !3262, line: 127, type: !3325)
!3413 = !DILocation(line: 0, scope: !3405)
!3414 = !DILocation(line: 127, column: 20, scope: !3405)
!3415 = !DILocation(line: 127, column: 40, scope: !3405)
!3416 = !DILocation(line: 127, column: 38, scope: !3405)
!3417 = !DILocation(line: 129, column: 2, scope: !3405)
!3418 = !DILocation(line: 130, column: 25, scope: !3405)
!3419 = !DILocation(line: 130, column: 2, scope: !3405)
!3420 = !DILocation(line: 131, column: 1, scope: !3405)
!3421 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !3373, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3422)
!3422 = !{!3423, !3424}
!3423 = !DILocalVariable(name: "h", arg: 1, scope: !3421, file: !142, line: 199, type: !2246)
!3424 = !DILocalVariable(name: "c", arg: 2, scope: !3421, file: !142, line: 199, type: !2251)
!3425 = !DILocation(line: 0, scope: !3421)
!3426 = !DILocation(line: 201, column: 13, scope: !3421)
!3427 = !DILocation(line: 201, column: 11, scope: !3421)
!3428 = !DILocation(line: 201, column: 2, scope: !3421)
!3429 = distinct !DISubprogram(name: "free_list_add", scope: !3262, file: !3262, line: 98, type: !3344, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3430)
!3430 = !{!3431, !3432, !3433}
!3431 = !DILocalVariable(name: "h", arg: 1, scope: !3429, file: !3262, line: 98, type: !2246)
!3432 = !DILocalVariable(name: "c", arg: 2, scope: !3429, file: !3262, line: 98, type: !2251)
!3433 = !DILocalVariable(name: "bidx", scope: !3434, file: !3262, line: 101, type: !103)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !3262, line: 100, column: 31)
!3435 = distinct !DILexicalBlock(scope: !3429, file: !3262, line: 100, column: 6)
!3436 = !DILocation(line: 0, scope: !3429)
!3437 = !DILocation(line: 101, column: 28, scope: !3434)
!3438 = !DILocation(line: 101, column: 14, scope: !3434)
!3439 = !DILocation(line: 0, scope: !3434)
!3440 = !DILocation(line: 102, column: 3, scope: !3434)
!3441 = !DILocation(line: 104, column: 1, scope: !3429)
!3442 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !3443, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3445)
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!103, !2246, !3325}
!3445 = !{!3446, !3447, !3448}
!3446 = !DILocalVariable(name: "h", arg: 1, scope: !3442, file: !142, line: 250, type: !2246)
!3447 = !DILocalVariable(name: "sz", arg: 2, scope: !3442, file: !142, line: 250, type: !3325)
!3448 = !DILocalVariable(name: "usable_sz", scope: !3442, file: !142, line: 252, type: !32)
!3449 = !DILocation(line: 0, scope: !3442)
!3450 = !DILocation(line: 252, column: 32, scope: !3442)
!3451 = !DILocation(line: 252, column: 30, scope: !3442)
!3452 = !DILocation(line: 252, column: 50, scope: !3442)
!3453 = !DILocation(line: 253, column: 14, scope: !3442)
!3454 = !{i32 0, i32 33}
!3455 = !DILocation(line: 253, column: 12, scope: !3442)
!3456 = !DILocation(line: 253, column: 2, scope: !3442)
!3457 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3262, file: !3262, line: 68, type: !3458, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3460)
!3458 = !DISubroutineType(types: !3459)
!3459 = !{null, !2246, !2251, !103}
!3460 = !{!3461, !3462, !3463, !3464, !3466, !3469}
!3461 = !DILocalVariable(name: "h", arg: 1, scope: !3457, file: !3262, line: 68, type: !2246)
!3462 = !DILocalVariable(name: "c", arg: 2, scope: !3457, file: !3262, line: 68, type: !2251)
!3463 = !DILocalVariable(name: "bidx", arg: 3, scope: !3457, file: !3262, line: 68, type: !103)
!3464 = !DILocalVariable(name: "b", scope: !3457, file: !3262, line: 70, type: !3465)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!3466 = !DILocalVariable(name: "second", scope: !3467, file: !3262, line: 84, type: !2251)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !3262, line: 80, column: 9)
!3468 = distinct !DILexicalBlock(scope: !3457, file: !3262, line: 72, column: 6)
!3469 = !DILocalVariable(name: "first", scope: !3467, file: !3262, line: 85, type: !2251)
!3470 = !DILocation(line: 0, scope: !3457)
!3471 = !DILocation(line: 72, column: 9, scope: !3468)
!3472 = !DILocation(line: 72, column: 14, scope: !3468)
!3473 = !DILocation(line: 72, column: 6, scope: !3457)
!3474 = !DILocation(line: 76, column: 23, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3468, file: !3262, line: 72, column: 21)
!3476 = !DILocation(line: 76, column: 6, scope: !3475)
!3477 = !DILocation(line: 76, column: 20, scope: !3475)
!3478 = !DILocation(line: 77, column: 11, scope: !3475)
!3479 = !DILocation(line: 78, column: 3, scope: !3475)
!3480 = !DILocation(line: 79, column: 3, scope: !3475)
!3481 = !DILocation(line: 80, column: 2, scope: !3475)
!3482 = !DILocation(line: 0, scope: !3467)
!3483 = !DILocation(line: 85, column: 21, scope: !3467)
!3484 = !{i32 0, i32 65536}
!3485 = !DILocation(line: 87, column: 3, scope: !3467)
!3486 = !DILocation(line: 88, column: 3, scope: !3467)
!3487 = !DILocation(line: 89, column: 3, scope: !3467)
!3488 = !DILocation(line: 90, column: 3, scope: !3467)
!3489 = !DILocation(line: 94, column: 39, scope: !3457)
!3490 = !DILocation(line: 94, column: 19, scope: !3457)
!3491 = !DILocation(line: 94, column: 5, scope: !3457)
!3492 = !DILocation(line: 94, column: 16, scope: !3457)
!3493 = !DILocation(line: 96, column: 1, scope: !3457)
!3494 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !142, file: !142, line: 187, type: !3406, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3495)
!3495 = !{!3496, !3497, !3498}
!3496 = !DILocalVariable(name: "h", arg: 1, scope: !3494, file: !142, line: 187, type: !2246)
!3497 = !DILocalVariable(name: "c", arg: 2, scope: !3494, file: !142, line: 187, type: !2251)
!3498 = !DILocalVariable(name: "prev", arg: 3, scope: !3494, file: !142, line: 188, type: !2251)
!3499 = !DILocation(line: 0, scope: !3494)
!3500 = !DILocation(line: 190, column: 2, scope: !3494)
!3501 = !DILocation(line: 191, column: 1, scope: !3494)
!3502 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !142, file: !142, line: 193, type: !3406, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3503)
!3503 = !{!3504, !3505, !3506}
!3504 = !DILocalVariable(name: "h", arg: 1, scope: !3502, file: !142, line: 193, type: !2246)
!3505 = !DILocalVariable(name: "c", arg: 2, scope: !3502, file: !142, line: 193, type: !2251)
!3506 = !DILocalVariable(name: "next", arg: 3, scope: !3502, file: !142, line: 194, type: !2251)
!3507 = !DILocation(line: 0, scope: !3502)
!3508 = !DILocation(line: 196, column: 2, scope: !3502)
!3509 = !DILocation(line: 197, column: 1, scope: !3502)
!3510 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !3373, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3511)
!3511 = !{!3512, !3513}
!3512 = !DILocalVariable(name: "h", arg: 1, scope: !3510, file: !142, line: 177, type: !2246)
!3513 = !DILocalVariable(name: "c", arg: 2, scope: !3510, file: !142, line: 177, type: !2251)
!3514 = !DILocation(line: 0, scope: !3510)
!3515 = !DILocation(line: 179, column: 9, scope: !3510)
!3516 = !DILocation(line: 179, column: 2, scope: !3510)
!3517 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !3518, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3520)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{!2251, !2246, !2251, !141}
!3520 = !{!3521, !3522, !3523, !3524, !3525}
!3521 = !DILocalVariable(name: "h", arg: 1, scope: !3517, file: !142, line: 107, type: !2246)
!3522 = !DILocalVariable(name: "c", arg: 2, scope: !3517, file: !142, line: 107, type: !2251)
!3523 = !DILocalVariable(name: "f", arg: 3, scope: !3517, file: !142, line: 108, type: !141)
!3524 = !DILocalVariable(name: "buf", scope: !3517, file: !142, line: 110, type: !2241)
!3525 = !DILocalVariable(name: "cmem", scope: !3517, file: !142, line: 111, type: !102)
!3526 = !DILocation(line: 0, scope: !3517)
!3527 = !DILocation(line: 110, column: 22, scope: !3517)
!3528 = !DILocation(line: 111, column: 15, scope: !3517)
!3529 = !DILocation(line: 116, column: 11, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !142, line: 115, column: 9)
!3531 = distinct !DILexicalBlock(scope: !3517, file: !142, line: 113, column: 6)
!3532 = !DILocation(line: 116, column: 10, scope: !3530)
!3533 = !DILocation(line: 118, column: 1, scope: !3517)
!3534 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !3535, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3537)
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!2241, !2246}
!3537 = !{!3538}
!3538 = !DILocalVariable(name: "h", arg: 1, scope: !3534, file: !142, line: 101, type: !2246)
!3539 = !DILocation(line: 0, scope: !3534)
!3540 = !DILocation(line: 104, column: 9, scope: !3534)
!3541 = !DILocation(line: 104, column: 2, scope: !3534)
!3542 = distinct !DISubprogram(name: "chunk_set", scope: !142, file: !142, line: 120, type: !3543, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3545)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{null, !2246, !2251, !141, !2251}
!3545 = !{!3546, !3547, !3548, !3549, !3550, !3551}
!3546 = !DILocalVariable(name: "h", arg: 1, scope: !3542, file: !142, line: 120, type: !2246)
!3547 = !DILocalVariable(name: "c", arg: 2, scope: !3542, file: !142, line: 120, type: !2251)
!3548 = !DILocalVariable(name: "f", arg: 3, scope: !3542, file: !142, line: 121, type: !141)
!3549 = !DILocalVariable(name: "val", arg: 4, scope: !3542, file: !142, line: 121, type: !2251)
!3550 = !DILocalVariable(name: "buf", scope: !3542, file: !142, line: 125, type: !2241)
!3551 = !DILocalVariable(name: "cmem", scope: !3542, file: !142, line: 126, type: !102)
!3552 = !DILocation(line: 0, scope: !3542)
!3553 = !DILocation(line: 125, column: 22, scope: !3542)
!3554 = !DILocation(line: 126, column: 15, scope: !3542)
!3555 = !DILocation(line: 133, column: 27, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !142, line: 131, column: 9)
!3557 = distinct !DILexicalBlock(scope: !3542, file: !142, line: 128, column: 6)
!3558 = !DILocation(line: 133, column: 4, scope: !3556)
!3559 = !DILocation(line: 133, column: 3, scope: !3556)
!3560 = !DILocation(line: 133, column: 25, scope: !3556)
!3561 = !DILocation(line: 135, column: 1, scope: !3542)
!3562 = distinct !DISubprogram(name: "min_chunk_size", scope: !142, file: !142, line: 240, type: !3563, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3565)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{!3325, !2246}
!3565 = !{!3566}
!3566 = !DILocalVariable(name: "h", arg: 1, scope: !3562, file: !142, line: 240, type: !2246)
!3567 = !DILocation(line: 0, scope: !3562)
!3568 = !DILocation(line: 242, column: 9, scope: !3562)
!3569 = !DILocation(line: 242, column: 2, scope: !3562)
!3570 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !142, file: !142, line: 235, type: !3571, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3573)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{!3325, !2246, !120}
!3573 = !{!3574, !3575}
!3574 = !DILocalVariable(name: "h", arg: 1, scope: !3570, file: !142, line: 235, type: !2246)
!3575 = !DILocalVariable(name: "bytes", arg: 2, scope: !3570, file: !142, line: 235, type: !120)
!3576 = !DILocation(line: 0, scope: !3570)
!3577 = !DILocation(line: 237, column: 39, scope: !3570)
!3578 = !DILocation(line: 237, column: 9, scope: !3570)
!3579 = !DILocation(line: 237, column: 2, scope: !3570)
!3580 = distinct !DISubprogram(name: "chunksz", scope: !142, file: !142, line: 230, type: !3581, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3583)
!3581 = !DISubroutineType(types: !3582)
!3582 = !{!3325, !120}
!3583 = !{!3584}
!3584 = !DILocalVariable(name: "bytes", arg: 1, scope: !3580, file: !142, line: 230, type: !120)
!3585 = !DILocation(line: 0, scope: !3580)
!3586 = !DILocation(line: 232, column: 29, scope: !3580)
!3587 = !DILocation(line: 232, column: 35, scope: !3580)
!3588 = !DILocation(line: 232, column: 2, scope: !3580)
!3589 = distinct !DISubprogram(name: "set_chunk_size", scope: !142, file: !142, line: 172, type: !3590, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3592)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{null, !2246, !2251, !3325}
!3592 = !{!3593, !3594, !3595}
!3593 = !DILocalVariable(name: "h", arg: 1, scope: !3589, file: !142, line: 172, type: !2246)
!3594 = !DILocalVariable(name: "c", arg: 2, scope: !3589, file: !142, line: 172, type: !2251)
!3595 = !DILocalVariable(name: "size", arg: 3, scope: !3589, file: !142, line: 172, type: !3325)
!3596 = !DILocation(line: 0, scope: !3589)
!3597 = !DILocation(line: 174, column: 38, scope: !3589)
!3598 = !DILocation(line: 174, column: 2, scope: !3589)
!3599 = !DILocation(line: 175, column: 1, scope: !3589)
!3600 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !142, file: !142, line: 209, type: !3590, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3601)
!3601 = !{!3602, !3603, !3604}
!3602 = !DILocalVariable(name: "h", arg: 1, scope: !3600, file: !142, line: 209, type: !2246)
!3603 = !DILocalVariable(name: "c", arg: 2, scope: !3600, file: !142, line: 209, type: !2251)
!3604 = !DILocalVariable(name: "size", arg: 3, scope: !3600, file: !142, line: 210, type: !3325)
!3605 = !DILocation(line: 0, scope: !3600)
!3606 = !DILocation(line: 212, column: 2, scope: !3600)
!3607 = !DILocation(line: 213, column: 1, scope: !3600)
!3608 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3262, file: !3262, line: 34, type: !3458, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3609)
!3609 = !{!3610, !3611, !3612, !3613, !3614, !3617}
!3610 = !DILocalVariable(name: "h", arg: 1, scope: !3608, file: !3262, line: 34, type: !2246)
!3611 = !DILocalVariable(name: "c", arg: 2, scope: !3608, file: !3262, line: 34, type: !2251)
!3612 = !DILocalVariable(name: "bidx", arg: 3, scope: !3608, file: !3262, line: 34, type: !103)
!3613 = !DILocalVariable(name: "b", scope: !3608, file: !3262, line: 36, type: !3465)
!3614 = !DILocalVariable(name: "first", scope: !3615, file: !3262, line: 47, type: !2251)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !3262, line: 46, column: 9)
!3616 = distinct !DILexicalBlock(scope: !3608, file: !3262, line: 42, column: 6)
!3617 = !DILocalVariable(name: "second", scope: !3615, file: !3262, line: 48, type: !2251)
!3618 = !DILocation(line: 0, scope: !3608)
!3619 = !DILocation(line: 36, column: 29, scope: !3608)
!3620 = !DILocation(line: 42, column: 6, scope: !3616)
!3621 = !DILocation(line: 42, column: 28, scope: !3616)
!3622 = !DILocation(line: 42, column: 6, scope: !3608)
!3623 = !DILocation(line: 44, column: 24, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3616, file: !3262, line: 42, column: 34)
!3625 = !DILocation(line: 44, column: 23, scope: !3624)
!3626 = !DILocation(line: 44, column: 6, scope: !3624)
!3627 = !DILocation(line: 44, column: 20, scope: !3624)
!3628 = !DILocation(line: 45, column: 6, scope: !3624)
!3629 = !DILocation(line: 45, column: 11, scope: !3624)
!3630 = !DILocation(line: 46, column: 2, scope: !3624)
!3631 = !DILocation(line: 47, column: 21, scope: !3615)
!3632 = !DILocation(line: 0, scope: !3615)
!3633 = !DILocation(line: 50, column: 6, scope: !3615)
!3634 = !DILocation(line: 50, column: 11, scope: !3615)
!3635 = !DILocation(line: 51, column: 3, scope: !3615)
!3636 = !DILocation(line: 52, column: 3, scope: !3615)
!3637 = !DILocation(line: 56, column: 39, scope: !3608)
!3638 = !DILocation(line: 56, column: 19, scope: !3608)
!3639 = !DILocation(line: 56, column: 5, scope: !3608)
!3640 = !DILocation(line: 56, column: 16, scope: !3608)
!3641 = !DILocation(line: 58, column: 1, scope: !3608)
!3642 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !3373, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3643)
!3643 = !{!3644, !3645}
!3644 = !DILocalVariable(name: "h", arg: 1, scope: !3642, file: !142, line: 182, type: !2246)
!3645 = !DILocalVariable(name: "c", arg: 2, scope: !3642, file: !142, line: 182, type: !2251)
!3646 = !DILocation(line: 0, scope: !3642)
!3647 = !DILocation(line: 184, column: 9, scope: !3642)
!3648 = !DILocation(line: 184, column: 2, scope: !3642)
!3649 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3262, file: !3262, line: 200, type: !3650, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3652)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{!120, !3265, !102}
!3652 = !{!3653, !3654, !3655, !3656, !3657, !3658, !3659}
!3653 = !DILocalVariable(name: "heap", arg: 1, scope: !3649, file: !3262, line: 200, type: !3265)
!3654 = !DILocalVariable(name: "mem", arg: 2, scope: !3649, file: !3262, line: 200, type: !102)
!3655 = !DILocalVariable(name: "h", scope: !3649, file: !3262, line: 202, type: !2246)
!3656 = !DILocalVariable(name: "c", scope: !3649, file: !3262, line: 203, type: !2251)
!3657 = !DILocalVariable(name: "addr", scope: !3649, file: !3262, line: 204, type: !120)
!3658 = !DILocalVariable(name: "chunk_base", scope: !3649, file: !3262, line: 205, type: !120)
!3659 = !DILocalVariable(name: "chunk_sz", scope: !3649, file: !3262, line: 206, type: !120)
!3660 = !DILocation(line: 0, scope: !3649)
!3661 = !DILocation(line: 202, column: 27, scope: !3649)
!3662 = !DILocation(line: 203, column: 16, scope: !3649)
!3663 = !DILocation(line: 204, column: 16, scope: !3649)
!3664 = !DILocation(line: 205, column: 31, scope: !3649)
!3665 = !DILocation(line: 205, column: 22, scope: !3649)
!3666 = !DILocation(line: 206, column: 20, scope: !3649)
!3667 = !DILocation(line: 206, column: 37, scope: !3649)
!3668 = !DILocation(line: 208, column: 26, scope: !3649)
!3669 = !DILocation(line: 208, column: 18, scope: !3649)
!3670 = !DILocation(line: 208, column: 2, scope: !3649)
!3671 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3262, file: !3262, line: 263, type: !3672, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3674)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{!102, !3265, !120}
!3674 = !{!3675, !3676, !3677, !3678, !3679, !3680}
!3675 = !DILocalVariable(name: "heap", arg: 1, scope: !3671, file: !3262, line: 263, type: !3265)
!3676 = !DILocalVariable(name: "bytes", arg: 2, scope: !3671, file: !3262, line: 263, type: !120)
!3677 = !DILocalVariable(name: "h", scope: !3671, file: !3262, line: 265, type: !2246)
!3678 = !DILocalVariable(name: "mem", scope: !3671, file: !3262, line: 266, type: !102)
!3679 = !DILocalVariable(name: "chunk_sz", scope: !3671, file: !3262, line: 272, type: !3325)
!3680 = !DILocalVariable(name: "c", scope: !3671, file: !3262, line: 273, type: !2251)
!3681 = !DILocation(line: 0, scope: !3671)
!3682 = !DILocation(line: 265, column: 27, scope: !3671)
!3683 = !DILocation(line: 268, column: 12, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3671, file: !3262, line: 268, column: 6)
!3685 = !DILocation(line: 268, column: 18, scope: !3684)
!3686 = !DILocation(line: 268, column: 21, scope: !3684)
!3687 = !DILocation(line: 268, column: 6, scope: !3671)
!3688 = !DILocation(line: 272, column: 23, scope: !3671)
!3689 = !DILocation(line: 273, column: 16, scope: !3671)
!3690 = !DILocation(line: 274, column: 8, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3671, file: !3262, line: 274, column: 6)
!3692 = !DILocation(line: 274, column: 6, scope: !3671)
!3693 = !DILocation(line: 279, column: 6, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3671, file: !3262, line: 279, column: 6)
!3695 = !DILocation(line: 279, column: 23, scope: !3694)
!3696 = !DILocation(line: 279, column: 6, scope: !3671)
!3697 = !DILocation(line: 280, column: 24, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3694, file: !3262, line: 279, column: 35)
!3699 = !DILocation(line: 280, column: 3, scope: !3698)
!3700 = !DILocation(line: 281, column: 3, scope: !3698)
!3701 = !DILocation(line: 282, column: 2, scope: !3698)
!3702 = !DILocation(line: 284, column: 2, scope: !3671)
!3703 = !DILocation(line: 286, column: 8, scope: !3671)
!3704 = !DILocation(line: 289, column: 50, scope: !3671)
!3705 = !DILocation(line: 289, column: 30, scope: !3671)
!3706 = !{i32 -4, i32 262133}
!3707 = !DILocation(line: 289, column: 2, scope: !3671)
!3708 = !DILocation(line: 298, column: 2, scope: !3671)
!3709 = !DILocation(line: 299, column: 1, scope: !3671)
!3710 = distinct !DISubprogram(name: "size_too_big", scope: !142, file: !142, line: 256, type: !3711, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3713)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{!224, !2246, !120}
!3713 = !{!3714, !3715}
!3714 = !DILocalVariable(name: "h", arg: 1, scope: !3710, file: !142, line: 256, type: !2246)
!3715 = !DILocalVariable(name: "bytes", arg: 2, scope: !3710, file: !142, line: 256, type: !120)
!3716 = !DILocation(line: 0, scope: !3710)
!3717 = !DILocation(line: 262, column: 16, scope: !3710)
!3718 = !DILocation(line: 262, column: 36, scope: !3710)
!3719 = !DILocation(line: 262, column: 30, scope: !3710)
!3720 = !DILocation(line: 262, column: 2, scope: !3710)
!3721 = distinct !DISubprogram(name: "alloc_chunk", scope: !3262, file: !3262, line: 211, type: !3722, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3724)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!2251, !2246, !3325}
!3724 = !{!3725, !3726, !3727, !3728, !3729, !3732, !3733, !3735, !3736, !3739}
!3725 = !DILocalVariable(name: "h", arg: 1, scope: !3721, file: !3262, line: 211, type: !2246)
!3726 = !DILocalVariable(name: "sz", arg: 2, scope: !3721, file: !3262, line: 211, type: !3325)
!3727 = !DILocalVariable(name: "bi", scope: !3721, file: !3262, line: 213, type: !103)
!3728 = !DILocalVariable(name: "b", scope: !3721, file: !3262, line: 214, type: !3465)
!3729 = !DILocalVariable(name: "first", scope: !3730, file: !3262, line: 233, type: !2251)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !3262, line: 232, column: 15)
!3731 = distinct !DILexicalBlock(scope: !3721, file: !3262, line: 232, column: 6)
!3732 = !DILocalVariable(name: "i", scope: !3730, file: !3262, line: 234, type: !103)
!3733 = !DILocalVariable(name: "c", scope: !3734, file: !3262, line: 236, type: !2251)
!3734 = distinct !DILexicalBlock(scope: !3730, file: !3262, line: 235, column: 6)
!3735 = !DILocalVariable(name: "bmask", scope: !3721, file: !3262, line: 249, type: !137)
!3736 = !DILocalVariable(name: "minbucket", scope: !3737, file: !3262, line: 252, type: !103)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !3262, line: 251, column: 19)
!3738 = distinct !DILexicalBlock(scope: !3721, file: !3262, line: 251, column: 6)
!3739 = !DILocalVariable(name: "c", scope: !3737, file: !3262, line: 253, type: !2251)
!3740 = !DILocation(line: 0, scope: !3721)
!3741 = !DILocation(line: 213, column: 11, scope: !3721)
!3742 = !DILocation(line: 232, column: 9, scope: !3731)
!3743 = !DILocation(line: 232, column: 6, scope: !3731)
!3744 = !DILocation(line: 232, column: 6, scope: !3721)
!3745 = !DILocation(line: 236, column: 21, scope: !3734)
!3746 = !DILocation(line: 0, scope: !3730)
!3747 = !DILocation(line: 0, scope: !3734)
!3748 = !DILocation(line: 237, column: 8, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3734, file: !3262, line: 237, column: 8)
!3750 = !DILocation(line: 237, column: 25, scope: !3749)
!3751 = !DILocation(line: 237, column: 8, scope: !3734)
!3752 = !DILocation(line: 238, column: 5, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3749, file: !3262, line: 237, column: 32)
!3754 = !DILocation(line: 241, column: 14, scope: !3734)
!3755 = !DILocation(line: 241, column: 12, scope: !3734)
!3756 = !DILocation(line: 243, column: 12, scope: !3730)
!3757 = !DILocation(line: 243, column: 16, scope: !3730)
!3758 = distinct !{!3758, !3759, !3760}
!3759 = !DILocation(line: 235, column: 3, scope: !3730)
!3760 = !DILocation(line: 243, column: 35, scope: !3730)
!3761 = !DILocation(line: 249, column: 22, scope: !3721)
!3762 = !DILocation(line: 249, column: 39, scope: !3721)
!3763 = !DILocation(line: 249, column: 36, scope: !3721)
!3764 = !DILocation(line: 251, column: 12, scope: !3738)
!3765 = !DILocation(line: 251, column: 6, scope: !3721)
!3766 = !DILocation(line: 252, column: 19, scope: !3737)
!3767 = !DILocation(line: 0, scope: !3737)
!3768 = !DILocation(line: 253, column: 39, scope: !3737)
!3769 = !DILocation(line: 255, column: 3, scope: !3737)
!3770 = !DILocation(line: 261, column: 1, scope: !3721)
!3771 = distinct !DISubprogram(name: "split_chunks", scope: !3262, file: !3262, line: 109, type: !3406, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3772)
!3772 = !{!3773, !3774, !3775, !3776, !3777, !3778}
!3773 = !DILocalVariable(name: "h", arg: 1, scope: !3771, file: !3262, line: 109, type: !2246)
!3774 = !DILocalVariable(name: "lc", arg: 2, scope: !3771, file: !3262, line: 109, type: !2251)
!3775 = !DILocalVariable(name: "rc", arg: 3, scope: !3771, file: !3262, line: 109, type: !2251)
!3776 = !DILocalVariable(name: "sz0", scope: !3771, file: !3262, line: 114, type: !3325)
!3777 = !DILocalVariable(name: "lsz", scope: !3771, file: !3262, line: 115, type: !3325)
!3778 = !DILocalVariable(name: "rsz", scope: !3771, file: !3262, line: 116, type: !3325)
!3779 = !DILocation(line: 0, scope: !3771)
!3780 = !DILocation(line: 114, column: 18, scope: !3771)
!3781 = !DILocation(line: 115, column: 21, scope: !3771)
!3782 = !DILocation(line: 116, column: 22, scope: !3771)
!3783 = !DILocation(line: 118, column: 2, scope: !3771)
!3784 = !DILocation(line: 119, column: 2, scope: !3771)
!3785 = !DILocation(line: 120, column: 2, scope: !3771)
!3786 = !DILocation(line: 121, column: 25, scope: !3771)
!3787 = !DILocation(line: 121, column: 2, scope: !3771)
!3788 = !DILocation(line: 122, column: 1, scope: !3771)
!3789 = distinct !DISubprogram(name: "chunk_mem", scope: !3262, file: !3262, line: 24, type: !3790, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3792)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!102, !2246, !2251}
!3792 = !{!3793, !3794, !3795, !3796}
!3793 = !DILocalVariable(name: "h", arg: 1, scope: !3789, file: !3262, line: 24, type: !2246)
!3794 = !DILocalVariable(name: "c", arg: 2, scope: !3789, file: !3262, line: 24, type: !2251)
!3795 = !DILocalVariable(name: "buf", scope: !3789, file: !3262, line: 26, type: !2241)
!3796 = !DILocalVariable(name: "ret", scope: !3789, file: !3262, line: 27, type: !1737)
!3797 = !DILocation(line: 0, scope: !3789)
!3798 = !DILocation(line: 26, column: 22, scope: !3789)
!3799 = !DILocation(line: 27, column: 38, scope: !3789)
!3800 = !DILocation(line: 31, column: 2, scope: !3789)
!3801 = distinct !DISubprogram(name: "increase_allocated_bytes", scope: !3262, file: !3262, line: 17, type: !3802, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3804)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{null, !2246, !120}
!3804 = !{!3805, !3806}
!3805 = !DILocalVariable(name: "h", arg: 1, scope: !3801, file: !3262, line: 17, type: !2246)
!3806 = !DILocalVariable(name: "num_bytes", arg: 2, scope: !3801, file: !3262, line: 17, type: !120)
!3807 = !DILocation(line: 0, scope: !3801)
!3808 = !DILocation(line: 19, column: 5, scope: !3801)
!3809 = !DILocation(line: 19, column: 21, scope: !3801)
!3810 = !DILocation(line: 20, column: 27, scope: !3801)
!3811 = !DILocation(line: 20, column: 25, scope: !3801)
!3812 = !DILocation(line: 21, column: 1, scope: !3801)
!3813 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3262, file: !3262, line: 301, type: !3814, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3816)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{!102, !3265, !120, !120}
!3816 = !{!3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828}
!3817 = !DILocalVariable(name: "heap", arg: 1, scope: !3813, file: !3262, line: 301, type: !3265)
!3818 = !DILocalVariable(name: "align", arg: 2, scope: !3813, file: !3262, line: 301, type: !120)
!3819 = !DILocalVariable(name: "bytes", arg: 3, scope: !3813, file: !3262, line: 301, type: !120)
!3820 = !DILocalVariable(name: "h", scope: !3813, file: !3262, line: 303, type: !2246)
!3821 = !DILocalVariable(name: "gap", scope: !3813, file: !3262, line: 304, type: !120)
!3822 = !DILocalVariable(name: "rew", scope: !3813, file: !3262, line: 304, type: !120)
!3823 = !DILocalVariable(name: "padded_sz", scope: !3813, file: !3262, line: 335, type: !3325)
!3824 = !DILocalVariable(name: "c0", scope: !3813, file: !3262, line: 336, type: !2251)
!3825 = !DILocalVariable(name: "mem", scope: !3813, file: !3262, line: 341, type: !1737)
!3826 = !DILocalVariable(name: "end", scope: !3813, file: !3262, line: 345, type: !2241)
!3827 = !DILocalVariable(name: "c", scope: !3813, file: !3262, line: 348, type: !2251)
!3828 = !DILocalVariable(name: "c_end", scope: !3813, file: !3262, line: 349, type: !2251)
!3829 = !DILocation(line: 0, scope: !3813)
!3830 = !DILocation(line: 303, column: 27, scope: !3813)
!3831 = !DILocation(line: 313, column: 16, scope: !3813)
!3832 = !DILocation(line: 313, column: 14, scope: !3813)
!3833 = !DILocation(line: 314, column: 12, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3813, file: !3262, line: 314, column: 6)
!3835 = !DILocation(line: 314, column: 6, scope: !3813)
!3836 = !DILocation(line: 315, column: 9, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3834, file: !3262, line: 314, column: 20)
!3838 = !DILocation(line: 316, column: 9, scope: !3837)
!3839 = !DILocation(line: 318, column: 13, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3841, file: !3262, line: 318, column: 7)
!3841 = distinct !DILexicalBlock(scope: !3834, file: !3262, line: 317, column: 9)
!3842 = !DILocation(line: 318, column: 7, scope: !3841)
!3843 = !DILocation(line: 319, column: 11, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3840, file: !3262, line: 318, column: 39)
!3845 = !DILocation(line: 319, column: 4, scope: !3844)
!3846 = !DILocation(line: 0, scope: !3834)
!3847 = !DILocation(line: 326, column: 12, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3813, file: !3262, line: 326, column: 6)
!3849 = !DILocation(line: 326, column: 17, scope: !3848)
!3850 = !DILocation(line: 326, column: 20, scope: !3848)
!3851 = !DILocation(line: 326, column: 6, scope: !3813)
!3852 = !DILocation(line: 335, column: 50, scope: !3813)
!3853 = !DILocation(line: 335, column: 58, scope: !3813)
!3854 = !DILocation(line: 335, column: 24, scope: !3813)
!3855 = !DILocation(line: 336, column: 17, scope: !3813)
!3856 = !DILocation(line: 338, column: 9, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3813, file: !3262, line: 338, column: 6)
!3858 = !DILocation(line: 338, column: 6, scope: !3813)
!3859 = !DILocation(line: 341, column: 17, scope: !3813)
!3860 = !DILocation(line: 344, column: 20, scope: !3813)
!3861 = !DILocation(line: 344, column: 8, scope: !3813)
!3862 = !DILocation(line: 344, column: 47, scope: !3813)
!3863 = !DILocation(line: 345, column: 39, scope: !3813)
!3864 = !DILocation(line: 348, column: 16, scope: !3813)
!3865 = !DILocation(line: 349, column: 26, scope: !3813)
!3866 = !DILocation(line: 349, column: 24, scope: !3813)
!3867 = !DILocation(line: 353, column: 8, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3813, file: !3262, line: 353, column: 6)
!3869 = !DILocation(line: 353, column: 6, scope: !3813)
!3870 = !DILocation(line: 354, column: 3, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3868, file: !3262, line: 353, column: 14)
!3872 = !DILocation(line: 355, column: 3, scope: !3871)
!3873 = !DILocation(line: 356, column: 2, scope: !3871)
!3874 = !DILocation(line: 359, column: 6, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3813, file: !3262, line: 359, column: 6)
!3876 = !DILocation(line: 359, column: 24, scope: !3875)
!3877 = !DILocation(line: 359, column: 6, scope: !3813)
!3878 = !DILocation(line: 360, column: 3, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3875, file: !3262, line: 359, column: 33)
!3880 = !DILocation(line: 361, column: 3, scope: !3879)
!3881 = !DILocation(line: 362, column: 2, scope: !3879)
!3882 = !DILocation(line: 364, column: 2, scope: !3813)
!3883 = !DILocation(line: 367, column: 50, scope: !3813)
!3884 = !DILocation(line: 367, column: 30, scope: !3813)
!3885 = !DILocation(line: 367, column: 2, scope: !3813)
!3886 = !DILocation(line: 377, column: 1, scope: !3813)
!3887 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3262, file: !3262, line: 379, type: !3888, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3890)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{!102, !3265, !102, !120, !120}
!3890 = !{!3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3906, !3907}
!3891 = !DILocalVariable(name: "heap", arg: 1, scope: !3887, file: !3262, line: 379, type: !3265)
!3892 = !DILocalVariable(name: "ptr", arg: 2, scope: !3887, file: !3262, line: 379, type: !102)
!3893 = !DILocalVariable(name: "align", arg: 3, scope: !3887, file: !3262, line: 380, type: !120)
!3894 = !DILocalVariable(name: "bytes", arg: 4, scope: !3887, file: !3262, line: 380, type: !120)
!3895 = !DILocalVariable(name: "h", scope: !3887, file: !3262, line: 382, type: !2246)
!3896 = !DILocalVariable(name: "c", scope: !3887, file: !3262, line: 399, type: !2251)
!3897 = !DILocalVariable(name: "rc", scope: !3887, file: !3262, line: 400, type: !2251)
!3898 = !DILocalVariable(name: "align_gap", scope: !3887, file: !3262, line: 401, type: !120)
!3899 = !DILocalVariable(name: "chunks_need", scope: !3887, file: !3262, line: 402, type: !3325)
!3900 = !DILocalVariable(name: "split_size", scope: !3901, file: !3262, line: 435, type: !3325)
!3901 = distinct !DILexicalBlock(scope: !3902, file: !3262, line: 433, column: 61)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !3262, line: 432, column: 13)
!3903 = distinct !DILexicalBlock(scope: !3904, file: !3262, line: 409, column: 13)
!3904 = distinct !DILexicalBlock(scope: !3905, file: !3262, line: 406, column: 13)
!3905 = distinct !DILexicalBlock(scope: !3887, file: !3262, line: 404, column: 6)
!3906 = !DILocalVariable(name: "ptr2", scope: !3887, file: !3262, line: 474, type: !102)
!3907 = !DILocalVariable(name: "prev_size", scope: !3908, file: !3262, line: 477, type: !120)
!3908 = distinct !DILexicalBlock(scope: !3909, file: !3262, line: 476, column: 20)
!3909 = distinct !DILexicalBlock(scope: !3887, file: !3262, line: 476, column: 6)
!3910 = !DILocation(line: 0, scope: !3887)
!3911 = !DILocation(line: 382, column: 27, scope: !3887)
!3912 = !DILocation(line: 385, column: 10, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3887, file: !3262, line: 385, column: 6)
!3914 = !DILocation(line: 385, column: 6, scope: !3887)
!3915 = !DILocation(line: 386, column: 10, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3913, file: !3262, line: 385, column: 19)
!3917 = !DILocation(line: 386, column: 3, scope: !3916)
!3918 = !DILocation(line: 388, column: 12, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3887, file: !3262, line: 388, column: 6)
!3920 = !DILocation(line: 388, column: 6, scope: !3887)
!3921 = !DILocation(line: 389, column: 3, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3919, file: !3262, line: 388, column: 18)
!3923 = !DILocation(line: 390, column: 3, scope: !3922)
!3924 = !DILocation(line: 395, column: 6, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3887, file: !3262, line: 395, column: 6)
!3926 = !DILocation(line: 395, column: 6, scope: !3887)
!3927 = !DILocation(line: 399, column: 16, scope: !3887)
!3928 = !DILocation(line: 400, column: 17, scope: !3887)
!3929 = !DILocation(line: 401, column: 49, scope: !3887)
!3930 = !DILocation(line: 401, column: 36, scope: !3887)
!3931 = !DILocation(line: 402, column: 52, scope: !3887)
!3932 = !DILocation(line: 402, column: 26, scope: !3887)
!3933 = !DILocation(line: 404, column: 6, scope: !3905)
!3934 = !DILocation(line: 404, column: 12, scope: !3905)
!3935 = !DILocation(line: 404, column: 40, scope: !3905)
!3936 = !DILocation(line: 404, column: 31, scope: !3905)
!3937 = !DILocation(line: 404, column: 6, scope: !3887)
!3938 = !DILocation(line: 406, column: 13, scope: !3904)
!3939 = !DILocation(line: 406, column: 30, scope: !3904)
!3940 = !DILocation(line: 406, column: 13, scope: !3905)
!3941 = !DILocation(line: 409, column: 30, scope: !3903)
!3942 = !DILocation(line: 409, column: 13, scope: !3904)
!3943 = !DILocation(line: 417, column: 22, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3903, file: !3262, line: 409, column: 45)
!3945 = !DILocation(line: 417, column: 37, scope: !3944)
!3946 = !DILocation(line: 416, column: 6, scope: !3944)
!3947 = !DILocation(line: 416, column: 22, scope: !3944)
!3948 = !DILocation(line: 420, column: 24, scope: !3944)
!3949 = !DILocation(line: 420, column: 3, scope: !3944)
!3950 = !DILocation(line: 421, column: 3, scope: !3944)
!3951 = !DILocation(line: 422, column: 3, scope: !3944)
!3952 = !DILocation(line: 431, column: 3, scope: !3944)
!3953 = !DILocation(line: 432, column: 14, scope: !3902)
!3954 = !DILocation(line: 432, column: 32, scope: !3902)
!3955 = !DILocation(line: 433, column: 26, scope: !3902)
!3956 = !DILocation(line: 433, column: 24, scope: !3902)
!3957 = !DILocation(line: 433, column: 44, scope: !3902)
!3958 = !DILocation(line: 432, column: 13, scope: !3903)
!3959 = !DILocation(line: 435, column: 38, scope: !3901)
!3960 = !DILocation(line: 0, scope: !3901)
!3961 = !DILocation(line: 442, column: 42, scope: !3901)
!3962 = !DILocation(line: 442, column: 3, scope: !3901)
!3963 = !DILocation(line: 445, column: 3, scope: !3901)
!3964 = !DILocation(line: 447, column: 20, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3901, file: !3262, line: 447, column: 7)
!3966 = !DILocation(line: 447, column: 18, scope: !3965)
!3967 = !DILocation(line: 447, column: 7, scope: !3901)
!3968 = !DILocation(line: 448, column: 27, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3965, file: !3262, line: 447, column: 39)
!3970 = !DILocation(line: 448, column: 4, scope: !3969)
!3971 = !DILocation(line: 449, column: 4, scope: !3969)
!3972 = !DILocation(line: 450, column: 3, scope: !3969)
!3973 = !DILocation(line: 452, column: 3, scope: !3901)
!3974 = !DILocation(line: 453, column: 3, scope: !3901)
!3975 = !DILocation(line: 474, column: 15, scope: !3887)
!3976 = !DILocation(line: 476, column: 11, scope: !3909)
!3977 = !DILocation(line: 476, column: 6, scope: !3887)
!3978 = !DILocation(line: 477, column: 42, scope: !3908)
!3979 = !DILocation(line: 477, column: 22, scope: !3908)
!3980 = !DILocation(line: 477, column: 60, scope: !3908)
!3981 = !DILocation(line: 0, scope: !3908)
!3982 = !DILocation(line: 479, column: 21, scope: !3908)
!3983 = !DILocation(line: 479, column: 3, scope: !3908)
!3984 = !DILocation(line: 480, column: 3, scope: !3908)
!3985 = !DILocation(line: 481, column: 2, scope: !3908)
!3986 = !DILocation(line: 483, column: 1, scope: !3887)
!3987 = distinct !DISubprogram(name: "sys_heap_init", scope: !3262, file: !3262, line: 485, type: !3988, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2238, retainedNodes: !3990)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{null, !3265, !102, !120}
!3990 = !{!3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000}
!3991 = !DILocalVariable(name: "heap", arg: 1, scope: !3987, file: !3262, line: 485, type: !3265)
!3992 = !DILocalVariable(name: "mem", arg: 2, scope: !3987, file: !3262, line: 485, type: !102)
!3993 = !DILocalVariable(name: "bytes", arg: 3, scope: !3987, file: !3262, line: 485, type: !120)
!3994 = !DILocalVariable(name: "addr", scope: !3987, file: !3262, line: 502, type: !22)
!3995 = !DILocalVariable(name: "end", scope: !3987, file: !3262, line: 503, type: !22)
!3996 = !DILocalVariable(name: "heap_sz", scope: !3987, file: !3262, line: 504, type: !3325)
!3997 = !DILocalVariable(name: "h", scope: !3987, file: !3262, line: 509, type: !2246)
!3998 = !DILocalVariable(name: "nb_buckets", scope: !3987, file: !3262, line: 520, type: !103)
!3999 = !DILocalVariable(name: "chunk0_size", scope: !3987, file: !3262, line: 521, type: !3325)
!4000 = !DILocalVariable(name: "i", scope: !4001, file: !3262, line: 526, type: !103)
!4001 = distinct !DILexicalBlock(scope: !3987, file: !3262, line: 526, column: 2)
!4002 = !DILocation(line: 0, scope: !3987)
!4003 = !DILocation(line: 499, column: 8, scope: !3987)
!4004 = !DILocation(line: 502, column: 19, scope: !3987)
!4005 = !DILocation(line: 503, column: 18, scope: !3987)
!4006 = !DILocation(line: 504, column: 27, scope: !3987)
!4007 = !DILocation(line: 504, column: 35, scope: !3987)
!4008 = !DILocation(line: 509, column: 21, scope: !3987)
!4009 = !DILocation(line: 510, column: 8, scope: !3987)
!4010 = !DILocation(line: 510, column: 13, scope: !3987)
!4011 = !DILocation(line: 511, column: 5, scope: !3987)
!4012 = !DILocation(line: 511, column: 15, scope: !3987)
!4013 = !DILocation(line: 512, column: 5, scope: !3987)
!4014 = !DILocation(line: 512, column: 19, scope: !3987)
!4015 = !DILocation(line: 515, column: 5, scope: !3987)
!4016 = !DILocation(line: 515, column: 16, scope: !3987)
!4017 = !DILocation(line: 516, column: 5, scope: !3987)
!4018 = !DILocation(line: 516, column: 21, scope: !3987)
!4019 = !DILocation(line: 517, column: 5, scope: !3987)
!4020 = !DILocation(line: 517, column: 25, scope: !3987)
!4021 = !DILocation(line: 520, column: 19, scope: !3987)
!4022 = !DILocation(line: 522, column: 21, scope: !3987)
!4023 = !DILocation(line: 521, column: 56, scope: !3987)
!4024 = !DILocation(line: 521, column: 26, scope: !3987)
!4025 = !DILocation(line: 0, scope: !4001)
!4026 = !DILocation(line: 526, column: 20, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4001, file: !3262, line: 526, column: 2)
!4028 = !DILocation(line: 526, column: 2, scope: !4001)
!4029 = !DILocation(line: 531, column: 2, scope: !3987)
!4030 = !DILocation(line: 532, column: 2, scope: !3987)
!4031 = !DILocation(line: 533, column: 2, scope: !3987)
!4032 = !DILocation(line: 536, column: 41, scope: !3987)
!4033 = !DILocation(line: 536, column: 2, scope: !3987)
!4034 = !DILocation(line: 537, column: 2, scope: !3987)
!4035 = !DILocation(line: 540, column: 2, scope: !3987)
!4036 = !DILocation(line: 541, column: 2, scope: !3987)
!4037 = !DILocation(line: 542, column: 2, scope: !3987)
!4038 = !DILocation(line: 544, column: 2, scope: !3987)
!4039 = !DILocation(line: 545, column: 1, scope: !3987)
!4040 = !DILocation(line: 527, column: 17, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4027, file: !3262, line: 526, column: 39)
!4042 = !DILocation(line: 527, column: 22, scope: !4041)
!4043 = !DILocation(line: 526, column: 35, scope: !4027)
!4044 = distinct !{!4044, !4028, !4045}
!4045 = !DILocation(line: 528, column: 2, scope: !4001)
!4046 = distinct !DISubprogram(name: "sys_heap_validate", scope: !134, file: !134, line: 88, type: !4047, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4069)
!4047 = !DISubroutineType(types: !4048)
!4048 = !{!224, !4049}
!4049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 32)
!4050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !4051)
!4051 = !{!4052, !4067, !4068}
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4050, file: !113, line: 57, baseType: !4053, size: 32)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 32)
!4054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !4055)
!4055 = !{!4056, !4057, !4058, !4059, !4060, !4061, !4062}
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !4054, file: !142, line: 69, baseType: !2250, size: 64)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !4054, file: !142, line: 70, baseType: !2251, size: 32, offset: 64)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !4054, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4054, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4054, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4054, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !4054, file: !142, line: 77, baseType: !4063, offset: 224)
!4063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4064, elements: !2262)
!4064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !4065)
!4065 = !{!4066}
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4064, file: !142, line: 65, baseType: !2251, size: 32)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4050, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4050, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!4069 = !{!4070, !4071, !4072, !4073, !4074, !4075, !4081, !4083, !4086, !4087, !4088, !4089, !4090, !4092, !4095}
!4070 = !DILocalVariable(name: "heap", arg: 1, scope: !4046, file: !134, line: 88, type: !4049)
!4071 = !DILocalVariable(name: "h", scope: !4046, file: !134, line: 90, type: !4053)
!4072 = !DILocalVariable(name: "c", scope: !4046, file: !134, line: 91, type: !2251)
!4073 = !DILocalVariable(name: "allocated_bytes", scope: !4046, file: !134, line: 112, type: !120)
!4074 = !DILocalVariable(name: "free_bytes", scope: !4046, file: !134, line: 112, type: !120)
!4075 = !DILocalVariable(name: "stat", scope: !4046, file: !134, line: 113, type: !4076)
!4076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2923, line: 24, size: 96, elements: !4077)
!4077 = !{!4078, !4079, !4080}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4076, file: !2923, line: 25, baseType: !120, size: 32)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4076, file: !2923, line: 26, baseType: !120, size: 32, offset: 32)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4076, file: !2923, line: 27, baseType: !120, size: 32, offset: 64)
!4081 = !DILocalVariable(name: "b", scope: !4082, file: !134, line: 127, type: !103)
!4082 = distinct !DILexicalBlock(scope: !4046, file: !134, line: 127, column: 2)
!4083 = !DILocalVariable(name: "c0", scope: !4084, file: !134, line: 128, type: !2251)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !134, line: 127, column: 57)
!4085 = distinct !DILexicalBlock(scope: !4082, file: !134, line: 127, column: 2)
!4086 = !DILocalVariable(name: "n", scope: !4084, file: !134, line: 129, type: !137)
!4087 = !DILocalVariable(name: "empty", scope: !4084, file: !134, line: 141, type: !224)
!4088 = !DILocalVariable(name: "zero", scope: !4084, file: !134, line: 142, type: !224)
!4089 = !DILocalVariable(name: "prev_chunk", scope: !4046, file: !134, line: 159, type: !2251)
!4090 = !DILocalVariable(name: "b", scope: !4091, file: !134, line: 179, type: !103)
!4091 = distinct !DILexicalBlock(scope: !4046, file: !134, line: 179, column: 2)
!4092 = !DILocalVariable(name: "c0", scope: !4093, file: !134, line: 180, type: !2251)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !134, line: 179, column: 57)
!4094 = distinct !DILexicalBlock(scope: !4091, file: !134, line: 179, column: 2)
!4095 = !DILocalVariable(name: "n", scope: !4093, file: !134, line: 181, type: !103)
!4096 = !DILocation(line: 0, scope: !4046)
!4097 = !DILocation(line: 90, column: 27, scope: !4046)
!4098 = !DILocation(line: 96, column: 11, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4046, file: !134, line: 96, column: 2)
!4100 = !DILocation(line: 96, column: 32, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4099, file: !134, line: 96, column: 2)
!4102 = !DILocation(line: 96, column: 2, scope: !4099)
!4103 = !DILocation(line: 97, column: 8, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !134, line: 97, column: 7)
!4105 = distinct !DILexicalBlock(scope: !4101, file: !134, line: 96, column: 71)
!4106 = !DILocation(line: 97, column: 7, scope: !4105)
!4107 = !DILocation(line: 96, column: 52, scope: !4101)
!4108 = distinct !{!4108, !4102, !4109}
!4109 = !DILocation(line: 100, column: 2, scope: !4099)
!4110 = !DILocation(line: 0, scope: !4099)
!4111 = !DILocation(line: 101, column: 8, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4046, file: !134, line: 101, column: 6)
!4113 = !DILocation(line: 101, column: 6, scope: !4046)
!4114 = !DILocation(line: 112, column: 2, scope: !4046)
!4115 = !DILocation(line: 113, column: 2, scope: !4046)
!4116 = !DILocation(line: 113, column: 26, scope: !4046)
!4117 = !DILocation(line: 115, column: 2, scope: !4046)
!4118 = !DILocation(line: 116, column: 2, scope: !4046)
!4119 = !DILocation(line: 117, column: 12, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4046, file: !134, line: 117, column: 6)
!4121 = !DILocation(line: 117, column: 31, scope: !4120)
!4122 = !DILocation(line: 117, column: 28, scope: !4120)
!4123 = !DILocation(line: 117, column: 48, scope: !4120)
!4124 = !DILocation(line: 118, column: 12, scope: !4120)
!4125 = !DILocation(line: 118, column: 26, scope: !4120)
!4126 = !DILocation(line: 118, column: 23, scope: !4120)
!4127 = !DILocation(line: 117, column: 6, scope: !4046)
!4128 = !DILocation(line: 0, scope: !4082)
!4129 = !DILocation(line: 127, column: 40, scope: !4085)
!4130 = !DILocation(line: 127, column: 23, scope: !4085)
!4131 = !DILocation(line: 127, column: 20, scope: !4085)
!4132 = !DILocation(line: 127, column: 2, scope: !4082)
!4133 = !DILocation(line: 128, column: 32, scope: !4084)
!4134 = !DILocation(line: 0, scope: !4084)
!4135 = !DILocation(line: 133, column: 18, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4137, file: !134, line: 133, column: 3)
!4137 = distinct !DILexicalBlock(scope: !4084, file: !134, line: 133, column: 3)
!4138 = !DILocation(line: 133, column: 23, scope: !4136)
!4139 = !DILocation(line: 141, column: 20, scope: !4084)
!4140 = !DILocation(line: 141, column: 36, scope: !4084)
!4141 = !DILocation(line: 141, column: 34, scope: !4084)
!4142 = !DILocation(line: 141, column: 44, scope: !4084)
!4143 = !DILocation(line: 144, column: 7, scope: !4084)
!4144 = !DILocation(line: 133, column: 29, scope: !4136)
!4145 = !DILocation(line: 133, column: 34, scope: !4136)
!4146 = !DILocation(line: 133, column: 3, scope: !4137)
!4147 = !DILocation(line: 135, column: 9, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !134, line: 135, column: 8)
!4149 = distinct !DILexicalBlock(scope: !4136, file: !134, line: 134, column: 40)
!4150 = !DILocation(line: 135, column: 8, scope: !4149)
!4151 = !DILocation(line: 138, column: 4, scope: !4149)
!4152 = !DILocation(line: 134, column: 9, scope: !4136)
!4153 = !DILocation(line: 134, column: 17, scope: !4136)
!4154 = distinct !{!4154, !4146, !4155}
!4155 = !DILocation(line: 139, column: 3, scope: !4137)
!4156 = !DILocation(line: 142, column: 17, scope: !4084)
!4157 = !DILocation(line: 144, column: 13, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4084, file: !134, line: 144, column: 7)
!4159 = !DILocation(line: 148, column: 13, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4084, file: !134, line: 148, column: 7)
!4161 = !DILocation(line: 148, column: 30, scope: !4160)
!4162 = !DILocation(line: 148, column: 35, scope: !4160)
!4163 = !DILocation(line: 148, column: 7, scope: !4084)
!4164 = !DILocation(line: 127, column: 53, scope: !4085)
!4165 = distinct !{!4165, !4132, !4166}
!4166 = !DILocation(line: 151, column: 2, scope: !4082)
!4167 = !DILocation(line: 160, column: 37, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !134, line: 160, column: 2)
!4169 = distinct !DILexicalBlock(scope: !4046, file: !134, line: 160, column: 2)
!4170 = !DILocation(line: 160, column: 11, scope: !4169)
!4171 = !DILocation(line: 160, column: 32, scope: !4168)
!4172 = !DILocation(line: 160, column: 2, scope: !4169)
!4173 = !DILocation(line: 161, column: 8, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4175, file: !134, line: 161, column: 7)
!4175 = distinct !DILexicalBlock(scope: !4168, file: !134, line: 160, column: 71)
!4176 = !DILocation(line: 161, column: 25, scope: !4174)
!4177 = !DILocation(line: 164, column: 7, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4175, file: !134, line: 164, column: 7)
!4179 = !DILocation(line: 164, column: 24, scope: !4178)
!4180 = !DILocation(line: 164, column: 7, scope: !4175)
!4181 = !DILocation(line: 169, column: 3, scope: !4175)
!4182 = !DILocation(line: 160, column: 52, scope: !4168)
!4183 = distinct !{!4183, !4172, !4184}
!4184 = !DILocation(line: 170, column: 2, scope: !4169)
!4185 = !DILocation(line: 0, scope: !4169)
!4186 = !DILocation(line: 171, column: 8, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4046, file: !134, line: 171, column: 6)
!4188 = !DILocation(line: 171, column: 6, scope: !4046)
!4189 = !DILocation(line: 0, scope: !4091)
!4190 = !DILocation(line: 179, column: 23, scope: !4094)
!4191 = !DILocation(line: 179, column: 20, scope: !4094)
!4192 = !DILocation(line: 179, column: 2, scope: !4091)
!4193 = !DILocation(line: 180, column: 32, scope: !4093)
!4194 = !DILocation(line: 0, scope: !4093)
!4195 = !DILocation(line: 183, column: 10, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4093, file: !134, line: 183, column: 7)
!4197 = !DILocation(line: 183, column: 7, scope: !4093)
!4198 = !DILocation(line: 188, column: 8, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4200, file: !134, line: 188, column: 8)
!4200 = distinct !DILexicalBlock(scope: !4201, file: !134, line: 187, column: 67)
!4201 = distinct !DILexicalBlock(scope: !4202, file: !134, line: 187, column: 3)
!4202 = distinct !DILexicalBlock(scope: !4093, file: !134, line: 187, column: 3)
!4203 = !DILocation(line: 188, column: 8, scope: !4200)
!4204 = !DILocation(line: 191, column: 4, scope: !4200)
!4205 = !DILocation(line: 187, column: 44, scope: !4201)
!4206 = !DILocation(line: 187, column: 23, scope: !4201)
!4207 = !DILocation(line: 187, column: 3, scope: !4202)
!4208 = distinct !{!4208, !4207, !4209}
!4209 = !DILocation(line: 192, column: 3, scope: !4202)
!4210 = !DILocation(line: 179, column: 40, scope: !4094)
!4211 = !DILocation(line: 179, column: 53, scope: !4094)
!4212 = distinct !{!4212, !4192, !4213}
!4213 = !DILocation(line: 193, column: 2, scope: !4091)
!4214 = !DILocation(line: 198, column: 37, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4216, file: !134, line: 198, column: 2)
!4216 = distinct !DILexicalBlock(scope: !4046, file: !134, line: 198, column: 2)
!4217 = !DILocation(line: 198, column: 11, scope: !4216)
!4218 = !DILocation(line: 198, column: 32, scope: !4215)
!4219 = !DILocation(line: 198, column: 2, scope: !4216)
!4220 = !DILocation(line: 199, column: 25, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4215, file: !134, line: 198, column: 71)
!4222 = !DILocation(line: 199, column: 24, scope: !4221)
!4223 = !DILocation(line: 199, column: 3, scope: !4221)
!4224 = !DILocation(line: 198, column: 52, scope: !4215)
!4225 = distinct !{!4225, !4219, !4226}
!4226 = !DILocation(line: 200, column: 2, scope: !4216)
!4227 = !DILocation(line: 202, column: 1, scope: !4046)
!4228 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !4229, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4231)
!4229 = !DISubroutineType(types: !4230)
!4230 = !{!2251, !4053, !2251}
!4231 = !{!4232, !4233}
!4232 = !DILocalVariable(name: "h", arg: 1, scope: !4228, file: !142, line: 204, type: !4053)
!4233 = !DILocalVariable(name: "c", arg: 2, scope: !4228, file: !142, line: 204, type: !2251)
!4234 = !DILocation(line: 0, scope: !4228)
!4235 = !DILocation(line: 206, column: 13, scope: !4228)
!4236 = !DILocation(line: 206, column: 11, scope: !4228)
!4237 = !DILocation(line: 206, column: 2, scope: !4228)
!4238 = distinct !DISubprogram(name: "valid_chunk", scope: !134, file: !134, line: 31, type: !4239, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4241)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!224, !4053, !2251}
!4241 = !{!4242, !4243}
!4242 = !DILocalVariable(name: "h", arg: 1, scope: !4238, file: !134, line: 31, type: !4053)
!4243 = !DILocalVariable(name: "c", arg: 2, scope: !4238, file: !134, line: 31, type: !2251)
!4244 = !DILocation(line: 0, scope: !4238)
!4245 = !DILocation(line: 33, column: 2, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4247, file: !134, line: 33, column: 2)
!4247 = distinct !DILexicalBlock(scope: !4238, file: !134, line: 33, column: 2)
!4248 = !DILocation(line: 33, column: 2, scope: !4247)
!4249 = !DILocation(line: 34, column: 2, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !134, line: 34, column: 2)
!4251 = distinct !DILexicalBlock(scope: !4238, file: !134, line: 34, column: 2)
!4252 = !DILocation(line: 34, column: 2, scope: !4251)
!4253 = !DILocation(line: 35, column: 2, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !134, line: 35, column: 2)
!4255 = distinct !DILexicalBlock(scope: !4238, file: !134, line: 35, column: 2)
!4256 = !DILocation(line: 35, column: 2, scope: !4255)
!4257 = !DILocation(line: 36, column: 2, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !134, line: 36, column: 2)
!4259 = distinct !DILexicalBlock(scope: !4238, file: !134, line: 36, column: 2)
!4260 = !DILocation(line: 36, column: 2, scope: !4259)
!4261 = !DILocation(line: 37, column: 2, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4263, file: !134, line: 37, column: 2)
!4263 = distinct !DILexicalBlock(scope: !4238, file: !134, line: 37, column: 2)
!4264 = !DILocation(line: 37, column: 2, scope: !4263)
!4265 = !DILocation(line: 38, column: 6, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4238, file: !134, line: 38, column: 6)
!4267 = !DILocation(line: 38, column: 6, scope: !4238)
!4268 = !DILocation(line: 41, column: 3, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !134, line: 41, column: 3)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !134, line: 41, column: 3)
!4271 = distinct !DILexicalBlock(scope: !4266, file: !134, line: 40, column: 9)
!4272 = !DILocation(line: 41, column: 3, scope: !4270)
!4273 = !DILocation(line: 42, column: 3, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4275, file: !134, line: 42, column: 3)
!4275 = distinct !DILexicalBlock(scope: !4271, file: !134, line: 42, column: 3)
!4276 = !DILocation(line: 42, column: 3, scope: !4275)
!4277 = !DILocation(line: 44, column: 4, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !134, line: 44, column: 4)
!4279 = distinct !DILexicalBlock(scope: !4280, file: !134, line: 44, column: 4)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !134, line: 43, column: 32)
!4281 = distinct !DILexicalBlock(scope: !4271, file: !134, line: 43, column: 7)
!4282 = !DILocation(line: 44, column: 4, scope: !4279)
!4283 = !DILocation(line: 45, column: 4, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4285, file: !134, line: 45, column: 4)
!4285 = distinct !DILexicalBlock(scope: !4280, file: !134, line: 45, column: 4)
!4286 = !DILocation(line: 45, column: 4, scope: !4285)
!4287 = !DILocation(line: 48, column: 2, scope: !4238)
!4288 = !DILocation(line: 49, column: 1, scope: !4238)
!4289 = distinct !DISubprogram(name: "get_alloc_info", scope: !134, file: !134, line: 71, type: !4290, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4292)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{null, !4053, !2299, !2299}
!4292 = !{!4293, !4294, !4295, !4296}
!4293 = !DILocalVariable(name: "h", arg: 1, scope: !4289, file: !134, line: 71, type: !4053)
!4294 = !DILocalVariable(name: "alloc_bytes", arg: 2, scope: !4289, file: !134, line: 71, type: !2299)
!4295 = !DILocalVariable(name: "free_bytes", arg: 3, scope: !4289, file: !134, line: 72, type: !2299)
!4296 = !DILocalVariable(name: "c", scope: !4289, file: !134, line: 74, type: !2251)
!4297 = !DILocation(line: 0, scope: !4289)
!4298 = !DILocation(line: 76, column: 15, scope: !4289)
!4299 = !DILocation(line: 77, column: 14, scope: !4289)
!4300 = !DILocation(line: 79, column: 11, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4289, file: !134, line: 79, column: 2)
!4302 = !DILocation(line: 79, column: 37, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4301, file: !134, line: 79, column: 2)
!4304 = !DILocation(line: 79, column: 32, scope: !4303)
!4305 = !DILocation(line: 79, column: 2, scope: !4301)
!4306 = !DILocation(line: 80, column: 7, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4308, file: !134, line: 80, column: 7)
!4308 = distinct !DILexicalBlock(scope: !4303, file: !134, line: 79, column: 71)
!4309 = !DILocation(line: 0, scope: !4307)
!4310 = !DILocation(line: 79, column: 52, scope: !4303)
!4311 = distinct !{!4311, !4305, !4312}
!4312 = !DILocation(line: 85, column: 2, scope: !4301)
!4313 = !DILocation(line: 86, column: 1, scope: !4289)
!4314 = distinct !DISubprogram(name: "sys_heap_runtime_stats_get", scope: !134, file: !134, line: 416, type: !4315, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4318)
!4315 = !DISubroutineType(types: !4316)
!4316 = !{!103, !4049, !4317}
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4076, size: 32)
!4318 = !{!4319, !4320}
!4319 = !DILocalVariable(name: "heap", arg: 1, scope: !4314, file: !134, line: 416, type: !4049)
!4320 = !DILocalVariable(name: "stats", arg: 2, scope: !4314, file: !134, line: 417, type: !4317)
!4321 = !DILocation(line: 0, scope: !4314)
!4322 = !DILocation(line: 419, column: 12, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4314, file: !134, line: 419, column: 6)
!4324 = !DILocation(line: 419, column: 21, scope: !4323)
!4325 = !DILocation(line: 423, column: 28, scope: !4314)
!4326 = !DILocation(line: 423, column: 34, scope: !4314)
!4327 = !DILocation(line: 423, column: 9, scope: !4314)
!4328 = !DILocation(line: 423, column: 20, scope: !4314)
!4329 = !DILocation(line: 424, column: 33, scope: !4314)
!4330 = !DILocation(line: 424, column: 39, scope: !4314)
!4331 = !DILocation(line: 424, column: 9, scope: !4314)
!4332 = !DILocation(line: 424, column: 25, scope: !4314)
!4333 = !DILocation(line: 425, column: 37, scope: !4314)
!4334 = !DILocation(line: 425, column: 43, scope: !4314)
!4335 = !DILocation(line: 425, column: 9, scope: !4314)
!4336 = !DILocation(line: 425, column: 29, scope: !4314)
!4337 = !DILocation(line: 427, column: 2, scope: !4314)
!4338 = !DILocation(line: 428, column: 1, scope: !4314)
!4339 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !4340, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4342)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{!103, !4053, !3325}
!4342 = !{!4343, !4344, !4345}
!4343 = !DILocalVariable(name: "h", arg: 1, scope: !4339, file: !142, line: 250, type: !4053)
!4344 = !DILocalVariable(name: "sz", arg: 2, scope: !4339, file: !142, line: 250, type: !3325)
!4345 = !DILocalVariable(name: "usable_sz", scope: !4339, file: !142, line: 252, type: !32)
!4346 = !DILocation(line: 0, scope: !4339)
!4347 = !DILocation(line: 253, column: 14, scope: !4339)
!4348 = !DILocation(line: 253, column: 12, scope: !4339)
!4349 = !DILocation(line: 253, column: 2, scope: !4339)
!4350 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !4351, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4353)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{null, !4053, !2251, !224}
!4353 = !{!4354, !4355, !4356, !4357, !4358}
!4354 = !DILocalVariable(name: "h", arg: 1, scope: !4350, file: !142, line: 147, type: !4053)
!4355 = !DILocalVariable(name: "c", arg: 2, scope: !4350, file: !142, line: 147, type: !2251)
!4356 = !DILocalVariable(name: "used", arg: 3, scope: !4350, file: !142, line: 147, type: !224)
!4357 = !DILocalVariable(name: "buf", scope: !4350, file: !142, line: 149, type: !153)
!4358 = !DILocalVariable(name: "cmem", scope: !4350, file: !142, line: 150, type: !102)
!4359 = !DILocation(line: 0, scope: !4350)
!4360 = !DILocation(line: 149, column: 22, scope: !4350)
!4361 = !DILocation(line: 0, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !142, line: 159, column: 7)
!4363 = distinct !DILexicalBlock(scope: !4364, file: !142, line: 158, column: 9)
!4364 = distinct !DILexicalBlock(scope: !4350, file: !142, line: 152, column: 6)
!4365 = !DILocation(line: 159, column: 7, scope: !4363)
!4366 = !DILocation(line: 165, column: 1, scope: !4350)
!4367 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !4229, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4368)
!4368 = !{!4369, !4370}
!4369 = !DILocalVariable(name: "h", arg: 1, scope: !4367, file: !142, line: 182, type: !4053)
!4370 = !DILocalVariable(name: "c", arg: 2, scope: !4367, file: !142, line: 182, type: !2251)
!4371 = !DILocation(line: 0, scope: !4367)
!4372 = !DILocation(line: 184, column: 9, scope: !4367)
!4373 = !DILocation(line: 184, column: 2, scope: !4367)
!4374 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !4239, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4375)
!4375 = !{!4376, !4377}
!4376 = !DILocalVariable(name: "h", arg: 1, scope: !4374, file: !142, line: 137, type: !4053)
!4377 = !DILocalVariable(name: "c", arg: 2, scope: !4374, file: !142, line: 137, type: !2251)
!4378 = !DILocation(line: 0, scope: !4374)
!4379 = !DILocation(line: 139, column: 9, scope: !4374)
!4380 = !DILocation(line: 139, column: 42, scope: !4374)
!4381 = !DILocation(line: 139, column: 2, scope: !4374)
!4382 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !4229, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4383)
!4383 = !{!4384, !4385}
!4384 = !DILocalVariable(name: "h", arg: 1, scope: !4382, file: !142, line: 199, type: !4053)
!4385 = !DILocalVariable(name: "c", arg: 2, scope: !4382, file: !142, line: 199, type: !2251)
!4386 = !DILocation(line: 0, scope: !4382)
!4387 = !DILocation(line: 201, column: 13, scope: !4382)
!4388 = !DILocation(line: 201, column: 11, scope: !4382)
!4389 = !DILocation(line: 201, column: 2, scope: !4382)
!4390 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !4391, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4393)
!4391 = !DISubroutineType(types: !4392)
!4392 = !{!2251, !4053, !2251, !141}
!4393 = !{!4394, !4395, !4396, !4397, !4398}
!4394 = !DILocalVariable(name: "h", arg: 1, scope: !4390, file: !142, line: 107, type: !4053)
!4395 = !DILocalVariable(name: "c", arg: 2, scope: !4390, file: !142, line: 107, type: !2251)
!4396 = !DILocalVariable(name: "f", arg: 3, scope: !4390, file: !142, line: 108, type: !141)
!4397 = !DILocalVariable(name: "buf", scope: !4390, file: !142, line: 110, type: !153)
!4398 = !DILocalVariable(name: "cmem", scope: !4390, file: !142, line: 111, type: !102)
!4399 = !DILocation(line: 0, scope: !4390)
!4400 = !DILocation(line: 110, column: 22, scope: !4390)
!4401 = !DILocation(line: 111, column: 15, scope: !4390)
!4402 = !DILocation(line: 116, column: 11, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4404, file: !142, line: 115, column: 9)
!4404 = distinct !DILexicalBlock(scope: !4390, file: !142, line: 113, column: 6)
!4405 = !DILocation(line: 116, column: 10, scope: !4403)
!4406 = !DILocation(line: 118, column: 1, scope: !4390)
!4407 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !4408, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4410)
!4408 = !DISubroutineType(types: !4409)
!4409 = !{!153, !4053}
!4410 = !{!4411}
!4411 = !DILocalVariable(name: "h", arg: 1, scope: !4407, file: !142, line: 101, type: !4053)
!4412 = !DILocation(line: 0, scope: !4407)
!4413 = !DILocation(line: 104, column: 9, scope: !4407)
!4414 = !DILocation(line: 104, column: 2, scope: !4407)
!4415 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !4416, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4418)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!3325, !4053, !2251}
!4418 = !{!4419, !4420}
!4419 = !DILocalVariable(name: "h", arg: 1, scope: !4415, file: !142, line: 142, type: !4053)
!4420 = !DILocalVariable(name: "c", arg: 2, scope: !4415, file: !142, line: 142, type: !2251)
!4421 = !DILocation(line: 0, scope: !4415)
!4422 = !DILocation(line: 144, column: 9, scope: !4415)
!4423 = !DILocation(line: 144, column: 42, scope: !4415)
!4424 = !DILocation(line: 144, column: 2, scope: !4415)
!4425 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !4426, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4428)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{!120, !4053, !3325}
!4428 = !{!4429, !4430}
!4429 = !DILocalVariable(name: "h", arg: 1, scope: !4425, file: !142, line: 245, type: !4053)
!4430 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4425, file: !142, line: 245, type: !3325)
!4431 = !DILocation(line: 0, scope: !4425)
!4432 = !DILocation(line: 247, column: 20, scope: !4425)
!4433 = !DILocation(line: 247, column: 33, scope: !4425)
!4434 = !DILocation(line: 247, column: 2, scope: !4425)
!4435 = distinct !DISubprogram(name: "in_bounds", scope: !134, file: !134, line: 23, type: !4239, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4436)
!4436 = !{!4437, !4438}
!4437 = !DILocalVariable(name: "h", arg: 1, scope: !4435, file: !134, line: 23, type: !4053)
!4438 = !DILocalVariable(name: "c", arg: 2, scope: !4435, file: !134, line: 23, type: !2251)
!4439 = !DILocation(line: 0, scope: !4435)
!4440 = !DILocation(line: 25, column: 2, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4442, file: !134, line: 25, column: 2)
!4442 = distinct !DILexicalBlock(scope: !4435, file: !134, line: 25, column: 2)
!4443 = !DILocation(line: 25, column: 2, scope: !4442)
!4444 = !DILocation(line: 26, column: 2, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4446, file: !134, line: 26, column: 2)
!4446 = distinct !DILexicalBlock(scope: !4435, file: !134, line: 26, column: 2)
!4447 = !DILocation(line: 26, column: 2, scope: !4446)
!4448 = !DILocation(line: 27, column: 2, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !134, line: 27, column: 2)
!4450 = distinct !DILexicalBlock(scope: !4435, file: !134, line: 27, column: 2)
!4451 = !DILocation(line: 29, column: 1, scope: !4435)
!4452 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !4229, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4453)
!4453 = !{!4454, !4455}
!4454 = !DILocalVariable(name: "h", arg: 1, scope: !4452, file: !142, line: 177, type: !4053)
!4455 = !DILocalVariable(name: "c", arg: 2, scope: !4452, file: !142, line: 177, type: !2251)
!4456 = !DILocation(line: 0, scope: !4452)
!4457 = !DILocation(line: 179, column: 9, scope: !4452)
!4458 = !DILocation(line: 179, column: 2, scope: !4452)
!4459 = distinct !DISubprogram(name: "sys_heap_stress", scope: !134, file: !134, line: 300, type: !4460, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4475)
!4460 = !DISubroutineType(types: !4461)
!4461 = !{null, !4462, !4465, !102, !120, !137, !102, !120, !103, !4468}
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 32)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{!102, !102, !120}
!4465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4466, size: 32)
!4466 = !DISubroutineType(types: !4467)
!4467 = !{null, !102, !102}
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 32)
!4469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_result", file: !113, line: 62, size: 192, elements: !4470)
!4470 = !{!4471, !4472, !4473, !4474}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "total_allocs", scope: !4469, file: !113, line: 63, baseType: !137, size: 32)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "successful_allocs", scope: !4469, file: !113, line: 64, baseType: !137, size: 32, offset: 32)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "total_frees", scope: !4469, file: !113, line: 65, baseType: !137, size: 32, offset: 64)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "accumulated_in_use_bytes", scope: !4469, file: !113, line: 66, baseType: !163, size: 64, offset: 128)
!4475 = !{!4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4502, !4504, !4509, !4510, !4512, !4513}
!4476 = !DILocalVariable(name: "alloc_fn", arg: 1, scope: !4459, file: !134, line: 300, type: !4462)
!4477 = !DILocalVariable(name: "free_fn", arg: 2, scope: !4459, file: !134, line: 301, type: !4465)
!4478 = !DILocalVariable(name: "arg", arg: 3, scope: !4459, file: !134, line: 302, type: !102)
!4479 = !DILocalVariable(name: "total_bytes", arg: 4, scope: !4459, file: !134, line: 302, type: !120)
!4480 = !DILocalVariable(name: "op_count", arg: 5, scope: !4459, file: !134, line: 303, type: !137)
!4481 = !DILocalVariable(name: "scratch_mem", arg: 6, scope: !4459, file: !134, line: 304, type: !102)
!4482 = !DILocalVariable(name: "scratch_bytes", arg: 7, scope: !4459, file: !134, line: 304, type: !120)
!4483 = !DILocalVariable(name: "target_percent", arg: 8, scope: !4459, file: !134, line: 305, type: !103)
!4484 = !DILocalVariable(name: "result", arg: 9, scope: !4459, file: !134, line: 306, type: !4468)
!4485 = !DILocalVariable(name: "sr", scope: !4459, file: !134, line: 308, type: !4486)
!4486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_rec", file: !134, line: 204, size: 288, elements: !4487)
!4487 = !{!4488, !4489, !4490, !4491, !4492, !4498, !4499, !4500, !4501}
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fn", scope: !4486, file: !134, line: 205, baseType: !4462, size: 32)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "free_fn", scope: !4486, file: !134, line: 206, baseType: !4465, size: 32, offset: 32)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4486, file: !134, line: 207, baseType: !102, size: 32, offset: 64)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "total_bytes", scope: !4486, file: !134, line: 208, baseType: !120, size: 32, offset: 96)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4486, file: !134, line: 209, baseType: !4493, size: 32, offset: 128)
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 32)
!4494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_block", file: !134, line: 216, size: 64, elements: !4495)
!4495 = !{!4496, !4497}
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4494, file: !134, line: 217, baseType: !102, size: 32)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !4494, file: !134, line: 218, baseType: !120, size: 32, offset: 32)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "nblocks", scope: !4486, file: !134, line: 210, baseType: !120, size: 32, offset: 160)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_alloced", scope: !4486, file: !134, line: 211, baseType: !120, size: 32, offset: 192)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_alloced", scope: !4486, file: !134, line: 212, baseType: !120, size: 32, offset: 224)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "target_percent", scope: !4486, file: !134, line: 213, baseType: !137, size: 32, offset: 256)
!4502 = !DILocalVariable(name: "i", scope: !4503, file: !134, line: 320, type: !137)
!4503 = distinct !DILexicalBlock(scope: !4459, file: !134, line: 320, column: 2)
!4504 = !DILocalVariable(name: "sz", scope: !4505, file: !134, line: 322, type: !120)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !134, line: 321, column: 31)
!4506 = distinct !DILexicalBlock(scope: !4507, file: !134, line: 321, column: 7)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !134, line: 320, column: 42)
!4508 = distinct !DILexicalBlock(scope: !4503, file: !134, line: 320, column: 2)
!4509 = !DILocalVariable(name: "p", scope: !4505, file: !134, line: 323, type: !102)
!4510 = !DILocalVariable(name: "b", scope: !4511, file: !134, line: 334, type: !103)
!4511 = distinct !DILexicalBlock(scope: !4506, file: !134, line: 333, column: 10)
!4512 = !DILocalVariable(name: "p", scope: !4511, file: !134, line: 335, type: !102)
!4513 = !DILocalVariable(name: "sz", scope: !4511, file: !134, line: 336, type: !120)
!4514 = !DILocation(line: 0, scope: !4459)
!4515 = !DILocation(line: 308, column: 2, scope: !4459)
!4516 = !DILocation(line: 308, column: 27, scope: !4459)
!4517 = !DILocation(line: 308, column: 32, scope: !4459)
!4518 = !DILocation(line: 314, column: 34, scope: !4459)
!4519 = !DILocation(line: 318, column: 12, scope: !4459)
!4520 = !DILocation(line: 0, scope: !4503)
!4521 = !DILocation(line: 320, column: 25, scope: !4508)
!4522 = !DILocation(line: 320, column: 2, scope: !4503)
!4523 = !DILocation(line: 346, column: 1, scope: !4459)
!4524 = !DILocation(line: 321, column: 7, scope: !4506)
!4525 = !DILocation(line: 321, column: 7, scope: !4507)
!4526 = !DILocation(line: 322, column: 16, scope: !4505)
!4527 = !DILocation(line: 0, scope: !4505)
!4528 = !DILocation(line: 323, column: 14, scope: !4505)
!4529 = !DILocation(line: 325, column: 24, scope: !4505)
!4530 = !DILocation(line: 326, column: 10, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4505, file: !134, line: 326, column: 8)
!4532 = !DILocation(line: 326, column: 8, scope: !4505)
!4533 = !DILocation(line: 327, column: 30, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4531, file: !134, line: 326, column: 19)
!4535 = !DILocation(line: 328, column: 34, scope: !4534)
!4536 = !DILocation(line: 328, column: 38, scope: !4534)
!4537 = !DILocation(line: 329, column: 34, scope: !4534)
!4538 = !DILocation(line: 329, column: 37, scope: !4534)
!4539 = !DILocation(line: 330, column: 22, scope: !4534)
!4540 = !DILocation(line: 331, column: 22, scope: !4534)
!4541 = !DILocation(line: 332, column: 4, scope: !4534)
!4542 = !DILocation(line: 334, column: 12, scope: !4511)
!4543 = !DILocation(line: 0, scope: !4511)
!4544 = !DILocation(line: 335, column: 27, scope: !4511)
!4545 = !DILocation(line: 336, column: 29, scope: !4511)
!4546 = !DILocation(line: 338, column: 23, scope: !4511)
!4547 = !DILocation(line: 339, column: 4, scope: !4511)
!4548 = !DILocation(line: 339, column: 47, scope: !4511)
!4549 = !DILocation(line: 339, column: 19, scope: !4511)
!4550 = !DILocation(line: 340, column: 21, scope: !4511)
!4551 = !DILocation(line: 341, column: 21, scope: !4511)
!4552 = !DILocation(line: 342, column: 4, scope: !4511)
!4553 = !DILocation(line: 344, column: 42, scope: !4507)
!4554 = !DILocation(line: 344, column: 39, scope: !4507)
!4555 = !DILocation(line: 344, column: 36, scope: !4507)
!4556 = !DILocation(line: 320, column: 38, scope: !4508)
!4557 = distinct !{!4557, !4522, !4558}
!4558 = !DILocation(line: 345, column: 2, scope: !4503)
!4559 = distinct !DISubprogram(name: "rand_alloc_choice", scope: !134, file: !134, line: 234, type: !4560, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4563)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!224, !4562}
!4562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4486, size: 32)
!4563 = !{!4564, !4565, !4569, !4570}
!4564 = !DILocalVariable(name: "sr", arg: 1, scope: !4559, file: !134, line: 234, type: !4562)
!4565 = !DILocalVariable(name: "full_pct", scope: !4566, file: !134, line: 259, type: !137)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !134, line: 241, column: 9)
!4567 = distinct !DILexicalBlock(scope: !4568, file: !134, line: 239, column: 13)
!4568 = distinct !DILexicalBlock(scope: !4559, file: !134, line: 237, column: 6)
!4569 = !DILocalVariable(name: "target", scope: !4566, file: !134, line: 260, type: !137)
!4570 = !DILocalVariable(name: "free_chance", scope: !4566, file: !134, line: 261, type: !137)
!4571 = !DILocation(line: 0, scope: !4559)
!4572 = !DILocation(line: 237, column: 10, scope: !4568)
!4573 = !DILocation(line: 237, column: 25, scope: !4568)
!4574 = !DILocation(line: 237, column: 6, scope: !4559)
!4575 = !DILocation(line: 239, column: 39, scope: !4567)
!4576 = !DILocation(line: 239, column: 32, scope: !4567)
!4577 = !DILocation(line: 239, column: 13, scope: !4568)
!4578 = !DILocation(line: 259, column: 34, scope: !4566)
!4579 = !DILocation(line: 259, column: 28, scope: !4566)
!4580 = !DILocation(line: 259, column: 55, scope: !4566)
!4581 = !DILocation(line: 259, column: 49, scope: !4566)
!4582 = !DILocation(line: 0, scope: !4566)
!4583 = !DILocation(line: 260, column: 25, scope: !4566)
!4584 = !DILocation(line: 263, column: 16, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4566, file: !134, line: 263, column: 7)
!4586 = !DILocation(line: 263, column: 7, scope: !4566)
!4587 = !DILocation(line: 264, column: 42, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4585, file: !134, line: 263, column: 38)
!4589 = !DILocation(line: 264, column: 27, scope: !4588)
!4590 = !DILocation(line: 265, column: 3, scope: !4588)
!4591 = !DILocation(line: 267, column: 10, scope: !4566)
!4592 = !DILocation(line: 267, column: 19, scope: !4566)
!4593 = !DILocation(line: 0, scope: !4568)
!4594 = !DILocation(line: 269, column: 1, scope: !4559)
!4595 = distinct !DISubprogram(name: "rand_alloc_size", scope: !134, file: !134, line: 274, type: !4596, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4598)
!4596 = !DISubroutineType(types: !4597)
!4597 = !{!120, !4562}
!4598 = !{!4599, !4600}
!4599 = !DILocalVariable(name: "sr", arg: 1, scope: !4595, file: !134, line: 274, type: !4562)
!4600 = !DILocalVariable(name: "scale", scope: !4595, file: !134, line: 281, type: !103)
!4601 = !DILocation(line: 0, scope: !4595)
!4602 = !DILocation(line: 281, column: 32, scope: !4595)
!4603 = !DILocation(line: 281, column: 18, scope: !4595)
!4604 = !DILocation(line: 283, column: 9, scope: !4595)
!4605 = !DILocation(line: 283, column: 20, scope: !4595)
!4606 = !DILocation(line: 283, column: 18, scope: !4595)
!4607 = !DILocation(line: 283, column: 2, scope: !4595)
!4608 = distinct !DISubprogram(name: "rand_free_choice", scope: !134, file: !134, line: 287, type: !4596, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4609)
!4609 = !{!4610}
!4610 = !DILocalVariable(name: "sr", arg: 1, scope: !4608, file: !134, line: 287, type: !4562)
!4611 = !DILocation(line: 0, scope: !4608)
!4612 = !DILocation(line: 289, column: 9, scope: !4608)
!4613 = !DILocation(line: 289, column: 24, scope: !4608)
!4614 = !DILocation(line: 289, column: 18, scope: !4608)
!4615 = !DILocation(line: 289, column: 2, scope: !4608)
!4616 = !DILocation(line: 229, column: 10, scope: !133)
!4617 = !DILocation(line: 229, column: 16, scope: !133)
!4618 = !DILocation(line: 229, column: 40, scope: !133)
!4619 = !DILocation(line: 229, column: 8, scope: !133)
!4620 = !DILocation(line: 231, column: 26, scope: !133)
!4621 = !DILocation(line: 231, column: 9, scope: !133)
!4622 = !DILocation(line: 231, column: 2, scope: !133)
!4623 = distinct !DISubprogram(name: "heap_print_info", scope: !134, file: !134, line: 351, type: !4624, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4626)
!4624 = !DISubroutineType(types: !4625)
!4625 = !{null, !4053, !224}
!4626 = !{!4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4639, !4640, !4641, !4644}
!4627 = !DILocalVariable(name: "h", arg: 1, scope: !4623, file: !134, line: 351, type: !4053)
!4628 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4623, file: !134, line: 351, type: !224)
!4629 = !DILocalVariable(name: "i", scope: !4623, file: !134, line: 353, type: !103)
!4630 = !DILocalVariable(name: "nb_buckets", scope: !4623, file: !134, line: 353, type: !103)
!4631 = !DILocalVariable(name: "free_bytes", scope: !4623, file: !134, line: 354, type: !120)
!4632 = !DILocalVariable(name: "allocated_bytes", scope: !4623, file: !134, line: 354, type: !120)
!4633 = !DILocalVariable(name: "total", scope: !4623, file: !134, line: 354, type: !120)
!4634 = !DILocalVariable(name: "overhead", scope: !4623, file: !134, line: 354, type: !120)
!4635 = !DILocalVariable(name: "first", scope: !4636, file: !134, line: 363, type: !2251)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !134, line: 362, column: 35)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !134, line: 362, column: 2)
!4638 = distinct !DILexicalBlock(scope: !4623, file: !134, line: 362, column: 2)
!4639 = !DILocalVariable(name: "largest", scope: !4636, file: !134, line: 364, type: !3325)
!4640 = !DILocalVariable(name: "count", scope: !4636, file: !134, line: 365, type: !103)
!4641 = !DILocalVariable(name: "curr", scope: !4642, file: !134, line: 368, type: !2251)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !134, line: 367, column: 14)
!4643 = distinct !DILexicalBlock(scope: !4636, file: !134, line: 367, column: 7)
!4644 = !DILocalVariable(name: "c", scope: !4645, file: !134, line: 384, type: !2251)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !134, line: 384, column: 3)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !134, line: 382, column: 19)
!4647 = distinct !DILexicalBlock(scope: !4623, file: !134, line: 382, column: 6)
!4648 = !DILocation(line: 0, scope: !4623)
!4649 = !DILocation(line: 353, column: 39, scope: !4623)
!4650 = !DILocation(line: 353, column: 22, scope: !4623)
!4651 = !DILocation(line: 353, column: 50, scope: !4623)
!4652 = !DILocation(line: 354, column: 2, scope: !4623)
!4653 = !DILocation(line: 357, column: 9, scope: !4623)
!4654 = !DILocation(line: 356, column: 2, scope: !4623)
!4655 = !DILocation(line: 359, column: 2, scope: !4623)
!4656 = !DILocation(line: 362, column: 16, scope: !4637)
!4657 = !DILocation(line: 362, column: 2, scope: !4638)
!4658 = !DILocation(line: 363, column: 35, scope: !4636)
!4659 = !DILocation(line: 0, scope: !4636)
!4660 = !DILocation(line: 367, column: 7, scope: !4643)
!4661 = !DILocation(line: 367, column: 7, scope: !4636)
!4662 = !DILocation(line: 0, scope: !4642)
!4663 = !DILocation(line: 370, column: 10, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4642, file: !134, line: 369, column: 7)
!4665 = !DILocation(line: 371, column: 15, scope: !4664)
!4666 = !DILocation(line: 372, column: 12, scope: !4664)
!4667 = !DILocation(line: 373, column: 18, scope: !4642)
!4668 = !DILocation(line: 373, column: 4, scope: !4664)
!4669 = distinct !{!4669, !4670, !4671}
!4670 = !DILocation(line: 369, column: 4, scope: !4642)
!4671 = !DILocation(line: 373, column: 26, scope: !4642)
!4672 = !DILocation(line: 377, column: 23, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !134, line: 375, column: 14)
!4674 = distinct !DILexicalBlock(scope: !4636, file: !134, line: 375, column: 7)
!4675 = !DILocation(line: 378, column: 20, scope: !4673)
!4676 = !DILocation(line: 376, column: 4, scope: !4673)
!4677 = !DILocation(line: 379, column: 3, scope: !4673)
!4678 = !DILocation(line: 362, column: 31, scope: !4637)
!4679 = distinct !{!4679, !4657, !4680}
!4680 = !DILocation(line: 380, column: 2, scope: !4638)
!4681 = !DILocation(line: 382, column: 6, scope: !4623)
!4682 = !DILocation(line: 383, column: 3, scope: !4646)
!4683 = !DILocation(line: 0, scope: !4645)
!4684 = !DILocation(line: 384, column: 8, scope: !4645)
!4685 = !DILocation(line: 387, column: 11, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !134, line: 384, column: 50)
!4687 = distinct !DILexicalBlock(scope: !4645, file: !134, line: 384, column: 3)
!4688 = !DILocation(line: 390, column: 11, scope: !4686)
!4689 = !DILocation(line: 391, column: 11, scope: !4686)
!4690 = !DILocation(line: 392, column: 11, scope: !4686)
!4691 = !DILocation(line: 385, column: 4, scope: !4686)
!4692 = !DILocation(line: 393, column: 16, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4686, file: !134, line: 393, column: 8)
!4694 = !DILocation(line: 393, column: 10, scope: !4693)
!4695 = !DILocation(line: 393, column: 8, scope: !4686)
!4696 = !DILocation(line: 384, column: 31, scope: !4687)
!4697 = !DILocation(line: 384, column: 3, scope: !4687)
!4698 = distinct !{!4698, !4699, !4700}
!4699 = !DILocation(line: 384, column: 3, scope: !4645)
!4700 = !DILocation(line: 396, column: 3, scope: !4645)
!4701 = !DILocation(line: 399, column: 2, scope: !4623)
!4702 = !DILocation(line: 401, column: 13, scope: !4623)
!4703 = !DILocation(line: 401, column: 23, scope: !4623)
!4704 = !DILocation(line: 401, column: 36, scope: !4623)
!4705 = !DILocation(line: 402, column: 21, scope: !4623)
!4706 = !DILocation(line: 402, column: 34, scope: !4623)
!4707 = !DILocation(line: 402, column: 32, scope: !4623)
!4708 = !DILocation(line: 405, column: 15, scope: !4623)
!4709 = !DILocation(line: 405, column: 33, scope: !4623)
!4710 = !DILocation(line: 405, column: 26, scope: !4623)
!4711 = !DILocation(line: 405, column: 37, scope: !4623)
!4712 = !DILocation(line: 405, column: 45, scope: !4623)
!4713 = !DILocation(line: 403, column: 2, scope: !4623)
!4714 = !DILocation(line: 407, column: 1, scope: !4623)
!4715 = distinct !DISubprogram(name: "sys_heap_print_info", scope: !134, file: !134, line: 409, type: !4716, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4718)
!4716 = !DISubroutineType(types: !4717)
!4717 = !{null, !4049, !224}
!4718 = !{!4719, !4720}
!4719 = !DILocalVariable(name: "heap", arg: 1, scope: !4715, file: !134, line: 409, type: !4049)
!4720 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4715, file: !134, line: 409, type: !224)
!4721 = !DILocation(line: 0, scope: !4715)
!4722 = !DILocation(line: 411, column: 24, scope: !4715)
!4723 = !DILocation(line: 411, column: 2, scope: !4715)
!4724 = !DILocation(line: 412, column: 1, scope: !4715)
!4725 = distinct !DISubprogram(name: "sys_heap_runtime_stats_reset_max", scope: !134, file: !134, line: 430, type: !4726, scopeLine: 431, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4728)
!4726 = !DISubroutineType(types: !4727)
!4727 = !{!103, !4049}
!4728 = !{!4729}
!4729 = !DILocalVariable(name: "heap", arg: 1, scope: !4725, file: !134, line: 430, type: !4049)
!4730 = !DILocation(line: 0, scope: !4725)
!4731 = !DILocation(line: 432, column: 11, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4725, file: !134, line: 432, column: 6)
!4733 = !DILocation(line: 432, column: 6, scope: !4725)
!4734 = !DILocation(line: 436, column: 42, scope: !4725)
!4735 = !DILocation(line: 436, column: 48, scope: !4725)
!4736 = !DILocation(line: 436, column: 14, scope: !4725)
!4737 = !DILocation(line: 436, column: 34, scope: !4725)
!4738 = !DILocation(line: 438, column: 2, scope: !4725)
!4739 = !DILocation(line: 439, column: 1, scope: !4725)
!4740 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2268, file: !2268, line: 1338, type: !4741, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !4749)
!4741 = !DISubroutineType(types: !4742)
!4742 = !{!103, !2992, !102, !212, !4743, !137}
!4743 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2958, line: 99, baseType: !4744)
!4744 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2958, line: 40, baseType: !4745)
!4745 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2268, baseType: !4746)
!4746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4747)
!4747 = !{!4748}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4746, file: !2268, baseType: !102, size: 32)
!4749 = !{!4750, !4751, !4752, !4753, !4754, !4755, !4759, !4760, !4761, !4763, !4768, !4813, !4816, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4828, !4829, !4830, !4834, !4837, !4839, !4842, !4843, !4844, !4849, !4855, !4858, !4862, !4868, !4872, !4875, !4877, !4880}
!4750 = !DILocalVariable(name: "out", arg: 1, scope: !4740, file: !2268, line: 1338, type: !2992)
!4751 = !DILocalVariable(name: "ctx", arg: 2, scope: !4740, file: !2268, line: 1338, type: !102)
!4752 = !DILocalVariable(name: "fp", arg: 3, scope: !4740, file: !2268, line: 1338, type: !212)
!4753 = !DILocalVariable(name: "ap", arg: 4, scope: !4740, file: !2268, line: 1339, type: !4743)
!4754 = !DILocalVariable(name: "flags", arg: 5, scope: !4740, file: !2268, line: 1339, type: !137)
!4755 = !DILocalVariable(name: "buf", scope: !4740, file: !2268, line: 1341, type: !4756)
!4756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 176, elements: !4757)
!4757 = !{!4758}
!4758 = !DISubrange(count: 22)
!4759 = !DILocalVariable(name: "count", scope: !4740, file: !2268, line: 1342, type: !120)
!4760 = !DILocalVariable(name: "sint", scope: !4740, file: !2268, line: 1343, type: !2287)
!4761 = !DILocalVariable(name: "tagged_ap", scope: !4740, file: !2268, line: 1345, type: !4762)
!4762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!4763 = !DILocalVariable(name: "rc", scope: !4764, file: !2268, line: 1377, type: !103)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !2268, line: 1377, column: 4)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !2268, line: 1376, column: 19)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1376, column: 7)
!4767 = distinct !DILexicalBlock(scope: !4740, file: !2268, line: 1375, column: 19)
!4768 = !DILocalVariable(name: "state", scope: !4767, file: !2268, line: 1395, type: !4769)
!4769 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4740, file: !2268, line: 1392, size: 192, elements: !4770)
!4770 = !{!4771, !4781}
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4769, file: !2268, line: 1393, baseType: !4772, size: 64)
!4772 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2268, line: 166, size: 64, elements: !4773)
!4773 = !{!4774, !4775, !4776, !4778, !4780}
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4772, file: !2268, line: 168, baseType: !2287, size: 64)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4772, file: !2268, line: 171, baseType: !2290, size: 64)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4772, file: !2268, line: 174, baseType: !4777, size: 64)
!4777 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4772, file: !2268, line: 177, baseType: !4779, size: 64)
!4779 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4772, file: !2268, line: 180, baseType: !102, size: 32)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4769, file: !2268, line: 1394, baseType: !4782, size: 96, offset: 64)
!4782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2268, line: 189, size: 96, elements: !4783)
!4783 = !{!4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4808}
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4782, file: !2268, line: 191, baseType: !224, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4782, file: !2268, line: 194, baseType: !224, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4782, file: !2268, line: 197, baseType: !224, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4782, file: !2268, line: 200, baseType: !224, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4782, file: !2268, line: 203, baseType: !224, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4782, file: !2268, line: 206, baseType: !224, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4782, file: !2268, line: 209, baseType: !224, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4782, file: !2268, line: 212, baseType: !224, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4782, file: !2268, line: 219, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4782, file: !2268, line: 222, baseType: !224, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4782, file: !2268, line: 229, baseType: !224, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4782, file: !2268, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4782, file: !2268, line: 238, baseType: !224, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4782, file: !2268, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4782, file: !2268, line: 244, baseType: !224, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4782, file: !2268, line: 247, baseType: !224, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4782, file: !2268, line: 252, baseType: !224, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4782, file: !2268, line: 257, baseType: !224, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4782, file: !2268, line: 260, baseType: !222, size: 8, offset: 24)
!4803 = !DIDerivedType(tag: DW_TAG_member, scope: !4782, file: !2268, line: 262, baseType: !4804, size: 32, offset: 32)
!4804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4782, file: !2268, line: 262, size: 32, elements: !4805)
!4805 = !{!4806, !4807}
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4804, file: !2268, line: 267, baseType: !103, size: 32)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4804, file: !2268, line: 289, baseType: !103, size: 32)
!4808 = !DIDerivedType(tag: DW_TAG_member, scope: !4782, file: !2268, line: 292, baseType: !4809, size: 32, offset: 64)
!4809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4782, file: !2268, line: 292, size: 32, elements: !4810)
!4810 = !{!4811, !4812}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4809, file: !2268, line: 297, baseType: !103, size: 32)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4809, file: !2268, line: 306, baseType: !103, size: 32)
!4813 = !DILocalVariable(name: "conv", scope: !4767, file: !2268, line: 1400, type: !4814)
!4814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4815)
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4782, size: 32)
!4816 = !DILocalVariable(name: "value", scope: !4767, file: !2268, line: 1401, type: !4817)
!4817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4818)
!4818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4772, size: 32)
!4819 = !DILocalVariable(name: "sp", scope: !4767, file: !2268, line: 1402, type: !212)
!4820 = !DILocalVariable(name: "width", scope: !4767, file: !2268, line: 1403, type: !103)
!4821 = !DILocalVariable(name: "precision", scope: !4767, file: !2268, line: 1404, type: !103)
!4822 = !DILocalVariable(name: "bps", scope: !4767, file: !2268, line: 1405, type: !212)
!4823 = !DILocalVariable(name: "bpe", scope: !4767, file: !2268, line: 1406, type: !212)
!4824 = !DILocalVariable(name: "sign", scope: !4767, file: !2268, line: 1407, type: !109)
!4825 = !DILocalVariable(name: "arg", scope: !4826, file: !2268, line: 1432, type: !103)
!4826 = distinct !DILexicalBlock(scope: !4827, file: !2268, line: 1431, column: 24)
!4827 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1431, column: 7)
!4828 = !DILocalVariable(name: "specifier_cat", scope: !4767, file: !2268, line: 1468, type: !2267)
!4829 = !DILocalVariable(name: "length_mod", scope: !4767, file: !2268, line: 1470, type: !2275)
!4830 = !DILocalVariable(name: "rc", scope: !4831, file: !2268, line: 1575, type: !103)
!4831 = distinct !DILexicalBlock(scope: !4832, file: !2268, line: 1575, column: 4)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !2268, line: 1574, column: 43)
!4833 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1574, column: 7)
!4834 = !DILocalVariable(name: "rc", scope: !4835, file: !2268, line: 1584, type: !103)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !2268, line: 1584, column: 4)
!4836 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1582, column: 28)
!4837 = !DILocalVariable(name: "len", scope: !4838, file: !2268, line: 1589, type: !120)
!4838 = distinct !DILexicalBlock(scope: !4836, file: !2268, line: 1586, column: 13)
!4839 = !DILocalVariable(name: "len", scope: !4840, file: !2268, line: 1641, type: !120)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !2268, line: 1640, column: 24)
!4841 = distinct !DILexicalBlock(scope: !4836, file: !2268, line: 1640, column: 8)
!4842 = !DILocalVariable(name: "nj_len", scope: !4767, file: !2268, line: 1722, type: !120)
!4843 = !DILocalVariable(name: "pad_len", scope: !4767, file: !2268, line: 1723, type: !103)
!4844 = !DILocalVariable(name: "pad", scope: !4845, file: !2268, line: 1751, type: !109)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !2268, line: 1750, column: 26)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !2268, line: 1750, column: 8)
!4847 = distinct !DILexicalBlock(scope: !4848, file: !2268, line: 1747, column: 18)
!4848 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1747, column: 7)
!4849 = !DILocalVariable(name: "rc", scope: !4850, file: !2268, line: 1758, type: !103)
!4850 = distinct !DILexicalBlock(scope: !4851, file: !2268, line: 1758, column: 7)
!4851 = distinct !DILexicalBlock(scope: !4852, file: !2268, line: 1757, column: 21)
!4852 = distinct !DILexicalBlock(scope: !4853, file: !2268, line: 1757, column: 10)
!4853 = distinct !DILexicalBlock(scope: !4854, file: !2268, line: 1756, column: 26)
!4854 = distinct !DILexicalBlock(scope: !4845, file: !2268, line: 1756, column: 9)
!4855 = !DILocalVariable(name: "rc", scope: !4856, file: !2268, line: 1765, type: !103)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !2268, line: 1765, column: 6)
!4857 = distinct !DILexicalBlock(scope: !4845, file: !2268, line: 1764, column: 25)
!4858 = !DILocalVariable(name: "rc", scope: !4859, file: !2268, line: 1774, type: !103)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !2268, line: 1774, column: 4)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !2268, line: 1773, column: 18)
!4861 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1773, column: 7)
!4862 = !DILocalVariable(name: "rc", scope: !4863, file: !2268, line: 1819, type: !103)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !2268, line: 1819, column: 5)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !2268, line: 1818, column: 44)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !2268, line: 1818, column: 8)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !2268, line: 1817, column: 10)
!4867 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1777, column: 7)
!4868 = !DILocalVariable(name: "rc", scope: !4869, file: !2268, line: 1823, type: !103)
!4869 = distinct !DILexicalBlock(scope: !4870, file: !2268, line: 1823, column: 5)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !2268, line: 1822, column: 26)
!4871 = distinct !DILexicalBlock(scope: !4866, file: !2268, line: 1822, column: 8)
!4872 = !DILocalVariable(name: "rc", scope: !4873, file: !2268, line: 1828, type: !103)
!4873 = distinct !DILexicalBlock(scope: !4874, file: !2268, line: 1828, column: 5)
!4874 = distinct !DILexicalBlock(scope: !4866, file: !2268, line: 1827, column: 26)
!4875 = !DILocalVariable(name: "rc", scope: !4876, file: !2268, line: 1831, type: !103)
!4876 = distinct !DILexicalBlock(scope: !4866, file: !2268, line: 1831, column: 4)
!4877 = !DILocalVariable(name: "rc", scope: !4878, file: !2268, line: 1836, type: !103)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !2268, line: 1836, column: 4)
!4879 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1835, column: 21)
!4880 = !DILabel(scope: !4836, name: "prec_int_pad0", file: !2268, line: 1634)
!4881 = !DILocation(line: 0, scope: !4740)
!4882 = !DILocation(line: 1341, column: 2, scope: !4740)
!4883 = !DILocation(line: 1341, column: 7, scope: !4740)
!4884 = !DILocation(line: 1375, column: 2, scope: !4740)
!4885 = !DILocation(line: 1342, column: 9, scope: !4740)
!4886 = !DILocation(line: 1375, column: 9, scope: !4740)
!4887 = !DILocation(line: 1377, column: 4, scope: !4764)
!4888 = !DILocation(line: 0, scope: !4764)
!4889 = !DILocation(line: 1377, column: 4, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4764, file: !2268, line: 1377, column: 4)
!4891 = distinct !{!4891, !4884, !4892}
!4892 = !DILocation(line: 1839, column: 2, scope: !4740)
!4893 = !DILocation(line: 1392, column: 3, scope: !4767)
!4894 = !DILocation(line: 1395, column: 5, scope: !4767)
!4895 = !DILocation(line: 0, scope: !4767)
!4896 = !DILocation(line: 1409, column: 8, scope: !4767)
!4897 = !DILocation(line: 1414, column: 13, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1414, column: 7)
!4899 = !DILocation(line: 1414, column: 7, scope: !4767)
!4900 = !DILocation(line: 1415, column: 12, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4898, file: !2268, line: 1414, column: 25)
!4902 = !DILocation(line: 1417, column: 14, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4901, file: !2268, line: 1417, column: 8)
!4904 = !DILocation(line: 1417, column: 8, scope: !4901)
!4905 = !DILocation(line: 1418, column: 21, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4903, file: !2268, line: 1417, column: 19)
!4907 = !DILocation(line: 1419, column: 13, scope: !4906)
!4908 = !DILocation(line: 1420, column: 4, scope: !4906)
!4909 = !DILocation(line: 1421, column: 20, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4898, file: !2268, line: 1421, column: 14)
!4911 = !DILocation(line: 1421, column: 14, scope: !4898)
!4912 = !DILocation(line: 1431, column: 13, scope: !4827)
!4913 = !DILocation(line: 1431, column: 7, scope: !4767)
!4914 = !DILocation(line: 1432, column: 14, scope: !4826)
!4915 = !DILocation(line: 0, scope: !4826)
!4916 = !DILocation(line: 1434, column: 12, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4826, file: !2268, line: 1434, column: 8)
!4918 = !DILocation(line: 1434, column: 8, scope: !4826)
!4919 = !DILocation(line: 1435, column: 24, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4917, file: !2268, line: 1434, column: 17)
!4921 = !DILocation(line: 1436, column: 4, scope: !4920)
!4922 = !DILocation(line: 1439, column: 20, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4827, file: !2268, line: 1439, column: 14)
!4924 = !DILocation(line: 1439, column: 14, scope: !4827)
!4925 = !DILocation(line: 1469, column: 37, scope: !4767)
!4926 = !DILocation(line: 1448, column: 20, scope: !4767)
!4927 = !DILocation(line: 1449, column: 22, scope: !4767)
!4928 = !DILocation(line: 1471, column: 34, scope: !4767)
!4929 = !DILocation(line: 1478, column: 7, scope: !4767)
!4930 = !DILocation(line: 1479, column: 4, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4932, file: !2268, line: 1478, column: 40)
!4932 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1478, column: 7)
!4933 = !DILocation(line: 1484, column: 19, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4931, file: !2268, line: 1479, column: 24)
!4935 = !DILocation(line: 1484, column: 17, scope: !4934)
!4936 = !DILocation(line: 1485, column: 5, scope: !4934)
!4937 = !DILocation(line: 1492, column: 20, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4939, file: !2268, line: 1491, column: 12)
!4939 = distinct !DILexicalBlock(scope: !4934, file: !2268, line: 1487, column: 9)
!4940 = !DILocation(line: 1492, column: 18, scope: !4938)
!4941 = !DILocation(line: 1494, column: 5, scope: !4934)
!4942 = !DILocation(line: 1497, column: 23, scope: !4934)
!4943 = !DILocation(line: 1496, column: 17, scope: !4934)
!4944 = !DILocation(line: 1498, column: 5, scope: !4934)
!4945 = !DILocation(line: 1501, column: 23, scope: !4934)
!4946 = !DILocation(line: 1500, column: 17, scope: !4934)
!4947 = !DILocation(line: 1502, column: 5, scope: !4934)
!4948 = !DILocation(line: 1513, column: 23, scope: !4934)
!4949 = !DILocation(line: 1513, column: 6, scope: !4934)
!4950 = !DILocation(line: 1512, column: 17, scope: !4934)
!4951 = !DILocation(line: 1514, column: 5, scope: !4934)
!4952 = !DILocation(line: 0, scope: !4934)
!4953 = !DILocation(line: 1516, column: 8, scope: !4931)
!4954 = !DILocation(line: 1517, column: 19, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4956, file: !2268, line: 1516, column: 33)
!4956 = distinct !DILexicalBlock(scope: !4931, file: !2268, line: 1516, column: 8)
!4957 = !DILocation(line: 1517, column: 17, scope: !4955)
!4958 = !DILocation(line: 1518, column: 4, scope: !4955)
!4959 = !DILocation(line: 1519, column: 19, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !2268, line: 1518, column: 39)
!4961 = distinct !DILexicalBlock(scope: !4956, file: !2268, line: 1518, column: 15)
!4962 = !DILocation(line: 1519, column: 17, scope: !4960)
!4963 = !DILocation(line: 1520, column: 4, scope: !4960)
!4964 = !DILocation(line: 1522, column: 4, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4966, file: !2268, line: 1521, column: 47)
!4966 = distinct !DILexicalBlock(scope: !4932, file: !2268, line: 1521, column: 14)
!4967 = !DILocation(line: 1527, column: 19, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4965, file: !2268, line: 1522, column: 24)
!4969 = !DILocation(line: 1527, column: 17, scope: !4968)
!4970 = !DILocation(line: 1528, column: 5, scope: !4968)
!4971 = !DILocation(line: 0, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4968, file: !2268, line: 1530, column: 9)
!4973 = !DILocation(line: 1540, column: 23, scope: !4968)
!4974 = !DILocation(line: 1539, column: 17, scope: !4968)
!4975 = !DILocation(line: 1542, column: 5, scope: !4968)
!4976 = !DILocation(line: 1545, column: 23, scope: !4968)
!4977 = !DILocation(line: 1544, column: 17, scope: !4968)
!4978 = !DILocation(line: 1547, column: 5, scope: !4968)
!4979 = !DILocation(line: 1551, column: 23, scope: !4968)
!4980 = !DILocation(line: 1551, column: 6, scope: !4968)
!4981 = !DILocation(line: 1550, column: 17, scope: !4968)
!4982 = !DILocation(line: 1552, column: 5, scope: !4968)
!4983 = !DILocation(line: 0, scope: !4968)
!4984 = !DILocation(line: 1554, column: 8, scope: !4965)
!4985 = !DILocation(line: 1555, column: 19, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4987, file: !2268, line: 1554, column: 33)
!4987 = distinct !DILexicalBlock(scope: !4965, file: !2268, line: 1554, column: 8)
!4988 = !DILocation(line: 1555, column: 17, scope: !4986)
!4989 = !DILocation(line: 1556, column: 4, scope: !4986)
!4990 = !DILocation(line: 1557, column: 19, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4992, file: !2268, line: 1556, column: 39)
!4992 = distinct !DILexicalBlock(scope: !4987, file: !2268, line: 1556, column: 15)
!4993 = !DILocation(line: 1557, column: 17, scope: !4991)
!4994 = !DILocation(line: 1558, column: 4, scope: !4991)
!4995 = !DILocation(line: 0, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4997, file: !2268, line: 1560, column: 8)
!4997 = distinct !DILexicalBlock(scope: !4998, file: !2268, line: 1559, column: 45)
!4998 = distinct !DILexicalBlock(scope: !4966, file: !2268, line: 1559, column: 14)
!4999 = !DILocation(line: 1566, column: 17, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !5001, file: !2268, line: 1565, column: 46)
!5001 = distinct !DILexicalBlock(scope: !4998, file: !2268, line: 1565, column: 14)
!5002 = !DILocation(line: 1566, column: 15, scope: !5000)
!5003 = !DILocation(line: 1567, column: 3, scope: !5000)
!5004 = !DILocation(line: 1574, column: 21, scope: !4833)
!5005 = !DILocation(line: 1575, column: 4, scope: !4831)
!5006 = !DILocation(line: 0, scope: !4831)
!5007 = !DILocation(line: 1575, column: 4, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4831, file: !2268, line: 1575, column: 4)
!5009 = !DILocation(line: 1582, column: 17, scope: !4767)
!5010 = !DILocation(line: 1582, column: 3, scope: !4767)
!5011 = !DILocation(line: 1584, column: 4, scope: !4835)
!5012 = !DILocation(line: 0, scope: !4835)
!5013 = !DILocation(line: 1584, column: 4, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4835, file: !2268, line: 1584, column: 4)
!5015 = !DILocation(line: 1587, column: 31, scope: !4838)
!5016 = !DILocation(line: 1591, column: 18, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4838, file: !2268, line: 1591, column: 8)
!5018 = !DILocation(line: 1591, column: 8, scope: !4838)
!5019 = !DILocation(line: 1592, column: 11, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5017, file: !2268, line: 1591, column: 24)
!5021 = !DILocation(line: 0, scope: !4838)
!5022 = !DILocation(line: 1593, column: 4, scope: !5020)
!5023 = !DILocation(line: 1594, column: 11, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5017, file: !2268, line: 1593, column: 11)
!5025 = !DILocation(line: 1604, column: 51, scope: !4836)
!5026 = !DILocation(line: 1604, column: 13, scope: !4836)
!5027 = !DILocation(line: 1604, column: 11, scope: !4836)
!5028 = !DILocation(line: 1606, column: 4, scope: !4836)
!5029 = !DILocation(line: 1609, column: 14, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !4836, file: !2268, line: 1609, column: 8)
!5031 = !DILocation(line: 1609, column: 8, scope: !4836)
!5032 = !DILocation(line: 1619, column: 18, scope: !4836)
!5033 = !DILocation(line: 1620, column: 13, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4836, file: !2268, line: 1620, column: 8)
!5035 = !DILocation(line: 1620, column: 8, scope: !4836)
!5036 = !DILocation(line: 1622, column: 36, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5034, file: !2268, line: 1620, column: 18)
!5038 = !DILocation(line: 1622, column: 17, scope: !5037)
!5039 = !DILocation(line: 1623, column: 4, scope: !5037)
!5040 = !DILocation(line: 1632, column: 29, scope: !4836)
!5041 = !DILocation(line: 1632, column: 10, scope: !4836)
!5042 = !DILocation(line: 1632, column: 4, scope: !4836)
!5043 = !DILocation(line: 1407, column: 8, scope: !4767)
!5044 = !DILocation(line: 0, scope: !4836)
!5045 = !DILocation(line: 1634, column: 3, scope: !4836)
!5046 = !DILocation(line: 1640, column: 18, scope: !4841)
!5047 = !DILocation(line: 1640, column: 8, scope: !4836)
!5048 = !DILocation(line: 1729, column: 13, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1729, column: 7)
!5050 = !DILocation(line: 1641, column: 22, scope: !4840)
!5051 = !DILocation(line: 0, scope: !4840)
!5052 = !DILocation(line: 1646, column: 21, scope: !4840)
!5053 = !DILocation(line: 1649, column: 13, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !4840, file: !2268, line: 1649, column: 9)
!5055 = !DILocation(line: 1649, column: 9, scope: !4840)
!5056 = !DILocation(line: 1650, column: 35, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5054, file: !2268, line: 1649, column: 34)
!5058 = !DILocation(line: 1650, column: 23, scope: !5057)
!5059 = !DILocation(line: 1651, column: 5, scope: !5057)
!5060 = !DILocation(line: 1660, column: 15, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !4836, file: !2268, line: 1660, column: 8)
!5062 = !DILocation(line: 1660, column: 19, scope: !5061)
!5063 = !DILocation(line: 1660, column: 8, scope: !4836)
!5064 = !DILocation(line: 1661, column: 23, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5061, file: !2268, line: 1660, column: 28)
!5066 = !DILocation(line: 1661, column: 11, scope: !5065)
!5067 = !DILocation(line: 1665, column: 22, scope: !5065)
!5068 = !DILocation(line: 1666, column: 21, scope: !5065)
!5069 = !DILocation(line: 1668, column: 5, scope: !5065)
!5070 = !DILocation(line: 1677, column: 30, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5072, file: !2268, line: 1676, column: 49)
!5072 = distinct !DILexicalBlock(scope: !4836, file: !2268, line: 1676, column: 8)
!5073 = !DILocation(line: 1677, column: 5, scope: !5071)
!5074 = !DILocation(line: 1680, column: 4, scope: !4836)
!5075 = !DILocation(line: 0, scope: !5017)
!5076 = !DILocation(line: 1597, column: 14, scope: !4838)
!5077 = !DILocation(line: 1699, column: 11, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1699, column: 7)
!5079 = !DILocation(line: 1699, column: 7, scope: !4767)
!5080 = !DILocation(line: 1725, column: 7, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1725, column: 7)
!5082 = !DILocation(line: 1725, column: 12, scope: !5081)
!5083 = !DILocation(line: 1747, column: 13, scope: !4848)
!5084 = !DILocation(line: 1747, column: 7, scope: !4767)
!5085 = !DILocation(line: 1722, column: 24, scope: !4767)
!5086 = !DILocation(line: 1725, column: 7, scope: !4767)
!5087 = !DILocation(line: 1729, column: 7, scope: !4767)
!5088 = !DILocation(line: 1736, column: 13, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !4767, file: !2268, line: 1736, column: 7)
!5090 = !DILocation(line: 1735, column: 19, scope: !4767)
!5091 = !DILocation(line: 1736, column: 7, scope: !4767)
!5092 = !DILocation(line: 1748, column: 10, scope: !4847)
!5093 = !DILocation(line: 1750, column: 15, scope: !4846)
!5094 = !DILocation(line: 1750, column: 8, scope: !4847)
!5095 = !DILocation(line: 0, scope: !4845)
!5096 = !DILocation(line: 1756, column: 15, scope: !4854)
!5097 = !DILocation(line: 1756, column: 9, scope: !4845)
!5098 = !DILocation(line: 1758, column: 7, scope: !4850)
!5099 = !DILocation(line: 0, scope: !4850)
!5100 = !DILocation(line: 1758, column: 7, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !4850, file: !2268, line: 1758, column: 7)
!5102 = !DILocation(line: 1764, column: 5, scope: !4845)
!5103 = !DILocation(line: 0, scope: !4847)
!5104 = !DILocation(line: 1764, column: 20, scope: !4845)
!5105 = !DILocation(line: 1764, column: 17, scope: !4845)
!5106 = !DILocation(line: 1765, column: 6, scope: !4856)
!5107 = !DILocation(line: 0, scope: !4856)
!5108 = !DILocation(line: 1765, column: 6, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !4856, file: !2268, line: 1765, column: 6)
!5110 = distinct !{!5110, !5102, !5111}
!5111 = !DILocation(line: 1766, column: 5, scope: !4845)
!5112 = !DILocation(line: 1773, column: 12, scope: !4861)
!5113 = !DILocation(line: 1773, column: 7, scope: !4767)
!5114 = !DILocation(line: 1773, column: 7, scope: !4861)
!5115 = !DILocation(line: 1774, column: 4, scope: !4859)
!5116 = !DILocation(line: 0, scope: !4859)
!5117 = !DILocation(line: 1774, column: 4, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !4859, file: !2268, line: 1774, column: 4)
!5119 = !DILocation(line: 1818, column: 8, scope: !4865)
!5120 = !DILocation(line: 1818, column: 27, scope: !4865)
!5121 = !DILocation(line: 1818, column: 25, scope: !4865)
!5122 = !DILocation(line: 1818, column: 8, scope: !4866)
!5123 = !DILocation(line: 1819, column: 5, scope: !4863)
!5124 = !DILocation(line: 0, scope: !4863)
!5125 = !DILocation(line: 1819, column: 5, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !4863, file: !2268, line: 1819, column: 5)
!5127 = !DILocation(line: 1822, column: 14, scope: !4871)
!5128 = !DILocation(line: 1822, column: 8, scope: !4866)
!5129 = !DILocation(line: 1823, column: 5, scope: !4869)
!5130 = !DILocation(line: 0, scope: !4869)
!5131 = !DILocation(line: 1823, column: 5, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !4869, file: !2268, line: 1823, column: 5)
!5133 = !DILocation(line: 1826, column: 20, scope: !4866)
!5134 = !DILocation(line: 1827, column: 4, scope: !4866)
!5135 = !DILocation(line: 0, scope: !4866)
!5136 = !DILocation(line: 1827, column: 21, scope: !4866)
!5137 = !DILocation(line: 1827, column: 18, scope: !4866)
!5138 = !DILocation(line: 1828, column: 5, scope: !4873)
!5139 = !DILocation(line: 0, scope: !4873)
!5140 = !DILocation(line: 1828, column: 5, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !4873, file: !2268, line: 1828, column: 5)
!5142 = distinct !{!5142, !5134, !5143}
!5143 = !DILocation(line: 1829, column: 4, scope: !4866)
!5144 = !DILocation(line: 1831, column: 4, scope: !4876)
!5145 = !DILocation(line: 0, scope: !4876)
!5146 = !DILocation(line: 1831, column: 4, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !4876, file: !2268, line: 1831, column: 4)
!5148 = !DILocation(line: 1835, column: 16, scope: !4767)
!5149 = !DILocation(line: 1835, column: 3, scope: !4767)
!5150 = !DILocation(line: 1836, column: 4, scope: !4878)
!5151 = !DILocation(line: 0, scope: !4878)
!5152 = !DILocation(line: 1836, column: 4, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !4878, file: !2268, line: 1836, column: 4)
!5154 = !DILocation(line: 1837, column: 4, scope: !4879)
!5155 = distinct !{!5155, !5149, !5156}
!5156 = !DILocation(line: 1838, column: 3, scope: !4767)
!5157 = !DILocation(line: 1844, column: 1, scope: !4740)
!5158 = distinct !DISubprogram(name: "extract_conversion", scope: !2268, file: !2268, line: 642, type: !5159, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5161)
!5159 = !DISubroutineType(types: !5160)
!5160 = !{!212, !4815, !212}
!5161 = !{!5162, !5163}
!5162 = !DILocalVariable(name: "conv", arg: 1, scope: !5158, file: !2268, line: 642, type: !4815)
!5163 = !DILocalVariable(name: "sp", arg: 2, scope: !5158, file: !2268, line: 643, type: !212)
!5164 = !DILocation(line: 0, scope: !5158)
!5165 = !DILocation(line: 645, column: 10, scope: !5158)
!5166 = !DILocation(line: 653, column: 2, scope: !5158)
!5167 = !DILocation(line: 654, column: 6, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5158, file: !2268, line: 654, column: 6)
!5169 = !DILocation(line: 654, column: 10, scope: !5168)
!5170 = !DILocation(line: 654, column: 6, scope: !5158)
!5171 = !DILocation(line: 655, column: 24, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5168, file: !2268, line: 654, column: 18)
!5173 = !DILocation(line: 655, column: 19, scope: !5172)
!5174 = !DILocation(line: 656, column: 3, scope: !5172)
!5175 = !DILocation(line: 659, column: 7, scope: !5158)
!5176 = !DILocation(line: 660, column: 7, scope: !5158)
!5177 = !DILocation(line: 661, column: 7, scope: !5158)
!5178 = !DILocation(line: 662, column: 7, scope: !5158)
!5179 = !DILocation(line: 663, column: 7, scope: !5158)
!5180 = !DILocation(line: 665, column: 2, scope: !5158)
!5181 = !DILocation(line: 666, column: 1, scope: !5158)
!5182 = distinct !DISubprogram(name: "outs", scope: !2268, file: !2268, line: 1319, type: !5183, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5185)
!5183 = !DISubroutineType(types: !5184)
!5184 = !{!103, !2992, !102, !212, !212}
!5185 = !{!5186, !5187, !5188, !5189, !5190, !5191}
!5186 = !DILocalVariable(name: "out", arg: 1, scope: !5182, file: !2268, line: 1319, type: !2992)
!5187 = !DILocalVariable(name: "ctx", arg: 2, scope: !5182, file: !2268, line: 1320, type: !102)
!5188 = !DILocalVariable(name: "sp", arg: 3, scope: !5182, file: !2268, line: 1321, type: !212)
!5189 = !DILocalVariable(name: "ep", arg: 4, scope: !5182, file: !2268, line: 1322, type: !212)
!5190 = !DILocalVariable(name: "count", scope: !5182, file: !2268, line: 1324, type: !120)
!5191 = !DILocalVariable(name: "rc", scope: !5192, file: !2268, line: 1327, type: !103)
!5192 = distinct !DILexicalBlock(scope: !5182, file: !2268, line: 1326, column: 45)
!5193 = !DILocation(line: 0, scope: !5182)
!5194 = !DILocation(line: 1326, column: 2, scope: !5182)
!5195 = !DILocation(line: 1324, column: 9, scope: !5182)
!5196 = !DILocation(line: 1326, column: 13, scope: !5182)
!5197 = !DILocation(line: 1326, column: 19, scope: !5182)
!5198 = !DILocation(line: 1327, column: 21, scope: !5192)
!5199 = !DILocation(line: 1326, column: 36, scope: !5182)
!5200 = !DILocation(line: 1326, column: 39, scope: !5182)
!5201 = !DILocation(line: 1327, column: 24, scope: !5192)
!5202 = !DILocation(line: 1327, column: 16, scope: !5192)
!5203 = !DILocation(line: 1327, column: 12, scope: !5192)
!5204 = !DILocation(line: 0, scope: !5192)
!5205 = !DILocation(line: 1329, column: 10, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5192, file: !2268, line: 1329, column: 7)
!5207 = !DILocation(line: 1329, column: 7, scope: !5192)
!5208 = distinct !{!5208, !5194, !5209}
!5209 = !DILocation(line: 1333, column: 2, scope: !5182)
!5210 = !DILocation(line: 1336, column: 1, scope: !5182)
!5211 = distinct !DISubprogram(name: "encode_uint", scope: !2268, file: !2268, line: 788, type: !5212, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5214)
!5212 = !DISubroutineType(types: !5213)
!5213 = !{!1062, !2290, !4815, !1062, !212}
!5214 = !{!5215, !5216, !5217, !5218, !5219, !5220, !5222, !5223}
!5215 = !DILocalVariable(name: "value", arg: 1, scope: !5211, file: !2268, line: 788, type: !2290)
!5216 = !DILocalVariable(name: "conv", arg: 2, scope: !5211, file: !2268, line: 789, type: !4815)
!5217 = !DILocalVariable(name: "bps", arg: 3, scope: !5211, file: !2268, line: 790, type: !1062)
!5218 = !DILocalVariable(name: "bpe", arg: 4, scope: !5211, file: !2268, line: 791, type: !212)
!5219 = !DILocalVariable(name: "upcase", scope: !5211, file: !2268, line: 793, type: !224)
!5220 = !DILocalVariable(name: "radix", scope: !5211, file: !2268, line: 794, type: !5221)
!5221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5222 = !DILocalVariable(name: "bp", scope: !5211, file: !2268, line: 795, type: !1062)
!5223 = !DILocalVariable(name: "lsv", scope: !5224, file: !2268, line: 798, type: !32)
!5224 = distinct !DILexicalBlock(scope: !5211, file: !2268, line: 797, column: 5)
!5225 = !DILocation(line: 0, scope: !5211)
!5226 = !DILocation(line: 793, column: 35, scope: !5211)
!5227 = !DILocation(line: 793, column: 24, scope: !5211)
!5228 = !DILocation(line: 793, column: 16, scope: !5211)
!5229 = !DILocation(line: 794, column: 29, scope: !5211)
!5230 = !DILocation(line: 795, column: 24, scope: !5211)
!5231 = !DILocation(line: 795, column: 17, scope: !5211)
!5232 = !DILocation(line: 797, column: 2, scope: !5211)
!5233 = !DILocation(line: 802, column: 9, scope: !5224)
!5234 = !DILocation(line: 798, column: 22, scope: !5224)
!5235 = !DILocation(line: 0, scope: !5224)
!5236 = !DILocation(line: 800, column: 16, scope: !5224)
!5237 = !DILocation(line: 800, column: 11, scope: !5224)
!5238 = !DILocation(line: 800, column: 4, scope: !5224)
!5239 = !DILocation(line: 800, column: 9, scope: !5224)
!5240 = !DILocation(line: 803, column: 18, scope: !5211)
!5241 = !DILocation(line: 803, column: 24, scope: !5211)
!5242 = !DILocation(line: 803, column: 2, scope: !5224)
!5243 = distinct !{!5243, !5232, !5244}
!5244 = !DILocation(line: 803, column: 37, scope: !5211)
!5245 = !DILocation(line: 808, column: 12, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5211, file: !2268, line: 808, column: 6)
!5247 = !DILocation(line: 808, column: 6, scope: !5211)
!5248 = !DILocation(line: 809, column: 7, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5246, file: !2268, line: 808, column: 23)
!5250 = !DILocation(line: 813, column: 3, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5252, file: !2268, line: 811, column: 27)
!5252 = distinct !DILexicalBlock(scope: !5253, file: !2268, line: 811, column: 14)
!5253 = distinct !DILexicalBlock(scope: !5249, file: !2268, line: 809, column: 7)
!5254 = !DILocation(line: 0, scope: !5253)
!5255 = !DILocation(line: 818, column: 2, scope: !5211)
!5256 = distinct !DISubprogram(name: "store_count", scope: !2268, file: !2268, line: 1280, type: !5257, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5261)
!5257 = !DISubroutineType(types: !5258)
!5258 = !{null, !5259, !102, !103}
!5259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5260, size: 32)
!5260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4782)
!5261 = !{!5262, !5263, !5264}
!5262 = !DILocalVariable(name: "conv", arg: 1, scope: !5256, file: !2268, line: 1280, type: !5259)
!5263 = !DILocalVariable(name: "dp", arg: 2, scope: !5256, file: !2268, line: 1281, type: !102)
!5264 = !DILocalVariable(name: "count", arg: 3, scope: !5256, file: !2268, line: 1282, type: !103)
!5265 = !DILocation(line: 0, scope: !5256)
!5266 = !DILocation(line: 1284, column: 38, scope: !5256)
!5267 = !DILocation(line: 1284, column: 2, scope: !5256)
!5268 = !DILocation(line: 1286, column: 4, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5256, file: !2268, line: 1284, column: 50)
!5270 = !DILocation(line: 1286, column: 14, scope: !5269)
!5271 = !DILocation(line: 1287, column: 3, scope: !5269)
!5272 = !DILocation(line: 1289, column: 24, scope: !5269)
!5273 = !DILocation(line: 1289, column: 22, scope: !5269)
!5274 = !DILocation(line: 1290, column: 3, scope: !5269)
!5275 = !DILocation(line: 1292, column: 18, scope: !5269)
!5276 = !DILocation(line: 1292, column: 4, scope: !5269)
!5277 = !DILocation(line: 1292, column: 16, scope: !5269)
!5278 = !DILocation(line: 1293, column: 3, scope: !5269)
!5279 = !DILocation(line: 1295, column: 4, scope: !5269)
!5280 = !DILocation(line: 1295, column: 15, scope: !5269)
!5281 = !DILocation(line: 1296, column: 3, scope: !5269)
!5282 = !DILocation(line: 1298, column: 22, scope: !5269)
!5283 = !DILocation(line: 1298, column: 4, scope: !5269)
!5284 = !DILocation(line: 1298, column: 20, scope: !5269)
!5285 = !DILocation(line: 1299, column: 3, scope: !5269)
!5286 = !DILocation(line: 1301, column: 21, scope: !5269)
!5287 = !DILocation(line: 1301, column: 4, scope: !5269)
!5288 = !DILocation(line: 1301, column: 19, scope: !5269)
!5289 = !DILocation(line: 1302, column: 3, scope: !5269)
!5290 = !DILocation(line: 1304, column: 4, scope: !5269)
!5291 = !DILocation(line: 1304, column: 17, scope: !5269)
!5292 = !DILocation(line: 1305, column: 3, scope: !5269)
!5293 = !DILocation(line: 1307, column: 4, scope: !5269)
!5294 = !DILocation(line: 1307, column: 20, scope: !5269)
!5295 = !DILocation(line: 1308, column: 3, scope: !5269)
!5296 = !DILocation(line: 1316, column: 1, scope: !5256)
!5297 = distinct !DISubprogram(name: "isupper", scope: !5298, file: !5298, line: 16, type: !129, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5299)
!5298 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5299 = !{!5300}
!5300 = !DILocalVariable(name: "a", arg: 1, scope: !5297, file: !5298, line: 16, type: !103)
!5301 = !DILocation(line: 0, scope: !5297)
!5302 = !DILocation(line: 18, column: 29, scope: !5297)
!5303 = !DILocation(line: 18, column: 45, scope: !5297)
!5304 = !DILocation(line: 18, column: 2, scope: !5297)
!5305 = distinct !DISubprogram(name: "conversion_radix", scope: !2268, file: !2268, line: 761, type: !5306, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5308)
!5306 = !DISubroutineType(types: !5307)
!5307 = !{!120, !109}
!5308 = !{!5309}
!5309 = !DILocalVariable(name: "specifier", arg: 1, scope: !5305, file: !2268, line: 761, type: !109)
!5310 = !DILocation(line: 0, scope: !5305)
!5311 = !DILocation(line: 763, column: 2, scope: !5305)
!5312 = !DILocation(line: 770, column: 3, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5305, file: !2268, line: 763, column: 21)
!5314 = !DILocation(line: 774, column: 3, scope: !5313)
!5315 = !DILocation(line: 0, scope: !5313)
!5316 = !DILocation(line: 776, column: 1, scope: !5305)
!5317 = distinct !DISubprogram(name: "extract_flags", scope: !2268, file: !2268, line: 339, type: !5159, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5318)
!5318 = !{!5319, !5320, !5321}
!5319 = !DILocalVariable(name: "conv", arg: 1, scope: !5317, file: !2268, line: 339, type: !4815)
!5320 = !DILocalVariable(name: "sp", arg: 2, scope: !5317, file: !2268, line: 340, type: !212)
!5321 = !DILocalVariable(name: "loop", scope: !5317, file: !2268, line: 342, type: !224)
!5322 = !DILocation(line: 0, scope: !5317)
!5323 = !DILocation(line: 344, column: 2, scope: !5317)
!5324 = !DILocation(line: 345, column: 11, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5317, file: !2268, line: 344, column: 5)
!5326 = !DILocation(line: 345, column: 3, scope: !5325)
!5327 = !DILocation(line: 351, column: 4, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5325, file: !2268, line: 345, column: 16)
!5329 = !DILocation(line: 354, column: 4, scope: !5328)
!5330 = !DILocation(line: 357, column: 4, scope: !5328)
!5331 = !DILocation(line: 360, column: 4, scope: !5328)
!5332 = !DILocation(line: 0, scope: !5328)
!5333 = !DILocation(line: 370, column: 12, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5317, file: !2268, line: 370, column: 6)
!5335 = !DILocation(line: 370, column: 22, scope: !5334)
!5336 = !DILocation(line: 371, column: 19, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5334, file: !2268, line: 370, column: 42)
!5338 = !DILocation(line: 372, column: 2, scope: !5337)
!5339 = !DILocation(line: 376, column: 2, scope: !5317)
!5340 = distinct !DISubprogram(name: "extract_width", scope: !2268, file: !2268, line: 388, type: !5159, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5341)
!5341 = !{!5342, !5343, !5344, !5345}
!5342 = !DILocalVariable(name: "conv", arg: 1, scope: !5340, file: !2268, line: 388, type: !4815)
!5343 = !DILocalVariable(name: "sp", arg: 2, scope: !5340, file: !2268, line: 389, type: !212)
!5344 = !DILocalVariable(name: "wp", scope: !5340, file: !2268, line: 398, type: !212)
!5345 = !DILocalVariable(name: "width", scope: !5340, file: !2268, line: 399, type: !120)
!5346 = !DILocation(line: 0, scope: !5340)
!5347 = !DILocation(line: 391, column: 8, scope: !5340)
!5348 = !DILocation(line: 391, column: 22, scope: !5340)
!5349 = !DILocation(line: 393, column: 6, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5340, file: !2268, line: 393, column: 6)
!5351 = !DILocation(line: 393, column: 10, scope: !5350)
!5352 = !DILocation(line: 393, column: 6, scope: !5340)
!5353 = !DILocation(line: 394, column: 20, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5350, file: !2268, line: 393, column: 18)
!5355 = !DILocation(line: 395, column: 10, scope: !5354)
!5356 = !DILocation(line: 395, column: 3, scope: !5354)
!5357 = !DILocation(line: 399, column: 17, scope: !5340)
!5358 = !DILocation(line: 401, column: 6, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5340, file: !2268, line: 401, column: 6)
!5360 = !DILocation(line: 401, column: 9, scope: !5359)
!5361 = !DILocation(line: 401, column: 6, scope: !5340)
!5362 = !DILocation(line: 402, column: 23, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5359, file: !2268, line: 401, column: 16)
!5364 = !DILocation(line: 403, column: 9, scope: !5363)
!5365 = !DILocation(line: 403, column: 21, scope: !5363)
!5366 = !DILocation(line: 405, column: 11, scope: !5363)
!5367 = !DILocation(line: 404, column: 21, scope: !5363)
!5368 = !DILocation(line: 406, column: 2, scope: !5363)
!5369 = !DILocation(line: 409, column: 1, scope: !5340)
!5370 = distinct !DISubprogram(name: "extract_prec", scope: !2268, file: !2268, line: 420, type: !5159, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5371)
!5371 = !{!5372, !5373, !5374}
!5372 = !DILocalVariable(name: "conv", arg: 1, scope: !5370, file: !2268, line: 420, type: !4815)
!5373 = !DILocalVariable(name: "sp", arg: 2, scope: !5370, file: !2268, line: 421, type: !212)
!5374 = !DILocalVariable(name: "prec", scope: !5370, file: !2268, line: 435, type: !120)
!5375 = !DILocation(line: 0, scope: !5370)
!5376 = !DILocation(line: 423, column: 24, scope: !5370)
!5377 = !DILocation(line: 423, column: 28, scope: !5370)
!5378 = !DILocation(line: 423, column: 8, scope: !5370)
!5379 = !DILocation(line: 423, column: 21, scope: !5370)
!5380 = !DILocation(line: 425, column: 6, scope: !5370)
!5381 = !DILocation(line: 428, column: 2, scope: !5370)
!5382 = !DILocation(line: 430, column: 6, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5370, file: !2268, line: 430, column: 6)
!5384 = !DILocation(line: 430, column: 10, scope: !5383)
!5385 = !DILocation(line: 430, column: 6, scope: !5370)
!5386 = !DILocation(line: 431, column: 19, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5383, file: !2268, line: 430, column: 18)
!5388 = !DILocation(line: 432, column: 10, scope: !5387)
!5389 = !DILocation(line: 432, column: 3, scope: !5387)
!5390 = !DILocation(line: 435, column: 16, scope: !5370)
!5391 = !DILocation(line: 437, column: 8, scope: !5370)
!5392 = !DILocation(line: 437, column: 19, scope: !5370)
!5393 = !DILocation(line: 439, column: 10, scope: !5370)
!5394 = !DILocation(line: 438, column: 20, scope: !5370)
!5395 = !DILocation(line: 441, column: 9, scope: !5370)
!5396 = !DILocation(line: 442, column: 1, scope: !5370)
!5397 = distinct !DISubprogram(name: "extract_length", scope: !2268, file: !2268, line: 453, type: !5159, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5398)
!5398 = !{!5399, !5400}
!5399 = !DILocalVariable(name: "conv", arg: 1, scope: !5397, file: !2268, line: 453, type: !4815)
!5400 = !DILocalVariable(name: "sp", arg: 2, scope: !5397, file: !2268, line: 454, type: !212)
!5401 = !DILocation(line: 0, scope: !5397)
!5402 = !DILocation(line: 456, column: 10, scope: !5397)
!5403 = !DILocation(line: 456, column: 2, scope: !5397)
!5404 = !DILocation(line: 458, column: 8, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5406, file: !2268, line: 458, column: 7)
!5406 = distinct !DILexicalBlock(scope: !5397, file: !2268, line: 456, column: 15)
!5407 = !DILocation(line: 458, column: 7, scope: !5405)
!5408 = !DILocation(line: 458, column: 13, scope: !5405)
!5409 = !DILocation(line: 0, scope: !5405)
!5410 = !DILocation(line: 458, column: 7, scope: !5406)
!5411 = !DILocation(line: 459, column: 21, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5405, file: !2268, line: 458, column: 21)
!5413 = !DILocation(line: 460, column: 4, scope: !5412)
!5414 = !DILocation(line: 461, column: 3, scope: !5412)
!5415 = !DILocation(line: 462, column: 21, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5405, file: !2268, line: 461, column: 10)
!5417 = !DILocation(line: 466, column: 8, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5406, file: !2268, line: 466, column: 7)
!5419 = !DILocation(line: 466, column: 7, scope: !5418)
!5420 = !DILocation(line: 466, column: 13, scope: !5418)
!5421 = !DILocation(line: 0, scope: !5418)
!5422 = !DILocation(line: 466, column: 7, scope: !5406)
!5423 = !DILocation(line: 467, column: 21, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5418, file: !2268, line: 466, column: 21)
!5425 = !DILocation(line: 468, column: 4, scope: !5424)
!5426 = !DILocation(line: 469, column: 3, scope: !5424)
!5427 = !DILocation(line: 470, column: 21, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5418, file: !2268, line: 469, column: 10)
!5429 = !DILocation(line: 474, column: 9, scope: !5406)
!5430 = !DILocation(line: 474, column: 20, scope: !5406)
!5431 = !DILocation(line: 475, column: 3, scope: !5406)
!5432 = !DILocation(line: 476, column: 3, scope: !5406)
!5433 = !DILocation(line: 478, column: 9, scope: !5406)
!5434 = !DILocation(line: 478, column: 20, scope: !5406)
!5435 = !DILocation(line: 479, column: 3, scope: !5406)
!5436 = !DILocation(line: 480, column: 3, scope: !5406)
!5437 = !DILocation(line: 482, column: 9, scope: !5406)
!5438 = !DILocation(line: 482, column: 20, scope: !5406)
!5439 = !DILocation(line: 483, column: 3, scope: !5406)
!5440 = !DILocation(line: 484, column: 3, scope: !5406)
!5441 = !DILocation(line: 486, column: 9, scope: !5406)
!5442 = !DILocation(line: 486, column: 20, scope: !5406)
!5443 = !DILocation(line: 487, column: 3, scope: !5406)
!5444 = !DILocation(line: 492, column: 21, scope: !5406)
!5445 = !DILocation(line: 493, column: 3, scope: !5406)
!5446 = !DILocation(line: 495, column: 9, scope: !5406)
!5447 = !DILocation(line: 495, column: 20, scope: !5406)
!5448 = !DILocation(line: 496, column: 3, scope: !5406)
!5449 = !DILocation(line: 498, column: 2, scope: !5397)
!5450 = distinct !DISubprogram(name: "extract_specifier", scope: !2268, file: !2268, line: 513, type: !5159, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5451)
!5451 = !{!5452, !5453, !5454, !5455}
!5452 = !DILocalVariable(name: "conv", arg: 1, scope: !5450, file: !2268, line: 513, type: !4815)
!5453 = !DILocalVariable(name: "sp", arg: 2, scope: !5450, file: !2268, line: 514, type: !212)
!5454 = !DILocalVariable(name: "unsupported", scope: !5450, file: !2268, line: 516, type: !224)
!5455 = !DILabel(scope: !5456, name: "int_conv", file: !2268, line: 526)
!5456 = distinct !DILexicalBlock(scope: !5450, file: !2268, line: 520, column: 27)
!5457 = !DILocation(line: 0, scope: !5450)
!5458 = !DILocation(line: 518, column: 20, scope: !5450)
!5459 = !DILocation(line: 518, column: 8, scope: !5450)
!5460 = !DILocation(line: 518, column: 18, scope: !5450)
!5461 = !DILocation(line: 520, column: 2, scope: !5450)
!5462 = !DILocation(line: 525, column: 3, scope: !5456)
!5463 = !DILocation(line: 0, scope: !5456)
!5464 = !DILocation(line: 526, column: 1, scope: !5456)
!5465 = !DILocation(line: 528, column: 24, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5456, file: !2268, line: 528, column: 7)
!5467 = !DILocation(line: 528, column: 7, scope: !5456)
!5468 = !DILocation(line: 535, column: 23, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5456, file: !2268, line: 535, column: 7)
!5470 = !DILocation(line: 535, column: 7, scope: !5456)
!5471 = !DILocation(line: 536, column: 36, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5469, file: !2268, line: 535, column: 31)
!5473 = !DILocation(line: 537, column: 3, scope: !5472)
!5474 = !DILocation(line: 570, column: 9, scope: !5456)
!5475 = !DILocation(line: 570, column: 23, scope: !5456)
!5476 = !DILocation(line: 575, column: 4, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !2268, line: 573, column: 48)
!5478 = distinct !DILexicalBlock(scope: !5456, file: !2268, line: 573, column: 7)
!5479 = !DILocation(line: 603, column: 9, scope: !5456)
!5480 = !DILocation(line: 603, column: 23, scope: !5456)
!5481 = !DILocation(line: 605, column: 24, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5456, file: !2268, line: 605, column: 7)
!5483 = !DILocation(line: 605, column: 7, scope: !5456)
!5484 = !DILocation(line: 612, column: 9, scope: !5456)
!5485 = !DILocation(line: 612, column: 23, scope: !5456)
!5486 = !DILocation(line: 619, column: 24, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5456, file: !2268, line: 619, column: 7)
!5488 = !DILocation(line: 619, column: 7, scope: !5456)
!5489 = !DILocation(line: 625, column: 9, scope: !5456)
!5490 = !DILocation(line: 625, column: 17, scope: !5456)
!5491 = !DILocation(line: 626, column: 3, scope: !5456)
!5492 = !DILocation(line: 629, column: 20, scope: !5450)
!5493 = !DILocation(line: 629, column: 8, scope: !5450)
!5494 = !DILocation(line: 518, column: 23, scope: !5450)
!5495 = !DILocation(line: 631, column: 2, scope: !5450)
!5496 = distinct !DISubprogram(name: "extract_decimal", scope: !2268, file: !2268, line: 318, type: !5497, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5500)
!5497 = !DISubroutineType(types: !5498)
!5498 = !{!120, !5499}
!5499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 32)
!5500 = !{!5501, !5502, !5503}
!5501 = !DILocalVariable(name: "str", arg: 1, scope: !5496, file: !2268, line: 318, type: !5499)
!5502 = !DILocalVariable(name: "sp", scope: !5496, file: !2268, line: 320, type: !212)
!5503 = !DILocalVariable(name: "val", scope: !5496, file: !2268, line: 321, type: !120)
!5504 = !DILocation(line: 0, scope: !5496)
!5505 = !DILocation(line: 320, column: 19, scope: !5496)
!5506 = !DILocation(line: 323, column: 37, scope: !5496)
!5507 = !DILocation(line: 323, column: 17, scope: !5496)
!5508 = !DILocation(line: 323, column: 9, scope: !5496)
!5509 = !DILocation(line: 323, column: 2, scope: !5496)
!5510 = !DILocation(line: 324, column: 13, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5496, file: !2268, line: 323, column: 43)
!5512 = !DILocation(line: 324, column: 24, scope: !5511)
!5513 = !DILocation(line: 324, column: 19, scope: !5511)
!5514 = !DILocation(line: 324, column: 27, scope: !5511)
!5515 = distinct !{!5515, !5509, !5516}
!5516 = !DILocation(line: 325, column: 2, scope: !5496)
!5517 = !DILocation(line: 326, column: 7, scope: !5496)
!5518 = !DILocation(line: 327, column: 2, scope: !5496)
!5519 = distinct !DISubprogram(name: "isdigit", scope: !5298, file: !5298, line: 43, type: !129, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !5520)
!5520 = !{!5521}
!5521 = !DILocalVariable(name: "a", arg: 1, scope: !5519, file: !5298, line: 43, type: !103)
!5522 = !DILocation(line: 0, scope: !5519)
!5523 = !DILocation(line: 45, column: 29, scope: !5519)
!5524 = !DILocation(line: 45, column: 45, scope: !5519)
!5525 = !DILocation(line: 45, column: 2, scope: !5519)
!5526 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5527, file: !5527, line: 9, type: !2794, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2302, retainedNodes: !162)
!5527 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!5528 = !DILocation(line: 11, column: 1, scope: !5526)
!5529 = !{i64 2147560509, i64 2147560552, i64 2147560592}
!5530 = !DILocation(line: 12, column: 1, scope: !5526)
!5531 = !{i64 2147564736, i64 2147564779, i64 2147564819}
!5532 = !DILocation(line: 13, column: 1, scope: !5526)
!5533 = !{i64 2147564945, i64 2147564988, i64 2147565028}
!5534 = !DILocation(line: 14, column: 1, scope: !5526)
!5535 = !{i64 2147565114, i64 2147565157, i64 2147565197}
!5536 = !DILocation(line: 15, column: 1, scope: !5526)
!5537 = !{i64 2147565277, i64 2147565320, i64 2147565360}
!5538 = !DILocation(line: 16, column: 1, scope: !5526)
!5539 = !{i64 2147565461, i64 2147565504, i64 2147565544}
!5540 = !DILocation(line: 17, column: 1, scope: !5526)
!5541 = !{i64 2147565640, i64 2147565683, i64 2147565723}
!5542 = !DILocation(line: 18, column: 1, scope: !5526)
!5543 = !{i64 2147565882, i64 2147565925, i64 2147565965}
!5544 = !DILocation(line: 19, column: 1, scope: !5526)
!5545 = !{i64 2147566117, i64 2147566160, i64 2147566200}
!5546 = !DILocation(line: 20, column: 1, scope: !5526)
!5547 = !{i64 2147566303, i64 2147566346, i64 2147566386}
!5548 = !DILocation(line: 21, column: 1, scope: !5526)
!5549 = !{i64 2147566519, i64 2147566562, i64 2147566602}
!5550 = !DILocation(line: 22, column: 1, scope: !5526)
!5551 = !{i64 2147566722, i64 2147566765, i64 2147566805}
!5552 = !DILocation(line: 23, column: 1, scope: !5526)
!5553 = !{i64 2147566925, i64 2147566968, i64 2147567008}
!5554 = !DILocation(line: 24, column: 1, scope: !5526)
!5555 = !{i64 2147567100, i64 2147567143, i64 2147567183}
!5556 = !DILocation(line: 25, column: 1, scope: !5526)
!5557 = !{i64 2147567308, i64 2147567351, i64 2147567391}
!5558 = !DILocation(line: 26, column: 1, scope: !5526)
!5559 = !{i64 2147567512, i64 2147567555, i64 2147567595}
!5560 = !DILocation(line: 27, column: 1, scope: !5526)
!5561 = !{i64 2147567705, i64 2147567748, i64 2147567788}
!5562 = !DILocation(line: 28, column: 1, scope: !5526)
!5563 = !{i64 2147567907, i64 2147567950, i64 2147567990}
!5564 = !DILocation(line: 29, column: 1, scope: !5526)
!5565 = !{i64 2147568134, i64 2147568177, i64 2147568217}
!5566 = !DILocation(line: 30, column: 1, scope: !5526)
!5567 = !{i64 2147568336, i64 2147568379, i64 2147568419}
!5568 = !DILocation(line: 31, column: 1, scope: !5526)
!5569 = !{i64 2147568551, i64 2147568594, i64 2147568634}
!5570 = !DILocation(line: 32, column: 1, scope: !5526)
!5571 = !{i64 2147568723, i64 2147568766, i64 2147568806}
!5572 = !DILocation(line: 33, column: 1, scope: !5526)
!5573 = !{i64 2147568925, i64 2147568968, i64 2147569008}
!5574 = !DILocation(line: 34, column: 1, scope: !5526)
!5575 = !{i64 2147569151, i64 2147569194, i64 2147569234}
!5576 = !DILocation(line: 35, column: 1, scope: !5526)
!5577 = !{i64 2147569350, i64 2147569393, i64 2147569433}
!5578 = !DILocation(line: 36, column: 1, scope: !5526)
!5579 = !{i64 2147569525, i64 2147569568, i64 2147569608}
!5580 = !DILocation(line: 37, column: 1, scope: !5526)
!5581 = !{i64 2147569778, i64 2147569821, i64 2147569861}
!5582 = !DILocation(line: 38, column: 1, scope: !5526)
!5583 = !{i64 2147570016, i64 2147570059, i64 2147570099}
!5584 = !DILocation(line: 39, column: 1, scope: !5526)
!5585 = !{i64 2147570251, i64 2147570294, i64 2147570334}
!5586 = !DILocation(line: 40, column: 1, scope: !5526)
!5587 = !{i64 2147570483, i64 2147570526, i64 2147570566}
!5588 = !DILocation(line: 41, column: 1, scope: !5526)
!5589 = !{i64 2147570709, i64 2147570752, i64 2147570792}
!5590 = !DILocation(line: 42, column: 1, scope: !5526)
!5591 = !{i64 2147570968, i64 2147571011, i64 2147571051}
!5592 = !DILocation(line: 43, column: 1, scope: !5526)
!5593 = !{i64 2147571194, i64 2147571237, i64 2147571277}
!5594 = !DILocation(line: 44, column: 1, scope: !5526)
!5595 = !{i64 2147571435, i64 2147571478, i64 2147571518}
!5596 = !DILocation(line: 45, column: 1, scope: !5526)
!5597 = !{i64 2147571679, i64 2147571722, i64 2147571762}
!5598 = !DILocation(line: 46, column: 1, scope: !5526)
!5599 = !{i64 2147571920, i64 2147571963, i64 2147572003}
!5600 = !DILocation(line: 47, column: 1, scope: !5526)
!5601 = !{i64 2147572155, i64 2147572198, i64 2147572238}
!5602 = !DILocation(line: 48, column: 1, scope: !5526)
!5603 = !{i64 2147572381, i64 2147572424, i64 2147572464}
!5604 = !DILocation(line: 49, column: 1, scope: !5526)
!5605 = !{i64 2147572607, i64 2147572650, i64 2147572690}
!5606 = !DILocation(line: 50, column: 1, scope: !5526)
!5607 = !{i64 2147572851, i64 2147572894, i64 2147572934}
!5608 = !DILocation(line: 51, column: 1, scope: !5526)
!5609 = !{i64 2147573089, i64 2147573132, i64 2147573172}
!5610 = !DILocation(line: 52, column: 1, scope: !5526)
!5611 = !{i64 2147573363, i64 2147573406, i64 2147573446}
!5612 = !DILocation(line: 53, column: 1, scope: !5526)
!5613 = !{i64 2147577662, i64 2147577705, i64 2147577745}
!5614 = !DILocation(line: 54, column: 1, scope: !5526)
!5615 = !{i64 2147577906, i64 2147577949, i64 2147577989}
!5616 = !DILocation(line: 55, column: 1, scope: !5526)
!5617 = !{i64 2147578156, i64 2147578199, i64 2147578239}
!5618 = !DILocation(line: 56, column: 1, scope: !5526)
!5619 = !{i64 2147578403, i64 2147578446, i64 2147578486}
!5620 = !DILocation(line: 57, column: 1, scope: !5526)
!5621 = !{i64 2147578638, i64 2147578681, i64 2147578721}
!5622 = !DILocation(line: 58, column: 1, scope: !5526)
!5623 = !{i64 2147578873, i64 2147578916, i64 2147578956}
!5624 = !DILocation(line: 59, column: 1, scope: !5526)
!5625 = !{i64 2147579108, i64 2147579151, i64 2147579191}
!5626 = !DILocation(line: 60, column: 1, scope: !5526)
!5627 = !{i64 2147579346, i64 2147579389, i64 2147579429}
!5628 = !DILocation(line: 61, column: 1, scope: !5526)
!5629 = !{i64 2147579587, i64 2147579630, i64 2147579670}
!5630 = !DILocation(line: 62, column: 1, scope: !5526)
!5631 = !{i64 2147579846, i64 2147579889, i64 2147579929}
!5632 = !DILocation(line: 63, column: 1, scope: !5526)
!5633 = !{i64 2147580126, i64 2147580169, i64 2147580209}
!5634 = !DILocation(line: 64, column: 1, scope: !5526)
!5635 = !{i64 2147580355, i64 2147580398, i64 2147580438}
!5636 = !DILocation(line: 65, column: 1, scope: !5526)
!5637 = !{i64 2147580563, i64 2147580606, i64 2147580646}
!5638 = !DILocation(line: 66, column: 1, scope: !5526)
!5639 = !{i64 2147580774, i64 2147580817, i64 2147580857}
!5640 = !DILocation(line: 67, column: 1, scope: !5526)
!5641 = !{i64 2147581009, i64 2147581052, i64 2147581092}
!5642 = !DILocation(line: 68, column: 1, scope: !5526)
!5643 = !{i64 2147581238, i64 2147581281, i64 2147581321}
!5644 = !DILocation(line: 69, column: 1, scope: !5526)
!5645 = !{i64 2147581476, i64 2147581519, i64 2147581559}
!5646 = !DILocation(line: 70, column: 1, scope: !5526)
!5647 = !{i64 2147581708, i64 2147581751, i64 2147581791}
!5648 = !DILocation(line: 71, column: 1, scope: !5526)
!5649 = !{i64 2147581934, i64 2147581977, i64 2147582017}
!5650 = !DILocation(line: 72, column: 1, scope: !5526)
!5651 = !{i64 2147582151, i64 2147582194, i64 2147582234}
!5652 = !DILocation(line: 73, column: 1, scope: !5526)
!5653 = !{i64 2147582383, i64 2147582426, i64 2147582466}
!5654 = !DILocation(line: 74, column: 1, scope: !5526)
!5655 = !{i64 2147582609, i64 2147582652, i64 2147582692}
!5656 = !DILocation(line: 75, column: 1, scope: !5526)
!5657 = !{i64 2147582823, i64 2147582866, i64 2147582906}
!5658 = !DILocation(line: 76, column: 1, scope: !5526)
!5659 = !{i64 2147583043, i64 2147583086, i64 2147583126}
!5660 = !DILocation(line: 77, column: 1, scope: !5526)
!5661 = !{i64 2147583275, i64 2147583318, i64 2147583358}
!5662 = !DILocation(line: 78, column: 1, scope: !5526)
!5663 = !{i64 2147583483, i64 2147583526, i64 2147583566}
!5664 = !DILocation(line: 79, column: 1, scope: !5526)
!5665 = !{i64 2147583688, i64 2147583731, i64 2147583771}
!5666 = !DILocation(line: 80, column: 1, scope: !5526)
!5667 = !{i64 2147583905, i64 2147583948, i64 2147583988}
!5668 = !DILocation(line: 81, column: 1, scope: !5526)
!5669 = !{i64 2147584119, i64 2147584162, i64 2147584202}
!5670 = !DILocation(line: 82, column: 1, scope: !5526)
!5671 = !{i64 2147584345, i64 2147584388, i64 2147584428}
!5672 = !DILocation(line: 83, column: 1, scope: !5526)
!5673 = !{i64 2147584565, i64 2147584608, i64 2147584648}
!5674 = !DILocation(line: 84, column: 1, scope: !5526)
!5675 = !{i64 2147584770, i64 2147584813, i64 2147584853}
!5676 = !DILocation(line: 85, column: 1, scope: !5526)
!5677 = !{i64 2147585002, i64 2147585045, i64 2147585085}
!5678 = !DILocation(line: 86, column: 1, scope: !5526)
!5679 = !{i64 2147585237, i64 2147585280, i64 2147585320}
!5680 = !DILocation(line: 87, column: 1, scope: !5526)
!5681 = !{i64 2147585487, i64 2147585530, i64 2147585570}
!5682 = !DILocation(line: 88, column: 1, scope: !5526)
!5683 = !{i64 2147589798, i64 2147589841, i64 2147589881}
!5684 = !DILocation(line: 89, column: 1, scope: !5526)
!5685 = !{i64 2147590036, i64 2147590079, i64 2147590119}
!5686 = !DILocation(line: 90, column: 1, scope: !5526)
!5687 = !{i64 2147590247, i64 2147590290, i64 2147590330}
!5688 = !DILocation(line: 91, column: 1, scope: !5526)
!5689 = !{i64 2147590464, i64 2147590507, i64 2147590547}
!5690 = !DILocation(line: 92, column: 1, scope: !5526)
!5691 = !{i64 2147590660, i64 2147590703, i64 2147590743}
!5692 = !DILocation(line: 93, column: 1, scope: !5526)
!5693 = !{i64 2147590862, i64 2147590905, i64 2147590945}
!5694 = !DILocation(line: 94, column: 1, scope: !5526)
!5695 = !{i64 2147591055, i64 2147591098, i64 2147591138}
!5696 = !DILocation(line: 95, column: 1, scope: !5526)
!5697 = !{i64 2147591263, i64 2147591306, i64 2147591346}
!5698 = !DILocation(line: 96, column: 1, scope: !5526)
!5699 = !{i64 2147591459, i64 2147591502, i64 2147591542}
!5700 = !DILocation(line: 97, column: 1, scope: !5526)
!5701 = !{i64 2147591664, i64 2147591707, i64 2147591747}
!5702 = !DILocation(line: 98, column: 1, scope: !5526)
!5703 = !{i64 2147591875, i64 2147591918, i64 2147591958}
!5704 = !DILocation(line: 99, column: 1, scope: !5526)
!5705 = !{i64 2147592074, i64 2147592117, i64 2147592157}
!5706 = !DILocation(line: 100, column: 1, scope: !5526)
!5707 = !{i64 2147592249, i64 2147592292, i64 2147592332}
!5708 = !DILocation(line: 101, column: 1, scope: !5526)
!5709 = !{i64 2147592433, i64 2147592476, i64 2147592516}
!5710 = !DILocation(line: 102, column: 1, scope: !5526)
!5711 = !{i64 2147592635, i64 2147592678, i64 2147592718}
!5712 = !DILocation(line: 103, column: 1, scope: !5526)
!5713 = !{i64 2147592837, i64 2147592880, i64 2147592920}
!5714 = !DILocation(line: 104, column: 1, scope: !5526)
!5715 = !{i64 2147593003, i64 2147593046, i64 2147593086}
!5716 = !DILocation(line: 105, column: 1, scope: !5526)
!5717 = !{i64 2147593187, i64 2147593230, i64 2147593270}
!5718 = !DILocation(line: 106, column: 1, scope: !5526)
!5719 = !{i64 2147593377, i64 2147593420, i64 2147593460}
!5720 = !DILocation(line: 107, column: 1, scope: !5526)
!5721 = !{i64 2147593561, i64 2147593604, i64 2147593644}
!5722 = !DILocation(line: 108, column: 1, scope: !5526)
!5723 = !{i64 2147593775, i64 2147593818, i64 2147593858}
!5724 = !DILocation(line: 109, column: 1, scope: !5526)
!5725 = !{i64 2147593986, i64 2147594029, i64 2147594069}
!5726 = !DILocation(line: 110, column: 1, scope: !5526)
!5727 = !{i64 2147594209, i64 2147594252, i64 2147594292}
!5728 = !DILocation(line: 111, column: 1, scope: !5526)
!5729 = !{i64 2147594393, i64 2147594436, i64 2147594476}
!5730 = !DILocation(line: 112, column: 1, scope: !5526)
!5731 = !{i64 2147594607, i64 2147594650, i64 2147594690}
!5732 = !DILocation(line: 113, column: 1, scope: !5526)
!5733 = !{i64 2147594773, i64 2147594816, i64 2147594856}
!5734 = !DILocation(line: 114, column: 1, scope: !5526)
!5735 = !{i64 2147594954, i64 2147594997, i64 2147595037}
!5736 = !DILocation(line: 115, column: 1, scope: !5526)
!5737 = !{i64 2147595147, i64 2147595190, i64 2147595230}
!5738 = !DILocation(line: 116, column: 1, scope: !5526)
!5739 = !{i64 2147595373, i64 2147595416, i64 2147595456}
!5740 = !DILocation(line: 117, column: 1, scope: !5526)
!5741 = !{i64 2147595587, i64 2147595630, i64 2147595670}
!5742 = !DILocation(line: 118, column: 1, scope: !5526)
!5743 = !{i64 2147595813, i64 2147595856, i64 2147595896}
!5744 = !DILocation(line: 119, column: 1, scope: !5526)
!5745 = !{i64 2147596030, i64 2147596073, i64 2147596113}
!5746 = !DILocation(line: 120, column: 1, scope: !5526)
!5747 = !{i64 2147596307, i64 2147596350, i64 2147596390}
!5748 = !DILocation(line: 121, column: 1, scope: !5526)
!5749 = !{i64 2147596533, i64 2147596576, i64 2147596616}
!5750 = !DILocation(line: 122, column: 1, scope: !5526)
!5751 = !{i64 2147596729, i64 2147596772, i64 2147596812}
!5752 = !DILocation(line: 123, column: 1, scope: !5526)
!5753 = !{i64 2147596994, i64 2147597037, i64 2147597077}
!5754 = !DILocation(line: 124, column: 1, scope: !5526)
!5755 = !{i64 2147597208, i64 2147597251, i64 2147597291}
!5756 = !DILocation(line: 125, column: 1, scope: !5526)
!5757 = !{i64 2147597383, i64 2147597426, i64 2147597466}
!5758 = !DILocation(line: 126, column: 1, scope: !5526)
!5759 = !{i64 2147597637, i64 2147597680, i64 2147597720}
!5760 = !DILocation(line: 127, column: 1, scope: !5526)
!5761 = !{i64 2147597836, i64 2147597879, i64 2147597919}
!5762 = !DILocation(line: 128, column: 1, scope: !5526)
!5763 = !{i64 2147598078, i64 2147598121, i64 2147598161}
!5764 = !DILocation(line: 129, column: 1, scope: !5526)
!5765 = !{i64 2147598241, i64 2147598284, i64 2147598324}
!5766 = !DILocation(line: 130, column: 1, scope: !5526)
!5767 = !{i64 2147598428, i64 2147598471, i64 2147598511}
!5768 = !DILocation(line: 131, column: 1, scope: !5526)
!5769 = !{i64 2147598621, i64 2147598664, i64 2147598704}
!5770 = !DILocation(line: 132, column: 1, scope: !5526)
!5771 = !{i64 2147598803, i64 2147598846, i64 2147598886}
!5772 = !DILocation(line: 133, column: 1, scope: !5526)
!5773 = !{i64 2147603078, i64 2147603121, i64 2147603161}
!5774 = !DILocation(line: 134, column: 1, scope: !5526)
!5775 = !{i64 2147603289, i64 2147603332, i64 2147603372}
!5776 = !DILocation(line: 135, column: 1, scope: !5526)
!5777 = !{i64 2147603509, i64 2147603552, i64 2147603592}
!5778 = !DILocation(line: 136, column: 1, scope: !5526)
!5779 = !{i64 2147603716, i64 2147603759, i64 2147603799}
!5780 = !DILocation(line: 137, column: 1, scope: !5526)
!5781 = !{i64 2147603989, i64 2147604032, i64 2147604072}
!5782 = !DILocation(line: 138, column: 1, scope: !5526)
!5783 = !{i64 2147604237, i64 2147604280, i64 2147604320}
!5784 = !DILocation(line: 139, column: 1, scope: !5526)
!5785 = !{i64 2147604436, i64 2147604479, i64 2147604519}
!5786 = !DILocation(line: 140, column: 1, scope: !5526)
!5787 = !{i64 2147604671, i64 2147604714, i64 2147604754}
!5788 = !DILocation(line: 141, column: 1, scope: !5526)
!5789 = !{i64 2147604921, i64 2147604964, i64 2147605004}
!5790 = !DILocation(line: 142, column: 1, scope: !5526)
!5791 = !{i64 2147605123, i64 2147605166, i64 2147605206}
!5792 = !DILocation(line: 143, column: 1, scope: !5526)
!5793 = !{i64 2147605346, i64 2147605389, i64 2147605429}
!5794 = !DILocation(line: 144, column: 1, scope: !5526)
!5795 = !{i64 2147605560, i64 2147605603, i64 2147605643}
!5796 = !DILocation(line: 145, column: 1, scope: !5526)
!5797 = !{i64 2147605804, i64 2147605847, i64 2147605887}
!5798 = !DILocation(line: 146, column: 1, scope: !5526)
!5799 = !{i64 2147606033, i64 2147606076, i64 2147606116}
!5800 = !DILocation(line: 147, column: 1, scope: !5526)
!5801 = !{i64 2147606262, i64 2147606305, i64 2147606345}
!5802 = !DILocation(line: 148, column: 1, scope: !5526)
!5803 = !{i64 2147606470, i64 2147606513, i64 2147606553}
!5804 = !DILocation(line: 149, column: 1, scope: !5526)
!5805 = !{i64 2147606708, i64 2147606751, i64 2147606791}
!5806 = !DILocation(line: 150, column: 1, scope: !5526)
!5807 = !{i64 2147606934, i64 2147606977, i64 2147607017}
!5808 = !DILocation(line: 151, column: 1, scope: !5526)
!5809 = !{i64 2147607193, i64 2147607236, i64 2147607276}
!5810 = !DILocation(line: 152, column: 1, scope: !5526)
!5811 = !{i64 2147607413, i64 2147607456, i64 2147607496}
!5812 = !DILocation(line: 153, column: 1, scope: !5526)
!5813 = !{i64 2147607645, i64 2147607688, i64 2147607728}
!5814 = !DILocation(line: 154, column: 1, scope: !5526)
!5815 = !{i64 2147607886, i64 2147607929, i64 2147607969}
!5816 = !DILocation(line: 155, column: 1, scope: !5526)
!5817 = !{i64 2147608127, i64 2147608170, i64 2147608210}
!5818 = !DILocation(line: 156, column: 1, scope: !5526)
!5819 = !{i64 2147608350, i64 2147608393, i64 2147608433}
!5820 = !DILocation(line: 157, column: 1, scope: !5526)
!5821 = !{i64 2147608567, i64 2147608610, i64 2147608650}
!5822 = !DILocation(line: 158, column: 1, scope: !5526)
!5823 = !{i64 2147608808, i64 2147608851, i64 2147608891}
!5824 = !DILocation(line: 159, column: 1, scope: !5526)
!5825 = !{i64 2147608995, i64 2147609038, i64 2147609078}
!5826 = !DILocation(line: 160, column: 1, scope: !5526)
!5827 = !{i64 2147609158, i64 2147609201, i64 2147609241}
!5828 = !DILocation(line: 161, column: 1, scope: !5526)
!5829 = !{i64 2147609417, i64 2147609460, i64 2147609500}
!5830 = !DILocation(line: 162, column: 1, scope: !5526)
!5831 = !{i64 2147609640, i64 2147609683, i64 2147609723}
!5832 = !DILocation(line: 163, column: 1, scope: !5526)
!5833 = !{i64 2147609869, i64 2147609912, i64 2147609952}
!5834 = !DILocation(line: 164, column: 1, scope: !5526)
!5835 = !{i64 2147610065, i64 2147610108, i64 2147610148}
!5836 = !DILocation(line: 165, column: 1, scope: !5526)
!5837 = !{i64 2147610277, i64 2147610320, i64 2147610360}
!5838 = !DILocation(line: 166, column: 1, scope: !5526)
!5839 = !{i64 2147610498, i64 2147610541, i64 2147610581}
!5840 = !DILocation(line: 167, column: 1, scope: !5526)
!5841 = !{i64 2147610712, i64 2147610755, i64 2147610795}
!5842 = !DILocation(line: 168, column: 1, scope: !5526)
!5843 = !{i64 2147610902, i64 2147610945, i64 2147610985}
!5844 = !DILocation(line: 169, column: 1, scope: !5526)
!5845 = !{i64 2147611101, i64 2147611144, i64 2147611184}
!5846 = !DILocation(line: 170, column: 1, scope: !5526)
!5847 = !{i64 2147611306, i64 2147611349, i64 2147611389}
!5848 = !DILocation(line: 171, column: 1, scope: !5526)
!5849 = !{i64 2147615587, i64 2147615630, i64 2147615670}
!5850 = !DILocation(line: 172, column: 1, scope: !5526)
!5851 = !{i64 2147615788, i64 2147615831, i64 2147615871}
!5852 = !DILocation(line: 173, column: 1, scope: !5526)
!5853 = !{i64 2147615987, i64 2147616030, i64 2147616070}
!5854 = !DILocation(line: 174, column: 1, scope: !5526)
!5855 = !{i64 2147616192, i64 2147616235, i64 2147616275}
!5856 = !DILocation(line: 175, column: 1, scope: !5526)
!5857 = !{i64 2147616361, i64 2147616404, i64 2147616444}
!5858 = !DILocation(line: 176, column: 1, scope: !5526)
!5859 = !{i64 2147616545, i64 2147616588, i64 2147616628}
!5860 = !DILocation(line: 177, column: 1, scope: !5526)
!5861 = !{i64 2147616729, i64 2147616772, i64 2147616812}
!5862 = !DILocation(line: 178, column: 1, scope: !5526)
!5863 = !{i64 2147616916, i64 2147616959, i64 2147616999}
!5864 = !DILocation(line: 179, column: 1, scope: !5526)
!5865 = !{i64 2147617100, i64 2147617143, i64 2147617183}
!5866 = !DILocation(line: 180, column: 1, scope: !5526)
!5867 = !{i64 2147617338, i64 2147617381, i64 2147617421}
!5868 = !DILocation(line: 181, column: 1, scope: !5526)
!5869 = !{i64 2147617568, i64 2147617611, i64 2147617651}
!5870 = !DILocation(line: 182, column: 1, scope: !5526)
!5871 = !{i64 2147617797, i64 2147617840, i64 2147617880}
!5872 = !DILocation(line: 183, column: 1, scope: !5526)
!5873 = !{i64 2147617984, i64 2147618027, i64 2147618067}
!5874 = !DILocation(line: 184, column: 1, scope: !5526)
!5875 = !{i64 2147618180, i64 2147618223, i64 2147618263}
!5876 = !DILocation(line: 185, column: 1, scope: !5526)
!5877 = !{i64 2147618388, i64 2147618431, i64 2147618471}
!5878 = !DILocation(line: 186, column: 1, scope: !5526)
!5879 = !{i64 2147618600, i64 2147618643, i64 2147618683}
!5880 = !DILocation(line: 187, column: 1, scope: !5526)
!5881 = !{i64 2147618799, i64 2147618842, i64 2147618882}
!5882 = !DILocation(line: 188, column: 1, scope: !5526)
!5883 = !{i64 2147619037, i64 2147619080, i64 2147619120}
!5884 = !DILocation(line: 189, column: 1, scope: !5526)
!5885 = !{i64 2147619233, i64 2147619276, i64 2147619316}
!5886 = !DILocation(line: 190, column: 1, scope: !5526)
!5887 = !{i64 2147619435, i64 2147619478, i64 2147619518}
!5888 = !DILocation(line: 191, column: 1, scope: !5526)
!5889 = !{i64 2147619628, i64 2147619671, i64 2147619711}
!5890 = !DILocation(line: 192, column: 1, scope: !5526)
!5891 = !{i64 2147619862, i64 2147619905, i64 2147619945}
!5892 = !DILocation(line: 193, column: 1, scope: !5526)
!5893 = !{i64 2147620025, i64 2147620068, i64 2147620108}
!5894 = !DILocation(line: 194, column: 1, scope: !5526)
!5895 = !{i64 2147620264, i64 2147620307, i64 2147620347}
!5896 = !DILocation(line: 195, column: 1, scope: !5526)
!5897 = !{i64 2147620503, i64 2147620546, i64 2147620586}
!5898 = !DILocation(line: 196, column: 1, scope: !5526)
!5899 = !{i64 2147620739, i64 2147620782, i64 2147620822}
!5900 = !DILocation(line: 197, column: 1, scope: !5526)
!5901 = !{i64 2147620969, i64 2147621012, i64 2147621052}
!5902 = !DILocation(line: 198, column: 1, scope: !5526)
!5903 = !{i64 2147621156, i64 2147621199, i64 2147621239}
!5904 = !DILocation(line: 199, column: 1, scope: !5526)
!5905 = !{i64 2147621355, i64 2147621398, i64 2147621438}
!5906 = !DILocation(line: 200, column: 1, scope: !5526)
!5907 = !{i64 2147621626, i64 2147621669, i64 2147621709}
!5908 = !DILocation(line: 201, column: 1, scope: !5526)
!5909 = !{i64 2147621801, i64 2147621844, i64 2147621884}
!5910 = !DILocation(line: 202, column: 1, scope: !5526)
!5911 = !{i64 2147622035, i64 2147622078, i64 2147622118}
!5912 = !DILocation(line: 203, column: 1, scope: !5526)
!5913 = !{i64 2147622243, i64 2147622286, i64 2147622326}
!5914 = !DILocation(line: 204, column: 1, scope: !5526)
!5915 = !{i64 2147622461, i64 2147622504, i64 2147622544}
!5916 = !DILocation(line: 205, column: 1, scope: !5526)
!5917 = !{i64 2147622651, i64 2147622694, i64 2147622734}
!5918 = !DILocation(line: 206, column: 1, scope: !5526)
!5919 = !{i64 2147622847, i64 2147622890, i64 2147622930}
!5920 = !DILocation(line: 207, column: 1, scope: !5526)
!5921 = !{i64 2147623053, i64 2147623096, i64 2147623136}
!5922 = !DILocation(line: 208, column: 1, scope: !5526)
!5923 = !{i64 2147623258, i64 2147623301, i64 2147623341}
!5924 = !DILocation(line: 209, column: 1, scope: !5526)
!5925 = !{i64 2147623484, i64 2147623527, i64 2147623567}
!5926 = !DILocation(line: 210, column: 1, scope: !5526)
!5927 = !{i64 2147623716, i64 2147623759, i64 2147623799}
!5928 = !DILocation(line: 211, column: 1, scope: !5526)
!5929 = !{i64 2147623900, i64 2147623943, i64 2147623983}
!5930 = !DILocation(line: 212, column: 1, scope: !5526)
!5931 = !{i64 2147624109, i64 2147624152, i64 2147624192}
!5932 = !DILocation(line: 213, column: 1, scope: !5526)
!5933 = !{i64 2147624293, i64 2147624336, i64 2147624376}
!5934 = !DILocation(line: 214, column: 1, scope: !5526)
!5935 = !{i64 2147624519, i64 2147624562, i64 2147624602}
!5936 = !DILocation(line: 215, column: 1, scope: !5526)
!5937 = !{i64 2147628806, i64 2147628849, i64 2147628889}
!5938 = !DILocation(line: 216, column: 1, scope: !5526)
!5939 = !{i64 2147629032, i64 2147629075, i64 2147629115}
!5940 = !DILocation(line: 217, column: 1, scope: !5526)
!5941 = !{i64 2147629258, i64 2147629301, i64 2147629341}
!5942 = !DILocation(line: 218, column: 1, scope: !5526)
!5943 = !{i64 2147629484, i64 2147629527, i64 2147629567}
!5944 = !DILocation(line: 219, column: 1, scope: !5526)
!5945 = !{i64 2147629716, i64 2147629759, i64 2147629799}
!5946 = !DILocation(line: 220, column: 1, scope: !5526)
!5947 = !{i64 2147629954, i64 2147629997, i64 2147630037}
!5948 = !DILocation(line: 221, column: 1, scope: !5526)
!5949 = !{i64 2147630186, i64 2147630229, i64 2147630269}
!5950 = !DILocation(line: 222, column: 1, scope: !5526)
!5951 = !{i64 2147630388, i64 2147630431, i64 2147630471}
!5952 = !DILocation(line: 223, column: 1, scope: !5526)
!5953 = !{i64 2147630638, i64 2147630681, i64 2147630721}
!5954 = !DILocation(line: 224, column: 1, scope: !5526)
!5955 = !{i64 2147630876, i64 2147630919, i64 2147630959}
!5956 = !DILocation(line: 225, column: 1, scope: !5526)
!5957 = !{i64 2147631060, i64 2147631103, i64 2147631143}
!5958 = !DILocation(line: 226, column: 1, scope: !5526)
!5959 = !{i64 2147631283, i64 2147631326, i64 2147631366}
!5960 = !DILocation(line: 227, column: 1, scope: !5526)
!5961 = !{i64 2147631521, i64 2147631564, i64 2147631604}
!5962 = !DILocation(line: 228, column: 1, scope: !5526)
!5963 = !{i64 2147631759, i64 2147631802, i64 2147631842}
!5964 = !DILocation(line: 229, column: 1, scope: !5526)
!5965 = !{i64 2147631952, i64 2147631995, i64 2147632035}
!5966 = !DILocation(line: 230, column: 1, scope: !5526)
!5967 = !{i64 2147632205, i64 2147632248, i64 2147632288}
!5968 = !DILocation(line: 231, column: 1, scope: !5526)
!5969 = !{i64 2147632419, i64 2147632462, i64 2147632502}
!5970 = !DILocation(line: 232, column: 1, scope: !5526)
!5971 = !{i64 2147632627, i64 2147632670, i64 2147632710}
!5972 = !DILocation(line: 233, column: 1, scope: !5526)
!5973 = !{i64 2147632817, i64 2147632860, i64 2147632900}
!5974 = !DILocation(line: 234, column: 1, scope: !5526)
!5975 = !{i64 2147633031, i64 2147633074, i64 2147633114}
!5976 = !DILocation(line: 235, column: 1, scope: !5526)
!5977 = !{i64 2147633293, i64 2147633336, i64 2147633376}
!5978 = !DILocation(line: 236, column: 1, scope: !5526)
!5979 = !{i64 2147633504, i64 2147633547, i64 2147633587}
!5980 = !DILocation(line: 237, column: 1, scope: !5526)
!5981 = !{i64 2147633748, i64 2147633791, i64 2147633831}
!5982 = !DILocation(line: 238, column: 1, scope: !5526)
!5983 = !{i64 2147633959, i64 2147634002, i64 2147634042}
!5984 = !DILocation(line: 239, column: 1, scope: !5526)
!5985 = !{i64 2147634188, i64 2147634231, i64 2147634271}
!5986 = !DILocation(line: 240, column: 1, scope: !5526)
!5987 = !{i64 2147634453, i64 2147634496, i64 2147634536}
!5988 = !DILocation(line: 241, column: 1, scope: !5526)
!5989 = !{i64 2147634658, i64 2147634701, i64 2147634741}
!5990 = !DILocation(line: 242, column: 1, scope: !5526)
!5991 = !{i64 2147634854, i64 2147634897, i64 2147634937}
!5992 = !DILocation(line: 243, column: 1, scope: !5526)
!5993 = !{i64 2147635077, i64 2147635120, i64 2147635160}
!5994 = !DILocation(line: 244, column: 1, scope: !5526)
!5995 = !{i64 2147635240, i64 2147635283, i64 2147635323}
!5996 = !DILocation(line: 245, column: 1, scope: !5526)
!5997 = !{i64 2147635445, i64 2147635488, i64 2147635528}
!5998 = !DILocation(line: 246, column: 1, scope: !5526)
!5999 = !{i64 2147635665, i64 2147635708, i64 2147635748}
!6000 = !DILocation(line: 247, column: 1, scope: !5526)
!6001 = !{i64 2147635879, i64 2147635922, i64 2147635962}
!6002 = !DILocation(line: 248, column: 1, scope: !5526)
!6003 = !{i64 2147636093, i64 2147636136, i64 2147636176}
!6004 = !DILocation(line: 249, column: 1, scope: !5526)
!6005 = !{i64 2147636313, i64 2147636356, i64 2147636396}
!6006 = !DILocation(line: 250, column: 1, scope: !5526)
!6007 = !{i64 2147636524, i64 2147636567, i64 2147636607}
!6008 = !DILocation(line: 251, column: 1, scope: !5526)
!6009 = !{i64 2147636717, i64 2147636760, i64 2147636800}
!6010 = !DILocation(line: 252, column: 1, scope: !5526)
!6011 = !{i64 2147636916, i64 2147636959, i64 2147636999}
!6012 = !DILocation(line: 253, column: 1, scope: !5526)
!6013 = !{i64 2147637088, i64 2147637131, i64 2147637171}
!6014 = !DILocation(line: 254, column: 1, scope: !5526)
!6015 = !{i64 2147637281, i64 2147637324, i64 2147637364}
!6016 = !DILocation(line: 255, column: 1, scope: !5526)
!6017 = !{i64 2147641538, i64 2147641581, i64 2147641621}
!6018 = !DILocation(line: 256, column: 1, scope: !5526)
!6019 = !{i64 2147641765, i64 2147641808, i64 2147641848}
!6020 = !DILocation(line: 257, column: 1, scope: !5526)
!6021 = !{i64 2147641982, i64 2147642025, i64 2147642065}
!6022 = !DILocation(line: 258, column: 1, scope: !5526)
!6023 = !{i64 2147642274, i64 2147642317, i64 2147642357}
!6024 = !DILocation(line: 259, column: 1, scope: !5526)
!6025 = !{i64 2147642506, i64 2147642549, i64 2147642589}
!6026 = !DILocation(line: 260, column: 1, scope: !5526)
!6027 = !{i64 2147642723, i64 2147642766, i64 2147642806}
!6028 = !DILocation(line: 261, column: 1, scope: !5526)
!6029 = !{i64 2147642930, i64 2147642973, i64 2147643013}
!6030 = !DILocation(line: 262, column: 1, scope: !5526)
!6031 = !{i64 2147643131, i64 2147643174, i64 2147643214}
!6032 = !DILocation(line: 263, column: 1, scope: !5526)
!6033 = !{i64 2147643363, i64 2147643406, i64 2147643446}
!6034 = !DILocation(line: 264, column: 1, scope: !5526)
!6035 = !{i64 2147643571, i64 2147643614, i64 2147643654}
!6036 = !DILocation(line: 265, column: 1, scope: !5526)
!6037 = !{i64 2147643761, i64 2147643804, i64 2147643844}
!6038 = !DILocation(line: 266, column: 1, scope: !5526)
!6039 = !{i64 2147643987, i64 2147644030, i64 2147644070}
!6040 = !DILocation(line: 267, column: 1, scope: !5526)
!6041 = !{i64 2147644176, i64 2147644219, i64 2147644259}
!6042 = !DILocation(line: 268, column: 1, scope: !5526)
!6043 = !{i64 2147644447, i64 2147644490, i64 2147644530}
!6044 = !DILocation(line: 269, column: 1, scope: !5526)
!6045 = !{i64 2147644667, i64 2147644710, i64 2147644750}
!6046 = !DILocation(line: 270, column: 1, scope: !5526)
!6047 = !{i64 2147644920, i64 2147644963, i64 2147645003}
!6048 = !DILocation(line: 271, column: 1, scope: !5526)
!6049 = !{i64 2147645128, i64 2147645171, i64 2147645211}
!6050 = !DILocation(line: 272, column: 1, scope: !5526)
!6051 = !{i64 2147645360, i64 2147645403, i64 2147645443}
!6052 = !DILocation(line: 273, column: 1, scope: !5526)
!6053 = !{i64 2147645571, i64 2147645614, i64 2147645654}
!6054 = !DILocation(line: 274, column: 1, scope: !5526)
!6055 = !{i64 2147645761, i64 2147645804, i64 2147645844}
!6056 = !DILocation(line: 275, column: 1, scope: !5526)
!6057 = !{i64 2147645975, i64 2147646018, i64 2147646058}
!6058 = !DILocation(line: 276, column: 1, scope: !5526)
!6059 = !{i64 2147646174, i64 2147646217, i64 2147646257}
!6060 = !DILocation(line: 277, column: 1, scope: !5526)
!6061 = !{i64 2147646361, i64 2147646404, i64 2147646444}
!6062 = !DILocation(line: 278, column: 1, scope: !5526)
!6063 = !{i64 2147646569, i64 2147646612, i64 2147646652}
!6064 = !DILocation(line: 279, column: 1, scope: !5526)
!6065 = !{i64 2147646798, i64 2147646841, i64 2147646881}
!6066 = !DILocation(line: 280, column: 1, scope: !5526)
!6067 = !{i64 2147647000, i64 2147647043, i64 2147647083}
!6068 = !DILocation(line: 281, column: 1, scope: !5526)
!6069 = !{i64 2147647199, i64 2147647242, i64 2147647282}
!6070 = !DILocation(line: 282, column: 1, scope: !5526)
!6071 = !{i64 2147647416, i64 2147647459, i64 2147647499}
!6072 = !DILocation(line: 284, column: 1, scope: !5526)
!6073 = distinct !DISubprogram(name: "stm32l1_init", scope: !197, file: !197, line: 31, type: !204, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6074)
!6074 = !{!6075, !6076}
!6075 = !DILocalVariable(name: "arg", arg: 1, scope: !6073, file: !197, line: 31, type: !206)
!6076 = !DILocalVariable(name: "key", scope: !6073, file: !197, line: 33, type: !137)
!6077 = !DILocation(line: 0, scope: !6073)
!6078 = !DILocation(line: 55, column: 2, scope: !6079, inlinedAt: !6086)
!6079 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6080, file: !6080, line: 42, type: !6081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6083)
!6080 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6081 = !DISubroutineType(types: !6082)
!6082 = !{!32}
!6083 = !{!6084, !6085}
!6084 = !DILocalVariable(name: "key", scope: !6079, file: !6080, line: 44, type: !32)
!6085 = !DILocalVariable(name: "tmp", scope: !6079, file: !6080, line: 53, type: !32)
!6086 = distinct !DILocation(line: 37, column: 8, scope: !6073)
!6087 = !{i64 1523270}
!6088 = !DILocation(line: 0, scope: !6079, inlinedAt: !6086)
!6089 = !DILocalVariable(name: "key", arg: 1, scope: !6090, file: !6080, line: 84, type: !32)
!6090 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6080, file: !6080, line: 84, type: !6091, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6093)
!6091 = !DISubroutineType(types: !6092)
!6092 = !{null, !32}
!6093 = !{!6089}
!6094 = !DILocation(line: 0, scope: !6090, inlinedAt: !6095)
!6095 = distinct !DILocation(line: 44, column: 2, scope: !6073)
!6096 = !DILocation(line: 95, column: 2, scope: !6090, inlinedAt: !6095)
!6097 = !{i64 1524087}
!6098 = !DILocation(line: 48, column: 18, scope: !6073)
!6099 = !DILocation(line: 54, column: 2, scope: !6073)
!6100 = !DILocation(line: 55, column: 2, scope: !6073)
!6101 = !DILocation(line: 57, column: 2, scope: !6073)
!6102 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !6103, file: !6103, line: 531, type: !6104, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6106)
!6103 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6104 = !DISubroutineType(types: !6105)
!6105 = !{null, !137}
!6106 = !{!6107, !6108}
!6107 = !DILocalVariable(name: "Periphs", arg: 1, scope: !6102, file: !6103, line: 531, type: !137)
!6108 = !DILocalVariable(name: "tmpreg", scope: !6102, file: !6103, line: 533, type: !176)
!6109 = !DILocation(line: 0, scope: !6102)
!6110 = !DILocation(line: 533, column: 3, scope: !6102)
!6111 = !DILocation(line: 533, column: 17, scope: !6102)
!6112 = !DILocation(line: 534, column: 3, scope: !6102)
!6113 = !DILocation(line: 536, column: 12, scope: !6102)
!6114 = !DILocation(line: 536, column: 10, scope: !6102)
!6115 = !DILocation(line: 537, column: 9, scope: !6102)
!6116 = !DILocation(line: 538, column: 1, scope: !6102)
!6117 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !6118, file: !6118, line: 272, type: !6104, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6119)
!6118 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6119 = !{!6120}
!6120 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !6117, file: !6118, line: 272, type: !137)
!6121 = !DILocation(line: 0, scope: !6117)
!6122 = !DILocation(line: 274, column: 3, scope: !6117)
!6123 = !DILocation(line: 275, column: 1, scope: !6117)
!6124 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !238, file: !238, line: 26, type: !244, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !6125)
!6125 = !{!6126}
!6126 = !DILocalVariable(name: "dev", arg: 1, scope: !6124, file: !238, line: 26, type: !246)
!6127 = !DILocation(line: 0, scope: !6124)
!6128 = !DILocation(line: 68, column: 2, scope: !6124)
!6129 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6130, file: !6130, line: 57, type: !6131, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !6177)
!6130 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6131 = !DISubroutineType(types: !6132)
!6132 = !{null, !32, !6133}
!6133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6134, size: 32)
!6134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6135)
!6135 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2424, line: 141, baseType: !6136)
!6136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2424, line: 97, size: 256, elements: !6137)
!6137 = !{!6138}
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6136, file: !2424, line: 107, baseType: !6139, size: 256)
!6139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2424, line: 98, size: 256, elements: !6140)
!6140 = !{!6141, !6146, !6151, !6156, !6161, !6166, !6171, !6176}
!6141 = !DIDerivedType(tag: DW_TAG_member, scope: !6139, file: !2424, line: 99, baseType: !6142, size: 32)
!6142 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6139, file: !2424, line: 99, size: 32, elements: !6143)
!6143 = !{!6144, !6145}
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6142, file: !2424, line: 99, baseType: !137, size: 32)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6142, file: !2424, line: 99, baseType: !137, size: 32)
!6146 = !DIDerivedType(tag: DW_TAG_member, scope: !6139, file: !2424, line: 100, baseType: !6147, size: 32, offset: 32)
!6147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6139, file: !2424, line: 100, size: 32, elements: !6148)
!6148 = !{!6149, !6150}
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6147, file: !2424, line: 100, baseType: !137, size: 32)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6147, file: !2424, line: 100, baseType: !137, size: 32)
!6151 = !DIDerivedType(tag: DW_TAG_member, scope: !6139, file: !2424, line: 101, baseType: !6152, size: 32, offset: 64)
!6152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6139, file: !2424, line: 101, size: 32, elements: !6153)
!6153 = !{!6154, !6155}
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6152, file: !2424, line: 101, baseType: !137, size: 32)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6152, file: !2424, line: 101, baseType: !137, size: 32)
!6156 = !DIDerivedType(tag: DW_TAG_member, scope: !6139, file: !2424, line: 102, baseType: !6157, size: 32, offset: 96)
!6157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6139, file: !2424, line: 102, size: 32, elements: !6158)
!6158 = !{!6159, !6160}
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6157, file: !2424, line: 102, baseType: !137, size: 32)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6157, file: !2424, line: 102, baseType: !137, size: 32)
!6161 = !DIDerivedType(tag: DW_TAG_member, scope: !6139, file: !2424, line: 103, baseType: !6162, size: 32, offset: 128)
!6162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6139, file: !2424, line: 103, size: 32, elements: !6163)
!6163 = !{!6164, !6165}
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6162, file: !2424, line: 103, baseType: !137, size: 32)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6162, file: !2424, line: 103, baseType: !137, size: 32)
!6166 = !DIDerivedType(tag: DW_TAG_member, scope: !6139, file: !2424, line: 104, baseType: !6167, size: 32, offset: 160)
!6167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6139, file: !2424, line: 104, size: 32, elements: !6168)
!6168 = !{!6169, !6170}
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6167, file: !2424, line: 104, baseType: !137, size: 32)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6167, file: !2424, line: 104, baseType: !137, size: 32)
!6171 = !DIDerivedType(tag: DW_TAG_member, scope: !6139, file: !2424, line: 105, baseType: !6172, size: 32, offset: 192)
!6172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6139, file: !2424, line: 105, size: 32, elements: !6173)
!6173 = !{!6174, !6175}
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6172, file: !2424, line: 105, baseType: !137, size: 32)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6172, file: !2424, line: 105, baseType: !137, size: 32)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6139, file: !2424, line: 106, baseType: !137, size: 32, offset: 224)
!6177 = !{!6178, !6179}
!6178 = !DILocalVariable(name: "reason", arg: 1, scope: !6129, file: !6130, line: 57, type: !32)
!6179 = !DILocalVariable(name: "esf", arg: 2, scope: !6129, file: !6130, line: 57, type: !6133)
!6180 = !DILocation(line: 0, scope: !6129)
!6181 = !DILocation(line: 63, column: 2, scope: !6129)
!6182 = !DILocation(line: 64, column: 1, scope: !6129)
!6183 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6130, file: !6130, line: 82, type: !6184, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !6199)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{null, !6133, !6186}
!6186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6187, size: 32)
!6187 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !347, line: 37, baseType: !6188)
!6188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !347, line: 25, size: 288, elements: !6189)
!6189 = !{!6190, !6191, !6192, !6193, !6194, !6195, !6196, !6197, !6198}
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6188, file: !347, line: 26, baseType: !137, size: 32)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6188, file: !347, line: 27, baseType: !137, size: 32, offset: 32)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6188, file: !347, line: 28, baseType: !137, size: 32, offset: 64)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6188, file: !347, line: 29, baseType: !137, size: 32, offset: 96)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6188, file: !347, line: 30, baseType: !137, size: 32, offset: 128)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6188, file: !347, line: 31, baseType: !137, size: 32, offset: 160)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6188, file: !347, line: 32, baseType: !137, size: 32, offset: 192)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6188, file: !347, line: 33, baseType: !137, size: 32, offset: 224)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6188, file: !347, line: 34, baseType: !137, size: 32, offset: 256)
!6199 = !{!6200, !6201, !6202}
!6200 = !DILocalVariable(name: "esf", arg: 1, scope: !6183, file: !6130, line: 82, type: !6133)
!6201 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6183, file: !6130, line: 82, type: !6186)
!6202 = !DILocalVariable(name: "reason", scope: !6183, file: !6130, line: 88, type: !32)
!6203 = !DILocation(line: 0, scope: !6183)
!6204 = !DILocation(line: 88, column: 35, scope: !6183)
!6205 = !DILocation(line: 108, column: 2, scope: !6183)
!6206 = !DILocation(line: 131, column: 1, scope: !6183)
!6207 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6130, file: !6130, line: 133, type: !6208, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !6210)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{null, !102}
!6210 = !{!6211, !6212, !6213}
!6211 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6207, file: !6130, line: 133, type: !102)
!6212 = !DILocalVariable(name: "ssf_contents", scope: !6207, file: !6130, line: 135, type: !149)
!6213 = !DILocalVariable(name: "oops_esf", scope: !6207, file: !6130, line: 136, type: !6135)
!6214 = !DILocation(line: 0, scope: !6207)
!6215 = !DILocation(line: 136, column: 2, scope: !6207)
!6216 = !DILocation(line: 136, column: 15, scope: !6207)
!6217 = !DILocation(line: 139, column: 22, scope: !6207)
!6218 = !DILocation(line: 139, column: 17, scope: !6207)
!6219 = !DILocation(line: 139, column: 20, scope: !6207)
!6220 = !DILocation(line: 141, column: 2, scope: !6207)
!6221 = !DILocation(line: 142, column: 2, scope: !6207)
!6222 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6223, file: !6223, line: 40, type: !6091, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !6224)
!6223 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6224 = !{!6225}
!6225 = !DILocalVariable(name: "irq", arg: 1, scope: !6222, file: !6223, line: 40, type: !32)
!6226 = !DILocation(line: 0, scope: !6222)
!6227 = !DILocation(line: 42, column: 2, scope: !6222)
!6228 = !DILocation(line: 43, column: 1, scope: !6222)
!6229 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !415, file: !415, line: 1508, type: !6230, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !6232)
!6230 = !DISubroutineType(types: !6231)
!6231 = !{null, !739}
!6232 = !{!6233}
!6233 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6229, file: !415, line: 1508, type: !739)
!6234 = !DILocation(line: 0, scope: !6229)
!6235 = !DILocation(line: 1510, column: 23, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6229, file: !415, line: 1510, column: 7)
!6237 = !DILocation(line: 1510, column: 7, scope: !6229)
!6238 = !DILocation(line: 1512, column: 5, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6236, file: !415, line: 1511, column: 3)
!6240 = !{i64 2149969067}
!6241 = !DILocation(line: 1513, column: 81, scope: !6239)
!6242 = !DILocation(line: 1513, column: 60, scope: !6239)
!6243 = !DILocation(line: 1513, column: 34, scope: !6239)
!6244 = !DILocation(line: 1513, column: 5, scope: !6239)
!6245 = !DILocation(line: 1513, column: 43, scope: !6239)
!6246 = !DILocation(line: 1514, column: 5, scope: !6239)
!6247 = !{i64 2149969181}
!6248 = !DILocation(line: 1515, column: 3, scope: !6239)
!6249 = !DILocation(line: 1516, column: 1, scope: !6229)
!6250 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6223, file: !6223, line: 45, type: !6091, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !6251)
!6251 = !{!6252}
!6252 = !DILocalVariable(name: "irq", arg: 1, scope: !6250, file: !6223, line: 45, type: !32)
!6253 = !DILocation(line: 0, scope: !6250)
!6254 = !DILocation(line: 47, column: 2, scope: !6250)
!6255 = !DILocation(line: 48, column: 1, scope: !6250)
!6256 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !415, file: !415, line: 1546, type: !6230, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !6257)
!6257 = !{!6258}
!6258 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6256, file: !415, line: 1546, type: !739)
!6259 = !DILocation(line: 0, scope: !6256)
!6260 = !DILocation(line: 1548, column: 23, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6256, file: !415, line: 1548, column: 7)
!6262 = !DILocation(line: 1548, column: 7, scope: !6256)
!6263 = !DILocation(line: 1550, column: 81, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6261, file: !415, line: 1549, column: 3)
!6265 = !DILocation(line: 1550, column: 60, scope: !6264)
!6266 = !DILocation(line: 1550, column: 34, scope: !6264)
!6267 = !DILocation(line: 1550, column: 5, scope: !6264)
!6268 = !DILocation(line: 1550, column: 43, scope: !6264)
!6269 = !DILocation(line: 271, column: 3, scope: !6270, inlinedAt: !6272)
!6270 = distinct !DISubprogram(name: "__DSB", scope: !6271, file: !6271, line: 269, type: !2794, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !162)
!6271 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6272 = distinct !DILocation(line: 1551, column: 5, scope: !6264)
!6273 = !{i64 2426569}
!6274 = !DILocation(line: 260, column: 3, scope: !6275, inlinedAt: !6276)
!6275 = distinct !DISubprogram(name: "__ISB", scope: !6271, file: !6271, line: 258, type: !2794, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !162)
!6276 = distinct !DILocation(line: 1552, column: 5, scope: !6264)
!6277 = !{i64 2426286}
!6278 = !DILocation(line: 1553, column: 3, scope: !6264)
!6279 = !DILocation(line: 1554, column: 1, scope: !6256)
!6280 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6223, file: !6223, line: 50, type: !6281, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !6283)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{!103, !32}
!6283 = !{!6284}
!6284 = !DILocalVariable(name: "irq", arg: 1, scope: !6280, file: !6223, line: 50, type: !32)
!6285 = !DILocation(line: 0, scope: !6280)
!6286 = !DILocation(line: 52, column: 20, scope: !6280)
!6287 = !DILocation(line: 52, column: 9, scope: !6280)
!6288 = !DILocation(line: 52, column: 41, scope: !6280)
!6289 = !DILocation(line: 52, column: 39, scope: !6280)
!6290 = !DILocation(line: 52, column: 2, scope: !6280)
!6291 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6223, file: !6223, line: 64, type: !6292, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !6294)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{null, !32, !32, !137}
!6294 = !{!6295, !6296, !6297}
!6295 = !DILocalVariable(name: "irq", arg: 1, scope: !6291, file: !6223, line: 64, type: !32)
!6296 = !DILocalVariable(name: "prio", arg: 2, scope: !6291, file: !6223, line: 64, type: !32)
!6297 = !DILocalVariable(name: "flags", arg: 3, scope: !6291, file: !6223, line: 64, type: !137)
!6298 = !DILocation(line: 0, scope: !6291)
!6299 = !DILocation(line: 83, column: 8, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6301, file: !6223, line: 82, column: 9)
!6301 = distinct !DILexicalBlock(scope: !6291, file: !6223, line: 76, column: 6)
!6302 = !DILocation(line: 95, column: 2, scope: !6291)
!6303 = !DILocation(line: 96, column: 1, scope: !6291)
!6304 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !415, file: !415, line: 1638, type: !6305, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !6307)
!6305 = !DISubroutineType(types: !6306)
!6306 = !{null, !739, !137}
!6307 = !{!6308, !6309}
!6308 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6304, file: !415, line: 1638, type: !739)
!6309 = !DILocalVariable(name: "priority", arg: 2, scope: !6304, file: !415, line: 1638, type: !137)
!6310 = !DILocation(line: 0, scope: !6304)
!6311 = !DILocation(line: 0, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6304, file: !415, line: 1640, column: 7)
!6313 = !DILocation(line: 1640, column: 7, scope: !6304)
!6314 = !DILocation(line: 1648, column: 1, scope: !6304)
!6315 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6223, file: !6223, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2315, retainedNodes: !6316)
!6316 = !{!6317}
!6317 = !DILocalVariable(name: "unused", arg: 1, scope: !6315, file: !6223, line: 155, type: !13)
!6318 = !DILocation(line: 0, scope: !6315)
!6319 = !DILocation(line: 159, column: 2, scope: !6315)
!6320 = !DILocation(line: 160, column: 1, scope: !6315)
!6321 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6322, file: !6322, line: 87, type: !2794, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2361, retainedNodes: !162)
!6322 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6323 = !DILocation(line: 89, column: 2, scope: !6321)
!6324 = !DILocation(line: 90, column: 2, scope: !6321)
!6325 = !DILocation(line: 91, column: 1, scope: !6321)
!6326 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6322, file: !6322, line: 23, type: !2794, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6327 = !DISubprogram(name: "z_arm_int_exit", scope: !6328, file: !6328, line: 153, type: !2794, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6328 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6329 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6330, file: !6330, line: 256, type: !2794, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2363, retainedNodes: !162)
!6330 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6331 = !DILocation(line: 258, column: 2, scope: !6329)
!6332 = !DILocation(line: 262, column: 2, scope: !6329)
!6333 = !DILocation(line: 263, column: 2, scope: !6329)
!6334 = !DILocation(line: 267, column: 2, scope: !6329)
!6335 = !DILocation(line: 268, column: 2, scope: !6329)
!6336 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6330, file: !6330, line: 53, type: !2794, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2363, retainedNodes: !162)
!6337 = !DILocation(line: 55, column: 12, scope: !6336)
!6338 = !DILocation(line: 271, column: 3, scope: !6339, inlinedAt: !6340)
!6339 = distinct !DISubprogram(name: "__DSB", scope: !6271, file: !6271, line: 269, type: !2794, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2363, retainedNodes: !162)
!6340 = distinct !DILocation(line: 56, column: 2, scope: !6336)
!6341 = !{i64 2425240}
!6342 = !DILocation(line: 260, column: 3, scope: !6343, inlinedAt: !6344)
!6343 = distinct !DISubprogram(name: "__ISB", scope: !6271, file: !6271, line: 258, type: !2794, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2363, retainedNodes: !162)
!6344 = distinct !DILocation(line: 57, column: 2, scope: !6336)
!6345 = !{i64 2424957}
!6346 = !DILocation(line: 58, column: 1, scope: !6336)
!6347 = distinct !DISubprogram(name: "arch_swap", scope: !6348, file: !6348, line: 33, type: !6281, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !6349)
!6348 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6349 = !{!6350}
!6350 = !DILocalVariable(name: "key", arg: 1, scope: !6347, file: !6348, line: 33, type: !32)
!6351 = !DILocation(line: 0, scope: !6347)
!6352 = !DILocation(line: 36, column: 2, scope: !6347)
!6353 = !DILocation(line: 36, column: 17, scope: !6347)
!6354 = !DILocation(line: 36, column: 25, scope: !6347)
!6355 = !DILocation(line: 37, column: 37, scope: !6347)
!6356 = !DILocation(line: 37, column: 17, scope: !6347)
!6357 = !DILocation(line: 37, column: 35, scope: !6347)
!6358 = !DILocation(line: 41, column: 12, scope: !6347)
!6359 = !DILocalVariable(name: "key", arg: 1, scope: !6360, file: !6080, line: 84, type: !32)
!6360 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6080, file: !6080, line: 84, type: !6091, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !6361)
!6361 = !{!6359}
!6362 = !DILocation(line: 0, scope: !6360, inlinedAt: !6363)
!6363 = distinct !DILocation(line: 44, column: 2, scope: !6347)
!6364 = !DILocation(line: 95, column: 2, scope: !6360, inlinedAt: !6363)
!6365 = !{i64 1648240}
!6366 = !DILocation(line: 53, column: 9, scope: !6347)
!6367 = !DILocation(line: 53, column: 24, scope: !6347)
!6368 = !DILocation(line: 53, column: 2, scope: !6347)
!6369 = distinct !DISubprogram(name: "arch_new_thread", scope: !6370, file: !6370, line: 56, type: !6371, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !6478)
!6370 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6371 = !DISubroutineType(types: !6372)
!6372 = !{null, !6373, !6473, !1062, !3122, !102, !102, !102}
!6373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6374, size: 32)
!6374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !276, line: 245, size: 1024, elements: !6375)
!6375 = !{!6376, !6434, !6446, !6447, !6448, !6449, !6455, !6468}
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6374, file: !276, line: 247, baseType: !6377, size: 384)
!6377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !276, line: 57, size: 384, elements: !6378)
!6378 = !{!6379, !6403, !6410, !6411, !6412, !6421, !6422, !6423}
!6379 = !DIDerivedType(tag: DW_TAG_member, scope: !6377, file: !276, line: 60, baseType: !6380, size: 64)
!6380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6377, file: !276, line: 60, size: 64, elements: !6381)
!6381 = !{!6382, !6397}
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6380, file: !276, line: 61, baseType: !6383, size: 64)
!6383 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !286, line: 49, baseType: !6384)
!6384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !286, line: 37, size: 64, elements: !6385)
!6385 = !{!6386, !6392}
!6386 = !DIDerivedType(tag: DW_TAG_member, scope: !6384, file: !286, line: 38, baseType: !6387, size: 32)
!6387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6384, file: !286, line: 38, size: 32, elements: !6388)
!6388 = !{!6389, !6391}
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6387, file: !286, line: 39, baseType: !6390, size: 32)
!6390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6384, size: 32)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6387, file: !286, line: 40, baseType: !6390, size: 32)
!6392 = !DIDerivedType(tag: DW_TAG_member, scope: !6384, file: !286, line: 42, baseType: !6393, size: 32, offset: 32)
!6393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6384, file: !286, line: 42, size: 32, elements: !6394)
!6394 = !{!6395, !6396}
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6393, file: !286, line: 43, baseType: !6390, size: 32)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6393, file: !286, line: 44, baseType: !6390, size: 32)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6380, file: !276, line: 62, baseType: !6398, size: 64)
!6398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !6399)
!6399 = !{!6400}
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6398, file: !302, line: 50, baseType: !6401, size: 64)
!6401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6402, size: 64, elements: !307)
!6402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6398, size: 32)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6377, file: !276, line: 68, baseType: !6404, size: 32, offset: 64)
!6404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6405, size: 32)
!6405 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !312, line: 233, baseType: !6406)
!6406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 231, size: 64, elements: !6407)
!6407 = !{!6408}
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6406, file: !312, line: 232, baseType: !6409, size: 64)
!6409 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !286, line: 48, baseType: !6384)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6377, file: !276, line: 71, baseType: !221, size: 8, offset: 96)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6377, file: !276, line: 74, baseType: !221, size: 8, offset: 104)
!6412 = !DIDerivedType(tag: DW_TAG_member, scope: !6377, file: !276, line: 90, baseType: !6413, size: 16, offset: 112)
!6413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6377, file: !276, line: 90, size: 16, elements: !6414)
!6414 = !{!6415, !6420}
!6415 = !DIDerivedType(tag: DW_TAG_member, scope: !6413, file: !276, line: 91, baseType: !6416, size: 16)
!6416 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6413, file: !276, line: 91, size: 16, elements: !6417)
!6417 = !{!6418, !6419}
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6416, file: !276, line: 96, baseType: !326, size: 8)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6416, file: !276, line: 97, baseType: !221, size: 8, offset: 8)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6413, file: !276, line: 100, baseType: !151, size: 16)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6377, file: !276, line: 107, baseType: !137, size: 32, offset: 128)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6377, file: !276, line: 127, baseType: !102, size: 32, offset: 160)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6377, file: !276, line: 131, baseType: !6424, size: 192, offset: 192)
!6424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !312, line: 244, size: 192, elements: !6425)
!6425 = !{!6426, !6427, !6433}
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6424, file: !312, line: 245, baseType: !6383, size: 64)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6424, file: !312, line: 246, baseType: !6428, size: 32, offset: 64)
!6428 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !312, line: 242, baseType: !6429)
!6429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6430, size: 32)
!6430 = !DISubroutineType(types: !6431)
!6431 = !{null, !6432}
!6432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6424, size: 32)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6424, file: !312, line: 249, baseType: !343, size: 64, offset: 128)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6374, file: !276, line: 250, baseType: !6435, size: 288, offset: 384)
!6435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !347, line: 25, size: 288, elements: !6436)
!6436 = !{!6437, !6438, !6439, !6440, !6441, !6442, !6443, !6444, !6445}
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6435, file: !347, line: 26, baseType: !137, size: 32)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6435, file: !347, line: 27, baseType: !137, size: 32, offset: 32)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6435, file: !347, line: 28, baseType: !137, size: 32, offset: 64)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6435, file: !347, line: 29, baseType: !137, size: 32, offset: 96)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6435, file: !347, line: 30, baseType: !137, size: 32, offset: 128)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6435, file: !347, line: 31, baseType: !137, size: 32, offset: 160)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6435, file: !347, line: 32, baseType: !137, size: 32, offset: 192)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6435, file: !347, line: 33, baseType: !137, size: 32, offset: 224)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6435, file: !347, line: 34, baseType: !137, size: 32, offset: 256)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6374, file: !276, line: 253, baseType: !102, size: 32, offset: 672)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6374, file: !276, line: 256, baseType: !6405, size: 64, offset: 704)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6374, file: !276, line: 294, baseType: !103, size: 32, offset: 768)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6374, file: !276, line: 300, baseType: !6450, size: 96, offset: 800)
!6450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !276, line: 149, size: 96, elements: !6451)
!6451 = !{!6452, !6453, !6454}
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6450, file: !276, line: 153, baseType: !22, size: 32)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6450, file: !276, line: 162, baseType: !120, size: 32, offset: 32)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6450, file: !276, line: 168, baseType: !120, size: 32, offset: 64)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6374, file: !276, line: 325, baseType: !6456, size: 32, offset: 896)
!6456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6457, size: 32)
!6457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !370, line: 5073, size: 160, elements: !6458)
!6458 = !{!6459, !6465, !6466}
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6457, file: !370, line: 5074, baseType: !6460, size: 96)
!6460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !6461)
!6461 = !{!6462, !6463, !6464}
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6460, file: !113, line: 57, baseType: !116, size: 32)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6460, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6460, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6457, file: !370, line: 5075, baseType: !6405, size: 64, offset: 96)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6457, file: !370, line: 5076, baseType: !6467, offset: 160)
!6467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !381, line: 43, elements: !162)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6374, file: !276, line: 343, baseType: !6469, size: 64, offset: 928)
!6469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !347, line: 60, size: 64, elements: !6470)
!6470 = !{!6471, !6472}
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6469, file: !347, line: 63, baseType: !137, size: 32)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6469, file: !347, line: 66, baseType: !137, size: 32, offset: 32)
!6473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6474, size: 32)
!6474 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3123, line: 44, baseType: !6475)
!6475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1912, line: 47, size: 8, elements: !6476)
!6476 = !{!6477}
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6475, file: !1912, line: 48, baseType: !109, size: 8)
!6478 = !{!6479, !6480, !6481, !6482, !6483, !6484, !6485, !6486}
!6479 = !DILocalVariable(name: "thread", arg: 1, scope: !6369, file: !6370, line: 56, type: !6373)
!6480 = !DILocalVariable(name: "stack", arg: 2, scope: !6369, file: !6370, line: 56, type: !6473)
!6481 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6369, file: !6370, line: 57, type: !1062)
!6482 = !DILocalVariable(name: "entry", arg: 4, scope: !6369, file: !6370, line: 57, type: !3122)
!6483 = !DILocalVariable(name: "p1", arg: 5, scope: !6369, file: !6370, line: 58, type: !102)
!6484 = !DILocalVariable(name: "p2", arg: 6, scope: !6369, file: !6370, line: 58, type: !102)
!6485 = !DILocalVariable(name: "p3", arg: 7, scope: !6369, file: !6370, line: 58, type: !102)
!6486 = !DILocalVariable(name: "iframe", scope: !6369, file: !6370, line: 60, type: !2422)
!6487 = !DILocation(line: 0, scope: !6369)
!6488 = !DILocation(line: 85, column: 11, scope: !6369)
!6489 = !DILocation(line: 93, column: 10, scope: !6369)
!6490 = !DILocation(line: 98, column: 13, scope: !6369)
!6491 = !DILocation(line: 100, column: 15, scope: !6369)
!6492 = !DILocation(line: 100, column: 10, scope: !6369)
!6493 = !DILocation(line: 100, column: 13, scope: !6369)
!6494 = !DILocation(line: 101, column: 15, scope: !6369)
!6495 = !DILocation(line: 101, column: 10, scope: !6369)
!6496 = !DILocation(line: 101, column: 13, scope: !6369)
!6497 = !DILocation(line: 102, column: 15, scope: !6369)
!6498 = !DILocation(line: 102, column: 10, scope: !6369)
!6499 = !DILocation(line: 102, column: 13, scope: !6369)
!6500 = !DILocation(line: 103, column: 15, scope: !6369)
!6501 = !DILocation(line: 103, column: 10, scope: !6369)
!6502 = !DILocation(line: 103, column: 13, scope: !6369)
!6503 = !DILocation(line: 106, column: 10, scope: !6369)
!6504 = !DILocation(line: 106, column: 15, scope: !6369)
!6505 = !DILocation(line: 122, column: 29, scope: !6369)
!6506 = !DILocation(line: 122, column: 23, scope: !6369)
!6507 = !DILocation(line: 122, column: 27, scope: !6369)
!6508 = !DILocation(line: 123, column: 15, scope: !6369)
!6509 = !DILocation(line: 123, column: 23, scope: !6369)
!6510 = !DILocation(line: 143, column: 1, scope: !6369)
!6511 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6370, file: !6370, line: 385, type: !6512, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !6515)
!6512 = !DISubroutineType(types: !6513)
!6513 = !{!137, !6514, !6514}
!6514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!6515 = !{!6516, !6517, !6518, !6521}
!6516 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6511, file: !6370, line: 385, type: !6514)
!6517 = !DILocalVariable(name: "psp", arg: 2, scope: !6511, file: !6370, line: 385, type: !6514)
!6518 = !DILocalVariable(name: "thread", scope: !6511, file: !6370, line: 388, type: !6519)
!6519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6520, size: 32)
!6520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6374)
!6521 = !DILocalVariable(name: "guard_len", scope: !6511, file: !6370, line: 405, type: !137)
!6522 = !DILocation(line: 0, scope: !6511)
!6523 = !DILocation(line: 388, column: 34, scope: !6511)
!6524 = !DILocation(line: 390, column: 13, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6511, file: !6370, line: 390, column: 6)
!6526 = !DILocation(line: 390, column: 6, scope: !6511)
!6527 = !DILocation(line: 438, column: 6, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6511, file: !6370, line: 438, column: 6)
!6529 = !DILocation(line: 438, column: 6, scope: !6511)
!6530 = !DILocation(line: 442, column: 3, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6528, file: !6370, line: 440, column: 22)
!6532 = !DILocation(line: 455, column: 1, scope: !6511)
!6533 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6370, file: !6370, line: 530, type: !6534, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{null, !6373, !1062, !3122}
!6536 = !{!6537, !6538, !6539}
!6537 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6533, file: !6370, line: 530, type: !6373)
!6538 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6533, file: !6370, line: 530, type: !1062)
!6539 = !DILocalVariable(name: "_main", arg: 3, scope: !6533, file: !6370, line: 531, type: !3122)
!6540 = !DILocation(line: 0, scope: !6533)
!6541 = !DILocation(line: 535, column: 11, scope: !6533)
!6542 = !DILocation(line: 560, column: 2, scope: !6533)
!6543 = !DILocation(line: 576, column: 2, scope: !6533)
!6544 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6545 = !DILocation(line: 603, column: 2, scope: !6533)
!6546 = distinct !DISubprogram(name: "z_arm_fault", scope: !6547, file: !6547, line: 1036, type: !6548, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !6563)
!6547 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6548 = !DISubroutineType(types: !6549)
!6549 = !{null, !137, !137, !137, !6550}
!6550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6551, size: 32)
!6551 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !347, line: 37, baseType: !6552)
!6552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !347, line: 25, size: 288, elements: !6553)
!6553 = !{!6554, !6555, !6556, !6557, !6558, !6559, !6560, !6561, !6562}
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6552, file: !347, line: 26, baseType: !137, size: 32)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6552, file: !347, line: 27, baseType: !137, size: 32, offset: 32)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6552, file: !347, line: 28, baseType: !137, size: 32, offset: 64)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6552, file: !347, line: 29, baseType: !137, size: 32, offset: 96)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6552, file: !347, line: 30, baseType: !137, size: 32, offset: 128)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6552, file: !347, line: 31, baseType: !137, size: 32, offset: 160)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6552, file: !347, line: 32, baseType: !137, size: 32, offset: 192)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6552, file: !347, line: 33, baseType: !137, size: 32, offset: 224)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6552, file: !347, line: 34, baseType: !137, size: 32, offset: 256)
!6563 = !{!6564, !6565, !6566, !6567, !6568, !6569, !6570, !6571, !6572, !6573}
!6564 = !DILocalVariable(name: "msp", arg: 1, scope: !6546, file: !6547, line: 1036, type: !137)
!6565 = !DILocalVariable(name: "psp", arg: 2, scope: !6546, file: !6547, line: 1036, type: !137)
!6566 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6546, file: !6547, line: 1036, type: !137)
!6567 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6546, file: !6547, line: 1037, type: !6550)
!6568 = !DILocalVariable(name: "reason", scope: !6546, file: !6547, line: 1039, type: !137)
!6569 = !DILocalVariable(name: "fault", scope: !6546, file: !6547, line: 1040, type: !103)
!6570 = !DILocalVariable(name: "recoverable", scope: !6546, file: !6547, line: 1041, type: !224)
!6571 = !DILocalVariable(name: "nested_exc", scope: !6546, file: !6547, line: 1041, type: !224)
!6572 = !DILocalVariable(name: "esf", scope: !6546, file: !6547, line: 1042, type: !2490)
!6573 = !DILocalVariable(name: "esf_copy", scope: !6546, file: !6547, line: 1047, type: !2491)
!6574 = !DILocation(line: 0, scope: !6546)
!6575 = !DILocation(line: 1040, column: 19, scope: !6546)
!6576 = !DILocation(line: 1040, column: 24, scope: !6546)
!6577 = !DILocation(line: 1041, column: 2, scope: !6546)
!6578 = !DILocation(line: 1047, column: 2, scope: !6546)
!6579 = !DILocation(line: 1047, column: 15, scope: !6546)
!6580 = !DILocalVariable(name: "key", arg: 1, scope: !6581, file: !6080, line: 84, type: !32)
!6581 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6080, file: !6080, line: 84, type: !6091, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !6582)
!6582 = !{!6580}
!6583 = !DILocation(line: 0, scope: !6581, inlinedAt: !6584)
!6584 = distinct !DILocation(line: 1050, column: 2, scope: !6546)
!6585 = !DILocation(line: 95, column: 2, scope: !6581, inlinedAt: !6584)
!6586 = !{i64 1681484}
!6587 = !DILocation(line: 1055, column: 9, scope: !6546)
!6588 = !DILocation(line: 1063, column: 11, scope: !6546)
!6589 = !DILocation(line: 1064, column: 6, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6546, file: !6547, line: 1064, column: 6)
!6591 = !{i8 0, i8 2}
!6592 = !DILocation(line: 1064, column: 6, scope: !6546)
!6593 = !DILocation(line: 1070, column: 20, scope: !6546)
!6594 = !DILocation(line: 1070, column: 2, scope: !6546)
!6595 = !DILocation(line: 1089, column: 6, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6546, file: !6547, line: 1089, column: 6)
!6597 = !DILocation(line: 0, scope: !6596)
!6598 = !DILocation(line: 1089, column: 6, scope: !6546)
!6599 = !DILocation(line: 1090, column: 28, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6601, file: !6547, line: 1090, column: 7)
!6601 = distinct !DILexicalBlock(scope: !6596, file: !6547, line: 1089, column: 18)
!6602 = !DILocation(line: 1090, column: 44, scope: !6600)
!6603 = !DILocation(line: 1090, column: 7, scope: !6601)
!6604 = !DILocation(line: 1091, column: 24, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6600, file: !6547, line: 1090, column: 50)
!6606 = !DILocation(line: 1092, column: 3, scope: !6605)
!6607 = !DILocation(line: 1094, column: 23, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6596, file: !6547, line: 1093, column: 9)
!6609 = !DILocation(line: 1097, column: 2, scope: !6546)
!6610 = !DILocation(line: 1098, column: 1, scope: !6546)
!6611 = distinct !DISubprogram(name: "get_esf", scope: !6547, file: !6547, line: 894, type: !6612, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !6615)
!6612 = !DISubroutineType(types: !6613)
!6613 = !{!2490, !137, !137, !137, !6614}
!6614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!6615 = !{!6616, !6617, !6618, !6619, !6620, !6621}
!6616 = !DILocalVariable(name: "msp", arg: 1, scope: !6611, file: !6547, line: 894, type: !137)
!6617 = !DILocalVariable(name: "psp", arg: 2, scope: !6611, file: !6547, line: 894, type: !137)
!6618 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6611, file: !6547, line: 894, type: !137)
!6619 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6611, file: !6547, line: 895, type: !6614)
!6620 = !DILocalVariable(name: "alternative_state_exc", scope: !6611, file: !6547, line: 897, type: !224)
!6621 = !DILocalVariable(name: "ptr_esf", scope: !6611, file: !6547, line: 898, type: !2490)
!6622 = !DILocation(line: 0, scope: !6611)
!6623 = !DILocation(line: 900, column: 14, scope: !6611)
!6624 = !DILocation(line: 902, column: 49, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6611, file: !6547, line: 902, column: 6)
!6626 = !DILocation(line: 902, column: 6, scope: !6611)
!6627 = !DILocation(line: 983, column: 18, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6611, file: !6547, line: 983, column: 6)
!6629 = !DILocation(line: 991, column: 7, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6631, file: !6547, line: 990, column: 30)
!6631 = distinct !DILexicalBlock(scope: !6611, file: !6547, line: 990, column: 6)
!6632 = !DILocation(line: 998, column: 16, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6634, file: !6547, line: 995, column: 10)
!6634 = distinct !DILexicalBlock(scope: !6630, file: !6547, line: 991, column: 7)
!6635 = !DILocation(line: 1002, column: 2, scope: !6611)
!6636 = !DILocation(line: 1003, column: 1, scope: !6611)
!6637 = distinct !DISubprogram(name: "fault_handle", scope: !6547, file: !6547, line: 786, type: !6638, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !6640)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{!137, !2490, !103, !6614}
!6640 = !{!6641, !6642, !6643, !6644}
!6641 = !DILocalVariable(name: "esf", arg: 1, scope: !6637, file: !6547, line: 786, type: !2490)
!6642 = !DILocalVariable(name: "fault", arg: 2, scope: !6637, file: !6547, line: 786, type: !103)
!6643 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6637, file: !6547, line: 786, type: !6614)
!6644 = !DILocalVariable(name: "reason", scope: !6637, file: !6547, line: 788, type: !137)
!6645 = !DILocation(line: 0, scope: !6637)
!6646 = !DILocation(line: 790, column: 15, scope: !6637)
!6647 = !DILocation(line: 792, column: 2, scope: !6637)
!6648 = !DILocation(line: 794, column: 12, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6637, file: !6547, line: 792, column: 17)
!6650 = !DILocation(line: 795, column: 3, scope: !6649)
!6651 = !DILocation(line: 800, column: 12, scope: !6649)
!6652 = !DILocation(line: 801, column: 3, scope: !6649)
!6653 = !DILocation(line: 803, column: 12, scope: !6649)
!6654 = !DILocation(line: 804, column: 3, scope: !6649)
!6655 = !DILocation(line: 806, column: 12, scope: !6649)
!6656 = !DILocation(line: 807, column: 3, scope: !6649)
!6657 = !DILocation(line: 814, column: 3, scope: !6649)
!6658 = !DILocation(line: 815, column: 3, scope: !6649)
!6659 = !DILocation(line: 829, column: 2, scope: !6637)
!6660 = distinct !DISubprogram(name: "hard_fault", scope: !6547, file: !6547, line: 709, type: !6661, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !6663)
!6661 = !DISubroutineType(types: !6662)
!6662 = !{!137, !2490, !6614}
!6663 = !{!6664, !6665, !6666}
!6664 = !DILocalVariable(name: "esf", arg: 1, scope: !6660, file: !6547, line: 709, type: !2490)
!6665 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6660, file: !6547, line: 709, type: !6614)
!6666 = !DILocalVariable(name: "reason", scope: !6660, file: !6547, line: 711, type: !137)
!6667 = !DILocation(line: 0, scope: !6660)
!6668 = !DILocation(line: 732, column: 15, scope: !6660)
!6669 = !DILocation(line: 734, column: 12, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6660, file: !6547, line: 734, column: 6)
!6671 = !DILocation(line: 734, column: 17, scope: !6670)
!6672 = !DILocation(line: 734, column: 41, scope: !6670)
!6673 = !DILocation(line: 734, column: 6, scope: !6660)
!6674 = !DILocation(line: 736, column: 19, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6670, file: !6547, line: 736, column: 13)
!6676 = !DILocation(line: 736, column: 49, scope: !6675)
!6677 = !DILocation(line: 736, column: 13, scope: !6670)
!6678 = !DILocation(line: 738, column: 19, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6675, file: !6547, line: 738, column: 13)
!6680 = !DILocation(line: 738, column: 24, scope: !6679)
!6681 = !DILocation(line: 738, column: 47, scope: !6679)
!6682 = !DILocation(line: 738, column: 13, scope: !6675)
!6683 = !DILocation(line: 740, column: 7, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !6547, line: 740, column: 7)
!6685 = distinct !DILexicalBlock(scope: !6679, file: !6547, line: 738, column: 53)
!6686 = !DILocation(line: 740, column: 7, scope: !6685)
!6687 = !DILocation(line: 742, column: 24, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6684, file: !6547, line: 740, column: 38)
!6689 = !DILocation(line: 743, column: 3, scope: !6688)
!6690 = !DILocation(line: 743, column: 20, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6684, file: !6547, line: 743, column: 14)
!6692 = !DILocation(line: 743, column: 25, scope: !6691)
!6693 = !DILocation(line: 743, column: 52, scope: !6691)
!6694 = !DILocation(line: 743, column: 14, scope: !6684)
!6695 = !DILocation(line: 744, column: 13, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6691, file: !6547, line: 743, column: 58)
!6697 = !DILocation(line: 745, column: 3, scope: !6696)
!6698 = !DILocation(line: 745, column: 20, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6691, file: !6547, line: 745, column: 14)
!6700 = !DILocation(line: 745, column: 25, scope: !6699)
!6701 = !DILocation(line: 745, column: 52, scope: !6699)
!6702 = !DILocation(line: 745, column: 14, scope: !6691)
!6703 = !DILocation(line: 746, column: 13, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6699, file: !6547, line: 745, column: 58)
!6705 = !DILocation(line: 747, column: 3, scope: !6704)
!6706 = !DILocation(line: 747, column: 20, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6699, file: !6547, line: 747, column: 14)
!6708 = !DILocation(line: 747, column: 52, scope: !6707)
!6709 = !DILocation(line: 747, column: 14, scope: !6699)
!6710 = !DILocation(line: 748, column: 13, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6707, file: !6547, line: 747, column: 58)
!6712 = !DILocation(line: 753, column: 3, scope: !6711)
!6713 = !DILocation(line: 766, column: 2, scope: !6660)
!6714 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6547, file: !6547, line: 229, type: !6638, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !6715)
!6715 = !{!6716, !6717, !6718, !6719, !6720, !6721, !6724}
!6716 = !DILocalVariable(name: "esf", arg: 1, scope: !6714, file: !6547, line: 229, type: !2490)
!6717 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6714, file: !6547, line: 229, type: !103)
!6718 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6714, file: !6547, line: 230, type: !6614)
!6719 = !DILocalVariable(name: "reason", scope: !6714, file: !6547, line: 232, type: !137)
!6720 = !DILocalVariable(name: "mmfar", scope: !6714, file: !6547, line: 233, type: !137)
!6721 = !DILocalVariable(name: "temp", scope: !6722, file: !6547, line: 254, type: !137)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !6547, line: 244, column: 48)
!6723 = distinct !DILexicalBlock(scope: !6714, file: !6547, line: 244, column: 6)
!6724 = !DILocalVariable(name: "min_stack_ptr", scope: !6725, file: !6547, line: 309, type: !137)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !6547, line: 308, column: 43)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !6547, line: 308, column: 7)
!6727 = distinct !DILexicalBlock(scope: !6728, file: !6547, line: 289, column: 40)
!6728 = distinct !DILexicalBlock(scope: !6714, file: !6547, line: 288, column: 6)
!6729 = !DILocation(line: 0, scope: !6714)
!6730 = !DILocation(line: 237, column: 12, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6714, file: !6547, line: 237, column: 6)
!6732 = !DILocation(line: 241, column: 12, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6714, file: !6547, line: 241, column: 6)
!6734 = !DILocation(line: 244, column: 12, scope: !6723)
!6735 = !DILocation(line: 244, column: 17, scope: !6723)
!6736 = !DILocation(line: 244, column: 42, scope: !6723)
!6737 = !DILocation(line: 244, column: 6, scope: !6714)
!6738 = !DILocation(line: 254, column: 24, scope: !6722)
!6739 = !DILocation(line: 0, scope: !6722)
!6740 = !DILocation(line: 256, column: 13, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6722, file: !6547, line: 256, column: 7)
!6742 = !DILocation(line: 256, column: 18, scope: !6741)
!6743 = !DILocation(line: 256, column: 44, scope: !6741)
!6744 = !DILocation(line: 256, column: 7, scope: !6722)
!6745 = !DILocation(line: 259, column: 24, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !6547, line: 259, column: 8)
!6747 = distinct !DILexicalBlock(scope: !6741, file: !6547, line: 256, column: 50)
!6748 = !DILocation(line: 259, column: 8, scope: !6747)
!6749 = !DILocation(line: 261, column: 15, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6746, file: !6547, line: 259, column: 30)
!6751 = !DILocation(line: 262, column: 4, scope: !6750)
!6752 = !DILocation(line: 265, column: 12, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6714, file: !6547, line: 265, column: 6)
!6754 = !DILocation(line: 288, column: 12, scope: !6728)
!6755 = !DILocation(line: 288, column: 17, scope: !6728)
!6756 = !DILocation(line: 288, column: 41, scope: !6728)
!6757 = !DILocation(line: 289, column: 9, scope: !6728)
!6758 = !DILocation(line: 289, column: 14, scope: !6728)
!6759 = !DILocation(line: 288, column: 6, scope: !6714)
!6760 = !DILocation(line: 308, column: 12, scope: !6726)
!6761 = !DILocation(line: 308, column: 17, scope: !6726)
!6762 = !DILocation(line: 308, column: 7, scope: !6727)
!6763 = !DILocation(line: 310, column: 6, scope: !6725)
!6764 = !DILocation(line: 309, column: 29, scope: !6725)
!6765 = !DILocation(line: 0, scope: !6725)
!6766 = !DILocation(line: 312, column: 8, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6725, file: !6547, line: 312, column: 8)
!6768 = !DILocation(line: 312, column: 8, scope: !6725)
!6769 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6770, file: !6271, line: 1099, type: !137)
!6770 = distinct !DISubprogram(name: "__set_PSP", scope: !6271, file: !6271, line: 1099, type: !6104, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !6771)
!6771 = !{!6769}
!6772 = !DILocation(line: 0, scope: !6770, inlinedAt: !6773)
!6773 = distinct !DILocation(line: 338, column: 5, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6767, file: !6547, line: 312, column: 23)
!6775 = !DILocation(line: 1101, column: 3, scope: !6770, inlinedAt: !6773)
!6776 = !{i64 2476209}
!6777 = !DILocation(line: 341, column: 4, scope: !6774)
!6778 = !DILocation(line: 366, column: 12, scope: !6714)
!6779 = !DILocation(line: 369, column: 15, scope: !6714)
!6780 = !DILocation(line: 371, column: 2, scope: !6714)
!6781 = distinct !DISubprogram(name: "bus_fault", scope: !6547, file: !6547, line: 383, type: !6782, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !6784)
!6782 = !DISubroutineType(types: !6783)
!6783 = !{!103, !2490, !103, !6614}
!6784 = !{!6785, !6786, !6787, !6788, !6789}
!6785 = !DILocalVariable(name: "esf", arg: 1, scope: !6781, file: !6547, line: 383, type: !2490)
!6786 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6781, file: !6547, line: 383, type: !103)
!6787 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6781, file: !6547, line: 383, type: !6614)
!6788 = !DILocalVariable(name: "reason", scope: !6781, file: !6547, line: 385, type: !137)
!6789 = !DILocalVariable(name: "bfar", scope: !6790, file: !6547, line: 405, type: !137)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !6547, line: 395, column: 42)
!6791 = distinct !DILexicalBlock(scope: !6781, file: !6547, line: 395, column: 6)
!6792 = !DILocation(line: 0, scope: !6781)
!6793 = !DILocation(line: 389, column: 11, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6781, file: !6547, line: 389, column: 6)
!6795 = !DILocation(line: 392, column: 11, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6781, file: !6547, line: 392, column: 6)
!6797 = !DILocation(line: 395, column: 11, scope: !6791)
!6798 = !DILocation(line: 395, column: 16, scope: !6791)
!6799 = !DILocation(line: 395, column: 6, scope: !6781)
!6800 = !DILocation(line: 405, column: 3, scope: !6790)
!6801 = !DILocation(line: 0, scope: !6790)
!6802 = !DILocation(line: 407, column: 13, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6790, file: !6547, line: 407, column: 7)
!6804 = !DILocation(line: 407, column: 18, scope: !6803)
!6805 = !DILocation(line: 407, column: 44, scope: !6803)
!6806 = !DILocation(line: 407, column: 7, scope: !6790)
!6807 = !DILocation(line: 411, column: 15, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6809, file: !6547, line: 409, column: 30)
!6809 = distinct !DILexicalBlock(scope: !6810, file: !6547, line: 409, column: 8)
!6810 = distinct !DILexicalBlock(scope: !6803, file: !6547, line: 407, column: 50)
!6811 = !DILocation(line: 412, column: 4, scope: !6808)
!6812 = !DILocation(line: 415, column: 11, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6781, file: !6547, line: 415, column: 6)
!6814 = !DILocation(line: 418, column: 12, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6781, file: !6547, line: 418, column: 6)
!6816 = !DILocation(line: 524, column: 12, scope: !6781)
!6817 = !DILocation(line: 526, column: 15, scope: !6781)
!6818 = !DILocation(line: 528, column: 2, scope: !6781)
!6819 = distinct !DISubprogram(name: "usage_fault", scope: !6547, file: !6547, line: 539, type: !6820, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !6824)
!6820 = !DISubroutineType(types: !6821)
!6821 = !{!137, !6822}
!6822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6823, size: 32)
!6823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2491)
!6824 = !{!6825, !6826}
!6825 = !DILocalVariable(name: "esf", arg: 1, scope: !6819, file: !6547, line: 539, type: !6822)
!6826 = !DILocalVariable(name: "reason", scope: !6819, file: !6547, line: 541, type: !137)
!6827 = !DILocation(line: 0, scope: !6819)
!6828 = !DILocation(line: 546, column: 12, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6819, file: !6547, line: 546, column: 6)
!6830 = !DILocation(line: 549, column: 12, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6819, file: !6547, line: 549, column: 6)
!6832 = !DILocation(line: 567, column: 12, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6819, file: !6547, line: 567, column: 6)
!6834 = !DILocation(line: 570, column: 12, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6819, file: !6547, line: 570, column: 6)
!6836 = !DILocation(line: 573, column: 12, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6819, file: !6547, line: 573, column: 6)
!6838 = !DILocation(line: 576, column: 12, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6819, file: !6547, line: 576, column: 6)
!6840 = !DILocation(line: 581, column: 12, scope: !6819)
!6841 = !DILocation(line: 583, column: 2, scope: !6819)
!6842 = distinct !DISubprogram(name: "debug_monitor", scope: !6547, file: !6547, line: 632, type: !6843, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !6845)
!6843 = !DISubroutineType(types: !6844)
!6844 = !{null, !2490, !6614}
!6845 = !{!6846, !6847}
!6846 = !DILocalVariable(name: "esf", arg: 1, scope: !6842, file: !6547, line: 632, type: !2490)
!6847 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6842, file: !6547, line: 632, type: !6614)
!6848 = !DILocation(line: 0, scope: !6842)
!6849 = !DILocation(line: 634, column: 15, scope: !6842)
!6850 = !DILocation(line: 652, column: 1, scope: !6842)
!6851 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6547, file: !6547, line: 658, type: !6852, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !6854)
!6852 = !DISubroutineType(types: !6853)
!6853 = !{!224, !2490}
!6854 = !{!6855, !6856, !6857}
!6855 = !DILocalVariable(name: "esf", arg: 1, scope: !6851, file: !6547, line: 658, type: !2490)
!6856 = !DILocalVariable(name: "ret_addr", scope: !6851, file: !6547, line: 660, type: !150)
!6857 = !DILocalVariable(name: "fault_insn", scope: !6851, file: !6547, line: 686, type: !151)
!6858 = !DILocation(line: 0, scope: !6851)
!6859 = !DILocation(line: 660, column: 46, scope: !6851)
!6860 = !DILocation(line: 660, column: 23, scope: !6851)
!6861 = !DILocation(line: 682, column: 11, scope: !6851)
!6862 = !DILocation(line: 271, column: 3, scope: !6863, inlinedAt: !6864)
!6863 = distinct !DISubprogram(name: "__DSB", scope: !6271, file: !6271, line: 269, type: !2794, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !162)
!6864 = distinct !DILocation(line: 683, column: 2, scope: !6851)
!6865 = !{i64 2452344}
!6866 = !DILocation(line: 260, column: 3, scope: !6867, inlinedAt: !6868)
!6867 = distinct !DISubprogram(name: "__ISB", scope: !6271, file: !6271, line: 258, type: !2794, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !162)
!6868 = distinct !DILocation(line: 684, column: 2, scope: !6851)
!6869 = !{i64 2452061}
!6870 = !DILocation(line: 686, column: 35, scope: !6851)
!6871 = !DILocation(line: 686, column: 24, scope: !6851)
!6872 = !DILocation(line: 688, column: 11, scope: !6851)
!6873 = !DILocation(line: 271, column: 3, scope: !6863, inlinedAt: !6874)
!6874 = distinct !DILocation(line: 689, column: 2, scope: !6851)
!6875 = !DILocation(line: 260, column: 3, scope: !6867, inlinedAt: !6876)
!6876 = distinct !DILocation(line: 690, column: 2, scope: !6851)
!6877 = !DILocation(line: 693, column: 45, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6851, file: !6547, line: 693, column: 6)
!6879 = !DILocation(line: 699, column: 1, scope: !6851)
!6880 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6547, file: !6547, line: 1107, type: !2794, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2462, retainedNodes: !162)
!6881 = !DILocation(line: 1111, column: 11, scope: !6880)
!6882 = !DILocation(line: 1136, column: 1, scope: !6880)
!6883 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6884, file: !6884, line: 26, type: !2794, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !6885)
!6884 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6885 = !{!6886}
!6886 = !DILocalVariable(name: "irq", scope: !6883, file: !6884, line: 28, type: !103)
!6887 = !DILocation(line: 0, scope: !6883)
!6888 = !DILocation(line: 30, column: 2, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6883, file: !6884, line: 30, column: 2)
!6890 = !DILocation(line: 31, column: 3, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !6884, line: 30, column: 39)
!6892 = distinct !DILexicalBlock(scope: !6889, file: !6884, line: 30, column: 2)
!6893 = !DILocation(line: 30, column: 35, scope: !6892)
!6894 = !DILocation(line: 30, column: 13, scope: !6892)
!6895 = distinct !{!6895, !6888, !6896}
!6896 = !DILocation(line: 32, column: 2, scope: !6889)
!6897 = !DILocation(line: 33, column: 1, scope: !6883)
!6898 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !415, file: !415, line: 1638, type: !6305, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2533, retainedNodes: !6899)
!6899 = !{!6900, !6901}
!6900 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6898, file: !415, line: 1638, type: !739)
!6901 = !DILocalVariable(name: "priority", arg: 2, scope: !6898, file: !415, line: 1638, type: !137)
!6902 = !DILocation(line: 0, scope: !6898)
!6903 = !DILocation(line: 1640, column: 7, scope: !6898)
!6904 = !DILocation(line: 0, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6898, file: !415, line: 1640, column: 7)
!6906 = !DILocation(line: 1648, column: 1, scope: !6898)
!6907 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6908, file: !6908, line: 27, type: !6909, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2578, retainedNodes: !7012)
!6908 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6909 = !DISubroutineType(types: !6910)
!6910 = !{null, !6911}
!6911 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !276, line: 347, baseType: !6912)
!6912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6913, size: 32)
!6913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !276, line: 245, size: 1024, elements: !6914)
!6914 = !{!6915, !6973, !6985, !6986, !6987, !6988, !6994, !7007}
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6913, file: !276, line: 247, baseType: !6916, size: 384)
!6916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !276, line: 57, size: 384, elements: !6917)
!6917 = !{!6918, !6942, !6949, !6950, !6951, !6960, !6961, !6962}
!6918 = !DIDerivedType(tag: DW_TAG_member, scope: !6916, file: !276, line: 60, baseType: !6919, size: 64)
!6919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6916, file: !276, line: 60, size: 64, elements: !6920)
!6920 = !{!6921, !6936}
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6919, file: !276, line: 61, baseType: !6922, size: 64)
!6922 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !286, line: 49, baseType: !6923)
!6923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !286, line: 37, size: 64, elements: !6924)
!6924 = !{!6925, !6931}
!6925 = !DIDerivedType(tag: DW_TAG_member, scope: !6923, file: !286, line: 38, baseType: !6926, size: 32)
!6926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6923, file: !286, line: 38, size: 32, elements: !6927)
!6927 = !{!6928, !6930}
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6926, file: !286, line: 39, baseType: !6929, size: 32)
!6929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6923, size: 32)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6926, file: !286, line: 40, baseType: !6929, size: 32)
!6931 = !DIDerivedType(tag: DW_TAG_member, scope: !6923, file: !286, line: 42, baseType: !6932, size: 32, offset: 32)
!6932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6923, file: !286, line: 42, size: 32, elements: !6933)
!6933 = !{!6934, !6935}
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6932, file: !286, line: 43, baseType: !6929, size: 32)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6932, file: !286, line: 44, baseType: !6929, size: 32)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6919, file: !276, line: 62, baseType: !6937, size: 64)
!6937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !6938)
!6938 = !{!6939}
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6937, file: !302, line: 50, baseType: !6940, size: 64)
!6940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6941, size: 64, elements: !307)
!6941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6937, size: 32)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6916, file: !276, line: 68, baseType: !6943, size: 32, offset: 64)
!6943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6944, size: 32)
!6944 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !312, line: 233, baseType: !6945)
!6945 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 231, size: 64, elements: !6946)
!6946 = !{!6947}
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6945, file: !312, line: 232, baseType: !6948, size: 64)
!6948 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !286, line: 48, baseType: !6923)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6916, file: !276, line: 71, baseType: !221, size: 8, offset: 96)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6916, file: !276, line: 74, baseType: !221, size: 8, offset: 104)
!6951 = !DIDerivedType(tag: DW_TAG_member, scope: !6916, file: !276, line: 90, baseType: !6952, size: 16, offset: 112)
!6952 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6916, file: !276, line: 90, size: 16, elements: !6953)
!6953 = !{!6954, !6959}
!6954 = !DIDerivedType(tag: DW_TAG_member, scope: !6952, file: !276, line: 91, baseType: !6955, size: 16)
!6955 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6952, file: !276, line: 91, size: 16, elements: !6956)
!6956 = !{!6957, !6958}
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6955, file: !276, line: 96, baseType: !326, size: 8)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6955, file: !276, line: 97, baseType: !221, size: 8, offset: 8)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6952, file: !276, line: 100, baseType: !151, size: 16)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6916, file: !276, line: 107, baseType: !137, size: 32, offset: 128)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6916, file: !276, line: 127, baseType: !102, size: 32, offset: 160)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6916, file: !276, line: 131, baseType: !6963, size: 192, offset: 192)
!6963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !312, line: 244, size: 192, elements: !6964)
!6964 = !{!6965, !6966, !6972}
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6963, file: !312, line: 245, baseType: !6922, size: 64)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6963, file: !312, line: 246, baseType: !6967, size: 32, offset: 64)
!6967 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !312, line: 242, baseType: !6968)
!6968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6969, size: 32)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{null, !6971}
!6971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6963, size: 32)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6963, file: !312, line: 249, baseType: !343, size: 64, offset: 128)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6913, file: !276, line: 250, baseType: !6974, size: 288, offset: 384)
!6974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !347, line: 25, size: 288, elements: !6975)
!6975 = !{!6976, !6977, !6978, !6979, !6980, !6981, !6982, !6983, !6984}
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6974, file: !347, line: 26, baseType: !137, size: 32)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6974, file: !347, line: 27, baseType: !137, size: 32, offset: 32)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6974, file: !347, line: 28, baseType: !137, size: 32, offset: 64)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6974, file: !347, line: 29, baseType: !137, size: 32, offset: 96)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6974, file: !347, line: 30, baseType: !137, size: 32, offset: 128)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6974, file: !347, line: 31, baseType: !137, size: 32, offset: 160)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6974, file: !347, line: 32, baseType: !137, size: 32, offset: 192)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6974, file: !347, line: 33, baseType: !137, size: 32, offset: 224)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6974, file: !347, line: 34, baseType: !137, size: 32, offset: 256)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6913, file: !276, line: 253, baseType: !102, size: 32, offset: 672)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6913, file: !276, line: 256, baseType: !6944, size: 64, offset: 704)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6913, file: !276, line: 294, baseType: !103, size: 32, offset: 768)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6913, file: !276, line: 300, baseType: !6989, size: 96, offset: 800)
!6989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !276, line: 149, size: 96, elements: !6990)
!6990 = !{!6991, !6992, !6993}
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6989, file: !276, line: 153, baseType: !22, size: 32)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6989, file: !276, line: 162, baseType: !120, size: 32, offset: 32)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6989, file: !276, line: 168, baseType: !120, size: 32, offset: 64)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6913, file: !276, line: 325, baseType: !6995, size: 32, offset: 896)
!6995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6996, size: 32)
!6996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !370, line: 5073, size: 160, elements: !6997)
!6997 = !{!6998, !7004, !7005}
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6996, file: !370, line: 5074, baseType: !6999, size: 96)
!6999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !7000)
!7000 = !{!7001, !7002, !7003}
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6999, file: !113, line: 57, baseType: !116, size: 32)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6999, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6999, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6996, file: !370, line: 5075, baseType: !6944, size: 64, offset: 96)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6996, file: !370, line: 5076, baseType: !7006, offset: 160)
!7006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !381, line: 43, elements: !162)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6913, file: !276, line: 343, baseType: !7008, size: 64, offset: 928)
!7008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !347, line: 60, size: 64, elements: !7009)
!7009 = !{!7010, !7011}
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7008, file: !347, line: 63, baseType: !137, size: 32)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7008, file: !347, line: 66, baseType: !137, size: 32, offset: 32)
!7012 = !{!7013}
!7013 = !DILocalVariable(name: "thread", arg: 1, scope: !6907, file: !6908, line: 27, type: !6911)
!7014 = !DILocation(line: 0, scope: !6907)
!7015 = !DILocation(line: 29, column: 6, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6907, file: !6908, line: 29, column: 6)
!7017 = !DILocation(line: 29, column: 15, scope: !7016)
!7018 = !DILocation(line: 29, column: 6, scope: !6907)
!7019 = !DILocation(line: 1031, column: 3, scope: !7020, inlinedAt: !7023)
!7020 = distinct !DISubprogram(name: "__get_IPSR", scope: !6271, file: !6271, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2578, retainedNodes: !7021)
!7021 = !{!7022}
!7022 = !DILocalVariable(name: "result", scope: !7020, file: !6271, line: 1029, type: !137)
!7023 = distinct !DILocation(line: 48, column: 10, scope: !7024, inlinedAt: !7028)
!7024 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7025, file: !7025, line: 46, type: !7026, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2578, retainedNodes: !162)
!7025 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7026 = !DISubroutineType(types: !7027)
!7027 = !{!224}
!7028 = distinct !DILocation(line: 30, column: 7, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7030, file: !6908, line: 30, column: 7)
!7030 = distinct !DILexicalBlock(scope: !7016, file: !6908, line: 29, column: 26)
!7031 = !{i64 2441192}
!7032 = !DILocation(line: 0, scope: !7020, inlinedAt: !7023)
!7033 = !DILocation(line: 48, column: 9, scope: !7024, inlinedAt: !7028)
!7034 = !DILocation(line: 30, column: 7, scope: !7030)
!7035 = !DILocation(line: 42, column: 14, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7029, file: !6908, line: 30, column: 25)
!7037 = !DILocation(line: 48, column: 15, scope: !7036)
!7038 = !DILocation(line: 49, column: 3, scope: !7036)
!7039 = !DILocation(line: 52, column: 2, scope: !6907)
!7040 = !DILocation(line: 53, column: 1, scope: !6907)
!7041 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !271, file: !271, line: 127, type: !2794, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !162)
!7042 = !DILocation(line: 134, column: 2, scope: !7041)
!7043 = !DILocation(line: 156, column: 1, scope: !7041)
!7044 = !DILocation(line: 0, scope: !270)
!7045 = !DILocation(line: 289, column: 36, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !270, file: !271, line: 285, column: 2)
!7047 = !DILocation(line: 289, column: 42, scope: !7046)
!7048 = !DILocation(line: 300, column: 36, scope: !270)
!7049 = !DILocation(line: 301, column: 35, scope: !270)
!7050 = !DILocation(line: 302, column: 37, scope: !270)
!7051 = !DILocation(line: 311, column: 2, scope: !270)
!7052 = !DILocation(line: 316, column: 1, scope: !270)
!7053 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !443, file: !443, line: 180, type: !2794, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !162)
!7054 = !DILocation(line: 188, column: 12, scope: !7053)
!7055 = !DILocation(line: 271, column: 3, scope: !7056, inlinedAt: !7057)
!7056 = distinct !DISubprogram(name: "__DSB", scope: !6271, file: !6271, line: 269, type: !2794, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !162)
!7057 = distinct !DILocation(line: 192, column: 2, scope: !7053)
!7058 = !{i64 2597043}
!7059 = !DILocation(line: 260, column: 3, scope: !7060, inlinedAt: !7061)
!7060 = distinct !DISubprogram(name: "__ISB", scope: !6271, file: !6271, line: 258, type: !2794, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !162)
!7061 = distinct !DILocation(line: 193, column: 2, scope: !7053)
!7062 = !{i64 2596760}
!7063 = !DILocation(line: 194, column: 1, scope: !7053)
!7064 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !443, file: !443, line: 199, type: !2794, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !162)
!7065 = !DILocation(line: 282, column: 3, scope: !7066, inlinedAt: !7067)
!7066 = distinct !DISubprogram(name: "__DMB", scope: !6271, file: !6271, line: 280, type: !2794, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !162)
!7067 = distinct !DILocation(line: 202, column: 2, scope: !7064)
!7068 = !{i64 2597319}
!7069 = !DILocation(line: 205, column: 12, scope: !7064)
!7070 = !DILocation(line: 206, column: 1, scope: !7064)
!7071 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !443, file: !443, line: 275, type: !7072, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7085)
!7072 = !DISubroutineType(types: !7073)
!7073 = !{null, !7074, !1686, !6514, !6514}
!7074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7075, size: 32)
!7075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7076)
!7076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !394, line: 52, size: 96, elements: !7077)
!7077 = !{!7078, !7079, !7080}
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7076, file: !394, line: 53, baseType: !22, size: 32)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7076, file: !394, line: 54, baseType: !120, size: 32, offset: 32)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7076, file: !394, line: 55, baseType: !7081, size: 32, offset: 64)
!7081 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !400, line: 151, baseType: !7082)
!7082 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !400, line: 149, size: 32, elements: !7083)
!7083 = !{!7084}
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7082, file: !400, line: 150, baseType: !137, size: 32)
!7085 = !{!7086, !7087, !7088, !7089}
!7086 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7071, file: !443, line: 276, type: !7074)
!7087 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7071, file: !443, line: 276, type: !1686)
!7088 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7071, file: !443, line: 277, type: !6514)
!7089 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7071, file: !443, line: 277, type: !6514)
!7090 = !DILocation(line: 0, scope: !7071)
!7091 = !DILocation(line: 279, column: 6, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7071, file: !443, line: 279, column: 6)
!7093 = !DILocation(line: 285, column: 1, scope: !7071)
!7094 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7095, file: !7095, line: 220, type: !7096, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7098)
!7095 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7096 = !DISubroutineType(types: !7097)
!7097 = !{!103, !7074, !1686, !6514, !6514}
!7098 = !{!7099, !7100, !7101, !7102, !7103}
!7099 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7094, file: !7095, line: 221, type: !7074)
!7100 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7094, file: !7095, line: 221, type: !1686)
!7101 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7094, file: !7095, line: 222, type: !6514)
!7102 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7094, file: !7095, line: 223, type: !6514)
!7103 = !DILocalVariable(name: "mpu_reg_index", scope: !7094, file: !7095, line: 225, type: !103)
!7104 = !DILocation(line: 0, scope: !7094)
!7105 = !DILocation(line: 225, column: 22, scope: !7094)
!7106 = !DILocation(line: 233, column: 18, scope: !7094)
!7107 = !DILocation(line: 236, column: 23, scope: !7094)
!7108 = !DILocation(line: 236, column: 21, scope: !7094)
!7109 = !DILocation(line: 238, column: 2, scope: !7094)
!7110 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !443, file: !443, line: 105, type: !7111, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7113)
!7111 = !DISubroutineType(types: !7112)
!7112 = !{!103, !7074, !221, !221, !224}
!7113 = !{!7114, !7115, !7116, !7117, !7118, !7119}
!7114 = !DILocalVariable(name: "regions", arg: 1, scope: !7110, file: !443, line: 106, type: !7074)
!7115 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7110, file: !443, line: 106, type: !221)
!7116 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7110, file: !443, line: 106, type: !221)
!7117 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7110, file: !443, line: 107, type: !224)
!7118 = !DILocalVariable(name: "i", scope: !7110, file: !443, line: 109, type: !103)
!7119 = !DILocalVariable(name: "reg_index", scope: !7110, file: !443, line: 110, type: !103)
!7120 = !DILocation(line: 0, scope: !7110)
!7121 = !DILocation(line: 110, column: 18, scope: !7110)
!7122 = !DILocation(line: 112, column: 16, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7124, file: !443, line: 112, column: 2)
!7124 = distinct !DILexicalBlock(scope: !7110, file: !443, line: 112, column: 2)
!7125 = !DILocation(line: 112, column: 2, scope: !7124)
!7126 = !DILocation(line: 113, column: 7, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !443, line: 113, column: 7)
!7128 = distinct !DILexicalBlock(scope: !7123, file: !443, line: 112, column: 36)
!7129 = !DILocation(line: 113, column: 18, scope: !7127)
!7130 = !DILocation(line: 113, column: 23, scope: !7127)
!7131 = !DILocation(line: 113, column: 7, scope: !7128)
!7132 = !DILocation(line: 118, column: 23, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7128, file: !443, line: 118, column: 7)
!7134 = !DILocation(line: 119, column: 7, scope: !7133)
!7135 = !DILocation(line: 118, column: 7, scope: !7128)
!7136 = !DILocation(line: 124, column: 36, scope: !7128)
!7137 = !DILocation(line: 124, column: 15, scope: !7128)
!7138 = !DILocation(line: 126, column: 17, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7128, file: !443, line: 126, column: 7)
!7140 = !DILocation(line: 126, column: 7, scope: !7128)
!7141 = !DILocation(line: 131, column: 12, scope: !7128)
!7142 = !DILocation(line: 132, column: 2, scope: !7128)
!7143 = !DILocation(line: 112, column: 32, scope: !7123)
!7144 = distinct !{!7144, !7125, !7145}
!7145 = !DILocation(line: 132, column: 2, scope: !7124)
!7146 = !DILocation(line: 135, column: 1, scope: !7110)
!7147 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7095, file: !7095, line: 63, type: !7148, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7150)
!7148 = !DISubroutineType(types: !7149)
!7149 = !{!103, !7074}
!7150 = !{!7151, !7152}
!7151 = !DILocalVariable(name: "part", arg: 1, scope: !7147, file: !7095, line: 63, type: !7074)
!7152 = !DILocalVariable(name: "partition_is_valid", scope: !7147, file: !7095, line: 70, type: !103)
!7153 = !DILocation(line: 0, scope: !7147)
!7154 = !DILocation(line: 71, column: 11, scope: !7147)
!7155 = !DILocation(line: 71, column: 37, scope: !7147)
!7156 = !DILocation(line: 72, column: 3, scope: !7147)
!7157 = !DILocation(line: 71, column: 30, scope: !7147)
!7158 = !DILocation(line: 75, column: 11, scope: !7147)
!7159 = !DILocation(line: 75, column: 17, scope: !7147)
!7160 = !DILocation(line: 75, column: 38, scope: !7147)
!7161 = !DILocation(line: 77, column: 2, scope: !7147)
!7162 = distinct !DISubprogram(name: "mpu_configure_region", scope: !443, file: !443, line: 79, type: !7163, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7165)
!7163 = !DISubroutineType(types: !7164)
!7164 = !{!103, !1686, !7074}
!7165 = !{!7166, !7167, !7168}
!7166 = !DILocalVariable(name: "index", arg: 1, scope: !7162, file: !443, line: 79, type: !1686)
!7167 = !DILocalVariable(name: "new_region", arg: 2, scope: !7162, file: !443, line: 80, type: !7074)
!7168 = !DILocalVariable(name: "region_conf", scope: !7162, file: !443, line: 82, type: !432)
!7169 = !DILocation(line: 0, scope: !7162)
!7170 = !DILocation(line: 82, column: 2, scope: !7162)
!7171 = !DILocation(line: 82, column: 24, scope: !7162)
!7172 = !DILocation(line: 87, column: 33, scope: !7162)
!7173 = !DILocation(line: 87, column: 14, scope: !7162)
!7174 = !DILocation(line: 87, column: 19, scope: !7162)
!7175 = !DILocation(line: 91, column: 55, scope: !7162)
!7176 = !DILocation(line: 92, column: 16, scope: !7162)
!7177 = !DILocation(line: 92, column: 53, scope: !7162)
!7178 = !DILocation(line: 91, column: 2, scope: !7162)
!7179 = !DILocation(line: 95, column: 9, scope: !7162)
!7180 = !DILocation(line: 97, column: 1, scope: !7162)
!7181 = !DILocation(line: 95, column: 2, scope: !7162)
!7182 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7095, file: !7095, line: 113, type: !7183, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7188)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{null, !7185, !7186, !137, !137}
!7185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 32)
!7186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7187, size: 32)
!7187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7081)
!7188 = !{!7189, !7190, !7191, !7192}
!7189 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7182, file: !7095, line: 114, type: !7185)
!7190 = !DILocalVariable(name: "attr", arg: 2, scope: !7182, file: !7095, line: 115, type: !7186)
!7191 = !DILocalVariable(name: "base", arg: 3, scope: !7182, file: !7095, line: 115, type: !137)
!7192 = !DILocalVariable(name: "size", arg: 4, scope: !7182, file: !7095, line: 115, type: !137)
!7193 = !DILocation(line: 0, scope: !7182)
!7194 = !DILocation(line: 127, column: 23, scope: !7182)
!7195 = !DILocation(line: 127, column: 35, scope: !7182)
!7196 = !DILocation(line: 127, column: 33, scope: !7182)
!7197 = !DILocation(line: 127, column: 10, scope: !7182)
!7198 = !DILocation(line: 127, column: 15, scope: !7182)
!7199 = !DILocation(line: 129, column: 1, scope: !7182)
!7200 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !443, file: !443, line: 57, type: !7201, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7203)
!7201 = !DISubroutineType(types: !7202)
!7202 = !{!103, !1686, !430}
!7203 = !{!7204, !7205}
!7204 = !DILocalVariable(name: "index", arg: 1, scope: !7200, file: !443, line: 57, type: !1686)
!7205 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7200, file: !443, line: 58, type: !430)
!7206 = !DILocation(line: 0, scope: !7200)
!7207 = !DILocation(line: 61, column: 6, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7200, file: !443, line: 61, column: 6)
!7209 = !DILocation(line: 61, column: 12, scope: !7208)
!7210 = !DILocation(line: 61, column: 6, scope: !7200)
!7211 = !DILocation(line: 71, column: 2, scope: !7200)
!7212 = !DILocation(line: 73, column: 2, scope: !7200)
!7213 = !DILocation(line: 74, column: 1, scope: !7200)
!7214 = distinct !DISubprogram(name: "region_init", scope: !7095, file: !7095, line: 29, type: !7215, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7217)
!7215 = !DISubroutineType(types: !7216)
!7216 = !{null, !6514, !430}
!7217 = !{!7218, !7219}
!7218 = !DILocalVariable(name: "index", arg: 1, scope: !7214, file: !7095, line: 29, type: !6514)
!7219 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7214, file: !7095, line: 30, type: !430)
!7220 = !DILocation(line: 0, scope: !7214)
!7221 = !DILocation(line: 33, column: 2, scope: !7214)
!7222 = !DILocation(line: 47, column: 28, scope: !7214)
!7223 = !DILocation(line: 47, column: 33, scope: !7214)
!7224 = !DILocation(line: 48, column: 26, scope: !7214)
!7225 = !DILocation(line: 47, column: 12, scope: !7214)
!7226 = !DILocation(line: 49, column: 32, scope: !7214)
!7227 = !DILocation(line: 49, column: 37, scope: !7214)
!7228 = !DILocation(line: 49, column: 12, scope: !7214)
!7229 = !DILocation(line: 53, column: 1, scope: !7214)
!7230 = distinct !DISubprogram(name: "set_region_number", scope: !7231, file: !7231, line: 32, type: !6104, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7232)
!7231 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7232 = !{!7233}
!7233 = !DILocalVariable(name: "index", arg: 1, scope: !7230, file: !7231, line: 32, type: !137)
!7234 = !DILocation(line: 0, scope: !7230)
!7235 = !DILocation(line: 34, column: 11, scope: !7230)
!7236 = !DILocation(line: 35, column: 1, scope: !7230)
!7237 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7095, file: !7095, line: 88, type: !7238, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7240)
!7238 = !DISubroutineType(types: !7239)
!7239 = !{!137, !137}
!7240 = !{!7241}
!7241 = !DILocalVariable(name: "size", arg: 1, scope: !7237, file: !7095, line: 88, type: !137)
!7242 = !DILocation(line: 0, scope: !7237)
!7243 = !DILocation(line: 91, column: 11, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7237, file: !7095, line: 91, column: 6)
!7245 = !DILocation(line: 91, column: 6, scope: !7237)
!7246 = !DILocation(line: 100, column: 11, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7237, file: !7095, line: 100, column: 6)
!7248 = !DILocation(line: 100, column: 6, scope: !7237)
!7249 = !DILocation(line: 104, column: 35, scope: !7237)
!7250 = !DILocation(line: 104, column: 16, scope: !7237)
!7251 = !DILocation(line: 104, column: 50, scope: !7237)
!7252 = !DILocation(line: 104, column: 72, scope: !7237)
!7253 = !DILocation(line: 104, column: 2, scope: !7237)
!7254 = !DILocation(line: 106, column: 1, scope: !7237)
!7255 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !443, file: !443, line: 307, type: !7256, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7258)
!7256 = !DISubroutineType(types: !7257)
!7257 = !{null, !7074, !221}
!7258 = !{!7259, !7260}
!7259 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7255, file: !443, line: 308, type: !7074)
!7260 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7255, file: !443, line: 308, type: !221)
!7261 = !DILocation(line: 0, scope: !7255)
!7262 = !DILocation(line: 310, column: 6, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7255, file: !443, line: 310, column: 6)
!7264 = !DILocation(line: 316, column: 1, scope: !7255)
!7265 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7095, file: !7095, line: 249, type: !7266, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7268)
!7266 = !DISubroutineType(types: !7267)
!7267 = !{!103, !7074, !221}
!7268 = !{!7269, !7270, !7271, !7272}
!7269 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7265, file: !7095, line: 250, type: !7074)
!7270 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7265, file: !7095, line: 250, type: !221)
!7271 = !DILocalVariable(name: "mpu_reg_index", scope: !7265, file: !7095, line: 252, type: !103)
!7272 = !DILocalVariable(name: "i", scope: !7273, file: !7095, line: 264, type: !103)
!7273 = distinct !DILexicalBlock(scope: !7274, file: !7095, line: 264, column: 3)
!7274 = distinct !DILexicalBlock(scope: !7275, file: !7095, line: 261, column: 32)
!7275 = distinct !DILexicalBlock(scope: !7265, file: !7095, line: 261, column: 6)
!7276 = !DILocation(line: 0, scope: !7265)
!7277 = !DILocation(line: 252, column: 22, scope: !7265)
!7278 = !DILocation(line: 258, column: 18, scope: !7265)
!7279 = !DILocation(line: 261, column: 20, scope: !7275)
!7280 = !DILocation(line: 261, column: 6, scope: !7265)
!7281 = !DILocation(line: 0, scope: !7273)
!7282 = !DILocation(line: 265, column: 4, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !7095, line: 264, column: 59)
!7284 = distinct !DILexicalBlock(scope: !7273, file: !7095, line: 264, column: 3)
!7285 = !DILocation(line: 264, column: 55, scope: !7284)
!7286 = !DILocation(line: 264, column: 33, scope: !7284)
!7287 = !DILocation(line: 264, column: 3, scope: !7273)
!7288 = distinct !{!7288, !7287, !7289}
!7289 = !DILocation(line: 266, column: 3, scope: !7273)
!7290 = !DILocation(line: 269, column: 2, scope: !7265)
!7291 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7292, file: !7292, line: 218, type: !6104, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7293)
!7292 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7293 = !{!7294}
!7294 = !DILocalVariable(name: "rnr", arg: 1, scope: !7291, file: !7292, line: 218, type: !137)
!7295 = !DILocation(line: 0, scope: !7291)
!7296 = !DILocation(line: 220, column: 12, scope: !7291)
!7297 = !DILocation(line: 221, column: 13, scope: !7291)
!7298 = !DILocation(line: 222, column: 1, scope: !7291)
!7299 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !443, file: !443, line: 326, type: !7300, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !7302)
!7300 = !DISubroutineType(types: !7301)
!7301 = !{!103}
!7302 = !{!7303}
!7303 = !DILocalVariable(name: "r_index", scope: !7299, file: !443, line: 328, type: !137)
!7304 = !DILocation(line: 330, column: 17, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7299, file: !443, line: 330, column: 6)
!7306 = !DILocation(line: 330, column: 29, scope: !7305)
!7307 = !DILocation(line: 330, column: 6, scope: !7299)
!7308 = !DILocation(line: 347, column: 2, scope: !7299)
!7309 = !DILocation(line: 0, scope: !7299)
!7310 = !DILocation(line: 364, column: 29, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7312, file: !443, line: 364, column: 2)
!7312 = distinct !DILexicalBlock(scope: !7299, file: !443, line: 364, column: 2)
!7313 = !DILocation(line: 364, column: 2, scope: !7312)
!7314 = !DILocation(line: 365, column: 25, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7311, file: !443, line: 364, column: 66)
!7316 = !DILocation(line: 365, column: 3, scope: !7315)
!7317 = !DILocation(line: 364, column: 62, scope: !7311)
!7318 = distinct !{!7318, !7313, !7319}
!7319 = !DILocation(line: 366, column: 2, scope: !7312)
!7320 = !DILocation(line: 369, column: 23, scope: !7299)
!7321 = !DILocation(line: 369, column: 21, scope: !7299)
!7322 = !DILocation(line: 372, column: 2, scope: !7299)
!7323 = !DILocation(line: 443, column: 2, scope: !7299)
!7324 = !DILocation(line: 444, column: 1, scope: !7299)
!7325 = distinct !DISubprogram(name: "strcpy", scope: !7326, file: !7326, line: 20, type: !7327, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7331)
!7326 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7327 = !DISubroutineType(types: !7328)
!7328 = !{!1062, !7329, !7330}
!7329 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1062)
!7330 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !212)
!7331 = !{!7332, !7333, !7334}
!7332 = !DILocalVariable(name: "d", arg: 1, scope: !7325, file: !7326, line: 20, type: !7329)
!7333 = !DILocalVariable(name: "s", arg: 2, scope: !7325, file: !7326, line: 20, type: !7330)
!7334 = !DILocalVariable(name: "dest", scope: !7325, file: !7326, line: 22, type: !1062)
!7335 = !DILocation(line: 0, scope: !7325)
!7336 = !DILocation(line: 24, column: 9, scope: !7325)
!7337 = !DILocation(line: 24, column: 12, scope: !7325)
!7338 = !DILocation(line: 24, column: 2, scope: !7325)
!7339 = !DILocation(line: 25, column: 6, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7325, file: !7326, line: 24, column: 21)
!7341 = !DILocation(line: 26, column: 4, scope: !7340)
!7342 = !DILocation(line: 27, column: 4, scope: !7340)
!7343 = distinct !{!7343, !7338, !7344}
!7344 = !DILocation(line: 28, column: 2, scope: !7325)
!7345 = !DILocation(line: 30, column: 5, scope: !7325)
!7346 = !DILocation(line: 32, column: 2, scope: !7325)
!7347 = distinct !DISubprogram(name: "strncpy", scope: !7326, file: !7326, line: 42, type: !7348, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7350)
!7348 = !DISubroutineType(types: !7349)
!7349 = !{!1062, !7329, !7330, !120}
!7350 = !{!7351, !7352, !7353, !7354}
!7351 = !DILocalVariable(name: "d", arg: 1, scope: !7347, file: !7326, line: 42, type: !7329)
!7352 = !DILocalVariable(name: "s", arg: 2, scope: !7347, file: !7326, line: 42, type: !7330)
!7353 = !DILocalVariable(name: "n", arg: 3, scope: !7347, file: !7326, line: 42, type: !120)
!7354 = !DILocalVariable(name: "dest", scope: !7347, file: !7326, line: 44, type: !1062)
!7355 = !DILocation(line: 0, scope: !7347)
!7356 = !DILocation(line: 46, column: 12, scope: !7347)
!7357 = !DILocation(line: 46, column: 17, scope: !7347)
!7358 = !DILocation(line: 46, column: 20, scope: !7347)
!7359 = !DILocation(line: 46, column: 23, scope: !7347)
!7360 = !DILocation(line: 46, column: 2, scope: !7347)
!7361 = !DILocation(line: 47, column: 6, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7347, file: !7326, line: 46, column: 32)
!7363 = !DILocation(line: 48, column: 4, scope: !7362)
!7364 = !DILocation(line: 49, column: 4, scope: !7362)
!7365 = !DILocation(line: 50, column: 4, scope: !7362)
!7366 = distinct !{!7366, !7360, !7367}
!7367 = !DILocation(line: 51, column: 2, scope: !7347)
!7368 = !DILocation(line: 54, column: 6, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7347, file: !7326, line: 53, column: 16)
!7370 = !DILocation(line: 55, column: 4, scope: !7369)
!7371 = !DILocation(line: 56, column: 4, scope: !7369)
!7372 = !DILocation(line: 53, column: 11, scope: !7347)
!7373 = !DILocation(line: 53, column: 2, scope: !7347)
!7374 = distinct !{!7374, !7373, !7375}
!7375 = !DILocation(line: 57, column: 2, scope: !7347)
!7376 = !DILocation(line: 59, column: 2, scope: !7347)
!7377 = distinct !DISubprogram(name: "strchr", scope: !7326, file: !7326, line: 69, type: !7378, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7380)
!7378 = !DISubroutineType(types: !7379)
!7379 = !{!1062, !212, !103}
!7380 = !{!7381, !7382, !7383}
!7381 = !DILocalVariable(name: "s", arg: 1, scope: !7377, file: !7326, line: 69, type: !212)
!7382 = !DILocalVariable(name: "c", arg: 2, scope: !7377, file: !7326, line: 69, type: !103)
!7383 = !DILocalVariable(name: "tmp", scope: !7377, file: !7326, line: 71, type: !109)
!7384 = !DILocation(line: 0, scope: !7377)
!7385 = !DILocation(line: 73, column: 2, scope: !7377)
!7386 = !DILocation(line: 73, column: 10, scope: !7377)
!7387 = !DILocation(line: 73, column: 13, scope: !7377)
!7388 = !DILocation(line: 73, column: 21, scope: !7377)
!7389 = !DILocation(line: 74, column: 4, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7377, file: !7326, line: 73, column: 38)
!7391 = distinct !{!7391, !7385, !7392}
!7392 = !DILocation(line: 75, column: 2, scope: !7377)
!7393 = !DILocation(line: 77, column: 9, scope: !7377)
!7394 = !DILocation(line: 77, column: 2, scope: !7377)
!7395 = distinct !DISubprogram(name: "strrchr", scope: !7326, file: !7326, line: 87, type: !7378, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7396)
!7396 = !{!7397, !7398, !7399}
!7397 = !DILocalVariable(name: "s", arg: 1, scope: !7395, file: !7326, line: 87, type: !212)
!7398 = !DILocalVariable(name: "c", arg: 2, scope: !7395, file: !7326, line: 87, type: !103)
!7399 = !DILocalVariable(name: "match", scope: !7395, file: !7326, line: 89, type: !1062)
!7400 = !DILocation(line: 0, scope: !7395)
!7401 = !DILocation(line: 91, column: 2, scope: !7395)
!7402 = !DILocation(line: 92, column: 7, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !7326, line: 92, column: 7)
!7404 = distinct !DILexicalBlock(scope: !7395, file: !7326, line: 91, column: 5)
!7405 = !DILocation(line: 92, column: 10, scope: !7403)
!7406 = !DILocation(line: 92, column: 7, scope: !7404)
!7407 = !DILocation(line: 95, column: 13, scope: !7395)
!7408 = !DILocation(line: 95, column: 2, scope: !7404)
!7409 = distinct !{!7409, !7401, !7410}
!7410 = !DILocation(line: 95, column: 15, scope: !7395)
!7411 = !DILocation(line: 97, column: 2, scope: !7395)
!7412 = distinct !DISubprogram(name: "strlen", scope: !7326, file: !7326, line: 107, type: !7413, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7415)
!7413 = !DISubroutineType(types: !7414)
!7414 = !{!120, !212}
!7415 = !{!7416, !7417}
!7416 = !DILocalVariable(name: "s", arg: 1, scope: !7412, file: !7326, line: 107, type: !212)
!7417 = !DILocalVariable(name: "n", scope: !7412, file: !7326, line: 109, type: !120)
!7418 = !DILocation(line: 0, scope: !7412)
!7419 = !DILocation(line: 111, column: 9, scope: !7412)
!7420 = !DILocation(line: 111, column: 12, scope: !7412)
!7421 = !DILocation(line: 111, column: 2, scope: !7412)
!7422 = !DILocation(line: 112, column: 4, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7412, file: !7326, line: 111, column: 21)
!7424 = !DILocation(line: 113, column: 4, scope: !7423)
!7425 = distinct !{!7425, !7421, !7426}
!7426 = !DILocation(line: 114, column: 2, scope: !7412)
!7427 = !DILocation(line: 116, column: 2, scope: !7412)
!7428 = distinct !DISubprogram(name: "strnlen", scope: !7326, file: !7326, line: 126, type: !7429, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7431)
!7429 = !DISubroutineType(types: !7430)
!7430 = !{!120, !212, !120}
!7431 = !{!7432, !7433, !7434}
!7432 = !DILocalVariable(name: "s", arg: 1, scope: !7428, file: !7326, line: 126, type: !212)
!7433 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7428, file: !7326, line: 126, type: !120)
!7434 = !DILocalVariable(name: "n", scope: !7428, file: !7326, line: 128, type: !120)
!7435 = !DILocation(line: 0, scope: !7428)
!7436 = !DILocation(line: 130, column: 9, scope: !7428)
!7437 = !DILocation(line: 130, column: 12, scope: !7428)
!7438 = !DILocation(line: 130, column: 20, scope: !7428)
!7439 = !DILocation(line: 130, column: 2, scope: !7428)
!7440 = !DILocation(line: 131, column: 4, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7428, file: !7326, line: 130, column: 35)
!7442 = !DILocation(line: 132, column: 4, scope: !7441)
!7443 = distinct !{!7443, !7439, !7444}
!7444 = !DILocation(line: 133, column: 2, scope: !7428)
!7445 = !DILocation(line: 135, column: 2, scope: !7428)
!7446 = distinct !DISubprogram(name: "strcmp", scope: !7326, file: !7326, line: 145, type: !7447, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7449)
!7447 = !DISubroutineType(types: !7448)
!7448 = !{!103, !212, !212}
!7449 = !{!7450, !7451}
!7450 = !DILocalVariable(name: "s1", arg: 1, scope: !7446, file: !7326, line: 145, type: !212)
!7451 = !DILocalVariable(name: "s2", arg: 2, scope: !7446, file: !7326, line: 145, type: !212)
!7452 = !DILocation(line: 0, scope: !7446)
!7453 = !DILocation(line: 147, column: 10, scope: !7446)
!7454 = !DILocation(line: 147, column: 17, scope: !7446)
!7455 = !DILocation(line: 147, column: 14, scope: !7446)
!7456 = !DILocation(line: 147, column: 22, scope: !7446)
!7457 = !DILocation(line: 148, column: 5, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7446, file: !7326, line: 147, column: 40)
!7459 = !DILocation(line: 149, column: 5, scope: !7458)
!7460 = distinct !{!7460, !7461, !7462}
!7461 = !DILocation(line: 147, column: 2, scope: !7446)
!7462 = !DILocation(line: 150, column: 2, scope: !7446)
!7463 = !DILocation(line: 152, column: 9, scope: !7446)
!7464 = !DILocation(line: 152, column: 15, scope: !7446)
!7465 = !DILocation(line: 152, column: 13, scope: !7446)
!7466 = !DILocation(line: 152, column: 2, scope: !7446)
!7467 = distinct !DISubprogram(name: "strncmp", scope: !7326, file: !7326, line: 162, type: !7468, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7470)
!7468 = !DISubroutineType(types: !7469)
!7469 = !{!103, !212, !212, !120}
!7470 = !{!7471, !7472, !7473}
!7471 = !DILocalVariable(name: "s1", arg: 1, scope: !7467, file: !7326, line: 162, type: !212)
!7472 = !DILocalVariable(name: "s2", arg: 2, scope: !7467, file: !7326, line: 162, type: !212)
!7473 = !DILocalVariable(name: "n", arg: 3, scope: !7467, file: !7326, line: 162, type: !120)
!7474 = !DILocation(line: 0, scope: !7467)
!7475 = !DILocation(line: 164, column: 17, scope: !7467)
!7476 = !DILocation(line: 164, column: 21, scope: !7467)
!7477 = !DILocation(line: 164, column: 28, scope: !7467)
!7478 = !DILocation(line: 164, column: 25, scope: !7467)
!7479 = !DILocation(line: 164, column: 33, scope: !7467)
!7480 = !DILocation(line: 165, column: 5, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7467, file: !7326, line: 164, column: 51)
!7482 = !DILocation(line: 166, column: 5, scope: !7481)
!7483 = !DILocation(line: 167, column: 4, scope: !7481)
!7484 = distinct !{!7484, !7485, !7486}
!7485 = !DILocation(line: 164, column: 2, scope: !7467)
!7486 = !DILocation(line: 168, column: 2, scope: !7467)
!7487 = !DILocation(line: 170, column: 25, scope: !7467)
!7488 = !DILocation(line: 170, column: 31, scope: !7467)
!7489 = !DILocation(line: 170, column: 29, scope: !7467)
!7490 = !DILocation(line: 170, column: 9, scope: !7467)
!7491 = !DILocation(line: 170, column: 2, scope: !7467)
!7492 = distinct !DISubprogram(name: "strtok_r", scope: !7326, file: !7326, line: 180, type: !7493, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7496)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{!1062, !1062, !212, !7495}
!7495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!7496 = !{!7497, !7498, !7499, !7500, !7501}
!7497 = !DILocalVariable(name: "str", arg: 1, scope: !7492, file: !7326, line: 180, type: !1062)
!7498 = !DILocalVariable(name: "sep", arg: 2, scope: !7492, file: !7326, line: 180, type: !212)
!7499 = !DILocalVariable(name: "state", arg: 3, scope: !7492, file: !7326, line: 180, type: !7495)
!7500 = !DILocalVariable(name: "start", scope: !7492, file: !7326, line: 182, type: !1062)
!7501 = !DILocalVariable(name: "end", scope: !7492, file: !7326, line: 182, type: !1062)
!7502 = !DILocation(line: 0, scope: !7492)
!7503 = !DILocation(line: 184, column: 10, scope: !7492)
!7504 = !DILocation(line: 184, column: 22, scope: !7492)
!7505 = !DILocation(line: 187, column: 9, scope: !7492)
!7506 = !DILocation(line: 187, column: 16, scope: !7492)
!7507 = !DILocation(line: 187, column: 19, scope: !7492)
!7508 = !DILocation(line: 187, column: 2, scope: !7492)
!7509 = !DILocation(line: 188, column: 8, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7492, file: !7326, line: 187, column: 40)
!7511 = distinct !{!7511, !7508, !7512}
!7512 = !DILocation(line: 189, column: 2, scope: !7492)
!7513 = !DILocation(line: 198, column: 9, scope: !7492)
!7514 = !DILocation(line: 198, column: 18, scope: !7492)
!7515 = !DILocation(line: 198, column: 17, scope: !7492)
!7516 = !DILocation(line: 198, column: 2, scope: !7492)
!7517 = !DILocation(line: 199, column: 6, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7492, file: !7326, line: 198, column: 37)
!7519 = !DILocation(line: 198, column: 14, scope: !7492)
!7520 = distinct !{!7520, !7516, !7521}
!7521 = !DILocation(line: 200, column: 2, scope: !7492)
!7522 = !DILocation(line: 203, column: 8, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7524, file: !7326, line: 202, column: 20)
!7524 = distinct !DILexicalBlock(scope: !7492, file: !7326, line: 202, column: 6)
!7525 = !DILocation(line: 204, column: 16, scope: !7523)
!7526 = !DILocation(line: 205, column: 2, scope: !7523)
!7527 = !DILocation(line: 210, column: 1, scope: !7492)
!7528 = distinct !DISubprogram(name: "strcat", scope: !7326, file: !7326, line: 212, type: !7327, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7529)
!7529 = !{!7530, !7531}
!7530 = !DILocalVariable(name: "dest", arg: 1, scope: !7528, file: !7326, line: 212, type: !7329)
!7531 = !DILocalVariable(name: "src", arg: 2, scope: !7528, file: !7326, line: 212, type: !7330)
!7532 = !DILocation(line: 0, scope: !7528)
!7533 = !DILocation(line: 214, column: 16, scope: !7528)
!7534 = !DILocation(line: 214, column: 14, scope: !7528)
!7535 = !DILocation(line: 214, column: 2, scope: !7528)
!7536 = !DILocation(line: 215, column: 2, scope: !7528)
!7537 = distinct !DISubprogram(name: "strncat", scope: !7326, file: !7326, line: 218, type: !7348, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7538)
!7538 = !{!7539, !7540, !7541, !7542, !7543}
!7539 = !DILocalVariable(name: "dest", arg: 1, scope: !7537, file: !7326, line: 218, type: !7329)
!7540 = !DILocalVariable(name: "src", arg: 2, scope: !7537, file: !7326, line: 218, type: !7330)
!7541 = !DILocalVariable(name: "n", arg: 3, scope: !7537, file: !7326, line: 219, type: !120)
!7542 = !DILocalVariable(name: "orig_dest", scope: !7537, file: !7326, line: 221, type: !1062)
!7543 = !DILocalVariable(name: "len", scope: !7537, file: !7326, line: 222, type: !120)
!7544 = !DILocation(line: 0, scope: !7537)
!7545 = !DILocation(line: 222, column: 15, scope: !7537)
!7546 = !DILocation(line: 224, column: 7, scope: !7537)
!7547 = !DILocation(line: 225, column: 14, scope: !7537)
!7548 = !DILocation(line: 225, column: 19, scope: !7537)
!7549 = !DILocation(line: 225, column: 11, scope: !7537)
!7550 = !DILocation(line: 225, column: 23, scope: !7537)
!7551 = !DILocation(line: 225, column: 28, scope: !7537)
!7552 = !DILocation(line: 225, column: 2, scope: !7537)
!7553 = !DILocation(line: 226, column: 17, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7537, file: !7326, line: 225, column: 38)
!7555 = !DILocation(line: 226, column: 8, scope: !7554)
!7556 = !DILocation(line: 226, column: 11, scope: !7554)
!7557 = distinct !{!7557, !7552, !7558}
!7558 = !DILocation(line: 227, column: 2, scope: !7537)
!7559 = !DILocation(line: 228, column: 8, scope: !7537)
!7560 = !DILocation(line: 230, column: 2, scope: !7537)
!7561 = distinct !DISubprogram(name: "memcmp", scope: !7326, file: !7326, line: 239, type: !7562, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7564)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{!103, !13, !13, !120}
!7564 = !{!7565, !7566, !7567, !7568, !7569}
!7565 = !DILocalVariable(name: "m1", arg: 1, scope: !7561, file: !7326, line: 239, type: !13)
!7566 = !DILocalVariable(name: "m2", arg: 2, scope: !7561, file: !7326, line: 239, type: !13)
!7567 = !DILocalVariable(name: "n", arg: 3, scope: !7561, file: !7326, line: 239, type: !120)
!7568 = !DILocalVariable(name: "c1", scope: !7561, file: !7326, line: 241, type: !212)
!7569 = !DILocalVariable(name: "c2", scope: !7561, file: !7326, line: 242, type: !212)
!7570 = !DILocation(line: 0, scope: !7561)
!7571 = !DILocation(line: 244, column: 7, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7561, file: !7326, line: 244, column: 6)
!7573 = !DILocation(line: 244, column: 6, scope: !7561)
!7574 = !DILocation(line: 248, column: 10, scope: !7561)
!7575 = !DILocation(line: 248, column: 14, scope: !7561)
!7576 = !DILocation(line: 248, column: 19, scope: !7561)
!7577 = !DILocation(line: 248, column: 2, scope: !7561)
!7578 = !DILocation(line: 248, column: 23, scope: !7561)
!7579 = !DILocation(line: 248, column: 30, scope: !7561)
!7580 = !DILocation(line: 248, column: 27, scope: !7561)
!7581 = !DILocation(line: 249, column: 5, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7561, file: !7326, line: 248, column: 36)
!7583 = !DILocation(line: 250, column: 5, scope: !7582)
!7584 = distinct !{!7584, !7577, !7585}
!7585 = !DILocation(line: 251, column: 2, scope: !7561)
!7586 = !DILocation(line: 253, column: 9, scope: !7561)
!7587 = !DILocation(line: 253, column: 15, scope: !7561)
!7588 = !DILocation(line: 253, column: 13, scope: !7561)
!7589 = !DILocation(line: 253, column: 2, scope: !7561)
!7590 = !DILocation(line: 254, column: 1, scope: !7561)
!7591 = distinct !DISubprogram(name: "memmove", scope: !7326, file: !7326, line: 263, type: !7592, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7594)
!7592 = !DISubroutineType(types: !7593)
!7593 = !{!102, !102, !13, !120}
!7594 = !{!7595, !7596, !7597, !7598, !7599}
!7595 = !DILocalVariable(name: "d", arg: 1, scope: !7591, file: !7326, line: 263, type: !102)
!7596 = !DILocalVariable(name: "s", arg: 2, scope: !7591, file: !7326, line: 263, type: !13)
!7597 = !DILocalVariable(name: "n", arg: 3, scope: !7591, file: !7326, line: 263, type: !120)
!7598 = !DILocalVariable(name: "dest", scope: !7591, file: !7326, line: 265, type: !1062)
!7599 = !DILocalVariable(name: "src", scope: !7591, file: !7326, line: 266, type: !212)
!7600 = !DILocation(line: 0, scope: !7591)
!7601 = !DILocation(line: 268, column: 21, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7591, file: !7326, line: 268, column: 6)
!7603 = !DILocation(line: 268, column: 28, scope: !7602)
!7604 = !DILocation(line: 268, column: 6, scope: !7591)
!7605 = !DILocation(line: 280, column: 12, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7602, file: !7326, line: 278, column: 9)
!7607 = !DILocation(line: 280, column: 3, scope: !7606)
!7608 = !DILocation(line: 275, column: 5, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7610, file: !7326, line: 274, column: 17)
!7610 = distinct !DILexicalBlock(scope: !7602, file: !7326, line: 268, column: 33)
!7611 = !DILocation(line: 276, column: 14, scope: !7609)
!7612 = !DILocation(line: 276, column: 4, scope: !7609)
!7613 = !DILocation(line: 276, column: 12, scope: !7609)
!7614 = !DILocation(line: 274, column: 12, scope: !7610)
!7615 = !DILocation(line: 274, column: 3, scope: !7610)
!7616 = distinct !{!7616, !7615, !7617}
!7617 = !DILocation(line: 277, column: 3, scope: !7610)
!7618 = !DILocation(line: 281, column: 12, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7606, file: !7326, line: 280, column: 17)
!7620 = !DILocation(line: 281, column: 10, scope: !7619)
!7621 = !DILocation(line: 282, column: 8, scope: !7619)
!7622 = !DILocation(line: 283, column: 7, scope: !7619)
!7623 = !DILocation(line: 284, column: 5, scope: !7619)
!7624 = distinct !{!7624, !7607, !7625}
!7625 = !DILocation(line: 285, column: 3, scope: !7606)
!7626 = !DILocation(line: 288, column: 2, scope: !7591)
!7627 = distinct !DISubprogram(name: "memcpy", scope: !7326, file: !7326, line: 298, type: !7628, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7632)
!7628 = !DISubroutineType(types: !7629)
!7629 = !{!102, !7630, !7631, !120}
!7630 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7631 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7632 = !{!7633, !7634, !7635, !7636, !7637}
!7633 = !DILocalVariable(name: "d", arg: 1, scope: !7627, file: !7326, line: 298, type: !7630)
!7634 = !DILocalVariable(name: "s", arg: 2, scope: !7627, file: !7326, line: 298, type: !7631)
!7635 = !DILocalVariable(name: "n", arg: 3, scope: !7627, file: !7326, line: 298, type: !120)
!7636 = !DILocalVariable(name: "d_byte", scope: !7627, file: !7326, line: 302, type: !916)
!7637 = !DILocalVariable(name: "s_byte", scope: !7627, file: !7326, line: 303, type: !2609)
!7638 = !DILocation(line: 0, scope: !7627)
!7639 = !DILocation(line: 337, column: 11, scope: !7627)
!7640 = !DILocation(line: 337, column: 2, scope: !7627)
!7641 = !DILocation(line: 338, column: 25, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7627, file: !7326, line: 337, column: 16)
!7643 = !DILocation(line: 338, column: 17, scope: !7642)
!7644 = !DILocation(line: 338, column: 11, scope: !7642)
!7645 = !DILocation(line: 338, column: 15, scope: !7642)
!7646 = !DILocation(line: 339, column: 4, scope: !7642)
!7647 = distinct !{!7647, !7640, !7648}
!7648 = !DILocation(line: 340, column: 2, scope: !7627)
!7649 = !DILocation(line: 342, column: 2, scope: !7627)
!7650 = distinct !DISubprogram(name: "memset", scope: !7326, file: !7326, line: 352, type: !7651, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7653)
!7651 = !DISubroutineType(types: !7652)
!7652 = !{!102, !102, !103, !120}
!7653 = !{!7654, !7655, !7656, !7657, !7658}
!7654 = !DILocalVariable(name: "buf", arg: 1, scope: !7650, file: !7326, line: 352, type: !102)
!7655 = !DILocalVariable(name: "c", arg: 2, scope: !7650, file: !7326, line: 352, type: !103)
!7656 = !DILocalVariable(name: "n", arg: 3, scope: !7650, file: !7326, line: 352, type: !120)
!7657 = !DILocalVariable(name: "d_byte", scope: !7650, file: !7326, line: 356, type: !916)
!7658 = !DILocalVariable(name: "c_byte", scope: !7650, file: !7326, line: 357, type: !222)
!7659 = !DILocation(line: 0, scope: !7650)
!7660 = !DILocation(line: 357, column: 25, scope: !7650)
!7661 = !DILocation(line: 389, column: 11, scope: !7650)
!7662 = !DILocation(line: 389, column: 2, scope: !7650)
!7663 = !DILocation(line: 390, column: 11, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7650, file: !7326, line: 389, column: 16)
!7665 = !DILocation(line: 390, column: 15, scope: !7664)
!7666 = !DILocation(line: 391, column: 4, scope: !7664)
!7667 = distinct !{!7667, !7662, !7668}
!7668 = !DILocation(line: 392, column: 2, scope: !7650)
!7669 = !DILocation(line: 394, column: 2, scope: !7650)
!7670 = distinct !DISubprogram(name: "memchr", scope: !7326, file: !7326, line: 404, type: !7671, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !7673)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{!102, !13, !103, !120}
!7673 = !{!7674, !7675, !7676, !7677}
!7674 = !DILocalVariable(name: "s", arg: 1, scope: !7670, file: !7326, line: 404, type: !13)
!7675 = !DILocalVariable(name: "c", arg: 2, scope: !7670, file: !7326, line: 404, type: !103)
!7676 = !DILocalVariable(name: "n", arg: 3, scope: !7670, file: !7326, line: 404, type: !120)
!7677 = !DILocalVariable(name: "p", scope: !7678, file: !7326, line: 407, type: !2609)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !7326, line: 406, column: 14)
!7679 = distinct !DILexicalBlock(scope: !7670, file: !7326, line: 406, column: 6)
!7680 = !DILocation(line: 0, scope: !7670)
!7681 = !DILocation(line: 406, column: 8, scope: !7679)
!7682 = !DILocation(line: 406, column: 6, scope: !7670)
!7683 = !DILocation(line: 409, column: 3, scope: !7678)
!7684 = !DILocation(line: 0, scope: !7678)
!7685 = !DILocation(line: 410, column: 8, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7687, file: !7326, line: 410, column: 8)
!7687 = distinct !DILexicalBlock(scope: !7678, file: !7326, line: 409, column: 6)
!7688 = !DILocation(line: 410, column: 13, scope: !7686)
!7689 = !DILocation(line: 410, column: 8, scope: !7687)
!7690 = distinct !{!7690, !7683, !7691}
!7691 = !DILocation(line: 414, column: 20, scope: !7678)
!7692 = !DILocation(line: 417, column: 2, scope: !7670)
!7693 = !DILocation(line: 418, column: 1, scope: !7670)
!7694 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !453, file: !453, line: 23, type: !2942, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7695)
!7695 = !{!7696}
!7696 = !DILocalVariable(name: "hook", arg: 1, scope: !7694, file: !453, line: 23, type: !128)
!7697 = !DILocation(line: 0, scope: !7694)
!7698 = !DILocation(line: 25, column: 15, scope: !7694)
!7699 = !DILocation(line: 26, column: 1, scope: !7694)
!7700 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !453, file: !453, line: 14, type: !129, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7701)
!7701 = !{!7702}
!7702 = !DILocalVariable(name: "c", arg: 1, scope: !7700, file: !453, line: 14, type: !103)
!7703 = !DILocation(line: 0, scope: !7700)
!7704 = !DILocation(line: 18, column: 2, scope: !7700)
!7705 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !453, file: !453, line: 28, type: !7706, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7708)
!7706 = !DISubroutineType(types: !7707)
!7707 = !{!103, !103, !449}
!7708 = !{!7709, !7710}
!7709 = !DILocalVariable(name: "c", arg: 1, scope: !7705, file: !453, line: 28, type: !103)
!7710 = !DILocalVariable(name: "stream", arg: 2, scope: !7705, file: !453, line: 28, type: !449)
!7711 = !DILocation(line: 0, scope: !7705)
!7712 = !DILocation(line: 30, column: 27, scope: !7705)
!7713 = !DILocation(line: 30, column: 50, scope: !7705)
!7714 = !DILocation(line: 30, column: 9, scope: !7705)
!7715 = !DILocation(line: 30, column: 2, scope: !7705)
!7716 = distinct !DISubprogram(name: "fputc", scope: !453, file: !453, line: 41, type: !7706, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7717)
!7717 = !{!7718, !7719}
!7718 = !DILocalVariable(name: "c", arg: 1, scope: !7716, file: !453, line: 41, type: !103)
!7719 = !DILocalVariable(name: "stream", arg: 2, scope: !7716, file: !453, line: 41, type: !449)
!7720 = !DILocation(line: 0, scope: !7716)
!7721 = !DILocation(line: 43, column: 9, scope: !7716)
!7722 = !DILocation(line: 43, column: 2, scope: !7716)
!7723 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7724, file: !7724, line: 72, type: !7706, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7725)
!7724 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!7725 = !{!7726, !7727}
!7726 = !DILocalVariable(name: "c", arg: 1, scope: !7723, file: !7724, line: 72, type: !103)
!7727 = !DILocalVariable(name: "stream", arg: 2, scope: !7723, file: !7724, line: 72, type: !449)
!7728 = !DILocation(line: 0, scope: !7723)
!7729 = !DILocation(line: 81, column: 2, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7723, file: !7724, line: 81, column: 2)
!7731 = !{i64 2152277903}
!7732 = !DILocation(line: 82, column: 9, scope: !7723)
!7733 = !DILocation(line: 82, column: 2, scope: !7723)
!7734 = distinct !DISubprogram(name: "fputs", scope: !453, file: !453, line: 46, type: !7735, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7738)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{!103, !7330, !7737}
!7737 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !449)
!7738 = !{!7739, !7740, !7741, !7742}
!7739 = !DILocalVariable(name: "s", arg: 1, scope: !7734, file: !453, line: 46, type: !7330)
!7740 = !DILocalVariable(name: "stream", arg: 2, scope: !7734, file: !453, line: 46, type: !7737)
!7741 = !DILocalVariable(name: "len", scope: !7734, file: !453, line: 48, type: !103)
!7742 = !DILocalVariable(name: "ret", scope: !7734, file: !453, line: 49, type: !103)
!7743 = !DILocation(line: 0, scope: !7734)
!7744 = !DILocation(line: 48, column: 12, scope: !7734)
!7745 = !DILocation(line: 51, column: 8, scope: !7734)
!7746 = !DILocation(line: 53, column: 13, scope: !7734)
!7747 = !DILocation(line: 53, column: 9, scope: !7734)
!7748 = !DILocation(line: 53, column: 2, scope: !7734)
!7749 = distinct !DISubprogram(name: "fwrite", scope: !453, file: !453, line: 99, type: !7750, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7752)
!7750 = !DISubroutineType(types: !7751)
!7751 = !{!120, !7631, !120, !120, !7737}
!7752 = !{!7753, !7754, !7755, !7756}
!7753 = !DILocalVariable(name: "ptr", arg: 1, scope: !7749, file: !453, line: 99, type: !7631)
!7754 = !DILocalVariable(name: "size", arg: 2, scope: !7749, file: !453, line: 99, type: !120)
!7755 = !DILocalVariable(name: "nitems", arg: 3, scope: !7749, file: !453, line: 99, type: !120)
!7756 = !DILocalVariable(name: "stream", arg: 4, scope: !7749, file: !453, line: 100, type: !7737)
!7757 = !DILocation(line: 0, scope: !7749)
!7758 = !DILocation(line: 102, column: 9, scope: !7749)
!7759 = !DILocation(line: 102, column: 2, scope: !7749)
!7760 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7724, file: !7724, line: 96, type: !7750, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7761)
!7761 = !{!7762, !7763, !7764, !7765}
!7762 = !DILocalVariable(name: "ptr", arg: 1, scope: !7760, file: !7724, line: 96, type: !7631)
!7763 = !DILocalVariable(name: "size", arg: 2, scope: !7760, file: !7724, line: 96, type: !120)
!7764 = !DILocalVariable(name: "nitems", arg: 3, scope: !7760, file: !7724, line: 96, type: !120)
!7765 = !DILocalVariable(name: "stream", arg: 4, scope: !7760, file: !7724, line: 96, type: !7737)
!7766 = !DILocation(line: 0, scope: !7760)
!7767 = !DILocation(line: 107, column: 2, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7760, file: !7724, line: 107, column: 2)
!7769 = !{i64 2152278007}
!7770 = !DILocation(line: 108, column: 9, scope: !7760)
!7771 = !DILocation(line: 108, column: 2, scope: !7760)
!7772 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !453, file: !453, line: 56, type: !7750, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7773)
!7773 = !{!7774, !7775, !7776, !7777, !7778, !7779, !7780, !7781}
!7774 = !DILocalVariable(name: "ptr", arg: 1, scope: !7772, file: !453, line: 56, type: !7631)
!7775 = !DILocalVariable(name: "size", arg: 2, scope: !7772, file: !453, line: 56, type: !120)
!7776 = !DILocalVariable(name: "nitems", arg: 3, scope: !7772, file: !453, line: 57, type: !120)
!7777 = !DILocalVariable(name: "stream", arg: 4, scope: !7772, file: !453, line: 57, type: !7737)
!7778 = !DILocalVariable(name: "i", scope: !7772, file: !453, line: 59, type: !120)
!7779 = !DILocalVariable(name: "j", scope: !7772, file: !453, line: 60, type: !120)
!7780 = !DILocalVariable(name: "p", scope: !7772, file: !453, line: 61, type: !2609)
!7781 = !DILabel(scope: !7772, name: "done", file: !453, line: 82)
!7782 = !DILocation(line: 0, scope: !7772)
!7783 = !DILocation(line: 63, column: 14, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7772, file: !453, line: 63, column: 6)
!7785 = !DILocation(line: 63, column: 24, scope: !7784)
!7786 = !DILocation(line: 72, column: 3, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7772, file: !453, line: 70, column: 5)
!7788 = !DILocation(line: 0, scope: !7787)
!7789 = !DILocation(line: 73, column: 8, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !453, line: 73, column: 8)
!7791 = distinct !DILexicalBlock(scope: !7787, file: !453, line: 72, column: 6)
!7792 = !DILocation(line: 73, column: 29, scope: !7790)
!7793 = !DILocation(line: 73, column: 27, scope: !7790)
!7794 = !DILocation(line: 73, column: 21, scope: !7790)
!7795 = !DILocation(line: 73, column: 33, scope: !7790)
!7796 = !DILocation(line: 73, column: 8, scope: !7791)
!7797 = !DILocation(line: 76, column: 5, scope: !7791)
!7798 = !DILocation(line: 77, column: 14, scope: !7787)
!7799 = !DILocation(line: 77, column: 3, scope: !7791)
!7800 = distinct !{!7800, !7786, !7801}
!7801 = !DILocation(line: 77, column: 17, scope: !7787)
!7802 = !DILocation(line: 79, column: 4, scope: !7787)
!7803 = !DILocation(line: 80, column: 13, scope: !7772)
!7804 = !DILocation(line: 80, column: 2, scope: !7787)
!7805 = distinct !{!7805, !7806, !7807}
!7806 = !DILocation(line: 70, column: 2, scope: !7772)
!7807 = !DILocation(line: 80, column: 16, scope: !7772)
!7808 = !DILocation(line: 82, column: 1, scope: !7772)
!7809 = !DILocation(line: 83, column: 17, scope: !7772)
!7810 = !DILocation(line: 83, column: 2, scope: !7772)
!7811 = !DILocation(line: 84, column: 1, scope: !7772)
!7812 = distinct !DISubprogram(name: "puts", scope: !453, file: !453, line: 106, type: !7813, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7815)
!7813 = !DISubroutineType(types: !7814)
!7814 = !{!103, !212}
!7815 = !{!7816}
!7816 = !DILocalVariable(name: "s", arg: 1, scope: !7812, file: !453, line: 106, type: !212)
!7817 = !DILocation(line: 0, scope: !7812)
!7818 = !DILocation(line: 108, column: 6, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7812, file: !453, line: 108, column: 6)
!7820 = !DILocation(line: 108, column: 23, scope: !7819)
!7821 = !DILocation(line: 108, column: 6, scope: !7812)
!7822 = !DILocation(line: 112, column: 9, scope: !7812)
!7823 = !DILocation(line: 112, column: 29, scope: !7812)
!7824 = !DILocation(line: 112, column: 2, scope: !7812)
!7825 = !DILocation(line: 113, column: 1, scope: !7812)
!7826 = distinct !DISubprogram(name: "rf_init", scope: !578, file: !578, line: 10, type: !584, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !7827)
!7827 = !{!7828, !7829, !7837, !7838}
!7828 = !DILocalVariable(name: "dev", arg: 1, scope: !7826, file: !578, line: 10, type: !504)
!7829 = !DILocalVariable(name: "rf1", scope: !7826, file: !578, line: 12, type: !7830)
!7830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7831)
!7831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !485, line: 271, size: 64, elements: !7832)
!7832 = !{!7833, !7834, !7835}
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7831, file: !485, line: 273, baseType: !504, size: 32)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !7831, file: !485, line: 275, baseType: !519, size: 8, offset: 32)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !7831, file: !485, line: 277, baseType: !7836, size: 16, offset: 48)
!7836 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !485, line: 249, baseType: !151)
!7837 = !DILocalVariable(name: "rf2", scope: !7826, file: !578, line: 14, type: !7830)
!7838 = !DILocalVariable(name: "rf3", scope: !7826, file: !578, line: 16, type: !7830)
!7839 = !DILocation(line: 0, scope: !7826)
!7840 = !DILocation(line: 12, column: 2, scope: !7826)
!7841 = !DILocation(line: 12, column: 28, scope: !7826)
!7842 = !DILocation(line: 14, column: 2, scope: !7826)
!7843 = !DILocation(line: 14, column: 28, scope: !7826)
!7844 = !DILocation(line: 16, column: 2, scope: !7826)
!7845 = !DILocation(line: 16, column: 28, scope: !7826)
!7846 = !DILocation(line: 22, column: 27, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7826, file: !578, line: 22, column: 6)
!7848 = !DILocation(line: 22, column: 7, scope: !7847)
!7849 = !DILocation(line: 22, column: 33, scope: !7847)
!7850 = !DILocation(line: 23, column: 7, scope: !7847)
!7851 = !DILocation(line: 23, column: 33, scope: !7847)
!7852 = !DILocation(line: 24, column: 7, scope: !7847)
!7853 = !DILocation(line: 22, column: 6, scope: !7826)
!7854 = !DILocation(line: 28, column: 8, scope: !7826)
!7855 = !DILocation(line: 29, column: 8, scope: !7826)
!7856 = !DILocation(line: 30, column: 8, scope: !7826)
!7857 = !DILocation(line: 32, column: 2, scope: !7826)
!7858 = !DILocation(line: 33, column: 1, scope: !7826)
!7859 = distinct !DISubprogram(name: "device_is_ready", scope: !7860, file: !7860, line: 47, type: !7861, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !7863)
!7860 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!7861 = !DISubroutineType(types: !7862)
!7862 = !{!224, !504}
!7863 = !{!7864}
!7864 = !DILocalVariable(name: "dev", arg: 1, scope: !7859, file: !7860, line: 47, type: !504)
!7865 = !DILocation(line: 0, scope: !7859)
!7866 = !DILocation(line: 55, column: 2, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7859, file: !7860, line: 55, column: 2)
!7868 = !{i64 2148925680}
!7869 = !DILocation(line: 56, column: 9, scope: !7859)
!7870 = !DILocation(line: 56, column: 2, scope: !7859)
!7871 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !485, file: !485, line: 731, type: !7872, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !7875)
!7872 = !DISubroutineType(types: !7873)
!7873 = !{!103, !7874, !520}
!7874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7830, size: 32)
!7875 = !{!7876, !7877}
!7876 = !DILocalVariable(name: "spec", arg: 1, scope: !7871, file: !485, line: 731, type: !7874)
!7877 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !7871, file: !485, line: 732, type: !520)
!7878 = !DILocation(line: 0, scope: !7871)
!7879 = !DILocation(line: 734, column: 34, scope: !7871)
!7880 = !DILocation(line: 735, column: 13, scope: !7871)
!7881 = !DILocation(line: 736, column: 13, scope: !7871)
!7882 = !DILocation(line: 736, column: 7, scope: !7871)
!7883 = !DILocation(line: 736, column: 22, scope: !7871)
!7884 = !DILocation(line: 734, column: 9, scope: !7871)
!7885 = !DILocation(line: 734, column: 2, scope: !7871)
!7886 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !7887, file: !7887, line: 49, type: !502, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !7888)
!7887 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!7888 = !{!7889, !7890, !7891}
!7889 = !DILocalVariable(name: "port", arg: 1, scope: !7886, file: !7887, line: 49, type: !504)
!7890 = !DILocalVariable(name: "pin", arg: 2, scope: !7886, file: !7887, line: 49, type: !519)
!7891 = !DILocalVariable(name: "flags", arg: 3, scope: !7886, file: !7887, line: 49, type: !520)
!7892 = !DILocation(line: 0, scope: !7886)
!7893 = !DILocation(line: 59, column: 2, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7886, file: !7887, line: 59, column: 2)
!7895 = !{i64 2148940050}
!7896 = !DILocation(line: 60, column: 9, scope: !7886)
!7897 = !DILocation(line: 60, column: 2, scope: !7886)
!7898 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !485, file: !485, line: 667, type: !502, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !7899)
!7899 = !{!7900, !7901, !7902, !7903, !7904, !7906}
!7900 = !DILocalVariable(name: "port", arg: 1, scope: !7898, file: !485, line: 667, type: !504)
!7901 = !DILocalVariable(name: "pin", arg: 2, scope: !7898, file: !485, line: 668, type: !519)
!7902 = !DILocalVariable(name: "flags", arg: 3, scope: !7898, file: !485, line: 669, type: !520)
!7903 = !DILocalVariable(name: "api", scope: !7898, file: !485, line: 671, type: !496)
!7904 = !DILocalVariable(name: "cfg", scope: !7898, file: !485, line: 673, type: !7905)
!7905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !566)
!7906 = !DILocalVariable(name: "data", scope: !7898, file: !485, line: 675, type: !576)
!7907 = !DILocation(line: 0, scope: !7898)
!7908 = !DILocation(line: 672, column: 41, scope: !7898)
!7909 = !DILocation(line: 676, column: 36, scope: !7898)
!7910 = !DILocation(line: 701, column: 6, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7898, file: !485, line: 700, column: 6)
!7912 = !DILocation(line: 711, column: 13, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7898, file: !485, line: 711, column: 6)
!7914 = !DILocation(line: 711, column: 32, scope: !7913)
!7915 = !DILocation(line: 0, scope: !7913)
!7916 = !DILocation(line: 711, column: 6, scope: !7898)
!7917 = !DILocation(line: 712, column: 9, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7913, file: !485, line: 711, column: 38)
!7919 = !DILocation(line: 712, column: 16, scope: !7918)
!7920 = !DILocation(line: 713, column: 2, scope: !7918)
!7921 = !DILocation(line: 714, column: 19, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7913, file: !485, line: 713, column: 9)
!7923 = !DILocation(line: 714, column: 9, scope: !7922)
!7924 = !DILocation(line: 714, column: 16, scope: !7922)
!7925 = !DILocation(line: 706, column: 8, scope: !7898)
!7926 = !DILocation(line: 717, column: 14, scope: !7898)
!7927 = !DILocation(line: 717, column: 9, scope: !7898)
!7928 = !DILocation(line: 717, column: 2, scope: !7898)
!7929 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !209, file: !209, line: 730, type: !7861, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !481, retainedNodes: !7930)
!7930 = !{!7931}
!7931 = !DILocalVariable(name: "dev", arg: 1, scope: !7929, file: !209, line: 730, type: !504)
!7932 = !DILocation(line: 0, scope: !7929)
!7933 = !DILocation(line: 732, column: 9, scope: !7929)
!7934 = !DILocation(line: 732, column: 2, scope: !7929)
!7935 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !661, file: !661, line: 368, type: !714, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !7936)
!7936 = !{!7937}
!7937 = !DILocalVariable(name: "dev", arg: 1, scope: !7935, file: !661, line: 368, type: !690)
!7938 = !DILocation(line: 0, scope: !7935)
!7939 = !DILocation(line: 370, column: 2, scope: !7935)
!7940 = !DILocation(line: 371, column: 1, scope: !7935)
!7941 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !661, file: !661, line: 243, type: !7942, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !7944)
!7942 = !DISubroutineType(types: !7943)
!7943 = !{null, !103, !103, !690}
!7944 = !{!7945, !7946, !7947, !7948, !7950}
!7945 = !DILocalVariable(name: "min", arg: 1, scope: !7941, file: !661, line: 243, type: !103)
!7946 = !DILocalVariable(name: "max", arg: 2, scope: !7941, file: !661, line: 243, type: !103)
!7947 = !DILocalVariable(name: "dev", arg: 3, scope: !7941, file: !661, line: 243, type: !690)
!7948 = !DILocalVariable(name: "data", scope: !7941, file: !661, line: 245, type: !7949)
!7949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 32)
!7950 = !DILocalVariable(name: "line", scope: !7941, file: !661, line: 246, type: !103)
!7951 = !DILocation(line: 0, scope: !7941)
!7952 = !DILocation(line: 245, column: 38, scope: !7941)
!7953 = !DILocation(line: 249, column: 24, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7955, file: !661, line: 249, column: 2)
!7955 = distinct !DILexicalBlock(scope: !7941, file: !661, line: 249, column: 2)
!7956 = !DILocation(line: 249, column: 2, scope: !7955)
!7957 = !DILocation(line: 251, column: 7, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7959, file: !661, line: 251, column: 7)
!7959 = distinct !DILexicalBlock(scope: !7954, file: !661, line: 249, column: 39)
!7960 = !DILocation(line: 251, column: 7, scope: !7959)
!7961 = !DILocation(line: 253, column: 4, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7958, file: !661, line: 251, column: 36)
!7963 = !DILocation(line: 256, column: 24, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7962, file: !661, line: 256, column: 8)
!7965 = !DILocation(line: 256, column: 9, scope: !7964)
!7966 = !DILocation(line: 256, column: 8, scope: !7962)
!7967 = !DILocation(line: 260, column: 43, scope: !7962)
!7968 = !DILocation(line: 260, column: 4, scope: !7962)
!7969 = !DILocation(line: 261, column: 3, scope: !7962)
!7970 = !DILocation(line: 249, column: 35, scope: !7954)
!7971 = distinct !{!7971, !7956, !7972}
!7972 = !DILocation(line: 262, column: 2, scope: !7955)
!7973 = !DILocation(line: 263, column: 1, scope: !7941)
!7974 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !661, file: !661, line: 158, type: !129, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !7975)
!7975 = !{!7976}
!7976 = !DILocalVariable(name: "line", arg: 1, scope: !7974, file: !661, line: 158, type: !103)
!7977 = !DILocation(line: 0, scope: !7974)
!7978 = !DILocation(line: 170, column: 38, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7980, file: !661, line: 160, column: 17)
!7980 = distinct !DILexicalBlock(scope: !7974, file: !661, line: 160, column: 6)
!7981 = !DILocation(line: 170, column: 10, scope: !7979)
!7982 = !DILocation(line: 176, column: 1, scope: !7974)
!7983 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !661, file: !661, line: 183, type: !7984, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !7986)
!7984 = !DISubroutineType(types: !7985)
!7985 = !{null, !103}
!7986 = !{!7987}
!7987 = !DILocalVariable(name: "line", arg: 1, scope: !7983, file: !661, line: 183, type: !103)
!7988 = !DILocation(line: 0, scope: !7983)
!7989 = !DILocation(line: 195, column: 28, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7991, file: !661, line: 185, column: 17)
!7991 = distinct !DILexicalBlock(scope: !7983, file: !661, line: 185, column: 6)
!7992 = !DILocation(line: 195, column: 3, scope: !7990)
!7993 = !DILocation(line: 200, column: 1, scope: !7983)
!7994 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7995, file: !7995, line: 971, type: !6104, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !7996)
!7995 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7996 = !{!7997}
!7997 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7994, file: !7995, line: 971, type: !137)
!7998 = !DILocation(line: 0, scope: !7994)
!7999 = !DILocation(line: 973, column: 3, scope: !7994)
!8000 = !DILocation(line: 974, column: 1, scope: !7994)
!8001 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7995, file: !7995, line: 891, type: !7238, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8002)
!8002 = !{!8003}
!8003 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8001, file: !7995, line: 891, type: !137)
!8004 = !DILocation(line: 0, scope: !8001)
!8005 = !DILocation(line: 893, column: 11, scope: !8001)
!8006 = !DILocation(line: 893, column: 40, scope: !8001)
!8007 = !DILocation(line: 893, column: 3, scope: !8001)
!8008 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !661, file: !661, line: 304, type: !714, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8009)
!8009 = !{!8010}
!8010 = !DILocalVariable(name: "dev", arg: 1, scope: !8008, file: !661, line: 304, type: !690)
!8011 = !DILocation(line: 0, scope: !8008)
!8012 = !DILocation(line: 306, column: 2, scope: !8008)
!8013 = !DILocation(line: 307, column: 1, scope: !8008)
!8014 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !661, file: !661, line: 299, type: !714, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8015)
!8015 = !{!8016}
!8016 = !DILocalVariable(name: "dev", arg: 1, scope: !8014, file: !661, line: 299, type: !690)
!8017 = !DILocation(line: 0, scope: !8014)
!8018 = !DILocation(line: 301, column: 2, scope: !8014)
!8019 = !DILocation(line: 302, column: 1, scope: !8014)
!8020 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !661, file: !661, line: 294, type: !714, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8021)
!8021 = !{!8022}
!8022 = !DILocalVariable(name: "dev", arg: 1, scope: !8020, file: !661, line: 294, type: !690)
!8023 = !DILocation(line: 0, scope: !8020)
!8024 = !DILocation(line: 296, column: 2, scope: !8020)
!8025 = !DILocation(line: 297, column: 1, scope: !8020)
!8026 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !661, file: !661, line: 289, type: !714, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8027)
!8027 = !{!8028}
!8028 = !DILocalVariable(name: "dev", arg: 1, scope: !8026, file: !661, line: 289, type: !690)
!8029 = !DILocation(line: 0, scope: !8026)
!8030 = !DILocation(line: 291, column: 2, scope: !8026)
!8031 = !DILocation(line: 292, column: 1, scope: !8026)
!8032 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !661, file: !661, line: 373, type: !714, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8033)
!8033 = !{!8034}
!8034 = !DILocalVariable(name: "dev", arg: 1, scope: !8032, file: !661, line: 373, type: !690)
!8035 = !DILocation(line: 0, scope: !8032)
!8036 = !DILocation(line: 375, column: 2, scope: !8032)
!8037 = !DILocation(line: 376, column: 1, scope: !8032)
!8038 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !661, file: !661, line: 284, type: !714, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8039)
!8039 = !{!8040}
!8040 = !DILocalVariable(name: "dev", arg: 1, scope: !8038, file: !661, line: 284, type: !690)
!8041 = !DILocation(line: 0, scope: !8038)
!8042 = !DILocation(line: 286, column: 2, scope: !8038)
!8043 = !DILocation(line: 287, column: 1, scope: !8038)
!8044 = distinct !DISubprogram(name: "stm32_exti_init", scope: !661, file: !661, line: 416, type: !688, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8045)
!8045 = !{!8046}
!8046 = !DILocalVariable(name: "dev", arg: 1, scope: !8044, file: !661, line: 416, type: !690)
!8047 = !DILocation(line: 0, scope: !8044)
!8048 = !DILocation(line: 418, column: 2, scope: !8044)
!8049 = !DILocation(line: 420, column: 2, scope: !8044)
!8050 = !DILocation(line: 0, scope: !713)
!8051 = !DILocation(line: 493, column: 2, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !713, file: !661, line: 493, column: 2)
!8053 = !DILocation(line: 497, column: 2, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !713, file: !661, line: 497, column: 2)
!8055 = !DILocation(line: 507, column: 2, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !713, file: !661, line: 507, column: 2)
!8057 = !DILocation(line: 512, column: 2, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !713, file: !661, line: 512, column: 2)
!8059 = !DILocation(line: 516, column: 2, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !713, file: !661, line: 516, column: 2)
!8061 = !DILocation(line: 523, column: 2, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !713, file: !661, line: 523, column: 2)
!8063 = !DILocation(line: 527, column: 2, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !713, file: !661, line: 527, column: 2)
!8065 = !DILocation(line: 607, column: 1, scope: !713)
!8066 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !661, file: !661, line: 112, type: !7984, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8067)
!8067 = !{!8068, !8069}
!8068 = !DILocalVariable(name: "line", arg: 1, scope: !8066, file: !661, line: 112, type: !103)
!8069 = !DILocalVariable(name: "irqnum", scope: !8066, file: !661, line: 114, type: !103)
!8070 = !DILocation(line: 0, scope: !8066)
!8071 = !DILocation(line: 121, column: 11, scope: !8066)
!8072 = !DILocation(line: 130, column: 26, scope: !8066)
!8073 = !DILocation(line: 130, column: 2, scope: !8066)
!8074 = !DILocation(line: 134, column: 2, scope: !8066)
!8075 = !DILocation(line: 135, column: 1, scope: !8066)
!8076 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7995, file: !7995, line: 274, type: !6104, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8077)
!8077 = !{!8078}
!8078 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8076, file: !7995, line: 274, type: !137)
!8079 = !DILocation(line: 0, scope: !8076)
!8080 = !DILocation(line: 276, column: 3, scope: !8076)
!8081 = !DILocation(line: 277, column: 1, scope: !8076)
!8082 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !661, file: !661, line: 137, type: !7984, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8083)
!8083 = !{!8084}
!8084 = !DILocalVariable(name: "line", arg: 1, scope: !8082, file: !661, line: 137, type: !103)
!8085 = !DILocation(line: 0, scope: !8082)
!8086 = !DILocation(line: 141, column: 11, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8082, file: !661, line: 141, column: 6)
!8088 = !DILocation(line: 141, column: 6, scope: !8082)
!8089 = !DILocation(line: 145, column: 28, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8087, file: !661, line: 141, column: 17)
!8091 = !DILocation(line: 145, column: 3, scope: !8090)
!8092 = !DILocation(line: 147, column: 2, scope: !8090)
!8093 = !DILocation(line: 151, column: 1, scope: !8082)
!8094 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7995, file: !7995, line: 322, type: !6104, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8095)
!8095 = !{!8096}
!8096 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8094, file: !7995, line: 322, type: !137)
!8097 = !DILocation(line: 0, scope: !8094)
!8098 = !DILocation(line: 324, column: 3, scope: !8094)
!8099 = !DILocation(line: 325, column: 1, scope: !8094)
!8100 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !661, file: !661, line: 202, type: !8101, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8103)
!8101 = !DISubroutineType(types: !8102)
!8102 = !{null, !103, !103}
!8103 = !{!8104, !8105}
!8104 = !DILocalVariable(name: "line", arg: 1, scope: !8100, file: !661, line: 202, type: !103)
!8105 = !DILocalVariable(name: "trigger", arg: 2, scope: !8100, file: !661, line: 202, type: !103)
!8106 = !DILocation(line: 0, scope: !8100)
!8107 = !DILocation(line: 211, column: 2, scope: !8100)
!8108 = !DILocation(line: 213, column: 36, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8100, file: !661, line: 211, column: 19)
!8110 = !DILocation(line: 213, column: 3, scope: !8109)
!8111 = !DILocation(line: 214, column: 3, scope: !8109)
!8112 = !DILocation(line: 215, column: 3, scope: !8109)
!8113 = !DILocation(line: 217, column: 35, scope: !8109)
!8114 = !DILocation(line: 217, column: 3, scope: !8109)
!8115 = !DILocation(line: 218, column: 3, scope: !8109)
!8116 = !DILocation(line: 219, column: 3, scope: !8109)
!8117 = !DILocation(line: 221, column: 36, scope: !8109)
!8118 = !DILocation(line: 221, column: 3, scope: !8109)
!8119 = !DILocation(line: 222, column: 3, scope: !8109)
!8120 = !DILocation(line: 223, column: 3, scope: !8109)
!8121 = !DILocation(line: 225, column: 35, scope: !8109)
!8122 = !DILocation(line: 225, column: 3, scope: !8109)
!8123 = !DILocation(line: 226, column: 3, scope: !8109)
!8124 = !DILocation(line: 227, column: 3, scope: !8109)
!8125 = !DILocation(line: 232, column: 1, scope: !8100)
!8126 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7995, file: !7995, line: 618, type: !6104, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8127)
!8127 = !{!8128}
!8128 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8126, file: !7995, line: 618, type: !137)
!8129 = !DILocation(line: 0, scope: !8126)
!8130 = !DILocation(line: 620, column: 3, scope: !8126)
!8131 = !DILocation(line: 622, column: 1, scope: !8126)
!8132 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7995, file: !7995, line: 754, type: !6104, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8133)
!8133 = !{!8134}
!8134 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8132, file: !7995, line: 754, type: !137)
!8135 = !DILocation(line: 0, scope: !8132)
!8136 = !DILocation(line: 756, column: 3, scope: !8132)
!8137 = !DILocation(line: 757, column: 1, scope: !8132)
!8138 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7995, file: !7995, line: 572, type: !6104, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8139)
!8139 = !{!8140}
!8140 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8138, file: !7995, line: 572, type: !137)
!8141 = !DILocation(line: 0, scope: !8138)
!8142 = !DILocation(line: 574, column: 3, scope: !8138)
!8143 = !DILocation(line: 576, column: 1, scope: !8138)
!8144 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7995, file: !7995, line: 710, type: !6104, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8145)
!8145 = !{!8146}
!8146 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8144, file: !7995, line: 710, type: !137)
!8147 = !DILocation(line: 0, scope: !8144)
!8148 = !DILocation(line: 712, column: 3, scope: !8144)
!8149 = !DILocation(line: 713, column: 1, scope: !8144)
!8150 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !661, file: !661, line: 433, type: !8151, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8153)
!8151 = !DISubroutineType(types: !8152)
!8152 = !{!103, !103, !701, !102}
!8153 = !{!8154, !8155, !8156, !8157, !8159}
!8154 = !DILocalVariable(name: "line", arg: 1, scope: !8150, file: !661, line: 433, type: !103)
!8155 = !DILocalVariable(name: "cb", arg: 2, scope: !8150, file: !661, line: 433, type: !701)
!8156 = !DILocalVariable(name: "arg", arg: 3, scope: !8150, file: !661, line: 433, type: !102)
!8157 = !DILocalVariable(name: "dev", scope: !8150, file: !661, line: 435, type: !8158)
!8158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !690)
!8159 = !DILocalVariable(name: "data", scope: !8150, file: !661, line: 436, type: !7949)
!8160 = !DILocation(line: 0, scope: !8150)
!8161 = !DILocation(line: 438, column: 21, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8150, file: !661, line: 438, column: 6)
!8163 = !DILocation(line: 438, column: 6, scope: !8162)
!8164 = !DILocation(line: 438, column: 6, scope: !8150)
!8165 = !DILocation(line: 442, column: 20, scope: !8150)
!8166 = !DILocation(line: 443, column: 17, scope: !8150)
!8167 = !DILocation(line: 443, column: 22, scope: !8150)
!8168 = !DILocation(line: 445, column: 2, scope: !8150)
!8169 = !DILocation(line: 446, column: 1, scope: !8150)
!8170 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !661, file: !661, line: 448, type: !7984, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !589, retainedNodes: !8171)
!8171 = !{!8172, !8173, !8174}
!8172 = !DILocalVariable(name: "line", arg: 1, scope: !8170, file: !661, line: 448, type: !103)
!8173 = !DILocalVariable(name: "dev", scope: !8170, file: !661, line: 450, type: !8158)
!8174 = !DILocalVariable(name: "data", scope: !8170, file: !661, line: 451, type: !7949)
!8175 = !DILocation(line: 0, scope: !8170)
!8176 = !DILocation(line: 453, column: 17, scope: !8170)
!8177 = !DILocation(line: 453, column: 20, scope: !8170)
!8178 = !DILocation(line: 454, column: 17, scope: !8170)
!8179 = !DILocation(line: 454, column: 22, scope: !8170)
!8180 = !DILocation(line: 455, column: 1, scope: !8170)
!8181 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !815, file: !815, line: 183, type: !853, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !8182)
!8182 = !{!8183, !8184, !8185, !8186, !8187}
!8183 = !DILocalVariable(name: "dev", arg: 1, scope: !8181, file: !815, line: 183, type: !844)
!8184 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8181, file: !815, line: 184, type: !855)
!8185 = !DILocalVariable(name: "pclken", scope: !8181, file: !815, line: 186, type: !806)
!8186 = !DILocalVariable(name: "reg", scope: !8181, file: !815, line: 187, type: !2671)
!8187 = !DILocalVariable(name: "reg_val", scope: !8181, file: !815, line: 188, type: !137)
!8188 = !DILocation(line: 0, scope: !8181)
!8189 = !DILocation(line: 192, column: 6, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8181, file: !815, line: 192, column: 6)
!8191 = !DILocation(line: 192, column: 6, scope: !8181)
!8192 = !DILocation(line: 197, column: 52, scope: !8181)
!8193 = !DILocation(line: 197, column: 8, scope: !8181)
!8194 = !DILocation(line: 198, column: 12, scope: !8181)
!8195 = !DILocation(line: 199, column: 21, scope: !8181)
!8196 = !DILocation(line: 199, column: 10, scope: !8181)
!8197 = !DILocation(line: 200, column: 7, scope: !8181)
!8198 = !DILocation(line: 202, column: 2, scope: !8181)
!8199 = !DILocation(line: 203, column: 1, scope: !8181)
!8200 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !815, file: !815, line: 205, type: !853, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !8201)
!8201 = !{!8202, !8203, !8204, !8205, !8206}
!8202 = !DILocalVariable(name: "dev", arg: 1, scope: !8200, file: !815, line: 205, type: !844)
!8203 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8200, file: !815, line: 206, type: !855)
!8204 = !DILocalVariable(name: "pclken", scope: !8200, file: !815, line: 208, type: !806)
!8205 = !DILocalVariable(name: "reg", scope: !8200, file: !815, line: 209, type: !2671)
!8206 = !DILocalVariable(name: "reg_val", scope: !8200, file: !815, line: 210, type: !137)
!8207 = !DILocation(line: 0, scope: !8200)
!8208 = !DILocation(line: 214, column: 6, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8200, file: !815, line: 214, column: 6)
!8210 = !DILocation(line: 214, column: 6, scope: !8200)
!8211 = !DILocation(line: 219, column: 52, scope: !8200)
!8212 = !DILocation(line: 219, column: 8, scope: !8200)
!8213 = !DILocation(line: 220, column: 12, scope: !8200)
!8214 = !DILocation(line: 221, column: 22, scope: !8200)
!8215 = !DILocation(line: 221, column: 13, scope: !8200)
!8216 = !DILocation(line: 221, column: 10, scope: !8200)
!8217 = !DILocation(line: 222, column: 7, scope: !8200)
!8218 = !DILocation(line: 224, column: 2, scope: !8200)
!8219 = !DILocation(line: 225, column: 1, scope: !8200)
!8220 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !815, file: !815, line: 262, type: !869, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !8221)
!8221 = !{!8222, !8223, !8224, !8225, !8226, !8227, !8228}
!8222 = !DILocalVariable(name: "clock", arg: 1, scope: !8220, file: !815, line: 262, type: !844)
!8223 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8220, file: !815, line: 263, type: !855)
!8224 = !DILocalVariable(name: "rate", arg: 3, scope: !8220, file: !815, line: 264, type: !149)
!8225 = !DILocalVariable(name: "pclken", scope: !8220, file: !815, line: 266, type: !806)
!8226 = !DILocalVariable(name: "ahb_clock", scope: !8220, file: !815, line: 273, type: !137)
!8227 = !DILocalVariable(name: "apb1_clock", scope: !8220, file: !815, line: 274, type: !137)
!8228 = !DILocalVariable(name: "apb2_clock", scope: !8220, file: !815, line: 276, type: !137)
!8229 = !DILocation(line: 0, scope: !8220)
!8230 = !DILocation(line: 273, column: 23, scope: !8220)
!8231 = !DILocation(line: 299, column: 18, scope: !8220)
!8232 = !DILocation(line: 299, column: 2, scope: !8220)
!8233 = !DILocation(line: 374, column: 3, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8220, file: !815, line: 299, column: 23)
!8235 = !DILocation(line: 379, column: 3, scope: !8234)
!8236 = !DILocation(line: 389, column: 3, scope: !8234)
!8237 = !DILocation(line: 0, scope: !8234)
!8238 = !DILocation(line: 396, column: 1, scope: !8220)
!8239 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !815, file: !815, line: 227, type: !885, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !8240)
!8240 = !{!8241, !8242, !8243, !8244, !8245, !8246, !8247, !8248}
!8241 = !DILocalVariable(name: "dev", arg: 1, scope: !8239, file: !815, line: 227, type: !844)
!8242 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8239, file: !815, line: 228, type: !855)
!8243 = !DILocalVariable(name: "data", arg: 3, scope: !8239, file: !815, line: 229, type: !102)
!8244 = !DILocalVariable(name: "pclken", scope: !8239, file: !815, line: 233, type: !806)
!8245 = !DILocalVariable(name: "reg", scope: !8239, file: !815, line: 234, type: !2671)
!8246 = !DILocalVariable(name: "reg_val", scope: !8239, file: !815, line: 235, type: !137)
!8247 = !DILocalVariable(name: "dt_val", scope: !8239, file: !815, line: 235, type: !137)
!8248 = !DILocalVariable(name: "err", scope: !8239, file: !815, line: 236, type: !103)
!8249 = !DILocation(line: 0, scope: !8239)
!8250 = !DILocation(line: 241, column: 30, scope: !8239)
!8251 = !DILocation(line: 241, column: 8, scope: !8239)
!8252 = !DILocation(line: 242, column: 10, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8239, file: !815, line: 242, column: 6)
!8254 = !DILocation(line: 242, column: 6, scope: !8239)
!8255 = !DILocation(line: 247, column: 11, scope: !8239)
!8256 = !DILocation(line: 248, column: 6, scope: !8239)
!8257 = !DILocation(line: 247, column: 44, scope: !8239)
!8258 = !DILocation(line: 250, column: 6, scope: !8239)
!8259 = !DILocation(line: 249, column: 52, scope: !8239)
!8260 = !DILocation(line: 249, column: 8, scope: !8239)
!8261 = !DILocation(line: 251, column: 12, scope: !8239)
!8262 = !DILocation(line: 252, column: 10, scope: !8239)
!8263 = !DILocation(line: 253, column: 7, scope: !8239)
!8264 = !DILocation(line: 255, column: 2, scope: !8239)
!8265 = !DILocation(line: 260, column: 1, scope: !8239)
!8266 = distinct !DISubprogram(name: "enabled_clock", scope: !815, file: !815, line: 100, type: !8267, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !8269)
!8267 = !DISubroutineType(types: !8268)
!8268 = !{!103, !137}
!8269 = !{!8270, !8271}
!8270 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8266, file: !815, line: 100, type: !137)
!8271 = !DILocalVariable(name: "r", scope: !8266, file: !815, line: 102, type: !103)
!8272 = !DILocation(line: 0, scope: !8266)
!8273 = !DILocation(line: 104, column: 2, scope: !8266)
!8274 = !DILocation(line: 180, column: 2, scope: !8266)
!8275 = !DILocation(line: 181, column: 1, scope: !8266)
!8276 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !815, file: !815, line: 641, type: !842, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !8277)
!8277 = !{!8278, !8279, !8280}
!8278 = !DILocalVariable(name: "dev", arg: 1, scope: !8276, file: !815, line: 641, type: !844)
!8279 = !DILocalVariable(name: "old_flash_freq", scope: !8276, file: !815, line: 664, type: !137)
!8280 = !DILocalVariable(name: "new_flash_freq", scope: !8276, file: !815, line: 665, type: !137)
!8281 = !DILocation(line: 0, scope: !8276)
!8282 = !DILocation(line: 646, column: 2, scope: !8276)
!8283 = !DILocation(line: 667, column: 19, scope: !8276)
!8284 = !DILocation(line: 674, column: 21, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8276, file: !815, line: 674, column: 6)
!8286 = !DILocation(line: 674, column: 6, scope: !8276)
!8287 = !DILocation(line: 675, column: 3, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8285, file: !815, line: 674, column: 59)
!8289 = !DILocation(line: 676, column: 2, scope: !8288)
!8290 = !DILocation(line: 680, column: 2, scope: !8276)
!8291 = !DILocation(line: 683, column: 2, scope: !8276)
!8292 = !DILocation(line: 690, column: 3, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8294, file: !815, line: 689, column: 9)
!8294 = distinct !DILexicalBlock(scope: !8276, file: !815, line: 685, column: 6)
!8295 = !DILocation(line: 695, column: 2, scope: !8276)
!8296 = !DILocation(line: 696, column: 2, scope: !8276)
!8297 = !DILocation(line: 696, column: 9, scope: !8276)
!8298 = !DILocation(line: 696, column: 34, scope: !8276)
!8299 = distinct !{!8299, !8296, !8300}
!8300 = !DILocation(line: 697, column: 2, scope: !8276)
!8301 = !DILocation(line: 720, column: 21, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8276, file: !815, line: 720, column: 6)
!8303 = !DILocation(line: 720, column: 6, scope: !8276)
!8304 = !DILocation(line: 721, column: 3, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8302, file: !815, line: 720, column: 60)
!8306 = !DILocation(line: 722, column: 2, scope: !8305)
!8307 = !DILocation(line: 725, column: 18, scope: !8276)
!8308 = !DILocation(line: 728, column: 2, scope: !8276)
!8309 = !DILocation(line: 730, column: 2, scope: !8276)
!8310 = !DILocation(line: 745, column: 2, scope: !8276)
!8311 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8312, file: !8312, line: 995, type: !135, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !162)
!8312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8313 = !DILocation(line: 997, column: 21, scope: !8311)
!8314 = !DILocation(line: 997, column: 3, scope: !8311)
!8315 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !815, file: !815, line: 507, type: !2794, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !162)
!8316 = !DILocation(line: 534, column: 7, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !815, line: 534, column: 7)
!8318 = distinct !DILexicalBlock(scope: !8319, file: !815, line: 532, column: 37)
!8319 = distinct !DILexicalBlock(scope: !8315, file: !815, line: 532, column: 6)
!8320 = !DILocation(line: 534, column: 28, scope: !8317)
!8321 = !DILocation(line: 534, column: 7, scope: !8318)
!8322 = !DILocation(line: 536, column: 4, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8317, file: !815, line: 534, column: 34)
!8324 = !DILocation(line: 537, column: 4, scope: !8323)
!8325 = !DILocation(line: 537, column: 11, scope: !8323)
!8326 = !DILocation(line: 537, column: 32, scope: !8323)
!8327 = distinct !{!8327, !8324, !8328}
!8328 = !DILocation(line: 539, column: 4, scope: !8323)
!8329 = !DILocation(line: 583, column: 3, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !815, line: 577, column: 37)
!8331 = distinct !DILexicalBlock(scope: !8315, file: !815, line: 577, column: 6)
!8332 = !DILocation(line: 584, column: 3, scope: !8330)
!8333 = !DILocation(line: 584, column: 10, scope: !8330)
!8334 = !DILocation(line: 584, column: 31, scope: !8330)
!8335 = distinct !{!8335, !8332, !8336}
!8336 = !DILocation(line: 585, column: 3, scope: !8330)
!8337 = !DILocation(line: 627, column: 1, scope: !8315)
!8338 = distinct !DISubprogram(name: "set_up_plls", scope: !815, file: !815, line: 448, type: !2794, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !162)
!8339 = !DILocation(line: 460, column: 6, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8338, file: !815, line: 460, column: 6)
!8341 = !DILocation(line: 460, column: 31, scope: !8340)
!8342 = !DILocation(line: 460, column: 6, scope: !8338)
!8343 = !DILocation(line: 461, column: 3, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8340, file: !815, line: 460, column: 67)
!8345 = !DILocation(line: 462, column: 3, scope: !8344)
!8346 = !DILocation(line: 463, column: 2, scope: !8344)
!8347 = !DILocation(line: 464, column: 2, scope: !8338)
!8348 = !DILocation(line: 496, column: 2, scope: !8338)
!8349 = !DILocation(line: 499, column: 2, scope: !8338)
!8350 = !DILocation(line: 500, column: 2, scope: !8338)
!8351 = !DILocation(line: 500, column: 9, scope: !8338)
!8352 = !DILocation(line: 500, column: 30, scope: !8338)
!8353 = distinct !{!8353, !8350, !8354}
!8354 = !DILocation(line: 502, column: 2, scope: !8338)
!8355 = !DILocation(line: 505, column: 1, scope: !8338)
!8356 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8312, file: !8312, line: 944, type: !6104, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !8357)
!8357 = !{!8358}
!8358 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8356, file: !8312, line: 944, type: !137)
!8359 = !DILocation(line: 0, scope: !8356)
!8360 = !DILocation(line: 946, column: 3, scope: !8356)
!8361 = !DILocation(line: 947, column: 1, scope: !8356)
!8362 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8312, file: !8312, line: 910, type: !6104, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !8363)
!8363 = !{!8364}
!8364 = !DILocalVariable(name: "Source", arg: 1, scope: !8362, file: !8312, line: 910, type: !137)
!8365 = !DILocation(line: 0, scope: !8362)
!8366 = !DILocation(line: 912, column: 3, scope: !8362)
!8367 = !DILocation(line: 913, column: 1, scope: !8362)
!8368 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8312, file: !8312, line: 924, type: !135, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !162)
!8369 = !DILocation(line: 926, column: 21, scope: !8368)
!8370 = !DILocation(line: 926, column: 3, scope: !8368)
!8371 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8312, file: !8312, line: 960, type: !6104, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !8372)
!8372 = !{!8373}
!8373 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8371, file: !8312, line: 960, type: !137)
!8374 = !DILocation(line: 0, scope: !8371)
!8375 = !DILocation(line: 962, column: 3, scope: !8371)
!8376 = !DILocation(line: 963, column: 1, scope: !8371)
!8377 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8312, file: !8312, line: 976, type: !6104, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !8378)
!8378 = !{!8379}
!8379 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8377, file: !8312, line: 976, type: !137)
!8380 = !DILocation(line: 0, scope: !8377)
!8381 = !DILocation(line: 978, column: 3, scope: !8377)
!8382 = !DILocation(line: 979, column: 1, scope: !8377)
!8383 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !815, file: !815, line: 409, type: !2794, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !162)
!8384 = !DILocation(line: 412, column: 6, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8383, file: !815, line: 412, column: 6)
!8386 = !DILocation(line: 412, column: 27, scope: !8385)
!8387 = !DILocation(line: 412, column: 6, scope: !8383)
!8388 = !DILocation(line: 414, column: 3, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8385, file: !815, line: 412, column: 33)
!8390 = !DILocation(line: 415, column: 3, scope: !8389)
!8391 = !DILocation(line: 415, column: 10, scope: !8389)
!8392 = !DILocation(line: 415, column: 31, scope: !8389)
!8393 = distinct !{!8393, !8390, !8394}
!8394 = !DILocation(line: 417, column: 3, scope: !8389)
!8395 = !DILocation(line: 421, column: 2, scope: !8383)
!8396 = !DILocation(line: 422, column: 2, scope: !8383)
!8397 = !DILocation(line: 422, column: 9, scope: !8383)
!8398 = !DILocation(line: 422, column: 34, scope: !8383)
!8399 = distinct !{!8399, !8396, !8400}
!8400 = !DILocation(line: 423, column: 2, scope: !8383)
!8401 = !DILocation(line: 424, column: 1, scope: !8383)
!8402 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8312, file: !8312, line: 1180, type: !2794, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !162)
!8403 = !DILocation(line: 1182, column: 3, scope: !8402)
!8404 = !DILocation(line: 1183, column: 1, scope: !8402)
!8405 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8312, file: !8312, line: 1169, type: !2794, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !162)
!8406 = !DILocation(line: 1171, column: 3, scope: !8405)
!8407 = !DILocation(line: 1172, column: 1, scope: !8405)
!8408 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8312, file: !8312, line: 1190, type: !135, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !162)
!8409 = !DILocation(line: 1192, column: 12, scope: !8408)
!8410 = !DILocation(line: 1192, column: 11, scope: !8408)
!8411 = !DILocation(line: 1192, column: 3, scope: !8408)
!8412 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8312, file: !8312, line: 612, type: !135, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !162)
!8413 = !DILocation(line: 614, column: 12, scope: !8412)
!8414 = !DILocation(line: 614, column: 11, scope: !8412)
!8415 = !DILocation(line: 614, column: 3, scope: !8412)
!8416 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8312, file: !8312, line: 592, type: !2794, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !162)
!8417 = !DILocation(line: 594, column: 3, scope: !8416)
!8418 = !DILocation(line: 595, column: 1, scope: !8416)
!8419 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8312, file: !8312, line: 760, type: !2794, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !162)
!8420 = !DILocation(line: 762, column: 3, scope: !8419)
!8421 = !DILocation(line: 763, column: 1, scope: !8419)
!8422 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8312, file: !8312, line: 780, type: !135, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !772, retainedNodes: !162)
!8423 = !DILocation(line: 782, column: 12, scope: !8422)
!8424 = !DILocation(line: 782, column: 11, scope: !8422)
!8425 = !DILocation(line: 782, column: 3, scope: !8422)
!8426 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8427, file: !8427, line: 48, type: !135, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !162)
!8427 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8428 = !DILocation(line: 51, column: 3, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8430, file: !8427, line: 50, column: 37)
!8430 = distinct !DILexicalBlock(scope: !8426, file: !8427, line: 50, column: 6)
!8431 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8427, file: !8427, line: 64, type: !2794, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !162)
!8432 = !DILocation(line: 66, column: 2, scope: !8431)
!8433 = !DILocation(line: 69, column: 1, scope: !8431)
!8434 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8312, file: !8312, line: 1219, type: !8435, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !8437)
!8435 = !DISubroutineType(types: !8436)
!8436 = !{null, !137, !137, !137}
!8437 = !{!8438, !8439, !8440}
!8438 = !DILocalVariable(name: "Source", arg: 1, scope: !8434, file: !8312, line: 1219, type: !137)
!8439 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !8434, file: !8312, line: 1219, type: !137)
!8440 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !8434, file: !8312, line: 1219, type: !137)
!8441 = !DILocation(line: 0, scope: !8434)
!8442 = !DILocation(line: 1221, column: 3, scope: !8434)
!8443 = !DILocation(line: 1222, column: 1, scope: !8434)
!8444 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !8427, file: !8427, line: 75, type: !135, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !162)
!8445 = !DILocation(line: 77, column: 9, scope: !8444)
!8446 = !DILocation(line: 77, column: 2, scope: !8444)
!8447 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8427, file: !8427, line: 87, type: !2794, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !162)
!8448 = !DILocation(line: 93, column: 2, scope: !8447)
!8449 = !DILocation(line: 95, column: 1, scope: !8447)
!8450 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !6103, file: !6103, line: 895, type: !6104, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !8451)
!8451 = !{!8452, !8453}
!8452 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8450, file: !6103, line: 895, type: !137)
!8453 = !DILocalVariable(name: "tmpreg", scope: !8450, file: !6103, line: 897, type: !176)
!8454 = !DILocation(line: 0, scope: !8450)
!8455 = !DILocation(line: 897, column: 3, scope: !8450)
!8456 = !DILocation(line: 897, column: 17, scope: !8450)
!8457 = !DILocation(line: 898, column: 3, scope: !8450)
!8458 = !DILocation(line: 900, column: 12, scope: !8450)
!8459 = !DILocation(line: 900, column: 10, scope: !8450)
!8460 = !DILocation(line: 901, column: 9, scope: !8450)
!8461 = !DILocation(line: 902, column: 1, scope: !8450)
!8462 = distinct !DISubprogram(name: "uart_console_init", scope: !946, file: !946, line: 588, type: !923, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !8463)
!8463 = !{!8464}
!8464 = !DILocalVariable(name: "arg", arg: 1, scope: !8462, file: !946, line: 588, type: !901)
!8465 = !DILocation(line: 0, scope: !8462)
!8466 = !DILocation(line: 593, column: 7, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8462, file: !946, line: 593, column: 6)
!8468 = !DILocation(line: 593, column: 6, scope: !8462)
!8469 = !DILocation(line: 597, column: 2, scope: !8462)
!8470 = !DILocation(line: 599, column: 2, scope: !8462)
!8471 = !DILocation(line: 600, column: 1, scope: !8462)
!8472 = distinct !DISubprogram(name: "device_is_ready", scope: !7860, file: !7860, line: 47, type: !8473, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !8475)
!8473 = !DISubroutineType(types: !8474)
!8474 = !{!224, !901}
!8475 = !{!8476}
!8476 = !DILocalVariable(name: "dev", arg: 1, scope: !8472, file: !7860, line: 47, type: !901)
!8477 = !DILocation(line: 0, scope: !8472)
!8478 = !DILocation(line: 55, column: 2, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8472, file: !7860, line: 55, column: 2)
!8480 = !{i64 2152408945}
!8481 = !DILocation(line: 56, column: 9, scope: !8472)
!8482 = !DILocation(line: 56, column: 2, scope: !8472)
!8483 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !946, file: !946, line: 573, type: !2794, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !162)
!8484 = !DILocation(line: 576, column: 2, scope: !8483)
!8485 = !DILocation(line: 579, column: 2, scope: !8483)
!8486 = !DILocation(line: 581, column: 1, scope: !8483)
!8487 = distinct !DISubprogram(name: "console_out", scope: !946, file: !946, line: 77, type: !129, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !8488)
!8488 = !{!8489}
!8489 = !DILocalVariable(name: "c", arg: 1, scope: !8487, file: !946, line: 77, type: !103)
!8490 = !DILocation(line: 0, scope: !8487)
!8491 = !DILocation(line: 89, column: 11, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8487, file: !946, line: 89, column: 6)
!8493 = !DILocation(line: 89, column: 6, scope: !8487)
!8494 = !DILocation(line: 90, column: 3, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8492, file: !946, line: 89, column: 17)
!8496 = !DILocation(line: 91, column: 2, scope: !8495)
!8497 = !DILocation(line: 92, column: 34, scope: !8487)
!8498 = !DILocation(line: 92, column: 2, scope: !8487)
!8499 = !DILocation(line: 94, column: 2, scope: !8487)
!8500 = distinct !DISubprogram(name: "uart_poll_out", scope: !8501, file: !8501, line: 95, type: !919, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !8502)
!8501 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/sys_heap")
!8502 = !{!8503, !8504}
!8503 = !DILocalVariable(name: "dev", arg: 1, scope: !8500, file: !8501, line: 95, type: !901)
!8504 = !DILocalVariable(name: "out_char", arg: 2, scope: !8500, file: !8501, line: 95, type: !222)
!8505 = !DILocation(line: 0, scope: !8500)
!8506 = !DILocation(line: 105, column: 2, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8500, file: !8501, line: 105, column: 2)
!8508 = !{i64 2152492336}
!8509 = !DILocation(line: 106, column: 2, scope: !8500)
!8510 = !DILocation(line: 107, column: 1, scope: !8500)
!8511 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !895, file: !895, line: 574, type: !919, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !8512)
!8512 = !{!8513, !8514, !8515}
!8513 = !DILocalVariable(name: "dev", arg: 1, scope: !8511, file: !895, line: 574, type: !901)
!8514 = !DILocalVariable(name: "out_char", arg: 2, scope: !8511, file: !895, line: 575, type: !222)
!8515 = !DILocalVariable(name: "api", scope: !8511, file: !895, line: 577, type: !892)
!8516 = !DILocation(line: 0, scope: !8511)
!8517 = !DILocation(line: 578, column: 40, scope: !8511)
!8518 = !DILocation(line: 580, column: 7, scope: !8511)
!8519 = !DILocation(line: 580, column: 2, scope: !8511)
!8520 = !DILocation(line: 581, column: 1, scope: !8511)
!8521 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !209, file: !209, line: 730, type: !8473, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !8522)
!8522 = !{!8523}
!8523 = !DILocalVariable(name: "dev", arg: 1, scope: !8521, file: !209, line: 730, type: !901)
!8524 = !DILocation(line: 0, scope: !8521)
!8525 = !DILocation(line: 732, column: 9, scope: !8521)
!8526 = !DILocation(line: 732, column: 2, scope: !8521)
!8527 = distinct !DISubprogram(name: "uart_register_input", scope: !946, file: !946, line: 560, type: !8528, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !889, retainedNodes: !8573)
!8528 = !DISubroutineType(types: !8529)
!8529 = !{null, !8530, !8530, !8570}
!8530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8531, size: 32)
!8531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !370, line: 2208, size: 128, elements: !8532)
!8532 = !{!8533}
!8533 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8531, file: !370, line: 2209, baseType: !8534, size: 128)
!8534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !370, line: 1709, size: 128, elements: !8535)
!8535 = !{!8536, !8549, !8551}
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8534, file: !370, line: 1710, baseType: !8537, size: 64)
!8537 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8538, line: 46, baseType: !8539)
!8538 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8538, line: 41, size: 64, elements: !8540)
!8540 = !{!8541, !8548}
!8541 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8539, file: !8538, line: 42, baseType: !8542, size: 32)
!8542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8543, size: 32)
!8543 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8538, line: 39, baseType: !8544)
!8544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8538, line: 35, size: 32, elements: !8545)
!8545 = !{!8546}
!8546 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8544, file: !8538, line: 36, baseType: !8547, size: 32)
!8547 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8538, line: 32, baseType: !137)
!8548 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8539, file: !8538, line: 43, baseType: !8542, size: 32, offset: 32)
!8549 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8534, file: !370, line: 1711, baseType: !8550, offset: 64)
!8550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !381, line: 43, elements: !162)
!8551 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8534, file: !370, line: 1712, baseType: !8552, size: 64, offset: 64)
!8552 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !312, line: 233, baseType: !8553)
!8553 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 231, size: 64, elements: !8554)
!8554 = !{!8555}
!8555 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8553, file: !312, line: 232, baseType: !8556, size: 64)
!8556 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !286, line: 48, baseType: !8557)
!8557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !286, line: 37, size: 64, elements: !8558)
!8558 = !{!8559, !8565}
!8559 = !DIDerivedType(tag: DW_TAG_member, scope: !8557, file: !286, line: 38, baseType: !8560, size: 32)
!8560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8557, file: !286, line: 38, size: 32, elements: !8561)
!8561 = !{!8562, !8564}
!8562 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8560, file: !286, line: 39, baseType: !8563, size: 32)
!8563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8557, size: 32)
!8564 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8560, file: !286, line: 40, baseType: !8563, size: 32)
!8565 = !DIDerivedType(tag: DW_TAG_member, scope: !8557, file: !286, line: 42, baseType: !8566, size: 32, offset: 32)
!8566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8557, file: !286, line: 42, size: 32, elements: !8567)
!8567 = !{!8568, !8569}
!8568 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8566, file: !286, line: 43, baseType: !8563, size: 32)
!8569 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8566, file: !286, line: 44, baseType: !8563, size: 32)
!8570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8571, size: 32)
!8571 = !DISubroutineType(types: !8572)
!8572 = !{!221, !1062, !221}
!8573 = !{!8574, !8575, !8576}
!8574 = !DILocalVariable(name: "avail", arg: 1, scope: !8527, file: !946, line: 560, type: !8530)
!8575 = !DILocalVariable(name: "lines", arg: 2, scope: !8527, file: !946, line: 560, type: !8530)
!8576 = !DILocalVariable(name: "completion", arg: 3, scope: !8527, file: !946, line: 561, type: !8570)
!8577 = !DILocation(line: 0, scope: !8527)
!8578 = !DILocation(line: 566, column: 1, scope: !8527)
!8579 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1106, file: !1106, line: 523, type: !971, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8580)
!8580 = !{!8581, !8582, !8583, !8584, !8585}
!8581 = !DILocalVariable(name: "dev", arg: 1, scope: !8579, file: !1106, line: 523, type: !973)
!8582 = !DILocalVariable(name: "pin", arg: 2, scope: !8579, file: !1106, line: 524, type: !519)
!8583 = !DILocalVariable(name: "flags", arg: 3, scope: !8579, file: !1106, line: 524, type: !520)
!8584 = !DILocalVariable(name: "err", scope: !8579, file: !1106, line: 526, type: !103)
!8585 = !DILocalVariable(name: "pincfg", scope: !8579, file: !1106, line: 527, type: !103)
!8586 = !DILocation(line: 0, scope: !8579)
!8587 = !DILocation(line: 527, column: 2, scope: !8579)
!8588 = !DILocation(line: 532, column: 8, scope: !8579)
!8589 = !DILocation(line: 533, column: 10, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8579, file: !1106, line: 533, column: 6)
!8591 = !DILocation(line: 533, column: 6, scope: !8579)
!8592 = !DILocation(line: 543, column: 13, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8579, file: !1106, line: 543, column: 6)
!8594 = !DILocation(line: 543, column: 28, scope: !8593)
!8595 = !DILocation(line: 543, column: 6, scope: !8579)
!8596 = !DILocation(line: 544, column: 14, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8598, file: !1106, line: 544, column: 7)
!8598 = distinct !DILexicalBlock(scope: !8593, file: !1106, line: 543, column: 34)
!8599 = !DILocation(line: 544, column: 39, scope: !8597)
!8600 = !DILocation(line: 544, column: 7, scope: !8598)
!8601 = !DILocation(line: 545, column: 38, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8597, file: !1106, line: 544, column: 45)
!8603 = !DILocation(line: 545, column: 4, scope: !8602)
!8604 = !DILocation(line: 546, column: 3, scope: !8602)
!8605 = !DILocation(line: 546, column: 21, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8597, file: !1106, line: 546, column: 14)
!8607 = !DILocation(line: 546, column: 45, scope: !8606)
!8608 = !DILocation(line: 546, column: 14, scope: !8597)
!8609 = !DILocation(line: 547, column: 40, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8606, file: !1106, line: 546, column: 51)
!8611 = !DILocation(line: 547, column: 4, scope: !8610)
!8612 = !DILocation(line: 548, column: 3, scope: !8610)
!8613 = !DILocation(line: 551, column: 32, scope: !8579)
!8614 = !DILocation(line: 551, column: 37, scope: !8579)
!8615 = !DILocation(line: 551, column: 2, scope: !8579)
!8616 = !DILocation(line: 554, column: 6, scope: !8579)
!8617 = !DILocation(line: 562, column: 1, scope: !8579)
!8618 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1106, file: !1106, line: 410, type: !8619, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8621)
!8619 = !DISubroutineType(types: !8620)
!8620 = !{!103, !973, !149}
!8621 = !{!8622, !8623, !8624, !8626}
!8622 = !DILocalVariable(name: "dev", arg: 1, scope: !8618, file: !1106, line: 410, type: !973)
!8623 = !DILocalVariable(name: "value", arg: 2, scope: !8618, file: !1106, line: 410, type: !149)
!8624 = !DILocalVariable(name: "cfg", scope: !8618, file: !1106, line: 412, type: !8625)
!8625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!8626 = !DILocalVariable(name: "gpio", scope: !8618, file: !1106, line: 413, type: !1040)
!8627 = !DILocation(line: 0, scope: !8618)
!8628 = !DILocation(line: 412, column: 45, scope: !8618)
!8629 = !DILocation(line: 413, column: 44, scope: !8618)
!8630 = !DILocation(line: 415, column: 11, scope: !8618)
!8631 = !DILocation(line: 415, column: 9, scope: !8618)
!8632 = !DILocation(line: 417, column: 2, scope: !8618)
!8633 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1106, file: !1106, line: 420, type: !994, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8634)
!8634 = !{!8635, !8636, !8637, !8638, !8639, !8640}
!8635 = !DILocalVariable(name: "dev", arg: 1, scope: !8633, file: !1106, line: 420, type: !973)
!8636 = !DILocalVariable(name: "mask", arg: 2, scope: !8633, file: !1106, line: 421, type: !531)
!8637 = !DILocalVariable(name: "value", arg: 3, scope: !8633, file: !1106, line: 422, type: !526)
!8638 = !DILocalVariable(name: "cfg", scope: !8633, file: !1106, line: 424, type: !8625)
!8639 = !DILocalVariable(name: "gpio", scope: !8633, file: !1106, line: 425, type: !1040)
!8640 = !DILocalVariable(name: "port_value", scope: !8633, file: !1106, line: 426, type: !137)
!8641 = !DILocation(line: 0, scope: !8633)
!8642 = !DILocation(line: 424, column: 45, scope: !8633)
!8643 = !DILocation(line: 425, column: 44, scope: !8633)
!8644 = !DILocation(line: 430, column: 15, scope: !8633)
!8645 = !DILocation(line: 431, column: 46, scope: !8633)
!8646 = !DILocation(line: 431, column: 44, scope: !8633)
!8647 = !DILocation(line: 431, column: 61, scope: !8633)
!8648 = !DILocation(line: 431, column: 53, scope: !8633)
!8649 = !DILocation(line: 431, column: 2, scope: !8633)
!8650 = !DILocation(line: 435, column: 2, scope: !8633)
!8651 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1106, file: !1106, line: 438, type: !998, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8652)
!8652 = !{!8653, !8654, !8655, !8656}
!8653 = !DILocalVariable(name: "dev", arg: 1, scope: !8651, file: !1106, line: 438, type: !973)
!8654 = !DILocalVariable(name: "pins", arg: 2, scope: !8651, file: !1106, line: 439, type: !531)
!8655 = !DILocalVariable(name: "cfg", scope: !8651, file: !1106, line: 441, type: !8625)
!8656 = !DILocalVariable(name: "gpio", scope: !8651, file: !1106, line: 442, type: !1040)
!8657 = !DILocation(line: 0, scope: !8651)
!8658 = !DILocation(line: 441, column: 45, scope: !8651)
!8659 = !DILocation(line: 442, column: 44, scope: !8651)
!8660 = !DILocation(line: 448, column: 2, scope: !8651)
!8661 = !DILocation(line: 450, column: 2, scope: !8651)
!8662 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1106, file: !1106, line: 453, type: !998, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8663)
!8663 = !{!8664, !8665, !8666, !8667}
!8664 = !DILocalVariable(name: "dev", arg: 1, scope: !8662, file: !1106, line: 453, type: !973)
!8665 = !DILocalVariable(name: "pins", arg: 2, scope: !8662, file: !1106, line: 454, type: !531)
!8666 = !DILocalVariable(name: "cfg", scope: !8662, file: !1106, line: 456, type: !8625)
!8667 = !DILocalVariable(name: "gpio", scope: !8662, file: !1106, line: 457, type: !1040)
!8668 = !DILocation(line: 0, scope: !8662)
!8669 = !DILocation(line: 456, column: 45, scope: !8662)
!8670 = !DILocation(line: 457, column: 44, scope: !8662)
!8671 = !DILocation(line: 467, column: 2, scope: !8662)
!8672 = !DILocation(line: 470, column: 2, scope: !8662)
!8673 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1106, file: !1106, line: 473, type: !998, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8674)
!8674 = !{!8675, !8676, !8677, !8678}
!8675 = !DILocalVariable(name: "dev", arg: 1, scope: !8673, file: !1106, line: 473, type: !973)
!8676 = !DILocalVariable(name: "pins", arg: 2, scope: !8673, file: !1106, line: 474, type: !531)
!8677 = !DILocalVariable(name: "cfg", scope: !8673, file: !1106, line: 476, type: !8625)
!8678 = !DILocalVariable(name: "gpio", scope: !8673, file: !1106, line: 477, type: !1040)
!8679 = !DILocation(line: 0, scope: !8673)
!8680 = !DILocation(line: 476, column: 45, scope: !8673)
!8681 = !DILocation(line: 477, column: 44, scope: !8673)
!8682 = !DILocation(line: 484, column: 2, scope: !8673)
!8683 = !DILocation(line: 487, column: 2, scope: !8673)
!8684 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1106, file: !1106, line: 594, type: !1004, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8685)
!8685 = !{!8686, !8687, !8688, !8689, !8690, !8691, !8693, !8694, !8695}
!8686 = !DILocalVariable(name: "dev", arg: 1, scope: !8684, file: !1106, line: 594, type: !973)
!8687 = !DILocalVariable(name: "pin", arg: 2, scope: !8684, file: !1106, line: 595, type: !519)
!8688 = !DILocalVariable(name: "mode", arg: 3, scope: !8684, file: !1106, line: 596, type: !484)
!8689 = !DILocalVariable(name: "trig", arg: 4, scope: !8684, file: !1106, line: 597, type: !490)
!8690 = !DILocalVariable(name: "cfg", scope: !8684, file: !1106, line: 599, type: !8625)
!8691 = !DILocalVariable(name: "data", scope: !8684, file: !1106, line: 600, type: !8692)
!8692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!8693 = !DILocalVariable(name: "edge", scope: !8684, file: !1106, line: 601, type: !103)
!8694 = !DILocalVariable(name: "err", scope: !8684, file: !1106, line: 602, type: !103)
!8695 = !DILabel(scope: !8684, name: "exit", file: !1106, line: 643)
!8696 = !DILocation(line: 0, scope: !8684)
!8697 = !DILocation(line: 599, column: 45, scope: !8684)
!8698 = !DILocation(line: 604, column: 6, scope: !8684)
!8699 = !DILocation(line: 605, column: 34, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !1106, line: 605, column: 7)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !1106, line: 604, column: 38)
!8702 = distinct !DILexicalBlock(scope: !8684, file: !1106, line: 604, column: 6)
!8703 = !DILocation(line: 605, column: 7, scope: !8700)
!8704 = !DILocation(line: 605, column: 47, scope: !8700)
!8705 = !DILocation(line: 605, column: 39, scope: !8700)
!8706 = !DILocation(line: 605, column: 7, scope: !8701)
!8707 = !DILocation(line: 606, column: 4, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8700, file: !1106, line: 605, column: 53)
!8709 = !DILocation(line: 607, column: 4, scope: !8708)
!8710 = !DILocation(line: 608, column: 4, scope: !8708)
!8711 = !DILocation(line: 609, column: 3, scope: !8708)
!8712 = !DILocation(line: 600, column: 38, scope: !8684)
!8713 = !DILocation(line: 620, column: 30, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8684, file: !1106, line: 620, column: 6)
!8715 = !DILocation(line: 620, column: 6, scope: !8714)
!8716 = !DILocation(line: 620, column: 57, scope: !8714)
!8717 = !DILocation(line: 620, column: 6, scope: !8684)
!8718 = !DILocation(line: 625, column: 29, scope: !8684)
!8719 = !DILocation(line: 625, column: 2, scope: !8684)
!8720 = !DILocation(line: 627, column: 2, scope: !8684)
!8721 = !DILocation(line: 630, column: 3, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8684, file: !1106, line: 627, column: 16)
!8723 = !DILocation(line: 633, column: 3, scope: !8722)
!8724 = !DILocation(line: 636, column: 3, scope: !8722)
!8725 = !DILocation(line: 639, column: 2, scope: !8684)
!8726 = !DILocation(line: 641, column: 2, scope: !8684)
!8727 = !DILocation(line: 643, column: 1, scope: !8684)
!8728 = !DILocation(line: 644, column: 2, scope: !8684)
!8729 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1106, file: !1106, line: 647, type: !1008, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8730)
!8730 = !{!8731, !8732, !8733, !8734}
!8731 = !DILocalVariable(name: "dev", arg: 1, scope: !8729, file: !1106, line: 647, type: !973)
!8732 = !DILocalVariable(name: "callback", arg: 2, scope: !8729, file: !1106, line: 648, type: !1010)
!8733 = !DILocalVariable(name: "set", arg: 3, scope: !8729, file: !1106, line: 649, type: !224)
!8734 = !DILocalVariable(name: "data", scope: !8729, file: !1106, line: 651, type: !8692)
!8735 = !DILocation(line: 0, scope: !8729)
!8736 = !DILocation(line: 651, column: 38, scope: !8729)
!8737 = !DILocation(line: 653, column: 37, scope: !8729)
!8738 = !DILocation(line: 653, column: 9, scope: !8729)
!8739 = !DILocation(line: 653, column: 2, scope: !8729)
!8740 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8741, file: !8741, line: 38, type: !8742, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8745)
!8741 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8742 = !DISubroutineType(types: !8743)
!8743 = !{!103, !8744, !1010, !224}
!8744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!8745 = !{!8746, !8747, !8748}
!8746 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8740, file: !8741, line: 38, type: !8744)
!8747 = !DILocalVariable(name: "callback", arg: 2, scope: !8740, file: !8741, line: 39, type: !1010)
!8748 = !DILocalVariable(name: "set", arg: 3, scope: !8740, file: !8741, line: 40, type: !224)
!8749 = !DILocation(line: 0, scope: !8740)
!8750 = !DILocation(line: 45, column: 7, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8740, file: !8741, line: 45, column: 6)
!8752 = !DILocation(line: 45, column: 6, scope: !8740)
!8753 = !DILocation(line: 46, column: 56, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8755, file: !8741, line: 46, column: 7)
!8755 = distinct !DILexicalBlock(scope: !8751, file: !8741, line: 45, column: 38)
!8756 = !DILocation(line: 46, column: 8, scope: !8754)
!8757 = !DILocation(line: 46, column: 7, scope: !8755)
!8758 = !DILocation(line: 51, column: 13, scope: !8751)
!8759 = !DILocation(line: 56, column: 43, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8761, file: !8741, line: 55, column: 11)
!8761 = distinct !DILexicalBlock(scope: !8740, file: !8741, line: 55, column: 6)
!8762 = !DILocation(line: 56, column: 3, scope: !8760)
!8763 = !DILocation(line: 57, column: 2, scope: !8760)
!8764 = !DILocation(line: 60, column: 1, scope: !8740)
!8765 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !551, file: !551, line: 261, type: !8766, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8768)
!8766 = !DISubroutineType(types: !8767)
!8767 = !{!224, !8744}
!8768 = !{!8769}
!8769 = !DILocalVariable(name: "list", arg: 1, scope: !8765, file: !551, line: 261, type: !8744)
!8770 = !DILocation(line: 0, scope: !8765)
!8771 = !DILocation(line: 261, column: 1, scope: !8765)
!8772 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !551, file: !551, line: 417, type: !8773, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8775)
!8773 = !DISubroutineType(types: !8774)
!8774 = !{!224, !8744, !1174}
!8775 = !{!8776, !8777, !8778, !8779}
!8776 = !DILocalVariable(name: "list", arg: 1, scope: !8772, file: !551, line: 417, type: !8744)
!8777 = !DILocalVariable(name: "node", arg: 2, scope: !8772, file: !551, line: 417, type: !1174)
!8778 = !DILocalVariable(name: "prev", scope: !8772, file: !551, line: 417, type: !1174)
!8779 = !DILocalVariable(name: "test", scope: !8772, file: !551, line: 417, type: !1174)
!8780 = !DILocation(line: 0, scope: !8772)
!8781 = !DILocation(line: 417, column: 1, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8772, file: !551, line: 417, column: 1)
!8783 = !DILocation(line: 417, column: 1, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8782, file: !551, line: 417, column: 1)
!8785 = !DILocation(line: 417, column: 1, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8787, file: !551, line: 417, column: 1)
!8787 = distinct !DILexicalBlock(scope: !8784, file: !551, line: 417, column: 1)
!8788 = !DILocation(line: 417, column: 1, scope: !8787)
!8789 = distinct !{!8789, !8781, !8781}
!8790 = !DILocation(line: 417, column: 1, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8786, file: !551, line: 417, column: 1)
!8792 = !DILocation(line: 417, column: 1, scope: !8772)
!8793 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !551, file: !551, line: 298, type: !8794, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8796)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{null, !8744, !1174}
!8796 = !{!8797, !8798}
!8797 = !DILocalVariable(name: "list", arg: 1, scope: !8793, file: !551, line: 298, type: !8744)
!8798 = !DILocalVariable(name: "node", arg: 2, scope: !8793, file: !551, line: 298, type: !1174)
!8799 = !DILocation(line: 0, scope: !8793)
!8800 = !DILocation(line: 298, column: 1, scope: !8793)
!8801 = !DILocation(line: 298, column: 1, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8793, file: !551, line: 298, column: 1)
!8803 = !DILocation(line: 298, column: 1, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8802, file: !551, line: 298, column: 1)
!8805 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !551, file: !551, line: 231, type: !8806, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8808)
!8806 = !DISubroutineType(types: !8807)
!8807 = !{!1174, !8744}
!8808 = !{!8809}
!8809 = !DILocalVariable(name: "list", arg: 1, scope: !8805, file: !551, line: 231, type: !8744)
!8810 = !DILocation(line: 0, scope: !8805)
!8811 = !DILocation(line: 233, column: 15, scope: !8805)
!8812 = !DILocation(line: 233, column: 2, scope: !8805)
!8813 = distinct !DISubprogram(name: "z_snode_next_set", scope: !551, file: !551, line: 209, type: !8814, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8816)
!8814 = !DISubroutineType(types: !8815)
!8815 = !{null, !1174, !1174}
!8816 = !{!8817, !8818}
!8817 = !DILocalVariable(name: "parent", arg: 1, scope: !8813, file: !551, line: 209, type: !1174)
!8818 = !DILocalVariable(name: "child", arg: 2, scope: !8813, file: !551, line: 209, type: !1174)
!8819 = !DILocation(line: 0, scope: !8813)
!8820 = !DILocation(line: 211, column: 10, scope: !8813)
!8821 = !DILocation(line: 211, column: 15, scope: !8813)
!8822 = !DILocation(line: 212, column: 1, scope: !8813)
!8823 = distinct !DISubprogram(name: "z_slist_head_set", scope: !551, file: !551, line: 214, type: !8794, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8824)
!8824 = !{!8825, !8826}
!8825 = !DILocalVariable(name: "list", arg: 1, scope: !8823, file: !551, line: 214, type: !8744)
!8826 = !DILocalVariable(name: "node", arg: 2, scope: !8823, file: !551, line: 214, type: !1174)
!8827 = !DILocation(line: 0, scope: !8823)
!8828 = !DILocation(line: 216, column: 8, scope: !8823)
!8829 = !DILocation(line: 216, column: 13, scope: !8823)
!8830 = !DILocation(line: 217, column: 1, scope: !8823)
!8831 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !551, file: !551, line: 243, type: !8806, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8832)
!8832 = !{!8833}
!8833 = !DILocalVariable(name: "list", arg: 1, scope: !8831, file: !551, line: 243, type: !8744)
!8834 = !DILocation(line: 0, scope: !8831)
!8835 = !DILocation(line: 245, column: 15, scope: !8831)
!8836 = !DILocation(line: 245, column: 2, scope: !8831)
!8837 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !551, file: !551, line: 219, type: !8794, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8838)
!8838 = !{!8839, !8840}
!8839 = !DILocalVariable(name: "list", arg: 1, scope: !8837, file: !551, line: 219, type: !8744)
!8840 = !DILocalVariable(name: "node", arg: 2, scope: !8837, file: !551, line: 219, type: !1174)
!8841 = !DILocation(line: 0, scope: !8837)
!8842 = !DILocation(line: 221, column: 8, scope: !8837)
!8843 = !DILocation(line: 221, column: 13, scope: !8837)
!8844 = !DILocation(line: 222, column: 1, scope: !8837)
!8845 = distinct !DISubprogram(name: "sys_slist_remove", scope: !551, file: !551, line: 401, type: !8846, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8848)
!8846 = !DISubroutineType(types: !8847)
!8847 = !{null, !8744, !1174, !1174}
!8848 = !{!8849, !8850, !8851}
!8849 = !DILocalVariable(name: "list", arg: 1, scope: !8845, file: !551, line: 401, type: !8744)
!8850 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8845, file: !551, line: 401, type: !1174)
!8851 = !DILocalVariable(name: "node", arg: 3, scope: !8845, file: !551, line: 401, type: !1174)
!8852 = !DILocation(line: 0, scope: !8845)
!8853 = !DILocation(line: 401, column: 1, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8845, file: !551, line: 401, column: 1)
!8855 = !DILocation(line: 0, scope: !8854)
!8856 = !DILocation(line: 401, column: 1, scope: !8845)
!8857 = !DILocation(line: 401, column: 1, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8854, file: !551, line: 401, column: 1)
!8859 = !DILocation(line: 401, column: 1, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8858, file: !551, line: 401, column: 1)
!8861 = !DILocation(line: 401, column: 1, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8860, file: !551, line: 401, column: 1)
!8863 = !DILocation(line: 401, column: 1, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8854, file: !551, line: 401, column: 1)
!8865 = !DILocation(line: 401, column: 1, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8864, file: !551, line: 401, column: 1)
!8867 = !DILocation(line: 401, column: 1, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8866, file: !551, line: 401, column: 1)
!8869 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !551, file: !551, line: 285, type: !8870, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8872)
!8870 = !DISubroutineType(types: !8871)
!8871 = !{!1174, !1174}
!8872 = !{!8873}
!8873 = !DILocalVariable(name: "node", arg: 1, scope: !8869, file: !551, line: 285, type: !1174)
!8874 = !DILocation(line: 0, scope: !8869)
!8875 = !DILocation(line: 285, column: 1, scope: !8869)
!8876 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !551, file: !551, line: 274, type: !8870, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8877)
!8877 = !{!8878}
!8878 = !DILocalVariable(name: "node", arg: 1, scope: !8876, file: !551, line: 274, type: !1174)
!8879 = !DILocation(line: 0, scope: !8876)
!8880 = !DILocation(line: 274, column: 1, scope: !8876)
!8881 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !551, file: !551, line: 204, type: !8870, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8882)
!8882 = !{!8883}
!8883 = !DILocalVariable(name: "node", arg: 1, scope: !8881, file: !551, line: 204, type: !1174)
!8884 = !DILocation(line: 0, scope: !8881)
!8885 = !DILocation(line: 206, column: 15, scope: !8881)
!8886 = !DILocation(line: 206, column: 2, scope: !8881)
!8887 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1106, file: !1106, line: 342, type: !129, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8888)
!8888 = !{!8889, !8890, !8891}
!8889 = !DILocalVariable(name: "pin", arg: 1, scope: !8887, file: !1106, line: 342, type: !103)
!8890 = !DILocalVariable(name: "line", scope: !8887, file: !1106, line: 344, type: !137)
!8891 = !DILocalVariable(name: "port", scope: !8887, file: !1106, line: 345, type: !103)
!8892 = !DILocation(line: 0, scope: !8887)
!8893 = !DILocation(line: 344, column: 18, scope: !8887)
!8894 = !{i32 983040, i32 0}
!8895 = !DILocation(line: 356, column: 9, scope: !8887)
!8896 = !DILocation(line: 370, column: 2, scope: !8887)
!8897 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1106, file: !1106, line: 37, type: !704, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8898)
!8898 = !{!8899, !8900, !8901}
!8899 = !DILocalVariable(name: "line", arg: 1, scope: !8897, file: !1106, line: 37, type: !103)
!8900 = !DILocalVariable(name: "arg", arg: 2, scope: !8897, file: !1106, line: 37, type: !102)
!8901 = !DILocalVariable(name: "data", scope: !8897, file: !1106, line: 39, type: !8692)
!8902 = !DILocation(line: 0, scope: !8897)
!8903 = !DILocation(line: 41, column: 29, scope: !8897)
!8904 = !DILocation(line: 41, column: 39, scope: !8897)
!8905 = !DILocation(line: 41, column: 44, scope: !8897)
!8906 = !DILocation(line: 41, column: 2, scope: !8897)
!8907 = !DILocation(line: 42, column: 1, scope: !8897)
!8908 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1106, file: !1106, line: 376, type: !8909, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8911)
!8909 = !DISubroutineType(types: !8910)
!8910 = !{!103, !103, !103}
!8911 = !{!8912, !8913, !8914, !8916, !8917}
!8912 = !DILocalVariable(name: "port", arg: 1, scope: !8908, file: !1106, line: 376, type: !103)
!8913 = !DILocalVariable(name: "pin", arg: 2, scope: !8908, file: !1106, line: 376, type: !103)
!8914 = !DILocalVariable(name: "clk", scope: !8908, file: !1106, line: 386, type: !8915)
!8915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!8916 = !DILocalVariable(name: "pclken", scope: !8908, file: !1106, line: 387, type: !1209)
!8917 = !DILocalVariable(name: "ret", scope: !8908, file: !1106, line: 396, type: !103)
!8918 = !DILocation(line: 0, scope: !8908)
!8919 = !DILocation(line: 387, column: 2, scope: !8908)
!8920 = !DILocation(line: 387, column: 22, scope: !8908)
!8921 = !DILocation(line: 399, column: 8, scope: !8908)
!8922 = !DILocation(line: 400, column: 10, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8908, file: !1106, line: 400, column: 6)
!8924 = !DILocation(line: 400, column: 6, scope: !8908)
!8925 = !DILocation(line: 405, column: 2, scope: !8908)
!8926 = !DILocation(line: 407, column: 2, scope: !8908)
!8927 = !DILocation(line: 408, column: 1, scope: !8908)
!8928 = distinct !DISubprogram(name: "clock_control_on", scope: !781, file: !781, line: 123, type: !1071, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8929)
!8929 = !{!8930, !8931, !8932}
!8930 = !DILocalVariable(name: "dev", arg: 1, scope: !8928, file: !781, line: 123, type: !973)
!8931 = !DILocalVariable(name: "sys", arg: 2, scope: !8928, file: !781, line: 124, type: !855)
!8932 = !DILocalVariable(name: "api", scope: !8928, file: !781, line: 126, type: !1064)
!8933 = !DILocation(line: 0, scope: !8928)
!8934 = !DILocation(line: 127, column: 49, scope: !8928)
!8935 = !DILocation(line: 129, column: 14, scope: !8928)
!8936 = !DILocation(line: 129, column: 9, scope: !8928)
!8937 = !DILocation(line: 129, column: 2, scope: !8928)
!8938 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1106, file: !1106, line: 311, type: !8101, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8939)
!8939 = !{!8940, !8941, !8942}
!8940 = !DILocalVariable(name: "port", arg: 1, scope: !8938, file: !1106, line: 311, type: !103)
!8941 = !DILocalVariable(name: "pin", arg: 2, scope: !8938, file: !1106, line: 311, type: !103)
!8942 = !DILocalVariable(name: "line", scope: !8938, file: !1106, line: 313, type: !137)
!8943 = !DILocation(line: 0, scope: !8938)
!8944 = !DILocation(line: 313, column: 18, scope: !8938)
!8945 = !DILocation(line: 337, column: 2, scope: !8938)
!8946 = !DILocation(line: 340, column: 1, scope: !8938)
!8947 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1106, file: !1106, line: 295, type: !8948, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8950)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{!137, !103}
!8950 = !{!8951}
!8951 = !DILocalVariable(name: "pin", arg: 1, scope: !8947, file: !1106, line: 295, type: !103)
!8952 = !DILocation(line: 0, scope: !8947)
!8953 = !DILocation(line: 307, column: 46, scope: !8947)
!8954 = !DILocation(line: 307, column: 27, scope: !8947)
!8955 = !DILocation(line: 307, column: 32, scope: !8947)
!8956 = !DILocation(line: 307, column: 14, scope: !8947)
!8957 = !DILocation(line: 307, column: 39, scope: !8947)
!8958 = !DILocation(line: 307, column: 2, scope: !8947)
!8959 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !8960, file: !8960, line: 621, type: !8961, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8963)
!8960 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8961 = !DISubroutineType(types: !8962)
!8962 = !{null, !137, !137}
!8963 = !{!8964, !8965}
!8964 = !DILocalVariable(name: "Port", arg: 1, scope: !8959, file: !8960, line: 621, type: !137)
!8965 = !DILocalVariable(name: "Line", arg: 2, scope: !8959, file: !8960, line: 621, type: !137)
!8966 = !DILocation(line: 0, scope: !8959)
!8967 = !DILocation(line: 623, column: 3, scope: !8959)
!8968 = !DILocalVariable(name: "value", arg: 1, scope: !8969, file: !6271, line: 373, type: !137)
!8969 = distinct !DISubprogram(name: "__RBIT", scope: !6271, file: !6271, line: 373, type: !7238, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8970)
!8970 = !{!8968, !8971}
!8971 = !DILocalVariable(name: "result", scope: !8969, file: !6271, line: 375, type: !137)
!8972 = !DILocation(line: 0, scope: !8969, inlinedAt: !8973)
!8973 = distinct !DILocation(line: 623, column: 3, scope: !8959)
!8974 = !DILocation(line: 380, column: 4, scope: !8969, inlinedAt: !8973)
!8975 = !{i64 2448492}
!8976 = !DILocalVariable(name: "value", arg: 1, scope: !8977, file: !6271, line: 403, type: !137)
!8977 = distinct !DISubprogram(name: "__CLZ", scope: !6271, file: !6271, line: 403, type: !8978, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8980)
!8978 = !DISubroutineType(types: !8979)
!8979 = !{!221, !137}
!8980 = !{!8976}
!8981 = !DILocation(line: 0, scope: !8977, inlinedAt: !8982)
!8982 = distinct !DILocation(line: 623, column: 3, scope: !8959)
!8983 = !DILocation(line: 414, column: 7, scope: !8977, inlinedAt: !8982)
!8984 = !DILocation(line: 624, column: 1, scope: !8959)
!8985 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8741, file: !8741, line: 69, type: !8986, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !8988)
!8986 = !DISubroutineType(types: !8987)
!8987 = !{null, !8744, !973, !137}
!8988 = !{!8989, !8990, !8991, !8992, !8993}
!8989 = !DILocalVariable(name: "list", arg: 1, scope: !8985, file: !8741, line: 69, type: !8744)
!8990 = !DILocalVariable(name: "port", arg: 2, scope: !8985, file: !8741, line: 70, type: !973)
!8991 = !DILocalVariable(name: "pins", arg: 3, scope: !8985, file: !8741, line: 71, type: !137)
!8992 = !DILocalVariable(name: "cb", scope: !8985, file: !8741, line: 73, type: !1010)
!8993 = !DILocalVariable(name: "tmp", scope: !8985, file: !8741, line: 73, type: !1010)
!8994 = !DILocation(line: 0, scope: !8985)
!8995 = !DILocation(line: 75, column: 2, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8985, file: !8741, line: 75, column: 2)
!8997 = !DILocation(line: 0, scope: !8996)
!8998 = !DILocation(line: 76, column: 11, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !9000, file: !8741, line: 76, column: 7)
!9000 = distinct !DILexicalBlock(scope: !9001, file: !8741, line: 75, column: 57)
!9001 = distinct !DILexicalBlock(scope: !8996, file: !8741, line: 75, column: 2)
!9002 = !DILocation(line: 76, column: 20, scope: !8999)
!9003 = !DILocation(line: 76, column: 7, scope: !9000)
!9004 = !DILocation(line: 78, column: 8, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8999, file: !8741, line: 76, column: 28)
!9006 = !DILocation(line: 78, column: 4, scope: !9005)
!9007 = !DILocation(line: 79, column: 3, scope: !9005)
!9008 = !DILocation(line: 75, column: 2, scope: !9001)
!9009 = !DILocation(line: 81, column: 1, scope: !8985)
!9010 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !8960, file: !8960, line: 721, type: !7238, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9011)
!9011 = !{!9012}
!9012 = !DILocalVariable(name: "Line", arg: 1, scope: !9010, file: !8960, line: 721, type: !137)
!9013 = !DILocation(line: 0, scope: !9010)
!9014 = !DILocation(line: 723, column: 21, scope: !9010)
!9015 = !DILocation(line: 0, scope: !8969, inlinedAt: !9016)
!9016 = distinct !DILocation(line: 723, column: 76, scope: !9010)
!9017 = !DILocation(line: 380, column: 4, scope: !8969, inlinedAt: !9016)
!9018 = !DILocation(line: 0, scope: !8977, inlinedAt: !9019)
!9019 = distinct !DILocation(line: 723, column: 76, scope: !9010)
!9020 = !DILocation(line: 414, column: 7, scope: !8977, inlinedAt: !9019)
!9021 = !DILocation(line: 723, column: 73, scope: !9010)
!9022 = !DILocation(line: 723, column: 3, scope: !9010)
!9023 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9024, file: !9024, line: 913, type: !9025, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9027)
!9024 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9025 = !DISubroutineType(types: !9026)
!9026 = !{null, !1040, !137}
!9027 = !{!9028, !9029}
!9028 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9023, file: !9024, line: 913, type: !1040)
!9029 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9023, file: !9024, line: 913, type: !137)
!9030 = !DILocation(line: 0, scope: !9023)
!9031 = !DILocation(line: 918, column: 3, scope: !9023)
!9032 = !DILocation(line: 920, column: 1, scope: !9023)
!9033 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9024, file: !9024, line: 825, type: !9034, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9036)
!9034 = !DISubroutineType(types: !9035)
!9035 = !{!137, !1040}
!9036 = !{!9037}
!9037 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9033, file: !9024, line: 825, type: !1040)
!9038 = !DILocation(line: 0, scope: !9033)
!9039 = !DILocation(line: 827, column: 21, scope: !9033)
!9040 = !DILocation(line: 827, column: 3, scope: !9033)
!9041 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9024, file: !9024, line: 814, type: !9025, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9042)
!9042 = !{!9043, !9044}
!9043 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9041, file: !9024, line: 814, type: !1040)
!9044 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9041, file: !9024, line: 814, type: !137)
!9045 = !DILocation(line: 0, scope: !9041)
!9046 = !DILocation(line: 816, column: 3, scope: !9041)
!9047 = !DILocation(line: 817, column: 1, scope: !9041)
!9048 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9024, file: !9024, line: 773, type: !9034, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9049)
!9049 = !{!9050}
!9050 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9048, file: !9024, line: 773, type: !1040)
!9051 = !DILocation(line: 0, scope: !9048)
!9052 = !DILocation(line: 775, column: 21, scope: !9048)
!9053 = !DILocation(line: 775, column: 3, scope: !9048)
!9054 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1106, file: !1106, line: 47, type: !9055, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9057)
!9055 = !DISubroutineType(types: !9056)
!9056 = !{!103, !520, !2292}
!9057 = !{!9058, !9059}
!9058 = !DILocalVariable(name: "flags", arg: 1, scope: !9054, file: !1106, line: 47, type: !520)
!9059 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9054, file: !1106, line: 47, type: !2292)
!9060 = !DILocation(line: 0, scope: !9054)
!9061 = !DILocation(line: 50, column: 13, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9054, file: !1106, line: 50, column: 6)
!9063 = !DILocation(line: 50, column: 28, scope: !9062)
!9064 = !DILocation(line: 50, column: 6, scope: !9054)
!9065 = !DILocation(line: 53, column: 11, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9062, file: !1106, line: 50, column: 34)
!9067 = !DILocation(line: 55, column: 14, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9066, file: !1106, line: 55, column: 7)
!9069 = !DILocation(line: 55, column: 35, scope: !9068)
!9070 = !DILocation(line: 55, column: 7, scope: !9066)
!9071 = !DILocation(line: 56, column: 14, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !1106, line: 56, column: 8)
!9073 = distinct !DILexicalBlock(scope: !9068, file: !1106, line: 55, column: 41)
!9074 = !DILocation(line: 56, column: 8, scope: !9073)
!9075 = !DILocation(line: 0, scope: !9068)
!9076 = !DILocation(line: 66, column: 14, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9066, file: !1106, line: 66, column: 7)
!9078 = !DILocation(line: 66, column: 30, scope: !9077)
!9079 = !DILocation(line: 66, column: 7, scope: !9066)
!9080 = !DILocation(line: 67, column: 12, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9077, file: !1106, line: 66, column: 36)
!9082 = !DILocation(line: 68, column: 3, scope: !9081)
!9083 = !DILocation(line: 68, column: 21, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9077, file: !1106, line: 68, column: 14)
!9085 = !DILocation(line: 68, column: 39, scope: !9084)
!9086 = !DILocation(line: 68, column: 14, scope: !9077)
!9087 = !DILocation(line: 69, column: 12, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9084, file: !1106, line: 68, column: 45)
!9089 = !DILocation(line: 70, column: 3, scope: !9088)
!9090 = !DILocation(line: 72, column: 21, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9062, file: !1106, line: 72, column: 14)
!9092 = !DILocation(line: 72, column: 35, scope: !9091)
!9093 = !DILocation(line: 72, column: 14, scope: !9062)
!9094 = !DILocation(line: 77, column: 14, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9096, file: !1106, line: 77, column: 7)
!9096 = distinct !DILexicalBlock(scope: !9091, file: !1106, line: 72, column: 41)
!9097 = !DILocation(line: 77, column: 30, scope: !9095)
!9098 = !DILocation(line: 77, column: 7, scope: !9096)
!9099 = !DILocation(line: 0, scope: !9062)
!9100 = !DILocation(line: 90, column: 1, scope: !9054)
!9101 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1106, file: !1106, line: 157, type: !9102, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9104)
!9102 = !DISubroutineType(types: !9103)
!9103 = !{null, !973, !103, !103, !103}
!9104 = !{!9105, !9106, !9107, !9108, !9109, !9110, !9111, !9112, !9113, !9114, !9115}
!9105 = !DILocalVariable(name: "dev", arg: 1, scope: !9101, file: !1106, line: 157, type: !973)
!9106 = !DILocalVariable(name: "pin", arg: 2, scope: !9101, file: !1106, line: 157, type: !103)
!9107 = !DILocalVariable(name: "conf", arg: 3, scope: !9101, file: !1106, line: 158, type: !103)
!9108 = !DILocalVariable(name: "func", arg: 4, scope: !9101, file: !1106, line: 158, type: !103)
!9109 = !DILocalVariable(name: "cfg", scope: !9101, file: !1106, line: 160, type: !8625)
!9110 = !DILocalVariable(name: "gpio", scope: !9101, file: !1106, line: 161, type: !1040)
!9111 = !DILocalVariable(name: "pin_ll", scope: !9101, file: !1106, line: 163, type: !103)
!9112 = !DILocalVariable(name: "mode", scope: !9101, file: !1106, line: 227, type: !32)
!9113 = !DILocalVariable(name: "otype", scope: !9101, file: !1106, line: 227, type: !32)
!9114 = !DILocalVariable(name: "ospeed", scope: !9101, file: !1106, line: 227, type: !32)
!9115 = !DILocalVariable(name: "pupd", scope: !9101, file: !1106, line: 227, type: !32)
!9116 = !DILocation(line: 0, scope: !9101)
!9117 = !DILocation(line: 160, column: 45, scope: !9101)
!9118 = !DILocation(line: 161, column: 44, scope: !9101)
!9119 = !DILocation(line: 163, column: 15, scope: !9101)
!9120 = !DILocation(line: 229, column: 14, scope: !9101)
!9121 = !DILocation(line: 246, column: 47, scope: !9101)
!9122 = !DILocation(line: 246, column: 2, scope: !9101)
!9123 = !DILocation(line: 248, column: 43, scope: !9101)
!9124 = !DILocation(line: 248, column: 2, scope: !9101)
!9125 = !DILocation(line: 250, column: 40, scope: !9101)
!9126 = !DILocation(line: 250, column: 2, scope: !9101)
!9127 = !DILocation(line: 252, column: 11, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9101, file: !1106, line: 252, column: 6)
!9129 = !DILocation(line: 252, column: 6, scope: !9101)
!9130 = !DILocation(line: 253, column: 11, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9132, file: !1106, line: 253, column: 7)
!9132 = distinct !DILexicalBlock(scope: !9128, file: !1106, line: 252, column: 36)
!9133 = !DILocation(line: 253, column: 7, scope: !9132)
!9134 = !DILocation(line: 254, column: 4, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9131, file: !1106, line: 253, column: 16)
!9136 = !DILocation(line: 255, column: 3, scope: !9135)
!9137 = !DILocation(line: 256, column: 4, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9131, file: !1106, line: 255, column: 10)
!9139 = !DILocation(line: 260, column: 40, scope: !9101)
!9140 = !DILocation(line: 260, column: 2, scope: !9101)
!9141 = !DILocation(line: 265, column: 1, scope: !9101)
!9142 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1106, file: !1106, line: 137, type: !8948, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9143)
!9143 = !{!9144, !9145}
!9144 = !DILocalVariable(name: "pin", arg: 1, scope: !9142, file: !1106, line: 137, type: !103)
!9145 = !DILocalVariable(name: "pinval", scope: !9142, file: !1106, line: 139, type: !137)
!9146 = !DILocation(line: 0, scope: !9142)
!9147 = !DILocation(line: 149, column: 13, scope: !9142)
!9148 = !DILocation(line: 151, column: 2, scope: !9142)
!9149 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9024, file: !9024, line: 343, type: !9150, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9152)
!9150 = !DISubroutineType(types: !9151)
!9151 = !{null, !1040, !137, !137}
!9152 = !{!9153, !9154, !9155}
!9153 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9149, file: !9024, line: 343, type: !1040)
!9154 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9149, file: !9024, line: 343, type: !137)
!9155 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9149, file: !9024, line: 343, type: !137)
!9156 = !DILocation(line: 0, scope: !9149)
!9157 = !DILocation(line: 345, column: 3, scope: !9149)
!9158 = !DILocation(line: 346, column: 1, scope: !9149)
!9159 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9024, file: !9024, line: 414, type: !9150, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9160)
!9160 = !{!9161, !9162, !9163}
!9161 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9159, file: !9024, line: 414, type: !1040)
!9162 = !DILocalVariable(name: "Pin", arg: 2, scope: !9159, file: !9024, line: 414, type: !137)
!9163 = !DILocalVariable(name: "Speed", arg: 3, scope: !9159, file: !9024, line: 414, type: !137)
!9164 = !DILocation(line: 0, scope: !9159)
!9165 = !DILocation(line: 416, column: 3, scope: !9159)
!9166 = !DILocation(line: 0, scope: !8969, inlinedAt: !9167)
!9167 = distinct !DILocation(line: 416, column: 3, scope: !9159)
!9168 = !DILocation(line: 380, column: 4, scope: !8969, inlinedAt: !9167)
!9169 = !DILocation(line: 0, scope: !8977, inlinedAt: !9170)
!9170 = distinct !DILocation(line: 416, column: 3, scope: !9159)
!9171 = !DILocation(line: 414, column: 7, scope: !8977, inlinedAt: !9170)
!9172 = !DILocation(line: 0, scope: !8969, inlinedAt: !9173)
!9173 = distinct !DILocation(line: 416, column: 3, scope: !9159)
!9174 = !DILocation(line: 0, scope: !8977, inlinedAt: !9175)
!9175 = distinct !DILocation(line: 416, column: 3, scope: !9159)
!9176 = !DILocation(line: 418, column: 1, scope: !9159)
!9177 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9024, file: !9024, line: 485, type: !9150, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9178)
!9178 = !{!9179, !9180, !9181}
!9179 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9177, file: !9024, line: 485, type: !1040)
!9180 = !DILocalVariable(name: "Pin", arg: 2, scope: !9177, file: !9024, line: 485, type: !137)
!9181 = !DILocalVariable(name: "Pull", arg: 3, scope: !9177, file: !9024, line: 485, type: !137)
!9182 = !DILocation(line: 0, scope: !9177)
!9183 = !DILocation(line: 487, column: 3, scope: !9177)
!9184 = !DILocation(line: 0, scope: !8969, inlinedAt: !9185)
!9185 = distinct !DILocation(line: 487, column: 3, scope: !9177)
!9186 = !DILocation(line: 380, column: 4, scope: !8969, inlinedAt: !9185)
!9187 = !DILocation(line: 0, scope: !8977, inlinedAt: !9188)
!9188 = distinct !DILocation(line: 487, column: 3, scope: !9177)
!9189 = !DILocation(line: 414, column: 7, scope: !8977, inlinedAt: !9188)
!9190 = !DILocation(line: 0, scope: !8969, inlinedAt: !9191)
!9191 = distinct !DILocation(line: 487, column: 3, scope: !9177)
!9192 = !DILocation(line: 0, scope: !8977, inlinedAt: !9193)
!9193 = distinct !DILocation(line: 487, column: 3, scope: !9177)
!9194 = !DILocation(line: 488, column: 1, scope: !9177)
!9195 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9024, file: !9024, line: 557, type: !9150, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9196)
!9196 = !{!9197, !9198, !9199}
!9197 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9195, file: !9024, line: 557, type: !1040)
!9198 = !DILocalVariable(name: "Pin", arg: 2, scope: !9195, file: !9024, line: 557, type: !137)
!9199 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9195, file: !9024, line: 557, type: !137)
!9200 = !DILocation(line: 0, scope: !9195)
!9201 = !DILocation(line: 559, column: 3, scope: !9195)
!9202 = !DILocation(line: 0, scope: !8969, inlinedAt: !9203)
!9203 = distinct !DILocation(line: 559, column: 3, scope: !9195)
!9204 = !DILocation(line: 380, column: 4, scope: !8969, inlinedAt: !9203)
!9205 = !DILocation(line: 0, scope: !8977, inlinedAt: !9206)
!9206 = distinct !DILocation(line: 559, column: 3, scope: !9195)
!9207 = !DILocation(line: 414, column: 7, scope: !8977, inlinedAt: !9206)
!9208 = !DILocation(line: 0, scope: !8969, inlinedAt: !9209)
!9209 = distinct !DILocation(line: 559, column: 3, scope: !9195)
!9210 = !DILocation(line: 0, scope: !8977, inlinedAt: !9211)
!9211 = distinct !DILocation(line: 559, column: 3, scope: !9195)
!9212 = !DILocation(line: 561, column: 1, scope: !9195)
!9213 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9024, file: !9024, line: 634, type: !9150, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9214)
!9214 = !{!9215, !9216, !9217}
!9215 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9213, file: !9024, line: 634, type: !1040)
!9216 = !DILocalVariable(name: "Pin", arg: 2, scope: !9213, file: !9024, line: 634, type: !137)
!9217 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9213, file: !9024, line: 634, type: !137)
!9218 = !DILocation(line: 0, scope: !9213)
!9219 = !DILocation(line: 636, column: 3, scope: !9213)
!9220 = !DILocation(line: 0, scope: !8969, inlinedAt: !9221)
!9221 = distinct !DILocation(line: 636, column: 3, scope: !9213)
!9222 = !DILocation(line: 380, column: 4, scope: !8969, inlinedAt: !9221)
!9223 = !DILocation(line: 0, scope: !8977, inlinedAt: !9224)
!9224 = distinct !DILocation(line: 636, column: 3, scope: !9213)
!9225 = !DILocation(line: 414, column: 7, scope: !8977, inlinedAt: !9224)
!9226 = !DILocation(line: 0, scope: !8969, inlinedAt: !9227)
!9227 = distinct !DILocation(line: 636, column: 3, scope: !9213)
!9228 = !DILocation(line: 0, scope: !8977, inlinedAt: !9229)
!9229 = distinct !DILocation(line: 636, column: 3, scope: !9213)
!9230 = !DILocation(line: 638, column: 1, scope: !9213)
!9231 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9024, file: !9024, line: 274, type: !9150, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9232)
!9232 = !{!9233, !9234, !9235}
!9233 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9231, file: !9024, line: 274, type: !1040)
!9234 = !DILocalVariable(name: "Pin", arg: 2, scope: !9231, file: !9024, line: 274, type: !137)
!9235 = !DILocalVariable(name: "Mode", arg: 3, scope: !9231, file: !9024, line: 274, type: !137)
!9236 = !DILocation(line: 0, scope: !9231)
!9237 = !DILocation(line: 276, column: 3, scope: !9231)
!9238 = !DILocation(line: 0, scope: !8969, inlinedAt: !9239)
!9239 = distinct !DILocation(line: 276, column: 3, scope: !9231)
!9240 = !DILocation(line: 380, column: 4, scope: !8969, inlinedAt: !9239)
!9241 = !DILocation(line: 0, scope: !8977, inlinedAt: !9242)
!9242 = distinct !DILocation(line: 276, column: 3, scope: !9231)
!9243 = !DILocation(line: 414, column: 7, scope: !8977, inlinedAt: !9242)
!9244 = !DILocation(line: 0, scope: !8969, inlinedAt: !9245)
!9245 = distinct !DILocation(line: 276, column: 3, scope: !9231)
!9246 = !DILocation(line: 0, scope: !8977, inlinedAt: !9247)
!9247 = distinct !DILocation(line: 276, column: 3, scope: !9231)
!9248 = !DILocation(line: 277, column: 1, scope: !9231)
!9249 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1106, file: !1106, line: 698, type: !1117, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9250)
!9250 = !{!9251, !9252, !9253}
!9251 = !DILocalVariable(name: "dev", arg: 1, scope: !9249, file: !1106, line: 698, type: !973)
!9252 = !DILocalVariable(name: "data", scope: !9249, file: !1106, line: 700, type: !8692)
!9253 = !DILocalVariable(name: "ret", scope: !9249, file: !1106, line: 701, type: !103)
!9254 = !DILocation(line: 0, scope: !9249)
!9255 = !DILocation(line: 700, column: 38, scope: !9249)
!9256 = !DILocation(line: 703, column: 8, scope: !9249)
!9257 = !DILocation(line: 703, column: 12, scope: !9249)
!9258 = !DILocation(line: 705, column: 7, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9249, file: !1106, line: 705, column: 6)
!9260 = !DILocation(line: 705, column: 6, scope: !9249)
!9261 = !DILocation(line: 722, column: 8, scope: !9249)
!9262 = !DILocation(line: 723, column: 10, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9249, file: !1106, line: 723, column: 6)
!9264 = !DILocation(line: 723, column: 6, scope: !9249)
!9265 = !DILocation(line: 731, column: 1, scope: !9249)
!9266 = distinct !DISubprogram(name: "device_is_ready", scope: !7860, file: !7860, line: 47, type: !9267, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9269)
!9267 = !DISubroutineType(types: !9268)
!9268 = !{!224, !973}
!9269 = !{!9270}
!9270 = !DILocalVariable(name: "dev", arg: 1, scope: !9266, file: !7860, line: 47, type: !973)
!9271 = !DILocation(line: 0, scope: !9266)
!9272 = !DILocation(line: 55, column: 2, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9266, file: !7860, line: 55, column: 2)
!9274 = !{i64 2152400152}
!9275 = !DILocation(line: 56, column: 9, scope: !9266)
!9276 = !DILocation(line: 56, column: 2, scope: !9266)
!9277 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1106, file: !1106, line: 270, type: !9278, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9280)
!9278 = !DISubroutineType(types: !9279)
!9279 = !{!103, !973, !224}
!9280 = !{!9281, !9282, !9283, !9284, !9285}
!9281 = !DILocalVariable(name: "dev", arg: 1, scope: !9277, file: !1106, line: 270, type: !973)
!9282 = !DILocalVariable(name: "on", arg: 2, scope: !9277, file: !1106, line: 270, type: !224)
!9283 = !DILocalVariable(name: "cfg", scope: !9277, file: !1106, line: 272, type: !8625)
!9284 = !DILocalVariable(name: "ret", scope: !9277, file: !1106, line: 273, type: !103)
!9285 = !DILocalVariable(name: "clk", scope: !9277, file: !1106, line: 278, type: !8915)
!9286 = !DILocation(line: 0, scope: !9277)
!9287 = !DILocation(line: 272, column: 45, scope: !9277)
!9288 = !DILocation(line: 282, column: 38, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9290, file: !1106, line: 280, column: 10)
!9290 = distinct !DILexicalBlock(scope: !9277, file: !1106, line: 280, column: 6)
!9291 = !DILocation(line: 282, column: 6, scope: !9289)
!9292 = !DILocation(line: 281, column: 9, scope: !9289)
!9293 = !DILocation(line: 293, column: 1, scope: !9277)
!9294 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !209, file: !209, line: 730, type: !9267, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9295)
!9295 = !{!9296}
!9296 = !DILocalVariable(name: "dev", arg: 1, scope: !9294, file: !209, line: 730, type: !973)
!9297 = !DILocation(line: 0, scope: !9294)
!9298 = !DILocation(line: 732, column: 9, scope: !9294)
!9299 = !DILocation(line: 732, column: 2, scope: !9294)
!9300 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1106, file: !1106, line: 496, type: !9301, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !955, retainedNodes: !9303)
!9301 = !DISubroutineType(types: !9302)
!9302 = !{!103, !973, !103, !103, !103}
!9303 = !{!9304, !9305, !9306, !9307, !9308, !9309}
!9304 = !DILocalVariable(name: "dev", arg: 1, scope: !9300, file: !1106, line: 496, type: !973)
!9305 = !DILocalVariable(name: "pin", arg: 2, scope: !9300, file: !1106, line: 496, type: !103)
!9306 = !DILocalVariable(name: "conf", arg: 3, scope: !9300, file: !1106, line: 496, type: !103)
!9307 = !DILocalVariable(name: "func", arg: 4, scope: !9300, file: !1106, line: 496, type: !103)
!9308 = !DILocalVariable(name: "ret", scope: !9300, file: !1106, line: 498, type: !103)
!9309 = !DILocalVariable(name: "gpio_out", scope: !9310, file: !1106, line: 508, type: !137)
!9310 = distinct !DILexicalBlock(scope: !9311, file: !1106, line: 507, column: 27)
!9311 = distinct !DILexicalBlock(scope: !9300, file: !1106, line: 507, column: 6)
!9312 = !DILocation(line: 0, scope: !9300)
!9313 = !DILocation(line: 505, column: 2, scope: !9300)
!9314 = !DILocation(line: 507, column: 11, scope: !9311)
!9315 = !DILocation(line: 507, column: 6, scope: !9300)
!9316 = !DILocation(line: 508, column: 28, scope: !9310)
!9317 = !DILocation(line: 0, scope: !9310)
!9318 = !DILocation(line: 510, column: 16, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9310, file: !1106, line: 510, column: 7)
!9320 = !DILocation(line: 0, scope: !9319)
!9321 = !DILocation(line: 510, column: 7, scope: !9310)
!9322 = !DILocation(line: 511, column: 4, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9319, file: !1106, line: 510, column: 32)
!9324 = !DILocation(line: 512, column: 3, scope: !9323)
!9325 = !DILocation(line: 513, column: 4, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9327, file: !1106, line: 512, column: 39)
!9327 = distinct !DILexicalBlock(scope: !9319, file: !1106, line: 512, column: 14)
!9328 = !DILocation(line: 514, column: 3, scope: !9326)
!9329 = !DILocation(line: 518, column: 1, scope: !9300)
!9330 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1361, file: !1361, line: 526, type: !1265, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9331)
!9331 = !{!9332, !9333, !9334}
!9332 = !DILocalVariable(name: "dev", arg: 1, scope: !9330, file: !1361, line: 526, type: !1267)
!9333 = !DILocalVariable(name: "c", arg: 2, scope: !9330, file: !1361, line: 526, type: !916)
!9334 = !DILocalVariable(name: "config", scope: !9330, file: !1361, line: 528, type: !9335)
!9335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!9336 = !DILocation(line: 0, scope: !9330)
!9337 = !DILocation(line: 528, column: 48, scope: !9330)
!9338 = !DILocation(line: 531, column: 40, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9330, file: !1361, line: 531, column: 6)
!9340 = !DILocation(line: 531, column: 6, scope: !9339)
!9341 = !DILocation(line: 531, column: 6, scope: !9330)
!9342 = !DILocation(line: 532, column: 34, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9339, file: !1361, line: 531, column: 48)
!9344 = !DILocation(line: 532, column: 3, scope: !9343)
!9345 = !DILocation(line: 533, column: 2, scope: !9343)
!9346 = !DILocation(line: 539, column: 42, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9330, file: !1361, line: 539, column: 6)
!9348 = !DILocation(line: 539, column: 7, scope: !9347)
!9349 = !DILocation(line: 539, column: 6, scope: !9330)
!9350 = !DILocation(line: 543, column: 52, scope: !9330)
!9351 = !DILocation(line: 543, column: 22, scope: !9330)
!9352 = !DILocation(line: 543, column: 5, scope: !9330)
!9353 = !DILocation(line: 545, column: 2, scope: !9330)
!9354 = !DILocation(line: 546, column: 1, scope: !9330)
!9355 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1361, file: !1361, line: 548, type: !1284, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9356)
!9356 = !{!9357, !9358, !9359, !9360}
!9357 = !DILocalVariable(name: "dev", arg: 1, scope: !9355, file: !1361, line: 548, type: !1267)
!9358 = !DILocalVariable(name: "c", arg: 2, scope: !9355, file: !1361, line: 549, type: !222)
!9359 = !DILocalVariable(name: "config", scope: !9355, file: !1361, line: 551, type: !9335)
!9360 = !DILocalVariable(name: "key", scope: !9355, file: !1361, line: 555, type: !32)
!9361 = !DILocation(line: 0, scope: !9355)
!9362 = !DILocation(line: 551, column: 48, scope: !9355)
!9363 = !DILocation(line: 562, column: 2, scope: !9355)
!9364 = !DILocation(line: 563, column: 41, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9366, file: !1361, line: 563, column: 7)
!9366 = distinct !DILexicalBlock(scope: !9355, file: !1361, line: 562, column: 12)
!9367 = !DILocation(line: 563, column: 7, scope: !9365)
!9368 = !DILocation(line: 563, column: 7, scope: !9366)
!9369 = !DILocation(line: 55, column: 2, scope: !9370, inlinedAt: !9374)
!9370 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6080, file: !6080, line: 42, type: !6081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9371)
!9371 = !{!9372, !9373}
!9372 = !DILocalVariable(name: "key", scope: !9370, file: !6080, line: 44, type: !32)
!9373 = !DILocalVariable(name: "tmp", scope: !9370, file: !6080, line: 53, type: !32)
!9374 = distinct !DILocation(line: 564, column: 10, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9365, file: !1361, line: 563, column: 49)
!9376 = !{i64 1697841}
!9377 = !DILocation(line: 0, scope: !9370, inlinedAt: !9374)
!9378 = !DILocation(line: 565, column: 42, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9375, file: !1361, line: 565, column: 8)
!9380 = !DILocation(line: 565, column: 8, scope: !9379)
!9381 = !DILocation(line: 565, column: 8, scope: !9375)
!9382 = !DILocalVariable(name: "key", arg: 1, scope: !9383, file: !6080, line: 84, type: !32)
!9383 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6080, file: !6080, line: 84, type: !6091, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9384)
!9384 = !{!9382}
!9385 = !DILocation(line: 0, scope: !9383, inlinedAt: !9386)
!9386 = distinct !DILocation(line: 568, column: 4, scope: !9375)
!9387 = !DILocation(line: 95, column: 2, scope: !9383, inlinedAt: !9386)
!9388 = !{i64 1698658}
!9389 = !DILocation(line: 569, column: 3, scope: !9375)
!9390 = distinct !{!9390, !9363, !9391}
!9391 = !DILocation(line: 570, column: 2, scope: !9355)
!9392 = !DILocation(line: 592, column: 33, scope: !9355)
!9393 = !DILocation(line: 592, column: 2, scope: !9355)
!9394 = !DILocation(line: 0, scope: !9383, inlinedAt: !9395)
!9395 = distinct !DILocation(line: 593, column: 2, scope: !9355)
!9396 = !DILocation(line: 95, column: 2, scope: !9383, inlinedAt: !9395)
!9397 = !DILocation(line: 594, column: 1, scope: !9355)
!9398 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1361, file: !1361, line: 596, type: !1288, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9399)
!9399 = !{!9400, !9401, !9402}
!9400 = !DILocalVariable(name: "dev", arg: 1, scope: !9398, file: !1361, line: 596, type: !1267)
!9401 = !DILocalVariable(name: "config", scope: !9398, file: !1361, line: 598, type: !9335)
!9402 = !DILocalVariable(name: "err", scope: !9398, file: !1361, line: 599, type: !137)
!9403 = !DILocation(line: 0, scope: !9398)
!9404 = !DILocation(line: 598, column: 48, scope: !9398)
!9405 = !DILocation(line: 606, column: 40, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9398, file: !1361, line: 606, column: 6)
!9407 = !DILocation(line: 606, column: 6, scope: !9406)
!9408 = !DILocation(line: 606, column: 6, scope: !9398)
!9409 = !DILocation(line: 610, column: 39, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9398, file: !1361, line: 610, column: 6)
!9411 = !DILocation(line: 610, column: 6, scope: !9410)
!9412 = !DILocation(line: 610, column: 6, scope: !9398)
!9413 = !DILocation(line: 614, column: 39, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9398, file: !1361, line: 614, column: 6)
!9415 = !DILocation(line: 614, column: 6, scope: !9414)
!9416 = !DILocation(line: 614, column: 6, scope: !9398)
!9417 = !DILocation(line: 619, column: 40, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9398, file: !1361, line: 619, column: 6)
!9419 = !DILocation(line: 619, column: 6, scope: !9418)
!9420 = !DILocation(line: 619, column: 6, scope: !9398)
!9421 = !DILocation(line: 623, column: 10, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9398, file: !1361, line: 623, column: 6)
!9423 = !DILocation(line: 623, column: 6, scope: !9398)
!9424 = !DILocation(line: 624, column: 34, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9422, file: !1361, line: 623, column: 24)
!9426 = !DILocation(line: 624, column: 3, scope: !9425)
!9427 = !DILocation(line: 625, column: 2, scope: !9425)
!9428 = !DILocation(line: 632, column: 10, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9398, file: !1361, line: 632, column: 6)
!9430 = !DILocation(line: 632, column: 6, scope: !9398)
!9431 = !DILocation(line: 633, column: 34, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9429, file: !1361, line: 632, column: 32)
!9433 = !DILocation(line: 633, column: 3, scope: !9432)
!9434 = !DILocation(line: 634, column: 2, scope: !9432)
!9435 = !DILocation(line: 636, column: 10, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9398, file: !1361, line: 636, column: 6)
!9437 = !DILocation(line: 636, column: 6, scope: !9398)
!9438 = !DILocation(line: 637, column: 33, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9436, file: !1361, line: 636, column: 31)
!9440 = !DILocation(line: 637, column: 3, scope: !9439)
!9441 = !DILocation(line: 638, column: 2, scope: !9439)
!9442 = !DILocation(line: 640, column: 10, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9398, file: !1361, line: 640, column: 6)
!9444 = !DILocation(line: 640, column: 6, scope: !9398)
!9445 = !DILocation(line: 641, column: 33, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9443, file: !1361, line: 640, column: 32)
!9447 = !DILocation(line: 641, column: 3, scope: !9446)
!9448 = !DILocation(line: 642, column: 2, scope: !9446)
!9449 = !DILocation(line: 646, column: 32, scope: !9398)
!9450 = !DILocation(line: 646, column: 2, scope: !9398)
!9451 = !DILocation(line: 648, column: 2, scope: !9398)
!9452 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1361, file: !1361, line: 419, type: !1292, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9453)
!9453 = !{!9454, !9455, !9456, !9457, !9459, !9460, !9461, !9462}
!9454 = !DILocalVariable(name: "dev", arg: 1, scope: !9452, file: !1361, line: 419, type: !1267)
!9455 = !DILocalVariable(name: "cfg", arg: 2, scope: !9452, file: !1361, line: 420, type: !1294)
!9456 = !DILocalVariable(name: "config", scope: !9452, file: !1361, line: 422, type: !9335)
!9457 = !DILocalVariable(name: "data", scope: !9452, file: !1361, line: 423, type: !9458)
!9458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!9459 = !DILocalVariable(name: "parity", scope: !9452, file: !1361, line: 424, type: !6514)
!9460 = !DILocalVariable(name: "stopbits", scope: !9452, file: !1361, line: 425, type: !6514)
!9461 = !DILocalVariable(name: "databits", scope: !9452, file: !1361, line: 426, type: !6514)
!9462 = !DILocalVariable(name: "flowctrl", scope: !9452, file: !1361, line: 428, type: !6514)
!9463 = !DILocation(line: 0, scope: !9452)
!9464 = !DILocation(line: 422, column: 48, scope: !9452)
!9465 = !DILocation(line: 423, column: 38, scope: !9452)
!9466 = !DILocation(line: 424, column: 56, scope: !9452)
!9467 = !DILocation(line: 424, column: 51, scope: !9452)
!9468 = !DILocation(line: 424, column: 26, scope: !9452)
!9469 = !DILocation(line: 425, column: 60, scope: !9452)
!9470 = !DILocation(line: 425, column: 55, scope: !9452)
!9471 = !DILocation(line: 425, column: 28, scope: !9452)
!9472 = !DILocation(line: 426, column: 60, scope: !9452)
!9473 = !DILocation(line: 426, column: 55, scope: !9452)
!9474 = !DILocation(line: 426, column: 28, scope: !9452)
!9475 = !DILocation(line: 428, column: 58, scope: !9452)
!9476 = !DILocation(line: 428, column: 53, scope: !9452)
!9477 = !DILocation(line: 428, column: 28, scope: !9452)
!9478 = !DILocation(line: 431, column: 44, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9452, file: !1361, line: 431, column: 6)
!9480 = !DILocation(line: 438, column: 22, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9452, file: !1361, line: 437, column: 6)
!9482 = !DILocation(line: 437, column: 6, scope: !9452)
!9483 = !DILocation(line: 448, column: 6, scope: !9452)
!9484 = !DILocation(line: 465, column: 47, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9452, file: !1361, line: 465, column: 6)
!9486 = !DILocation(line: 475, column: 21, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9452, file: !1361, line: 475, column: 6)
!9488 = !DILocation(line: 475, column: 6, scope: !9452)
!9489 = !DILocation(line: 476, column: 8, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9491, file: !1361, line: 476, column: 7)
!9491 = distinct !DILexicalBlock(scope: !9487, file: !1361, line: 475, column: 49)
!9492 = !DILocation(line: 477, column: 34, scope: !9490)
!9493 = !DILocation(line: 476, column: 7, scope: !9491)
!9494 = !DILocation(line: 482, column: 27, scope: !9452)
!9495 = !DILocation(line: 482, column: 2, scope: !9452)
!9496 = !DILocation(line: 484, column: 16, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9452, file: !1361, line: 484, column: 6)
!9498 = !DILocation(line: 484, column: 13, scope: !9497)
!9499 = !DILocation(line: 484, column: 6, scope: !9452)
!9500 = !DILocation(line: 485, column: 3, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9497, file: !1361, line: 484, column: 44)
!9502 = !DILocation(line: 486, column: 2, scope: !9501)
!9503 = !DILocation(line: 488, column: 18, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9452, file: !1361, line: 488, column: 6)
!9505 = !DILocation(line: 488, column: 15, scope: !9504)
!9506 = !DILocation(line: 488, column: 6, scope: !9452)
!9507 = !DILocation(line: 489, column: 3, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9504, file: !1361, line: 488, column: 48)
!9509 = !DILocation(line: 490, column: 2, scope: !9508)
!9510 = !DILocation(line: 492, column: 18, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9452, file: !1361, line: 492, column: 6)
!9512 = !DILocation(line: 492, column: 15, scope: !9511)
!9513 = !DILocation(line: 492, column: 6, scope: !9452)
!9514 = !DILocation(line: 493, column: 3, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9511, file: !1361, line: 492, column: 48)
!9516 = !DILocation(line: 494, column: 2, scope: !9515)
!9517 = !DILocation(line: 496, column: 18, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9452, file: !1361, line: 496, column: 6)
!9519 = !DILocation(line: 496, column: 15, scope: !9518)
!9520 = !DILocation(line: 496, column: 6, scope: !9452)
!9521 = !DILocation(line: 497, column: 3, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9518, file: !1361, line: 496, column: 46)
!9523 = !DILocation(line: 498, column: 2, scope: !9522)
!9524 = !DILocation(line: 500, column: 11, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9452, file: !1361, line: 500, column: 6)
!9526 = !DILocation(line: 500, column: 29, scope: !9525)
!9527 = !DILocation(line: 500, column: 20, scope: !9525)
!9528 = !DILocation(line: 500, column: 6, scope: !9452)
!9529 = !DILocation(line: 501, column: 3, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9525, file: !1361, line: 500, column: 40)
!9531 = !DILocation(line: 502, column: 26, scope: !9530)
!9532 = !DILocation(line: 502, column: 19, scope: !9530)
!9533 = !DILocation(line: 503, column: 2, scope: !9530)
!9534 = !DILocation(line: 505, column: 26, scope: !9452)
!9535 = !DILocation(line: 505, column: 2, scope: !9452)
!9536 = !DILocation(line: 506, column: 2, scope: !9452)
!9537 = !DILocation(line: 507, column: 1, scope: !9452)
!9538 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1361, file: !1361, line: 509, type: !1305, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9539)
!9539 = !{!9540, !9541, !9542}
!9540 = !DILocalVariable(name: "dev", arg: 1, scope: !9538, file: !1361, line: 509, type: !1267)
!9541 = !DILocalVariable(name: "cfg", arg: 2, scope: !9538, file: !1361, line: 510, type: !1307)
!9542 = !DILocalVariable(name: "data", scope: !9538, file: !1361, line: 512, type: !9458)
!9543 = !DILocation(line: 0, scope: !9538)
!9544 = !DILocation(line: 512, column: 38, scope: !9538)
!9545 = !DILocation(line: 514, column: 24, scope: !9538)
!9546 = !DILocation(line: 514, column: 7, scope: !9538)
!9547 = !DILocation(line: 514, column: 16, scope: !9538)
!9548 = !DILocation(line: 515, column: 41, scope: !9538)
!9549 = !{i32 0, i32 1537}
!9550 = !DILocation(line: 515, column: 16, scope: !9538)
!9551 = !DILocation(line: 515, column: 7, scope: !9538)
!9552 = !DILocation(line: 515, column: 14, scope: !9538)
!9553 = !DILocation(line: 517, column: 3, scope: !9538)
!9554 = !{i32 0, i32 12289}
!9555 = !DILocation(line: 516, column: 19, scope: !9538)
!9556 = !DILocation(line: 516, column: 7, scope: !9538)
!9557 = !DILocation(line: 516, column: 17, scope: !9538)
!9558 = !DILocation(line: 519, column: 3, scope: !9538)
!9559 = !DILocation(line: 519, column: 33, scope: !9538)
!9560 = !DILocation(line: 518, column: 19, scope: !9538)
!9561 = !DILocation(line: 518, column: 7, scope: !9538)
!9562 = !DILocation(line: 518, column: 17, scope: !9538)
!9563 = !DILocation(line: 521, column: 3, scope: !9538)
!9564 = !{i32 0, i32 769}
!9565 = !DILocation(line: 520, column: 19, scope: !9538)
!9566 = !DILocation(line: 520, column: 7, scope: !9538)
!9567 = !DILocation(line: 520, column: 17, scope: !9538)
!9568 = !DILocation(line: 522, column: 2, scope: !9538)
!9569 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1361, file: !1361, line: 205, type: !9570, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9572)
!9570 = !DISubroutineType(types: !9571)
!9571 = !{!137, !1267}
!9572 = !{!9573, !9574}
!9573 = !DILocalVariable(name: "dev", arg: 1, scope: !9569, file: !1361, line: 205, type: !1267)
!9574 = !DILocalVariable(name: "config", scope: !9569, file: !1361, line: 207, type: !9335)
!9575 = !DILocation(line: 0, scope: !9569)
!9576 = !DILocation(line: 207, column: 48, scope: !9569)
!9577 = !DILocation(line: 209, column: 36, scope: !9569)
!9578 = !DILocation(line: 209, column: 9, scope: !9569)
!9579 = !DILocation(line: 209, column: 2, scope: !9569)
!9580 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1361, file: !1361, line: 270, type: !9581, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9583)
!9581 = !DISubroutineType(types: !9582)
!9582 = !{!1233, !137}
!9583 = !{!9584}
!9584 = !DILocalVariable(name: "parity", arg: 1, scope: !9580, file: !1361, line: 270, type: !137)
!9585 = !DILocation(line: 0, scope: !9580)
!9586 = !DILocation(line: 272, column: 2, scope: !9580)
!9587 = !DILocation(line: 281, column: 1, scope: !9580)
!9588 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1361, file: !1361, line: 220, type: !9570, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9589)
!9589 = !{!9590, !9591}
!9590 = !DILocalVariable(name: "dev", arg: 1, scope: !9588, file: !1361, line: 220, type: !1267)
!9591 = !DILocalVariable(name: "config", scope: !9588, file: !1361, line: 222, type: !9335)
!9592 = !DILocation(line: 0, scope: !9588)
!9593 = !DILocation(line: 222, column: 48, scope: !9588)
!9594 = !DILocation(line: 224, column: 44, scope: !9588)
!9595 = !DILocation(line: 224, column: 9, scope: !9588)
!9596 = !DILocation(line: 224, column: 2, scope: !9588)
!9597 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1361, file: !1361, line: 304, type: !9598, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9600)
!9598 = !DISubroutineType(types: !9599)
!9599 = !{!1247, !137}
!9600 = !{!9601}
!9601 = !DILocalVariable(name: "sb", arg: 1, scope: !9597, file: !1361, line: 304, type: !137)
!9602 = !DILocation(line: 0, scope: !9597)
!9603 = !DILocation(line: 306, column: 2, scope: !9597)
!9604 = !DILocation(line: 0, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9597, file: !1361, line: 306, column: 14)
!9606 = !DILocation(line: 323, column: 1, scope: !9597)
!9607 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1361, file: !1361, line: 235, type: !9570, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9608)
!9608 = !{!9609, !9610}
!9609 = !DILocalVariable(name: "dev", arg: 1, scope: !9607, file: !1361, line: 235, type: !1267)
!9610 = !DILocalVariable(name: "config", scope: !9607, file: !1361, line: 237, type: !9335)
!9611 = !DILocation(line: 0, scope: !9607)
!9612 = !DILocation(line: 237, column: 48, scope: !9607)
!9613 = !DILocation(line: 239, column: 39, scope: !9607)
!9614 = !DILocation(line: 239, column: 9, scope: !9607)
!9615 = !DILocation(line: 239, column: 2, scope: !9607)
!9616 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1361, file: !1361, line: 355, type: !9617, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9619)
!9617 = !DISubroutineType(types: !9618)
!9618 = !{!1240, !137, !137}
!9619 = !{!9620, !9621}
!9620 = !DILocalVariable(name: "db", arg: 1, scope: !9616, file: !1361, line: 355, type: !137)
!9621 = !DILocalVariable(name: "p", arg: 2, scope: !9616, file: !1361, line: 356, type: !137)
!9622 = !DILocation(line: 0, scope: !9616)
!9623 = !DILocation(line: 358, column: 2, scope: !9616)
!9624 = !DILocation(line: 384, column: 1, scope: !9616)
!9625 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1361, file: !1361, line: 250, type: !9570, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9626)
!9626 = !{!9627, !9628}
!9627 = !DILocalVariable(name: "dev", arg: 1, scope: !9625, file: !1361, line: 250, type: !1267)
!9628 = !DILocalVariable(name: "config", scope: !9625, file: !1361, line: 252, type: !9335)
!9629 = !DILocation(line: 0, scope: !9625)
!9630 = !DILocation(line: 252, column: 48, scope: !9625)
!9631 = !DILocation(line: 254, column: 40, scope: !9625)
!9632 = !DILocation(line: 254, column: 9, scope: !9625)
!9633 = !DILocation(line: 254, column: 2, scope: !9625)
!9634 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1361, file: !1361, line: 409, type: !9635, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9637)
!9635 = !DISubroutineType(types: !9636)
!9636 = !{!1253, !137}
!9637 = !{!9638}
!9638 = !DILocalVariable(name: "fc", arg: 1, scope: !9634, file: !1361, line: 409, type: !137)
!9639 = !DILocation(line: 0, scope: !9634)
!9640 = !DILocation(line: 411, column: 9, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9634, file: !1361, line: 411, column: 6)
!9642 = !DILocation(line: 416, column: 1, scope: !9634)
!9643 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9644, file: !9644, line: 966, type: !9645, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9647)
!9644 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9645 = !DISubroutineType(types: !9646)
!9646 = !{!137, !1308}
!9647 = !{!9648}
!9648 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9643, file: !9644, line: 966, type: !1308)
!9649 = !DILocation(line: 0, scope: !9643)
!9650 = !DILocation(line: 968, column: 21, scope: !9643)
!9651 = !DILocation(line: 968, column: 3, scope: !9643)
!9652 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9644, file: !9644, line: 600, type: !9645, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9653)
!9653 = !{!9654}
!9654 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9652, file: !9644, line: 600, type: !1308)
!9655 = !DILocation(line: 0, scope: !9652)
!9656 = !DILocation(line: 602, column: 21, scope: !9652)
!9657 = !DILocation(line: 602, column: 3, scope: !9652)
!9658 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9644, file: !9644, line: 819, type: !9645, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9659)
!9659 = !{!9660}
!9660 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9658, file: !9644, line: 819, type: !1308)
!9661 = !DILocation(line: 0, scope: !9658)
!9662 = !DILocation(line: 821, column: 21, scope: !9658)
!9663 = !DILocation(line: 821, column: 3, scope: !9658)
!9664 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9644, file: !9644, line: 546, type: !9645, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9665)
!9665 = !{!9666}
!9666 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9664, file: !9644, line: 546, type: !1308)
!9667 = !DILocation(line: 0, scope: !9664)
!9668 = !DILocation(line: 548, column: 21, scope: !9664)
!9669 = !DILocation(line: 548, column: 3, scope: !9664)
!9670 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1361, file: !1361, line: 257, type: !9671, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9673)
!9671 = !DISubroutineType(types: !9672)
!9672 = !{!137, !1233}
!9673 = !{!9674}
!9674 = !DILocalVariable(name: "parity", arg: 1, scope: !9670, file: !1361, line: 257, type: !1233)
!9675 = !DILocation(line: 0, scope: !9670)
!9676 = !DILocation(line: 259, column: 2, scope: !9670)
!9677 = !DILocation(line: 268, column: 1, scope: !9670)
!9678 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1361, file: !1361, line: 283, type: !9679, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9681)
!9679 = !DISubroutineType(types: !9680)
!9680 = !{!137, !1247}
!9681 = !{!9682}
!9682 = !DILocalVariable(name: "sb", arg: 1, scope: !9678, file: !1361, line: 283, type: !1247)
!9683 = !DILocation(line: 0, scope: !9678)
!9684 = !DILocation(line: 285, column: 2, scope: !9678)
!9685 = !DILocation(line: 0, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9678, file: !1361, line: 285, column: 14)
!9687 = !DILocation(line: 302, column: 1, scope: !9678)
!9688 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1361, file: !1361, line: 325, type: !9689, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9691)
!9689 = !DISubroutineType(types: !9690)
!9690 = !{!137, !1240, !1233}
!9691 = !{!9692, !9693}
!9692 = !DILocalVariable(name: "db", arg: 1, scope: !9688, file: !1361, line: 325, type: !1240)
!9693 = !DILocalVariable(name: "p", arg: 2, scope: !9688, file: !1361, line: 326, type: !1233)
!9694 = !DILocation(line: 0, scope: !9688)
!9695 = !DILocation(line: 328, column: 2, scope: !9688)
!9696 = !DILocation(line: 353, column: 1, scope: !9688)
!9697 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1361, file: !1361, line: 393, type: !9698, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9700)
!9698 = !DISubroutineType(types: !9699)
!9699 = !{!137, !1253}
!9700 = !{!9701}
!9701 = !DILocalVariable(name: "fc", arg: 1, scope: !9697, file: !1361, line: 393, type: !1253)
!9702 = !DILocation(line: 0, scope: !9697)
!9703 = !DILocation(line: 395, column: 9, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9697, file: !1361, line: 395, column: 6)
!9705 = !DILocation(line: 400, column: 1, scope: !9697)
!9706 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9644, file: !9644, line: 423, type: !9707, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9709)
!9707 = !DISubroutineType(types: !9708)
!9708 = !{null, !1308}
!9709 = !{!9710}
!9710 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9706, file: !9644, line: 423, type: !1308)
!9711 = !DILocation(line: 0, scope: !9706)
!9712 = !DILocation(line: 425, column: 3, scope: !9706)
!9713 = !DILocation(line: 426, column: 1, scope: !9706)
!9714 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1361, file: !1361, line: 197, type: !9715, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9717)
!9715 = !DISubroutineType(types: !9716)
!9716 = !{null, !1267, !137}
!9717 = !{!9718, !9719, !9720}
!9718 = !DILocalVariable(name: "dev", arg: 1, scope: !9714, file: !1361, line: 197, type: !1267)
!9719 = !DILocalVariable(name: "parity", arg: 2, scope: !9714, file: !1361, line: 198, type: !137)
!9720 = !DILocalVariable(name: "config", scope: !9714, file: !1361, line: 200, type: !9335)
!9721 = !DILocation(line: 0, scope: !9714)
!9722 = !DILocation(line: 200, column: 48, scope: !9714)
!9723 = !DILocation(line: 202, column: 29, scope: !9714)
!9724 = !DILocation(line: 202, column: 2, scope: !9714)
!9725 = !DILocation(line: 203, column: 1, scope: !9714)
!9726 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1361, file: !1361, line: 212, type: !9715, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9727)
!9727 = !{!9728, !9729, !9730}
!9728 = !DILocalVariable(name: "dev", arg: 1, scope: !9726, file: !1361, line: 212, type: !1267)
!9729 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9726, file: !1361, line: 213, type: !137)
!9730 = !DILocalVariable(name: "config", scope: !9726, file: !1361, line: 215, type: !9335)
!9731 = !DILocation(line: 0, scope: !9726)
!9732 = !DILocation(line: 215, column: 48, scope: !9726)
!9733 = !DILocation(line: 217, column: 37, scope: !9726)
!9734 = !DILocation(line: 217, column: 2, scope: !9726)
!9735 = !DILocation(line: 218, column: 1, scope: !9726)
!9736 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1361, file: !1361, line: 227, type: !9715, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9737)
!9737 = !{!9738, !9739, !9740}
!9738 = !DILocalVariable(name: "dev", arg: 1, scope: !9736, file: !1361, line: 227, type: !1267)
!9739 = !DILocalVariable(name: "databits", arg: 2, scope: !9736, file: !1361, line: 228, type: !137)
!9740 = !DILocalVariable(name: "config", scope: !9736, file: !1361, line: 230, type: !9335)
!9741 = !DILocation(line: 0, scope: !9736)
!9742 = !DILocation(line: 230, column: 48, scope: !9736)
!9743 = !DILocation(line: 232, column: 32, scope: !9736)
!9744 = !DILocation(line: 232, column: 2, scope: !9736)
!9745 = !DILocation(line: 233, column: 1, scope: !9736)
!9746 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1361, file: !1361, line: 242, type: !9715, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9747)
!9747 = !{!9748, !9749, !9750}
!9748 = !DILocalVariable(name: "dev", arg: 1, scope: !9746, file: !1361, line: 242, type: !1267)
!9749 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9746, file: !1361, line: 243, type: !137)
!9750 = !DILocalVariable(name: "config", scope: !9746, file: !1361, line: 245, type: !9335)
!9751 = !DILocation(line: 0, scope: !9746)
!9752 = !DILocation(line: 245, column: 48, scope: !9746)
!9753 = !DILocation(line: 247, column: 33, scope: !9746)
!9754 = !DILocation(line: 247, column: 2, scope: !9746)
!9755 = !DILocation(line: 248, column: 1, scope: !9746)
!9756 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1361, file: !1361, line: 107, type: !9715, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9757)
!9757 = !{!9758, !9759, !9760, !9761, !9762}
!9758 = !DILocalVariable(name: "dev", arg: 1, scope: !9756, file: !1361, line: 107, type: !1267)
!9759 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9756, file: !1361, line: 107, type: !137)
!9760 = !DILocalVariable(name: "config", scope: !9756, file: !1361, line: 109, type: !9335)
!9761 = !DILocalVariable(name: "data", scope: !9756, file: !1361, line: 110, type: !9458)
!9762 = !DILocalVariable(name: "clock_rate", scope: !9756, file: !1361, line: 112, type: !137)
!9763 = !DILocation(line: 0, scope: !9756)
!9764 = !DILocation(line: 109, column: 48, scope: !9756)
!9765 = !DILocation(line: 110, column: 38, scope: !9756)
!9766 = !DILocation(line: 112, column: 2, scope: !9756)
!9767 = !DILocation(line: 123, column: 36, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9769, file: !1361, line: 123, column: 7)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !1361, line: 122, column: 9)
!9770 = distinct !DILexicalBlock(scope: !9756, file: !1361, line: 115, column: 6)
!9771 = !DILocation(line: 124, column: 42, scope: !9768)
!9772 = !DILocation(line: 123, column: 7, scope: !9768)
!9773 = !DILocation(line: 125, column: 22, scope: !9768)
!9774 = !DILocation(line: 123, column: 7, scope: !9769)
!9775 = !DILocation(line: 176, column: 36, scope: !9756)
!9776 = !DILocation(line: 176, column: 3, scope: !9756)
!9777 = !DILocation(line: 179, column: 32, scope: !9756)
!9778 = !DILocation(line: 180, column: 10, scope: !9756)
!9779 = !DILocation(line: 179, column: 3, scope: !9756)
!9780 = !DILocation(line: 195, column: 1, scope: !9756)
!9781 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9644, file: !9644, line: 409, type: !9707, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9782)
!9782 = !{!9783}
!9783 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9781, file: !9644, line: 409, type: !1308)
!9784 = !DILocation(line: 0, scope: !9781)
!9785 = !DILocation(line: 411, column: 3, scope: !9781)
!9786 = !DILocation(line: 412, column: 1, scope: !9781)
!9787 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !781, file: !781, line: 216, type: !1341, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9788)
!9788 = !{!9789, !9790, !9791, !9792}
!9789 = !DILocalVariable(name: "dev", arg: 1, scope: !9787, file: !781, line: 216, type: !1267)
!9790 = !DILocalVariable(name: "sys", arg: 2, scope: !9787, file: !781, line: 217, type: !855)
!9791 = !DILocalVariable(name: "rate", arg: 3, scope: !9787, file: !781, line: 218, type: !149)
!9792 = !DILocalVariable(name: "api", scope: !9787, file: !781, line: 220, type: !1319)
!9793 = !DILocation(line: 0, scope: !9787)
!9794 = !DILocation(line: 221, column: 49, scope: !9787)
!9795 = !DILocation(line: 223, column: 11, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9787, file: !781, line: 223, column: 6)
!9797 = !DILocation(line: 223, column: 20, scope: !9796)
!9798 = !DILocation(line: 223, column: 6, scope: !9787)
!9799 = !DILocation(line: 227, column: 9, scope: !9787)
!9800 = !DILocation(line: 227, column: 2, scope: !9787)
!9801 = !DILocation(line: 228, column: 1, scope: !9787)
!9802 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9644, file: !9644, line: 614, type: !9803, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9805)
!9803 = !DISubroutineType(types: !9804)
!9804 = !{null, !1308, !137}
!9805 = !{!9806, !9807}
!9806 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9802, file: !9644, line: 614, type: !1308)
!9807 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9802, file: !9644, line: 614, type: !137)
!9808 = !DILocation(line: 0, scope: !9802)
!9809 = !DILocation(line: 616, column: 3, scope: !9802)
!9810 = !DILocation(line: 617, column: 1, scope: !9802)
!9811 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9644, file: !9644, line: 1019, type: !9812, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9814)
!9812 = !DISubroutineType(types: !9813)
!9813 = !{null, !1308, !137, !137, !137}
!9814 = !{!9815, !9816, !9817, !9818}
!9815 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9811, file: !9644, line: 1019, type: !1308)
!9816 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9811, file: !9644, line: 1019, type: !137)
!9817 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9811, file: !9644, line: 1019, type: !137)
!9818 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9811, file: !9644, line: 1020, type: !137)
!9819 = !DILocation(line: 0, scope: !9811)
!9820 = !DILocation(line: 1028, column: 30, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9822, file: !9644, line: 1027, column: 3)
!9822 = distinct !DILexicalBlock(scope: !9811, file: !9644, line: 1022, column: 7)
!9823 = !DILocation(line: 1028, column: 19, scope: !9821)
!9824 = !DILocation(line: 1028, column: 13, scope: !9821)
!9825 = !DILocation(line: 1028, column: 17, scope: !9821)
!9826 = !DILocation(line: 1030, column: 1, scope: !9811)
!9827 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9644, file: !9644, line: 948, type: !9803, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9828)
!9828 = !{!9829, !9830}
!9829 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9827, file: !9644, line: 948, type: !1308)
!9830 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9827, file: !9644, line: 948, type: !137)
!9831 = !DILocation(line: 0, scope: !9827)
!9832 = !DILocation(line: 950, column: 3, scope: !9827)
!9833 = !DILocation(line: 951, column: 1, scope: !9827)
!9834 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9644, file: !9644, line: 587, type: !9803, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9835)
!9835 = !{!9836, !9837}
!9836 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9834, file: !9644, line: 587, type: !1308)
!9837 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9834, file: !9644, line: 587, type: !137)
!9838 = !DILocation(line: 0, scope: !9834)
!9839 = !DILocation(line: 589, column: 3, scope: !9834)
!9840 = !DILocation(line: 590, column: 1, scope: !9834)
!9841 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9644, file: !9644, line: 804, type: !9803, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9842)
!9842 = !{!9843, !9844}
!9843 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9841, file: !9644, line: 804, type: !1308)
!9844 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9841, file: !9644, line: 804, type: !137)
!9845 = !DILocation(line: 0, scope: !9841)
!9846 = !DILocation(line: 806, column: 3, scope: !9841)
!9847 = !DILocation(line: 807, column: 1, scope: !9841)
!9848 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9644, file: !9644, line: 531, type: !9803, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9849)
!9849 = !{!9850, !9851}
!9850 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9848, file: !9644, line: 531, type: !1308)
!9851 = !DILocalVariable(name: "Parity", arg: 2, scope: !9848, file: !9644, line: 531, type: !137)
!9852 = !DILocation(line: 0, scope: !9848)
!9853 = !DILocation(line: 533, column: 3, scope: !9848)
!9854 = !DILocation(line: 534, column: 1, scope: !9848)
!9855 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9644, file: !9644, line: 1769, type: !9645, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9856)
!9856 = !{!9857}
!9857 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9855, file: !9644, line: 1769, type: !1308)
!9858 = !DILocation(line: 0, scope: !9855)
!9859 = !DILocation(line: 1771, column: 11, scope: !9855)
!9860 = !DILocation(line: 1771, column: 46, scope: !9855)
!9861 = !DILocation(line: 1771, column: 3, scope: !9855)
!9862 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9644, file: !9644, line: 1736, type: !9645, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9863)
!9863 = !{!9864}
!9864 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9862, file: !9644, line: 1736, type: !1308)
!9865 = !DILocation(line: 0, scope: !9862)
!9866 = !DILocation(line: 1738, column: 11, scope: !9862)
!9867 = !DILocation(line: 1738, column: 3, scope: !9862)
!9868 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9644, file: !9644, line: 1747, type: !9645, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9869)
!9869 = !{!9870}
!9870 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9868, file: !9644, line: 1747, type: !1308)
!9871 = !DILocation(line: 0, scope: !9868)
!9872 = !DILocation(line: 1749, column: 11, scope: !9868)
!9873 = !DILocation(line: 1749, column: 45, scope: !9868)
!9874 = !DILocation(line: 1749, column: 3, scope: !9868)
!9875 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9644, file: !9644, line: 1826, type: !9645, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9876)
!9876 = !{!9877}
!9877 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9875, file: !9644, line: 1826, type: !1308)
!9878 = !DILocation(line: 0, scope: !9875)
!9879 = !DILocation(line: 1828, column: 11, scope: !9875)
!9880 = !DILocation(line: 1828, column: 46, scope: !9875)
!9881 = !DILocation(line: 1828, column: 3, scope: !9875)
!9882 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9644, file: !9644, line: 1991, type: !9707, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9883)
!9883 = !{!9884}
!9884 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9882, file: !9644, line: 1991, type: !1308)
!9885 = !DILocation(line: 0, scope: !9882)
!9886 = !DILocation(line: 1993, column: 3, scope: !9882)
!9887 = !DILocation(line: 1994, column: 1, scope: !9882)
!9888 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9644, file: !9644, line: 1933, type: !9707, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9889)
!9889 = !{!9890, !9891}
!9890 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9888, file: !9644, line: 1933, type: !1308)
!9891 = !DILocalVariable(name: "tmpreg", scope: !9888, file: !9644, line: 1935, type: !176)
!9892 = !DILocation(line: 0, scope: !9888)
!9893 = !DILocation(line: 1935, column: 3, scope: !9888)
!9894 = !DILocation(line: 1935, column: 17, scope: !9888)
!9895 = !DILocation(line: 1936, column: 20, scope: !9888)
!9896 = !DILocation(line: 1936, column: 10, scope: !9888)
!9897 = !DILocation(line: 1937, column: 10, scope: !9888)
!9898 = !DILocation(line: 1938, column: 20, scope: !9888)
!9899 = !DILocation(line: 1938, column: 10, scope: !9888)
!9900 = !DILocation(line: 1939, column: 10, scope: !9888)
!9901 = !DILocation(line: 1940, column: 1, scope: !9888)
!9902 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9644, file: !9644, line: 1876, type: !9707, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9903)
!9903 = !{!9904, !9905}
!9904 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9902, file: !9644, line: 1876, type: !1308)
!9905 = !DILocalVariable(name: "tmpreg", scope: !9902, file: !9644, line: 1878, type: !176)
!9906 = !DILocation(line: 0, scope: !9902)
!9907 = !DILocation(line: 1878, column: 3, scope: !9902)
!9908 = !DILocation(line: 1878, column: 17, scope: !9902)
!9909 = !DILocation(line: 1879, column: 20, scope: !9902)
!9910 = !DILocation(line: 1879, column: 10, scope: !9902)
!9911 = !DILocation(line: 1880, column: 10, scope: !9902)
!9912 = !DILocation(line: 1881, column: 20, scope: !9902)
!9913 = !DILocation(line: 1881, column: 10, scope: !9902)
!9914 = !DILocation(line: 1882, column: 10, scope: !9902)
!9915 = !DILocation(line: 1883, column: 1, scope: !9902)
!9916 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9644, file: !9644, line: 1895, type: !9707, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9917)
!9917 = !{!9918, !9919}
!9918 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9916, file: !9644, line: 1895, type: !1308)
!9919 = !DILocalVariable(name: "tmpreg", scope: !9916, file: !9644, line: 1897, type: !176)
!9920 = !DILocation(line: 0, scope: !9916)
!9921 = !DILocation(line: 1897, column: 3, scope: !9916)
!9922 = !DILocation(line: 1897, column: 17, scope: !9916)
!9923 = !DILocation(line: 1898, column: 20, scope: !9916)
!9924 = !DILocation(line: 1898, column: 10, scope: !9916)
!9925 = !DILocation(line: 1899, column: 10, scope: !9916)
!9926 = !DILocation(line: 1900, column: 20, scope: !9916)
!9927 = !DILocation(line: 1900, column: 10, scope: !9916)
!9928 = !DILocation(line: 1901, column: 10, scope: !9916)
!9929 = !DILocation(line: 1902, column: 1, scope: !9916)
!9930 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9644, file: !9644, line: 1914, type: !9707, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9931)
!9931 = !{!9932, !9933}
!9932 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9930, file: !9644, line: 1914, type: !1308)
!9933 = !DILocalVariable(name: "tmpreg", scope: !9930, file: !9644, line: 1916, type: !176)
!9934 = !DILocation(line: 0, scope: !9930)
!9935 = !DILocation(line: 1916, column: 3, scope: !9930)
!9936 = !DILocation(line: 1916, column: 17, scope: !9930)
!9937 = !DILocation(line: 1917, column: 20, scope: !9930)
!9938 = !DILocation(line: 1917, column: 10, scope: !9930)
!9939 = !DILocation(line: 1918, column: 10, scope: !9930)
!9940 = !DILocation(line: 1919, column: 20, scope: !9930)
!9941 = !DILocation(line: 1919, column: 10, scope: !9930)
!9942 = !DILocation(line: 1920, column: 10, scope: !9930)
!9943 = !DILocation(line: 1921, column: 1, scope: !9930)
!9944 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9644, file: !9644, line: 1813, type: !9645, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9945)
!9945 = !{!9946}
!9946 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9944, file: !9644, line: 1813, type: !1308)
!9947 = !DILocation(line: 0, scope: !9944)
!9948 = !DILocation(line: 1815, column: 11, scope: !9944)
!9949 = !DILocation(line: 1815, column: 46, scope: !9944)
!9950 = !DILocation(line: 1815, column: 3, scope: !9944)
!9951 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9644, file: !9644, line: 2425, type: !9952, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9954)
!9952 = !DISubroutineType(types: !9953)
!9953 = !{null, !1308, !221}
!9954 = !{!9955, !9956}
!9955 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9951, file: !9644, line: 2425, type: !1308)
!9956 = !DILocalVariable(name: "Value", arg: 2, scope: !9951, file: !9644, line: 2425, type: !221)
!9957 = !DILocation(line: 0, scope: !9951)
!9958 = !DILocation(line: 2427, column: 16, scope: !9951)
!9959 = !DILocation(line: 2427, column: 11, scope: !9951)
!9960 = !DILocation(line: 2427, column: 14, scope: !9951)
!9961 = !DILocation(line: 2428, column: 1, scope: !9951)
!9962 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9644, file: !9644, line: 1791, type: !9645, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9963)
!9963 = !{!9964}
!9964 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9962, file: !9644, line: 1791, type: !1308)
!9965 = !DILocation(line: 0, scope: !9962)
!9966 = !DILocation(line: 1793, column: 11, scope: !9962)
!9967 = !DILocation(line: 1793, column: 47, scope: !9962)
!9968 = !DILocation(line: 1793, column: 3, scope: !9962)
!9969 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9644, file: !9644, line: 2402, type: !9970, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9972)
!9970 = !DISubroutineType(types: !9971)
!9971 = !{!221, !1308}
!9972 = !{!9973}
!9973 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9969, file: !9644, line: 2402, type: !1308)
!9974 = !DILocation(line: 0, scope: !9969)
!9975 = !DILocation(line: 2404, column: 20, scope: !9969)
!9976 = !DILocation(line: 2404, column: 10, scope: !9969)
!9977 = !DILocation(line: 2404, column: 3, scope: !9969)
!9978 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1361, file: !1361, line: 1583, type: !1288, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !9979)
!9979 = !{!9980, !9981, !9982, !9983, !9984, !9985}
!9980 = !DILocalVariable(name: "dev", arg: 1, scope: !9978, file: !1361, line: 1583, type: !1267)
!9981 = !DILocalVariable(name: "config", scope: !9978, file: !1361, line: 1585, type: !9335)
!9982 = !DILocalVariable(name: "data", scope: !9978, file: !1361, line: 1586, type: !9458)
!9983 = !DILocalVariable(name: "ll_parity", scope: !9978, file: !1361, line: 1587, type: !137)
!9984 = !DILocalVariable(name: "ll_datawidth", scope: !9978, file: !1361, line: 1588, type: !137)
!9985 = !DILocalVariable(name: "err", scope: !9978, file: !1361, line: 1589, type: !103)
!9986 = !DILocation(line: 0, scope: !9978)
!9987 = !DILocation(line: 1585, column: 48, scope: !9978)
!9988 = !DILocation(line: 1586, column: 38, scope: !9978)
!9989 = !DILocation(line: 1591, column: 2, scope: !9978)
!9990 = !DILocation(line: 1593, column: 29, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9978, file: !1361, line: 1593, column: 6)
!9992 = !DILocation(line: 1593, column: 7, scope: !9991)
!9993 = !DILocation(line: 1593, column: 6, scope: !9978)
!9994 = !DILocation(line: 1599, column: 31, scope: !9978)
!9995 = !DILocation(line: 1599, column: 71, scope: !9978)
!9996 = !DILocation(line: 1599, column: 8, scope: !9978)
!9997 = !DILocation(line: 1600, column: 10, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9978, file: !1361, line: 1600, column: 6)
!9999 = !DILocation(line: 1600, column: 6, scope: !9978)
!10000 = !DILocation(line: 1616, column: 36, scope: !9978)
!10001 = !DILocation(line: 1616, column: 8, scope: !9978)
!10002 = !DILocation(line: 1617, column: 10, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9978, file: !1361, line: 1617, column: 6)
!10004 = !DILocation(line: 1617, column: 6, scope: !9978)
!10005 = !DILocation(line: 1621, column: 27, scope: !9978)
!10006 = !DILocation(line: 1621, column: 2, scope: !9978)
!10007 = !DILocation(line: 1624, column: 40, scope: !9978)
!10008 = !DILocation(line: 1624, column: 2, scope: !9978)
!10009 = !DILocation(line: 1630, column: 14, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !9978, file: !1361, line: 1630, column: 6)
!10011 = !DILocation(line: 1630, column: 6, scope: !9978)
!10012 = !DILocation(line: 1638, column: 2, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10014, file: !1361, line: 1634, column: 34)
!10014 = distinct !DILexicalBlock(scope: !10010, file: !1361, line: 1634, column: 13)
!10015 = !DILocation(line: 0, scope: !10010)
!10016 = !DILocation(line: 1649, column: 35, scope: !9978)
!10017 = !DILocation(line: 1649, column: 2, scope: !9978)
!10018 = !DILocation(line: 1654, column: 14, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !9978, file: !1361, line: 1654, column: 6)
!10020 = !DILocation(line: 1654, column: 6, scope: !9978)
!10021 = !DILocation(line: 1655, column: 3, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10019, file: !1361, line: 1654, column: 31)
!10023 = !DILocation(line: 1656, column: 2, scope: !10022)
!10024 = !DILocation(line: 1659, column: 37, scope: !9978)
!10025 = !DILocation(line: 1659, column: 2, scope: !9978)
!10026 = !DILocation(line: 1662, column: 14, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !9978, file: !1361, line: 1662, column: 6)
!10028 = !DILocation(line: 1662, column: 6, scope: !9978)
!10029 = !DILocation(line: 1663, column: 37, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10027, file: !1361, line: 1662, column: 27)
!10031 = !DILocation(line: 1663, column: 3, scope: !10030)
!10032 = !DILocation(line: 1664, column: 2, scope: !10030)
!10033 = !DILocation(line: 1684, column: 26, scope: !9978)
!10034 = !DILocation(line: 1684, column: 2, scope: !9978)
!10035 = !DILocation(line: 1722, column: 2, scope: !9978)
!10036 = !DILocation(line: 1724, column: 1, scope: !9978)
!10037 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1361, file: !1361, line: 651, type: !10038, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !10040)
!10038 = !DISubroutineType(types: !10039)
!10039 = !{null, !1267}
!10040 = !{!10041, !10042, !10043}
!10041 = !DILocalVariable(name: "dev", arg: 1, scope: !10037, file: !1361, line: 651, type: !1267)
!10042 = !DILocalVariable(name: "data", scope: !10037, file: !1361, line: 653, type: !9458)
!10043 = !DILocalVariable(name: "clk", scope: !10037, file: !1361, line: 654, type: !10044)
!10044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1267)
!10045 = !DILocation(line: 0, scope: !10037)
!10046 = !DILocation(line: 653, column: 38, scope: !10037)
!10047 = !DILocation(line: 656, column: 8, scope: !10037)
!10048 = !DILocation(line: 656, column: 14, scope: !10037)
!10049 = !DILocation(line: 657, column: 1, scope: !10037)
!10050 = distinct !DISubprogram(name: "device_is_ready", scope: !7860, file: !7860, line: 47, type: !10051, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !10053)
!10051 = !DISubroutineType(types: !10052)
!10052 = !{!224, !1267}
!10053 = !{!10054}
!10054 = !DILocalVariable(name: "dev", arg: 1, scope: !10050, file: !7860, line: 47, type: !1267)
!10055 = !DILocation(line: 0, scope: !10050)
!10056 = !DILocation(line: 55, column: 2, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10050, file: !7860, line: 55, column: 2)
!10058 = !{i64 2152491315}
!10059 = !DILocation(line: 56, column: 9, scope: !10050)
!10060 = !DILocation(line: 56, column: 2, scope: !10050)
!10061 = distinct !DISubprogram(name: "clock_control_on", scope: !781, file: !781, line: 123, type: !1326, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !10062)
!10062 = !{!10063, !10064, !10065}
!10063 = !DILocalVariable(name: "dev", arg: 1, scope: !10061, file: !781, line: 123, type: !1267)
!10064 = !DILocalVariable(name: "sys", arg: 2, scope: !10061, file: !781, line: 124, type: !855)
!10065 = !DILocalVariable(name: "api", scope: !10061, file: !781, line: 126, type: !1319)
!10066 = !DILocation(line: 0, scope: !10061)
!10067 = !DILocation(line: 127, column: 49, scope: !10061)
!10068 = !DILocation(line: 129, column: 14, scope: !10061)
!10069 = !DILocation(line: 129, column: 9, scope: !10061)
!10070 = !DILocation(line: 129, column: 2, scope: !10061)
!10071 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1393, file: !1393, line: 342, type: !10072, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !10074)
!10072 = !DISubroutineType(types: !10073)
!10073 = !{!103, !1443, !221}
!10074 = !{!10075, !10076, !10077, !10078}
!10075 = !DILocalVariable(name: "config", arg: 1, scope: !10071, file: !1393, line: 342, type: !1443)
!10076 = !DILocalVariable(name: "id", arg: 2, scope: !10071, file: !1393, line: 343, type: !221)
!10077 = !DILocalVariable(name: "ret", scope: !10071, file: !1393, line: 345, type: !103)
!10078 = !DILocalVariable(name: "state", scope: !10071, file: !1393, line: 346, type: !1396)
!10079 = !DILocation(line: 0, scope: !10071)
!10080 = !DILocation(line: 346, column: 2, scope: !10071)
!10081 = !DILocation(line: 348, column: 8, scope: !10071)
!10082 = !DILocation(line: 349, column: 10, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10071, file: !1393, line: 349, column: 6)
!10084 = !DILocation(line: 349, column: 6, scope: !10071)
!10085 = !DILocation(line: 353, column: 44, scope: !10071)
!10086 = !DILocation(line: 353, column: 9, scope: !10071)
!10087 = !DILocation(line: 353, column: 2, scope: !10071)
!10088 = !DILocation(line: 354, column: 1, scope: !10071)
!10089 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9644, file: !9644, line: 496, type: !9803, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !10090)
!10090 = !{!10091, !10092}
!10091 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10089, file: !9644, line: 496, type: !1308)
!10092 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10089, file: !9644, line: 496, type: !137)
!10093 = !DILocation(line: 0, scope: !10089)
!10094 = !DILocation(line: 498, column: 3, scope: !10089)
!10095 = !DILocation(line: 499, column: 1, scope: !10089)
!10096 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9644, file: !9644, line: 849, type: !9812, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !10097)
!10097 = !{!10098, !10099, !10100, !10101}
!10098 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10096, file: !9644, line: 849, type: !1308)
!10099 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10096, file: !9644, line: 849, type: !137)
!10100 = !DILocalVariable(name: "Parity", arg: 3, scope: !10096, file: !9644, line: 849, type: !137)
!10101 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10096, file: !9644, line: 850, type: !137)
!10102 = !DILocation(line: 0, scope: !10096)
!10103 = !DILocation(line: 852, column: 3, scope: !10096)
!10104 = !DILocation(line: 853, column: 3, scope: !10096)
!10105 = !DILocation(line: 854, column: 1, scope: !10096)
!10106 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9644, file: !9644, line: 1336, type: !9707, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !10107)
!10107 = !{!10108}
!10108 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10106, file: !9644, line: 1336, type: !1308)
!10109 = !DILocation(line: 0, scope: !10106)
!10110 = !DILocation(line: 1338, column: 3, scope: !10106)
!10111 = !DILocation(line: 1339, column: 1, scope: !10106)
!10112 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1393, file: !1393, line: 316, type: !10113, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !10115)
!10113 = !DISubroutineType(types: !10114)
!10114 = !{!103, !1443, !1396}
!10115 = !{!10116, !10117, !10118}
!10116 = !DILocalVariable(name: "config", arg: 1, scope: !10112, file: !1393, line: 317, type: !1443)
!10117 = !DILocalVariable(name: "state", arg: 2, scope: !10112, file: !1393, line: 318, type: !1396)
!10118 = !DILocalVariable(name: "reg", scope: !10112, file: !1393, line: 320, type: !22)
!10119 = !DILocation(line: 0, scope: !10112)
!10120 = !DILocation(line: 329, column: 39, scope: !10112)
!10121 = !DILocation(line: 329, column: 52, scope: !10112)
!10122 = !DILocation(line: 329, column: 9, scope: !10112)
!10123 = !DILocation(line: 329, column: 2, scope: !10112)
!10124 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !209, file: !209, line: 730, type: !10051, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1223, retainedNodes: !10125)
!10125 = !{!10126}
!10126 = !DILocalVariable(name: "dev", arg: 1, scope: !10124, file: !209, line: 730, type: !1267)
!10127 = !DILocation(line: 0, scope: !10124)
!10128 = !DILocation(line: 732, column: 9, scope: !10124)
!10129 = !DILocation(line: 732, column: 2, scope: !10124)
!10130 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1536, file: !1536, line: 270, type: !1542, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10131)
!10131 = !{!10132}
!10132 = !DILocalVariable(name: "dev", arg: 1, scope: !10130, file: !1536, line: 270, type: !1544)
!10133 = !DILocation(line: 0, scope: !10130)
!10134 = !DILocation(line: 274, column: 2, scope: !10130)
!10135 = !DILocation(line: 275, column: 12, scope: !10130)
!10136 = !DILocation(line: 276, column: 15, scope: !10130)
!10137 = !DILocation(line: 277, column: 16, scope: !10130)
!10138 = !DILocation(line: 278, column: 15, scope: !10130)
!10139 = !DILocation(line: 279, column: 16, scope: !10130)
!10140 = !DILocation(line: 282, column: 2, scope: !10130)
!10141 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !415, file: !415, line: 1638, type: !6305, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10142)
!10142 = !{!10143, !10144}
!10143 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10141, file: !415, line: 1638, type: !739)
!10144 = !DILocalVariable(name: "priority", arg: 2, scope: !10141, file: !415, line: 1638, type: !137)
!10145 = !DILocation(line: 0, scope: !10141)
!10146 = !DILocation(line: 1646, column: 46, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10148, file: !415, line: 1645, column: 3)
!10148 = distinct !DILexicalBlock(scope: !10141, file: !415, line: 1640, column: 7)
!10149 = !DILocation(line: 1648, column: 1, scope: !10141)
!10150 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1536, file: !1536, line: 118, type: !6208, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10151)
!10151 = !{!10152, !10153}
!10152 = !DILocalVariable(name: "arg", arg: 1, scope: !10150, file: !1536, line: 118, type: !102)
!10153 = !DILocalVariable(name: "dticks", scope: !10150, file: !1536, line: 121, type: !137)
!10154 = !DILocation(line: 0, scope: !10150)
!10155 = !DILocation(line: 124, column: 2, scope: !10150)
!10156 = !DILocation(line: 129, column: 17, scope: !10150)
!10157 = !DILocation(line: 129, column: 14, scope: !10150)
!10158 = !DILocation(line: 130, column: 15, scope: !10150)
!10159 = !DILocation(line: 145, column: 27, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !1536, line: 132, column: 16)
!10161 = distinct !DILexicalBlock(scope: !10150, file: !1536, line: 132, column: 6)
!10162 = !DILocation(line: 145, column: 25, scope: !10160)
!10163 = !DILocation(line: 145, column: 45, scope: !10160)
!10164 = !DILocation(line: 146, column: 30, scope: !10160)
!10165 = !DILocation(line: 146, column: 20, scope: !10160)
!10166 = !DILocation(line: 147, column: 3, scope: !10160)
!10167 = !DILocation(line: 151, column: 2, scope: !10150)
!10168 = !DILocation(line: 152, column: 1, scope: !10150)
!10169 = distinct !DISubprogram(name: "elapsed", scope: !1536, file: !1536, line: 85, type: !135, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10170)
!10170 = !{!10171, !10172, !10173}
!10171 = !DILocalVariable(name: "val1", scope: !10169, file: !1536, line: 87, type: !137)
!10172 = !DILocalVariable(name: "ctrl", scope: !10169, file: !1536, line: 88, type: !137)
!10173 = !DILocalVariable(name: "val2", scope: !10169, file: !1536, line: 89, type: !137)
!10174 = !DILocation(line: 87, column: 27, scope: !10169)
!10175 = !DILocation(line: 0, scope: !10169)
!10176 = !DILocation(line: 88, column: 27, scope: !10169)
!10177 = !DILocation(line: 89, column: 27, scope: !10169)
!10178 = !DILocation(line: 105, column: 12, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10169, file: !1536, line: 105, column: 6)
!10180 = !DILocation(line: 106, column: 6, scope: !10179)
!10181 = !DILocation(line: 107, column: 16, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10179, file: !1536, line: 106, column: 24)
!10183 = !DILocation(line: 111, column: 18, scope: !10182)
!10184 = !DILocation(line: 112, column: 2, scope: !10182)
!10185 = !DILocation(line: 114, column: 20, scope: !10169)
!10186 = !DILocation(line: 114, column: 30, scope: !10169)
!10187 = !DILocation(line: 114, column: 28, scope: !10169)
!10188 = !DILocation(line: 114, column: 2, scope: !10169)
!10189 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1536, file: !1536, line: 154, type: !10190, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10192)
!10190 = !DISubroutineType(types: !10191)
!10191 = !{null, !721, !224}
!10192 = !{!10193, !10194, !10195, !10196, !10197, !10198, !10199, !10204, !10205}
!10193 = !DILocalVariable(name: "ticks", arg: 1, scope: !10189, file: !1536, line: 154, type: !721)
!10194 = !DILocalVariable(name: "idle", arg: 2, scope: !10189, file: !1536, line: 154, type: !224)
!10195 = !DILocalVariable(name: "delay", scope: !10189, file: !1536, line: 169, type: !137)
!10196 = !DILocalVariable(name: "val1", scope: !10189, file: !1536, line: 170, type: !137)
!10197 = !DILocalVariable(name: "val2", scope: !10189, file: !1536, line: 170, type: !137)
!10198 = !DILocalVariable(name: "last_load_", scope: !10189, file: !1536, line: 171, type: !137)
!10199 = !DILocalVariable(name: "key", scope: !10189, file: !1536, line: 176, type: !10200)
!10200 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !381, line: 106, baseType: !10201)
!10201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !381, line: 32, size: 32, elements: !10202)
!10202 = !{!10203}
!10203 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10201, file: !381, line: 33, baseType: !103, size: 32)
!10204 = !DILocalVariable(name: "pending", scope: !10189, file: !1536, line: 178, type: !137)
!10205 = !DILocalVariable(name: "unannounced", scope: !10189, file: !1536, line: 185, type: !137)
!10206 = !DILocation(line: 0, scope: !10189)
!10207 = !DILocation(line: 162, column: 49, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10189, file: !1536, line: 162, column: 6)
!10209 = !DILocation(line: 163, column: 17, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10208, file: !1536, line: 162, column: 78)
!10211 = !DILocation(line: 164, column: 13, scope: !10210)
!10212 = !DILocation(line: 165, column: 3, scope: !10210)
!10213 = !DILocation(line: 171, column: 24, scope: !10189)
!10214 = !DILocation(line: 173, column: 10, scope: !10189)
!10215 = !DILocation(line: 174, column: 10, scope: !10189)
!10216 = !DILocalVariable(name: "l", arg: 1, scope: !10217, file: !381, line: 136, type: !10220)
!10217 = distinct !DISubprogram(name: "k_spin_lock", scope: !381, file: !381, line: 136, type: !10218, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10221)
!10218 = !DISubroutineType(types: !10219)
!10219 = !{!10200, !10220}
!10220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!10221 = !{!10216, !10222}
!10222 = !DILocalVariable(name: "k", scope: !10217, file: !381, line: 139, type: !10200)
!10223 = !DILocation(line: 0, scope: !10217, inlinedAt: !10224)
!10224 = distinct !DILocation(line: 176, column: 25, scope: !10189)
!10225 = !DILocation(line: 55, column: 2, scope: !10226, inlinedAt: !10230)
!10226 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6080, file: !6080, line: 42, type: !6081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10227)
!10227 = !{!10228, !10229}
!10228 = !DILocalVariable(name: "key", scope: !10226, file: !6080, line: 44, type: !32)
!10229 = !DILocalVariable(name: "tmp", scope: !10226, file: !6080, line: 53, type: !32)
!10230 = distinct !DILocation(line: 145, column: 10, scope: !10217, inlinedAt: !10224)
!10231 = !{i64 1617399}
!10232 = !DILocation(line: 0, scope: !10226, inlinedAt: !10230)
!10233 = !DILocation(line: 178, column: 21, scope: !10189)
!10234 = !DILocation(line: 180, column: 18, scope: !10189)
!10235 = !DILocation(line: 182, column: 14, scope: !10189)
!10236 = !DILocation(line: 183, column: 15, scope: !10189)
!10237 = !DILocation(line: 185, column: 39, scope: !10189)
!10238 = !DILocation(line: 185, column: 37, scope: !10189)
!10239 = !DILocation(line: 187, column: 27, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10189, file: !1536, line: 187, column: 6)
!10241 = !DILocation(line: 187, column: 6, scope: !10189)
!10242 = !DILocation(line: 202, column: 27, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10240, file: !1536, line: 195, column: 9)
!10244 = !DILocation(line: 202, column: 48, scope: !10243)
!10245 = !DILocation(line: 203, column: 9, scope: !10243)
!10246 = !DILocation(line: 204, column: 11, scope: !10243)
!10247 = !DILocation(line: 205, column: 13, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10243, file: !1536, line: 205, column: 7)
!10249 = !DILocation(line: 205, column: 7, scope: !10243)
!10250 = !DILocation(line: 0, scope: !10240)
!10251 = !DILocation(line: 212, column: 18, scope: !10189)
!10252 = !DILocation(line: 214, column: 28, scope: !10189)
!10253 = !DILocation(line: 214, column: 16, scope: !10189)
!10254 = !DILocation(line: 215, column: 15, scope: !10189)
!10255 = !DILocation(line: 227, column: 11, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10189, file: !1536, line: 227, column: 6)
!10257 = !DILocation(line: 227, column: 6, scope: !10189)
!10258 = !DILocation(line: 228, column: 15, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10256, file: !1536, line: 227, column: 19)
!10260 = !DILocation(line: 228, column: 38, scope: !10259)
!10261 = !DILocation(line: 228, column: 24, scope: !10259)
!10262 = !DILocation(line: 229, column: 2, scope: !10259)
!10263 = !DILocation(line: 230, column: 24, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10256, file: !1536, line: 229, column: 9)
!10265 = !DILocation(line: 230, column: 15, scope: !10264)
!10266 = !DILocation(line: 0, scope: !10256)
!10267 = !DILocalVariable(name: "key", arg: 2, scope: !10268, file: !381, line: 190, type: !10200)
!10268 = distinct !DISubprogram(name: "k_spin_unlock", scope: !381, file: !381, line: 189, type: !10269, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10271)
!10269 = !DISubroutineType(types: !10270)
!10270 = !{null, !10220, !10200}
!10271 = !{!10272, !10267}
!10272 = !DILocalVariable(name: "l", arg: 1, scope: !10268, file: !381, line: 189, type: !10220)
!10273 = !DILocation(line: 0, scope: !10268, inlinedAt: !10274)
!10274 = distinct !DILocation(line: 232, column: 2, scope: !10189)
!10275 = !DILocalVariable(name: "key", arg: 1, scope: !10276, file: !6080, line: 84, type: !32)
!10276 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6080, file: !6080, line: 84, type: !6091, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10277)
!10277 = !{!10275}
!10278 = !DILocation(line: 0, scope: !10276, inlinedAt: !10279)
!10279 = distinct !DILocation(line: 215, column: 2, scope: !10268, inlinedAt: !10274)
!10280 = !DILocation(line: 95, column: 2, scope: !10276, inlinedAt: !10279)
!10281 = !{i64 1618216}
!10282 = !DILocation(line: 234, column: 1, scope: !10189)
!10283 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1536, file: !1536, line: 236, type: !135, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10284)
!10284 = !{!10285, !10286}
!10285 = !DILocalVariable(name: "key", scope: !10283, file: !1536, line: 242, type: !10200)
!10286 = !DILocalVariable(name: "cyc", scope: !10283, file: !1536, line: 243, type: !137)
!10287 = !DILocation(line: 0, scope: !10217, inlinedAt: !10288)
!10288 = distinct !DILocation(line: 242, column: 25, scope: !10283)
!10289 = !DILocation(line: 55, column: 2, scope: !10226, inlinedAt: !10290)
!10290 = distinct !DILocation(line: 145, column: 10, scope: !10217, inlinedAt: !10288)
!10291 = !DILocation(line: 0, scope: !10226, inlinedAt: !10290)
!10292 = !DILocation(line: 0, scope: !10283)
!10293 = !DILocation(line: 243, column: 17, scope: !10283)
!10294 = !DILocation(line: 243, column: 29, scope: !10283)
!10295 = !DILocation(line: 243, column: 27, scope: !10283)
!10296 = !DILocation(line: 243, column: 43, scope: !10283)
!10297 = !DILocation(line: 243, column: 41, scope: !10283)
!10298 = !DILocation(line: 0, scope: !10268, inlinedAt: !10299)
!10299 = distinct !DILocation(line: 245, column: 2, scope: !10283)
!10300 = !DILocation(line: 0, scope: !10276, inlinedAt: !10301)
!10301 = distinct !DILocation(line: 215, column: 2, scope: !10268, inlinedAt: !10299)
!10302 = !DILocation(line: 95, column: 2, scope: !10276, inlinedAt: !10301)
!10303 = !DILocation(line: 246, column: 13, scope: !10283)
!10304 = !DILocation(line: 246, column: 2, scope: !10283)
!10305 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1536, file: !1536, line: 249, type: !135, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10306)
!10306 = !{!10307, !10308}
!10307 = !DILocalVariable(name: "key", scope: !10305, file: !1536, line: 251, type: !10200)
!10308 = !DILocalVariable(name: "ret", scope: !10305, file: !1536, line: 252, type: !137)
!10309 = !DILocation(line: 0, scope: !10217, inlinedAt: !10310)
!10310 = distinct !DILocation(line: 251, column: 25, scope: !10305)
!10311 = !DILocation(line: 55, column: 2, scope: !10226, inlinedAt: !10312)
!10312 = distinct !DILocation(line: 145, column: 10, scope: !10217, inlinedAt: !10310)
!10313 = !DILocation(line: 0, scope: !10226, inlinedAt: !10312)
!10314 = !DILocation(line: 0, scope: !10305)
!10315 = !DILocation(line: 252, column: 17, scope: !10305)
!10316 = !DILocation(line: 252, column: 29, scope: !10305)
!10317 = !DILocation(line: 252, column: 27, scope: !10305)
!10318 = !DILocation(line: 0, scope: !10268, inlinedAt: !10319)
!10319 = distinct !DILocation(line: 254, column: 2, scope: !10305)
!10320 = !DILocation(line: 0, scope: !10276, inlinedAt: !10321)
!10321 = distinct !DILocation(line: 215, column: 2, scope: !10268, inlinedAt: !10319)
!10322 = !DILocation(line: 95, column: 2, scope: !10276, inlinedAt: !10321)
!10323 = !DILocation(line: 255, column: 2, scope: !10305)
!10324 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1536, file: !1536, line: 258, type: !2794, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !162)
!10325 = !DILocation(line: 260, column: 6, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10324, file: !1536, line: 260, column: 6)
!10327 = !DILocation(line: 260, column: 16, scope: !10326)
!10328 = !DILocation(line: 260, column: 6, scope: !10324)
!10329 = !DILocation(line: 261, column: 17, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10326, file: !1536, line: 260, column: 34)
!10331 = !DILocation(line: 262, column: 2, scope: !10330)
!10332 = !DILocation(line: 263, column: 1, scope: !10324)
!10333 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1536, file: !1536, line: 265, type: !2794, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !162)
!10334 = !DILocation(line: 267, column: 16, scope: !10333)
!10335 = !DILocation(line: 268, column: 1, scope: !10333)
!10336 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10337, file: !10337, line: 9, type: !10338, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2632, retainedNodes: !10361)
!10337 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10338 = !DISubroutineType(types: !10339)
!10339 = !{!103, !10340, !221, !10360}
!10340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10341, size: 32)
!10341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10342)
!10342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1393, line: 60, size: 64, elements: !10343)
!10343 = !{!10344, !10359}
!10344 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10342, file: !1393, line: 69, baseType: !10345, size: 32)
!10345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10346, size: 32)
!10346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10347)
!10347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1393, line: 50, size: 64, elements: !10348)
!10348 = !{!10349, !10357, !10358}
!10349 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10347, file: !1393, line: 52, baseType: !10350, size: 32)
!10350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10351, size: 32)
!10351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10352)
!10352 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1404, line: 37, baseType: !10353)
!10353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1404, line: 32, size: 64, elements: !10354)
!10354 = !{!10355, !10356}
!10355 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10353, file: !1404, line: 34, baseType: !137, size: 32)
!10356 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10353, file: !1404, line: 36, baseType: !137, size: 32, offset: 32)
!10357 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10347, file: !1393, line: 54, baseType: !221, size: 8, offset: 32)
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10347, file: !1393, line: 56, baseType: !221, size: 8, offset: 40)
!10359 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10342, file: !1393, line: 71, baseType: !221, size: 8, offset: 32)
!10360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10345, size: 32)
!10361 = !{!10362, !10363, !10364}
!10362 = !DILocalVariable(name: "config", arg: 1, scope: !10336, file: !10337, line: 9, type: !10340)
!10363 = !DILocalVariable(name: "id", arg: 2, scope: !10336, file: !10337, line: 9, type: !221)
!10364 = !DILocalVariable(name: "state", arg: 3, scope: !10336, file: !10337, line: 10, type: !10360)
!10365 = !DILocation(line: 0, scope: !10336)
!10366 = !DILocation(line: 12, column: 20, scope: !10336)
!10367 = !DILocation(line: 13, column: 27, scope: !10336)
!10368 = !DILocation(line: 13, column: 42, scope: !10336)
!10369 = !DILocation(line: 13, column: 19, scope: !10336)
!10370 = !DILocation(line: 13, column: 16, scope: !10336)
!10371 = !DILocation(line: 13, column: 2, scope: !10336)
!10372 = distinct !{!10372, !10371, !10373}
!10373 = !DILocation(line: 19, column: 2, scope: !10336)
!10374 = !DILocation(line: 14, column: 23, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10376, file: !10337, line: 14, column: 7)
!10376 = distinct !DILexicalBlock(scope: !10336, file: !10337, line: 13, column: 54)
!10377 = !DILocation(line: 14, column: 10, scope: !10375)
!10378 = !DILocation(line: 18, column: 11, scope: !10376)
!10379 = !DILocation(line: 14, column: 7, scope: !10376)
!10380 = !DILocation(line: 22, column: 1, scope: !10336)
!10381 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1652, file: !1652, line: 193, type: !10382, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1571, retainedNodes: !10391)
!10382 = !DISubroutineType(types: !10383)
!10383 = !{!103, !10384, !221, !22}
!10384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10385, size: 32)
!10385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10386)
!10386 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1404, line: 37, baseType: !10387)
!10387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1404, line: 32, size: 64, elements: !10388)
!10388 = !{!10389, !10390}
!10389 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10387, file: !1404, line: 34, baseType: !137, size: 32)
!10390 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10387, file: !1404, line: 36, baseType: !137, size: 32, offset: 32)
!10391 = !{!10392, !10393, !10394, !10395, !10396, !10397, !10398, !10399, !10401}
!10392 = !DILocalVariable(name: "pins", arg: 1, scope: !10381, file: !1652, line: 193, type: !10384)
!10393 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10381, file: !1652, line: 193, type: !221)
!10394 = !DILocalVariable(name: "reg", arg: 3, scope: !10381, file: !1652, line: 194, type: !22)
!10395 = !DILocalVariable(name: "pin", scope: !10381, file: !1652, line: 196, type: !137)
!10396 = !DILocalVariable(name: "mux", scope: !10381, file: !1652, line: 196, type: !137)
!10397 = !DILocalVariable(name: "pin_cgf", scope: !10381, file: !1652, line: 197, type: !137)
!10398 = !DILocalVariable(name: "ret", scope: !10381, file: !1652, line: 198, type: !103)
!10399 = !DILocalVariable(name: "i", scope: !10400, file: !1652, line: 209, type: !221)
!10400 = distinct !DILexicalBlock(scope: !10381, file: !1652, line: 209, column: 2)
!10401 = !DILocalVariable(name: "gpio_out", scope: !10402, file: !1652, line: 239, type: !137)
!10402 = distinct !DILexicalBlock(scope: !10403, file: !1652, line: 238, column: 55)
!10403 = distinct !DILexicalBlock(scope: !10404, file: !1652, line: 238, column: 14)
!10404 = distinct !DILexicalBlock(scope: !10405, file: !1652, line: 236, column: 14)
!10405 = distinct !DILexicalBlock(scope: !10406, file: !1652, line: 234, column: 7)
!10406 = distinct !DILexicalBlock(scope: !10407, file: !1652, line: 209, column: 41)
!10407 = distinct !DILexicalBlock(scope: !10400, file: !1652, line: 209, column: 2)
!10408 = !DILocation(line: 0, scope: !10381)
!10409 = !DILocation(line: 0, scope: !10400)
!10410 = !DILocation(line: 209, column: 25, scope: !10407)
!10411 = !DILocation(line: 209, column: 2, scope: !10400)
!10412 = distinct !{!10412, !10411, !10413}
!10413 = !DILocation(line: 259, column: 2, scope: !10400)
!10414 = !DILocation(line: 210, column: 17, scope: !10406)
!10415 = !DILocation(line: 234, column: 7, scope: !10405)
!10416 = !DILocation(line: 234, column: 33, scope: !10405)
!10417 = !DILocation(line: 234, column: 7, scope: !10406)
!10418 = !DILocation(line: 235, column: 22, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10405, file: !1652, line: 234, column: 49)
!10420 = !DILocation(line: 235, column: 29, scope: !10419)
!10421 = !DILocation(line: 236, column: 3, scope: !10419)
!10422 = !DILocation(line: 236, column: 14, scope: !10405)
!10423 = !DILocation(line: 239, column: 32, scope: !10402)
!10424 = !DILocation(line: 0, scope: !10402)
!10425 = !DILocation(line: 241, column: 8, scope: !10402)
!10426 = !DILocation(line: 246, column: 3, scope: !10402)
!10427 = !DILocation(line: 252, column: 9, scope: !10406)
!10428 = !DILocation(line: 255, column: 9, scope: !10406)
!10429 = !DILocation(line: 256, column: 11, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10406, file: !1652, line: 256, column: 7)
!10431 = !DILocation(line: 209, column: 37, scope: !10407)
!10432 = !DILocation(line: 256, column: 7, scope: !10406)
!10433 = !DILocation(line: 262, column: 1, scope: !10381)
!10434 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1652, file: !1652, line: 176, type: !10435, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1571, retainedNodes: !10437)
!10435 = !DISubroutineType(types: !10436)
!10436 = !{!103, !137, !137, !137}
!10437 = !{!10438, !10439, !10440, !10441}
!10438 = !DILocalVariable(name: "pin", arg: 1, scope: !10434, file: !1652, line: 176, type: !137)
!10439 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10434, file: !1652, line: 176, type: !137)
!10440 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10434, file: !1652, line: 176, type: !137)
!10441 = !DILocalVariable(name: "port_device", scope: !10434, file: !1652, line: 178, type: !1582)
!10442 = !DILocation(line: 0, scope: !10434)
!10443 = !DILocation(line: 180, column: 22, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10434, file: !1652, line: 180, column: 6)
!10445 = !DILocation(line: 180, column: 6, scope: !10434)
!10446 = !DILocation(line: 180, column: 6, scope: !10444)
!10447 = !DILocation(line: 184, column: 16, scope: !10434)
!10448 = !DILocation(line: 186, column: 19, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10434, file: !1652, line: 186, column: 6)
!10450 = !DILocation(line: 186, column: 28, scope: !10449)
!10451 = !DILocation(line: 186, column: 33, scope: !10449)
!10452 = !DILocation(line: 186, column: 6, scope: !10434)
!10453 = !DILocation(line: 190, column: 43, scope: !10434)
!10454 = !DILocation(line: 190, column: 9, scope: !10434)
!10455 = !DILocation(line: 190, column: 2, scope: !10434)
!10456 = !DILocation(line: 191, column: 1, scope: !10434)
!10457 = distinct !DISubprogram(name: "device_is_ready", scope: !7860, file: !7860, line: 47, type: !10458, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1571, retainedNodes: !10460)
!10458 = !DISubroutineType(types: !10459)
!10459 = !{!224, !1582}
!10460 = !{!10461}
!10461 = !DILocalVariable(name: "dev", arg: 1, scope: !10457, file: !7860, line: 47, type: !1582)
!10462 = !DILocation(line: 0, scope: !10457)
!10463 = !DILocation(line: 55, column: 2, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10457, file: !7860, line: 55, column: 2)
!10465 = !{i64 2148851408}
!10466 = !DILocation(line: 56, column: 9, scope: !10457)
!10467 = !DILocation(line: 56, column: 2, scope: !10457)
!10468 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !209, file: !209, line: 730, type: !10458, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1571, retainedNodes: !10469)
!10469 = !{!10470}
!10470 = !DILocalVariable(name: "dev", arg: 1, scope: !10468, file: !209, line: 730, type: !1582)
!10471 = !DILocation(line: 0, scope: !10468)
!10472 = !DILocation(line: 732, column: 9, scope: !10468)
!10473 = !DILocation(line: 732, column: 2, scope: !10468)
!10474 = distinct !DISubprogram(name: "SystemInit", scope: !1682, file: !1682, line: 160, type: !2794, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !162)
!10475 = !DILocation(line: 170, column: 1, scope: !10474)
!10476 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1682, file: !1682, line: 210, type: !2794, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1658, retainedNodes: !10477)
!10477 = !{!10478, !10479, !10480, !10481, !10482}
!10478 = !DILocalVariable(name: "tmp", scope: !10476, file: !1682, line: 212, type: !137)
!10479 = !DILocalVariable(name: "pllmul", scope: !10476, file: !1682, line: 212, type: !137)
!10480 = !DILocalVariable(name: "plldiv", scope: !10476, file: !1682, line: 212, type: !137)
!10481 = !DILocalVariable(name: "pllsource", scope: !10476, file: !1682, line: 212, type: !137)
!10482 = !DILocalVariable(name: "msirange", scope: !10476, file: !1682, line: 212, type: !137)
!10483 = !DILocation(line: 0, scope: !10476)
!10484 = !DILocation(line: 215, column: 14, scope: !10476)
!10485 = !DILocation(line: 217, column: 3, scope: !10476)
!10486 = !DILocation(line: 220, column: 24, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10476, file: !1682, line: 218, column: 3)
!10488 = !DILocation(line: 220, column: 52, scope: !10487)
!10489 = !DILocation(line: 221, column: 32, scope: !10487)
!10490 = !DILocation(line: 222, column: 7, scope: !10487)
!10491 = !DILocation(line: 228, column: 7, scope: !10487)
!10492 = !DILocation(line: 231, column: 21, scope: !10487)
!10493 = !DILocation(line: 232, column: 21, scope: !10487)
!10494 = !DILocation(line: 233, column: 36, scope: !10487)
!10495 = !DILocation(line: 233, column: 16, scope: !10487)
!10496 = !DILocation(line: 234, column: 24, scope: !10487)
!10497 = !DILocation(line: 234, column: 31, scope: !10487)
!10498 = !DILocation(line: 236, column: 24, scope: !10487)
!10499 = !DILocation(line: 236, column: 29, scope: !10487)
!10500 = !DILocation(line: 238, column: 21, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10487, file: !1682, line: 238, column: 11)
!10502 = !DILocation(line: 238, column: 11, scope: !10487)
!10503 = !DILocation(line: 241, column: 41, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10501, file: !1682, line: 239, column: 7)
!10505 = !DILocation(line: 241, column: 51, scope: !10504)
!10506 = !DILocation(line: 242, column: 7, scope: !10504)
!10507 = !DILocation(line: 246, column: 41, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10501, file: !1682, line: 244, column: 7)
!10509 = !DILocation(line: 246, column: 51, scope: !10508)
!10510 = !DILocation(line: 0, scope: !10487)
!10511 = !DILocation(line: 256, column: 30, scope: !10476)
!10512 = !DILocation(line: 256, column: 52, scope: !10476)
!10513 = !DILocation(line: 256, column: 9, scope: !10476)
!10514 = !DILocation(line: 258, column: 19, scope: !10476)
!10515 = !DILocation(line: 259, column: 1, scope: !10476)
!10516 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10517, file: !10517, line: 228, type: !10518, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10521)
!10517 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10518 = !DISubroutineType(types: !10519)
!10519 = !{!10520}
!10520 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2638, line: 45, baseType: !2637)
!10521 = !{!10522, !10523}
!10522 = !DILocalVariable(name: "tickstart", scope: !10516, file: !10517, line: 230, type: !137)
!10523 = !DILocalVariable(name: "status", scope: !10516, file: !10517, line: 231, type: !10520)
!10524 = !DILocation(line: 234, column: 3, scope: !10516)
!10525 = !DILocation(line: 238, column: 3, scope: !10516)
!10526 = !DILocation(line: 241, column: 15, scope: !10516)
!10527 = !DILocation(line: 0, scope: !10516)
!10528 = !DILocation(line: 244, column: 3, scope: !10516)
!10529 = !DILocation(line: 244, column: 10, scope: !10516)
!10530 = !DILocation(line: 244, column: 43, scope: !10516)
!10531 = !DILocation(line: 246, column: 10, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10533, file: !10517, line: 246, column: 9)
!10533 = distinct !DILexicalBlock(scope: !10516, file: !10517, line: 245, column: 3)
!10534 = !DILocation(line: 246, column: 24, scope: !10532)
!10535 = !DILocation(line: 246, column: 37, scope: !10532)
!10536 = !DILocation(line: 246, column: 9, scope: !10533)
!10537 = distinct !{!10537, !10528, !10538}
!10538 = !DILocation(line: 250, column: 3, scope: !10516)
!10539 = !DILocation(line: 253, column: 3, scope: !10516)
!10540 = !DILocation(line: 256, column: 3, scope: !10516)
!10541 = !DILocation(line: 256, column: 10, scope: !10516)
!10542 = !DILocation(line: 256, column: 44, scope: !10516)
!10543 = !DILocation(line: 258, column: 10, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10545, file: !10517, line: 258, column: 9)
!10545 = distinct !DILexicalBlock(scope: !10516, file: !10517, line: 257, column: 3)
!10546 = !DILocation(line: 258, column: 24, scope: !10544)
!10547 = !DILocation(line: 258, column: 37, scope: !10544)
!10548 = !DILocation(line: 258, column: 9, scope: !10545)
!10549 = distinct !{!10549, !10540, !10550}
!10550 = !DILocation(line: 262, column: 3, scope: !10516)
!10551 = !DILocation(line: 265, column: 19, scope: !10516)
!10552 = !DILocation(line: 268, column: 25, scope: !10516)
!10553 = !DILocation(line: 268, column: 12, scope: !10516)
!10554 = !DILocation(line: 269, column: 13, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10516, file: !10517, line: 269, column: 6)
!10556 = !DILocation(line: 269, column: 6, scope: !10516)
!10557 = !DILocation(line: 275, column: 3, scope: !10516)
!10558 = !DILocation(line: 277, column: 3, scope: !10516)
!10559 = !DILocation(line: 280, column: 15, scope: !10516)
!10560 = !DILocation(line: 283, column: 3, scope: !10516)
!10561 = !DILocation(line: 283, column: 10, scope: !10516)
!10562 = !DILocation(line: 283, column: 43, scope: !10516)
!10563 = !DILocation(line: 285, column: 10, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10565, file: !10517, line: 285, column: 9)
!10565 = distinct !DILexicalBlock(scope: !10516, file: !10517, line: 284, column: 3)
!10566 = !DILocation(line: 285, column: 24, scope: !10564)
!10567 = !DILocation(line: 285, column: 37, scope: !10564)
!10568 = !DILocation(line: 285, column: 9, scope: !10565)
!10569 = distinct !{!10569, !10560, !10570}
!10570 = !DILocation(line: 289, column: 3, scope: !10516)
!10571 = !DILocation(line: 292, column: 3, scope: !10516)
!10572 = !DILocation(line: 295, column: 3, scope: !10516)
!10573 = !DILocation(line: 299, column: 3, scope: !10516)
!10574 = !DILocation(line: 305, column: 3, scope: !10516)
!10575 = !DILocation(line: 307, column: 3, scope: !10516)
!10576 = !DILocation(line: 308, column: 1, scope: !10516)
!10577 = !DISubprogram(name: "HAL_GetTick", scope: !10578, file: !10578, line: 945, type: !135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10578 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10579 = !DISubprogram(name: "HAL_InitTick", scope: !10578, file: !10578, line: 932, type: !10580, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10580 = !DISubroutineType(types: !10581)
!10581 = !{!10520, !137}
!10582 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10517, file: !10517, line: 324, type: !10583, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !10607)
!10583 = !DISubroutineType(types: !10584)
!10584 = !{!10520, !10585}
!10585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10586, size: 32)
!10586 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10587, line: 283, baseType: !10588)
!10587 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10587, line: 252, size: 416, elements: !10589)
!10589 = !{!10590, !10591, !10592, !10593, !10594, !10595, !10596, !10597, !10598, !10599}
!10590 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10588, file: !10587, line: 254, baseType: !137, size: 32)
!10591 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10588, file: !10587, line: 257, baseType: !137, size: 32, offset: 32)
!10592 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10588, file: !10587, line: 260, baseType: !137, size: 32, offset: 64)
!10593 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10588, file: !10587, line: 263, baseType: !137, size: 32, offset: 96)
!10594 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10588, file: !10587, line: 266, baseType: !137, size: 32, offset: 128)
!10595 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10588, file: !10587, line: 269, baseType: !137, size: 32, offset: 160)
!10596 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !10588, file: !10587, line: 272, baseType: !137, size: 32, offset: 192)
!10597 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !10588, file: !10587, line: 275, baseType: !137, size: 32, offset: 224)
!10598 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !10588, file: !10587, line: 278, baseType: !137, size: 32, offset: 256)
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10588, file: !10587, line: 281, baseType: !10600, size: 128, offset: 288)
!10600 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10587, line: 247, baseType: !10601)
!10601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10587, line: 234, size: 128, elements: !10602)
!10602 = !{!10603, !10604, !10605, !10606}
!10603 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10601, file: !10587, line: 236, baseType: !137, size: 32)
!10604 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10601, file: !10587, line: 239, baseType: !137, size: 32, offset: 32)
!10605 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !10601, file: !10587, line: 242, baseType: !137, size: 32, offset: 64)
!10606 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !10601, file: !10587, line: 245, baseType: !137, size: 32, offset: 96)
!10607 = !{!10608, !10609, !10610, !10611, !10612, !10613, !10617}
!10608 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10582, file: !10517, line: 324, type: !10585)
!10609 = !DILocalVariable(name: "tickstart", scope: !10582, file: !10517, line: 326, type: !137)
!10610 = !DILocalVariable(name: "status", scope: !10582, file: !10517, line: 327, type: !10520)
!10611 = !DILocalVariable(name: "sysclk_source", scope: !10582, file: !10517, line: 328, type: !137)
!10612 = !DILocalVariable(name: "pll_config", scope: !10582, file: !10517, line: 328, type: !137)
!10613 = !DILocalVariable(name: "pwrclkchanged", scope: !10614, file: !10517, line: 613, type: !10616)
!10614 = distinct !DILexicalBlock(scope: !10615, file: !10517, line: 612, column: 3)
!10615 = distinct !DILexicalBlock(scope: !10582, file: !10517, line: 611, column: 6)
!10616 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !776, line: 181, baseType: !2648)
!10617 = !DILocalVariable(name: "tmpreg", scope: !10618, file: !10517, line: 622, type: !176)
!10618 = distinct !DILexicalBlock(scope: !10619, file: !10517, line: 622, column: 7)
!10619 = distinct !DILexicalBlock(scope: !10620, file: !10517, line: 621, column: 5)
!10620 = distinct !DILexicalBlock(scope: !10614, file: !10517, line: 620, column: 8)
!10621 = !DILocation(line: 0, scope: !10582)
!10622 = !DILocation(line: 331, column: 24, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10582, file: !10517, line: 331, column: 6)
!10624 = !DILocation(line: 331, column: 6, scope: !10582)
!10625 = !DILocation(line: 338, column: 19, scope: !10582)
!10626 = !DILocation(line: 339, column: 16, scope: !10582)
!10627 = !DILocation(line: 342, column: 27, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10582, file: !10517, line: 342, column: 6)
!10629 = !DILocation(line: 342, column: 43, scope: !10628)
!10630 = !DILocation(line: 342, column: 69, scope: !10628)
!10631 = !DILocation(line: 342, column: 6, scope: !10582)
!10632 = !DILocation(line: 348, column: 23, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10634, file: !10517, line: 348, column: 8)
!10634 = distinct !DILexicalBlock(scope: !10628, file: !10517, line: 343, column: 3)
!10635 = !DILocation(line: 349, column: 8, scope: !10633)
!10636 = !DILocation(line: 349, column: 27, scope: !10633)
!10637 = !DILocation(line: 349, column: 62, scope: !10633)
!10638 = !DILocation(line: 351, column: 11, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10640, file: !10517, line: 351, column: 10)
!10640 = distinct !DILexicalBlock(scope: !10633, file: !10517, line: 350, column: 5)
!10641 = !DILocation(line: 351, column: 47, scope: !10639)
!10642 = !DILocation(line: 351, column: 54, scope: !10639)
!10643 = !DILocation(line: 351, column: 77, scope: !10639)
!10644 = !DILocation(line: 351, column: 86, scope: !10639)
!10645 = !DILocation(line: 351, column: 10, scope: !10640)
!10646 = !DILocation(line: 359, column: 7, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10648, file: !10517, line: 359, column: 7)
!10648 = distinct !DILexicalBlock(scope: !10649, file: !10517, line: 359, column: 7)
!10649 = distinct !DILexicalBlock(scope: !10633, file: !10517, line: 357, column: 5)
!10650 = !DILocation(line: 359, column: 7, scope: !10648)
!10651 = !DILocation(line: 359, column: 7, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10647, file: !10517, line: 359, column: 7)
!10653 = !DILocation(line: 359, column: 7, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10655, file: !10517, line: 359, column: 7)
!10655 = distinct !DILexicalBlock(scope: !10647, file: !10517, line: 359, column: 7)
!10656 = !DILocation(line: 359, column: 7, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10658, file: !10517, line: 359, column: 7)
!10658 = distinct !DILexicalBlock(scope: !10655, file: !10517, line: 359, column: 7)
!10659 = !DILocation(line: 359, column: 7, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10658, file: !10517, line: 359, column: 7)
!10661 = !DILocation(line: 0, scope: !10647)
!10662 = !DILocation(line: 362, column: 29, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10649, file: !10517, line: 362, column: 10)
!10664 = !DILocation(line: 362, column: 38, scope: !10663)
!10665 = !DILocation(line: 0, scope: !10663)
!10666 = !DILocation(line: 362, column: 10, scope: !10649)
!10667 = !DILocation(line: 368, column: 15, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10663, file: !10517, line: 363, column: 7)
!10669 = !DILocation(line: 368, column: 51, scope: !10668)
!10670 = !DILocation(line: 368, column: 9, scope: !10668)
!10671 = !DILocation(line: 370, column: 15, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10673, file: !10517, line: 370, column: 14)
!10673 = distinct !DILexicalBlock(scope: !10668, file: !10517, line: 369, column: 9)
!10674 = !DILocation(line: 370, column: 29, scope: !10672)
!10675 = !DILocation(line: 370, column: 43, scope: !10672)
!10676 = !DILocation(line: 370, column: 14, scope: !10673)
!10677 = distinct !{!10677, !10670, !10678}
!10678 = !DILocation(line: 374, column: 9, scope: !10668)
!10679 = !DILocation(line: 382, column: 15, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10663, file: !10517, line: 377, column: 7)
!10681 = !DILocation(line: 382, column: 51, scope: !10680)
!10682 = !DILocation(line: 382, column: 9, scope: !10680)
!10683 = !DILocation(line: 384, column: 16, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10685, file: !10517, line: 384, column: 15)
!10685 = distinct !DILexicalBlock(scope: !10680, file: !10517, line: 383, column: 9)
!10686 = !DILocation(line: 384, column: 30, scope: !10684)
!10687 = !DILocation(line: 384, column: 44, scope: !10684)
!10688 = !DILocation(line: 384, column: 15, scope: !10685)
!10689 = distinct !{!10689, !10682, !10690}
!10690 = !DILocation(line: 388, column: 9, scope: !10680)
!10691 = !DILocation(line: 393, column: 27, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10582, file: !10517, line: 393, column: 6)
!10693 = !DILocation(line: 393, column: 43, scope: !10692)
!10694 = !DILocation(line: 393, column: 69, scope: !10692)
!10695 = !DILocation(line: 393, column: 6, scope: !10582)
!10696 = !DILocation(line: 400, column: 23, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10698, file: !10517, line: 400, column: 8)
!10698 = distinct !DILexicalBlock(scope: !10692, file: !10517, line: 394, column: 3)
!10699 = !DILocation(line: 401, column: 8, scope: !10697)
!10700 = !DILocation(line: 401, column: 27, scope: !10697)
!10701 = !DILocation(line: 401, column: 62, scope: !10697)
!10702 = !DILocation(line: 404, column: 11, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10704, file: !10517, line: 404, column: 10)
!10704 = distinct !DILexicalBlock(scope: !10697, file: !10517, line: 402, column: 5)
!10705 = !DILocation(line: 404, column: 47, scope: !10703)
!10706 = !DILocation(line: 404, column: 54, scope: !10703)
!10707 = !DILocation(line: 404, column: 77, scope: !10703)
!10708 = !DILocation(line: 404, column: 86, scope: !10703)
!10709 = !DILocation(line: 404, column: 10, scope: !10704)
!10710 = !DILocation(line: 418, column: 29, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10712, file: !10517, line: 418, column: 10)
!10712 = distinct !DILexicalBlock(scope: !10697, file: !10517, line: 416, column: 5)
!10713 = !DILocation(line: 418, column: 38, scope: !10711)
!10714 = !DILocation(line: 418, column: 10, scope: !10712)
!10715 = !DILocation(line: 421, column: 9, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10711, file: !10517, line: 419, column: 7)
!10717 = !DILocation(line: 424, column: 21, scope: !10716)
!10718 = !DILocation(line: 427, column: 9, scope: !10716)
!10719 = !DILocation(line: 427, column: 15, scope: !10716)
!10720 = !DILocation(line: 427, column: 51, scope: !10716)
!10721 = !DILocation(line: 429, column: 15, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10723, file: !10517, line: 429, column: 14)
!10723 = distinct !DILexicalBlock(scope: !10716, file: !10517, line: 428, column: 9)
!10724 = !DILocation(line: 429, column: 29, scope: !10722)
!10725 = !DILocation(line: 429, column: 43, scope: !10722)
!10726 = !DILocation(line: 429, column: 14, scope: !10723)
!10727 = distinct !{!10727, !10718, !10728}
!10728 = !DILocation(line: 433, column: 9, scope: !10716)
!10729 = !DILocation(line: 441, column: 9, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10711, file: !10517, line: 439, column: 7)
!10731 = !DILocation(line: 444, column: 21, scope: !10730)
!10732 = !DILocation(line: 447, column: 9, scope: !10730)
!10733 = !DILocation(line: 447, column: 15, scope: !10730)
!10734 = !DILocation(line: 447, column: 51, scope: !10730)
!10735 = !DILocation(line: 449, column: 15, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10737, file: !10517, line: 449, column: 14)
!10737 = distinct !DILexicalBlock(scope: !10730, file: !10517, line: 448, column: 9)
!10738 = !DILocation(line: 449, column: 29, scope: !10736)
!10739 = !DILocation(line: 449, column: 43, scope: !10736)
!10740 = !DILocation(line: 449, column: 14, scope: !10737)
!10741 = distinct !{!10741, !10732, !10742}
!10742 = !DILocation(line: 453, column: 9, scope: !10730)
!10743 = !DILocation(line: 0, scope: !10697)
!10744 = !DILocation(line: 458, column: 27, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10582, file: !10517, line: 458, column: 6)
!10746 = !DILocation(line: 458, column: 43, scope: !10745)
!10747 = !DILocation(line: 458, column: 69, scope: !10745)
!10748 = !DILocation(line: 458, column: 6, scope: !10582)
!10749 = !DILocation(line: 461, column: 22, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10751, file: !10517, line: 461, column: 8)
!10751 = distinct !DILexicalBlock(scope: !10745, file: !10517, line: 459, column: 3)
!10752 = !DILocation(line: 461, column: 8, scope: !10751)
!10753 = !DILocation(line: 463, column: 11, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10755, file: !10517, line: 463, column: 10)
!10755 = distinct !DILexicalBlock(scope: !10750, file: !10517, line: 462, column: 5)
!10756 = !DILocation(line: 463, column: 47, scope: !10754)
!10757 = !DILocation(line: 463, column: 54, scope: !10754)
!10758 = !DILocation(line: 463, column: 77, scope: !10754)
!10759 = !DILocation(line: 463, column: 86, scope: !10754)
!10760 = !DILocation(line: 463, column: 10, scope: !10755)
!10761 = !DILocation(line: 477, column: 31, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10763, file: !10517, line: 477, column: 12)
!10763 = distinct !DILexicalBlock(scope: !10754, file: !10517, line: 469, column: 7)
!10764 = !DILocation(line: 477, column: 47, scope: !10762)
!10765 = !DILocation(line: 477, column: 45, scope: !10762)
!10766 = !DILocation(line: 477, column: 12, scope: !10763)
!10767 = !DILocation(line: 480, column: 14, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10769, file: !10517, line: 480, column: 14)
!10769 = distinct !DILexicalBlock(scope: !10762, file: !10517, line: 478, column: 9)
!10770 = !DILocation(line: 480, column: 80, scope: !10768)
!10771 = !DILocation(line: 480, column: 14, scope: !10769)
!10772 = !DILocation(line: 486, column: 11, scope: !10769)
!10773 = !DILocation(line: 488, column: 11, scope: !10769)
!10774 = !DILocation(line: 489, column: 9, scope: !10769)
!10775 = !DILocation(line: 494, column: 11, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10762, file: !10517, line: 491, column: 9)
!10777 = !DILocation(line: 496, column: 11, scope: !10776)
!10778 = !DILocation(line: 499, column: 65, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10776, file: !10517, line: 499, column: 14)
!10780 = !DILocation(line: 499, column: 14, scope: !10779)
!10781 = !DILocation(line: 499, column: 80, scope: !10779)
!10782 = !DILocation(line: 499, column: 14, scope: !10776)
!10783 = !DILocation(line: 506, column: 67, scope: !10763)
!10784 = !DILocation(line: 506, column: 81, scope: !10763)
!10785 = !DILocation(line: 506, column: 36, scope: !10763)
!10786 = !DILocation(line: 507, column: 52, scope: !10763)
!10787 = !DILocation(line: 507, column: 74, scope: !10763)
!10788 = !DILocation(line: 507, column: 31, scope: !10763)
!10789 = !DILocation(line: 507, column: 28, scope: !10763)
!10790 = !DILocation(line: 506, column: 25, scope: !10763)
!10791 = !DILocation(line: 510, column: 31, scope: !10763)
!10792 = !DILocation(line: 510, column: 18, scope: !10763)
!10793 = !DILocation(line: 511, column: 19, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10763, file: !10517, line: 511, column: 12)
!10795 = !DILocation(line: 511, column: 12, scope: !10763)
!10796 = !DILocation(line: 523, column: 29, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10798, file: !10517, line: 523, column: 10)
!10798 = distinct !DILexicalBlock(scope: !10750, file: !10517, line: 518, column: 5)
!10799 = !DILocation(line: 523, column: 38, scope: !10797)
!10800 = !DILocation(line: 523, column: 10, scope: !10798)
!10801 = !DILocation(line: 526, column: 9, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10797, file: !10517, line: 524, column: 7)
!10803 = !DILocation(line: 529, column: 21, scope: !10802)
!10804 = !DILocation(line: 532, column: 9, scope: !10802)
!10805 = !DILocation(line: 532, column: 15, scope: !10802)
!10806 = !DILocation(line: 532, column: 51, scope: !10802)
!10807 = !DILocation(line: 534, column: 15, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10809, file: !10517, line: 534, column: 14)
!10809 = distinct !DILexicalBlock(scope: !10802, file: !10517, line: 533, column: 9)
!10810 = !DILocation(line: 534, column: 29, scope: !10808)
!10811 = !DILocation(line: 534, column: 42, scope: !10808)
!10812 = !DILocation(line: 534, column: 14, scope: !10809)
!10813 = distinct !{!10813, !10804, !10814}
!10814 = !DILocation(line: 538, column: 9, scope: !10802)
!10815 = !DILocation(line: 544, column: 9, scope: !10802)
!10816 = !DILocation(line: 546, column: 9, scope: !10802)
!10817 = !DILocation(line: 548, column: 7, scope: !10802)
!10818 = !DILocation(line: 552, column: 9, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10797, file: !10517, line: 550, column: 7)
!10820 = !DILocation(line: 555, column: 21, scope: !10819)
!10821 = !DILocation(line: 558, column: 9, scope: !10819)
!10822 = !DILocation(line: 558, column: 15, scope: !10819)
!10823 = !DILocation(line: 558, column: 51, scope: !10819)
!10824 = !DILocation(line: 560, column: 15, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10826, file: !10517, line: 560, column: 14)
!10826 = distinct !DILexicalBlock(scope: !10819, file: !10517, line: 559, column: 9)
!10827 = !DILocation(line: 560, column: 29, scope: !10825)
!10828 = !DILocation(line: 560, column: 42, scope: !10825)
!10829 = !DILocation(line: 560, column: 14, scope: !10826)
!10830 = distinct !{!10830, !10821, !10831}
!10831 = !DILocation(line: 564, column: 9, scope: !10819)
!10832 = !DILocation(line: 569, column: 27, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10582, file: !10517, line: 569, column: 6)
!10834 = !DILocation(line: 569, column: 43, scope: !10833)
!10835 = !DILocation(line: 569, column: 69, scope: !10833)
!10836 = !DILocation(line: 569, column: 6, scope: !10582)
!10837 = !DILocation(line: 575, column: 27, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10839, file: !10517, line: 575, column: 8)
!10839 = distinct !DILexicalBlock(scope: !10833, file: !10517, line: 570, column: 3)
!10840 = !DILocation(line: 575, column: 36, scope: !10838)
!10841 = !DILocation(line: 575, column: 8, scope: !10839)
!10842 = !DILocation(line: 578, column: 7, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10838, file: !10517, line: 576, column: 5)
!10844 = !DILocation(line: 581, column: 19, scope: !10843)
!10845 = !DILocation(line: 584, column: 7, scope: !10843)
!10846 = !DILocation(line: 584, column: 13, scope: !10843)
!10847 = !DILocation(line: 584, column: 49, scope: !10843)
!10848 = !DILocation(line: 586, column: 13, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10850, file: !10517, line: 586, column: 12)
!10850 = distinct !DILexicalBlock(scope: !10843, file: !10517, line: 585, column: 7)
!10851 = !DILocation(line: 586, column: 27, scope: !10849)
!10852 = !DILocation(line: 586, column: 41, scope: !10849)
!10853 = !DILocation(line: 586, column: 12, scope: !10850)
!10854 = distinct !{!10854, !10845, !10855}
!10855 = !DILocation(line: 590, column: 7, scope: !10843)
!10856 = !DILocation(line: 595, column: 7, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10838, file: !10517, line: 593, column: 5)
!10858 = !DILocation(line: 598, column: 19, scope: !10857)
!10859 = !DILocation(line: 601, column: 7, scope: !10857)
!10860 = !DILocation(line: 601, column: 13, scope: !10857)
!10861 = !DILocation(line: 601, column: 49, scope: !10857)
!10862 = !DILocation(line: 603, column: 13, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10864, file: !10517, line: 603, column: 12)
!10864 = distinct !DILexicalBlock(scope: !10857, file: !10517, line: 602, column: 7)
!10865 = !DILocation(line: 603, column: 27, scope: !10863)
!10866 = !DILocation(line: 603, column: 41, scope: !10863)
!10867 = !DILocation(line: 603, column: 12, scope: !10864)
!10868 = distinct !{!10868, !10859, !10869}
!10869 = !DILocation(line: 607, column: 7, scope: !10857)
!10870 = !DILocation(line: 611, column: 27, scope: !10615)
!10871 = !DILocation(line: 611, column: 43, scope: !10615)
!10872 = !DILocation(line: 611, column: 69, scope: !10615)
!10873 = !DILocation(line: 611, column: 6, scope: !10582)
!10874 = !DILocation(line: 0, scope: !10614)
!10875 = !DILocation(line: 620, column: 8, scope: !10620)
!10876 = !DILocation(line: 620, column: 8, scope: !10614)
!10877 = !DILocation(line: 622, column: 7, scope: !10618)
!10878 = !DILocation(line: 622, column: 7, scope: !10619)
!10879 = !DILocation(line: 624, column: 5, scope: !10619)
!10880 = !DILocation(line: 626, column: 8, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10614, file: !10517, line: 626, column: 8)
!10882 = !DILocation(line: 626, column: 8, scope: !10614)
!10883 = !DILocation(line: 629, column: 7, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10881, file: !10517, line: 627, column: 5)
!10885 = !DILocation(line: 632, column: 19, scope: !10884)
!10886 = !DILocation(line: 634, column: 7, scope: !10884)
!10887 = !DILocation(line: 634, column: 13, scope: !10884)
!10888 = !DILocation(line: 636, column: 13, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10890, file: !10517, line: 636, column: 12)
!10890 = distinct !DILexicalBlock(scope: !10884, file: !10517, line: 635, column: 7)
!10891 = !DILocation(line: 636, column: 27, scope: !10889)
!10892 = !DILocation(line: 636, column: 40, scope: !10889)
!10893 = !DILocation(line: 636, column: 12, scope: !10890)
!10894 = distinct !{!10894, !10886, !10895}
!10895 = !DILocation(line: 640, column: 7, scope: !10884)
!10896 = !DILocation(line: 644, column: 5, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10898, file: !10517, line: 644, column: 5)
!10898 = distinct !DILexicalBlock(scope: !10614, file: !10517, line: 644, column: 5)
!10899 = !DILocation(line: 644, column: 5, scope: !10898)
!10900 = !DILocation(line: 644, column: 5, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10897, file: !10517, line: 644, column: 5)
!10902 = !DILocation(line: 644, column: 5, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10904, file: !10517, line: 644, column: 5)
!10904 = distinct !DILexicalBlock(scope: !10897, file: !10517, line: 644, column: 5)
!10905 = !DILocation(line: 644, column: 5, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10907, file: !10517, line: 644, column: 5)
!10907 = distinct !DILexicalBlock(scope: !10904, file: !10517, line: 644, column: 5)
!10908 = !DILocation(line: 644, column: 5, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10907, file: !10517, line: 644, column: 5)
!10910 = !DILocation(line: 0, scope: !10897)
!10911 = !DILocation(line: 646, column: 27, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10614, file: !10517, line: 646, column: 8)
!10913 = !DILocation(line: 646, column: 36, scope: !10912)
!10914 = !DILocation(line: 0, scope: !10912)
!10915 = !DILocation(line: 646, column: 8, scope: !10614)
!10916 = !DILocation(line: 652, column: 13, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10912, file: !10517, line: 647, column: 5)
!10918 = !DILocation(line: 652, column: 49, scope: !10917)
!10919 = !DILocation(line: 652, column: 7, scope: !10917)
!10920 = !DILocation(line: 654, column: 13, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10922, file: !10517, line: 654, column: 12)
!10922 = distinct !DILexicalBlock(scope: !10917, file: !10517, line: 653, column: 7)
!10923 = !DILocation(line: 654, column: 27, scope: !10921)
!10924 = !DILocation(line: 654, column: 41, scope: !10921)
!10925 = !DILocation(line: 654, column: 12, scope: !10922)
!10926 = distinct !{!10926, !10919, !10927}
!10927 = !DILocation(line: 658, column: 7, scope: !10917)
!10928 = !DILocation(line: 666, column: 13, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10912, file: !10517, line: 661, column: 5)
!10930 = !DILocation(line: 666, column: 49, scope: !10929)
!10931 = !DILocation(line: 666, column: 7, scope: !10929)
!10932 = !DILocation(line: 668, column: 13, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10934, file: !10517, line: 668, column: 12)
!10934 = distinct !DILexicalBlock(scope: !10929, file: !10517, line: 667, column: 7)
!10935 = !DILocation(line: 668, column: 27, scope: !10933)
!10936 = !DILocation(line: 668, column: 41, scope: !10933)
!10937 = !DILocation(line: 668, column: 12, scope: !10934)
!10938 = distinct !{!10938, !10931, !10939}
!10939 = !DILocation(line: 672, column: 7, scope: !10929)
!10940 = !DILocation(line: 676, column: 8, scope: !10614)
!10941 = !DILocation(line: 678, column: 7, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !10517, line: 677, column: 5)
!10943 = distinct !DILexicalBlock(scope: !10614, file: !10517, line: 676, column: 8)
!10944 = !DILocation(line: 679, column: 5, scope: !10942)
!10945 = !DILocation(line: 685, column: 31, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10582, file: !10517, line: 685, column: 7)
!10947 = !DILocation(line: 685, column: 41, scope: !10946)
!10948 = !DILocation(line: 685, column: 7, scope: !10582)
!10949 = !DILocation(line: 688, column: 22, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10951, file: !10517, line: 688, column: 8)
!10951 = distinct !DILexicalBlock(scope: !10946, file: !10517, line: 686, column: 3)
!10952 = !DILocation(line: 688, column: 8, scope: !10951)
!10953 = !DILocation(line: 690, column: 44, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10955, file: !10517, line: 690, column: 10)
!10955 = distinct !DILexicalBlock(scope: !10950, file: !10517, line: 689, column: 5)
!10956 = !DILocation(line: 0, scope: !10954)
!10957 = !DILocation(line: 690, column: 10, scope: !10955)
!10958 = !DILocation(line: 704, column: 15, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10954, file: !10517, line: 691, column: 7)
!10960 = !DILocation(line: 704, column: 51, scope: !10959)
!10961 = !DILocation(line: 704, column: 9, scope: !10959)
!10962 = !DILocation(line: 706, column: 15, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10964, file: !10517, line: 706, column: 14)
!10964 = distinct !DILexicalBlock(scope: !10959, file: !10517, line: 705, column: 9)
!10965 = !DILocation(line: 706, column: 29, scope: !10963)
!10966 = !DILocation(line: 706, column: 43, scope: !10963)
!10967 = !DILocation(line: 706, column: 14, scope: !10964)
!10968 = distinct !{!10968, !10961, !10969}
!10969 = !DILocation(line: 710, column: 9, scope: !10959)
!10970 = !DILocation(line: 713, column: 9, scope: !10959)
!10971 = !DILocation(line: 717, column: 9, scope: !10959)
!10972 = !DILocation(line: 720, column: 21, scope: !10959)
!10973 = !DILocation(line: 723, column: 9, scope: !10959)
!10974 = !DILocation(line: 723, column: 15, scope: !10959)
!10975 = !DILocation(line: 723, column: 51, scope: !10959)
!10976 = !DILocation(line: 725, column: 15, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10978, file: !10517, line: 725, column: 14)
!10978 = distinct !DILexicalBlock(scope: !10959, file: !10517, line: 724, column: 9)
!10979 = !DILocation(line: 725, column: 29, scope: !10977)
!10980 = !DILocation(line: 725, column: 43, scope: !10977)
!10981 = !DILocation(line: 725, column: 14, scope: !10978)
!10982 = distinct !{!10982, !10973, !10983}
!10983 = !DILocation(line: 729, column: 9, scope: !10959)
!10984 = !DILocation(line: 740, column: 15, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10954, file: !10517, line: 732, column: 7)
!10986 = !DILocation(line: 740, column: 51, scope: !10985)
!10987 = !DILocation(line: 740, column: 9, scope: !10985)
!10988 = !DILocation(line: 742, column: 15, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10990, file: !10517, line: 742, column: 14)
!10990 = distinct !DILexicalBlock(scope: !10985, file: !10517, line: 741, column: 9)
!10991 = !DILocation(line: 742, column: 29, scope: !10989)
!10992 = !DILocation(line: 742, column: 43, scope: !10989)
!10993 = !DILocation(line: 742, column: 14, scope: !10990)
!10994 = distinct !{!10994, !10987, !10995}
!10995 = !DILocation(line: 746, column: 9, scope: !10985)
!10996 = !DILocation(line: 752, column: 44, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !10517, line: 752, column: 10)
!10998 = distinct !DILexicalBlock(scope: !10950, file: !10517, line: 750, column: 5)
!10999 = !DILocation(line: 752, column: 10, scope: !10998)
!11000 = !DILocation(line: 759, column: 27, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10997, file: !10517, line: 757, column: 7)
!11002 = !DILocation(line: 760, column: 13, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !11001, file: !10517, line: 760, column: 12)
!11004 = !DILocation(line: 760, column: 77, scope: !11003)
!11005 = !DILocation(line: 760, column: 51, scope: !11003)
!11006 = !DILocation(line: 760, column: 88, scope: !11003)
!11007 = !DILocation(line: 761, column: 13, scope: !11003)
!11008 = !DILocation(line: 761, column: 77, scope: !11003)
!11009 = !DILocation(line: 761, column: 51, scope: !11003)
!11010 = !DILocation(line: 761, column: 85, scope: !11003)
!11011 = !DILocation(line: 762, column: 13, scope: !11003)
!11012 = !DILocation(line: 762, column: 77, scope: !11003)
!11013 = !DILocation(line: 762, column: 51, scope: !11003)
!11014 = !DILocation(line: 760, column: 12, scope: !11001)
!11015 = !DILocation(line: 770, column: 3, scope: !10582)
!11016 = !DILocation(line: 771, column: 1, scope: !10582)
!11017 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !10517, file: !10517, line: 1343, type: !10580, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !11018)
!11018 = !{!11019, !11020, !11021, !11022}
!11019 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !11017, file: !10517, line: 1343, type: !137)
!11020 = !DILocalVariable(name: "vos", scope: !11017, file: !10517, line: 1345, type: !137)
!11021 = !DILocalVariable(name: "latency", scope: !11017, file: !10517, line: 1346, type: !137)
!11022 = !DILocalVariable(name: "tmpreg", scope: !11023, file: !10517, line: 1357, type: !176)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !10517, line: 1357, column: 7)
!11024 = distinct !DILexicalBlock(scope: !11025, file: !10517, line: 1356, column: 5)
!11025 = distinct !DILexicalBlock(scope: !11026, file: !10517, line: 1351, column: 8)
!11026 = distinct !DILexicalBlock(scope: !11027, file: !10517, line: 1350, column: 3)
!11027 = distinct !DILexicalBlock(scope: !11017, file: !10517, line: 1349, column: 7)
!11028 = !DILocation(line: 0, scope: !11017)
!11029 = !DILocation(line: 1349, column: 7, scope: !11027)
!11030 = !DILocation(line: 1349, column: 42, scope: !11027)
!11031 = !DILocation(line: 1349, column: 7, scope: !11017)
!11032 = !DILocation(line: 1351, column: 8, scope: !11025)
!11033 = !DILocation(line: 1351, column: 8, scope: !11026)
!11034 = !DILocation(line: 1353, column: 13, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11025, file: !10517, line: 1352, column: 5)
!11036 = !DILocation(line: 1354, column: 5, scope: !11035)
!11037 = !DILocation(line: 1357, column: 7, scope: !11023)
!11038 = !DILocation(line: 1357, column: 7, scope: !11024)
!11039 = !DILocation(line: 1358, column: 13, scope: !11024)
!11040 = !DILocation(line: 1359, column: 7, scope: !11024)
!11041 = !DILocation(line: 0, scope: !11025)
!11042 = !DILocation(line: 1363, column: 13, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11026, file: !10517, line: 1363, column: 8)
!11044 = !DILocation(line: 1363, column: 46, scope: !11043)
!11045 = !DILocation(line: 1369, column: 3, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11017, file: !10517, line: 1369, column: 3)
!11047 = !DILocation(line: 1369, column: 3, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11049, file: !10517, line: 1369, column: 3)
!11049 = distinct !DILexicalBlock(scope: !11046, file: !10517, line: 1369, column: 3)
!11050 = !DILocation(line: 1373, column: 6, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11017, file: !10517, line: 1373, column: 6)
!11052 = !DILocation(line: 1379, column: 1, scope: !11017)
!11053 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10517, file: !10517, line: 799, type: !11054, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !11065)
!11054 = !DISubroutineType(types: !11055)
!11055 = !{!10520, !11056, !137}
!11056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11057, size: 32)
!11057 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10587, line: 304, baseType: !11058)
!11058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10587, line: 288, size: 160, elements: !11059)
!11059 = !{!11060, !11061, !11062, !11063, !11064}
!11060 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11058, file: !10587, line: 290, baseType: !137, size: 32)
!11061 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11058, file: !10587, line: 293, baseType: !137, size: 32, offset: 32)
!11062 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11058, file: !10587, line: 296, baseType: !137, size: 32, offset: 64)
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11058, file: !10587, line: 299, baseType: !137, size: 32, offset: 96)
!11064 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11058, file: !10587, line: 302, baseType: !137, size: 32, offset: 128)
!11065 = !{!11066, !11067, !11068, !11069}
!11066 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11053, file: !10517, line: 799, type: !11056)
!11067 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11053, file: !10517, line: 799, type: !137)
!11068 = !DILocalVariable(name: "tickstart", scope: !11053, file: !10517, line: 801, type: !137)
!11069 = !DILocalVariable(name: "status", scope: !11053, file: !10517, line: 802, type: !10520)
!11070 = !DILocation(line: 0, scope: !11053)
!11071 = !DILocation(line: 805, column: 24, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11053, file: !10517, line: 805, column: 6)
!11073 = !DILocation(line: 805, column: 6, scope: !11053)
!11074 = !DILocation(line: 817, column: 17, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11053, file: !10517, line: 817, column: 6)
!11076 = !DILocation(line: 817, column: 15, scope: !11075)
!11077 = !DILocation(line: 817, column: 6, scope: !11053)
!11078 = !DILocation(line: 820, column: 5, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11080, file: !10517, line: 820, column: 5)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !10517, line: 820, column: 5)
!11081 = distinct !DILexicalBlock(scope: !11075, file: !10517, line: 818, column: 3)
!11082 = !DILocation(line: 820, column: 5, scope: !11080)
!11083 = !DILocation(line: 820, column: 5, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11079, file: !10517, line: 820, column: 5)
!11085 = !DILocation(line: 824, column: 8, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11081, file: !10517, line: 824, column: 8)
!11087 = !DILocation(line: 824, column: 34, scope: !11086)
!11088 = !DILocation(line: 824, column: 8, scope: !11081)
!11089 = !DILocation(line: 831, column: 27, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11053, file: !10517, line: 831, column: 6)
!11091 = !DILocation(line: 831, column: 38, scope: !11090)
!11092 = !DILocation(line: 831, column: 60, scope: !11090)
!11093 = !DILocation(line: 831, column: 6, scope: !11053)
!11094 = !DILocation(line: 834, column: 5, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11090, file: !10517, line: 832, column: 3)
!11096 = !DILocation(line: 838, column: 27, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11053, file: !10517, line: 838, column: 6)
!11098 = !DILocation(line: 835, column: 3, scope: !11095)
!11099 = !DILocation(line: 838, column: 38, scope: !11097)
!11100 = !DILocation(line: 838, column: 62, scope: !11097)
!11101 = !DILocation(line: 838, column: 6, scope: !11053)
!11102 = !DILocation(line: 843, column: 27, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11104, file: !10517, line: 843, column: 8)
!11104 = distinct !DILexicalBlock(scope: !11097, file: !10517, line: 839, column: 3)
!11105 = !DILocation(line: 843, column: 8, scope: !11104)
!11106 = !DILocation(line: 846, column: 10, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11108, file: !10517, line: 846, column: 10)
!11108 = distinct !DILexicalBlock(scope: !11103, file: !10517, line: 844, column: 5)
!11109 = !DILocation(line: 846, column: 46, scope: !11107)
!11110 = !DILocation(line: 846, column: 10, scope: !11108)
!11111 = !DILocation(line: 855, column: 10, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11113, file: !10517, line: 855, column: 10)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !10517, line: 853, column: 5)
!11114 = distinct !DILexicalBlock(scope: !11103, file: !10517, line: 852, column: 13)
!11115 = !DILocation(line: 855, column: 46, scope: !11112)
!11116 = !DILocation(line: 855, column: 10, scope: !11113)
!11117 = !DILocation(line: 864, column: 10, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11119, file: !10517, line: 864, column: 10)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !10517, line: 862, column: 5)
!11120 = distinct !DILexicalBlock(scope: !11114, file: !10517, line: 861, column: 13)
!11121 = !DILocation(line: 864, column: 46, scope: !11118)
!11122 = !DILocation(line: 864, column: 10, scope: !11119)
!11123 = !DILocation(line: 873, column: 10, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11125, file: !10517, line: 873, column: 10)
!11125 = distinct !DILexicalBlock(scope: !11120, file: !10517, line: 871, column: 5)
!11126 = !DILocation(line: 873, column: 46, scope: !11124)
!11127 = !DILocation(line: 873, column: 10, scope: !11125)
!11128 = !DILocation(line: 878, column: 5, scope: !11104)
!11129 = !DILocation(line: 881, column: 17, scope: !11104)
!11130 = !DILocation(line: 883, column: 27, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11104, file: !10517, line: 883, column: 8)
!11132 = !DILocation(line: 883, column: 8, scope: !11104)
!11133 = !DILocation(line: 885, column: 14, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11131, file: !10517, line: 884, column: 5)
!11135 = !DILocation(line: 885, column: 44, scope: !11134)
!11136 = !DILocation(line: 885, column: 7, scope: !11134)
!11137 = !DILocation(line: 887, column: 13, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11139, file: !10517, line: 887, column: 12)
!11139 = distinct !DILexicalBlock(scope: !11134, file: !10517, line: 886, column: 7)
!11140 = !DILocation(line: 887, column: 27, scope: !11138)
!11141 = !DILocation(line: 887, column: 41, scope: !11138)
!11142 = !DILocation(line: 887, column: 12, scope: !11139)
!11143 = distinct !{!11143, !11136, !11144}
!11144 = !DILocation(line: 891, column: 7, scope: !11134)
!11145 = !DILocation(line: 895, column: 14, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11147, file: !10517, line: 894, column: 5)
!11147 = distinct !DILexicalBlock(scope: !11131, file: !10517, line: 893, column: 13)
!11148 = !DILocation(line: 895, column: 44, scope: !11146)
!11149 = !DILocation(line: 895, column: 7, scope: !11146)
!11150 = !DILocation(line: 897, column: 13, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11152, file: !10517, line: 897, column: 12)
!11152 = distinct !DILexicalBlock(scope: !11146, file: !10517, line: 896, column: 7)
!11153 = !DILocation(line: 897, column: 27, scope: !11151)
!11154 = !DILocation(line: 897, column: 41, scope: !11151)
!11155 = !DILocation(line: 897, column: 12, scope: !11152)
!11156 = distinct !{!11156, !11149, !11157}
!11157 = !DILocation(line: 901, column: 7, scope: !11146)
!11158 = !DILocation(line: 905, column: 14, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11160, file: !10517, line: 904, column: 5)
!11160 = distinct !DILexicalBlock(scope: !11147, file: !10517, line: 903, column: 13)
!11161 = !DILocation(line: 905, column: 44, scope: !11159)
!11162 = !DILocation(line: 905, column: 7, scope: !11159)
!11163 = !DILocation(line: 907, column: 13, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11165, file: !10517, line: 907, column: 12)
!11165 = distinct !DILexicalBlock(scope: !11159, file: !10517, line: 906, column: 7)
!11166 = !DILocation(line: 907, column: 27, scope: !11164)
!11167 = !DILocation(line: 907, column: 41, scope: !11164)
!11168 = !DILocation(line: 907, column: 12, scope: !11165)
!11169 = distinct !{!11169, !11162, !11170}
!11170 = !DILocation(line: 911, column: 7, scope: !11159)
!11171 = !DILocation(line: 915, column: 13, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11160, file: !10517, line: 914, column: 5)
!11173 = !DILocation(line: 915, column: 43, scope: !11172)
!11174 = !DILocation(line: 915, column: 7, scope: !11172)
!11175 = !DILocation(line: 917, column: 13, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11177, file: !10517, line: 917, column: 12)
!11177 = distinct !DILexicalBlock(scope: !11172, file: !10517, line: 916, column: 7)
!11178 = !DILocation(line: 917, column: 27, scope: !11176)
!11179 = !DILocation(line: 917, column: 41, scope: !11176)
!11180 = !DILocation(line: 917, column: 12, scope: !11177)
!11181 = distinct !{!11181, !11174, !11182}
!11182 = !DILocation(line: 921, column: 7, scope: !11172)
!11183 = !DILocation(line: 925, column: 17, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11053, file: !10517, line: 925, column: 6)
!11185 = !DILocation(line: 925, column: 15, scope: !11184)
!11186 = !DILocation(line: 925, column: 6, scope: !11053)
!11187 = !DILocation(line: 928, column: 5, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11189, file: !10517, line: 928, column: 5)
!11189 = distinct !DILexicalBlock(scope: !11184, file: !10517, line: 926, column: 3)
!11190 = !DILocation(line: 932, column: 8, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11189, file: !10517, line: 932, column: 8)
!11192 = !DILocation(line: 932, column: 34, scope: !11191)
!11193 = !DILocation(line: 932, column: 8, scope: !11189)
!11194 = !DILocation(line: 939, column: 27, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11053, file: !10517, line: 939, column: 6)
!11196 = !DILocation(line: 939, column: 38, scope: !11195)
!11197 = !DILocation(line: 939, column: 61, scope: !11195)
!11198 = !DILocation(line: 939, column: 6, scope: !11053)
!11199 = !DILocation(line: 942, column: 5, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11195, file: !10517, line: 940, column: 3)
!11201 = !DILocation(line: 946, column: 27, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11053, file: !10517, line: 946, column: 6)
!11203 = !DILocation(line: 943, column: 3, scope: !11200)
!11204 = !DILocation(line: 946, column: 38, scope: !11202)
!11205 = !DILocation(line: 946, column: 61, scope: !11202)
!11206 = !DILocation(line: 946, column: 6, scope: !11053)
!11207 = !DILocation(line: 949, column: 5, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11202, file: !10517, line: 947, column: 3)
!11209 = !DILocation(line: 950, column: 3, scope: !11208)
!11210 = !DILocation(line: 953, column: 21, scope: !11053)
!11211 = !DILocation(line: 953, column: 70, scope: !11053)
!11212 = !DILocation(line: 953, column: 91, scope: !11053)
!11213 = !DILocation(line: 953, column: 50, scope: !11053)
!11214 = !DILocation(line: 953, column: 47, scope: !11053)
!11215 = !DILocation(line: 953, column: 19, scope: !11053)
!11216 = !DILocation(line: 956, column: 25, scope: !11053)
!11217 = !DILocation(line: 956, column: 12, scope: !11053)
!11218 = !DILocation(line: 958, column: 3, scope: !11053)
!11219 = !DILocation(line: 959, column: 1, scope: !11053)
!11220 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10517, file: !10517, line: 1083, type: !135, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !11221)
!11221 = !{!11222, !11223, !11224, !11225, !11226, !11227}
!11222 = !DILocalVariable(name: "tmpreg", scope: !11220, file: !10517, line: 1085, type: !137)
!11223 = !DILocalVariable(name: "pllm", scope: !11220, file: !10517, line: 1085, type: !137)
!11224 = !DILocalVariable(name: "plld", scope: !11220, file: !10517, line: 1085, type: !137)
!11225 = !DILocalVariable(name: "pllvco", scope: !11220, file: !10517, line: 1085, type: !137)
!11226 = !DILocalVariable(name: "msiclkrange", scope: !11220, file: !10517, line: 1085, type: !137)
!11227 = !DILocalVariable(name: "sysclockfreq", scope: !11220, file: !10517, line: 1085, type: !137)
!11228 = !DILocation(line: 1087, column: 17, scope: !11220)
!11229 = !DILocation(line: 0, scope: !11220)
!11230 = !DILocation(line: 1090, column: 3, scope: !11220)
!11231 = !DILocation(line: 1100, column: 7, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11233, file: !10517, line: 1098, column: 5)
!11233 = distinct !DILexicalBlock(scope: !11220, file: !10517, line: 1091, column: 3)
!11234 = !DILocation(line: 1104, column: 63, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11233, file: !10517, line: 1103, column: 5)
!11236 = !DILocation(line: 1104, column: 14, scope: !11235)
!11237 = !DILocation(line: 1105, column: 52, scope: !11235)
!11238 = !DILocation(line: 1105, column: 76, scope: !11235)
!11239 = !DILocation(line: 1106, column: 11, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11235, file: !10517, line: 1106, column: 11)
!11241 = !DILocation(line: 1106, column: 41, scope: !11240)
!11242 = !DILocation(line: 1106, column: 11, scope: !11235)
!11243 = !DILocation(line: 0, scope: !11240)
!11244 = !DILocation(line: 1117, column: 7, scope: !11235)
!11245 = !DILocation(line: 1122, column: 27, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11233, file: !10517, line: 1121, column: 5)
!11247 = !DILocation(line: 1122, column: 56, scope: !11246)
!11248 = !DILocation(line: 1123, column: 30, scope: !11246)
!11249 = !DILocation(line: 1124, column: 7, scope: !11246)
!11250 = !DILocation(line: 0, scope: !11233)
!11251 = !DILocation(line: 1127, column: 3, scope: !11220)
!11252 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10517, file: !10517, line: 1005, type: !8435, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !11253)
!11253 = !{!11254, !11255, !11256, !11257, !11267}
!11254 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11252, file: !10517, line: 1005, type: !137)
!11255 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11252, file: !10517, line: 1005, type: !137)
!11256 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11252, file: !10517, line: 1005, type: !137)
!11257 = !DILocalVariable(name: "gpio", scope: !11252, file: !10517, line: 1007, type: !11258)
!11258 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11259, line: 64, baseType: !11260)
!11259 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11259, line: 48, size: 160, elements: !11261)
!11261 = !{!11262, !11263, !11264, !11265, !11266}
!11262 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11260, file: !11259, line: 50, baseType: !137, size: 32)
!11263 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11260, file: !11259, line: 53, baseType: !137, size: 32, offset: 32)
!11264 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11260, file: !11259, line: 56, baseType: !137, size: 32, offset: 64)
!11265 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11260, file: !11259, line: 59, baseType: !137, size: 32, offset: 96)
!11266 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11260, file: !11259, line: 62, baseType: !137, size: 32, offset: 128)
!11267 = !DILocalVariable(name: "tmpreg", scope: !11268, file: !10517, line: 1022, type: !176)
!11268 = distinct !DILexicalBlock(scope: !11252, file: !10517, line: 1022, column: 3)
!11269 = !DILocation(line: 0, scope: !11252)
!11270 = !DILocation(line: 1007, column: 3, scope: !11252)
!11271 = !DILocation(line: 1007, column: 20, scope: !11252)
!11272 = !DILocation(line: 1015, column: 8, scope: !11252)
!11273 = !DILocation(line: 1015, column: 18, scope: !11252)
!11274 = !DILocation(line: 1016, column: 8, scope: !11252)
!11275 = !DILocation(line: 1016, column: 18, scope: !11252)
!11276 = !DILocation(line: 1017, column: 8, scope: !11252)
!11277 = !DILocation(line: 1017, column: 18, scope: !11252)
!11278 = !DILocation(line: 1018, column: 8, scope: !11252)
!11279 = !DILocation(line: 1018, column: 18, scope: !11252)
!11280 = !DILocation(line: 1019, column: 8, scope: !11252)
!11281 = !DILocation(line: 1019, column: 18, scope: !11252)
!11282 = !DILocation(line: 1022, column: 3, scope: !11268)
!11283 = !DILocation(line: 1022, column: 3, scope: !11252)
!11284 = !DILocation(line: 1024, column: 3, scope: !11252)
!11285 = !DILocation(line: 1027, column: 3, scope: !11252)
!11286 = !DILocation(line: 1028, column: 1, scope: !11252)
!11287 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11259, file: !11259, line: 293, type: !11288, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11288 = !DISubroutineType(types: !11289)
!11289 = !{null, !2691, !11290}
!11290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11258, size: 32)
!11291 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10517, file: !10517, line: 1039, type: !2794, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !162)
!11292 = !DILocation(line: 1041, column: 38, scope: !11291)
!11293 = !DILocation(line: 1042, column: 1, scope: !11291)
!11294 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10517, file: !10517, line: 1048, type: !2794, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !162)
!11295 = !DILocation(line: 1050, column: 38, scope: !11294)
!11296 = !DILocation(line: 1051, column: 1, scope: !11294)
!11297 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10517, file: !10517, line: 1139, type: !135, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !162)
!11298 = !DILocation(line: 1141, column: 10, scope: !11297)
!11299 = !DILocation(line: 1141, column: 3, scope: !11297)
!11300 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10517, file: !10517, line: 1150, type: !135, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !162)
!11301 = !DILocation(line: 1153, column: 11, scope: !11300)
!11302 = !DILocation(line: 1153, column: 56, scope: !11300)
!11303 = !DILocation(line: 1153, column: 79, scope: !11300)
!11304 = !DILocation(line: 1153, column: 36, scope: !11300)
!11305 = !DILocation(line: 1153, column: 33, scope: !11300)
!11306 = !DILocation(line: 1153, column: 3, scope: !11300)
!11307 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10517, file: !10517, line: 1162, type: !135, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !162)
!11308 = !DILocation(line: 1165, column: 11, scope: !11307)
!11309 = !DILocation(line: 1165, column: 55, scope: !11307)
!11310 = !DILocation(line: 1165, column: 78, scope: !11307)
!11311 = !DILocation(line: 1165, column: 35, scope: !11307)
!11312 = !DILocation(line: 1165, column: 32, scope: !11307)
!11313 = !DILocation(line: 1165, column: 3, scope: !11307)
!11314 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10517, file: !10517, line: 1175, type: !11315, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !11317)
!11315 = !DISubroutineType(types: !11316)
!11316 = !{null, !10585}
!11317 = !{!11318}
!11318 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11314, file: !10517, line: 1175, type: !10585)
!11319 = !DILocation(line: 0, scope: !11314)
!11320 = !DILocation(line: 1181, column: 22, scope: !11314)
!11321 = !DILocation(line: 1181, column: 37, scope: !11314)
!11322 = !DILocation(line: 1186, column: 12, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11314, file: !10517, line: 1186, column: 6)
!11324 = !DILocation(line: 1186, column: 15, scope: !11323)
!11325 = !DILocation(line: 1186, column: 31, scope: !11323)
!11326 = !DILocation(line: 1186, column: 6, scope: !11314)
!11327 = !DILocation(line: 1188, column: 24, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11323, file: !10517, line: 1187, column: 3)
!11329 = !DILocation(line: 1188, column: 33, scope: !11328)
!11330 = !DILocation(line: 1189, column: 3, scope: !11328)
!11331 = !DILocation(line: 1190, column: 17, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11323, file: !10517, line: 1190, column: 11)
!11333 = !DILocation(line: 1190, column: 20, scope: !11332)
!11334 = !DILocation(line: 1190, column: 35, scope: !11332)
!11335 = !DILocation(line: 0, scope: !11332)
!11336 = !DILocation(line: 1190, column: 11, scope: !11323)
!11337 = !DILocation(line: 1192, column: 33, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11332, file: !10517, line: 1191, column: 3)
!11339 = !DILocation(line: 1193, column: 3, scope: !11338)
!11340 = !DILocation(line: 1196, column: 33, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11332, file: !10517, line: 1195, column: 3)
!11342 = !DILocation(line: 1200, column: 12, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11314, file: !10517, line: 1200, column: 6)
!11344 = !DILocation(line: 1200, column: 15, scope: !11343)
!11345 = !DILocation(line: 1206, column: 24, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11343, file: !10517, line: 1205, column: 3)
!11347 = !DILocation(line: 1206, column: 33, scope: !11346)
!11348 = !DILocation(line: 1209, column: 61, scope: !11314)
!11349 = !DILocation(line: 1209, column: 88, scope: !11314)
!11350 = !DILocation(line: 1209, column: 22, scope: !11314)
!11351 = !DILocation(line: 1209, column: 42, scope: !11314)
!11352 = !DILocation(line: 1212, column: 12, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11314, file: !10517, line: 1212, column: 6)
!11354 = !DILocation(line: 1212, column: 6, scope: !11314)
!11355 = !DILocation(line: 1218, column: 24, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11353, file: !10517, line: 1217, column: 3)
!11357 = !DILocation(line: 1218, column: 33, scope: !11356)
!11358 = !DILocation(line: 1221, column: 61, scope: !11314)
!11359 = !DILocation(line: 1221, column: 88, scope: !11314)
!11360 = !DILocation(line: 1221, column: 22, scope: !11314)
!11361 = !DILocation(line: 1221, column: 42, scope: !11314)
!11362 = !DILocation(line: 1222, column: 55, scope: !11314)
!11363 = !DILocation(line: 1222, column: 61, scope: !11314)
!11364 = !DILocation(line: 1222, column: 22, scope: !11314)
!11365 = !DILocation(line: 1222, column: 36, scope: !11314)
!11366 = !DILocation(line: 1225, column: 12, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11314, file: !10517, line: 1225, column: 6)
!11368 = !DILocation(line: 1225, column: 16, scope: !11367)
!11369 = !DILocation(line: 1225, column: 33, scope: !11367)
!11370 = !DILocation(line: 1225, column: 6, scope: !11314)
!11371 = !DILocation(line: 1227, column: 24, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11367, file: !10517, line: 1226, column: 3)
!11373 = !DILocation(line: 1227, column: 33, scope: !11372)
!11374 = !DILocation(line: 1228, column: 3, scope: !11372)
!11375 = !DILocation(line: 1229, column: 17, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11367, file: !10517, line: 1229, column: 11)
!11377 = !DILocation(line: 1229, column: 21, scope: !11376)
!11378 = !DILocation(line: 1229, column: 37, scope: !11376)
!11379 = !DILocation(line: 0, scope: !11376)
!11380 = !DILocation(line: 1229, column: 11, scope: !11367)
!11381 = !DILocation(line: 1231, column: 33, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11376, file: !10517, line: 1230, column: 3)
!11383 = !DILocation(line: 1232, column: 3, scope: !11382)
!11384 = !DILocation(line: 1235, column: 33, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11376, file: !10517, line: 1234, column: 3)
!11386 = !DILocation(line: 1239, column: 12, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11314, file: !10517, line: 1239, column: 6)
!11388 = !DILocation(line: 1239, column: 16, scope: !11387)
!11389 = !DILocation(line: 1245, column: 24, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11387, file: !10517, line: 1244, column: 3)
!11391 = !DILocation(line: 1245, column: 33, scope: !11390)
!11392 = !DILocation(line: 1250, column: 12, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11314, file: !10517, line: 1250, column: 6)
!11394 = !DILocation(line: 1250, column: 15, scope: !11393)
!11395 = !DILocation(line: 1250, column: 30, scope: !11393)
!11396 = !DILocation(line: 1250, column: 6, scope: !11314)
!11397 = !DILocation(line: 1256, column: 28, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11393, file: !10517, line: 1255, column: 3)
!11399 = !DILocation(line: 1256, column: 37, scope: !11398)
!11400 = !DILocation(line: 1258, column: 54, scope: !11314)
!11401 = !DILocation(line: 1258, column: 59, scope: !11314)
!11402 = !DILocation(line: 1258, column: 26, scope: !11314)
!11403 = !DILocation(line: 1258, column: 36, scope: !11314)
!11404 = !DILocation(line: 1259, column: 51, scope: !11314)
!11405 = !DILocation(line: 1259, column: 56, scope: !11314)
!11406 = !DILocation(line: 1259, column: 26, scope: !11314)
!11407 = !DILocation(line: 1259, column: 33, scope: !11314)
!11408 = !DILocation(line: 1260, column: 51, scope: !11314)
!11409 = !DILocation(line: 1260, column: 56, scope: !11314)
!11410 = !DILocation(line: 1260, column: 26, scope: !11314)
!11411 = !DILocation(line: 1260, column: 33, scope: !11314)
!11412 = !DILocation(line: 1261, column: 1, scope: !11314)
!11413 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10517, file: !10517, line: 1271, type: !11414, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !11416)
!11414 = !DISubroutineType(types: !11415)
!11415 = !{null, !11056, !149}
!11416 = !{!11417, !11418}
!11417 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11413, file: !10517, line: 1271, type: !11056)
!11418 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11413, file: !10517, line: 1271, type: !149)
!11419 = !DILocation(line: 0, scope: !11413)
!11420 = !DILocation(line: 1278, column: 22, scope: !11413)
!11421 = !DILocation(line: 1278, column: 32, scope: !11413)
!11422 = !DILocation(line: 1281, column: 53, scope: !11413)
!11423 = !DILocation(line: 1281, column: 58, scope: !11413)
!11424 = !DILocation(line: 1281, column: 22, scope: !11413)
!11425 = !DILocation(line: 1281, column: 35, scope: !11413)
!11426 = !DILocation(line: 1284, column: 54, scope: !11413)
!11427 = !DILocation(line: 1284, column: 59, scope: !11413)
!11428 = !DILocation(line: 1284, column: 22, scope: !11413)
!11429 = !DILocation(line: 1284, column: 36, scope: !11413)
!11430 = !DILocation(line: 1287, column: 55, scope: !11413)
!11431 = !DILocation(line: 1287, column: 60, scope: !11413)
!11432 = !DILocation(line: 1287, column: 22, scope: !11413)
!11433 = !DILocation(line: 1287, column: 37, scope: !11413)
!11434 = !DILocation(line: 1290, column: 56, scope: !11413)
!11435 = !DILocation(line: 1290, column: 79, scope: !11413)
!11436 = !DILocation(line: 1290, column: 22, scope: !11413)
!11437 = !DILocation(line: 1290, column: 37, scope: !11413)
!11438 = !DILocation(line: 1293, column: 16, scope: !11413)
!11439 = !DILocation(line: 1293, column: 14, scope: !11413)
!11440 = !DILocation(line: 1294, column: 1, scope: !11413)
!11441 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10517, file: !10517, line: 1301, type: !2794, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !162)
!11442 = !DILocation(line: 1304, column: 6, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11441, file: !10517, line: 1304, column: 6)
!11444 = !DILocation(line: 1304, column: 6, scope: !11441)
!11445 = !DILocation(line: 1307, column: 5, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11443, file: !10517, line: 1305, column: 3)
!11447 = !DILocation(line: 1310, column: 5, scope: !11446)
!11448 = !DILocation(line: 1311, column: 3, scope: !11446)
!11449 = !DILocation(line: 1312, column: 1, scope: !11441)
!11450 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10517, file: !10517, line: 1318, type: !2794, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !162)
!11451 = !DILocation(line: 1323, column: 1, scope: !11450)
!11452 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11453, file: !11453, line: 147, type: !6104, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11454)
!11453 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11454 = !{!11455}
!11455 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11452, file: !11453, line: 147, type: !137)
!11456 = !DILocation(line: 0, scope: !11452)
!11457 = !DILocation(line: 150, column: 3, scope: !11452)
!11458 = !DILocation(line: 151, column: 1, scope: !11452)
!11459 = distinct !DISubprogram(name: "LL_InitTick", scope: !11460, file: !11460, line: 222, type: !8961, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11461)
!11460 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11461 = !{!11462, !11463}
!11462 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11459, file: !11460, line: 222, type: !137)
!11463 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11459, file: !11460, line: 222, type: !137)
!11464 = !DILocation(line: 0, scope: !11459)
!11465 = !DILocation(line: 225, column: 46, scope: !11459)
!11466 = !DILocation(line: 225, column: 55, scope: !11459)
!11467 = !DILocation(line: 225, column: 18, scope: !11459)
!11468 = !DILocation(line: 226, column: 18, scope: !11459)
!11469 = !DILocation(line: 227, column: 18, scope: !11459)
!11470 = !DILocation(line: 229, column: 1, scope: !11459)
!11471 = distinct !DISubprogram(name: "LL_mDelay", scope: !11453, file: !11453, line: 163, type: !6104, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11472)
!11472 = !{!11473, !11474, !11475}
!11473 = !DILocalVariable(name: "Delay", arg: 1, scope: !11471, file: !11453, line: 163, type: !137)
!11474 = !DILocalVariable(name: "tmp", scope: !11471, file: !11453, line: 165, type: !176)
!11475 = !DILocalVariable(name: "tmpDelay", scope: !11471, file: !11453, line: 166, type: !137)
!11476 = !DILocation(line: 0, scope: !11471)
!11477 = !DILocation(line: 165, column: 3, scope: !11471)
!11478 = !DILocation(line: 165, column: 18, scope: !11471)
!11479 = !DILocation(line: 165, column: 33, scope: !11471)
!11480 = !DILocation(line: 169, column: 10, scope: !11471)
!11481 = !DILocation(line: 172, column: 15, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11471, file: !11453, line: 172, column: 6)
!11483 = !DILocation(line: 177, column: 3, scope: !11471)
!11484 = !DILocation(line: 179, column: 18, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11486, file: !11453, line: 179, column: 8)
!11486 = distinct !DILexicalBlock(scope: !11471, file: !11453, line: 178, column: 3)
!11487 = !DILocation(line: 177, column: 19, scope: !11471)
!11488 = !DILocation(line: 184, column: 1, scope: !11471)
!11489 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11453, file: !11453, line: 227, type: !6104, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11490)
!11490 = !{!11491}
!11491 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11489, file: !11453, line: 227, type: !137)
!11492 = !DILocation(line: 0, scope: !11489)
!11493 = !DILocation(line: 230, column: 19, scope: !11489)
!11494 = !DILocation(line: 231, column: 1, scope: !11489)
!11495 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11453, file: !11453, line: 242, type: !11496, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11499)
!11496 = !DISubroutineType(types: !11497)
!11497 = !{!11498, !137}
!11498 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !776, line: 194, baseType: !775)
!11499 = !{!11500, !11501, !11502}
!11500 = !DILocalVariable(name: "Frequency", arg: 1, scope: !11495, file: !11453, line: 242, type: !137)
!11501 = !DILocalVariable(name: "status", scope: !11495, file: !11453, line: 244, type: !11498)
!11502 = !DILocalVariable(name: "latency", scope: !11495, file: !11453, line: 246, type: !137)
!11503 = !DILocation(line: 0, scope: !11495)
!11504 = !DILocation(line: 249, column: 25, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11495, file: !11453, line: 249, column: 7)
!11506 = !DILocation(line: 255, column: 9, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11508, file: !11453, line: 255, column: 9)
!11508 = distinct !DILexicalBlock(scope: !11505, file: !11453, line: 254, column: 3)
!11509 = !DILocation(line: 255, column: 41, scope: !11507)
!11510 = !DILocation(line: 255, column: 9, scope: !11508)
!11511 = !DILocation(line: 257, column: 21, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11513, file: !11453, line: 257, column: 11)
!11513 = distinct !DILexicalBlock(scope: !11507, file: !11453, line: 256, column: 5)
!11514 = !DILocation(line: 284, column: 9, scope: !11508)
!11515 = !DILocation(line: 264, column: 14, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11507, file: !11453, line: 264, column: 14)
!11517 = !DILocation(line: 264, column: 46, scope: !11516)
!11518 = !DILocation(line: 264, column: 14, scope: !11507)
!11519 = !DILocation(line: 266, column: 21, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11521, file: !11453, line: 266, column: 11)
!11521 = distinct !DILexicalBlock(scope: !11516, file: !11453, line: 265, column: 5)
!11522 = !DILocation(line: 275, column: 21, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11524, file: !11453, line: 275, column: 11)
!11524 = distinct !DILexicalBlock(scope: !11516, file: !11453, line: 274, column: 5)
!11525 = !DILocation(line: 286, column: 7, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11527, file: !11453, line: 285, column: 5)
!11527 = distinct !DILexicalBlock(scope: !11508, file: !11453, line: 284, column: 9)
!11528 = !DILocation(line: 287, column: 5, scope: !11526)
!11529 = !DILocation(line: 289, column: 5, scope: !11508)
!11530 = !DILocation(line: 293, column: 9, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11508, file: !11453, line: 293, column: 9)
!11532 = !DILocation(line: 293, column: 31, scope: !11531)
!11533 = !DILocation(line: 293, column: 9, scope: !11508)
!11534 = !DILocation(line: 298, column: 3, scope: !11495)
!11535 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !6118, file: !6118, line: 285, type: !135, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !162)
!11536 = !DILocation(line: 287, column: 21, scope: !11535)
!11537 = !DILocation(line: 287, column: 3, scope: !11535)
!11538 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !8960, file: !8960, line: 1897, type: !2794, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !162)
!11539 = !DILocation(line: 1899, column: 3, scope: !11538)
!11540 = !DILocation(line: 1900, column: 1, scope: !11538)
!11541 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !8960, file: !8960, line: 1843, type: !6104, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11542)
!11542 = !{!11543}
!11543 = !DILocalVariable(name: "Latency", arg: 1, scope: !11541, file: !8960, line: 1843, type: !137)
!11544 = !DILocation(line: 0, scope: !11541)
!11545 = !DILocation(line: 1845, column: 3, scope: !11541)
!11546 = !DILocation(line: 1846, column: 1, scope: !11541)
!11547 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !8960, file: !8960, line: 1855, type: !135, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !162)
!11548 = !DILocation(line: 1857, column: 21, scope: !11547)
!11549 = !DILocation(line: 1857, column: 3, scope: !11547)
!11550 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11453, file: !11453, line: 323, type: !11551, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11566)
!11551 = !DISubroutineType(types: !11552)
!11552 = !{!11498, !11553, !11559}
!11553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11554, size: 32)
!11554 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11460, line: 103, baseType: !11555)
!11555 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11460, line: 90, size: 64, elements: !11556)
!11556 = !{!11557, !11558}
!11557 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !11555, file: !11460, line: 92, baseType: !137, size: 32)
!11558 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !11555, file: !11460, line: 98, baseType: !137, size: 32, offset: 32)
!11559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11560, size: 32)
!11560 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11460, line: 128, baseType: !11561)
!11561 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11460, line: 108, size: 96, elements: !11562)
!11562 = !{!11563, !11564, !11565}
!11563 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11561, file: !11460, line: 110, baseType: !137, size: 32)
!11564 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11561, file: !11460, line: 116, baseType: !137, size: 32, offset: 32)
!11565 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11561, file: !11460, line: 122, baseType: !137, size: 32, offset: 64)
!11566 = !{!11567, !11568, !11569, !11570}
!11567 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11550, file: !11453, line: 323, type: !11553)
!11568 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11550, file: !11453, line: 324, type: !11559)
!11569 = !DILocalVariable(name: "status", scope: !11550, file: !11453, line: 326, type: !11498)
!11570 = !DILocalVariable(name: "pllfreq", scope: !11550, file: !11453, line: 327, type: !137)
!11571 = !DILocation(line: 0, scope: !11550)
!11572 = !DILocation(line: 330, column: 7, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11550, file: !11453, line: 330, column: 7)
!11574 = !DILocation(line: 330, column: 26, scope: !11573)
!11575 = !DILocation(line: 330, column: 7, scope: !11550)
!11576 = !DILocation(line: 333, column: 15, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11573, file: !11453, line: 331, column: 3)
!11578 = !DILocation(line: 336, column: 9, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11577, file: !11453, line: 336, column: 9)
!11580 = !DILocation(line: 336, column: 30, scope: !11579)
!11581 = !DILocation(line: 336, column: 9, scope: !11577)
!11582 = !DILocation(line: 338, column: 7, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11579, file: !11453, line: 337, column: 5)
!11584 = !DILocation(line: 339, column: 7, scope: !11583)
!11585 = !DILocation(line: 339, column: 14, scope: !11583)
!11586 = !DILocation(line: 339, column: 35, scope: !11583)
!11587 = distinct !{!11587, !11584, !11588}
!11588 = !DILocation(line: 342, column: 7, scope: !11583)
!11589 = !DILocation(line: 346, column: 76, scope: !11577)
!11590 = !DILocation(line: 346, column: 105, scope: !11577)
!11591 = !DILocation(line: 346, column: 5, scope: !11577)
!11592 = !DILocation(line: 349, column: 14, scope: !11577)
!11593 = !DILocation(line: 350, column: 3, scope: !11577)
!11594 = !DILocation(line: 0, scope: !11573)
!11595 = !DILocation(line: 357, column: 3, scope: !11550)
!11596 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11453, file: !11453, line: 487, type: !11597, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11599)
!11597 = !DISubroutineType(types: !11598)
!11598 = !{!11498}
!11599 = !{!11600}
!11600 = !DILocalVariable(name: "status", scope: !11596, file: !11453, line: 489, type: !11498)
!11601 = !DILocation(line: 0, scope: !11596)
!11602 = !DILocation(line: 492, column: 7, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11596, file: !11453, line: 492, column: 7)
!11604 = !DILocation(line: 492, column: 28, scope: !11603)
!11605 = !DILocation(line: 492, column: 7, scope: !11596)
!11606 = !DILocation(line: 498, column: 3, scope: !11596)
!11607 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11453, file: !11453, line: 457, type: !11608, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11610)
!11608 = !DISubroutineType(types: !11609)
!11609 = !{!137, !137, !11553}
!11610 = !{!11611, !11612, !11613}
!11611 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11607, file: !11453, line: 457, type: !137)
!11612 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11607, file: !11453, line: 457, type: !11553)
!11613 = !DILocalVariable(name: "pllfreq", scope: !11607, file: !11453, line: 459, type: !137)
!11614 = !DILocation(line: 0, scope: !11607)
!11615 = !DILocation(line: 470, column: 68, scope: !11607)
!11616 = !DILocation(line: 470, column: 75, scope: !11607)
!11617 = !DILocation(line: 470, column: 35, scope: !11607)
!11618 = !DILocation(line: 470, column: 34, scope: !11607)
!11619 = !DILocation(line: 470, column: 32, scope: !11607)
!11620 = !DILocation(line: 475, column: 46, scope: !11607)
!11621 = !DILocation(line: 475, column: 53, scope: !11607)
!11622 = !DILocation(line: 475, column: 76, scope: !11607)
!11623 = !DILocation(line: 475, column: 21, scope: !11607)
!11624 = !DILocation(line: 478, column: 3, scope: !11607)
!11625 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8312, file: !8312, line: 612, type: !135, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !162)
!11626 = !DILocation(line: 614, column: 12, scope: !11625)
!11627 = !DILocation(line: 614, column: 11, scope: !11625)
!11628 = !DILocation(line: 614, column: 3, scope: !11625)
!11629 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8312, file: !8312, line: 592, type: !2794, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !162)
!11630 = !DILocation(line: 594, column: 3, scope: !11629)
!11631 = !DILocation(line: 595, column: 1, scope: !11629)
!11632 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8312, file: !8312, line: 1219, type: !8435, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11633)
!11633 = !{!11634, !11635, !11636}
!11634 = !DILocalVariable(name: "Source", arg: 1, scope: !11632, file: !8312, line: 1219, type: !137)
!11635 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !11632, file: !8312, line: 1219, type: !137)
!11636 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !11632, file: !8312, line: 1219, type: !137)
!11637 = !DILocation(line: 0, scope: !11632)
!11638 = !DILocation(line: 1221, column: 3, scope: !11632)
!11639 = !DILocation(line: 1222, column: 1, scope: !11632)
!11640 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11453, file: !11453, line: 510, type: !11641, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11643)
!11641 = !DISubroutineType(types: !11642)
!11642 = !{!11498, !137, !11559}
!11643 = !{!11644, !11645, !11646, !11647}
!11644 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11640, file: !11453, line: 510, type: !137)
!11645 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11640, file: !11453, line: 510, type: !11559)
!11646 = !DILocalVariable(name: "status", scope: !11640, file: !11453, line: 512, type: !11498)
!11647 = !DILocalVariable(name: "hclk_frequency", scope: !11640, file: !11453, line: 513, type: !137)
!11648 = !DILocation(line: 0, scope: !11640)
!11649 = !DILocation(line: 520, column: 20, scope: !11640)
!11650 = !DILocation(line: 523, column: 7, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11640, file: !11453, line: 523, column: 7)
!11652 = !DILocation(line: 523, column: 23, scope: !11651)
!11653 = !DILocation(line: 523, column: 7, scope: !11640)
!11654 = !DILocation(line: 526, column: 14, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11651, file: !11453, line: 524, column: 3)
!11656 = !DILocation(line: 530, column: 14, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11640, file: !11453, line: 530, column: 7)
!11658 = !DILocation(line: 530, column: 7, scope: !11640)
!11659 = !DILocation(line: 533, column: 5, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11657, file: !11453, line: 531, column: 3)
!11661 = !DILocation(line: 534, column: 5, scope: !11660)
!11662 = !DILocation(line: 534, column: 12, scope: !11660)
!11663 = !DILocation(line: 534, column: 33, scope: !11660)
!11664 = distinct !{!11664, !11661, !11665}
!11665 = !DILocation(line: 537, column: 5, scope: !11660)
!11666 = !DILocation(line: 540, column: 49, scope: !11660)
!11667 = !DILocation(line: 540, column: 5, scope: !11660)
!11668 = !DILocation(line: 541, column: 5, scope: !11660)
!11669 = !DILocation(line: 542, column: 5, scope: !11660)
!11670 = !DILocation(line: 542, column: 12, scope: !11660)
!11671 = !DILocation(line: 542, column: 37, scope: !11660)
!11672 = distinct !{!11672, !11669, !11673}
!11673 = !DILocation(line: 545, column: 5, scope: !11660)
!11674 = !DILocation(line: 548, column: 50, scope: !11660)
!11675 = !DILocation(line: 548, column: 5, scope: !11660)
!11676 = !DILocation(line: 549, column: 50, scope: !11660)
!11677 = !DILocation(line: 549, column: 5, scope: !11660)
!11678 = !DILocation(line: 550, column: 3, scope: !11660)
!11679 = !DILocation(line: 553, column: 7, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11640, file: !11453, line: 553, column: 7)
!11681 = !DILocation(line: 553, column: 23, scope: !11680)
!11682 = !DILocation(line: 553, column: 7, scope: !11640)
!11683 = !DILocation(line: 556, column: 14, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11680, file: !11453, line: 554, column: 3)
!11685 = !DILocation(line: 557, column: 3, scope: !11684)
!11686 = !DILocation(line: 560, column: 14, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11640, file: !11453, line: 560, column: 7)
!11688 = !DILocation(line: 560, column: 7, scope: !11640)
!11689 = !DILocation(line: 562, column: 5, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11687, file: !11453, line: 561, column: 3)
!11691 = !DILocation(line: 563, column: 3, scope: !11690)
!11692 = !DILocation(line: 565, column: 3, scope: !11640)
!11693 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8312, file: !8312, line: 1169, type: !2794, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !162)
!11694 = !DILocation(line: 1171, column: 3, scope: !11693)
!11695 = !DILocation(line: 1172, column: 1, scope: !11693)
!11696 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8312, file: !8312, line: 1190, type: !135, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !162)
!11697 = !DILocation(line: 1192, column: 12, scope: !11696)
!11698 = !DILocation(line: 1192, column: 11, scope: !11696)
!11699 = !DILocation(line: 1192, column: 3, scope: !11696)
!11700 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8312, file: !8312, line: 944, type: !6104, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11701)
!11701 = !{!11702}
!11702 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11700, file: !8312, line: 944, type: !137)
!11703 = !DILocation(line: 0, scope: !11700)
!11704 = !DILocation(line: 946, column: 3, scope: !11700)
!11705 = !DILocation(line: 947, column: 1, scope: !11700)
!11706 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8312, file: !8312, line: 910, type: !6104, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11707)
!11707 = !{!11708}
!11708 = !DILocalVariable(name: "Source", arg: 1, scope: !11706, file: !8312, line: 910, type: !137)
!11709 = !DILocation(line: 0, scope: !11706)
!11710 = !DILocation(line: 912, column: 3, scope: !11706)
!11711 = !DILocation(line: 913, column: 1, scope: !11706)
!11712 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8312, file: !8312, line: 924, type: !135, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !162)
!11713 = !DILocation(line: 926, column: 21, scope: !11712)
!11714 = !DILocation(line: 926, column: 3, scope: !11712)
!11715 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8312, file: !8312, line: 960, type: !6104, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11716)
!11716 = !{!11717}
!11717 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11715, file: !8312, line: 960, type: !137)
!11718 = !DILocation(line: 0, scope: !11715)
!11719 = !DILocation(line: 962, column: 3, scope: !11715)
!11720 = !DILocation(line: 963, column: 1, scope: !11715)
!11721 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8312, file: !8312, line: 976, type: !6104, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11722)
!11722 = !{!11723}
!11723 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11721, file: !8312, line: 976, type: !137)
!11724 = !DILocation(line: 0, scope: !11721)
!11725 = !DILocation(line: 978, column: 3, scope: !11721)
!11726 = !DILocation(line: 979, column: 1, scope: !11721)
!11727 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11453, file: !11453, line: 385, type: !11728, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !11730)
!11728 = !DISubroutineType(types: !11729)
!11729 = !{!11498, !137, !137, !11553, !11559}
!11730 = !{!11731, !11732, !11733, !11734, !11735, !11736}
!11731 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11727, file: !11453, line: 385, type: !137)
!11732 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11727, file: !11453, line: 385, type: !137)
!11733 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11727, file: !11453, line: 386, type: !11553)
!11734 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11727, file: !11453, line: 386, type: !11559)
!11735 = !DILocalVariable(name: "status", scope: !11727, file: !11453, line: 388, type: !11498)
!11736 = !DILocalVariable(name: "pllfreq", scope: !11727, file: !11453, line: 389, type: !137)
!11737 = !DILocation(line: 0, scope: !11727)
!11738 = !DILocation(line: 396, column: 7, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11727, file: !11453, line: 396, column: 7)
!11740 = !DILocation(line: 396, column: 26, scope: !11739)
!11741 = !DILocation(line: 396, column: 7, scope: !11727)
!11742 = !DILocation(line: 400, column: 15, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11739, file: !11453, line: 397, column: 3)
!11744 = !DILocation(line: 403, column: 9, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11743, file: !11453, line: 403, column: 9)
!11746 = !DILocation(line: 403, column: 30, scope: !11745)
!11747 = !DILocation(line: 403, column: 9, scope: !11743)
!11748 = !DILocation(line: 406, column: 21, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11750, file: !11453, line: 406, column: 11)
!11750 = distinct !DILexicalBlock(scope: !11745, file: !11453, line: 404, column: 5)
!11751 = !DILocation(line: 406, column: 11, scope: !11750)
!11752 = !DILocation(line: 408, column: 9, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11749, file: !11453, line: 407, column: 7)
!11754 = !DILocation(line: 409, column: 7, scope: !11753)
!11755 = !DILocation(line: 412, column: 9, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11749, file: !11453, line: 411, column: 7)
!11757 = !DILocation(line: 416, column: 7, scope: !11750)
!11758 = !DILocation(line: 417, column: 7, scope: !11750)
!11759 = !DILocation(line: 417, column: 14, scope: !11750)
!11760 = !DILocation(line: 417, column: 35, scope: !11750)
!11761 = distinct !{!11761, !11758, !11762}
!11762 = !DILocation(line: 420, column: 7, scope: !11750)
!11763 = !DILocation(line: 424, column: 78, scope: !11743)
!11764 = !DILocation(line: 424, column: 107, scope: !11743)
!11765 = !DILocation(line: 424, column: 7, scope: !11743)
!11766 = !DILocation(line: 427, column: 14, scope: !11743)
!11767 = !DILocation(line: 428, column: 3, scope: !11743)
!11768 = !DILocation(line: 0, scope: !11739)
!11769 = !DILocation(line: 435, column: 3, scope: !11727)
!11770 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8312, file: !8312, line: 545, type: !135, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !162)
!11771 = !DILocation(line: 547, column: 12, scope: !11770)
!11772 = !DILocation(line: 547, column: 11, scope: !11770)
!11773 = !DILocation(line: 547, column: 3, scope: !11770)
!11774 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8312, file: !8312, line: 505, type: !2794, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !162)
!11775 = !DILocation(line: 507, column: 3, scope: !11774)
!11776 = !DILocation(line: 508, column: 1, scope: !11774)
!11777 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8312, file: !8312, line: 515, type: !2794, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !162)
!11778 = !DILocation(line: 517, column: 3, scope: !11777)
!11779 = !DILocation(line: 518, column: 1, scope: !11777)
!11780 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8312, file: !8312, line: 525, type: !2794, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !162)
!11781 = !DILocation(line: 527, column: 3, scope: !11780)
!11782 = !DILocation(line: 528, column: 1, scope: !11780)
!11783 = distinct !DISubprogram(name: "z_device_state_init", scope: !11784, file: !11784, line: 23, type: !2794, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !11785)
!11784 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11785 = !{!11786}
!11786 = !DILocalVariable(name: "dev", scope: !11783, file: !11784, line: 25, type: !11787)
!11787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11788, size: 32)
!11788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11789)
!11789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !209, line: 378, size: 192, elements: !11790)
!11790 = !{!11791, !11792, !11793, !11794, !11800, !11801}
!11791 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11789, file: !209, line: 380, baseType: !212, size: 32)
!11792 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11789, file: !209, line: 382, baseType: !13, size: 32, offset: 32)
!11793 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11789, file: !209, line: 384, baseType: !13, size: 32, offset: 64)
!11794 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11789, file: !209, line: 386, baseType: !11795, size: 32, offset: 96)
!11795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11796, size: 32)
!11796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !209, line: 351, size: 16, elements: !11797)
!11797 = !{!11798, !11799}
!11798 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11796, file: !209, line: 359, baseType: !221, size: 8)
!11799 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11796, file: !209, line: 364, baseType: !224, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11800 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11789, file: !209, line: 388, baseType: !102, size: 32, offset: 128)
!11801 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11789, file: !209, line: 396, baseType: !227, size: 32, offset: 160)
!11802 = !DILocation(line: 0, scope: !11783)
!11803 = !DILocation(line: 31, column: 1, scope: !11783)
!11804 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11784, file: !11784, line: 33, type: !11805, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !11807)
!11805 = !DISubroutineType(types: !11806)
!11806 = !{!11787, !212}
!11807 = !{!11808, !11809}
!11808 = !DILocalVariable(name: "name", arg: 1, scope: !11804, file: !11784, line: 33, type: !212)
!11809 = !DILocalVariable(name: "dev", scope: !11804, file: !11784, line: 35, type: !11787)
!11810 = !DILocation(line: 0, scope: !11804)
!11811 = !DILocation(line: 40, column: 12, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11804, file: !11784, line: 40, column: 6)
!11813 = !DILocation(line: 40, column: 21, scope: !11812)
!11814 = !DILocation(line: 40, column: 25, scope: !11812)
!11815 = !DILocation(line: 40, column: 33, scope: !11812)
!11816 = !DILocation(line: 40, column: 6, scope: !11804)
!11817 = !DILocation(line: 55, column: 2, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11804, file: !11784, line: 55, column: 2)
!11819 = !DILocation(line: 50, column: 7, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11821, file: !11784, line: 50, column: 7)
!11821 = distinct !DILexicalBlock(scope: !11822, file: !11784, line: 49, column: 57)
!11822 = distinct !DILexicalBlock(scope: !11823, file: !11784, line: 49, column: 2)
!11823 = distinct !DILexicalBlock(scope: !11804, file: !11784, line: 49, column: 2)
!11824 = !DILocation(line: 50, column: 30, scope: !11820)
!11825 = !DILocation(line: 50, column: 39, scope: !11820)
!11826 = !DILocation(line: 50, column: 44, scope: !11820)
!11827 = !DILocation(line: 50, column: 7, scope: !11821)
!11828 = !DILocation(line: 49, column: 53, scope: !11822)
!11829 = !DILocation(line: 49, column: 33, scope: !11822)
!11830 = !DILocation(line: 49, column: 2, scope: !11823)
!11831 = distinct !{!11831, !11830, !11832}
!11832 = !DILocation(line: 53, column: 2, scope: !11823)
!11833 = !DILocation(line: 56, column: 7, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11835, file: !11784, line: 56, column: 7)
!11835 = distinct !DILexicalBlock(scope: !11836, file: !11784, line: 55, column: 57)
!11836 = distinct !DILexicalBlock(scope: !11818, file: !11784, line: 55, column: 2)
!11837 = !DILocation(line: 56, column: 30, scope: !11834)
!11838 = !DILocation(line: 56, column: 52, scope: !11834)
!11839 = !DILocation(line: 56, column: 34, scope: !11834)
!11840 = !DILocation(line: 56, column: 58, scope: !11834)
!11841 = !DILocation(line: 56, column: 7, scope: !11835)
!11842 = !DILocation(line: 55, column: 53, scope: !11836)
!11843 = !DILocation(line: 55, column: 33, scope: !11836)
!11844 = distinct !{!11844, !11817, !11845}
!11845 = !DILocation(line: 59, column: 2, scope: !11818)
!11846 = !DILocation(line: 62, column: 1, scope: !11804)
!11847 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11784, file: !11784, line: 93, type: !11848, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !11850)
!11848 = !DISubroutineType(types: !11849)
!11849 = !{!224, !11787}
!11850 = !{!11851}
!11851 = !DILocalVariable(name: "dev", arg: 1, scope: !11847, file: !11784, line: 93, type: !11787)
!11852 = !DILocation(line: 0, scope: !11847)
!11853 = !DILocation(line: 99, column: 10, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11847, file: !11784, line: 99, column: 6)
!11855 = !DILocation(line: 99, column: 6, scope: !11847)
!11856 = !DILocation(line: 103, column: 14, scope: !11847)
!11857 = !DILocation(line: 103, column: 21, scope: !11847)
!11858 = !DILocation(line: 103, column: 33, scope: !11847)
!11859 = !DILocation(line: 103, column: 49, scope: !11847)
!11860 = !DILocation(line: 103, column: 58, scope: !11847)
!11861 = !DILocation(line: 104, column: 1, scope: !11847)
!11862 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11784, file: !11784, line: 87, type: !11863, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !11866)
!11863 = !DISubroutineType(types: !11864)
!11864 = !{!120, !11865}
!11865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11787, size: 32)
!11866 = !{!11867}
!11867 = !DILocalVariable(name: "devices", arg: 1, scope: !11862, file: !11784, line: 87, type: !11865)
!11868 = !DILocation(line: 0, scope: !11862)
!11869 = !DILocation(line: 89, column: 11, scope: !11862)
!11870 = !DILocation(line: 90, column: 2, scope: !11862)
!11871 = distinct !DISubprogram(name: "device_required_foreach", scope: !11784, file: !11784, line: 125, type: !11872, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !11878)
!11872 = !DISubroutineType(types: !11873)
!11873 = !{!103, !11787, !11874, !102}
!11874 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !209, line: 471, baseType: !11875)
!11875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11876, size: 32)
!11876 = !DISubroutineType(types: !11877)
!11877 = !{!103, !11787, !102}
!11878 = !{!11879, !11880, !11881, !11882, !11883}
!11879 = !DILocalVariable(name: "dev", arg: 1, scope: !11871, file: !11784, line: 125, type: !11787)
!11880 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11871, file: !11784, line: 126, type: !11874)
!11881 = !DILocalVariable(name: "context", arg: 3, scope: !11871, file: !11784, line: 127, type: !102)
!11882 = !DILocalVariable(name: "handle_count", scope: !11871, file: !11784, line: 129, type: !120)
!11883 = !DILocalVariable(name: "handles", scope: !11871, file: !11784, line: 130, type: !227)
!11884 = !DILocation(line: 0, scope: !11871)
!11885 = !DILocation(line: 129, column: 2, scope: !11871)
!11886 = !DILocation(line: 129, column: 9, scope: !11871)
!11887 = !DILocation(line: 130, column: 35, scope: !11871)
!11888 = !DILocation(line: 132, column: 33, scope: !11871)
!11889 = !DILocation(line: 132, column: 9, scope: !11871)
!11890 = !DILocation(line: 133, column: 1, scope: !11871)
!11891 = !DILocation(line: 132, column: 2, scope: !11871)
!11892 = distinct !DISubprogram(name: "device_required_handles_get", scope: !209, file: !209, line: 493, type: !11893, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !11895)
!11893 = !DISubroutineType(types: !11894)
!11894 = !{!227, !11787, !2299}
!11895 = !{!11896, !11897, !11898, !11899}
!11896 = !DILocalVariable(name: "dev", arg: 1, scope: !11892, file: !209, line: 493, type: !11787)
!11897 = !DILocalVariable(name: "count", arg: 2, scope: !11892, file: !209, line: 493, type: !2299)
!11898 = !DILocalVariable(name: "rv", scope: !11892, file: !209, line: 495, type: !227)
!11899 = !DILocalVariable(name: "i", scope: !11900, file: !209, line: 498, type: !120)
!11900 = distinct !DILexicalBlock(scope: !11901, file: !209, line: 497, column: 18)
!11901 = distinct !DILexicalBlock(scope: !11892, file: !209, line: 497, column: 6)
!11902 = !DILocation(line: 0, scope: !11892)
!11903 = !DILocation(line: 495, column: 35, scope: !11892)
!11904 = !DILocation(line: 497, column: 9, scope: !11901)
!11905 = !DILocation(line: 497, column: 6, scope: !11892)
!11906 = !DILocation(line: 0, scope: !11900)
!11907 = !DILocation(line: 500, column: 11, scope: !11900)
!11908 = !DILocation(line: 500, column: 40, scope: !11900)
!11909 = !DILocation(line: 502, column: 4, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11900, file: !209, line: 501, column: 40)
!11911 = distinct !{!11911, !11912, !11913}
!11912 = !DILocation(line: 500, column: 3, scope: !11900)
!11913 = !DILocation(line: 503, column: 3, scope: !11900)
!11914 = !DILocation(line: 504, column: 10, scope: !11900)
!11915 = !DILocation(line: 505, column: 2, scope: !11900)
!11916 = !DILocation(line: 507, column: 2, scope: !11892)
!11917 = distinct !DISubprogram(name: "device_visitor", scope: !11784, file: !11784, line: 106, type: !11918, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !11920)
!11918 = !DISubroutineType(types: !11919)
!11919 = !{!103, !227, !120, !11874, !102}
!11920 = !{!11921, !11922, !11923, !11924, !11925, !11927, !11930, !11931}
!11921 = !DILocalVariable(name: "handles", arg: 1, scope: !11917, file: !11784, line: 106, type: !227)
!11922 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11917, file: !11784, line: 107, type: !120)
!11923 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11917, file: !11784, line: 108, type: !11874)
!11924 = !DILocalVariable(name: "context", arg: 4, scope: !11917, file: !11784, line: 109, type: !102)
!11925 = !DILocalVariable(name: "i", scope: !11926, file: !11784, line: 112, type: !120)
!11926 = distinct !DILexicalBlock(scope: !11917, file: !11784, line: 112, column: 2)
!11927 = !DILocalVariable(name: "dh", scope: !11928, file: !11784, line: 113, type: !229)
!11928 = distinct !DILexicalBlock(scope: !11929, file: !11784, line: 112, column: 44)
!11929 = distinct !DILexicalBlock(scope: !11926, file: !11784, line: 112, column: 2)
!11930 = !DILocalVariable(name: "rdev", scope: !11928, file: !11784, line: 114, type: !11787)
!11931 = !DILocalVariable(name: "rc", scope: !11928, file: !11784, line: 115, type: !103)
!11932 = !DILocation(line: 0, scope: !11917)
!11933 = !DILocation(line: 0, scope: !11926)
!11934 = !DILocation(line: 112, column: 23, scope: !11929)
!11935 = !DILocation(line: 112, column: 2, scope: !11926)
!11936 = distinct !{!11936, !11935, !11937}
!11937 = !DILocation(line: 120, column: 2, scope: !11926)
!11938 = !DILocation(line: 113, column: 24, scope: !11928)
!11939 = !DILocation(line: 0, scope: !11928)
!11940 = !DILocation(line: 114, column: 31, scope: !11928)
!11941 = !DILocation(line: 115, column: 12, scope: !11928)
!11942 = !DILocation(line: 117, column: 10, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11928, file: !11784, line: 117, column: 7)
!11944 = !DILocation(line: 112, column: 39, scope: !11929)
!11945 = !DILocation(line: 123, column: 1, scope: !11917)
!11946 = distinct !DISubprogram(name: "device_from_handle", scope: !209, file: !209, line: 439, type: !11947, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !11949)
!11947 = !DISubroutineType(types: !11948)
!11948 = !{!11787, !229}
!11949 = !{!11950, !11951, !11952}
!11950 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11946, file: !209, line: 439, type: !229)
!11951 = !DILocalVariable(name: "dev", scope: !11946, file: !209, line: 443, type: !11787)
!11952 = !DILocalVariable(name: "numdev", scope: !11946, file: !209, line: 444, type: !120)
!11953 = !DILocation(line: 0, scope: !11946)
!11954 = !DILocation(line: 446, column: 7, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11946, file: !209, line: 446, column: 6)
!11956 = !DILocation(line: 446, column: 18, scope: !11955)
!11957 = !DILocation(line: 446, column: 23, scope: !11955)
!11958 = !DILocation(line: 450, column: 2, scope: !11946)
!11959 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11784, file: !11784, line: 135, type: !11872, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !11960)
!11960 = !{!11961, !11962, !11963, !11964, !11965}
!11961 = !DILocalVariable(name: "dev", arg: 1, scope: !11959, file: !11784, line: 135, type: !11787)
!11962 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11959, file: !11784, line: 136, type: !11874)
!11963 = !DILocalVariable(name: "context", arg: 3, scope: !11959, file: !11784, line: 137, type: !102)
!11964 = !DILocalVariable(name: "handle_count", scope: !11959, file: !11784, line: 139, type: !120)
!11965 = !DILocalVariable(name: "handles", scope: !11959, file: !11784, line: 140, type: !227)
!11966 = !DILocation(line: 0, scope: !11959)
!11967 = !DILocation(line: 139, column: 2, scope: !11959)
!11968 = !DILocation(line: 139, column: 9, scope: !11959)
!11969 = !DILocation(line: 140, column: 35, scope: !11959)
!11970 = !DILocation(line: 142, column: 33, scope: !11959)
!11971 = !DILocation(line: 142, column: 9, scope: !11959)
!11972 = !DILocation(line: 143, column: 1, scope: !11959)
!11973 = !DILocation(line: 142, column: 2, scope: !11959)
!11974 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !209, file: !209, line: 573, type: !11893, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !11975)
!11975 = !{!11976, !11977, !11978, !11979, !11980}
!11976 = !DILocalVariable(name: "dev", arg: 1, scope: !11974, file: !209, line: 573, type: !11787)
!11977 = !DILocalVariable(name: "count", arg: 2, scope: !11974, file: !209, line: 573, type: !2299)
!11978 = !DILocalVariable(name: "rv", scope: !11974, file: !209, line: 575, type: !227)
!11979 = !DILocalVariable(name: "region", scope: !11974, file: !209, line: 576, type: !120)
!11980 = !DILocalVariable(name: "i", scope: !11974, file: !209, line: 577, type: !120)
!11981 = !DILocation(line: 0, scope: !11974)
!11982 = !DILocation(line: 575, column: 35, scope: !11974)
!11983 = !DILocation(line: 579, column: 9, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11974, file: !209, line: 579, column: 6)
!11985 = !DILocation(line: 579, column: 6, scope: !11974)
!11986 = !DILocation(line: 582, column: 8, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11988, file: !209, line: 582, column: 8)
!11988 = distinct !DILexicalBlock(scope: !11989, file: !209, line: 581, column: 23)
!11989 = distinct !DILexicalBlock(scope: !11984, file: !209, line: 579, column: 18)
!11990 = !DILocation(line: 582, column: 12, scope: !11987)
!11991 = !DILocation(line: 585, column: 6, scope: !11988)
!11992 = !DILocation(line: 0, scope: !11989)
!11993 = !DILocation(line: 581, column: 17, scope: !11989)
!11994 = !DILocation(line: 581, column: 3, scope: !11989)
!11995 = !DILocation(line: 588, column: 10, scope: !11989)
!11996 = !DILocation(line: 588, column: 16, scope: !11989)
!11997 = !DILocation(line: 589, column: 4, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11989, file: !209, line: 588, column: 39)
!11999 = !DILocation(line: 588, column: 3, scope: !11989)
!12000 = distinct !{!12000, !11999, !12001}
!12001 = !DILocation(line: 590, column: 3, scope: !11989)
!12002 = !DILocation(line: 591, column: 10, scope: !11989)
!12003 = !DILocation(line: 592, column: 2, scope: !11989)
!12004 = !DILocation(line: 575, column: 25, scope: !11974)
!12005 = !DILocation(line: 594, column: 2, scope: !11974)
!12006 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1696, file: !1696, line: 49, type: !12007, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1693, retainedNodes: !162)
!12007 = !DISubroutineType(types: !12008)
!12008 = !{!2292}
!12009 = !DILocation(line: 51, column: 10, scope: !12006)
!12010 = !DILocation(line: 51, column: 20, scope: !12006)
!12011 = !DILocation(line: 51, column: 2, scope: !12006)
!12012 = distinct !DISubprogram(name: "coredump", scope: !2761, file: !2761, line: 209, type: !12013, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !12159)
!12013 = !DISubroutineType(types: !12014)
!12014 = !{null, !32, !12015, !12059}
!12015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12016, size: 32)
!12016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12017)
!12017 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2424, line: 141, baseType: !12018)
!12018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2424, line: 97, size: 256, elements: !12019)
!12019 = !{!12020}
!12020 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12018, file: !2424, line: 107, baseType: !12021, size: 256)
!12021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2424, line: 98, size: 256, elements: !12022)
!12022 = !{!12023, !12028, !12033, !12038, !12043, !12048, !12053, !12058}
!12023 = !DIDerivedType(tag: DW_TAG_member, scope: !12021, file: !2424, line: 99, baseType: !12024, size: 32)
!12024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12021, file: !2424, line: 99, size: 32, elements: !12025)
!12025 = !{!12026, !12027}
!12026 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12024, file: !2424, line: 99, baseType: !137, size: 32)
!12027 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12024, file: !2424, line: 99, baseType: !137, size: 32)
!12028 = !DIDerivedType(tag: DW_TAG_member, scope: !12021, file: !2424, line: 100, baseType: !12029, size: 32, offset: 32)
!12029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12021, file: !2424, line: 100, size: 32, elements: !12030)
!12030 = !{!12031, !12032}
!12031 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12029, file: !2424, line: 100, baseType: !137, size: 32)
!12032 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12029, file: !2424, line: 100, baseType: !137, size: 32)
!12033 = !DIDerivedType(tag: DW_TAG_member, scope: !12021, file: !2424, line: 101, baseType: !12034, size: 32, offset: 64)
!12034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12021, file: !2424, line: 101, size: 32, elements: !12035)
!12035 = !{!12036, !12037}
!12036 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12034, file: !2424, line: 101, baseType: !137, size: 32)
!12037 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12034, file: !2424, line: 101, baseType: !137, size: 32)
!12038 = !DIDerivedType(tag: DW_TAG_member, scope: !12021, file: !2424, line: 102, baseType: !12039, size: 32, offset: 96)
!12039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12021, file: !2424, line: 102, size: 32, elements: !12040)
!12040 = !{!12041, !12042}
!12041 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12039, file: !2424, line: 102, baseType: !137, size: 32)
!12042 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12039, file: !2424, line: 102, baseType: !137, size: 32)
!12043 = !DIDerivedType(tag: DW_TAG_member, scope: !12021, file: !2424, line: 103, baseType: !12044, size: 32, offset: 128)
!12044 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12021, file: !2424, line: 103, size: 32, elements: !12045)
!12045 = !{!12046, !12047}
!12046 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12044, file: !2424, line: 103, baseType: !137, size: 32)
!12047 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12044, file: !2424, line: 103, baseType: !137, size: 32)
!12048 = !DIDerivedType(tag: DW_TAG_member, scope: !12021, file: !2424, line: 104, baseType: !12049, size: 32, offset: 160)
!12049 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12021, file: !2424, line: 104, size: 32, elements: !12050)
!12050 = !{!12051, !12052}
!12051 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12049, file: !2424, line: 104, baseType: !137, size: 32)
!12052 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12049, file: !2424, line: 104, baseType: !137, size: 32)
!12053 = !DIDerivedType(tag: DW_TAG_member, scope: !12021, file: !2424, line: 105, baseType: !12054, size: 32, offset: 192)
!12054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12021, file: !2424, line: 105, size: 32, elements: !12055)
!12055 = !{!12056, !12057}
!12056 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12054, file: !2424, line: 105, baseType: !137, size: 32)
!12057 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12054, file: !2424, line: 105, baseType: !137, size: 32)
!12058 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12021, file: !2424, line: 106, baseType: !137, size: 32, offset: 224)
!12059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12060, size: 32)
!12060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !276, line: 245, size: 1024, elements: !12061)
!12061 = !{!12062, !12120, !12132, !12133, !12134, !12135, !12141, !12154}
!12062 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12060, file: !276, line: 247, baseType: !12063, size: 384)
!12063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !276, line: 57, size: 384, elements: !12064)
!12064 = !{!12065, !12089, !12096, !12097, !12098, !12107, !12108, !12109}
!12065 = !DIDerivedType(tag: DW_TAG_member, scope: !12063, file: !276, line: 60, baseType: !12066, size: 64)
!12066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12063, file: !276, line: 60, size: 64, elements: !12067)
!12067 = !{!12068, !12083}
!12068 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12066, file: !276, line: 61, baseType: !12069, size: 64)
!12069 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !286, line: 49, baseType: !12070)
!12070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !286, line: 37, size: 64, elements: !12071)
!12071 = !{!12072, !12078}
!12072 = !DIDerivedType(tag: DW_TAG_member, scope: !12070, file: !286, line: 38, baseType: !12073, size: 32)
!12073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12070, file: !286, line: 38, size: 32, elements: !12074)
!12074 = !{!12075, !12077}
!12075 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12073, file: !286, line: 39, baseType: !12076, size: 32)
!12076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12070, size: 32)
!12077 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12073, file: !286, line: 40, baseType: !12076, size: 32)
!12078 = !DIDerivedType(tag: DW_TAG_member, scope: !12070, file: !286, line: 42, baseType: !12079, size: 32, offset: 32)
!12079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12070, file: !286, line: 42, size: 32, elements: !12080)
!12080 = !{!12081, !12082}
!12081 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12079, file: !286, line: 43, baseType: !12076, size: 32)
!12082 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12079, file: !286, line: 44, baseType: !12076, size: 32)
!12083 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12066, file: !276, line: 62, baseType: !12084, size: 64)
!12084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !302, line: 49, size: 64, elements: !12085)
!12085 = !{!12086}
!12086 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12084, file: !302, line: 50, baseType: !12087, size: 64)
!12087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12088, size: 64, elements: !307)
!12088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12084, size: 32)
!12089 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12063, file: !276, line: 68, baseType: !12090, size: 32, offset: 64)
!12090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12091, size: 32)
!12091 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !312, line: 233, baseType: !12092)
!12092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 231, size: 64, elements: !12093)
!12093 = !{!12094}
!12094 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12092, file: !312, line: 232, baseType: !12095, size: 64)
!12095 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !286, line: 48, baseType: !12070)
!12096 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12063, file: !276, line: 71, baseType: !221, size: 8, offset: 96)
!12097 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12063, file: !276, line: 74, baseType: !221, size: 8, offset: 104)
!12098 = !DIDerivedType(tag: DW_TAG_member, scope: !12063, file: !276, line: 90, baseType: !12099, size: 16, offset: 112)
!12099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12063, file: !276, line: 90, size: 16, elements: !12100)
!12100 = !{!12101, !12106}
!12101 = !DIDerivedType(tag: DW_TAG_member, scope: !12099, file: !276, line: 91, baseType: !12102, size: 16)
!12102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12099, file: !276, line: 91, size: 16, elements: !12103)
!12103 = !{!12104, !12105}
!12104 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12102, file: !276, line: 96, baseType: !326, size: 8)
!12105 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12102, file: !276, line: 97, baseType: !221, size: 8, offset: 8)
!12106 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12099, file: !276, line: 100, baseType: !151, size: 16)
!12107 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12063, file: !276, line: 107, baseType: !137, size: 32, offset: 128)
!12108 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12063, file: !276, line: 127, baseType: !102, size: 32, offset: 160)
!12109 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12063, file: !276, line: 131, baseType: !12110, size: 192, offset: 192)
!12110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !312, line: 244, size: 192, elements: !12111)
!12111 = !{!12112, !12113, !12119}
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12110, file: !312, line: 245, baseType: !12069, size: 64)
!12113 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12110, file: !312, line: 246, baseType: !12114, size: 32, offset: 64)
!12114 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !312, line: 242, baseType: !12115)
!12115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12116, size: 32)
!12116 = !DISubroutineType(types: !12117)
!12117 = !{null, !12118}
!12118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12110, size: 32)
!12119 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12110, file: !312, line: 249, baseType: !343, size: 64, offset: 128)
!12120 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12060, file: !276, line: 250, baseType: !12121, size: 288, offset: 384)
!12121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !347, line: 25, size: 288, elements: !12122)
!12122 = !{!12123, !12124, !12125, !12126, !12127, !12128, !12129, !12130, !12131}
!12123 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12121, file: !347, line: 26, baseType: !137, size: 32)
!12124 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12121, file: !347, line: 27, baseType: !137, size: 32, offset: 32)
!12125 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12121, file: !347, line: 28, baseType: !137, size: 32, offset: 64)
!12126 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12121, file: !347, line: 29, baseType: !137, size: 32, offset: 96)
!12127 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12121, file: !347, line: 30, baseType: !137, size: 32, offset: 128)
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12121, file: !347, line: 31, baseType: !137, size: 32, offset: 160)
!12129 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12121, file: !347, line: 32, baseType: !137, size: 32, offset: 192)
!12130 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12121, file: !347, line: 33, baseType: !137, size: 32, offset: 224)
!12131 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12121, file: !347, line: 34, baseType: !137, size: 32, offset: 256)
!12132 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12060, file: !276, line: 253, baseType: !102, size: 32, offset: 672)
!12133 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12060, file: !276, line: 256, baseType: !12091, size: 64, offset: 704)
!12134 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12060, file: !276, line: 294, baseType: !103, size: 32, offset: 768)
!12135 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12060, file: !276, line: 300, baseType: !12136, size: 96, offset: 800)
!12136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !276, line: 149, size: 96, elements: !12137)
!12137 = !{!12138, !12139, !12140}
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12136, file: !276, line: 153, baseType: !22, size: 32)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12136, file: !276, line: 162, baseType: !120, size: 32, offset: 32)
!12140 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12136, file: !276, line: 168, baseType: !120, size: 32, offset: 64)
!12141 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12060, file: !276, line: 325, baseType: !12142, size: 32, offset: 896)
!12142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12143, size: 32)
!12143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !370, line: 5073, size: 160, elements: !12144)
!12144 = !{!12145, !12151, !12152}
!12145 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12143, file: !370, line: 5074, baseType: !12146, size: 96)
!12146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !12147)
!12147 = !{!12148, !12149, !12150}
!12148 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12146, file: !113, line: 57, baseType: !116, size: 32)
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12146, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!12150 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12146, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!12151 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12143, file: !370, line: 5075, baseType: !12091, size: 64, offset: 96)
!12152 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12143, file: !370, line: 5076, baseType: !12153, offset: 160)
!12153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !381, line: 43, elements: !162)
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12060, file: !276, line: 343, baseType: !12155, size: 64, offset: 928)
!12155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !347, line: 60, size: 64, elements: !12156)
!12156 = !{!12157, !12158}
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12155, file: !347, line: 63, baseType: !137, size: 32)
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12155, file: !347, line: 66, baseType: !137, size: 32, offset: 32)
!12159 = !{!12160, !12161, !12162}
!12160 = !DILocalVariable(name: "reason", arg: 1, scope: !12012, file: !2761, line: 209, type: !32)
!12161 = !DILocalVariable(name: "esf", arg: 2, scope: !12012, file: !2761, line: 209, type: !12015)
!12162 = !DILocalVariable(name: "thread", arg: 3, scope: !12012, file: !2761, line: 210, type: !12059)
!12163 = !DILocation(line: 0, scope: !12012)
!12164 = !DILocation(line: 212, column: 1, scope: !12012)
!12165 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2761, file: !2761, line: 214, type: !12166, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !12168)
!12166 = !DISubroutineType(types: !12167)
!12167 = !{null, !22, !22}
!12168 = !{!12169, !12170}
!12169 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12165, file: !2761, line: 214, type: !22)
!12170 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12165, file: !2761, line: 214, type: !22)
!12171 = !DILocation(line: 0, scope: !12165)
!12172 = !DILocation(line: 216, column: 1, scope: !12165)
!12173 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2761, file: !2761, line: 218, type: !12174, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !12176)
!12174 = !DISubroutineType(types: !12175)
!12175 = !{null, !1737, !120}
!12176 = !{!12177, !12178}
!12177 = !DILocalVariable(name: "buf", arg: 1, scope: !12173, file: !2761, line: 218, type: !1737)
!12178 = !DILocalVariable(name: "buflen", arg: 2, scope: !12173, file: !2761, line: 218, type: !120)
!12179 = !DILocation(line: 0, scope: !12173)
!12180 = !DILocation(line: 220, column: 1, scope: !12173)
!12181 = distinct !DISubprogram(name: "coredump_query", scope: !2761, file: !2761, line: 222, type: !12182, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !12184)
!12182 = !DISubroutineType(types: !12183)
!12183 = !{!103, !2760, !102}
!12184 = !{!12185, !12186}
!12185 = !DILocalVariable(name: "query_id", arg: 1, scope: !12181, file: !2761, line: 222, type: !2760)
!12186 = !DILocalVariable(name: "arg", arg: 2, scope: !12181, file: !2761, line: 222, type: !102)
!12187 = !DILocation(line: 0, scope: !12181)
!12188 = !DILocation(line: 224, column: 2, scope: !12181)
!12189 = distinct !DISubprogram(name: "coredump_cmd", scope: !2761, file: !2761, line: 227, type: !12190, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !12192)
!12190 = !DISubroutineType(types: !12191)
!12191 = !{!103, !2767, !102}
!12192 = !{!12193, !12194}
!12193 = !DILocalVariable(name: "query_id", arg: 1, scope: !12189, file: !2761, line: 227, type: !2767)
!12194 = !DILocalVariable(name: "arg", arg: 2, scope: !12189, file: !2761, line: 227, type: !102)
!12195 = !DILocation(line: 0, scope: !12189)
!12196 = !DILocation(line: 229, column: 2, scope: !12189)
!12197 = distinct !DISubprogram(name: "arch_system_halt", scope: !12198, file: !12198, line: 23, type: !6091, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !12199)
!12198 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12199 = !{!12200}
!12200 = !DILocalVariable(name: "reason", arg: 1, scope: !12197, file: !12198, line: 23, type: !32)
!12201 = !DILocation(line: 0, scope: !12197)
!12202 = !DILocation(line: 55, column: 2, scope: !12203, inlinedAt: !12207)
!12203 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6080, file: !6080, line: 42, type: !6081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !12204)
!12204 = !{!12205, !12206}
!12205 = !DILocalVariable(name: "key", scope: !12203, file: !6080, line: 44, type: !32)
!12206 = !DILocalVariable(name: "tmp", scope: !12203, file: !6080, line: 53, type: !32)
!12207 = distinct !DILocation(line: 31, column: 8, scope: !12197)
!12208 = !{i64 1650401}
!12209 = !DILocation(line: 0, scope: !12203, inlinedAt: !12207)
!12210 = !DILocation(line: 32, column: 2, scope: !12197)
!12211 = !DILocation(line: 32, column: 2, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12213, file: !12198, line: 32, column: 2)
!12213 = distinct !DILexicalBlock(scope: !12197, file: !12198, line: 32, column: 2)
!12214 = distinct !{!12214, !12215, !12216}
!12215 = !DILocation(line: 32, column: 2, scope: !12213)
!12216 = !DILocation(line: 34, column: 2, scope: !12213)
!12217 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12198, file: !12198, line: 39, type: !12218, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !12220)
!12218 = !DISubroutineType(types: !12219)
!12219 = !{null, !32, !12015}
!12220 = !{!12221, !12222}
!12221 = !DILocalVariable(name: "reason", arg: 1, scope: !12217, file: !12198, line: 39, type: !32)
!12222 = !DILocalVariable(name: "esf", arg: 2, scope: !12217, file: !12198, line: 40, type: !12015)
!12223 = !DILocation(line: 0, scope: !12217)
!12224 = !DILocation(line: 46, column: 2, scope: !12217)
!12225 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12198, file: !12198, line: 81, type: !6091, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !12226)
!12226 = !{!12227}
!12227 = !DILocalVariable(name: "reason", arg: 1, scope: !12225, file: !12198, line: 81, type: !32)
!12228 = !DILocation(line: 0, scope: !12225)
!12229 = !DILocation(line: 83, column: 2, scope: !12225)
!12230 = distinct !DISubprogram(name: "z_fatal_error", scope: !12198, file: !12198, line: 96, type: !12218, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !12231)
!12231 = !{!12232, !12233, !12234, !12235}
!12232 = !DILocalVariable(name: "reason", arg: 1, scope: !12230, file: !12198, line: 96, type: !32)
!12233 = !DILocalVariable(name: "esf", arg: 2, scope: !12230, file: !12198, line: 96, type: !12015)
!12234 = !DILocalVariable(name: "key", scope: !12230, file: !12198, line: 102, type: !32)
!12235 = !DILocalVariable(name: "thread", scope: !12230, file: !12198, line: 103, type: !12059)
!12236 = !DILocation(line: 0, scope: !12230)
!12237 = !DILocation(line: 55, column: 2, scope: !12203, inlinedAt: !12238)
!12238 = distinct !DILocation(line: 102, column: 21, scope: !12230)
!12239 = !DILocation(line: 0, scope: !12203, inlinedAt: !12238)
!12240 = !DILocation(line: 119, column: 11, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12230, file: !12198, line: 119, column: 6)
!12242 = !DILocation(line: 119, column: 20, scope: !12241)
!12243 = !DILocation(line: 131, column: 2, scope: !12230)
!12244 = !DILocation(line: 151, column: 7, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12246, file: !12198, line: 146, column: 32)
!12246 = distinct !DILexicalBlock(scope: !12230, file: !12198, line: 146, column: 6)
!12247 = !DILocation(line: 151, column: 21, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12245, file: !12198, line: 151, column: 7)
!12249 = !DILocation(line: 104, column: 4, scope: !12230)
!12250 = !DILocalVariable(name: "key", arg: 1, scope: !12251, file: !6080, line: 84, type: !32)
!12251 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6080, file: !6080, line: 84, type: !6091, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !12252)
!12252 = !{!12250}
!12253 = !DILocation(line: 0, scope: !12251, inlinedAt: !12254)
!12254 = distinct !DILocation(line: 186, column: 2, scope: !12230)
!12255 = !DILocation(line: 95, column: 2, scope: !12251, inlinedAt: !12254)
!12256 = !{i64 1651218}
!12257 = !DILocation(line: 189, column: 3, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12259, file: !12198, line: 188, column: 41)
!12259 = distinct !DILexicalBlock(scope: !12230, file: !12198, line: 188, column: 6)
!12260 = !DILocation(line: 191, column: 1, scope: !12230)
!12261 = distinct !DISubprogram(name: "k_current_get", scope: !370, file: !370, line: 530, type: !12262, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !162)
!12262 = !DISubroutineType(types: !12263)
!12263 = !{!12264}
!12264 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !276, line: 347, baseType: !12059)
!12265 = !DILocation(line: 535, column: 9, scope: !12261)
!12266 = !DILocation(line: 535, column: 2, scope: !12261)
!12267 = distinct !DISubprogram(name: "k_thread_abort", scope: !3244, file: !3244, line: 188, type: !12268, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !12270)
!12268 = !DISubroutineType(types: !12269)
!12269 = !{null, !12264}
!12270 = !{!12271}
!12271 = !DILocalVariable(name: "thread", arg: 1, scope: !12267, file: !3244, line: 188, type: !12264)
!12272 = !DILocation(line: 0, scope: !12267)
!12273 = !DILocation(line: 197, column: 2, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12267, file: !3244, line: 197, column: 2)
!12275 = !{i64 2152216059}
!12276 = !DILocation(line: 198, column: 2, scope: !12267)
!12277 = !DILocation(line: 199, column: 1, scope: !12267)
!12278 = distinct !DISubprogram(name: "z_current_get", scope: !3244, file: !3244, line: 173, type: !12262, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2757, retainedNodes: !162)
!12279 = !DILocation(line: 180, column: 2, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12278, file: !3244, line: 180, column: 2)
!12281 = !{i64 2152215991}
!12282 = !DILocation(line: 181, column: 9, scope: !12278)
!12283 = !DILocation(line: 181, column: 2, scope: !12278)
!12284 = distinct !DISubprogram(name: "z_early_memset", scope: !1704, file: !1704, line: 108, type: !12285, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12287)
!12285 = !DISubroutineType(types: !12286)
!12286 = !{null, !102, !103, !120}
!12287 = !{!12288, !12289, !12290}
!12288 = !DILocalVariable(name: "dst", arg: 1, scope: !12284, file: !1704, line: 108, type: !102)
!12289 = !DILocalVariable(name: "c", arg: 2, scope: !12284, file: !1704, line: 108, type: !103)
!12290 = !DILocalVariable(name: "n", arg: 3, scope: !12284, file: !1704, line: 108, type: !120)
!12291 = !DILocation(line: 0, scope: !12284)
!12292 = !DILocation(line: 110, column: 9, scope: !12284)
!12293 = !DILocation(line: 111, column: 1, scope: !12284)
!12294 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1704, file: !1704, line: 121, type: !12295, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12297)
!12295 = !DISubroutineType(types: !12296)
!12296 = !{null, !102, !13, !120}
!12297 = !{!12298, !12299, !12300}
!12298 = !DILocalVariable(name: "dst", arg: 1, scope: !12294, file: !1704, line: 121, type: !102)
!12299 = !DILocalVariable(name: "src", arg: 2, scope: !12294, file: !1704, line: 121, type: !13)
!12300 = !DILocalVariable(name: "n", arg: 3, scope: !12294, file: !1704, line: 121, type: !120)
!12301 = !DILocation(line: 0, scope: !12294)
!12302 = !DILocation(line: 123, column: 9, scope: !12294)
!12303 = !DILocation(line: 124, column: 1, scope: !12294)
!12304 = distinct !DISubprogram(name: "z_bss_zero", scope: !1704, file: !1704, line: 132, type: !2794, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !162)
!12305 = !DILocation(line: 143, column: 2, scope: !12304)
!12306 = !DILocation(line: 168, column: 1, scope: !12304)
!12307 = distinct !DISubprogram(name: "z_init_cpu", scope: !1704, file: !1704, line: 372, type: !7984, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12308)
!12308 = !{!12309}
!12309 = !DILocalVariable(name: "id", arg: 1, scope: !12307, file: !1704, line: 372, type: !103)
!12310 = !DILocation(line: 0, scope: !12307)
!12311 = !DILocation(line: 374, column: 2, scope: !12307)
!12312 = !DILocation(line: 375, column: 34, scope: !12307)
!12313 = !DILocation(line: 375, column: 19, scope: !12307)
!12314 = !DILocation(line: 375, column: 31, scope: !12307)
!12315 = !DILocation(line: 376, column: 24, scope: !12307)
!12316 = !DILocation(line: 376, column: 19, scope: !12307)
!12317 = !DILocation(line: 376, column: 22, scope: !12307)
!12318 = !DILocation(line: 378, column: 26, scope: !12307)
!12319 = !DILocation(line: 378, column: 4, scope: !12307)
!12320 = !DILocation(line: 378, column: 50, scope: !12307)
!12321 = !DILocation(line: 377, column: 19, scope: !12307)
!12322 = !DILocation(line: 377, column: 29, scope: !12307)
!12323 = !DILocation(line: 384, column: 1, scope: !12307)
!12324 = distinct !DISubprogram(name: "init_idle_thread", scope: !1704, file: !1704, line: 343, type: !7984, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12325)
!12325 = !{!12326, !12327, !12328, !12331}
!12326 = !DILocalVariable(name: "i", arg: 1, scope: !12324, file: !1704, line: 343, type: !103)
!12327 = !DILocalVariable(name: "thread", scope: !12324, file: !1704, line: 345, type: !1797)
!12328 = !DILocalVariable(name: "stack", scope: !12324, file: !1704, line: 346, type: !12329)
!12329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12330, size: 32)
!12330 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3123, line: 44, baseType: !1911)
!12331 = !DILocalVariable(name: "tname", scope: !12324, file: !1704, line: 358, type: !1062)
!12332 = !DILocation(line: 0, scope: !12324)
!12333 = !DILocation(line: 345, column: 29, scope: !12324)
!12334 = !DILocation(line: 346, column: 28, scope: !12324)
!12335 = !DILocation(line: 362, column: 37, scope: !12324)
!12336 = !DILocation(line: 362, column: 36, scope: !12324)
!12337 = !DILocation(line: 361, column: 2, scope: !12324)
!12338 = !DILocation(line: 365, column: 2, scope: !12324)
!12339 = !DILocation(line: 370, column: 1, scope: !12324)
!12340 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1912, file: !1912, line: 331, type: !12341, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12343)
!12341 = !DISubroutineType(types: !12342)
!12342 = !{!1062, !12329}
!12343 = !{!12344}
!12344 = !DILocalVariable(name: "sym", arg: 1, scope: !12340, file: !1912, line: 331, type: !12329)
!12345 = !DILocation(line: 0, scope: !12340)
!12346 = !DILocation(line: 333, column: 21, scope: !12340)
!12347 = !DILocation(line: 333, column: 2, scope: !12340)
!12348 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12349, file: !12349, line: 155, type: !12350, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12352)
!12349 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12350 = !DISubroutineType(types: !12351)
!12351 = !{null, !1797}
!12352 = !{!12353}
!12353 = !DILocalVariable(name: "thread", arg: 1, scope: !12348, file: !12349, line: 155, type: !1797)
!12354 = !DILocation(line: 0, scope: !12348)
!12355 = !DILocation(line: 157, column: 15, scope: !12348)
!12356 = !DILocation(line: 157, column: 28, scope: !12348)
!12357 = !DILocation(line: 158, column: 1, scope: !12348)
!12358 = distinct !DISubprogram(name: "z_cstart", scope: !1704, file: !1704, line: 501, type: !2794, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12359)
!12359 = !{!12360}
!12360 = !DILocalVariable(name: "dummy_thread", scope: !12358, file: !1704, line: 518, type: !1798)
!12361 = !DILocation(line: 507, column: 2, scope: !12358)
!12362 = !DILocation(line: 43, column: 14, scope: !12363, inlinedAt: !12367)
!12363 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12364, file: !12364, line: 40, type: !2794, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12365)
!12364 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12365 = !{!12366}
!12366 = !DILocalVariable(name: "msp", scope: !12363, file: !12364, line: 42, type: !137)
!12367 = distinct !DILocation(line: 44, column: 2, scope: !12368, inlinedAt: !12370)
!12368 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12369, file: !12369, line: 42, type: !2794, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !162)
!12369 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12370 = distinct !DILocation(line: 510, column: 2, scope: !12358)
!12371 = !DILocation(line: 43, column: 3, scope: !12363, inlinedAt: !12367)
!12372 = !DILocation(line: 43, column: 60, scope: !12363, inlinedAt: !12367)
!12373 = !DILocation(line: 0, scope: !12363, inlinedAt: !12367)
!12374 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12375, file: !6271, line: 1153, type: !137)
!12375 = distinct !DISubprogram(name: "__set_MSP", scope: !6271, file: !6271, line: 1153, type: !6104, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12376)
!12376 = !{!12374}
!12377 = !DILocation(line: 0, scope: !12375, inlinedAt: !12378)
!12378 = distinct !DILocation(line: 46, column: 2, scope: !12363, inlinedAt: !12367)
!12379 = !DILocation(line: 1155, column: 3, scope: !12375, inlinedAt: !12378)
!12380 = !{i64 2463841}
!12381 = !DILocation(line: 62, column: 11, scope: !12363, inlinedAt: !12367)
!12382 = !DILocation(line: 102, column: 2, scope: !12383, inlinedAt: !12384)
!12383 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7025, file: !7025, line: 97, type: !2794, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !162)
!12384 = distinct !DILocation(line: 45, column: 2, scope: !12368, inlinedAt: !12370)
!12385 = !DILocation(line: 108, column: 2, scope: !12383, inlinedAt: !12384)
!12386 = !DILocation(line: 112, column: 2, scope: !12383, inlinedAt: !12384)
!12387 = !DILocation(line: 113, column: 2, scope: !12383, inlinedAt: !12384)
!12388 = !DILocation(line: 114, column: 2, scope: !12383, inlinedAt: !12384)
!12389 = !DILocation(line: 116, column: 2, scope: !12383, inlinedAt: !12384)
!12390 = !DILocation(line: 123, column: 13, scope: !12383, inlinedAt: !12384)
!12391 = !DILocation(line: 46, column: 2, scope: !12368, inlinedAt: !12370)
!12392 = !DILocation(line: 47, column: 2, scope: !12368, inlinedAt: !12370)
!12393 = !DILocation(line: 174, column: 12, scope: !12394, inlinedAt: !12395)
!12394 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7025, file: !7025, line: 169, type: !2794, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !162)
!12395 = distinct !DILocation(line: 48, column: 2, scope: !12368, inlinedAt: !12370)
!12396 = !DILocation(line: 179, column: 12, scope: !12394, inlinedAt: !12395)
!12397 = !DILocation(line: 50, column: 2, scope: !12368, inlinedAt: !12370)
!12398 = !DILocation(line: 57, column: 2, scope: !12368, inlinedAt: !12370)
!12399 = !DILocation(line: 518, column: 2, scope: !12358)
!12400 = !DILocation(line: 518, column: 18, scope: !12358)
!12401 = !DILocation(line: 520, column: 2, scope: !12358)
!12402 = !DILocation(line: 523, column: 2, scope: !12358)
!12403 = !DILocation(line: 526, column: 2, scope: !12358)
!12404 = !DILocation(line: 527, column: 2, scope: !12358)
!12405 = !DILocation(line: 543, column: 24, scope: !12358)
!12406 = !DILocation(line: 543, column: 2, scope: !12358)
!12407 = !DILocation(line: 0, scope: !1931)
!12408 = !DILocation(line: 246, column: 15, scope: !1949)
!12409 = !DILocation(line: 246, column: 36, scope: !1948)
!12410 = !DILocation(line: 246, column: 2, scope: !1949)
!12411 = !DILocation(line: 247, column: 37, scope: !1947)
!12412 = !DILocation(line: 0, scope: !1947)
!12413 = !DILocation(line: 248, column: 19, scope: !1947)
!12414 = !DILocation(line: 248, column: 12, scope: !1947)
!12415 = !DILocation(line: 250, column: 11, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !1947, file: !1704, line: 250, column: 7)
!12417 = !DILocation(line: 250, column: 7, scope: !1947)
!12418 = !DILocation(line: 254, column: 11, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12420, file: !1704, line: 254, column: 8)
!12420 = distinct !DILexicalBlock(scope: !12416, file: !1704, line: 250, column: 20)
!12421 = !DILocation(line: 254, column: 8, scope: !12420)
!12422 = !DILocation(line: 255, column: 9, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12419, file: !1704, line: 254, column: 17)
!12424 = !DILocation(line: 258, column: 9, scope: !12423)
!12425 = !DILocation(line: 261, column: 28, scope: !12423)
!12426 = !DILocation(line: 261, column: 10, scope: !12423)
!12427 = !DILocation(line: 261, column: 17, scope: !12423)
!12428 = !DILocation(line: 261, column: 26, scope: !12423)
!12429 = !DILocation(line: 262, column: 4, scope: !12423)
!12430 = !DILocation(line: 263, column: 9, scope: !12420)
!12431 = !DILocation(line: 263, column: 16, scope: !12420)
!12432 = !DILocation(line: 263, column: 28, scope: !12420)
!12433 = !DILocation(line: 264, column: 3, scope: !12420)
!12434 = !DILocation(line: 246, column: 60, scope: !1948)
!12435 = distinct !{!12435, !12410, !12436}
!12436 = !DILocation(line: 265, column: 2, scope: !1949)
!12437 = !DILocation(line: 266, column: 1, scope: !1931)
!12438 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !415, file: !415, line: 1638, type: !6305, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12439)
!12439 = !{!12440, !12441}
!12440 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12438, file: !415, line: 1638, type: !739)
!12441 = !DILocalVariable(name: "priority", arg: 2, scope: !12438, file: !415, line: 1638, type: !137)
!12442 = !DILocation(line: 0, scope: !12438)
!12443 = !DILocation(line: 1646, column: 48, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12445, file: !415, line: 1645, column: 3)
!12445 = distinct !DILexicalBlock(scope: !12438, file: !415, line: 1640, column: 7)
!12446 = !DILocation(line: 1646, column: 32, scope: !12444)
!12447 = !DILocation(line: 1646, column: 40, scope: !12444)
!12448 = !DILocation(line: 1646, column: 5, scope: !12444)
!12449 = !DILocation(line: 1646, column: 46, scope: !12444)
!12450 = !DILocation(line: 1648, column: 1, scope: !12438)
!12451 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12369, file: !12369, line: 32, type: !2794, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12452 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12453, file: !12453, line: 215, type: !12350, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12454)
!12453 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12454 = !{!12455}
!12455 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12452, file: !12453, line: 215, type: !1797)
!12456 = !DILocation(line: 0, scope: !12452)
!12457 = !DILocation(line: 217, column: 21, scope: !12452)
!12458 = !DILocation(line: 217, column: 34, scope: !12452)
!12459 = !DILocation(line: 221, column: 21, scope: !12452)
!12460 = !DILocation(line: 221, column: 34, scope: !12452)
!12461 = !DILocation(line: 223, column: 27, scope: !12452)
!12462 = !DILocation(line: 223, column: 33, scope: !12452)
!12463 = !DILocation(line: 224, column: 27, scope: !12452)
!12464 = !DILocation(line: 224, column: 32, scope: !12452)
!12465 = !DILocation(line: 232, column: 16, scope: !12452)
!12466 = !DILocation(line: 232, column: 30, scope: !12452)
!12467 = !DILocation(line: 239, column: 24, scope: !12452)
!12468 = !DILocation(line: 240, column: 1, scope: !12452)
!12469 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1704, file: !1704, line: 399, type: !12470, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12472)
!12470 = !DISubroutineType(types: !12471)
!12471 = !{!1062}
!12472 = !{!12473}
!12473 = !DILocalVariable(name: "stack_ptr", scope: !12469, file: !1704, line: 401, type: !1062)
!12474 = !DILocation(line: 404, column: 2, scope: !12469)
!12475 = !DILocation(line: 416, column: 24, scope: !12469)
!12476 = !DILocation(line: 418, column: 14, scope: !12469)
!12477 = !DILocation(line: 0, scope: !12469)
!12478 = !DILocation(line: 423, column: 2, scope: !12469)
!12479 = !DILocation(line: 424, column: 2, scope: !12469)
!12480 = !DILocation(line: 426, column: 2, scope: !12469)
!12481 = !DILocation(line: 428, column: 2, scope: !12469)
!12482 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1704, file: !1704, line: 432, type: !12483, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12485)
!12483 = !DISubroutineType(types: !12484)
!12484 = !{null, !1062}
!12485 = !{!12486}
!12486 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12482, file: !1704, line: 432, type: !1062)
!12487 = !DILocation(line: 0, scope: !12482)
!12488 = !DILocation(line: 435, column: 2, scope: !12482)
!12489 = !DILocation(line: 445, column: 2, scope: !12482)
!12490 = distinct !DISubprogram(name: "bg_thread_main", scope: !1704, file: !1704, line: 277, type: !3125, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1700, retainedNodes: !12491)
!12491 = !{!12492, !12493, !12494}
!12492 = !DILocalVariable(name: "unused1", arg: 1, scope: !12490, file: !1704, line: 277, type: !102)
!12493 = !DILocalVariable(name: "unused2", arg: 2, scope: !12490, file: !1704, line: 277, type: !102)
!12494 = !DILocalVariable(name: "unused3", arg: 3, scope: !12490, file: !1704, line: 277, type: !102)
!12495 = !DILocation(line: 0, scope: !12490)
!12496 = !DILocation(line: 291, column: 20, scope: !12490)
!12497 = !DILocation(line: 293, column: 2, scope: !12490)
!12498 = !DILocation(line: 297, column: 2, scope: !12490)
!12499 = !DILocation(line: 305, column: 2, scope: !12490)
!12500 = !DILocation(line: 307, column: 2, scope: !12490)
!12501 = !DILocation(line: 330, column: 8, scope: !12490)
!12502 = !DILocation(line: 333, column: 34, scope: !12490)
!12503 = !DILocation(line: 339, column: 1, scope: !12490)
!12504 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1958, file: !1958, line: 45, type: !12505, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12513)
!12505 = !DISubroutineType(types: !12506)
!12506 = !{null, !12507, !102}
!12507 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !370, line: 103, baseType: !12508)
!12508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12509, size: 32)
!12509 = !DISubroutineType(types: !12510)
!12510 = !{null, !12511, !102}
!12511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12512, size: 32)
!12512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1963)
!12513 = !{!12514, !12515}
!12514 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12504, file: !1958, line: 45, type: !12507)
!12515 = !DILocalVariable(name: "user_data", arg: 2, scope: !12504, file: !1958, line: 45, type: !102)
!12516 = !DILocation(line: 0, scope: !12504)
!12517 = !DILocation(line: 71, column: 1, scope: !12504)
!12518 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1958, file: !1958, line: 73, type: !12505, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12519)
!12519 = !{!12520, !12521}
!12520 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12518, file: !1958, line: 73, type: !12507)
!12521 = !DILocalVariable(name: "user_data", arg: 2, scope: !12518, file: !1958, line: 73, type: !102)
!12522 = !DILocation(line: 0, scope: !12518)
!12523 = !DILocation(line: 95, column: 1, scope: !12518)
!12524 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1958, file: !1958, line: 97, type: !7026, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !162)
!12525 = !DILocation(line: 1031, column: 3, scope: !12526, inlinedAt: !12529)
!12526 = distinct !DISubprogram(name: "__get_IPSR", scope: !6271, file: !6271, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12527)
!12527 = !{!12528}
!12528 = !DILocalVariable(name: "result", scope: !12526, file: !6271, line: 1029, type: !137)
!12529 = distinct !DILocation(line: 48, column: 10, scope: !12530, inlinedAt: !12531)
!12530 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7025, file: !7025, line: 46, type: !7026, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !162)
!12531 = distinct !DILocation(line: 99, column: 9, scope: !12524)
!12532 = !{i64 2469492}
!12533 = !DILocation(line: 0, scope: !12526, inlinedAt: !12529)
!12534 = !DILocation(line: 48, column: 9, scope: !12530, inlinedAt: !12531)
!12535 = !DILocation(line: 99, column: 2, scope: !12524)
!12536 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1958, file: !1958, line: 106, type: !2794, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !162)
!12537 = !DILocation(line: 108, column: 2, scope: !12536)
!12538 = !DILocation(line: 108, column: 17, scope: !12536)
!12539 = !DILocation(line: 108, column: 30, scope: !12536)
!12540 = !DILocation(line: 109, column: 1, scope: !12536)
!12541 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1958, file: !1958, line: 116, type: !2794, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !162)
!12542 = !DILocation(line: 118, column: 2, scope: !12541)
!12543 = !DILocation(line: 118, column: 17, scope: !12541)
!12544 = !DILocation(line: 118, column: 30, scope: !12541)
!12545 = !DILocation(line: 119, column: 1, scope: !12541)
!12546 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1958, file: !1958, line: 126, type: !7026, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !162)
!12547 = !DILocation(line: 128, column: 10, scope: !12546)
!12548 = !DILocation(line: 128, column: 25, scope: !12546)
!12549 = !DILocation(line: 128, column: 38, scope: !12546)
!12550 = !DILocation(line: 128, column: 53, scope: !12546)
!12551 = !DILocation(line: 128, column: 2, scope: !12546)
!12552 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1958, file: !1958, line: 187, type: !12553, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12555)
!12553 = !DISubroutineType(types: !12554)
!12554 = !{!103, !1962, !212}
!12555 = !{!12556, !12557}
!12556 = !DILocalVariable(name: "thread", arg: 1, scope: !12552, file: !1958, line: 187, type: !1962)
!12557 = !DILocalVariable(name: "value", arg: 2, scope: !12552, file: !1958, line: 187, type: !212)
!12558 = !DILocation(line: 0, scope: !12552)
!12559 = !DILocation(line: 206, column: 2, scope: !12552)
!12560 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1958, file: !1958, line: 238, type: !12561, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12563)
!12561 = !DISubroutineType(types: !12562)
!12562 = !{!212, !1962}
!12563 = !{!12564}
!12564 = !DILocalVariable(name: "thread", arg: 1, scope: !12560, file: !1958, line: 238, type: !1962)
!12565 = !DILocation(line: 0, scope: !12560)
!12566 = !DILocation(line: 244, column: 2, scope: !12560)
!12567 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1958, file: !1958, line: 248, type: !12568, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12570)
!12568 = !DISubroutineType(types: !12569)
!12569 = !{!103, !1961, !1062, !120}
!12570 = !{!12571, !12572, !12573}
!12571 = !DILocalVariable(name: "thread", arg: 1, scope: !12567, file: !1958, line: 248, type: !1961)
!12572 = !DILocalVariable(name: "buf", arg: 2, scope: !12567, file: !1958, line: 248, type: !1062)
!12573 = !DILocalVariable(name: "size", arg: 3, scope: !12567, file: !1958, line: 248, type: !120)
!12574 = !DILocation(line: 0, scope: !12567)
!12575 = !DILocation(line: 257, column: 2, scope: !12567)
!12576 = !DILocation(line: 0, scope: !1957)
!12577 = !DILocation(line: 281, column: 11, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !1957, file: !1958, line: 281, column: 6)
!12579 = !DILocation(line: 281, column: 20, scope: !12578)
!12580 = !DILocation(line: 275, column: 45, scope: !1957)
!12581 = !DILocation(line: 285, column: 10, scope: !1957)
!12582 = !DILocation(line: 0, scope: !2078)
!12583 = !DILocation(line: 293, column: 39, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !2078, file: !1958, line: 293, column: 2)
!12585 = !DILocation(line: 293, column: 2, scope: !2078)
!12586 = !DILocation(line: 273, column: 14, scope: !1957)
!12587 = !DILocation(line: 309, column: 2, scope: !1957)
!12588 = !DILocation(line: 309, column: 11, scope: !1957)
!12589 = !DILocation(line: 311, column: 2, scope: !1957)
!12590 = !DILocation(line: 293, column: 26, scope: !12584)
!12591 = !DILocation(line: 294, column: 9, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12584, file: !1958, line: 293, column: 54)
!12593 = !DILocation(line: 295, column: 21, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12592, file: !1958, line: 295, column: 7)
!12595 = !DILocation(line: 295, column: 28, scope: !12594)
!12596 = !DILocation(line: 295, column: 7, scope: !12592)
!12597 = !DILocation(line: 299, column: 25, scope: !12592)
!12598 = !DILocation(line: 299, column: 41, scope: !12592)
!12599 = !DILocation(line: 300, column: 7, scope: !12592)
!12600 = !DILocation(line: 300, column: 26, scope: !12592)
!12601 = !DILocation(line: 299, column: 10, scope: !12592)
!12602 = !DILocation(line: 299, column: 7, scope: !12592)
!12603 = !DILocation(line: 302, column: 16, scope: !12592)
!12604 = !DILocation(line: 304, column: 20, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12592, file: !1958, line: 304, column: 7)
!12606 = !DILocation(line: 304, column: 7, scope: !12592)
!12607 = !DILocation(line: 305, column: 26, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12605, file: !1958, line: 304, column: 26)
!12609 = !DILocation(line: 305, column: 42, scope: !12608)
!12610 = !DILocation(line: 305, column: 11, scope: !12608)
!12611 = !DILocation(line: 305, column: 8, scope: !12608)
!12612 = !DILocation(line: 306, column: 3, scope: !12608)
!12613 = !DILocation(line: 293, column: 50, scope: !12584)
!12614 = !DILocation(line: 312, column: 1, scope: !1957)
!12615 = distinct !DISubprogram(name: "copy_bytes", scope: !1958, file: !1958, line: 261, type: !12616, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12618)
!12616 = !DISubroutineType(types: !12617)
!12617 = !{!120, !1062, !120, !212, !120}
!12618 = !{!12619, !12620, !12621, !12622, !12623}
!12619 = !DILocalVariable(name: "dest", arg: 1, scope: !12615, file: !1958, line: 261, type: !1062)
!12620 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12615, file: !1958, line: 261, type: !120)
!12621 = !DILocalVariable(name: "src", arg: 3, scope: !12615, file: !1958, line: 261, type: !212)
!12622 = !DILocalVariable(name: "src_size", arg: 4, scope: !12615, file: !1958, line: 261, type: !120)
!12623 = !DILocalVariable(name: "bytes_to_copy", scope: !12615, file: !1958, line: 263, type: !120)
!12624 = !DILocation(line: 0, scope: !12615)
!12625 = !DILocation(line: 265, column: 18, scope: !12615)
!12626 = !DILocation(line: 266, column: 2, scope: !12615)
!12627 = !DILocation(line: 268, column: 2, scope: !12615)
!12628 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1958, file: !1958, line: 383, type: !12629, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12631)
!12629 = !DISubroutineType(types: !12630)
!12630 = !{null, !1962}
!12631 = !{!12632}
!12632 = !DILocalVariable(name: "thread", arg: 1, scope: !12628, file: !1958, line: 383, type: !1962)
!12633 = !DILocation(line: 0, scope: !12628)
!12634 = !DILocation(line: 387, column: 2, scope: !12628)
!12635 = !DILocation(line: 388, column: 1, scope: !12628)
!12636 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1958, file: !1958, line: 528, type: !12637, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12644)
!12637 = !DISubroutineType(types: !12638)
!12638 = !{!1062, !1962, !12639, !120, !3122, !102, !102, !102, !103, !137, !212}
!12639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12640, size: 32)
!12640 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3123, line: 44, baseType: !12641)
!12641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1912, line: 47, size: 8, elements: !12642)
!12642 = !{!12643}
!12643 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12641, file: !1912, line: 48, baseType: !109, size: 8)
!12644 = !{!12645, !12646, !12647, !12648, !12649, !12650, !12651, !12652, !12653, !12654, !12655}
!12645 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12636, file: !1958, line: 528, type: !1962)
!12646 = !DILocalVariable(name: "stack", arg: 2, scope: !12636, file: !1958, line: 529, type: !12639)
!12647 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12636, file: !1958, line: 529, type: !120)
!12648 = !DILocalVariable(name: "entry", arg: 4, scope: !12636, file: !1958, line: 530, type: !3122)
!12649 = !DILocalVariable(name: "p1", arg: 5, scope: !12636, file: !1958, line: 531, type: !102)
!12650 = !DILocalVariable(name: "p2", arg: 6, scope: !12636, file: !1958, line: 531, type: !102)
!12651 = !DILocalVariable(name: "p3", arg: 7, scope: !12636, file: !1958, line: 531, type: !102)
!12652 = !DILocalVariable(name: "prio", arg: 8, scope: !12636, file: !1958, line: 532, type: !103)
!12653 = !DILocalVariable(name: "options", arg: 9, scope: !12636, file: !1958, line: 532, type: !137)
!12654 = !DILocalVariable(name: "name", arg: 10, scope: !12636, file: !1958, line: 532, type: !212)
!12655 = !DILocalVariable(name: "stack_ptr", scope: !12636, file: !1958, line: 534, type: !1062)
!12656 = !DILocation(line: 0, scope: !12636)
!12657 = !DILocation(line: 550, column: 28, scope: !12636)
!12658 = !DILocation(line: 550, column: 2, scope: !12636)
!12659 = !DILocation(line: 553, column: 34, scope: !12636)
!12660 = !DILocation(line: 553, column: 2, scope: !12636)
!12661 = !DILocation(line: 554, column: 14, scope: !12636)
!12662 = !DILocation(line: 564, column: 2, scope: !12636)
!12663 = !DILocation(line: 567, column: 14, scope: !12636)
!12664 = !DILocation(line: 567, column: 24, scope: !12636)
!12665 = !DILocation(line: 612, column: 7, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12636, file: !1958, line: 612, column: 6)
!12667 = !DILocation(line: 612, column: 6, scope: !12636)
!12668 = !DILocation(line: 627, column: 40, scope: !12636)
!12669 = !DILocation(line: 637, column: 2, scope: !12636)
!12670 = !DILocation(line: 613, column: 15, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12666, file: !1958, line: 612, column: 17)
!12672 = !DILocation(line: 613, column: 29, scope: !12671)
!12673 = !DILocation(line: 638, column: 1, scope: !12636)
!12674 = distinct !DISubprogram(name: "z_waitq_init", scope: !12675, file: !12675, line: 47, type: !12676, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12678)
!12675 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12676 = !DISubroutineType(types: !12677)
!12677 = !{null, !1993}
!12678 = !{!12679}
!12679 = !DILocalVariable(name: "w", arg: 1, scope: !12674, file: !12675, line: 47, type: !1993)
!12680 = !DILocation(line: 0, scope: !12674)
!12681 = !DILocation(line: 49, column: 21, scope: !12674)
!12682 = !DILocation(line: 49, column: 2, scope: !12674)
!12683 = !DILocation(line: 50, column: 1, scope: !12674)
!12684 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1958, file: !1958, line: 791, type: !12685, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12688)
!12685 = !DISubroutineType(types: !12686)
!12686 = !{null, !12687, !103, !137, !32}
!12687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!12688 = !{!12689, !12690, !12691, !12692}
!12689 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12684, file: !1958, line: 791, type: !12687)
!12690 = !DILocalVariable(name: "priority", arg: 2, scope: !12684, file: !1958, line: 791, type: !103)
!12691 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12684, file: !1958, line: 792, type: !137)
!12692 = !DILocalVariable(name: "options", arg: 4, scope: !12684, file: !1958, line: 792, type: !32)
!12693 = !DILocation(line: 0, scope: !12684)
!12694 = !DILocation(line: 795, column: 15, scope: !12684)
!12695 = !DILocation(line: 795, column: 25, scope: !12684)
!12696 = !DILocation(line: 796, column: 30, scope: !12684)
!12697 = !DILocation(line: 796, column: 15, scope: !12684)
!12698 = !DILocation(line: 796, column: 28, scope: !12684)
!12699 = !DILocation(line: 797, column: 30, scope: !12684)
!12700 = !DILocation(line: 797, column: 15, scope: !12684)
!12701 = !DILocation(line: 797, column: 28, scope: !12684)
!12702 = !DILocation(line: 799, column: 22, scope: !12684)
!12703 = !DILocation(line: 799, column: 15, scope: !12684)
!12704 = !DILocation(line: 799, column: 20, scope: !12684)
!12705 = !DILocation(line: 801, column: 15, scope: !12684)
!12706 = !DILocation(line: 801, column: 28, scope: !12684)
!12707 = !DILocation(line: 814, column: 2, scope: !12684)
!12708 = !DILocation(line: 815, column: 1, scope: !12684)
!12709 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1958, file: !1958, line: 449, type: !12710, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12712)
!12710 = !DISubroutineType(types: !12711)
!12711 = !{!1062, !1962, !12639, !120}
!12712 = !{!12713, !12714, !12715, !12716, !12717, !12718, !12719, !12720}
!12713 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12709, file: !1958, line: 449, type: !1962)
!12714 = !DILocalVariable(name: "stack", arg: 2, scope: !12709, file: !1958, line: 450, type: !12639)
!12715 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12709, file: !1958, line: 450, type: !120)
!12716 = !DILocalVariable(name: "stack_obj_size", scope: !12709, file: !1958, line: 452, type: !120)
!12717 = !DILocalVariable(name: "stack_buf_size", scope: !12709, file: !1958, line: 452, type: !120)
!12718 = !DILocalVariable(name: "stack_ptr", scope: !12709, file: !1958, line: 453, type: !1062)
!12719 = !DILocalVariable(name: "stack_buf_start", scope: !12709, file: !1958, line: 453, type: !1062)
!12720 = !DILocalVariable(name: "delta", scope: !12709, file: !1958, line: 454, type: !120)
!12721 = !DILocation(line: 0, scope: !12709)
!12722 = !DILocation(line: 465, column: 20, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12709, file: !1958, line: 463, column: 2)
!12724 = !DILocation(line: 466, column: 21, scope: !12723)
!12725 = !DILocation(line: 473, column: 28, scope: !12709)
!12726 = !DILocation(line: 514, column: 33, scope: !12709)
!12727 = !DILocation(line: 514, column: 25, scope: !12709)
!12728 = !DILocation(line: 514, column: 31, scope: !12709)
!12729 = !DILocation(line: 515, column: 25, scope: !12709)
!12730 = !DILocation(line: 515, column: 30, scope: !12709)
!12731 = !DILocation(line: 516, column: 25, scope: !12709)
!12732 = !DILocation(line: 516, column: 31, scope: !12709)
!12733 = !DILocation(line: 520, column: 2, scope: !12709)
!12734 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1912, file: !1912, line: 331, type: !12735, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12737)
!12735 = !DISubroutineType(types: !12736)
!12736 = !{!1062, !12639}
!12737 = !{!12738}
!12738 = !DILocalVariable(name: "sym", arg: 1, scope: !12734, file: !1912, line: 331, type: !12639)
!12739 = !DILocation(line: 0, scope: !12734)
!12740 = !DILocation(line: 333, column: 21, scope: !12734)
!12741 = !DILocation(line: 333, column: 2, scope: !12734)
!12742 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12743, file: !12743, line: 40, type: !12744, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12746)
!12743 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12744 = !DISubroutineType(types: !12745)
!12745 = !{null, !12687}
!12746 = !{!12747}
!12747 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12742, file: !12743, line: 40, type: !12687)
!12748 = !DILocation(line: 0, scope: !12742)
!12749 = !DILocation(line: 42, column: 31, scope: !12742)
!12750 = !DILocation(line: 42, column: 2, scope: !12742)
!12751 = !DILocation(line: 43, column: 1, scope: !12742)
!12752 = distinct !DISubprogram(name: "z_init_timeout", scope: !12743, file: !12743, line: 25, type: !2019, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12753)
!12753 = !{!12754}
!12754 = !DILocalVariable(name: "to", arg: 1, scope: !12752, file: !12743, line: 25, type: !2021)
!12755 = !DILocation(line: 0, scope: !12752)
!12756 = !DILocation(line: 27, column: 22, scope: !12752)
!12757 = !DILocation(line: 27, column: 2, scope: !12752)
!12758 = !DILocation(line: 28, column: 1, scope: !12752)
!12759 = distinct !DISubprogram(name: "sys_dnode_init", scope: !286, file: !286, line: 211, type: !12760, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12762)
!12760 = !DISubroutineType(types: !12761)
!12761 = !{null, !2065}
!12762 = !{!12763}
!12763 = !DILocalVariable(name: "node", arg: 1, scope: !12759, file: !286, line: 211, type: !2065)
!12764 = !DILocation(line: 0, scope: !12759)
!12765 = !DILocation(line: 213, column: 8, scope: !12759)
!12766 = !DILocation(line: 213, column: 13, scope: !12759)
!12767 = !DILocation(line: 214, column: 8, scope: !12759)
!12768 = !DILocation(line: 214, column: 13, scope: !12759)
!12769 = !DILocation(line: 215, column: 1, scope: !12759)
!12770 = distinct !DISubprogram(name: "sys_dlist_init", scope: !286, file: !286, line: 197, type: !12771, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12774)
!12771 = !DISubroutineType(types: !12772)
!12772 = !{null, !12773}
!12773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 32)
!12774 = !{!12775}
!12775 = !DILocalVariable(name: "list", arg: 1, scope: !12770, file: !286, line: 197, type: !12773)
!12776 = !DILocation(line: 0, scope: !12770)
!12777 = !DILocation(line: 199, column: 8, scope: !12770)
!12778 = !DILocation(line: 199, column: 13, scope: !12770)
!12779 = !DILocation(line: 200, column: 8, scope: !12770)
!12780 = !DILocation(line: 200, column: 13, scope: !12770)
!12781 = !DILocation(line: 201, column: 1, scope: !12770)
!12782 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1958, file: !1958, line: 641, type: !12783, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12789)
!12783 = !DISubroutineType(types: !12784)
!12784 = !{!1961, !1962, !12639, !120, !3122, !102, !102, !102, !103, !137, !12785}
!12785 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1461, line: 67, baseType: !12786)
!12786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1461, line: 65, size: 64, elements: !12787)
!12787 = !{!12788}
!12788 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12786, file: !1461, line: 66, baseType: !1460, size: 64)
!12789 = !{!12790, !12791, !12792, !12793, !12794, !12795, !12796, !12797, !12798, !12799}
!12790 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12782, file: !1958, line: 641, type: !1962)
!12791 = !DILocalVariable(name: "stack", arg: 2, scope: !12782, file: !1958, line: 642, type: !12639)
!12792 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12782, file: !1958, line: 643, type: !120)
!12793 = !DILocalVariable(name: "entry", arg: 4, scope: !12782, file: !1958, line: 643, type: !3122)
!12794 = !DILocalVariable(name: "p1", arg: 5, scope: !12782, file: !1958, line: 644, type: !102)
!12795 = !DILocalVariable(name: "p2", arg: 6, scope: !12782, file: !1958, line: 644, type: !102)
!12796 = !DILocalVariable(name: "p3", arg: 7, scope: !12782, file: !1958, line: 644, type: !102)
!12797 = !DILocalVariable(name: "prio", arg: 8, scope: !12782, file: !1958, line: 645, type: !103)
!12798 = !DILocalVariable(name: "options", arg: 9, scope: !12782, file: !1958, line: 645, type: !137)
!12799 = !DILocalVariable(name: "delay", arg: 10, scope: !12782, file: !1958, line: 645, type: !12785)
!12800 = !DILocation(line: 0, scope: !12782)
!12801 = !DILocation(line: 649, column: 2, scope: !12782)
!12802 = !DILocation(line: 652, column: 7, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12782, file: !1958, line: 652, column: 6)
!12804 = !DILocation(line: 652, column: 6, scope: !12782)
!12805 = !DILocation(line: 653, column: 3, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12803, file: !1958, line: 652, column: 39)
!12807 = !DILocation(line: 654, column: 2, scope: !12806)
!12808 = !DILocation(line: 656, column: 2, scope: !12782)
!12809 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1958, file: !1958, line: 401, type: !12810, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12812)
!12810 = !DISubroutineType(types: !12811)
!12811 = !{null, !1962, !12785}
!12812 = !{!12813, !12814}
!12813 = !DILocalVariable(name: "thread", arg: 1, scope: !12809, file: !1958, line: 401, type: !1962)
!12814 = !DILocalVariable(name: "delay", arg: 2, scope: !12809, file: !1958, line: 401, type: !12785)
!12815 = !DILocation(line: 0, scope: !12809)
!12816 = !DILocation(line: 404, column: 6, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12809, file: !1958, line: 404, column: 6)
!12818 = !DILocation(line: 404, column: 6, scope: !12809)
!12819 = !DILocation(line: 405, column: 3, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12817, file: !1958, line: 404, column: 38)
!12821 = !DILocation(line: 406, column: 2, scope: !12820)
!12822 = !DILocation(line: 407, column: 3, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12817, file: !1958, line: 406, column: 9)
!12824 = !DILocation(line: 413, column: 1, scope: !12809)
!12825 = distinct !DISubprogram(name: "k_thread_start", scope: !3244, file: !3244, line: 205, type: !12826, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12828)
!12826 = !DISubroutineType(types: !12827)
!12827 = !{null, !1961}
!12828 = !{!12829}
!12829 = !DILocalVariable(name: "thread", arg: 1, scope: !12825, file: !3244, line: 205, type: !1961)
!12830 = !DILocation(line: 0, scope: !12825)
!12831 = !DILocation(line: 214, column: 2, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12825, file: !3244, line: 214, column: 2)
!12833 = !{i64 2152241283}
!12834 = !DILocation(line: 215, column: 2, scope: !12825)
!12835 = !DILocation(line: 216, column: 1, scope: !12825)
!12836 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12743, file: !12743, line: 47, type: !12810, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12837)
!12837 = !{!12838, !12839}
!12838 = !DILocalVariable(name: "thread", arg: 1, scope: !12836, file: !12743, line: 47, type: !1962)
!12839 = !DILocalVariable(name: "ticks", arg: 2, scope: !12836, file: !12743, line: 47, type: !12785)
!12840 = !DILocation(line: 0, scope: !12836)
!12841 = !DILocation(line: 49, column: 30, scope: !12836)
!12842 = !DILocation(line: 49, column: 2, scope: !12836)
!12843 = !DILocation(line: 50, column: 1, scope: !12836)
!12844 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1958, file: !1958, line: 748, type: !2794, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12845)
!12845 = !{!12846, !12864}
!12846 = !DILocalVariable(name: "thread_data", scope: !12847, file: !1958, line: 750, type: !12848)
!12847 = distinct !DILexicalBlock(scope: !12844, file: !1958, line: 750, column: 2)
!12848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12849, size: 32)
!12849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !370, line: 620, size: 384, elements: !12850)
!12850 = !{!12851, !12852, !12853, !12854, !12855, !12856, !12857, !12858, !12859, !12860, !12861, !12863}
!12851 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12849, file: !370, line: 621, baseType: !1962, size: 32)
!12852 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12849, file: !370, line: 622, baseType: !12639, size: 32, offset: 32)
!12853 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12849, file: !370, line: 623, baseType: !32, size: 32, offset: 64)
!12854 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12849, file: !370, line: 624, baseType: !3122, size: 32, offset: 96)
!12855 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12849, file: !370, line: 625, baseType: !102, size: 32, offset: 128)
!12856 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12849, file: !370, line: 626, baseType: !102, size: 32, offset: 160)
!12857 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12849, file: !370, line: 627, baseType: !102, size: 32, offset: 192)
!12858 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12849, file: !370, line: 628, baseType: !103, size: 32, offset: 224)
!12859 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12849, file: !370, line: 629, baseType: !137, size: 32, offset: 256)
!12860 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12849, file: !370, line: 630, baseType: !721, size: 32, offset: 288)
!12861 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12849, file: !370, line: 631, baseType: !12862, size: 32, offset: 320)
!12862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 32)
!12863 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12849, file: !370, line: 632, baseType: !212, size: 32, offset: 352)
!12864 = !DILocalVariable(name: "thread_data", scope: !12865, file: !1958, line: 781, type: !12848)
!12865 = distinct !DILexicalBlock(scope: !12844, file: !1958, line: 781, column: 2)
!12866 = !DILocation(line: 0, scope: !12847)
!12867 = !DILocation(line: 750, column: 2, scope: !12847)
!12868 = !DILocation(line: 780, column: 2, scope: !12844)
!12869 = !DILocation(line: 0, scope: !12865)
!12870 = !DILocation(line: 781, column: 2, scope: !12865)
!12871 = !DILocation(line: 752, column: 17, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12873, file: !1958, line: 750, column: 38)
!12873 = distinct !DILexicalBlock(scope: !12847, file: !1958, line: 750, column: 2)
!12874 = !DILocation(line: 753, column: 17, scope: !12872)
!12875 = !DILocation(line: 754, column: 17, scope: !12872)
!12876 = !DILocation(line: 755, column: 17, scope: !12872)
!12877 = !DILocation(line: 756, column: 17, scope: !12872)
!12878 = !DILocation(line: 757, column: 17, scope: !12872)
!12879 = !DILocation(line: 758, column: 17, scope: !12872)
!12880 = !DILocation(line: 759, column: 17, scope: !12872)
!12881 = !DILocation(line: 760, column: 17, scope: !12872)
!12882 = !DILocation(line: 751, column: 3, scope: !12872)
!12883 = !DILocation(line: 763, column: 16, scope: !12872)
!12884 = !DILocation(line: 763, column: 29, scope: !12872)
!12885 = !DILocation(line: 763, column: 39, scope: !12872)
!12886 = !DILocation(line: 750, column: 2, scope: !12873)
!12887 = !DILocation(line: 750, column: 2, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12873, file: !1958, line: 750, column: 2)
!12889 = distinct !{!12889, !12867, !12890}
!12890 = !DILocation(line: 764, column: 2, scope: !12847)
!12891 = !DILocation(line: 787, column: 2, scope: !12844)
!12892 = !DILocation(line: 788, column: 1, scope: !12844)
!12893 = !DILocation(line: 782, column: 20, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12895, file: !1958, line: 782, column: 7)
!12895 = distinct !DILexicalBlock(scope: !12896, file: !1958, line: 781, column: 38)
!12896 = distinct !DILexicalBlock(scope: !12865, file: !1958, line: 781, column: 2)
!12897 = !DILocation(line: 782, column: 31, scope: !12894)
!12898 = !DILocation(line: 782, column: 7, scope: !12895)
!12899 = !DILocation(line: 783, column: 37, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12894, file: !1958, line: 782, column: 51)
!12901 = !DILocation(line: 784, column: 10, scope: !12900)
!12902 = !DILocation(line: 783, column: 4, scope: !12900)
!12903 = !DILocation(line: 785, column: 3, scope: !12900)
!12904 = !DILocation(line: 781, column: 2, scope: !12896)
!12905 = !DILocation(line: 781, column: 2, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !12896, file: !1958, line: 781, column: 2)
!12907 = distinct !{!12907, !12870, !12908}
!12908 = !DILocation(line: 786, column: 2, scope: !12865)
!12909 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12910, file: !12910, line: 403, type: !12911, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12913)
!12910 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12911 = !DISubroutineType(types: !12912)
!12912 = !{!163, !163}
!12913 = !{!12914}
!12914 = !DILocalVariable(name: "t", arg: 1, scope: !12909, file: !12910, line: 403, type: !163)
!12915 = !DILocation(line: 0, scope: !12909)
!12916 = !DILocalVariable(name: "t", arg: 1, scope: !12917, file: !12910, line: 102, type: !163)
!12917 = distinct !DISubprogram(name: "z_tmcvt", scope: !12910, file: !12910, line: 102, type: !12918, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12920)
!12918 = !DISubroutineType(types: !12919)
!12919 = !{!163, !163, !137, !137, !224, !224, !224, !224}
!12920 = !{!12916, !12921, !12922, !12923, !12924, !12925, !12926, !12927, !12928, !12929, !12930}
!12921 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12917, file: !12910, line: 102, type: !137)
!12922 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12917, file: !12910, line: 103, type: !137)
!12923 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12917, file: !12910, line: 103, type: !224)
!12924 = !DILocalVariable(name: "result32", arg: 5, scope: !12917, file: !12910, line: 104, type: !224)
!12925 = !DILocalVariable(name: "round_up", arg: 6, scope: !12917, file: !12910, line: 104, type: !224)
!12926 = !DILocalVariable(name: "round_off", arg: 7, scope: !12917, file: !12910, line: 105, type: !224)
!12927 = !DILocalVariable(name: "mul_ratio", scope: !12917, file: !12910, line: 107, type: !224)
!12928 = !DILocalVariable(name: "div_ratio", scope: !12917, file: !12910, line: 109, type: !224)
!12929 = !DILocalVariable(name: "off", scope: !12917, file: !12910, line: 116, type: !163)
!12930 = !DILocalVariable(name: "rdivisor", scope: !12931, file: !12910, line: 119, type: !137)
!12931 = distinct !DILexicalBlock(scope: !12932, file: !12910, line: 118, column: 18)
!12932 = distinct !DILexicalBlock(scope: !12917, file: !12910, line: 118, column: 6)
!12933 = !DILocation(line: 0, scope: !12917, inlinedAt: !12934)
!12934 = distinct !DILocation(line: 406, column: 9, scope: !12909)
!12935 = !DILocation(line: 145, column: 13, scope: !12936, inlinedAt: !12934)
!12936 = distinct !DILexicalBlock(scope: !12937, file: !12910, line: 144, column: 10)
!12937 = distinct !DILexicalBlock(scope: !12938, file: !12910, line: 142, column: 7)
!12938 = distinct !DILexicalBlock(scope: !12939, file: !12910, line: 141, column: 24)
!12939 = distinct !DILexicalBlock(scope: !12940, file: !12910, line: 141, column: 13)
!12940 = distinct !DILexicalBlock(scope: !12917, file: !12910, line: 134, column: 6)
!12941 = !DILocation(line: 406, column: 2, scope: !12909)
!12942 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1958, file: !1958, line: 817, type: !3120, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12943)
!12943 = !{!12944, !12945, !12946, !12947}
!12944 = !DILocalVariable(name: "entry", arg: 1, scope: !12942, file: !1958, line: 817, type: !3122)
!12945 = !DILocalVariable(name: "p1", arg: 2, scope: !12942, file: !1958, line: 818, type: !102)
!12946 = !DILocalVariable(name: "p2", arg: 3, scope: !12942, file: !1958, line: 818, type: !102)
!12947 = !DILocalVariable(name: "p3", arg: 4, scope: !12942, file: !1958, line: 818, type: !102)
!12948 = !DILocation(line: 0, scope: !12942)
!12949 = !DILocation(line: 822, column: 2, scope: !12942)
!12950 = !DILocation(line: 822, column: 17, scope: !12942)
!12951 = !DILocation(line: 822, column: 30, scope: !12942)
!12952 = !DILocation(line: 823, column: 2, scope: !12942)
!12953 = !DILocation(line: 845, column: 2, scope: !12942)
!12954 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1958, file: !1958, line: 888, type: !12955, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12957)
!12955 = !DISubroutineType(types: !12956)
!12956 = !{!103, !1962}
!12957 = !{!12958}
!12958 = !DILocalVariable(name: "thread", arg: 1, scope: !12954, file: !1958, line: 888, type: !1962)
!12959 = !DILocation(line: 0, scope: !12954)
!12960 = !DILocation(line: 893, column: 2, scope: !12954)
!12961 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1958, file: !1958, line: 897, type: !12962, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12964)
!12962 = !DISubroutineType(types: !12963)
!12963 = !{!103, !1962, !32}
!12964 = !{!12965, !12966}
!12965 = !DILocalVariable(name: "thread", arg: 1, scope: !12961, file: !1958, line: 897, type: !1962)
!12966 = !DILocalVariable(name: "options", arg: 2, scope: !12961, file: !1958, line: 897, type: !32)
!12967 = !DILocation(line: 0, scope: !12961)
!12968 = !DILocation(line: 902, column: 2, scope: !12961)
!12969 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1958, file: !1958, line: 1072, type: !12970, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12975)
!12970 = !DISubroutineType(types: !12971)
!12971 = !{!103, !1961, !12972}
!12972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12973, size: 32)
!12973 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !276, line: 234, baseType: !12974)
!12974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !276, line: 192, elements: !162)
!12975 = !{!12976, !12977}
!12976 = !DILocalVariable(name: "thread", arg: 1, scope: !12969, file: !1958, line: 1072, type: !1961)
!12977 = !DILocalVariable(name: "stats", arg: 2, scope: !12969, file: !1958, line: 1073, type: !12972)
!12978 = !DILocation(line: 0, scope: !12969)
!12979 = !DILocation(line: 1075, column: 14, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12969, file: !1958, line: 1075, column: 6)
!12981 = !DILocation(line: 1075, column: 23, scope: !12980)
!12982 = !DILocation(line: 1086, column: 1, scope: !12969)
!12983 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1958, file: !1958, line: 1088, type: !12984, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2062, retainedNodes: !12986)
!12984 = !DISubroutineType(types: !12985)
!12985 = !{!103, !12972}
!12986 = !{!12987}
!12987 = !DILocalVariable(name: "stats", arg: 1, scope: !12983, file: !1958, line: 1088, type: !12972)
!12988 = !DILocation(line: 0, scope: !12983)
!12989 = !DILocation(line: 1094, column: 12, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12983, file: !1958, line: 1094, column: 6)
!12991 = !DILocation(line: 1120, column: 1, scope: !12983)
!12992 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12993, file: !12993, line: 20, type: !2794, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2775, retainedNodes: !162)
!12993 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12994 = !DILocation(line: 30, column: 2, scope: !12992)
!12995 = !DILocation(line: 31, column: 1, scope: !12992)
!12996 = distinct !DISubprogram(name: "idle", scope: !12993, file: !12993, line: 33, type: !3125, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2775, retainedNodes: !12997)
!12997 = !{!12998, !12999, !13000}
!12998 = !DILocalVariable(name: "unused1", arg: 1, scope: !12996, file: !12993, line: 33, type: !102)
!12999 = !DILocalVariable(name: "unused2", arg: 2, scope: !12996, file: !12993, line: 33, type: !102)
!13000 = !DILocalVariable(name: "unused3", arg: 3, scope: !12996, file: !12993, line: 33, type: !102)
!13001 = !DILocation(line: 0, scope: !12996)
!13002 = !DILocation(line: 41, column: 2, scope: !12996)
!13003 = !DILocation(line: 55, column: 2, scope: !13004, inlinedAt: !13008)
!13004 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6080, file: !6080, line: 42, type: !6081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2775, retainedNodes: !13005)
!13005 = !{!13006, !13007}
!13006 = !DILocalVariable(name: "key", scope: !13004, file: !6080, line: 44, type: !32)
!13007 = !DILocalVariable(name: "tmp", scope: !13004, file: !6080, line: 53, type: !32)
!13008 = distinct !DILocation(line: 62, column: 10, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !12996, file: !12993, line: 41, column: 15)
!13010 = !{i64 1648743}
!13011 = !DILocation(line: 0, scope: !13004, inlinedAt: !13008)
!13012 = !DILocation(line: 86, column: 3, scope: !13009)
!13013 = distinct !{!13013, !13002, !13014}
!13014 = !DILocation(line: 105, column: 2, scope: !12996)
!13015 = distinct !DISubprogram(name: "k_cpu_idle", scope: !370, file: !370, line: 5627, type: !2794, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2775, retainedNodes: !162)
!13016 = !DILocation(line: 5629, column: 2, scope: !13015)
!13017 = !DILocation(line: 5630, column: 1, scope: !13015)
!13018 = !DISubprogram(name: "arch_cpu_idle", scope: !3123, file: !3123, line: 167, type: !2794, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!13019 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2190, file: !2190, line: 93, type: !13020, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13022)
!13020 = !DISubroutineType(types: !13021)
!13021 = !{!721, !2085, !2085}
!13022 = !{!13023, !13024, !13025, !13026}
!13023 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13019, file: !2190, line: 93, type: !2085)
!13024 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13019, file: !2190, line: 94, type: !2085)
!13025 = !DILocalVariable(name: "b1", scope: !13019, file: !2190, line: 97, type: !721)
!13026 = !DILocalVariable(name: "b2", scope: !13019, file: !2190, line: 98, type: !721)
!13027 = !DILocation(line: 0, scope: !13019)
!13028 = !DILocation(line: 97, column: 30, scope: !13019)
!13029 = !DILocation(line: 98, column: 30, scope: !13019)
!13030 = !DILocation(line: 100, column: 9, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13019, file: !2190, line: 100, column: 6)
!13032 = !DILocation(line: 100, column: 6, scope: !13019)
!13033 = !DILocation(line: 125, column: 1, scope: !13019)
!13034 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2190, file: !2190, line: 428, type: !13035, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13037)
!13035 = !DISubroutineType(types: !13036)
!13036 = !{null, !2085}
!13037 = !{!13038}
!13038 = !DILocalVariable(name: "curr", arg: 1, scope: !13034, file: !2190, line: 428, type: !2085)
!13039 = !DILocation(line: 0, scope: !13034)
!13040 = !DILocation(line: 434, column: 6, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13034, file: !2190, line: 434, column: 6)
!13042 = !DILocation(line: 434, column: 23, scope: !13041)
!13043 = !DILocation(line: 434, column: 6, scope: !13034)
!13044 = !DILocation(line: 435, column: 50, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13041, file: !2190, line: 434, column: 29)
!13046 = !DILocation(line: 435, column: 48, scope: !13045)
!13047 = !DILocation(line: 435, column: 29, scope: !13045)
!13048 = !DILocation(line: 436, column: 24, scope: !13045)
!13049 = !DILocation(line: 436, column: 3, scope: !13045)
!13050 = !DILocation(line: 437, column: 2, scope: !13045)
!13051 = !DILocation(line: 438, column: 1, scope: !13034)
!13052 = distinct !DISubprogram(name: "slice_time", scope: !2190, file: !2190, line: 407, type: !13053, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13055)
!13053 = !DISubroutineType(types: !13054)
!13054 = !{!103, !2085}
!13055 = !{!13056, !13057}
!13056 = !DILocalVariable(name: "curr", arg: 1, scope: !13052, file: !2190, line: 407, type: !2085)
!13057 = !DILocalVariable(name: "ret", scope: !13052, file: !2190, line: 409, type: !103)
!13058 = !DILocation(line: 0, scope: !13052)
!13059 = !DILocation(line: 409, column: 12, scope: !13052)
!13060 = !DILocation(line: 416, column: 2, scope: !13052)
!13061 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2190, file: !2190, line: 440, type: !13062, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13064)
!13062 = !DISubroutineType(types: !13063)
!13063 = !{null, !721, !103}
!13064 = !{!13065, !13066, !13067, !13073}
!13065 = !DILocalVariable(name: "slice", arg: 1, scope: !13061, file: !2190, line: 440, type: !721)
!13066 = !DILocalVariable(name: "prio", arg: 2, scope: !13061, file: !2190, line: 440, type: !103)
!13067 = !DILocalVariable(name: "__i", scope: !13068, file: !2190, line: 442, type: !13069)
!13068 = distinct !DILexicalBlock(scope: !13061, file: !2190, line: 442, column: 2)
!13069 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !381, line: 106, baseType: !13070)
!13070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !381, line: 32, size: 32, elements: !13071)
!13071 = !{!13072}
!13072 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13070, file: !381, line: 33, baseType: !103, size: 32)
!13073 = !DILocalVariable(name: "__key", scope: !13068, file: !2190, line: 442, type: !13069)
!13074 = !DILocation(line: 0, scope: !13061)
!13075 = !DILocation(line: 0, scope: !13068)
!13076 = !DILocalVariable(name: "l", arg: 1, scope: !13077, file: !381, line: 136, type: !13080)
!13077 = distinct !DISubprogram(name: "k_spin_lock", scope: !381, file: !381, line: 136, type: !13078, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13081)
!13078 = !DISubroutineType(types: !13079)
!13079 = !{!13069, !13080}
!13080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 32)
!13081 = !{!13076, !13082}
!13082 = !DILocalVariable(name: "k", scope: !13077, file: !381, line: 139, type: !13069)
!13083 = !DILocation(line: 0, scope: !13077, inlinedAt: !13084)
!13084 = distinct !DILocation(line: 442, column: 2, scope: !13068)
!13085 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !13090)
!13086 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6080, file: !6080, line: 42, type: !6081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13087)
!13087 = !{!13088, !13089}
!13088 = !DILocalVariable(name: "key", scope: !13086, file: !6080, line: 44, type: !32)
!13089 = !DILocalVariable(name: "tmp", scope: !13086, file: !6080, line: 53, type: !32)
!13090 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !13084)
!13091 = !{i64 1692714}
!13092 = !DILocation(line: 0, scope: !13086, inlinedAt: !13090)
!13093 = !DILocation(line: 443, column: 29, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13095, file: !2190, line: 442, column: 26)
!13095 = distinct !DILexicalBlock(scope: !13068, file: !2190, line: 442, column: 2)
!13096 = !DILocation(line: 444, column: 17, scope: !13094)
!13097 = !DILocation(line: 445, column: 51, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13094, file: !2190, line: 445, column: 7)
!13099 = !DILocation(line: 445, column: 7, scope: !13094)
!13100 = !DILocation(line: 0, scope: !13094)
!13101 = !DILocation(line: 451, column: 18, scope: !13094)
!13102 = !DILocation(line: 452, column: 3, scope: !13094)
!13103 = !DILocalVariable(name: "key", arg: 2, scope: !13104, file: !381, line: 190, type: !13069)
!13104 = distinct !DISubprogram(name: "k_spin_unlock", scope: !381, file: !381, line: 189, type: !13105, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13107)
!13105 = !DISubroutineType(types: !13106)
!13106 = !{null, !13080, !13069}
!13107 = !{!13108, !13103}
!13108 = !DILocalVariable(name: "l", arg: 1, scope: !13104, file: !381, line: 189, type: !13080)
!13109 = !DILocation(line: 0, scope: !13104, inlinedAt: !13110)
!13110 = distinct !DILocation(line: 442, column: 2, scope: !13095)
!13111 = !DILocalVariable(name: "key", arg: 1, scope: !13112, file: !6080, line: 84, type: !32)
!13112 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6080, file: !6080, line: 84, type: !6091, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13113)
!13113 = !{!13111}
!13114 = !DILocation(line: 0, scope: !13112, inlinedAt: !13115)
!13115 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !13110)
!13116 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !13115)
!13117 = !{i64 1693531}
!13118 = !DILocation(line: 454, column: 1, scope: !13061)
!13119 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12910, file: !12910, line: 389, type: !7238, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13120)
!13120 = !{!13121}
!13121 = !DILocalVariable(name: "t", arg: 1, scope: !13119, file: !12910, line: 389, type: !137)
!13122 = !DILocation(line: 0, scope: !13119)
!13123 = !DILocalVariable(name: "t", arg: 1, scope: !13124, file: !12910, line: 102, type: !163)
!13124 = distinct !DISubprogram(name: "z_tmcvt", scope: !12910, file: !12910, line: 102, type: !12918, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13125)
!13125 = !{!13123, !13126, !13127, !13128, !13129, !13130, !13131, !13132, !13133, !13134, !13135}
!13126 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13124, file: !12910, line: 102, type: !137)
!13127 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13124, file: !12910, line: 103, type: !137)
!13128 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13124, file: !12910, line: 103, type: !224)
!13129 = !DILocalVariable(name: "result32", arg: 5, scope: !13124, file: !12910, line: 104, type: !224)
!13130 = !DILocalVariable(name: "round_up", arg: 6, scope: !13124, file: !12910, line: 104, type: !224)
!13131 = !DILocalVariable(name: "round_off", arg: 7, scope: !13124, file: !12910, line: 105, type: !224)
!13132 = !DILocalVariable(name: "mul_ratio", scope: !13124, file: !12910, line: 107, type: !224)
!13133 = !DILocalVariable(name: "div_ratio", scope: !13124, file: !12910, line: 109, type: !224)
!13134 = !DILocalVariable(name: "off", scope: !13124, file: !12910, line: 116, type: !163)
!13135 = !DILocalVariable(name: "rdivisor", scope: !13136, file: !12910, line: 119, type: !137)
!13136 = distinct !DILexicalBlock(scope: !13137, file: !12910, line: 118, column: 18)
!13137 = distinct !DILexicalBlock(scope: !13124, file: !12910, line: 118, column: 6)
!13138 = !DILocation(line: 0, scope: !13124, inlinedAt: !13139)
!13139 = distinct !DILocation(line: 392, column: 9, scope: !13119)
!13140 = !DILocation(line: 143, column: 25, scope: !13141, inlinedAt: !13139)
!13141 = distinct !DILexicalBlock(scope: !13142, file: !12910, line: 142, column: 17)
!13142 = distinct !DILexicalBlock(scope: !13143, file: !12910, line: 142, column: 7)
!13143 = distinct !DILexicalBlock(scope: !13144, file: !12910, line: 141, column: 24)
!13144 = distinct !DILexicalBlock(scope: !13145, file: !12910, line: 141, column: 13)
!13145 = distinct !DILexicalBlock(scope: !13124, file: !12910, line: 134, column: 6)
!13146 = !DILocation(line: 392, column: 2, scope: !13119)
!13147 = distinct !DISubprogram(name: "z_time_slice", scope: !2190, file: !2190, line: 502, type: !7984, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13148)
!13148 = !{!13149, !13150}
!13149 = !DILocalVariable(name: "ticks", arg: 1, scope: !13147, file: !2190, line: 502, type: !103)
!13150 = !DILocalVariable(name: "key", scope: !13147, file: !2190, line: 511, type: !13069)
!13151 = !DILocation(line: 0, scope: !13147)
!13152 = !DILocation(line: 0, scope: !13077, inlinedAt: !13153)
!13153 = distinct !DILocation(line: 511, column: 25, scope: !13147)
!13154 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !13155)
!13155 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !13153)
!13156 = !DILocation(line: 0, scope: !13086, inlinedAt: !13155)
!13157 = !DILocation(line: 514, column: 6, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13147, file: !2190, line: 514, column: 6)
!13159 = !DILocation(line: 514, column: 25, scope: !13158)
!13160 = !DILocation(line: 514, column: 22, scope: !13158)
!13161 = !DILocation(line: 514, column: 6, scope: !13147)
!13162 = !DILocation(line: 515, column: 3, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13158, file: !2190, line: 514, column: 35)
!13164 = !DILocation(line: 0, scope: !13104, inlinedAt: !13165)
!13165 = distinct !DILocation(line: 516, column: 3, scope: !13163)
!13166 = !DILocation(line: 0, scope: !13112, inlinedAt: !13167)
!13167 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !13165)
!13168 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !13167)
!13169 = !DILocation(line: 517, column: 3, scope: !13163)
!13170 = !DILocation(line: 519, column: 18, scope: !13147)
!13171 = !DILocation(line: 522, column: 6, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13147, file: !2190, line: 522, column: 6)
!13173 = !DILocation(line: 522, column: 27, scope: !13172)
!13174 = !DILocation(line: 522, column: 30, scope: !13172)
!13175 = !DILocation(line: 522, column: 6, scope: !13147)
!13176 = !DILocation(line: 523, column: 30, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13178, file: !2190, line: 523, column: 7)
!13178 = distinct !DILexicalBlock(scope: !13172, file: !2190, line: 522, column: 51)
!13179 = !DILocation(line: 523, column: 13, scope: !13177)
!13180 = !DILocation(line: 523, column: 7, scope: !13178)
!13181 = !DILocation(line: 530, column: 10, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13177, file: !2190, line: 523, column: 43)
!13183 = !DILocation(line: 531, column: 3, scope: !13182)
!13184 = !DILocation(line: 532, column: 30, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13177, file: !2190, line: 531, column: 10)
!13186 = !DILocation(line: 535, column: 29, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13172, file: !2190, line: 534, column: 9)
!13188 = !DILocation(line: 0, scope: !13104, inlinedAt: !13189)
!13189 = distinct !DILocation(line: 537, column: 2, scope: !13147)
!13190 = !DILocation(line: 0, scope: !13112, inlinedAt: !13191)
!13191 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !13189)
!13192 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !13191)
!13193 = !DILocation(line: 538, column: 1, scope: !13147)
!13194 = distinct !DISubprogram(name: "sliceable", scope: !2190, file: !2190, line: 468, type: !13195, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13197)
!13195 = !DISubroutineType(types: !13196)
!13196 = !{!224, !2085}
!13197 = !{!13198, !13199}
!13198 = !DILocalVariable(name: "thread", arg: 1, scope: !13194, file: !2190, line: 468, type: !2085)
!13199 = !DILocalVariable(name: "ret", scope: !13194, file: !2190, line: 470, type: !224)
!13200 = !DILocation(line: 0, scope: !13194)
!13201 = !DILocation(line: 470, column: 13, scope: !13194)
!13202 = !DILocation(line: 471, column: 3, scope: !13194)
!13203 = !DILocation(line: 471, column: 7, scope: !13194)
!13204 = !DILocation(line: 472, column: 3, scope: !13194)
!13205 = !DILocation(line: 472, column: 37, scope: !13194)
!13206 = !DILocation(line: 472, column: 24, scope: !13194)
!13207 = !DILocation(line: 472, column: 43, scope: !13194)
!13208 = !DILocation(line: 472, column: 7, scope: !13194)
!13209 = !DILocation(line: 473, column: 3, scope: !13194)
!13210 = !DILocation(line: 473, column: 7, scope: !13194)
!13211 = !DILocation(line: 473, column: 6, scope: !13194)
!13212 = !DILocation(line: 479, column: 2, scope: !13194)
!13213 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2190, file: !2190, line: 482, type: !13214, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13216)
!13214 = !DISubroutineType(types: !13215)
!13215 = !{!13069, !13069}
!13216 = !{!13217, !13218}
!13217 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13213, file: !2190, line: 482, type: !13069)
!13218 = !DILocalVariable(name: "curr", scope: !13213, file: !2190, line: 484, type: !2085)
!13219 = !DILocation(line: 0, scope: !13213)
!13220 = !DILocation(line: 484, column: 26, scope: !13213)
!13221 = !DILocation(line: 493, column: 7, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13213, file: !2190, line: 493, column: 6)
!13223 = !DILocation(line: 493, column: 6, scope: !13213)
!13224 = !DILocation(line: 494, column: 3, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13222, file: !2190, line: 493, column: 49)
!13226 = !DILocation(line: 495, column: 2, scope: !13225)
!13227 = !DILocation(line: 496, column: 2, scope: !13213)
!13228 = !DILocation(line: 499, column: 1, scope: !13213)
!13229 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12349, file: !12349, line: 106, type: !13195, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13230)
!13230 = !{!13231, !13232}
!13231 = !DILocalVariable(name: "thread", arg: 1, scope: !13229, file: !12349, line: 106, type: !2085)
!13232 = !DILocalVariable(name: "state", scope: !13229, file: !12349, line: 108, type: !221)
!13233 = !DILocation(line: 0, scope: !13229)
!13234 = !DILocation(line: 108, column: 31, scope: !13229)
!13235 = !DILocation(line: 110, column: 16, scope: !13229)
!13236 = !DILocation(line: 111, column: 41, scope: !13229)
!13237 = !DILocation(line: 110, column: 2, scope: !13229)
!13238 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2190, file: !2190, line: 393, type: !13035, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13239)
!13239 = !{!13240}
!13240 = !DILocalVariable(name: "thread", arg: 1, scope: !13238, file: !2190, line: 393, type: !2085)
!13241 = !DILocation(line: 0, scope: !13238)
!13242 = !DILocation(line: 395, column: 6, scope: !13243)
!13243 = distinct !DILexicalBlock(scope: !13238, file: !2190, line: 395, column: 6)
!13244 = !DILocation(line: 395, column: 6, scope: !13238)
!13245 = !DILocalVariable(name: "thread", arg: 1, scope: !13246, file: !2190, line: 264, type: !2085)
!13246 = distinct !DISubprogram(name: "dequeue_thread", scope: !2190, file: !2190, line: 264, type: !13035, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13247)
!13247 = !{!13245}
!13248 = !DILocation(line: 0, scope: !13246, inlinedAt: !13249)
!13249 = distinct !DILocation(line: 396, column: 3, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13243, file: !2190, line: 395, column: 34)
!13251 = !DILocation(line: 266, column: 15, scope: !13246, inlinedAt: !13249)
!13252 = !DILocation(line: 266, column: 28, scope: !13246, inlinedAt: !13249)
!13253 = !DILocalVariable(name: "thread", arg: 1, scope: !13254, file: !2190, line: 232, type: !2085)
!13254 = distinct !DISubprogram(name: "runq_remove", scope: !2190, file: !2190, line: 232, type: !13035, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13255)
!13255 = !{!13253}
!13256 = !DILocation(line: 0, scope: !13254, inlinedAt: !13257)
!13257 = distinct !DILocation(line: 268, column: 3, scope: !13258, inlinedAt: !13249)
!13258 = distinct !DILexicalBlock(scope: !13259, file: !2190, line: 267, column: 35)
!13259 = distinct !DILexicalBlock(scope: !13246, file: !2190, line: 267, column: 6)
!13260 = !DILocation(line: 234, column: 2, scope: !13254, inlinedAt: !13257)
!13261 = !DILocation(line: 397, column: 2, scope: !13250)
!13262 = !DILocalVariable(name: "thread", arg: 1, scope: !13263, file: !2190, line: 250, type: !2085)
!13263 = distinct !DISubprogram(name: "queue_thread", scope: !2190, file: !2190, line: 250, type: !13035, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13264)
!13264 = !{!13262}
!13265 = !DILocation(line: 0, scope: !13263, inlinedAt: !13266)
!13266 = distinct !DILocation(line: 398, column: 2, scope: !13238)
!13267 = !DILocation(line: 252, column: 15, scope: !13263, inlinedAt: !13266)
!13268 = !DILocation(line: 252, column: 28, scope: !13263, inlinedAt: !13266)
!13269 = !DILocalVariable(name: "thread", arg: 1, scope: !13270, file: !2190, line: 227, type: !2085)
!13270 = distinct !DISubprogram(name: "runq_add", scope: !2190, file: !2190, line: 227, type: !13035, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13271)
!13271 = !{!13269}
!13272 = !DILocation(line: 0, scope: !13270, inlinedAt: !13273)
!13273 = distinct !DILocation(line: 254, column: 3, scope: !13274, inlinedAt: !13266)
!13274 = distinct !DILexicalBlock(scope: !13275, file: !2190, line: 253, column: 35)
!13275 = distinct !DILexicalBlock(scope: !13263, file: !2190, line: 253, column: 6)
!13276 = !DILocalVariable(name: "pq", arg: 1, scope: !13277, file: !2190, line: 181, type: !13280)
!13277 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2190, file: !2190, line: 181, type: !13278, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13281)
!13278 = !DISubroutineType(types: !13279)
!13279 = !{null, !13280, !2085}
!13280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 32)
!13281 = !{!13276, !13282, !13283}
!13282 = !DILocalVariable(name: "thread", arg: 2, scope: !13277, file: !2190, line: 182, type: !2085)
!13283 = !DILocalVariable(name: "t", scope: !13277, file: !2190, line: 184, type: !2085)
!13284 = !DILocation(line: 0, scope: !13277, inlinedAt: !13285)
!13285 = distinct !DILocation(line: 229, column: 2, scope: !13270, inlinedAt: !13273)
!13286 = !DILocation(line: 188, column: 2, scope: !13287, inlinedAt: !13285)
!13287 = distinct !DILexicalBlock(scope: !13277, file: !2190, line: 188, column: 2)
!13288 = !DILocation(line: 188, column: 2, scope: !13289, inlinedAt: !13285)
!13289 = distinct !DILexicalBlock(scope: !13287, file: !2190, line: 188, column: 2)
!13290 = !DILocation(line: 0, scope: !13287, inlinedAt: !13285)
!13291 = !DILocation(line: 189, column: 7, scope: !13292, inlinedAt: !13285)
!13292 = distinct !DILexicalBlock(scope: !13293, file: !2190, line: 189, column: 7)
!13293 = distinct !DILexicalBlock(scope: !13289, file: !2190, line: 188, column: 56)
!13294 = !DILocation(line: 189, column: 35, scope: !13292, inlinedAt: !13285)
!13295 = !DILocation(line: 189, column: 7, scope: !13293, inlinedAt: !13285)
!13296 = !DILocation(line: 191, column: 21, scope: !13297, inlinedAt: !13285)
!13297 = distinct !DILexicalBlock(scope: !13292, file: !2190, line: 189, column: 40)
!13298 = !DILocation(line: 190, column: 4, scope: !13297, inlinedAt: !13285)
!13299 = !DILocation(line: 192, column: 4, scope: !13297, inlinedAt: !13285)
!13300 = distinct !{!13300, !13286, !13301}
!13301 = !DILocation(line: 194, column: 2, scope: !13287, inlinedAt: !13285)
!13302 = !DILocation(line: 196, column: 37, scope: !13277, inlinedAt: !13285)
!13303 = !DILocation(line: 196, column: 2, scope: !13277, inlinedAt: !13285)
!13304 = !DILocation(line: 197, column: 1, scope: !13277, inlinedAt: !13285)
!13305 = !DILocation(line: 399, column: 25, scope: !13238)
!13306 = !DILocation(line: 399, column: 22, scope: !13238)
!13307 = !DILocation(line: 399, column: 2, scope: !13238)
!13308 = !DILocation(line: 400, column: 1, scope: !13238)
!13309 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12349, file: !12349, line: 136, type: !13195, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13310)
!13310 = !{!13311}
!13311 = !DILocalVariable(name: "thread", arg: 1, scope: !13309, file: !12349, line: 136, type: !2085)
!13312 = !DILocation(line: 0, scope: !13309)
!13313 = !DILocation(line: 138, column: 9, scope: !13309)
!13314 = !DILocation(line: 138, column: 2, scope: !13309)
!13315 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2190, file: !2190, line: 1137, type: !13278, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13316)
!13316 = !{!13317, !13318}
!13317 = !DILocalVariable(name: "pq", arg: 1, scope: !13315, file: !2190, line: 1137, type: !13280)
!13318 = !DILocalVariable(name: "thread", arg: 2, scope: !13315, file: !2190, line: 1137, type: !2085)
!13319 = !DILocation(line: 0, scope: !13315)
!13320 = !DILocation(line: 1141, column: 33, scope: !13315)
!13321 = !DILocation(line: 1141, column: 2, scope: !13315)
!13322 = !DILocation(line: 1142, column: 1, scope: !13315)
!13323 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !286, file: !286, line: 294, type: !13324, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13326)
!13324 = !DISubroutineType(types: !13325)
!13325 = !{!2186, !13280}
!13326 = !{!13327}
!13327 = !DILocalVariable(name: "list", arg: 1, scope: !13323, file: !286, line: 294, type: !13280)
!13328 = !DILocation(line: 0, scope: !13323)
!13329 = !DILocation(line: 296, column: 9, scope: !13323)
!13330 = !DILocation(line: 296, column: 49, scope: !13323)
!13331 = !DILocation(line: 296, column: 2, scope: !13323)
!13332 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !286, file: !286, line: 443, type: !13333, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13335)
!13333 = !DISubroutineType(types: !13334)
!13334 = !{null, !2186, !2186}
!13335 = !{!13336, !13337, !13338}
!13336 = !DILocalVariable(name: "successor", arg: 1, scope: !13332, file: !286, line: 443, type: !2186)
!13337 = !DILocalVariable(name: "node", arg: 2, scope: !13332, file: !286, line: 443, type: !2186)
!13338 = !DILocalVariable(name: "prev", scope: !13332, file: !286, line: 445, type: !13339)
!13339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2186)
!13340 = !DILocation(line: 0, scope: !13332)
!13341 = !DILocation(line: 445, column: 39, scope: !13332)
!13342 = !DILocation(line: 447, column: 8, scope: !13332)
!13343 = !DILocation(line: 447, column: 13, scope: !13332)
!13344 = !DILocation(line: 448, column: 8, scope: !13332)
!13345 = !DILocation(line: 448, column: 13, scope: !13332)
!13346 = !DILocation(line: 449, column: 8, scope: !13332)
!13347 = !DILocation(line: 449, column: 13, scope: !13332)
!13348 = !DILocation(line: 450, column: 18, scope: !13332)
!13349 = !DILocation(line: 451, column: 1, scope: !13332)
!13350 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !286, file: !286, line: 341, type: !13351, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13353)
!13351 = !DISubroutineType(types: !13352)
!13352 = !{!2186, !13280, !2186}
!13353 = !{!13354, !13355}
!13354 = !DILocalVariable(name: "list", arg: 1, scope: !13350, file: !286, line: 341, type: !13280)
!13355 = !DILocalVariable(name: "node", arg: 2, scope: !13350, file: !286, line: 342, type: !2186)
!13356 = !DILocation(line: 0, scope: !13350)
!13357 = !DILocation(line: 344, column: 15, scope: !13350)
!13358 = !DILocation(line: 344, column: 9, scope: !13350)
!13359 = !DILocation(line: 344, column: 26, scope: !13350)
!13360 = !DILocation(line: 344, column: 2, scope: !13350)
!13361 = distinct !DISubprogram(name: "sys_dlist_append", scope: !286, file: !286, line: 404, type: !13362, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13364)
!13362 = !DISubroutineType(types: !13363)
!13363 = !{null, !13280, !2186}
!13364 = !{!13365, !13366, !13367}
!13365 = !DILocalVariable(name: "list", arg: 1, scope: !13361, file: !286, line: 404, type: !13280)
!13366 = !DILocalVariable(name: "node", arg: 2, scope: !13361, file: !286, line: 404, type: !2186)
!13367 = !DILocalVariable(name: "tail", scope: !13361, file: !286, line: 406, type: !13339)
!13368 = !DILocation(line: 0, scope: !13361)
!13369 = !DILocation(line: 406, column: 34, scope: !13361)
!13370 = !DILocation(line: 408, column: 8, scope: !13361)
!13371 = !DILocation(line: 408, column: 13, scope: !13361)
!13372 = !DILocation(line: 409, column: 8, scope: !13361)
!13373 = !DILocation(line: 409, column: 13, scope: !13361)
!13374 = !DILocation(line: 411, column: 8, scope: !13361)
!13375 = !DILocation(line: 411, column: 13, scope: !13361)
!13376 = !DILocation(line: 412, column: 13, scope: !13361)
!13377 = !DILocation(line: 413, column: 1, scope: !13361)
!13378 = distinct !DISubprogram(name: "update_cache", scope: !2190, file: !2190, line: 559, type: !7984, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13379)
!13379 = !{!13380, !13381}
!13380 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13378, file: !2190, line: 559, type: !103)
!13381 = !DILocalVariable(name: "thread", scope: !13378, file: !2190, line: 562, type: !2085)
!13382 = !DILocation(line: 0, scope: !13378)
!13383 = !DILocation(line: 239, column: 9, scope: !13384, inlinedAt: !13387)
!13384 = distinct !DISubprogram(name: "runq_best", scope: !2190, file: !2190, line: 237, type: !13385, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !162)
!13385 = !DISubroutineType(types: !13386)
!13386 = !{!2085}
!13387 = distinct !DILocation(line: 314, column: 28, scope: !13388, inlinedAt: !13391)
!13388 = distinct !DISubprogram(name: "next_up", scope: !2190, file: !2190, line: 312, type: !13385, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13389)
!13389 = !{!13390}
!13390 = !DILocalVariable(name: "thread", scope: !13388, file: !2190, line: 314, type: !2085)
!13391 = distinct !DILocation(line: 562, column: 28, scope: !13378)
!13392 = !DILocation(line: 0, scope: !13388, inlinedAt: !13391)
!13393 = !DILocation(line: 340, column: 17, scope: !13388, inlinedAt: !13391)
!13394 = !DILocation(line: 340, column: 9, scope: !13388, inlinedAt: !13391)
!13395 = !DILocalVariable(name: "thread", arg: 1, scope: !13396, file: !2190, line: 127, type: !2085)
!13396 = distinct !DISubprogram(name: "should_preempt", scope: !2190, file: !2190, line: 127, type: !13397, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13399)
!13397 = !DISubroutineType(types: !13398)
!13398 = !{!224, !2085, !103}
!13399 = !{!13395, !13400}
!13400 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13396, file: !2190, line: 128, type: !103)
!13401 = !DILocation(line: 0, scope: !13396, inlinedAt: !13402)
!13402 = distinct !DILocation(line: 564, column: 6, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13378, file: !2190, line: 564, column: 6)
!13404 = !DILocation(line: 133, column: 17, scope: !13405, inlinedAt: !13402)
!13405 = distinct !DILexicalBlock(scope: !13396, file: !2190, line: 133, column: 6)
!13406 = !DILocation(line: 0, scope: !13403)
!13407 = !DILocation(line: 133, column: 6, scope: !13396, inlinedAt: !13402)
!13408 = !DILocation(line: 140, column: 6, scope: !13409, inlinedAt: !13402)
!13409 = distinct !DILexicalBlock(scope: !13396, file: !2190, line: 140, column: 6)
!13410 = !DILocation(line: 140, column: 6, scope: !13396, inlinedAt: !13402)
!13411 = !DILocation(line: 150, column: 9, scope: !13412, inlinedAt: !13402)
!13412 = distinct !DILexicalBlock(scope: !13396, file: !2190, line: 149, column: 6)
!13413 = !DILocation(line: 149, column: 6, scope: !13396, inlinedAt: !13402)
!13414 = !DILocation(line: 157, column: 6, scope: !13415, inlinedAt: !13402)
!13415 = distinct !DILexicalBlock(scope: !13396, file: !2190, line: 157, column: 6)
!13416 = !DILocation(line: 564, column: 6, scope: !13378)
!13417 = !DILocation(line: 566, column: 14, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13419, file: !2190, line: 566, column: 7)
!13419 = distinct !DILexicalBlock(scope: !13403, file: !2190, line: 564, column: 42)
!13420 = !DILocation(line: 566, column: 7, scope: !13419)
!13421 = !DILocation(line: 567, column: 4, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13418, file: !2190, line: 566, column: 27)
!13423 = !DILocation(line: 568, column: 3, scope: !13422)
!13424 = !DILocation(line: 585, column: 1, scope: !13378)
!13425 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2190, file: !2190, line: 1144, type: !13426, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13428)
!13426 = !DISubroutineType(types: !13427)
!13427 = !{!2085, !13280}
!13428 = !{!13429, !13430, !13431}
!13429 = !DILocalVariable(name: "pq", arg: 1, scope: !13425, file: !2190, line: 1144, type: !13280)
!13430 = !DILocalVariable(name: "thread", scope: !13425, file: !2190, line: 1146, type: !2085)
!13431 = !DILocalVariable(name: "n", scope: !13425, file: !2190, line: 1147, type: !2186)
!13432 = !DILocation(line: 0, scope: !13425)
!13433 = !DILocation(line: 1147, column: 19, scope: !13425)
!13434 = !DILocation(line: 1152, column: 2, scope: !13425)
!13435 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12349, file: !12349, line: 115, type: !13195, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13436)
!13436 = !{!13437}
!13437 = !DILocalVariable(name: "thread", arg: 1, scope: !13435, file: !12349, line: 115, type: !2085)
!13438 = !DILocation(line: 0, scope: !13435)
!13439 = !DILocation(line: 117, column: 46, scope: !13435)
!13440 = !DILocation(line: 117, column: 10, scope: !13435)
!13441 = !DILocation(line: 117, column: 9, scope: !13435)
!13442 = !DILocation(line: 117, column: 2, scope: !13435)
!13443 = distinct !DISubprogram(name: "is_preempt", scope: !2190, file: !2190, line: 62, type: !13053, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13444)
!13444 = !{!13445}
!13445 = !DILocalVariable(name: "thread", arg: 1, scope: !13443, file: !2190, line: 62, type: !2085)
!13446 = !DILocation(line: 0, scope: !13443)
!13447 = !DILocation(line: 65, column: 22, scope: !13443)
!13448 = !DILocation(line: 65, column: 30, scope: !13443)
!13449 = !DILocation(line: 65, column: 2, scope: !13443)
!13450 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12743, file: !12743, line: 35, type: !13451, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13455)
!13451 = !DISubroutineType(types: !13452)
!13452 = !{!224, !13453}
!13453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13454, size: 32)
!13454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2136)
!13455 = !{!13456}
!13456 = !DILocalVariable(name: "to", arg: 1, scope: !13450, file: !12743, line: 35, type: !13453)
!13457 = !DILocation(line: 0, scope: !13450)
!13458 = !DILocation(line: 37, column: 35, scope: !13450)
!13459 = !DILocation(line: 37, column: 10, scope: !13450)
!13460 = !DILocation(line: 37, column: 9, scope: !13450)
!13461 = !DILocation(line: 37, column: 2, scope: !13450)
!13462 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !286, file: !286, line: 225, type: !13463, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13467)
!13463 = !DISubroutineType(types: !13464)
!13464 = !{!224, !13465}
!13465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13466, size: 32)
!13466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2095)
!13467 = !{!13468}
!13468 = !DILocalVariable(name: "node", arg: 1, scope: !13462, file: !286, line: 225, type: !13465)
!13469 = !DILocation(line: 0, scope: !13462)
!13470 = !DILocation(line: 227, column: 15, scope: !13462)
!13471 = !DILocation(line: 227, column: 20, scope: !13462)
!13472 = !DILocation(line: 227, column: 2, scope: !13462)
!13473 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !286, file: !286, line: 325, type: !13351, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13474)
!13474 = !{!13475, !13476}
!13475 = !DILocalVariable(name: "list", arg: 1, scope: !13473, file: !286, line: 325, type: !13280)
!13476 = !DILocalVariable(name: "node", arg: 2, scope: !13473, file: !286, line: 326, type: !2186)
!13477 = !DILocation(line: 0, scope: !13473)
!13478 = !DILocation(line: 328, column: 24, scope: !13473)
!13479 = !DILocation(line: 328, column: 15, scope: !13473)
!13480 = !DILocation(line: 328, column: 9, scope: !13473)
!13481 = !DILocation(line: 328, column: 45, scope: !13473)
!13482 = !DILocation(line: 328, column: 2, scope: !13473)
!13483 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !286, file: !286, line: 266, type: !13484, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13486)
!13484 = !DISubroutineType(types: !13485)
!13485 = !{!224, !13280}
!13486 = !{!13487}
!13487 = !DILocalVariable(name: "list", arg: 1, scope: !13483, file: !286, line: 266, type: !13280)
!13488 = !DILocation(line: 0, scope: !13483)
!13489 = !DILocation(line: 268, column: 15, scope: !13483)
!13490 = !DILocation(line: 268, column: 20, scope: !13483)
!13491 = !DILocation(line: 268, column: 2, scope: !13483)
!13492 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !286, file: !286, line: 496, type: !13493, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13495)
!13493 = !DISubroutineType(types: !13494)
!13494 = !{null, !2186}
!13495 = !{!13496, !13497, !13498}
!13496 = !DILocalVariable(name: "node", arg: 1, scope: !13492, file: !286, line: 496, type: !2186)
!13497 = !DILocalVariable(name: "prev", scope: !13492, file: !286, line: 498, type: !13339)
!13498 = !DILocalVariable(name: "next", scope: !13492, file: !286, line: 499, type: !13339)
!13499 = !DILocation(line: 0, scope: !13492)
!13500 = !DILocation(line: 498, column: 34, scope: !13492)
!13501 = !DILocation(line: 499, column: 34, scope: !13492)
!13502 = !DILocation(line: 501, column: 8, scope: !13492)
!13503 = !DILocation(line: 501, column: 13, scope: !13492)
!13504 = !DILocation(line: 502, column: 8, scope: !13492)
!13505 = !DILocation(line: 502, column: 13, scope: !13492)
!13506 = !DILocation(line: 503, column: 2, scope: !13492)
!13507 = !DILocation(line: 504, column: 1, scope: !13492)
!13508 = distinct !DISubprogram(name: "sys_dnode_init", scope: !286, file: !286, line: 211, type: !13493, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13509)
!13509 = !{!13510}
!13510 = !DILocalVariable(name: "node", arg: 1, scope: !13508, file: !286, line: 211, type: !2186)
!13511 = !DILocation(line: 0, scope: !13508)
!13512 = !DILocation(line: 213, column: 8, scope: !13508)
!13513 = !DILocation(line: 213, column: 13, scope: !13508)
!13514 = !DILocation(line: 214, column: 8, scope: !13508)
!13515 = !DILocation(line: 214, column: 13, scope: !13508)
!13516 = !DILocation(line: 215, column: 1, scope: !13508)
!13517 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12349, file: !12349, line: 131, type: !13518, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13520)
!13518 = !DISubroutineType(types: !13519)
!13519 = !{!224, !2085, !137}
!13520 = !{!13521, !13522}
!13521 = !DILocalVariable(name: "thread", arg: 1, scope: !13517, file: !12349, line: 131, type: !2085)
!13522 = !DILocalVariable(name: "state", arg: 2, scope: !13517, file: !12349, line: 131, type: !137)
!13523 = !DILocation(line: 0, scope: !13517)
!13524 = !DILocation(line: 133, column: 23, scope: !13517)
!13525 = !DILocation(line: 133, column: 45, scope: !13517)
!13526 = !DILocation(line: 133, column: 2, scope: !13517)
!13527 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12349, file: !12349, line: 211, type: !13528, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13530)
!13528 = !DISubroutineType(types: !13529)
!13529 = !{!224, !103, !103}
!13530 = !{!13531, !13532}
!13531 = !DILocalVariable(name: "prio", arg: 1, scope: !13527, file: !12349, line: 211, type: !103)
!13532 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13527, file: !12349, line: 211, type: !103)
!13533 = !DILocation(line: 0, scope: !13527)
!13534 = !DILocation(line: 213, column: 9, scope: !13527)
!13535 = !DILocation(line: 213, column: 2, scope: !13527)
!13536 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12349, file: !12349, line: 83, type: !13195, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13537)
!13537 = !{!13538}
!13538 = !DILocalVariable(name: "thread", arg: 1, scope: !13536, file: !12349, line: 83, type: !2085)
!13539 = !DILocation(line: 0, scope: !13536)
!13540 = !DILocation(line: 89, column: 16, scope: !13536)
!13541 = !DILocation(line: 89, column: 2, scope: !13536)
!13542 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12349, file: !12349, line: 206, type: !13528, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13543)
!13543 = !{!13544, !13545}
!13544 = !DILocalVariable(name: "prio1", arg: 1, scope: !13542, file: !12349, line: 206, type: !103)
!13545 = !DILocalVariable(name: "prio2", arg: 2, scope: !13542, file: !12349, line: 206, type: !103)
!13546 = !DILocation(line: 0, scope: !13542)
!13547 = !DILocation(line: 208, column: 15, scope: !13542)
!13548 = !DILocation(line: 208, column: 2, scope: !13542)
!13549 = distinct !DISubprogram(name: "z_ready_thread", scope: !2190, file: !2190, line: 635, type: !13035, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13550)
!13550 = !{!13551, !13552, !13554}
!13551 = !DILocalVariable(name: "thread", arg: 1, scope: !13549, file: !2190, line: 635, type: !2085)
!13552 = !DILocalVariable(name: "__i", scope: !13553, file: !2190, line: 637, type: !13069)
!13553 = distinct !DILexicalBlock(scope: !13549, file: !2190, line: 637, column: 2)
!13554 = !DILocalVariable(name: "__key", scope: !13553, file: !2190, line: 637, type: !13069)
!13555 = !DILocation(line: 0, scope: !13549)
!13556 = !DILocation(line: 0, scope: !13553)
!13557 = !DILocation(line: 0, scope: !13077, inlinedAt: !13558)
!13558 = distinct !DILocation(line: 637, column: 2, scope: !13553)
!13559 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !13560)
!13560 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !13558)
!13561 = !DILocation(line: 0, scope: !13086, inlinedAt: !13560)
!13562 = !DILocation(line: 639, column: 4, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13564, file: !2190, line: 638, column: 41)
!13564 = distinct !DILexicalBlock(scope: !13565, file: !2190, line: 638, column: 7)
!13565 = distinct !DILexicalBlock(scope: !13566, file: !2190, line: 637, column: 26)
!13566 = distinct !DILexicalBlock(scope: !13553, file: !2190, line: 637, column: 2)
!13567 = !DILocation(line: 0, scope: !13104, inlinedAt: !13568)
!13568 = distinct !DILocation(line: 637, column: 2, scope: !13566)
!13569 = !DILocation(line: 0, scope: !13112, inlinedAt: !13570)
!13570 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !13568)
!13571 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !13570)
!13572 = !DILocation(line: 642, column: 1, scope: !13549)
!13573 = distinct !DISubprogram(name: "ready_thread", scope: !2190, file: !2190, line: 617, type: !13035, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13574)
!13574 = !{!13575}
!13575 = !DILocalVariable(name: "thread", arg: 1, scope: !13573, file: !2190, line: 617, type: !2085)
!13576 = !DILocation(line: 0, scope: !13573)
!13577 = !DILocation(line: 626, column: 7, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13573, file: !2190, line: 626, column: 6)
!13579 = !DILocation(line: 626, column: 34, scope: !13578)
!13580 = !DILocation(line: 626, column: 37, scope: !13578)
!13581 = !DILocation(line: 626, column: 6, scope: !13573)
!13582 = !DILocation(line: 0, scope: !13263, inlinedAt: !13583)
!13583 = distinct !DILocation(line: 629, column: 3, scope: !13584)
!13584 = distinct !DILexicalBlock(scope: !13578, file: !2190, line: 626, column: 64)
!13585 = !DILocation(line: 252, column: 15, scope: !13263, inlinedAt: !13583)
!13586 = !DILocation(line: 252, column: 28, scope: !13263, inlinedAt: !13583)
!13587 = !DILocation(line: 0, scope: !13270, inlinedAt: !13588)
!13588 = distinct !DILocation(line: 254, column: 3, scope: !13274, inlinedAt: !13583)
!13589 = !DILocation(line: 0, scope: !13277, inlinedAt: !13590)
!13590 = distinct !DILocation(line: 229, column: 2, scope: !13270, inlinedAt: !13588)
!13591 = !DILocation(line: 188, column: 2, scope: !13287, inlinedAt: !13590)
!13592 = !DILocation(line: 188, column: 2, scope: !13289, inlinedAt: !13590)
!13593 = !DILocation(line: 0, scope: !13287, inlinedAt: !13590)
!13594 = !DILocation(line: 189, column: 7, scope: !13292, inlinedAt: !13590)
!13595 = !DILocation(line: 189, column: 35, scope: !13292, inlinedAt: !13590)
!13596 = !DILocation(line: 189, column: 7, scope: !13293, inlinedAt: !13590)
!13597 = !DILocation(line: 191, column: 21, scope: !13297, inlinedAt: !13590)
!13598 = !DILocation(line: 190, column: 4, scope: !13297, inlinedAt: !13590)
!13599 = !DILocation(line: 192, column: 4, scope: !13297, inlinedAt: !13590)
!13600 = distinct !{!13600, !13591, !13601}
!13601 = !DILocation(line: 194, column: 2, scope: !13287, inlinedAt: !13590)
!13602 = !DILocation(line: 196, column: 37, scope: !13277, inlinedAt: !13590)
!13603 = !DILocation(line: 196, column: 2, scope: !13277, inlinedAt: !13590)
!13604 = !DILocation(line: 197, column: 1, scope: !13277, inlinedAt: !13590)
!13605 = !DILocation(line: 630, column: 3, scope: !13584)
!13606 = !DILocation(line: 632, column: 2, scope: !13584)
!13607 = !DILocation(line: 633, column: 1, scope: !13573)
!13608 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12349, file: !12349, line: 120, type: !13195, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13609)
!13609 = !{!13610}
!13610 = !DILocalVariable(name: "thread", arg: 1, scope: !13608, file: !12349, line: 120, type: !2085)
!13611 = !DILocation(line: 0, scope: !13608)
!13612 = !DILocation(line: 122, column: 12, scope: !13608)
!13613 = !DILocation(line: 122, column: 62, scope: !13608)
!13614 = !DILocation(line: 123, column: 4, scope: !13608)
!13615 = !DILocation(line: 122, column: 2, scope: !13608)
!13616 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2190, file: !2190, line: 644, type: !13035, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13617)
!13617 = !{!13618, !13619, !13621}
!13618 = !DILocalVariable(name: "thread", arg: 1, scope: !13616, file: !2190, line: 644, type: !2085)
!13619 = !DILocalVariable(name: "__i", scope: !13620, file: !2190, line: 646, type: !13069)
!13620 = distinct !DILexicalBlock(scope: !13616, file: !2190, line: 646, column: 2)
!13621 = !DILocalVariable(name: "__key", scope: !13620, file: !2190, line: 646, type: !13069)
!13622 = !DILocation(line: 0, scope: !13616)
!13623 = !DILocation(line: 0, scope: !13620)
!13624 = !DILocation(line: 0, scope: !13077, inlinedAt: !13625)
!13625 = distinct !DILocation(line: 646, column: 2, scope: !13620)
!13626 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !13627)
!13627 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !13625)
!13628 = !DILocation(line: 0, scope: !13086, inlinedAt: !13627)
!13629 = !DILocation(line: 647, column: 3, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13631, file: !2190, line: 646, column: 26)
!13631 = distinct !DILexicalBlock(scope: !13620, file: !2190, line: 646, column: 2)
!13632 = !DILocation(line: 0, scope: !13104, inlinedAt: !13633)
!13633 = distinct !DILocation(line: 646, column: 2, scope: !13631)
!13634 = !DILocation(line: 0, scope: !13112, inlinedAt: !13635)
!13635 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !13633)
!13636 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !13635)
!13637 = !DILocation(line: 649, column: 1, scope: !13616)
!13638 = distinct !DISubprogram(name: "z_sched_start", scope: !2190, file: !2190, line: 651, type: !13035, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13639)
!13639 = !{!13640, !13641}
!13640 = !DILocalVariable(name: "thread", arg: 1, scope: !13638, file: !2190, line: 651, type: !2085)
!13641 = !DILocalVariable(name: "key", scope: !13638, file: !2190, line: 653, type: !13069)
!13642 = !DILocation(line: 0, scope: !13638)
!13643 = !DILocation(line: 0, scope: !13077, inlinedAt: !13644)
!13644 = distinct !DILocation(line: 653, column: 25, scope: !13638)
!13645 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !13646)
!13646 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !13644)
!13647 = !DILocation(line: 0, scope: !13086, inlinedAt: !13646)
!13648 = !DILocation(line: 655, column: 6, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13638, file: !2190, line: 655, column: 6)
!13650 = !DILocation(line: 655, column: 6, scope: !13638)
!13651 = !DILocation(line: 0, scope: !13104, inlinedAt: !13652)
!13652 = distinct !DILocation(line: 656, column: 3, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13649, file: !2190, line: 655, column: 36)
!13654 = !DILocation(line: 0, scope: !13112, inlinedAt: !13655)
!13655 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !13652)
!13656 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !13655)
!13657 = !DILocation(line: 657, column: 3, scope: !13653)
!13658 = !DILocation(line: 660, column: 2, scope: !13638)
!13659 = !DILocation(line: 661, column: 2, scope: !13638)
!13660 = !DILocation(line: 662, column: 2, scope: !13638)
!13661 = !DILocation(line: 663, column: 1, scope: !13638)
!13662 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12349, file: !12349, line: 126, type: !13195, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13663)
!13663 = !{!13664}
!13664 = !DILocalVariable(name: "thread", arg: 1, scope: !13662, file: !12349, line: 126, type: !2085)
!13665 = !DILocation(line: 0, scope: !13662)
!13666 = !DILocation(line: 128, column: 23, scope: !13662)
!13667 = !DILocation(line: 128, column: 36, scope: !13662)
!13668 = !DILocation(line: 128, column: 56, scope: !13662)
!13669 = !DILocation(line: 128, column: 2, scope: !13662)
!13670 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12349, file: !12349, line: 155, type: !13035, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13671)
!13671 = !{!13672}
!13672 = !DILocalVariable(name: "thread", arg: 1, scope: !13670, file: !12349, line: 155, type: !2085)
!13673 = !DILocation(line: 0, scope: !13670)
!13674 = !DILocation(line: 157, column: 15, scope: !13670)
!13675 = !DILocation(line: 157, column: 28, scope: !13670)
!13676 = !DILocation(line: 158, column: 1, scope: !13670)
!13677 = distinct !DISubprogram(name: "z_reschedule", scope: !2190, file: !2190, line: 967, type: !13105, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13678)
!13678 = !{!13679, !13680}
!13679 = !DILocalVariable(name: "lock", arg: 1, scope: !13677, file: !2190, line: 967, type: !13080)
!13680 = !DILocalVariable(name: "key", arg: 2, scope: !13677, file: !2190, line: 967, type: !13069)
!13681 = !DILocation(line: 0, scope: !13677)
!13682 = !DILocation(line: 969, column: 6, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13677, file: !2190, line: 969, column: 6)
!13684 = !DILocation(line: 969, column: 23, scope: !13683)
!13685 = !DILocation(line: 969, column: 26, scope: !13683)
!13686 = !DILocation(line: 969, column: 6, scope: !13677)
!13687 = !DILocalVariable(name: "key", arg: 2, scope: !13688, file: !12453, line: 193, type: !13069)
!13688 = distinct !DISubprogram(name: "z_swap", scope: !12453, file: !12453, line: 193, type: !13689, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13691)
!13689 = !DISubroutineType(types: !13690)
!13690 = !{!103, !13080, !13069}
!13691 = !{!13692, !13687}
!13692 = !DILocalVariable(name: "lock", arg: 1, scope: !13688, file: !12453, line: 193, type: !13080)
!13693 = !DILocation(line: 0, scope: !13688, inlinedAt: !13694)
!13694 = distinct !DILocation(line: 970, column: 3, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13683, file: !2190, line: 969, column: 39)
!13696 = !DILocation(line: 196, column: 9, scope: !13688, inlinedAt: !13694)
!13697 = !DILocation(line: 971, column: 2, scope: !13695)
!13698 = !DILocation(line: 0, scope: !13104, inlinedAt: !13699)
!13699 = distinct !DILocation(line: 972, column: 3, scope: !13700)
!13700 = distinct !DILexicalBlock(scope: !13683, file: !2190, line: 971, column: 9)
!13701 = !DILocation(line: 0, scope: !13112, inlinedAt: !13702)
!13702 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !13699)
!13703 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !13702)
!13704 = !DILocation(line: 975, column: 1, scope: !13677)
!13705 = distinct !DISubprogram(name: "resched", scope: !2190, file: !2190, line: 940, type: !13706, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13708)
!13706 = !DISubroutineType(types: !13707)
!13707 = !{!224, !137}
!13708 = !{!13709}
!13709 = !DILocalVariable(name: "key", arg: 1, scope: !13705, file: !2190, line: 940, type: !137)
!13710 = !DILocation(line: 0, scope: !13705)
!13711 = !DILocalVariable(name: "key", arg: 1, scope: !13712, file: !6080, line: 112, type: !32)
!13712 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6080, file: !6080, line: 112, type: !13713, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13715)
!13713 = !DISubroutineType(types: !13714)
!13714 = !{!224, !32}
!13715 = !{!13711}
!13716 = !DILocation(line: 0, scope: !13712, inlinedAt: !13717)
!13717 = distinct !DILocation(line: 946, column: 9, scope: !13705)
!13718 = !DILocation(line: 115, column: 13, scope: !13712, inlinedAt: !13717)
!13719 = !DILocation(line: 946, column: 32, scope: !13705)
!13720 = !DILocation(line: 1031, column: 3, scope: !13721, inlinedAt: !13724)
!13721 = distinct !DISubprogram(name: "__get_IPSR", scope: !6271, file: !6271, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13722)
!13722 = !{!13723}
!13723 = !DILocalVariable(name: "result", scope: !13721, file: !6271, line: 1029, type: !137)
!13724 = distinct !DILocation(line: 48, column: 10, scope: !13725, inlinedAt: !13726)
!13725 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7025, file: !7025, line: 46, type: !7026, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !162)
!13726 = distinct !DILocation(line: 946, column: 36, scope: !13705)
!13727 = !{i64 2486649}
!13728 = !DILocation(line: 0, scope: !13721, inlinedAt: !13724)
!13729 = !DILocation(line: 48, column: 9, scope: !13725, inlinedAt: !13726)
!13730 = !DILocation(line: 946, column: 2, scope: !13705)
!13731 = distinct !DISubprogram(name: "need_swap", scope: !2190, file: !2190, line: 953, type: !7026, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13732)
!13732 = !{!13733}
!13733 = !DILocalVariable(name: "new_thread", scope: !13731, file: !2190, line: 959, type: !2085)
!13734 = !DILocation(line: 962, column: 31, scope: !13731)
!13735 = !DILocation(line: 0, scope: !13731)
!13736 = !DILocation(line: 963, column: 23, scope: !13731)
!13737 = !DILocation(line: 963, column: 20, scope: !13731)
!13738 = !DILocation(line: 963, column: 2, scope: !13731)
!13739 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12453, file: !12453, line: 181, type: !6281, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13740)
!13740 = !{!13741, !13742}
!13741 = !DILocalVariable(name: "key", arg: 1, scope: !13739, file: !12453, line: 181, type: !32)
!13742 = !DILocalVariable(name: "ret", scope: !13739, file: !12453, line: 183, type: !103)
!13743 = !DILocation(line: 0, scope: !13739)
!13744 = !DILocation(line: 185, column: 8, scope: !13739)
!13745 = !DILocation(line: 186, column: 2, scope: !13739)
!13746 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2190, file: !2190, line: 665, type: !13035, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13747)
!13747 = !{!13748, !13749, !13751}
!13748 = !DILocalVariable(name: "thread", arg: 1, scope: !13746, file: !2190, line: 665, type: !2085)
!13749 = !DILocalVariable(name: "__i", scope: !13750, file: !2190, line: 671, type: !13069)
!13750 = distinct !DILexicalBlock(scope: !13746, file: !2190, line: 671, column: 2)
!13751 = !DILocalVariable(name: "__key", scope: !13750, file: !2190, line: 671, type: !13069)
!13752 = !DILocation(line: 0, scope: !13746)
!13753 = !DILocation(line: 669, column: 8, scope: !13746)
!13754 = !DILocation(line: 0, scope: !13750)
!13755 = !DILocation(line: 0, scope: !13077, inlinedAt: !13756)
!13756 = distinct !DILocation(line: 671, column: 2, scope: !13750)
!13757 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !13758)
!13758 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !13756)
!13759 = !DILocation(line: 0, scope: !13086, inlinedAt: !13758)
!13760 = !DILocation(line: 672, column: 7, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13762, file: !2190, line: 672, column: 7)
!13762 = distinct !DILexicalBlock(scope: !13763, file: !2190, line: 671, column: 26)
!13763 = distinct !DILexicalBlock(scope: !13750, file: !2190, line: 671, column: 2)
!13764 = !DILocation(line: 672, column: 7, scope: !13762)
!13765 = !DILocation(line: 0, scope: !13246, inlinedAt: !13766)
!13766 = distinct !DILocation(line: 673, column: 4, scope: !13767)
!13767 = distinct !DILexicalBlock(scope: !13761, file: !2190, line: 672, column: 35)
!13768 = !DILocation(line: 266, column: 15, scope: !13246, inlinedAt: !13766)
!13769 = !DILocation(line: 266, column: 28, scope: !13246, inlinedAt: !13766)
!13770 = !DILocation(line: 0, scope: !13254, inlinedAt: !13771)
!13771 = distinct !DILocation(line: 268, column: 3, scope: !13258, inlinedAt: !13766)
!13772 = !DILocation(line: 234, column: 2, scope: !13254, inlinedAt: !13771)
!13773 = !DILocation(line: 674, column: 3, scope: !13767)
!13774 = !DILocation(line: 675, column: 3, scope: !13762)
!13775 = !DILocation(line: 676, column: 26, scope: !13762)
!13776 = !DILocation(line: 676, column: 23, scope: !13762)
!13777 = !DILocation(line: 676, column: 3, scope: !13762)
!13778 = !DILocation(line: 0, scope: !13104, inlinedAt: !13779)
!13779 = distinct !DILocation(line: 671, column: 2, scope: !13763)
!13780 = !DILocation(line: 0, scope: !13112, inlinedAt: !13781)
!13781 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !13779)
!13782 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !13781)
!13783 = !DILocation(line: 679, column: 16, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13746, file: !2190, line: 679, column: 6)
!13785 = !DILocation(line: 679, column: 13, scope: !13784)
!13786 = !DILocation(line: 679, column: 6, scope: !13746)
!13787 = !DILocation(line: 680, column: 3, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13784, file: !2190, line: 679, column: 26)
!13789 = !DILocation(line: 681, column: 2, scope: !13788)
!13790 = !DILocation(line: 684, column: 1, scope: !13746)
!13791 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12743, file: !12743, line: 52, type: !13053, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13792)
!13792 = !{!13793}
!13793 = !DILocalVariable(name: "thread", arg: 1, scope: !13791, file: !12743, line: 52, type: !2085)
!13794 = !DILocation(line: 0, scope: !13791)
!13795 = !DILocation(line: 54, column: 39, scope: !13791)
!13796 = !DILocation(line: 54, column: 9, scope: !13791)
!13797 = !DILocation(line: 54, column: 2, scope: !13791)
!13798 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12349, file: !12349, line: 141, type: !13035, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13799)
!13799 = !{!13800}
!13800 = !DILocalVariable(name: "thread", arg: 1, scope: !13798, file: !12349, line: 141, type: !2085)
!13801 = !DILocation(line: 0, scope: !13798)
!13802 = !DILocation(line: 143, column: 15, scope: !13798)
!13803 = !DILocation(line: 143, column: 28, scope: !13798)
!13804 = !DILocation(line: 146, column: 1, scope: !13798)
!13805 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12349, file: !12349, line: 73, type: !2794, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !162)
!13806 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !13807)
!13807 = distinct !DILocation(line: 75, column: 30, scope: !13805)
!13808 = !DILocation(line: 0, scope: !13086, inlinedAt: !13807)
!13809 = !DILocation(line: 75, column: 9, scope: !13805)
!13810 = !DILocation(line: 76, column: 1, scope: !13805)
!13811 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2190, file: !2190, line: 977, type: !6104, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13812)
!13812 = !{!13813}
!13813 = !DILocalVariable(name: "key", arg: 1, scope: !13811, file: !2190, line: 977, type: !137)
!13814 = !DILocation(line: 0, scope: !13811)
!13815 = !DILocation(line: 979, column: 6, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13811, file: !2190, line: 979, column: 6)
!13817 = !DILocation(line: 979, column: 6, scope: !13811)
!13818 = !DILocation(line: 980, column: 3, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13816, file: !2190, line: 979, column: 20)
!13820 = !DILocation(line: 981, column: 2, scope: !13819)
!13821 = !DILocation(line: 0, scope: !13112, inlinedAt: !13822)
!13822 = distinct !DILocation(line: 982, column: 3, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13816, file: !2190, line: 981, column: 9)
!13824 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !13822)
!13825 = !DILocation(line: 985, column: 1, scope: !13811)
!13826 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2190, file: !2190, line: 695, type: !13035, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13827)
!13827 = !{!13828, !13829}
!13828 = !DILocalVariable(name: "thread", arg: 1, scope: !13826, file: !2190, line: 695, type: !2085)
!13829 = !DILocalVariable(name: "key", scope: !13826, file: !2190, line: 699, type: !13069)
!13830 = !DILocation(line: 0, scope: !13826)
!13831 = !DILocation(line: 0, scope: !13077, inlinedAt: !13832)
!13832 = distinct !DILocation(line: 699, column: 25, scope: !13826)
!13833 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !13834)
!13834 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !13832)
!13835 = !DILocation(line: 0, scope: !13086, inlinedAt: !13834)
!13836 = !DILocation(line: 702, column: 7, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13826, file: !2190, line: 702, column: 6)
!13838 = !DILocation(line: 702, column: 6, scope: !13826)
!13839 = !DILocation(line: 0, scope: !13104, inlinedAt: !13840)
!13840 = distinct !DILocation(line: 703, column: 3, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13837, file: !2190, line: 702, column: 38)
!13842 = !DILocation(line: 0, scope: !13112, inlinedAt: !13843)
!13843 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !13840)
!13844 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !13843)
!13845 = !DILocation(line: 704, column: 3, scope: !13841)
!13846 = !DILocation(line: 707, column: 2, scope: !13826)
!13847 = !DILocation(line: 708, column: 2, scope: !13826)
!13848 = !DILocation(line: 710, column: 2, scope: !13826)
!13849 = !DILocation(line: 713, column: 1, scope: !13826)
!13850 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12349, file: !12349, line: 96, type: !13195, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13851)
!13851 = !{!13852}
!13852 = !DILocalVariable(name: "thread", arg: 1, scope: !13850, file: !12349, line: 96, type: !2085)
!13853 = !DILocation(line: 0, scope: !13850)
!13854 = !DILocation(line: 98, column: 23, scope: !13850)
!13855 = !DILocation(line: 98, column: 36, scope: !13850)
!13856 = !DILocation(line: 98, column: 57, scope: !13850)
!13857 = !DILocation(line: 98, column: 2, scope: !13850)
!13858 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12349, file: !12349, line: 148, type: !13035, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13859)
!13859 = !{!13860}
!13860 = !DILocalVariable(name: "thread", arg: 1, scope: !13858, file: !12349, line: 148, type: !2085)
!13861 = !DILocation(line: 0, scope: !13858)
!13862 = !DILocation(line: 150, column: 15, scope: !13858)
!13863 = !DILocation(line: 150, column: 28, scope: !13858)
!13864 = !DILocation(line: 153, column: 1, scope: !13858)
!13865 = distinct !DISubprogram(name: "z_pend_thread", scope: !2190, file: !2190, line: 770, type: !13866, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13872)
!13866 = !DISubroutineType(types: !13867)
!13867 = !{null, !2085, !2116, !13868}
!13868 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1461, line: 67, baseType: !13869)
!13869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1461, line: 65, size: 64, elements: !13870)
!13870 = !{!13871}
!13871 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13869, file: !1461, line: 66, baseType: !1460, size: 64)
!13872 = !{!13873, !13874, !13875, !13876, !13878}
!13873 = !DILocalVariable(name: "thread", arg: 1, scope: !13865, file: !2190, line: 770, type: !2085)
!13874 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13865, file: !2190, line: 770, type: !2116)
!13875 = !DILocalVariable(name: "timeout", arg: 3, scope: !13865, file: !2190, line: 771, type: !13868)
!13876 = !DILocalVariable(name: "__i", scope: !13877, file: !2190, line: 774, type: !13069)
!13877 = distinct !DILexicalBlock(scope: !13865, file: !2190, line: 774, column: 2)
!13878 = !DILocalVariable(name: "__key", scope: !13877, file: !2190, line: 774, type: !13069)
!13879 = !DILocation(line: 0, scope: !13865)
!13880 = !DILocation(line: 0, scope: !13877)
!13881 = !DILocation(line: 0, scope: !13077, inlinedAt: !13882)
!13882 = distinct !DILocation(line: 774, column: 2, scope: !13877)
!13883 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !13884)
!13884 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !13882)
!13885 = !DILocation(line: 0, scope: !13086, inlinedAt: !13884)
!13886 = !DILocation(line: 775, column: 3, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13888, file: !2190, line: 774, column: 26)
!13888 = distinct !DILexicalBlock(scope: !13877, file: !2190, line: 774, column: 2)
!13889 = !DILocation(line: 0, scope: !13104, inlinedAt: !13890)
!13890 = distinct !DILocation(line: 774, column: 2, scope: !13888)
!13891 = !DILocation(line: 0, scope: !13112, inlinedAt: !13892)
!13892 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !13890)
!13893 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !13892)
!13894 = !DILocation(line: 777, column: 1, scope: !13865)
!13895 = distinct !DISubprogram(name: "pend_locked", scope: !2190, file: !2190, line: 760, type: !13866, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13896)
!13896 = !{!13897, !13898, !13899}
!13897 = !DILocalVariable(name: "thread", arg: 1, scope: !13895, file: !2190, line: 760, type: !2085)
!13898 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13895, file: !2190, line: 760, type: !2116)
!13899 = !DILocalVariable(name: "timeout", arg: 3, scope: !13895, file: !2190, line: 761, type: !13868)
!13900 = !DILocation(line: 0, scope: !13895)
!13901 = !DILocation(line: 766, column: 2, scope: !13895)
!13902 = !DILocation(line: 767, column: 2, scope: !13895)
!13903 = !DILocation(line: 768, column: 1, scope: !13895)
!13904 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2190, file: !2190, line: 740, type: !13905, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13907)
!13905 = !DISubroutineType(types: !13906)
!13906 = !{null, !2085, !2116}
!13907 = !{!13908, !13909}
!13908 = !DILocalVariable(name: "thread", arg: 1, scope: !13904, file: !2190, line: 740, type: !2085)
!13909 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13904, file: !2190, line: 740, type: !2116)
!13910 = !DILocation(line: 0, scope: !13904)
!13911 = !DILocation(line: 742, column: 2, scope: !13904)
!13912 = !DILocation(line: 743, column: 2, scope: !13904)
!13913 = !DILocation(line: 747, column: 13, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13904, file: !2190, line: 747, column: 6)
!13915 = !DILocation(line: 747, column: 6, scope: !13904)
!13916 = !DILocation(line: 748, column: 16, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13914, file: !2190, line: 747, column: 22)
!13918 = !DILocation(line: 748, column: 26, scope: !13917)
!13919 = !DILocation(line: 749, column: 28, scope: !13917)
!13920 = !DILocation(line: 0, scope: !13277, inlinedAt: !13921)
!13921 = distinct !DILocation(line: 749, column: 3, scope: !13917)
!13922 = !DILocation(line: 188, column: 2, scope: !13287, inlinedAt: !13921)
!13923 = !DILocation(line: 188, column: 2, scope: !13289, inlinedAt: !13921)
!13924 = !DILocation(line: 0, scope: !13287, inlinedAt: !13921)
!13925 = !DILocation(line: 189, column: 7, scope: !13292, inlinedAt: !13921)
!13926 = !DILocation(line: 189, column: 35, scope: !13292, inlinedAt: !13921)
!13927 = !DILocation(line: 189, column: 7, scope: !13293, inlinedAt: !13921)
!13928 = !DILocation(line: 191, column: 21, scope: !13297, inlinedAt: !13921)
!13929 = !DILocation(line: 190, column: 4, scope: !13297, inlinedAt: !13921)
!13930 = !DILocation(line: 192, column: 4, scope: !13297, inlinedAt: !13921)
!13931 = distinct !{!13931, !13922, !13932}
!13932 = !DILocation(line: 194, column: 2, scope: !13287, inlinedAt: !13921)
!13933 = !DILocation(line: 196, column: 37, scope: !13277, inlinedAt: !13921)
!13934 = !DILocation(line: 196, column: 2, scope: !13277, inlinedAt: !13921)
!13935 = !DILocation(line: 197, column: 1, scope: !13277, inlinedAt: !13921)
!13936 = !DILocation(line: 751, column: 1, scope: !13904)
!13937 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2190, file: !2190, line: 753, type: !13938, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13940)
!13938 = !DISubroutineType(types: !13939)
!13939 = !{null, !2085, !13868}
!13940 = !{!13941, !13942}
!13941 = !DILocalVariable(name: "thread", arg: 1, scope: !13937, file: !2190, line: 753, type: !2085)
!13942 = !DILocalVariable(name: "timeout", arg: 2, scope: !13937, file: !2190, line: 753, type: !13868)
!13943 = !DILocation(line: 0, scope: !13937)
!13944 = !DILocation(line: 755, column: 7, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13937, file: !2190, line: 755, column: 6)
!13946 = !DILocation(line: 755, column: 6, scope: !13937)
!13947 = !DILocation(line: 756, column: 3, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13945, file: !2190, line: 755, column: 41)
!13949 = !DILocation(line: 757, column: 2, scope: !13948)
!13950 = !DILocation(line: 758, column: 1, scope: !13937)
!13951 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12743, file: !12743, line: 47, type: !13938, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13952)
!13952 = !{!13953, !13954}
!13953 = !DILocalVariable(name: "thread", arg: 1, scope: !13951, file: !12743, line: 47, type: !2085)
!13954 = !DILocalVariable(name: "ticks", arg: 2, scope: !13951, file: !12743, line: 47, type: !13868)
!13955 = !DILocation(line: 0, scope: !13951)
!13956 = !DILocation(line: 49, column: 30, scope: !13951)
!13957 = !DILocation(line: 49, column: 2, scope: !13951)
!13958 = !DILocation(line: 50, column: 1, scope: !13951)
!13959 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2190, file: !2190, line: 795, type: !2142, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !13960)
!13960 = !{!13961, !13962, !13963, !13965, !13966}
!13961 = !DILocalVariable(name: "timeout", arg: 1, scope: !13959, file: !2190, line: 795, type: !2144)
!13962 = !DILocalVariable(name: "thread", scope: !13959, file: !2190, line: 797, type: !2085)
!13963 = !DILocalVariable(name: "__i", scope: !13964, file: !2190, line: 800, type: !13069)
!13964 = distinct !DILexicalBlock(scope: !13959, file: !2190, line: 800, column: 2)
!13965 = !DILocalVariable(name: "__key", scope: !13964, file: !2190, line: 800, type: !13069)
!13966 = !DILocalVariable(name: "killed", scope: !13967, file: !2190, line: 801, type: !224)
!13967 = distinct !DILexicalBlock(scope: !13968, file: !2190, line: 800, column: 26)
!13968 = distinct !DILexicalBlock(scope: !13964, file: !2190, line: 800, column: 2)
!13969 = !DILocation(line: 0, scope: !13959)
!13970 = !DILocation(line: 797, column: 28, scope: !13959)
!13971 = !DILocation(line: 0, scope: !13964)
!13972 = !DILocation(line: 0, scope: !13077, inlinedAt: !13973)
!13973 = distinct !DILocation(line: 800, column: 2, scope: !13964)
!13974 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !13975)
!13975 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !13973)
!13976 = !DILocation(line: 0, scope: !13086, inlinedAt: !13975)
!13977 = !DILocation(line: 801, column: 27, scope: !13967)
!13978 = !DILocation(line: 801, column: 32, scope: !13967)
!13979 = !DILocation(line: 801, column: 61, scope: !13967)
!13980 = !DILocation(line: 0, scope: !13967)
!13981 = !DILocation(line: 804, column: 7, scope: !13967)
!13982 = !DILocation(line: 805, column: 21, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13984, file: !2190, line: 805, column: 8)
!13984 = distinct !DILexicalBlock(scope: !13985, file: !2190, line: 804, column: 16)
!13985 = distinct !DILexicalBlock(scope: !13967, file: !2190, line: 804, column: 7)
!13986 = !DILocation(line: 805, column: 31, scope: !13983)
!13987 = !DILocation(line: 805, column: 8, scope: !13984)
!13988 = !DILocation(line: 806, column: 5, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13983, file: !2190, line: 805, column: 40)
!13990 = !DILocation(line: 807, column: 4, scope: !13989)
!13991 = !DILocation(line: 808, column: 4, scope: !13984)
!13992 = !DILocation(line: 809, column: 4, scope: !13984)
!13993 = !DILocation(line: 810, column: 4, scope: !13984)
!13994 = !DILocation(line: 811, column: 3, scope: !13984)
!13995 = !DILocation(line: 0, scope: !13104, inlinedAt: !13996)
!13996 = distinct !DILocation(line: 800, column: 2, scope: !13968)
!13997 = !DILocation(line: 0, scope: !13112, inlinedAt: !13998)
!13998 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !13996)
!13999 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !13998)
!14000 = !DILocation(line: 813, column: 1, scope: !13959)
!14001 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2190, file: !2190, line: 779, type: !13035, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14002)
!14002 = !{!14003}
!14003 = !DILocalVariable(name: "thread", arg: 1, scope: !14001, file: !2190, line: 779, type: !2085)
!14004 = !DILocation(line: 0, scope: !14001)
!14005 = !DILocation(line: 781, column: 2, scope: !14001)
!14006 = !DILocation(line: 782, column: 2, scope: !14001)
!14007 = !DILocation(line: 783, column: 15, scope: !14001)
!14008 = !DILocation(line: 783, column: 25, scope: !14001)
!14009 = !DILocation(line: 784, column: 1, scope: !14001)
!14010 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12349, file: !12349, line: 165, type: !13035, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14011)
!14011 = !{!14012}
!14012 = !DILocalVariable(name: "thread", arg: 1, scope: !14010, file: !12349, line: 165, type: !2085)
!14013 = !DILocation(line: 0, scope: !14010)
!14014 = !DILocation(line: 167, column: 15, scope: !14010)
!14015 = !DILocation(line: 167, column: 28, scope: !14010)
!14016 = !DILocation(line: 168, column: 1, scope: !14010)
!14017 = distinct !DISubprogram(name: "unready_thread", scope: !2190, file: !2190, line: 731, type: !13035, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14018)
!14018 = !{!14019}
!14019 = !DILocalVariable(name: "thread", arg: 1, scope: !14017, file: !2190, line: 731, type: !2085)
!14020 = !DILocation(line: 0, scope: !14017)
!14021 = !DILocation(line: 733, column: 6, scope: !14022)
!14022 = distinct !DILexicalBlock(scope: !14017, file: !2190, line: 733, column: 6)
!14023 = !DILocation(line: 733, column: 6, scope: !14017)
!14024 = !DILocation(line: 0, scope: !13246, inlinedAt: !14025)
!14025 = distinct !DILocation(line: 734, column: 3, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14022, file: !2190, line: 733, column: 34)
!14027 = !DILocation(line: 266, column: 15, scope: !13246, inlinedAt: !14025)
!14028 = !DILocation(line: 266, column: 28, scope: !13246, inlinedAt: !14025)
!14029 = !DILocation(line: 0, scope: !13254, inlinedAt: !14030)
!14030 = distinct !DILocation(line: 268, column: 3, scope: !13258, inlinedAt: !14025)
!14031 = !DILocation(line: 234, column: 2, scope: !13254, inlinedAt: !14030)
!14032 = !DILocation(line: 735, column: 2, scope: !14026)
!14033 = !DILocation(line: 736, column: 25, scope: !14017)
!14034 = !DILocation(line: 736, column: 22, scope: !14017)
!14035 = !DILocation(line: 736, column: 2, scope: !14017)
!14036 = !DILocation(line: 737, column: 1, scope: !14017)
!14037 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12349, file: !12349, line: 160, type: !13035, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14038)
!14038 = !{!14039}
!14039 = !DILocalVariable(name: "thread", arg: 1, scope: !14037, file: !12349, line: 160, type: !2085)
!14040 = !DILocation(line: 0, scope: !14037)
!14041 = !DILocation(line: 162, column: 15, scope: !14037)
!14042 = !DILocation(line: 162, column: 28, scope: !14037)
!14043 = !DILocation(line: 163, column: 1, scope: !14037)
!14044 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2190, file: !2190, line: 786, type: !13035, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14045)
!14045 = !{!14046, !14047, !14049}
!14046 = !DILocalVariable(name: "thread", arg: 1, scope: !14044, file: !2190, line: 786, type: !2085)
!14047 = !DILocalVariable(name: "__i", scope: !14048, file: !2190, line: 788, type: !13069)
!14048 = distinct !DILexicalBlock(scope: !14044, file: !2190, line: 788, column: 2)
!14049 = !DILocalVariable(name: "__key", scope: !14048, file: !2190, line: 788, type: !13069)
!14050 = !DILocation(line: 0, scope: !14044)
!14051 = !DILocation(line: 0, scope: !14048)
!14052 = !DILocation(line: 0, scope: !13077, inlinedAt: !14053)
!14053 = distinct !DILocation(line: 788, column: 2, scope: !14048)
!14054 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14055)
!14055 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14053)
!14056 = !DILocation(line: 0, scope: !13086, inlinedAt: !14055)
!14057 = !DILocation(line: 789, column: 3, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14059, file: !2190, line: 788, column: 26)
!14059 = distinct !DILexicalBlock(scope: !14048, file: !2190, line: 788, column: 2)
!14060 = !DILocation(line: 0, scope: !13104, inlinedAt: !14061)
!14061 = distinct !DILocation(line: 788, column: 2, scope: !14059)
!14062 = !DILocation(line: 0, scope: !13112, inlinedAt: !14063)
!14063 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !14061)
!14064 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !14063)
!14065 = !DILocation(line: 791, column: 1, scope: !14044)
!14066 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2190, file: !2190, line: 816, type: !14067, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14069)
!14067 = !DISubroutineType(types: !14068)
!14068 = !{!103, !137, !2116, !13868}
!14069 = !{!14070, !14071, !14072, !14073, !14074, !14076}
!14070 = !DILocalVariable(name: "key", arg: 1, scope: !14066, file: !2190, line: 816, type: !137)
!14071 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14066, file: !2190, line: 816, type: !2116)
!14072 = !DILocalVariable(name: "timeout", arg: 3, scope: !14066, file: !2190, line: 816, type: !13868)
!14073 = !DILocalVariable(name: "ret", scope: !14066, file: !2190, line: 828, type: !103)
!14074 = !DILocalVariable(name: "__i", scope: !14075, file: !2190, line: 829, type: !13069)
!14075 = distinct !DILexicalBlock(scope: !14066, file: !2190, line: 829, column: 2)
!14076 = !DILocalVariable(name: "__key", scope: !14075, file: !2190, line: 829, type: !13069)
!14077 = !DILocation(line: 0, scope: !14066)
!14078 = !DILocation(line: 823, column: 14, scope: !14066)
!14079 = !DILocation(line: 823, column: 2, scope: !14066)
!14080 = !DILocation(line: 826, column: 20, scope: !14066)
!14081 = !DILocation(line: 826, column: 18, scope: !14066)
!14082 = !DILocation(line: 828, column: 12, scope: !14066)
!14083 = !DILocation(line: 0, scope: !14075)
!14084 = !DILocation(line: 0, scope: !13077, inlinedAt: !14085)
!14085 = distinct !DILocation(line: 829, column: 2, scope: !14075)
!14086 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14087)
!14087 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14085)
!14088 = !DILocation(line: 0, scope: !13086, inlinedAt: !14087)
!14089 = !DILocation(line: 830, column: 7, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14091, file: !2190, line: 830, column: 7)
!14091 = distinct !DILexicalBlock(scope: !14092, file: !2190, line: 829, column: 26)
!14092 = distinct !DILexicalBlock(scope: !14075, file: !2190, line: 829, column: 2)
!14093 = !DILocation(line: 830, column: 26, scope: !14090)
!14094 = !DILocation(line: 830, column: 23, scope: !14090)
!14095 = !DILocation(line: 830, column: 7, scope: !14091)
!14096 = !DILocation(line: 831, column: 20, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14090, file: !2190, line: 830, column: 36)
!14098 = !DILocation(line: 832, column: 3, scope: !14097)
!14099 = !DILocation(line: 0, scope: !13104, inlinedAt: !14100)
!14100 = distinct !DILocation(line: 829, column: 2, scope: !14092)
!14101 = !DILocation(line: 0, scope: !13112, inlinedAt: !14102)
!14102 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !14100)
!14103 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !14102)
!14104 = !DILocation(line: 834, column: 2, scope: !14066)
!14105 = distinct !DISubprogram(name: "z_pend_curr", scope: !2190, file: !2190, line: 840, type: !14106, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14108)
!14106 = !DISubroutineType(types: !14107)
!14107 = !{!103, !13080, !13069, !2116, !13868}
!14108 = !{!14109, !14110, !14111, !14112}
!14109 = !DILocalVariable(name: "lock", arg: 1, scope: !14105, file: !2190, line: 840, type: !13080)
!14110 = !DILocalVariable(name: "key", arg: 2, scope: !14105, file: !2190, line: 840, type: !13069)
!14111 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14105, file: !2190, line: 841, type: !2116)
!14112 = !DILocalVariable(name: "timeout", arg: 4, scope: !14105, file: !2190, line: 841, type: !13868)
!14113 = !DILocation(line: 0, scope: !14105)
!14114 = !DILocation(line: 844, column: 20, scope: !14105)
!14115 = !DILocation(line: 844, column: 18, scope: !14105)
!14116 = !DILocation(line: 0, scope: !13077, inlinedAt: !14117)
!14117 = distinct !DILocation(line: 856, column: 9, scope: !14105)
!14118 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14119)
!14119 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14117)
!14120 = !DILocation(line: 0, scope: !13086, inlinedAt: !14119)
!14121 = !DILocation(line: 857, column: 14, scope: !14105)
!14122 = !DILocation(line: 857, column: 2, scope: !14105)
!14123 = !DILocation(line: 0, scope: !13688, inlinedAt: !14124)
!14124 = distinct !DILocation(line: 859, column: 9, scope: !14105)
!14125 = !DILocation(line: 196, column: 9, scope: !13688, inlinedAt: !14124)
!14126 = !DILocation(line: 859, column: 2, scope: !14105)
!14127 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2190, file: !2190, line: 862, type: !14128, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14130)
!14128 = !DISubroutineType(types: !14129)
!14129 = !{!2085, !2116}
!14130 = !{!14131, !14132, !14133, !14135}
!14131 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14127, file: !2190, line: 862, type: !2116)
!14132 = !DILocalVariable(name: "thread", scope: !14127, file: !2190, line: 864, type: !2085)
!14133 = !DILocalVariable(name: "__i", scope: !14134, file: !2190, line: 866, type: !13069)
!14134 = distinct !DILexicalBlock(scope: !14127, file: !2190, line: 866, column: 2)
!14135 = !DILocalVariable(name: "__key", scope: !14134, file: !2190, line: 866, type: !13069)
!14136 = !DILocation(line: 0, scope: !14127)
!14137 = !DILocation(line: 0, scope: !14134)
!14138 = !DILocation(line: 0, scope: !13077, inlinedAt: !14139)
!14139 = distinct !DILocation(line: 866, column: 2, scope: !14134)
!14140 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14141)
!14141 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14139)
!14142 = !DILocation(line: 0, scope: !13086, inlinedAt: !14141)
!14143 = !DILocation(line: 867, column: 12, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14145, file: !2190, line: 866, column: 26)
!14145 = distinct !DILexicalBlock(scope: !14134, file: !2190, line: 866, column: 2)
!14146 = !DILocation(line: 869, column: 14, scope: !14147)
!14147 = distinct !DILexicalBlock(scope: !14144, file: !2190, line: 869, column: 7)
!14148 = !DILocation(line: 869, column: 7, scope: !14144)
!14149 = !DILocation(line: 870, column: 4, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14147, file: !2190, line: 869, column: 23)
!14151 = !DILocation(line: 871, column: 3, scope: !14150)
!14152 = !DILocation(line: 0, scope: !13104, inlinedAt: !14153)
!14153 = distinct !DILocation(line: 866, column: 2, scope: !14145)
!14154 = !DILocation(line: 0, scope: !13112, inlinedAt: !14155)
!14155 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !14153)
!14156 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !14155)
!14157 = !DILocation(line: 874, column: 2, scope: !14127)
!14158 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2190, file: !2190, line: 877, type: !14128, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14159)
!14159 = !{!14160, !14161, !14162, !14164}
!14160 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14158, file: !2190, line: 877, type: !2116)
!14161 = !DILocalVariable(name: "thread", scope: !14158, file: !2190, line: 879, type: !2085)
!14162 = !DILocalVariable(name: "__i", scope: !14163, file: !2190, line: 881, type: !13069)
!14163 = distinct !DILexicalBlock(scope: !14158, file: !2190, line: 881, column: 2)
!14164 = !DILocalVariable(name: "__key", scope: !14163, file: !2190, line: 881, type: !13069)
!14165 = !DILocation(line: 0, scope: !14158)
!14166 = !DILocation(line: 0, scope: !14163)
!14167 = !DILocation(line: 0, scope: !13077, inlinedAt: !14168)
!14168 = distinct !DILocation(line: 881, column: 2, scope: !14163)
!14169 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14170)
!14170 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14168)
!14171 = !DILocation(line: 0, scope: !13086, inlinedAt: !14170)
!14172 = !DILocation(line: 882, column: 12, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !14174, file: !2190, line: 881, column: 26)
!14174 = distinct !DILexicalBlock(scope: !14163, file: !2190, line: 881, column: 2)
!14175 = !DILocation(line: 884, column: 14, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14173, file: !2190, line: 884, column: 7)
!14177 = !DILocation(line: 884, column: 7, scope: !14173)
!14178 = !DILocation(line: 885, column: 4, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14176, file: !2190, line: 884, column: 23)
!14180 = !DILocation(line: 886, column: 10, scope: !14179)
!14181 = !DILocation(line: 887, column: 3, scope: !14179)
!14182 = !DILocation(line: 0, scope: !13104, inlinedAt: !14183)
!14183 = distinct !DILocation(line: 881, column: 2, scope: !14174)
!14184 = !DILocation(line: 0, scope: !13112, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !14183)
!14186 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !14185)
!14187 = !DILocation(line: 890, column: 2, scope: !14158)
!14188 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2190, file: !2190, line: 893, type: !13035, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14189)
!14189 = !{!14190}
!14190 = !DILocalVariable(name: "thread", arg: 1, scope: !14188, file: !2190, line: 893, type: !2085)
!14191 = !DILocation(line: 0, scope: !14188)
!14192 = !DILocation(line: 0, scope: !14044, inlinedAt: !14193)
!14193 = distinct !DILocation(line: 895, column: 2, scope: !14188)
!14194 = !DILocation(line: 0, scope: !14048, inlinedAt: !14193)
!14195 = !DILocation(line: 0, scope: !13077, inlinedAt: !14196)
!14196 = distinct !DILocation(line: 788, column: 2, scope: !14048, inlinedAt: !14193)
!14197 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14198)
!14198 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14196)
!14199 = !DILocation(line: 0, scope: !13086, inlinedAt: !14198)
!14200 = !DILocation(line: 789, column: 3, scope: !14058, inlinedAt: !14193)
!14201 = !DILocation(line: 0, scope: !13104, inlinedAt: !14202)
!14202 = distinct !DILocation(line: 788, column: 2, scope: !14059, inlinedAt: !14193)
!14203 = !DILocation(line: 0, scope: !13112, inlinedAt: !14204)
!14204 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !14202)
!14205 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !14204)
!14206 = !DILocation(line: 896, column: 8, scope: !14188)
!14207 = !DILocation(line: 897, column: 1, scope: !14188)
!14208 = distinct !DISubprogram(name: "z_set_prio", scope: !2190, file: !2190, line: 902, type: !13397, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14209)
!14209 = !{!14210, !14211, !14212, !14213, !14215}
!14210 = !DILocalVariable(name: "thread", arg: 1, scope: !14208, file: !2190, line: 902, type: !2085)
!14211 = !DILocalVariable(name: "prio", arg: 2, scope: !14208, file: !2190, line: 902, type: !103)
!14212 = !DILocalVariable(name: "need_sched", scope: !14208, file: !2190, line: 904, type: !224)
!14213 = !DILocalVariable(name: "__i", scope: !14214, file: !2190, line: 906, type: !13069)
!14214 = distinct !DILexicalBlock(scope: !14208, file: !2190, line: 906, column: 2)
!14215 = !DILocalVariable(name: "__key", scope: !14214, file: !2190, line: 906, type: !13069)
!14216 = !DILocation(line: 0, scope: !14208)
!14217 = !DILocation(line: 0, scope: !14214)
!14218 = !DILocation(line: 0, scope: !13077, inlinedAt: !14219)
!14219 = distinct !DILocation(line: 906, column: 2, scope: !14214)
!14220 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14221)
!14221 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14219)
!14222 = !DILocation(line: 0, scope: !13086, inlinedAt: !14221)
!14223 = !DILocation(line: 907, column: 16, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14225, file: !2190, line: 906, column: 26)
!14225 = distinct !DILexicalBlock(scope: !14214, file: !2190, line: 906, column: 2)
!14226 = !DILocation(line: 909, column: 7, scope: !14224)
!14227 = !DILocation(line: 0, scope: !13246, inlinedAt: !14228)
!14228 = distinct !DILocation(line: 912, column: 5, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14230, file: !2190, line: 911, column: 63)
!14230 = distinct !DILexicalBlock(scope: !14231, file: !2190, line: 911, column: 8)
!14231 = distinct !DILexicalBlock(scope: !14232, file: !2190, line: 909, column: 19)
!14232 = distinct !DILexicalBlock(scope: !14224, file: !2190, line: 909, column: 7)
!14233 = !DILocation(line: 266, column: 28, scope: !13246, inlinedAt: !14228)
!14234 = !DILocation(line: 0, scope: !13254, inlinedAt: !14235)
!14235 = distinct !DILocation(line: 268, column: 3, scope: !13258, inlinedAt: !14228)
!14236 = !DILocation(line: 234, column: 2, scope: !13254, inlinedAt: !14235)
!14237 = !DILocation(line: 913, column: 23, scope: !14229)
!14238 = !DILocation(line: 0, scope: !13263, inlinedAt: !14239)
!14239 = distinct !DILocation(line: 914, column: 5, scope: !14229)
!14240 = !DILocation(line: 252, column: 28, scope: !13263, inlinedAt: !14239)
!14241 = !DILocation(line: 0, scope: !13270, inlinedAt: !14242)
!14242 = distinct !DILocation(line: 254, column: 3, scope: !13274, inlinedAt: !14239)
!14243 = !DILocation(line: 0, scope: !13277, inlinedAt: !14244)
!14244 = distinct !DILocation(line: 229, column: 2, scope: !13270, inlinedAt: !14242)
!14245 = !DILocation(line: 188, column: 2, scope: !13287, inlinedAt: !14244)
!14246 = !DILocation(line: 188, column: 2, scope: !13289, inlinedAt: !14244)
!14247 = !DILocation(line: 0, scope: !13287, inlinedAt: !14244)
!14248 = !DILocation(line: 189, column: 7, scope: !13292, inlinedAt: !14244)
!14249 = !DILocation(line: 189, column: 35, scope: !13292, inlinedAt: !14244)
!14250 = !DILocation(line: 189, column: 7, scope: !13293, inlinedAt: !14244)
!14251 = !DILocation(line: 190, column: 4, scope: !13297, inlinedAt: !14244)
!14252 = !DILocation(line: 192, column: 4, scope: !13297, inlinedAt: !14244)
!14253 = distinct !{!14253, !14245, !14254}
!14254 = !DILocation(line: 194, column: 2, scope: !13287, inlinedAt: !14244)
!14255 = !DILocation(line: 196, column: 2, scope: !13277, inlinedAt: !14244)
!14256 = !DILocation(line: 197, column: 1, scope: !13277, inlinedAt: !14244)
!14257 = !DILocation(line: 918, column: 4, scope: !14231)
!14258 = !DILocation(line: 919, column: 3, scope: !14231)
!14259 = !DILocation(line: 920, column: 22, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14232, file: !2190, line: 919, column: 10)
!14261 = !DILocation(line: 0, scope: !13104, inlinedAt: !14262)
!14262 = distinct !DILocation(line: 906, column: 2, scope: !14225)
!14263 = !DILocation(line: 0, scope: !13112, inlinedAt: !14264)
!14264 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !14262)
!14265 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !14264)
!14266 = !DILocation(line: 926, column: 2, scope: !14208)
!14267 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2190, file: !2190, line: 929, type: !14268, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14270)
!14268 = !DISubroutineType(types: !14269)
!14269 = !{null, !2085, !103}
!14270 = !{!14271, !14272, !14273}
!14271 = !DILocalVariable(name: "thread", arg: 1, scope: !14267, file: !2190, line: 929, type: !2085)
!14272 = !DILocalVariable(name: "prio", arg: 2, scope: !14267, file: !2190, line: 929, type: !103)
!14273 = !DILocalVariable(name: "need_sched", scope: !14267, file: !2190, line: 931, type: !224)
!14274 = !DILocation(line: 0, scope: !14267)
!14275 = !DILocation(line: 931, column: 20, scope: !14267)
!14276 = !DILocation(line: 935, column: 17, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14267, file: !2190, line: 935, column: 6)
!14278 = !DILocation(line: 935, column: 20, scope: !14277)
!14279 = !DILocation(line: 935, column: 35, scope: !14277)
!14280 = !DILocation(line: 935, column: 48, scope: !14277)
!14281 = !DILocation(line: 935, column: 6, scope: !14267)
!14282 = !DILocation(line: 936, column: 3, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14277, file: !2190, line: 935, column: 55)
!14284 = !DILocation(line: 937, column: 2, scope: !14283)
!14285 = !DILocation(line: 938, column: 1, scope: !14267)
!14286 = distinct !DISubprogram(name: "k_sched_lock", scope: !2190, file: !2190, line: 987, type: !2794, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14287)
!14287 = !{!14288, !14290}
!14288 = !DILocalVariable(name: "__i", scope: !14289, file: !2190, line: 989, type: !13069)
!14289 = distinct !DILexicalBlock(scope: !14286, file: !2190, line: 989, column: 2)
!14290 = !DILocalVariable(name: "__key", scope: !14289, file: !2190, line: 989, type: !13069)
!14291 = !DILocation(line: 0, scope: !14289)
!14292 = !DILocation(line: 0, scope: !13077, inlinedAt: !14293)
!14293 = distinct !DILocation(line: 989, column: 2, scope: !14289)
!14294 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14295)
!14295 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14293)
!14296 = !DILocation(line: 0, scope: !13086, inlinedAt: !14295)
!14297 = !DILocation(line: 992, column: 3, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14299, file: !2190, line: 989, column: 26)
!14299 = distinct !DILexicalBlock(scope: !14289, file: !2190, line: 989, column: 2)
!14300 = !DILocation(line: 0, scope: !13104, inlinedAt: !14301)
!14301 = distinct !DILocation(line: 989, column: 2, scope: !14299)
!14302 = !DILocation(line: 0, scope: !13112, inlinedAt: !14303)
!14303 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !14301)
!14304 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !14303)
!14305 = !DILocation(line: 994, column: 1, scope: !14286)
!14306 = distinct !DISubprogram(name: "z_sched_lock", scope: !12349, file: !12349, line: 251, type: !2794, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !162)
!14307 = !DILocation(line: 256, column: 4, scope: !14306)
!14308 = !DILocation(line: 256, column: 19, scope: !14306)
!14309 = !DILocation(line: 256, column: 2, scope: !14306)
!14310 = !DILocation(line: 258, column: 2, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14306, file: !12349, line: 258, column: 2)
!14312 = !{i64 2152340459}
!14313 = !DILocation(line: 259, column: 1, scope: !14306)
!14314 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2190, file: !2190, line: 996, type: !2794, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14315)
!14315 = !{!14316, !14318}
!14316 = !DILocalVariable(name: "__i", scope: !14317, file: !2190, line: 998, type: !13069)
!14317 = distinct !DILexicalBlock(scope: !14314, file: !2190, line: 998, column: 2)
!14318 = !DILocalVariable(name: "__key", scope: !14317, file: !2190, line: 998, type: !13069)
!14319 = !DILocation(line: 0, scope: !14317)
!14320 = !DILocation(line: 0, scope: !13077, inlinedAt: !14321)
!14321 = distinct !DILocation(line: 998, column: 2, scope: !14317)
!14322 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14323)
!14323 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14321)
!14324 = !DILocation(line: 0, scope: !13086, inlinedAt: !14323)
!14325 = !DILocation(line: 1002, column: 5, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14327, file: !2190, line: 998, column: 26)
!14327 = distinct !DILexicalBlock(scope: !14317, file: !2190, line: 998, column: 2)
!14328 = !DILocation(line: 1002, column: 20, scope: !14326)
!14329 = !DILocation(line: 1002, column: 3, scope: !14326)
!14330 = !DILocation(line: 1003, column: 3, scope: !14326)
!14331 = !DILocation(line: 0, scope: !13104, inlinedAt: !14332)
!14332 = distinct !DILocation(line: 998, column: 2, scope: !14327)
!14333 = !DILocation(line: 0, scope: !13112, inlinedAt: !14334)
!14334 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !14332)
!14335 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !14334)
!14336 = !DILocation(line: 1011, column: 2, scope: !14314)
!14337 = !DILocation(line: 1012, column: 1, scope: !14314)
!14338 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2190, file: !2190, line: 1014, type: !13385, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !162)
!14339 = !DILocation(line: 1028, column: 25, scope: !14338)
!14340 = !DILocation(line: 1028, column: 2, scope: !14338)
!14341 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2190, file: !2190, line: 1155, type: !14342, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14344)
!14342 = !DISubroutineType(types: !14343)
!14343 = !{!224, !2114, !2114}
!14344 = !{!14345, !14346, !14347, !14348, !14349}
!14345 = !DILocalVariable(name: "a", arg: 1, scope: !14341, file: !2190, line: 1155, type: !2114)
!14346 = !DILocalVariable(name: "b", arg: 2, scope: !14341, file: !2190, line: 1155, type: !2114)
!14347 = !DILocalVariable(name: "thread_a", scope: !14341, file: !2190, line: 1157, type: !2085)
!14348 = !DILocalVariable(name: "thread_b", scope: !14341, file: !2190, line: 1157, type: !2085)
!14349 = !DILocalVariable(name: "cmp", scope: !14341, file: !2190, line: 1158, type: !721)
!14350 = !DILocation(line: 0, scope: !14341)
!14351 = !DILocation(line: 1160, column: 13, scope: !14341)
!14352 = !DILocation(line: 1161, column: 13, scope: !14341)
!14353 = !DILocation(line: 1163, column: 8, scope: !14341)
!14354 = !DILocation(line: 1165, column: 10, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14341, file: !2190, line: 1165, column: 6)
!14356 = !DILocation(line: 1165, column: 6, scope: !14341)
!14357 = !DILocation(line: 1167, column: 17, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14355, file: !2190, line: 1167, column: 13)
!14359 = !DILocation(line: 1167, column: 13, scope: !14355)
!14360 = !DILocation(line: 1170, column: 25, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14358, file: !2190, line: 1169, column: 9)
!14362 = !DILocation(line: 1170, column: 52, scope: !14361)
!14363 = !DILocation(line: 1170, column: 35, scope: !14361)
!14364 = !DILocation(line: 1170, column: 3, scope: !14361)
!14365 = !DILocation(line: 0, scope: !14355)
!14366 = !DILocation(line: 1173, column: 1, scope: !14341)
!14367 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2190, file: !2190, line: 1175, type: !14368, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14383)
!14368 = !DISubroutineType(types: !14369)
!14369 = !{null, !14370, !2085}
!14370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14371, size: 32)
!14371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14372, line: 37, size: 128, elements: !14373)
!14372 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14373 = !{!14374, !14382}
!14374 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14371, file: !14372, line: 38, baseType: !14375, size: 96)
!14375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !302, line: 83, size: 96, elements: !14376)
!14376 = !{!14377, !14378, !14381}
!14377 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14375, file: !302, line: 84, baseType: !2114, size: 32)
!14378 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14375, file: !302, line: 85, baseType: !14379, size: 32, offset: 32)
!14379 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !302, line: 81, baseType: !14380)
!14380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14342, size: 32)
!14381 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14375, file: !302, line: 86, baseType: !103, size: 32, offset: 64)
!14382 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14371, file: !14372, line: 39, baseType: !103, size: 32, offset: 96)
!14383 = !{!14384, !14385, !14386, !14387, !14396}
!14384 = !DILocalVariable(name: "pq", arg: 1, scope: !14367, file: !2190, line: 1175, type: !14370)
!14385 = !DILocalVariable(name: "thread", arg: 2, scope: !14367, file: !2190, line: 1175, type: !2085)
!14386 = !DILocalVariable(name: "t", scope: !14367, file: !2190, line: 1177, type: !2085)
!14387 = !DILocalVariable(name: "__f", scope: !14388, file: !2190, line: 1190, type: !14391)
!14388 = distinct !DILexicalBlock(scope: !14389, file: !2190, line: 1190, column: 3)
!14389 = distinct !DILexicalBlock(scope: !14390, file: !2190, line: 1189, column: 27)
!14390 = distinct !DILexicalBlock(scope: !14367, file: !2190, line: 1189, column: 6)
!14391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !302, line: 155, size: 96, elements: !14392)
!14392 = !{!14393, !14394, !14395}
!14393 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14391, file: !302, line: 156, baseType: !2185, size: 32)
!14394 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14391, file: !302, line: 157, baseType: !1737, size: 32, offset: 32)
!14395 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14391, file: !302, line: 158, baseType: !721, size: 32, offset: 64)
!14396 = !DILocalVariable(name: "n", scope: !14397, file: !2190, line: 1190, type: !2114)
!14397 = distinct !DILexicalBlock(scope: !14398, file: !2190, line: 1190, column: 3)
!14398 = distinct !DILexicalBlock(scope: !14388, file: !2190, line: 1190, column: 3)
!14399 = !DILocation(line: 0, scope: !14367)
!14400 = !DILocation(line: 1181, column: 31, scope: !14367)
!14401 = !DILocation(line: 1181, column: 45, scope: !14367)
!14402 = !DILocation(line: 1181, column: 15, scope: !14367)
!14403 = !DILocation(line: 1181, column: 25, scope: !14367)
!14404 = !DILocation(line: 1189, column: 11, scope: !14390)
!14405 = !DILocation(line: 1189, column: 7, scope: !14390)
!14406 = !DILocation(line: 1189, column: 6, scope: !14367)
!14407 = !DILocation(line: 1190, column: 3, scope: !14388)
!14408 = !DILocation(line: 1190, column: 3, scope: !14397)
!14409 = !DILocation(line: 0, scope: !14397)
!14410 = !DILocation(line: 1190, column: 3, scope: !14398)
!14411 = !DILocation(line: 1193, column: 2, scope: !14389)
!14412 = !DILocation(line: 1191, column: 42, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14398, file: !2190, line: 1190, column: 54)
!14414 = !DILocation(line: 1191, column: 12, scope: !14413)
!14415 = !DILocation(line: 1191, column: 22, scope: !14413)
!14416 = distinct !{!14416, !14407, !14417}
!14417 = !DILocation(line: 1192, column: 3, scope: !14388)
!14418 = !DILocation(line: 1195, column: 17, scope: !14367)
!14419 = !DILocation(line: 1195, column: 37, scope: !14367)
!14420 = !DILocation(line: 1195, column: 2, scope: !14367)
!14421 = !DILocation(line: 1196, column: 1, scope: !14367)
!14422 = !DISubprogram(name: "z_rb_foreach_next", scope: !302, file: !302, line: 176, type: !14423, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14423 = !DISubroutineType(types: !14424)
!14424 = !{!2114, !14425, !14426}
!14425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14375, size: 32)
!14426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14391, size: 32)
!14427 = !DISubprogram(name: "rb_insert", scope: !302, file: !302, line: 105, type: !14428, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14428 = !DISubroutineType(types: !14429)
!14429 = !{null, !14425, !2114}
!14430 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2190, file: !2190, line: 1198, type: !14368, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14431)
!14431 = !{!14432, !14433}
!14432 = !DILocalVariable(name: "pq", arg: 1, scope: !14430, file: !2190, line: 1198, type: !14370)
!14433 = !DILocalVariable(name: "thread", arg: 2, scope: !14430, file: !2190, line: 1198, type: !2085)
!14434 = !DILocation(line: 0, scope: !14430)
!14435 = !DILocation(line: 1202, column: 17, scope: !14430)
!14436 = !DILocation(line: 1202, column: 37, scope: !14430)
!14437 = !DILocation(line: 1202, column: 2, scope: !14430)
!14438 = !DILocation(line: 1204, column: 16, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14430, file: !2190, line: 1204, column: 6)
!14440 = !DILocation(line: 1204, column: 7, scope: !14439)
!14441 = !DILocation(line: 1204, column: 6, scope: !14430)
!14442 = !DILocation(line: 1205, column: 7, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14439, file: !2190, line: 1204, column: 22)
!14444 = !DILocation(line: 1205, column: 22, scope: !14443)
!14445 = !DILocation(line: 1206, column: 2, scope: !14443)
!14446 = !DILocation(line: 1207, column: 1, scope: !14430)
!14447 = !DISubprogram(name: "rb_remove", scope: !302, file: !302, line: 110, type: !14428, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14448 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2190, file: !2190, line: 1209, type: !14449, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14451)
!14449 = !DISubroutineType(types: !14450)
!14450 = !{!2085, !14370}
!14451 = !{!14452, !14453, !14454}
!14452 = !DILocalVariable(name: "pq", arg: 1, scope: !14448, file: !2190, line: 1209, type: !14370)
!14453 = !DILocalVariable(name: "thread", scope: !14448, file: !2190, line: 1211, type: !2085)
!14454 = !DILocalVariable(name: "n", scope: !14448, file: !2190, line: 1212, type: !2114)
!14455 = !DILocation(line: 0, scope: !14448)
!14456 = !DILocation(line: 1212, column: 37, scope: !14448)
!14457 = !DILocation(line: 1212, column: 21, scope: !14448)
!14458 = !DILocation(line: 1217, column: 2, scope: !14448)
!14459 = distinct !DISubprogram(name: "rb_get_min", scope: !302, file: !302, line: 115, type: !14460, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14462)
!14460 = !DISubroutineType(types: !14461)
!14461 = !{!2114, !14425}
!14462 = !{!14463}
!14463 = !DILocalVariable(name: "tree", arg: 1, scope: !14459, file: !302, line: 115, type: !14425)
!14464 = !DILocation(line: 0, scope: !14459)
!14465 = !DILocation(line: 117, column: 9, scope: !14459)
!14466 = !DILocation(line: 117, column: 2, scope: !14459)
!14467 = !DISubprogram(name: "z_rb_get_minmax", scope: !302, file: !302, line: 100, type: !14468, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14468 = !DISubroutineType(types: !14469)
!14469 = !{!2114, !14425, !221}
!14470 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2190, file: !2190, line: 1246, type: !14471, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14479)
!14471 = !DISubroutineType(types: !14472)
!14472 = !{!2085, !14473}
!14473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14474, size: 32)
!14474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14372, line: 53, size: 2080, elements: !14475)
!14475 = !{!14476, !14478}
!14476 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14474, file: !14372, line: 54, baseType: !14477, size: 2048)
!14477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2121, size: 2048, elements: !817)
!14478 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14474, file: !14372, line: 55, baseType: !32, size: 32, offset: 2048)
!14479 = !{!14480, !14481, !14482, !14483}
!14480 = !DILocalVariable(name: "pq", arg: 1, scope: !14470, file: !2190, line: 1246, type: !14473)
!14481 = !DILocalVariable(name: "thread", scope: !14470, file: !2190, line: 1252, type: !2085)
!14482 = !DILocalVariable(name: "l", scope: !14470, file: !2190, line: 1253, type: !13280)
!14483 = !DILocalVariable(name: "n", scope: !14470, file: !2190, line: 1254, type: !2186)
!14484 = !DILocation(line: 0, scope: !14470)
!14485 = !DILocation(line: 1248, column: 11, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14470, file: !2190, line: 1248, column: 6)
!14487 = !DILocation(line: 1248, column: 7, scope: !14486)
!14488 = !DILocation(line: 1248, column: 6, scope: !14470)
!14489 = !DILocation(line: 1253, column: 31, scope: !14470)
!14490 = !DILocation(line: 1253, column: 20, scope: !14470)
!14491 = !DILocation(line: 1254, column: 19, scope: !14470)
!14492 = !DILocation(line: 1260, column: 1, scope: !14470)
!14493 = distinct !DISubprogram(name: "z_unpend_all", scope: !2190, file: !2190, line: 1262, type: !14494, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14496)
!14494 = !DISubroutineType(types: !14495)
!14495 = !{!103, !2116}
!14496 = !{!14497, !14498, !14499}
!14497 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14493, file: !2190, line: 1262, type: !2116)
!14498 = !DILocalVariable(name: "need_sched", scope: !14493, file: !2190, line: 1264, type: !103)
!14499 = !DILocalVariable(name: "thread", scope: !14493, file: !2190, line: 1265, type: !2085)
!14500 = !DILocation(line: 0, scope: !14493)
!14501 = !DILocation(line: 1267, column: 19, scope: !14493)
!14502 = !DILocation(line: 1267, column: 41, scope: !14493)
!14503 = !DILocation(line: 1267, column: 2, scope: !14493)
!14504 = !DILocation(line: 1268, column: 3, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14493, file: !2190, line: 1267, column: 50)
!14506 = !DILocation(line: 1269, column: 3, scope: !14505)
!14507 = distinct !{!14507, !14503, !14508}
!14508 = !DILocation(line: 1271, column: 2, scope: !14493)
!14509 = !DILocation(line: 1273, column: 2, scope: !14493)
!14510 = distinct !DISubprogram(name: "z_waitq_head", scope: !12675, file: !12675, line: 52, type: !14128, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14511)
!14511 = !{!14512}
!14512 = !DILocalVariable(name: "w", arg: 1, scope: !14510, file: !12675, line: 52, type: !2116)
!14513 = !DILocation(line: 0, scope: !14510)
!14514 = !DILocation(line: 54, column: 52, scope: !14510)
!14515 = !DILocation(line: 54, column: 28, scope: !14510)
!14516 = !DILocation(line: 54, column: 9, scope: !14510)
!14517 = !DILocation(line: 54, column: 2, scope: !14510)
!14518 = distinct !DISubprogram(name: "init_ready_q", scope: !2190, file: !2190, line: 1276, type: !14519, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14526)
!14519 = !DISubroutineType(types: !14520)
!14520 = !{null, !14521}
!14521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14522, size: 32)
!14522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !312, line: 83, size: 96, elements: !14523)
!14523 = !{!14524, !14525}
!14524 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14522, file: !312, line: 86, baseType: !2085, size: 32)
!14525 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14522, file: !312, line: 90, baseType: !2121, size: 64, offset: 32)
!14526 = !{!14527}
!14527 = !DILocalVariable(name: "rq", arg: 1, scope: !14518, file: !2190, line: 1276, type: !14521)
!14528 = !DILocation(line: 0, scope: !14518)
!14529 = !DILocation(line: 1289, column: 22, scope: !14518)
!14530 = !DILocation(line: 1289, column: 2, scope: !14518)
!14531 = !DILocation(line: 1291, column: 1, scope: !14518)
!14532 = distinct !DISubprogram(name: "sys_dlist_init", scope: !286, file: !286, line: 197, type: !14533, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14535)
!14533 = !DISubroutineType(types: !14534)
!14534 = !{null, !13280}
!14535 = !{!14536}
!14536 = !DILocalVariable(name: "list", arg: 1, scope: !14532, file: !286, line: 197, type: !13280)
!14537 = !DILocation(line: 0, scope: !14532)
!14538 = !DILocation(line: 199, column: 8, scope: !14532)
!14539 = !DILocation(line: 199, column: 13, scope: !14532)
!14540 = !DILocation(line: 200, column: 8, scope: !14532)
!14541 = !DILocation(line: 200, column: 13, scope: !14532)
!14542 = !DILocation(line: 201, column: 1, scope: !14532)
!14543 = distinct !DISubprogram(name: "z_sched_init", scope: !2190, file: !2190, line: 1293, type: !2794, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !162)
!14544 = !DILocation(line: 1302, column: 2, scope: !14543)
!14545 = !DILocation(line: 1306, column: 2, scope: !14543)
!14546 = !DILocation(line: 1309, column: 1, scope: !14543)
!14547 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2190, file: !2190, line: 1311, type: !14548, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14551)
!14548 = !DISubroutineType(types: !14549)
!14549 = !{!103, !14550}
!14550 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !276, line: 347, baseType: !2085)
!14551 = !{!14552}
!14552 = !DILocalVariable(name: "thread", arg: 1, scope: !14547, file: !2190, line: 1311, type: !14550)
!14553 = !DILocation(line: 0, scope: !14547)
!14554 = !DILocation(line: 1313, column: 22, scope: !14547)
!14555 = !DILocation(line: 1313, column: 9, scope: !14547)
!14556 = !DILocation(line: 1313, column: 2, scope: !14547)
!14557 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2190, file: !2190, line: 1325, type: !14558, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14560)
!14558 = !DISubroutineType(types: !14559)
!14559 = !{null, !14550, !103}
!14560 = !{!14561, !14562, !14563}
!14561 = !DILocalVariable(name: "thread", arg: 1, scope: !14557, file: !2190, line: 1325, type: !14550)
!14562 = !DILocalVariable(name: "prio", arg: 2, scope: !14557, file: !2190, line: 1325, type: !103)
!14563 = !DILocalVariable(name: "th", scope: !14557, file: !2190, line: 1334, type: !2085)
!14564 = !DILocation(line: 0, scope: !14557)
!14565 = !DILocation(line: 1336, column: 2, scope: !14557)
!14566 = !DILocation(line: 1337, column: 1, scope: !14557)
!14567 = distinct !DISubprogram(name: "k_can_yield", scope: !2190, file: !2190, line: 1384, type: !7026, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !162)
!14568 = !DILocation(line: 1386, column: 11, scope: !14567)
!14569 = !DILocation(line: 1386, column: 29, scope: !14567)
!14570 = !DILocation(line: 1386, column: 32, scope: !14567)
!14571 = !DILocation(line: 1386, column: 46, scope: !14567)
!14572 = !DILocation(line: 1387, column: 28, scope: !14567)
!14573 = !DILocation(line: 1387, column: 4, scope: !14567)
!14574 = !DILocation(line: 1386, column: 2, scope: !14567)
!14575 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !370, file: !370, line: 989, type: !7026, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !162)
!14576 = !DILocation(line: 993, column: 10, scope: !14575)
!14577 = !DILocation(line: 993, column: 2, scope: !14575)
!14578 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2190, file: !2190, line: 1390, type: !2794, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14579)
!14579 = !{!14580}
!14580 = !DILocalVariable(name: "key", scope: !14578, file: !2190, line: 1396, type: !13069)
!14581 = !DILocation(line: 0, scope: !13077, inlinedAt: !14582)
!14582 = distinct !DILocation(line: 1396, column: 25, scope: !14578)
!14583 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14584)
!14584 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14582)
!14585 = !DILocation(line: 0, scope: !13086, inlinedAt: !14584)
!14586 = !DILocation(line: 0, scope: !14578)
!14587 = !DILocation(line: 1400, column: 18, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14589, file: !2190, line: 1399, column: 36)
!14589 = distinct !DILexicalBlock(scope: !14578, file: !2190, line: 1398, column: 6)
!14590 = !DILocation(line: 0, scope: !13246, inlinedAt: !14591)
!14591 = distinct !DILocation(line: 1400, column: 3, scope: !14588)
!14592 = !DILocation(line: 266, column: 15, scope: !13246, inlinedAt: !14591)
!14593 = !DILocation(line: 266, column: 28, scope: !13246, inlinedAt: !14591)
!14594 = !DILocation(line: 0, scope: !13254, inlinedAt: !14595)
!14595 = distinct !DILocation(line: 268, column: 3, scope: !13258, inlinedAt: !14591)
!14596 = !DILocation(line: 234, column: 2, scope: !13254, inlinedAt: !14595)
!14597 = !DILocation(line: 1402, column: 15, scope: !14578)
!14598 = !DILocation(line: 0, scope: !13263, inlinedAt: !14599)
!14599 = distinct !DILocation(line: 1402, column: 2, scope: !14578)
!14600 = !DILocation(line: 252, column: 15, scope: !13263, inlinedAt: !14599)
!14601 = !DILocation(line: 252, column: 28, scope: !13263, inlinedAt: !14599)
!14602 = !DILocation(line: 0, scope: !13270, inlinedAt: !14603)
!14603 = distinct !DILocation(line: 254, column: 3, scope: !13274, inlinedAt: !14599)
!14604 = !DILocation(line: 0, scope: !13277, inlinedAt: !14605)
!14605 = distinct !DILocation(line: 229, column: 2, scope: !13270, inlinedAt: !14603)
!14606 = !DILocation(line: 188, column: 2, scope: !13287, inlinedAt: !14605)
!14607 = !DILocation(line: 188, column: 2, scope: !13289, inlinedAt: !14605)
!14608 = !DILocation(line: 0, scope: !13287, inlinedAt: !14605)
!14609 = !DILocation(line: 189, column: 7, scope: !13292, inlinedAt: !14605)
!14610 = !DILocation(line: 189, column: 35, scope: !13292, inlinedAt: !14605)
!14611 = !DILocation(line: 189, column: 7, scope: !13293, inlinedAt: !14605)
!14612 = !DILocation(line: 191, column: 21, scope: !13297, inlinedAt: !14605)
!14613 = !DILocation(line: 190, column: 4, scope: !13297, inlinedAt: !14605)
!14614 = !DILocation(line: 192, column: 4, scope: !13297, inlinedAt: !14605)
!14615 = distinct !{!14615, !14606, !14616}
!14616 = !DILocation(line: 194, column: 2, scope: !13287, inlinedAt: !14605)
!14617 = !DILocation(line: 196, column: 37, scope: !13277, inlinedAt: !14605)
!14618 = !DILocation(line: 196, column: 2, scope: !13277, inlinedAt: !14605)
!14619 = !DILocation(line: 197, column: 1, scope: !13277, inlinedAt: !14605)
!14620 = !DILocation(line: 1403, column: 2, scope: !14578)
!14621 = !DILocation(line: 0, scope: !13688, inlinedAt: !14622)
!14622 = distinct !DILocation(line: 1404, column: 2, scope: !14578)
!14623 = !DILocation(line: 196, column: 9, scope: !13688, inlinedAt: !14622)
!14624 = !DILocation(line: 1405, column: 1, scope: !14578)
!14625 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2190, file: !2190, line: 1459, type: !14626, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14628)
!14626 = !DISubroutineType(types: !14627)
!14627 = !{!721, !13868}
!14628 = !{!14629, !14630, !14631}
!14629 = !DILocalVariable(name: "timeout", arg: 1, scope: !14625, file: !2190, line: 1459, type: !13868)
!14630 = !DILocalVariable(name: "ticks", scope: !14625, file: !2190, line: 1461, type: !1460)
!14631 = !DILocalVariable(name: "ret", scope: !14625, file: !2190, line: 1480, type: !721)
!14632 = !DILocation(line: 0, scope: !14625)
!14633 = !DILocation(line: 1468, column: 6, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14625, file: !2190, line: 1468, column: 6)
!14635 = !DILocation(line: 1468, column: 6, scope: !14625)
!14636 = !DILocation(line: 1469, column: 20, scope: !14637)
!14637 = distinct !DILexicalBlock(scope: !14634, file: !2190, line: 1468, column: 40)
!14638 = !DILocation(line: 1469, column: 3, scope: !14637)
!14639 = !DILocation(line: 1473, column: 3, scope: !14637)
!14640 = !DILocation(line: 1478, column: 10, scope: !14625)
!14641 = !DILocation(line: 1480, column: 16, scope: !14625)
!14642 = !DILocation(line: 1485, column: 1, scope: !14625)
!14643 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3244, file: !3244, line: 310, type: !14644, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14646)
!14644 = !DISubroutineType(types: !14645)
!14645 = !{null, !14550}
!14646 = !{!14647}
!14647 = !DILocalVariable(name: "thread", arg: 1, scope: !14643, file: !3244, line: 310, type: !14550)
!14648 = !DILocation(line: 0, scope: !14643)
!14649 = !DILocation(line: 319, column: 2, scope: !14650)
!14650 = distinct !DILexicalBlock(scope: !14643, file: !3244, line: 319, column: 2)
!14651 = !{i64 2152258848}
!14652 = !DILocation(line: 320, column: 2, scope: !14643)
!14653 = !DILocation(line: 321, column: 1, scope: !14643)
!14654 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2190, file: !2190, line: 1415, type: !14655, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14657)
!14655 = !DISubroutineType(types: !14656)
!14656 = !{!721, !1460}
!14657 = !{!14658, !14659, !14660, !14661}
!14658 = !DILocalVariable(name: "ticks", arg: 1, scope: !14654, file: !2190, line: 1415, type: !1460)
!14659 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14654, file: !2190, line: 1418, type: !137)
!14660 = !DILocalVariable(name: "timeout", scope: !14654, file: !2190, line: 1430, type: !13868)
!14661 = !DILocalVariable(name: "key", scope: !14654, file: !2190, line: 1437, type: !13069)
!14662 = !DILocation(line: 0, scope: !14654)
!14663 = !DILocation(line: 1425, column: 12, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14654, file: !2190, line: 1425, column: 6)
!14665 = !DILocation(line: 1425, column: 6, scope: !14654)
!14666 = !DILocation(line: 1426, column: 3, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14664, file: !2190, line: 1425, column: 18)
!14668 = !DILocation(line: 1427, column: 3, scope: !14667)
!14669 = !DILocation(line: 1431, column: 24, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14654, file: !2190, line: 1431, column: 6)
!14671 = !DILocation(line: 1431, column: 6, scope: !14654)
!14672 = !DILocation(line: 1432, column: 35, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !14670, file: !2190, line: 1431, column: 30)
!14674 = !DILocation(line: 1432, column: 27, scope: !14673)
!14675 = !DILocation(line: 1433, column: 2, scope: !14673)
!14676 = !DILocation(line: 1434, column: 27, scope: !14677)
!14677 = distinct !DILexicalBlock(scope: !14670, file: !2190, line: 1433, column: 9)
!14678 = !DILocation(line: 0, scope: !14670)
!14679 = !DILocation(line: 0, scope: !13077, inlinedAt: !14680)
!14680 = distinct !DILocation(line: 1437, column: 25, scope: !14654)
!14681 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14682)
!14682 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14680)
!14683 = !DILocation(line: 0, scope: !13086, inlinedAt: !14682)
!14684 = !DILocation(line: 1440, column: 20, scope: !14654)
!14685 = !DILocation(line: 1440, column: 18, scope: !14654)
!14686 = !DILocation(line: 1442, column: 2, scope: !14654)
!14687 = !DILocation(line: 1443, column: 23, scope: !14654)
!14688 = !DILocation(line: 1443, column: 2, scope: !14654)
!14689 = !DILocation(line: 1444, column: 29, scope: !14654)
!14690 = !DILocation(line: 1444, column: 2, scope: !14654)
!14691 = !DILocation(line: 0, scope: !13688, inlinedAt: !14692)
!14692 = distinct !DILocation(line: 1446, column: 8, scope: !14654)
!14693 = !DILocation(line: 196, column: 9, scope: !13688, inlinedAt: !14692)
!14694 = !DILocation(line: 1450, column: 10, scope: !14654)
!14695 = !DILocation(line: 1450, column: 45, scope: !14654)
!14696 = !DILocation(line: 1450, column: 43, scope: !14654)
!14697 = !DILocation(line: 1451, column: 6, scope: !14654)
!14698 = !DILocation(line: 1457, column: 1, scope: !14654)
!14699 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12910, file: !12910, line: 1103, type: !12911, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14700)
!14700 = !{!14701}
!14701 = !DILocalVariable(name: "t", arg: 1, scope: !14699, file: !12910, line: 1103, type: !163)
!14702 = !DILocation(line: 0, scope: !14699)
!14703 = !DILocation(line: 0, scope: !13124, inlinedAt: !14704)
!14704 = distinct !DILocation(line: 1106, column: 9, scope: !14699)
!14705 = !DILocation(line: 139, column: 13, scope: !14706, inlinedAt: !14704)
!14706 = distinct !DILexicalBlock(scope: !14707, file: !12910, line: 138, column: 10)
!14707 = distinct !DILexicalBlock(scope: !14708, file: !12910, line: 136, column: 7)
!14708 = distinct !DILexicalBlock(scope: !13145, file: !12910, line: 134, column: 17)
!14709 = !DILocation(line: 1106, column: 2, scope: !14699)
!14710 = distinct !DISubprogram(name: "k_yield", scope: !3244, file: !3244, line: 140, type: !2794, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !162)
!14711 = !DILocation(line: 148, column: 2, scope: !14712)
!14712 = distinct !DILexicalBlock(scope: !14710, file: !3244, line: 148, column: 2)
!14713 = !{i64 2152258168}
!14714 = !DILocation(line: 149, column: 2, scope: !14710)
!14715 = !DILocation(line: 150, column: 1, scope: !14710)
!14716 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2190, file: !2190, line: 1495, type: !14717, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14719)
!14717 = !DISubroutineType(types: !14718)
!14718 = !{!721, !103}
!14719 = !{!14720, !14721}
!14720 = !DILocalVariable(name: "us", arg: 1, scope: !14716, file: !2190, line: 1495, type: !103)
!14721 = !DILocalVariable(name: "ticks", scope: !14716, file: !2190, line: 1497, type: !721)
!14722 = !DILocation(line: 0, scope: !14716)
!14723 = !DILocation(line: 1501, column: 31, scope: !14716)
!14724 = !DILocation(line: 1501, column: 10, scope: !14716)
!14725 = !DILocation(line: 1502, column: 23, scope: !14716)
!14726 = !DILocation(line: 1502, column: 10, scope: !14716)
!14727 = !DILocation(line: 1506, column: 31, scope: !14716)
!14728 = !DILocation(line: 1506, column: 9, scope: !14716)
!14729 = !DILocation(line: 1506, column: 2, scope: !14716)
!14730 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12910, file: !12910, line: 571, type: !12911, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14731)
!14731 = !{!14732}
!14732 = !DILocalVariable(name: "t", arg: 1, scope: !14730, file: !12910, line: 571, type: !163)
!14733 = !DILocation(line: 0, scope: !14730)
!14734 = !DILocation(line: 0, scope: !13124, inlinedAt: !14735)
!14735 = distinct !DILocation(line: 574, column: 9, scope: !14730)
!14736 = !DILocation(line: 135, column: 5, scope: !14708, inlinedAt: !14735)
!14737 = !DILocation(line: 139, column: 13, scope: !14706, inlinedAt: !14735)
!14738 = !DILocation(line: 574, column: 2, scope: !14730)
!14739 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12910, file: !12910, line: 1187, type: !12911, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14740)
!14740 = !{!14741}
!14741 = !DILocalVariable(name: "t", arg: 1, scope: !14739, file: !12910, line: 1187, type: !163)
!14742 = !DILocation(line: 0, scope: !14739)
!14743 = !DILocation(line: 0, scope: !13124, inlinedAt: !14744)
!14744 = distinct !DILocation(line: 1190, column: 9, scope: !14739)
!14745 = !DILocation(line: 145, column: 13, scope: !14746, inlinedAt: !14744)
!14746 = distinct !DILexicalBlock(scope: !13142, file: !12910, line: 144, column: 10)
!14747 = !DILocation(line: 1190, column: 2, scope: !14739)
!14748 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2190, file: !2190, line: 1517, type: !14644, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14749)
!14749 = !{!14750}
!14750 = !DILocalVariable(name: "thread", arg: 1, scope: !14748, file: !2190, line: 1517, type: !14550)
!14751 = !DILocation(line: 0, scope: !14748)
!14752 = !DILocation(line: 1521, column: 6, scope: !14753)
!14753 = distinct !DILexicalBlock(scope: !14748, file: !2190, line: 1521, column: 6)
!14754 = !DILocation(line: 1521, column: 6, scope: !14748)
!14755 = !DILocation(line: 1525, column: 6, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14748, file: !2190, line: 1525, column: 6)
!14757 = !DILocation(line: 1525, column: 37, scope: !14756)
!14758 = !DILocation(line: 1525, column: 6, scope: !14748)
!14759 = !DILocation(line: 1527, column: 20, scope: !14760)
!14760 = distinct !DILexicalBlock(scope: !14761, file: !2190, line: 1527, column: 7)
!14761 = distinct !DILexicalBlock(scope: !14756, file: !2190, line: 1525, column: 42)
!14762 = !DILocation(line: 1527, column: 33, scope: !14760)
!14763 = !DILocation(line: 1527, column: 7, scope: !14761)
!14764 = !DILocation(line: 1532, column: 2, scope: !14748)
!14765 = !DILocation(line: 1533, column: 2, scope: !14748)
!14766 = !DILocation(line: 1031, column: 3, scope: !13721, inlinedAt: !14767)
!14767 = distinct !DILocation(line: 48, column: 10, scope: !13725, inlinedAt: !14768)
!14768 = distinct !DILocation(line: 1537, column: 7, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14748, file: !2190, line: 1537, column: 6)
!14770 = !DILocation(line: 0, scope: !13721, inlinedAt: !14767)
!14771 = !DILocation(line: 48, column: 9, scope: !13725, inlinedAt: !14768)
!14772 = !DILocation(line: 1537, column: 6, scope: !14748)
!14773 = !DILocation(line: 1538, column: 3, scope: !14774)
!14774 = distinct !DILexicalBlock(scope: !14769, file: !2190, line: 1537, column: 25)
!14775 = !DILocation(line: 1539, column: 2, scope: !14774)
!14776 = !DILocation(line: 1540, column: 1, scope: !14748)
!14777 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12349, file: !12349, line: 101, type: !13195, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14778)
!14778 = !{!14779}
!14779 = !DILocalVariable(name: "thread", arg: 1, scope: !14777, file: !12349, line: 101, type: !2085)
!14780 = !DILocation(line: 0, scope: !14777)
!14781 = !DILocation(line: 103, column: 23, scope: !14777)
!14782 = !DILocation(line: 103, column: 36, scope: !14777)
!14783 = !DILocation(line: 103, column: 55, scope: !14777)
!14784 = !DILocation(line: 103, column: 2, scope: !14777)
!14785 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2190, file: !2190, line: 1567, type: !14786, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14788)
!14786 = !DISubroutineType(types: !14787)
!14787 = !{!14550}
!14788 = !{!14789}
!14789 = !DILocalVariable(name: "ret", scope: !14785, file: !2190, line: 1577, type: !14550)
!14790 = !DILocation(line: 1577, column: 30, scope: !14785)
!14791 = !DILocation(line: 0, scope: !14785)
!14792 = !DILocation(line: 1582, column: 2, scope: !14785)
!14793 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2190, file: !2190, line: 1593, type: !7300, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !162)
!14794 = !DILocation(line: 1031, column: 3, scope: !13721, inlinedAt: !14795)
!14795 = distinct !DILocation(line: 48, column: 10, scope: !13725, inlinedAt: !14796)
!14796 = distinct !DILocation(line: 1595, column: 10, scope: !14793)
!14797 = !DILocation(line: 0, scope: !13721, inlinedAt: !14795)
!14798 = !DILocation(line: 48, column: 9, scope: !13725, inlinedAt: !14796)
!14799 = !DILocation(line: 1595, column: 27, scope: !14793)
!14800 = !DILocation(line: 1595, column: 41, scope: !14793)
!14801 = !DILocation(line: 1595, column: 30, scope: !14793)
!14802 = !DILocation(line: 1595, column: 2, scope: !14793)
!14803 = distinct !DISubprogram(name: "z_thread_abort", scope: !2190, file: !2190, line: 1725, type: !13035, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14804)
!14804 = !{!14805, !14806}
!14805 = !DILocalVariable(name: "thread", arg: 1, scope: !14803, file: !2190, line: 1725, type: !2085)
!14806 = !DILocalVariable(name: "key", scope: !14803, file: !2190, line: 1727, type: !13069)
!14807 = !DILocation(line: 0, scope: !14803)
!14808 = !DILocation(line: 0, scope: !13077, inlinedAt: !14809)
!14809 = distinct !DILocation(line: 1727, column: 25, scope: !14803)
!14810 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14811)
!14811 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14809)
!14812 = !DILocation(line: 0, scope: !13086, inlinedAt: !14811)
!14813 = !DILocation(line: 1729, column: 20, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14803, file: !2190, line: 1729, column: 6)
!14815 = !DILocation(line: 1729, column: 33, scope: !14814)
!14816 = !DILocation(line: 1729, column: 48, scope: !14814)
!14817 = !DILocation(line: 1729, column: 6, scope: !14803)
!14818 = !DILocation(line: 0, scope: !13104, inlinedAt: !14819)
!14819 = distinct !DILocation(line: 1730, column: 3, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14814, file: !2190, line: 1729, column: 54)
!14821 = !DILocation(line: 0, scope: !13112, inlinedAt: !14822)
!14822 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !14819)
!14823 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !14822)
!14824 = !DILocation(line: 1732, column: 3, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14820, file: !2190, line: 1732, column: 3)
!14826 = !{i64 2152995578, i64 2152995594, i64 2152995620, i64 2152995648, i64 2152995668}
!14827 = !DILocation(line: 1733, column: 3, scope: !14820)
!14828 = !DILocation(line: 1736, column: 20, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14803, file: !2190, line: 1736, column: 6)
!14830 = !DILocation(line: 1736, column: 33, scope: !14829)
!14831 = !DILocation(line: 1736, column: 49, scope: !14829)
!14832 = !DILocation(line: 1736, column: 6, scope: !14803)
!14833 = !DILocation(line: 0, scope: !13104, inlinedAt: !14834)
!14834 = distinct !DILocation(line: 1737, column: 3, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14829, file: !2190, line: 1736, column: 56)
!14836 = !DILocation(line: 0, scope: !13112, inlinedAt: !14837)
!14837 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !14834)
!14838 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !14837)
!14839 = !DILocation(line: 1738, column: 3, scope: !14835)
!14840 = !DILocation(line: 1775, column: 2, scope: !14803)
!14841 = !DILocation(line: 1776, column: 16, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14803, file: !2190, line: 1776, column: 6)
!14843 = !DILocation(line: 1776, column: 13, scope: !14842)
!14844 = !DILocation(line: 1776, column: 25, scope: !14842)
!14845 = !DILocation(line: 1031, column: 3, scope: !13721, inlinedAt: !14846)
!14846 = distinct !DILocation(line: 48, column: 10, scope: !13725, inlinedAt: !14847)
!14847 = distinct !DILocation(line: 1776, column: 29, scope: !14842)
!14848 = !DILocation(line: 0, scope: !13721, inlinedAt: !14846)
!14849 = !DILocation(line: 48, column: 9, scope: !13725, inlinedAt: !14847)
!14850 = !DILocation(line: 1776, column: 6, scope: !14803)
!14851 = !DILocation(line: 0, scope: !13688, inlinedAt: !14852)
!14852 = distinct !DILocation(line: 1777, column: 3, scope: !14853)
!14853 = distinct !DILexicalBlock(scope: !14842, file: !2190, line: 1776, column: 47)
!14854 = !DILocation(line: 196, column: 9, scope: !13688, inlinedAt: !14852)
!14855 = !DILocation(line: 1779, column: 2, scope: !14853)
!14856 = !DILocation(line: 0, scope: !13104, inlinedAt: !14857)
!14857 = distinct !DILocation(line: 1780, column: 2, scope: !14803)
!14858 = !DILocation(line: 0, scope: !13112, inlinedAt: !14859)
!14859 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !14857)
!14860 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !14859)
!14861 = !DILocation(line: 1781, column: 1, scope: !14803)
!14862 = distinct !DISubprogram(name: "end_thread", scope: !2190, file: !2190, line: 1690, type: !13035, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14863)
!14863 = !{!14864}
!14864 = !DILocalVariable(name: "thread", arg: 1, scope: !14862, file: !2190, line: 1690, type: !2085)
!14865 = !DILocation(line: 0, scope: !14862)
!14866 = !DILocation(line: 1695, column: 20, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14862, file: !2190, line: 1695, column: 6)
!14868 = !DILocation(line: 1695, column: 33, scope: !14867)
!14869 = !DILocation(line: 1695, column: 49, scope: !14867)
!14870 = !DILocation(line: 1695, column: 6, scope: !14862)
!14871 = !DILocation(line: 1697, column: 29, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14867, file: !2190, line: 1695, column: 56)
!14873 = !DILocation(line: 1698, column: 7, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14872, file: !2190, line: 1698, column: 7)
!14875 = !DILocation(line: 1698, column: 7, scope: !14872)
!14876 = !DILocation(line: 0, scope: !13246, inlinedAt: !14877)
!14877 = distinct !DILocation(line: 1699, column: 4, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14874, file: !2190, line: 1698, column: 35)
!14879 = !DILocation(line: 266, column: 28, scope: !13246, inlinedAt: !14877)
!14880 = !DILocation(line: 0, scope: !13254, inlinedAt: !14881)
!14881 = distinct !DILocation(line: 268, column: 3, scope: !13258, inlinedAt: !14877)
!14882 = !DILocation(line: 234, column: 2, scope: !13254, inlinedAt: !14881)
!14883 = !DILocation(line: 1700, column: 3, scope: !14878)
!14884 = !DILocation(line: 1701, column: 20, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14872, file: !2190, line: 1701, column: 7)
!14886 = !DILocation(line: 1701, column: 30, scope: !14885)
!14887 = !DILocation(line: 1701, column: 7, scope: !14872)
!14888 = !DILocation(line: 1702, column: 4, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14885, file: !2190, line: 1701, column: 39)
!14890 = !DILocation(line: 1703, column: 3, scope: !14889)
!14891 = !DILocation(line: 1704, column: 9, scope: !14872)
!14892 = !DILocation(line: 1705, column: 23, scope: !14872)
!14893 = !DILocation(line: 1705, column: 3, scope: !14872)
!14894 = !DILocation(line: 1706, column: 3, scope: !14872)
!14895 = !DILocation(line: 1722, column: 2, scope: !14872)
!14896 = !DILocation(line: 1723, column: 1, scope: !14862)
!14897 = distinct !DISubprogram(name: "unpend_all", scope: !2190, file: !2190, line: 1674, type: !14898, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14900)
!14898 = !DISubroutineType(types: !14899)
!14899 = !{null, !2116}
!14900 = !{!14901, !14902}
!14901 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14897, file: !2190, line: 1674, type: !2116)
!14902 = !DILocalVariable(name: "thread", scope: !14897, file: !2190, line: 1676, type: !2085)
!14903 = !DILocation(line: 0, scope: !14897)
!14904 = !DILocation(line: 1678, column: 19, scope: !14897)
!14905 = !DILocation(line: 1678, column: 41, scope: !14897)
!14906 = !DILocation(line: 1678, column: 2, scope: !14897)
!14907 = !DILocation(line: 1679, column: 3, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14897, file: !2190, line: 1678, column: 50)
!14909 = !DILocation(line: 1680, column: 9, scope: !14908)
!14910 = !DILocalVariable(name: "thread", arg: 1, scope: !14911, file: !12369, line: 65, type: !2085)
!14911 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12369, file: !12369, line: 65, type: !14912, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14914)
!14912 = !DISubroutineType(types: !14913)
!14913 = !{null, !2085, !32}
!14914 = !{!14910, !14915}
!14915 = !DILocalVariable(name: "value", arg: 2, scope: !14911, file: !12369, line: 65, type: !32)
!14916 = !DILocation(line: 0, scope: !14911, inlinedAt: !14917)
!14917 = distinct !DILocation(line: 1681, column: 3, scope: !14908)
!14918 = !DILocation(line: 67, column: 15, scope: !14911, inlinedAt: !14917)
!14919 = !DILocation(line: 67, column: 33, scope: !14911, inlinedAt: !14917)
!14920 = !DILocation(line: 1682, column: 3, scope: !14908)
!14921 = distinct !{!14921, !14906, !14922}
!14922 = !DILocation(line: 1683, column: 2, scope: !14897)
!14923 = !DILocation(line: 1684, column: 1, scope: !14897)
!14924 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2190, file: !2190, line: 1794, type: !14925, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14927)
!14925 = !DISubroutineType(types: !14926)
!14926 = !{!103, !2085, !13868}
!14927 = !{!14928, !14929, !14930, !14931}
!14928 = !DILocalVariable(name: "thread", arg: 1, scope: !14924, file: !2190, line: 1794, type: !2085)
!14929 = !DILocalVariable(name: "timeout", arg: 2, scope: !14924, file: !2190, line: 1794, type: !13868)
!14930 = !DILocalVariable(name: "key", scope: !14924, file: !2190, line: 1796, type: !13069)
!14931 = !DILocalVariable(name: "ret", scope: !14924, file: !2190, line: 1797, type: !103)
!14932 = !DILocation(line: 0, scope: !14924)
!14933 = !DILocation(line: 0, scope: !13077, inlinedAt: !14934)
!14934 = distinct !DILocation(line: 1796, column: 25, scope: !14924)
!14935 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14936)
!14936 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14934)
!14937 = !DILocation(line: 0, scope: !13086, inlinedAt: !14936)
!14938 = !DILocation(line: 1801, column: 20, scope: !14939)
!14939 = distinct !DILexicalBlock(scope: !14924, file: !2190, line: 1801, column: 6)
!14940 = !DILocation(line: 1801, column: 33, scope: !14939)
!14941 = !DILocation(line: 1801, column: 49, scope: !14939)
!14942 = !DILocation(line: 1801, column: 6, scope: !14924)
!14943 = !DILocation(line: 1803, column: 13, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14939, file: !2190, line: 1803, column: 13)
!14945 = !DILocation(line: 1803, column: 13, scope: !14939)
!14946 = !DILocation(line: 1805, column: 24, scope: !14947)
!14947 = distinct !DILexicalBlock(scope: !14944, file: !2190, line: 1805, column: 13)
!14948 = !DILocation(line: 1805, column: 21, scope: !14947)
!14949 = !DILocation(line: 1805, column: 34, scope: !14947)
!14950 = !DILocation(line: 1806, column: 20, scope: !14947)
!14951 = !DILocation(line: 1806, column: 44, scope: !14947)
!14952 = !DILocation(line: 1806, column: 30, scope: !14947)
!14953 = !DILocation(line: 1805, column: 13, scope: !14944)
!14954 = !DILocation(line: 1810, column: 42, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14947, file: !2190, line: 1808, column: 9)
!14956 = !DILocation(line: 1810, column: 3, scope: !14955)
!14957 = !DILocation(line: 1811, column: 22, scope: !14955)
!14958 = !DILocation(line: 1811, column: 3, scope: !14955)
!14959 = !DILocation(line: 0, scope: !13688, inlinedAt: !14960)
!14960 = distinct !DILocation(line: 1814, column: 9, scope: !14955)
!14961 = !DILocation(line: 196, column: 9, scope: !13688, inlinedAt: !14960)
!14962 = !DILocation(line: 1817, column: 3, scope: !14955)
!14963 = !DILocation(line: 0, scope: !14939)
!14964 = !DILocation(line: 0, scope: !13104, inlinedAt: !14965)
!14965 = distinct !DILocation(line: 1822, column: 2, scope: !14924)
!14966 = !DILocation(line: 0, scope: !13112, inlinedAt: !14967)
!14967 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !14965)
!14968 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !14967)
!14969 = !DILocation(line: 1823, column: 2, scope: !14924)
!14970 = !DILocation(line: 1824, column: 1, scope: !14924)
!14971 = distinct !DISubprogram(name: "z_sched_wake", scope: !2190, file: !2190, line: 1882, type: !14972, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !14974)
!14972 = !DISubroutineType(types: !14973)
!14973 = !{!224, !2116, !103, !102}
!14974 = !{!14975, !14976, !14977, !14978, !14979, !14980, !14982}
!14975 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14971, file: !2190, line: 1882, type: !2116)
!14976 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14971, file: !2190, line: 1882, type: !103)
!14977 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14971, file: !2190, line: 1882, type: !102)
!14978 = !DILocalVariable(name: "thread", scope: !14971, file: !2190, line: 1884, type: !2085)
!14979 = !DILocalVariable(name: "ret", scope: !14971, file: !2190, line: 1885, type: !224)
!14980 = !DILocalVariable(name: "__i", scope: !14981, file: !2190, line: 1887, type: !13069)
!14981 = distinct !DILexicalBlock(scope: !14971, file: !2190, line: 1887, column: 2)
!14982 = !DILocalVariable(name: "__key", scope: !14981, file: !2190, line: 1887, type: !13069)
!14983 = !DILocation(line: 0, scope: !14971)
!14984 = !DILocation(line: 0, scope: !14981)
!14985 = !DILocation(line: 0, scope: !13077, inlinedAt: !14986)
!14986 = distinct !DILocation(line: 1887, column: 2, scope: !14981)
!14987 = !DILocation(line: 55, column: 2, scope: !13086, inlinedAt: !14988)
!14988 = distinct !DILocation(line: 145, column: 10, scope: !13077, inlinedAt: !14986)
!14989 = !DILocation(line: 0, scope: !13086, inlinedAt: !14988)
!14990 = !DILocation(line: 1888, column: 12, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14992, file: !2190, line: 1887, column: 26)
!14992 = distinct !DILexicalBlock(scope: !14981, file: !2190, line: 1887, column: 2)
!14993 = !DILocation(line: 1890, column: 14, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14991, file: !2190, line: 1890, column: 7)
!14995 = !DILocation(line: 1890, column: 7, scope: !14991)
!14996 = !DILocalVariable(name: "thread", arg: 1, scope: !14997, file: !14998, line: 134, type: !2085)
!14997 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14998, file: !14998, line: 134, type: !14999, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !15001)
!14998 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14999 = !DISubroutineType(types: !15000)
!15000 = !{null, !2085, !32, !102}
!15001 = !{!14996, !15002, !15003}
!15002 = !DILocalVariable(name: "value", arg: 2, scope: !14997, file: !14998, line: 135, type: !32)
!15003 = !DILocalVariable(name: "data", arg: 3, scope: !14997, file: !14998, line: 136, type: !102)
!15004 = !DILocation(line: 0, scope: !14997, inlinedAt: !15005)
!15005 = distinct !DILocation(line: 1891, column: 4, scope: !15006)
!15006 = distinct !DILexicalBlock(scope: !14994, file: !2190, line: 1890, column: 23)
!15007 = !DILocation(line: 0, scope: !14911, inlinedAt: !15008)
!15008 = distinct !DILocation(line: 138, column: 2, scope: !14997, inlinedAt: !15005)
!15009 = !DILocation(line: 67, column: 15, scope: !14911, inlinedAt: !15008)
!15010 = !DILocation(line: 67, column: 33, scope: !14911, inlinedAt: !15008)
!15011 = !DILocation(line: 139, column: 15, scope: !14997, inlinedAt: !15005)
!15012 = !DILocation(line: 139, column: 25, scope: !14997, inlinedAt: !15005)
!15013 = !DILocation(line: 1894, column: 4, scope: !15006)
!15014 = !DILocation(line: 1895, column: 10, scope: !15006)
!15015 = !DILocation(line: 1896, column: 4, scope: !15006)
!15016 = !DILocation(line: 1898, column: 3, scope: !15006)
!15017 = !DILocation(line: 0, scope: !13104, inlinedAt: !15018)
!15018 = distinct !DILocation(line: 1887, column: 2, scope: !14992)
!15019 = !DILocation(line: 0, scope: !13112, inlinedAt: !15020)
!15020 = distinct !DILocation(line: 215, column: 2, scope: !13104, inlinedAt: !15018)
!15021 = !DILocation(line: 95, column: 2, scope: !13112, inlinedAt: !15020)
!15022 = !DILocation(line: 1901, column: 2, scope: !14971)
!15023 = distinct !DISubprogram(name: "z_sched_wait", scope: !2190, file: !2190, line: 1904, type: !15024, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !15027)
!15024 = !DISubroutineType(types: !15025)
!15025 = !{!103, !13080, !13069, !2116, !13868, !15026}
!15026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!15027 = !{!15028, !15029, !15030, !15031, !15032, !15033}
!15028 = !DILocalVariable(name: "lock", arg: 1, scope: !15023, file: !2190, line: 1904, type: !13080)
!15029 = !DILocalVariable(name: "key", arg: 2, scope: !15023, file: !2190, line: 1904, type: !13069)
!15030 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15023, file: !2190, line: 1905, type: !2116)
!15031 = !DILocalVariable(name: "timeout", arg: 4, scope: !15023, file: !2190, line: 1905, type: !13868)
!15032 = !DILocalVariable(name: "data", arg: 5, scope: !15023, file: !2190, line: 1905, type: !15026)
!15033 = !DILocalVariable(name: "ret", scope: !15023, file: !2190, line: 1907, type: !103)
!15034 = !DILocation(line: 0, scope: !15023)
!15035 = !DILocation(line: 1907, column: 12, scope: !15023)
!15036 = !DILocation(line: 1909, column: 11, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !15023, file: !2190, line: 1909, column: 6)
!15038 = !DILocation(line: 1909, column: 6, scope: !15023)
!15039 = !DILocation(line: 1910, column: 11, scope: !15040)
!15040 = distinct !DILexicalBlock(scope: !15037, file: !2190, line: 1909, column: 20)
!15041 = !DILocation(line: 1910, column: 26, scope: !15040)
!15042 = !DILocation(line: 1910, column: 9, scope: !15040)
!15043 = !DILocation(line: 1911, column: 2, scope: !15040)
!15044 = !DILocation(line: 1912, column: 2, scope: !15023)
!15045 = distinct !DISubprogram(name: "z_data_copy", scope: !15046, file: !15046, line: 22, type: !2794, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2777, retainedNodes: !162)
!15046 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15047 = !DILocation(line: 24, column: 2, scope: !15045)
!15048 = !DILocation(line: 27, column: 2, scope: !15045)
!15049 = !DILocation(line: 71, column: 1, scope: !15045)
!15050 = distinct !DISubprogram(name: "z_add_timeout", scope: !2227, file: !2227, line: 88, type: !15051, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15057)
!15051 = !DISubroutineType(types: !15052)
!15052 = !{null, !2200, !2219, !15053}
!15053 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1461, line: 67, baseType: !15054)
!15054 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1461, line: 65, size: 64, elements: !15055)
!15055 = !{!15056}
!15056 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15054, file: !1461, line: 66, baseType: !1460, size: 64)
!15057 = !{!15058, !15059, !15060, !15061, !15067, !15068, !15071, !15074}
!15058 = !DILocalVariable(name: "to", arg: 1, scope: !15050, file: !2227, line: 88, type: !2200)
!15059 = !DILocalVariable(name: "fn", arg: 2, scope: !15050, file: !2227, line: 88, type: !2219)
!15060 = !DILocalVariable(name: "timeout", arg: 3, scope: !15050, file: !2227, line: 89, type: !15053)
!15061 = !DILocalVariable(name: "__i", scope: !15062, file: !2227, line: 102, type: !15063)
!15062 = distinct !DILexicalBlock(scope: !15050, file: !2227, line: 102, column: 2)
!15063 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !381, line: 106, baseType: !15064)
!15064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !381, line: 32, size: 32, elements: !15065)
!15065 = !{!15066}
!15066 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15064, file: !381, line: 33, baseType: !103, size: 32)
!15067 = !DILocalVariable(name: "__key", scope: !15062, file: !2227, line: 102, type: !15063)
!15068 = !DILocalVariable(name: "t", scope: !15069, file: !2227, line: 103, type: !2200)
!15069 = distinct !DILexicalBlock(scope: !15070, file: !2227, line: 102, column: 24)
!15070 = distinct !DILexicalBlock(scope: !15062, file: !2227, line: 102, column: 2)
!15071 = !DILocalVariable(name: "ticks", scope: !15072, file: !2227, line: 107, type: !1460)
!15072 = distinct !DILexicalBlock(scope: !15073, file: !2227, line: 106, column: 39)
!15073 = distinct !DILexicalBlock(scope: !15069, file: !2227, line: 105, column: 7)
!15074 = !DILocalVariable(name: "next_time", scope: !15075, file: !2227, line: 137, type: !721)
!15075 = distinct !DILexicalBlock(scope: !15076, file: !2227, line: 127, column: 22)
!15076 = distinct !DILexicalBlock(scope: !15069, file: !2227, line: 127, column: 7)
!15077 = !DILocation(line: 0, scope: !15050)
!15078 = !DILocation(line: 91, column: 6, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !15050, file: !2227, line: 91, column: 6)
!15080 = !DILocation(line: 91, column: 6, scope: !15050)
!15081 = !DILocation(line: 100, column: 6, scope: !15050)
!15082 = !DILocation(line: 100, column: 9, scope: !15050)
!15083 = !DILocation(line: 0, scope: !15062)
!15084 = !DILocalVariable(name: "l", arg: 1, scope: !15085, file: !381, line: 136, type: !15088)
!15085 = distinct !DISubprogram(name: "k_spin_lock", scope: !381, file: !381, line: 136, type: !15086, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15089)
!15086 = !DISubroutineType(types: !15087)
!15087 = !{!15063, !15088}
!15088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!15089 = !{!15084, !15090}
!15090 = !DILocalVariable(name: "k", scope: !15085, file: !381, line: 139, type: !15063)
!15091 = !DILocation(line: 0, scope: !15085, inlinedAt: !15092)
!15092 = distinct !DILocation(line: 102, column: 2, scope: !15062)
!15093 = !DILocation(line: 55, column: 2, scope: !15094, inlinedAt: !15098)
!15094 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6080, file: !6080, line: 42, type: !6081, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15095)
!15095 = !{!15096, !15097}
!15096 = !DILocalVariable(name: "key", scope: !15094, file: !6080, line: 44, type: !32)
!15097 = !DILocalVariable(name: "tmp", scope: !15094, file: !6080, line: 53, type: !32)
!15098 = distinct !DILocation(line: 145, column: 10, scope: !15085, inlinedAt: !15092)
!15099 = !{i64 1654256}
!15100 = !DILocation(line: 0, scope: !15094, inlinedAt: !15098)
!15101 = !DILocation(line: 106, column: 33, scope: !15073)
!15102 = !DILocation(line: 105, column: 7, scope: !15069)
!15103 = !DILocation(line: 107, column: 50, scope: !15072)
!15104 = !DILocation(line: 107, column: 48, scope: !15072)
!15105 = !DILocation(line: 0, scope: !15072)
!15106 = !DILocation(line: 109, column: 17, scope: !15072)
!15107 = !DILocation(line: 110, column: 3, scope: !15072)
!15108 = !DILocation(line: 111, column: 31, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15073, file: !2227, line: 110, column: 10)
!15110 = !DILocation(line: 111, column: 37, scope: !15109)
!15111 = !DILocation(line: 111, column: 35, scope: !15109)
!15112 = !DILocation(line: 0, scope: !15073)
!15113 = !DILocation(line: 109, column: 8, scope: !15072)
!15114 = !DILocation(line: 109, column: 15, scope: !15072)
!15115 = !DILocation(line: 114, column: 12, scope: !15116)
!15116 = distinct !DILexicalBlock(scope: !15069, file: !2227, line: 114, column: 3)
!15117 = !DILocation(line: 0, scope: !15069)
!15118 = !DILocation(line: 114, column: 3, scope: !15116)
!15119 = !DILocation(line: 115, column: 24, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15121, file: !2227, line: 115, column: 8)
!15121 = distinct !DILexicalBlock(scope: !15122, file: !2227, line: 114, column: 45)
!15122 = distinct !DILexicalBlock(scope: !15116, file: !2227, line: 114, column: 3)
!15123 = !DILocation(line: 115, column: 11, scope: !15120)
!15124 = !DILocation(line: 115, column: 18, scope: !15120)
!15125 = !DILocation(line: 115, column: 8, scope: !15121)
!15126 = !DILocation(line: 116, column: 15, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15120, file: !2227, line: 115, column: 32)
!15128 = !DILocation(line: 117, column: 26, scope: !15127)
!15129 = !DILocation(line: 117, column: 37, scope: !15127)
!15130 = !DILocation(line: 117, column: 5, scope: !15127)
!15131 = !DILocation(line: 123, column: 7, scope: !15069)
!15132 = !DILocation(line: 120, column: 15, scope: !15121)
!15133 = !DILocation(line: 114, column: 36, scope: !15122)
!15134 = distinct !{!15134, !15118, !15135}
!15135 = !DILocation(line: 121, column: 3, scope: !15116)
!15136 = !DILocation(line: 124, column: 41, scope: !15137)
!15137 = distinct !DILexicalBlock(scope: !15138, file: !2227, line: 123, column: 18)
!15138 = distinct !DILexicalBlock(scope: !15069, file: !2227, line: 123, column: 7)
!15139 = !DILocation(line: 124, column: 4, scope: !15137)
!15140 = !DILocation(line: 125, column: 3, scope: !15137)
!15141 = !DILocation(line: 127, column: 13, scope: !15076)
!15142 = !DILocation(line: 127, column: 10, scope: !15076)
!15143 = !DILocation(line: 127, column: 7, scope: !15069)
!15144 = !DILocation(line: 137, column: 24, scope: !15075)
!15145 = !DILocation(line: 0, scope: !15075)
!15146 = !DILocation(line: 139, column: 18, scope: !15147)
!15147 = distinct !DILexicalBlock(scope: !15075, file: !2227, line: 139, column: 8)
!15148 = !DILocation(line: 139, column: 23, scope: !15147)
!15149 = !DILocation(line: 141, column: 5, scope: !15150)
!15150 = distinct !DILexicalBlock(scope: !15147, file: !2227, line: 140, column: 48)
!15151 = !DILocation(line: 142, column: 4, scope: !15150)
!15152 = !DILocalVariable(name: "key", arg: 2, scope: !15153, file: !381, line: 190, type: !15063)
!15153 = distinct !DISubprogram(name: "k_spin_unlock", scope: !381, file: !381, line: 189, type: !15154, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15156)
!15154 = !DISubroutineType(types: !15155)
!15155 = !{null, !15088, !15063}
!15156 = !{!15157, !15152}
!15157 = !DILocalVariable(name: "l", arg: 1, scope: !15153, file: !381, line: 189, type: !15088)
!15158 = !DILocation(line: 0, scope: !15153, inlinedAt: !15159)
!15159 = distinct !DILocation(line: 102, column: 2, scope: !15070)
!15160 = !DILocalVariable(name: "key", arg: 1, scope: !15161, file: !6080, line: 84, type: !32)
!15161 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6080, file: !6080, line: 84, type: !6091, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15162)
!15162 = !{!15160}
!15163 = !DILocation(line: 0, scope: !15161, inlinedAt: !15164)
!15164 = distinct !DILocation(line: 215, column: 2, scope: !15153, inlinedAt: !15159)
!15165 = !DILocation(line: 95, column: 2, scope: !15161, inlinedAt: !15164)
!15166 = !{i64 1655073}
!15167 = !DILocation(line: 148, column: 1, scope: !15050)
!15168 = distinct !DISubprogram(name: "elapsed", scope: !2227, file: !2227, line: 62, type: !15169, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !162)
!15169 = !DISubroutineType(types: !15170)
!15170 = !{!721}
!15171 = !DILocation(line: 64, column: 9, scope: !15168)
!15172 = !DILocation(line: 64, column: 28, scope: !15168)
!15173 = !DILocation(line: 64, column: 35, scope: !15168)
!15174 = !DILocation(line: 64, column: 2, scope: !15168)
!15175 = distinct !DISubprogram(name: "first", scope: !2227, file: !2227, line: 39, type: !15176, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15178)
!15176 = !DISubroutineType(types: !15177)
!15177 = !{!2200}
!15178 = !{!15179}
!15179 = !DILocalVariable(name: "t", scope: !15175, file: !2227, line: 41, type: !15180)
!15180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!15181 = !DILocation(line: 41, column: 19, scope: !15175)
!15182 = !DILocation(line: 0, scope: !15175)
!15183 = !DILocation(line: 43, column: 9, scope: !15175)
!15184 = !DILocation(line: 43, column: 2, scope: !15175)
!15185 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !286, file: !286, line: 443, type: !15186, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15188)
!15186 = !DISubroutineType(types: !15187)
!15187 = !{null, !15180, !15180}
!15188 = !{!15189, !15190, !15191}
!15189 = !DILocalVariable(name: "successor", arg: 1, scope: !15185, file: !286, line: 443, type: !15180)
!15190 = !DILocalVariable(name: "node", arg: 2, scope: !15185, file: !286, line: 443, type: !15180)
!15191 = !DILocalVariable(name: "prev", scope: !15185, file: !286, line: 445, type: !15192)
!15192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15180)
!15193 = !DILocation(line: 0, scope: !15185)
!15194 = !DILocation(line: 445, column: 39, scope: !15185)
!15195 = !DILocation(line: 447, column: 8, scope: !15185)
!15196 = !DILocation(line: 447, column: 13, scope: !15185)
!15197 = !DILocation(line: 448, column: 8, scope: !15185)
!15198 = !DILocation(line: 448, column: 13, scope: !15185)
!15199 = !DILocation(line: 449, column: 8, scope: !15185)
!15200 = !DILocation(line: 449, column: 13, scope: !15185)
!15201 = !DILocation(line: 450, column: 18, scope: !15185)
!15202 = !DILocation(line: 451, column: 1, scope: !15185)
!15203 = distinct !DISubprogram(name: "next", scope: !2227, file: !2227, line: 46, type: !15204, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15206)
!15204 = !DISubroutineType(types: !15205)
!15205 = !{!2200, !2200}
!15206 = !{!15207, !15208}
!15207 = !DILocalVariable(name: "t", arg: 1, scope: !15203, file: !2227, line: 46, type: !2200)
!15208 = !DILocalVariable(name: "n", scope: !15203, file: !2227, line: 48, type: !15180)
!15209 = !DILocation(line: 0, scope: !15203)
!15210 = !DILocation(line: 48, column: 58, scope: !15203)
!15211 = !DILocation(line: 48, column: 19, scope: !15203)
!15212 = !DILocation(line: 50, column: 9, scope: !15203)
!15213 = !DILocation(line: 50, column: 2, scope: !15203)
!15214 = distinct !DISubprogram(name: "sys_dlist_append", scope: !286, file: !286, line: 404, type: !15215, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15218)
!15215 = !DISubroutineType(types: !15216)
!15216 = !{null, !15217, !15180}
!15217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 32)
!15218 = !{!15219, !15220, !15221}
!15219 = !DILocalVariable(name: "list", arg: 1, scope: !15214, file: !286, line: 404, type: !15217)
!15220 = !DILocalVariable(name: "node", arg: 2, scope: !15214, file: !286, line: 404, type: !15180)
!15221 = !DILocalVariable(name: "tail", scope: !15214, file: !286, line: 406, type: !15192)
!15222 = !DILocation(line: 0, scope: !15214)
!15223 = !DILocation(line: 406, column: 34, scope: !15214)
!15224 = !DILocation(line: 408, column: 8, scope: !15214)
!15225 = !DILocation(line: 408, column: 13, scope: !15214)
!15226 = !DILocation(line: 409, column: 8, scope: !15214)
!15227 = !DILocation(line: 409, column: 13, scope: !15214)
!15228 = !DILocation(line: 411, column: 8, scope: !15214)
!15229 = !DILocation(line: 411, column: 13, scope: !15214)
!15230 = !DILocation(line: 412, column: 13, scope: !15214)
!15231 = !DILocation(line: 413, column: 1, scope: !15214)
!15232 = distinct !DISubprogram(name: "next_timeout", scope: !2227, file: !2227, line: 67, type: !15169, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15233)
!15233 = !{!15234, !15235, !15236}
!15234 = !DILocalVariable(name: "to", scope: !15232, file: !2227, line: 69, type: !2200)
!15235 = !DILocalVariable(name: "ticks_elapsed", scope: !15232, file: !2227, line: 70, type: !721)
!15236 = !DILocalVariable(name: "ret", scope: !15232, file: !2227, line: 71, type: !721)
!15237 = !DILocation(line: 69, column: 24, scope: !15232)
!15238 = !DILocation(line: 0, scope: !15232)
!15239 = !DILocation(line: 70, column: 26, scope: !15232)
!15240 = !DILocation(line: 73, column: 10, scope: !15241)
!15241 = distinct !DILexicalBlock(scope: !15232, file: !2227, line: 73, column: 6)
!15242 = !DILocation(line: 73, column: 19, scope: !15241)
!15243 = !DILocation(line: 74, column: 21, scope: !15241)
!15244 = !DILocation(line: 74, column: 30, scope: !15241)
!15245 = !DILocation(line: 74, column: 28, scope: !15241)
!15246 = !DILocation(line: 74, column: 45, scope: !15241)
!15247 = !DILocation(line: 73, column: 6, scope: !15232)
!15248 = !DILocation(line: 77, column: 9, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !15241, file: !2227, line: 76, column: 9)
!15250 = !DILocation(line: 0, scope: !15241)
!15251 = !DILocation(line: 81, column: 20, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15232, file: !2227, line: 81, column: 6)
!15253 = !DILocation(line: 81, column: 6, scope: !15252)
!15254 = !DILocation(line: 81, column: 32, scope: !15252)
!15255 = !DILocation(line: 85, column: 2, scope: !15232)
!15256 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !286, file: !286, line: 341, type: !15257, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15259)
!15257 = !DISubroutineType(types: !15258)
!15258 = !{!15180, !15217, !15180}
!15259 = !{!15260, !15261}
!15260 = !DILocalVariable(name: "list", arg: 1, scope: !15256, file: !286, line: 341, type: !15217)
!15261 = !DILocalVariable(name: "node", arg: 2, scope: !15256, file: !286, line: 342, type: !15180)
!15262 = !DILocation(line: 0, scope: !15256)
!15263 = !DILocation(line: 344, column: 15, scope: !15256)
!15264 = !DILocation(line: 344, column: 9, scope: !15256)
!15265 = !DILocation(line: 344, column: 26, scope: !15256)
!15266 = !DILocation(line: 344, column: 2, scope: !15256)
!15267 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !286, file: !286, line: 325, type: !15257, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15268)
!15268 = !{!15269, !15270}
!15269 = !DILocalVariable(name: "list", arg: 1, scope: !15267, file: !286, line: 325, type: !15217)
!15270 = !DILocalVariable(name: "node", arg: 2, scope: !15267, file: !286, line: 326, type: !15180)
!15271 = !DILocation(line: 0, scope: !15267)
!15272 = !DILocation(line: 328, column: 24, scope: !15267)
!15273 = !DILocation(line: 328, column: 15, scope: !15267)
!15274 = !DILocation(line: 328, column: 9, scope: !15267)
!15275 = !DILocation(line: 328, column: 45, scope: !15267)
!15276 = !DILocation(line: 328, column: 2, scope: !15267)
!15277 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !286, file: !286, line: 294, type: !15278, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15280)
!15278 = !DISubroutineType(types: !15279)
!15279 = !{!15180, !15217}
!15280 = !{!15281}
!15281 = !DILocalVariable(name: "list", arg: 1, scope: !15277, file: !286, line: 294, type: !15217)
!15282 = !DILocation(line: 0, scope: !15277)
!15283 = !DILocation(line: 296, column: 9, scope: !15277)
!15284 = !DILocation(line: 296, column: 2, scope: !15277)
!15285 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !286, file: !286, line: 266, type: !15286, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15288)
!15286 = !DISubroutineType(types: !15287)
!15287 = !{!224, !15217}
!15288 = !{!15289}
!15289 = !DILocalVariable(name: "list", arg: 1, scope: !15285, file: !286, line: 266, type: !15217)
!15290 = !DILocation(line: 0, scope: !15285)
!15291 = !DILocation(line: 268, column: 15, scope: !15285)
!15292 = !DILocation(line: 268, column: 20, scope: !15285)
!15293 = !DILocation(line: 268, column: 2, scope: !15285)
!15294 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2227, file: !2227, line: 150, type: !15295, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15297)
!15295 = !DISubroutineType(types: !15296)
!15296 = !{!103, !2200}
!15297 = !{!15298, !15299, !15300, !15302}
!15298 = !DILocalVariable(name: "to", arg: 1, scope: !15294, file: !2227, line: 150, type: !2200)
!15299 = !DILocalVariable(name: "ret", scope: !15294, file: !2227, line: 152, type: !103)
!15300 = !DILocalVariable(name: "__i", scope: !15301, file: !2227, line: 154, type: !15063)
!15301 = distinct !DILexicalBlock(scope: !15294, file: !2227, line: 154, column: 2)
!15302 = !DILocalVariable(name: "__key", scope: !15301, file: !2227, line: 154, type: !15063)
!15303 = !DILocation(line: 0, scope: !15294)
!15304 = !DILocation(line: 0, scope: !15301)
!15305 = !DILocation(line: 0, scope: !15085, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 154, column: 2, scope: !15301)
!15307 = !DILocation(line: 55, column: 2, scope: !15094, inlinedAt: !15308)
!15308 = distinct !DILocation(line: 145, column: 10, scope: !15085, inlinedAt: !15306)
!15309 = !DILocation(line: 0, scope: !15094, inlinedAt: !15308)
!15310 = !DILocation(line: 155, column: 7, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15312, file: !2227, line: 155, column: 7)
!15312 = distinct !DILexicalBlock(scope: !15313, file: !2227, line: 154, column: 24)
!15313 = distinct !DILexicalBlock(scope: !15301, file: !2227, line: 154, column: 2)
!15314 = !DILocation(line: 155, column: 7, scope: !15312)
!15315 = !DILocation(line: 156, column: 4, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15311, file: !2227, line: 155, column: 39)
!15317 = !DILocation(line: 158, column: 3, scope: !15316)
!15318 = !DILocation(line: 0, scope: !15153, inlinedAt: !15319)
!15319 = distinct !DILocation(line: 154, column: 2, scope: !15313)
!15320 = !DILocation(line: 0, scope: !15161, inlinedAt: !15321)
!15321 = distinct !DILocation(line: 215, column: 2, scope: !15153, inlinedAt: !15319)
!15322 = !DILocation(line: 95, column: 2, scope: !15161, inlinedAt: !15321)
!15323 = !DILocation(line: 161, column: 2, scope: !15294)
!15324 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !286, file: !286, line: 225, type: !15325, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15329)
!15325 = !DISubroutineType(types: !15326)
!15326 = !{!224, !15327}
!15327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15328, size: 32)
!15328 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2204)
!15329 = !{!15330}
!15330 = !DILocalVariable(name: "node", arg: 1, scope: !15324, file: !286, line: 225, type: !15327)
!15331 = !DILocation(line: 0, scope: !15324)
!15332 = !DILocation(line: 227, column: 15, scope: !15324)
!15333 = !DILocation(line: 227, column: 20, scope: !15324)
!15334 = !DILocation(line: 227, column: 2, scope: !15324)
!15335 = distinct !DISubprogram(name: "remove_timeout", scope: !2227, file: !2227, line: 53, type: !2221, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15336)
!15336 = !{!15337}
!15337 = !DILocalVariable(name: "t", arg: 1, scope: !15335, file: !2227, line: 53, type: !2200)
!15338 = !DILocation(line: 0, scope: !15335)
!15339 = !DILocation(line: 55, column: 6, scope: !15340)
!15340 = distinct !DILexicalBlock(scope: !15335, file: !2227, line: 55, column: 6)
!15341 = !DILocation(line: 55, column: 14, scope: !15340)
!15342 = !DILocation(line: 55, column: 6, scope: !15335)
!15343 = !DILocation(line: 56, column: 25, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15340, file: !2227, line: 55, column: 23)
!15345 = !DILocation(line: 56, column: 12, scope: !15344)
!15346 = !DILocation(line: 56, column: 19, scope: !15344)
!15347 = !DILocation(line: 57, column: 2, scope: !15344)
!15348 = !DILocation(line: 59, column: 23, scope: !15335)
!15349 = !DILocation(line: 59, column: 2, scope: !15335)
!15350 = !DILocation(line: 60, column: 1, scope: !15335)
!15351 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !286, file: !286, line: 496, type: !15352, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15354)
!15352 = !DISubroutineType(types: !15353)
!15353 = !{null, !15180}
!15354 = !{!15355, !15356, !15357}
!15355 = !DILocalVariable(name: "node", arg: 1, scope: !15351, file: !286, line: 496, type: !15180)
!15356 = !DILocalVariable(name: "prev", scope: !15351, file: !286, line: 498, type: !15192)
!15357 = !DILocalVariable(name: "next", scope: !15351, file: !286, line: 499, type: !15192)
!15358 = !DILocation(line: 0, scope: !15351)
!15359 = !DILocation(line: 498, column: 34, scope: !15351)
!15360 = !DILocation(line: 499, column: 34, scope: !15351)
!15361 = !DILocation(line: 501, column: 8, scope: !15351)
!15362 = !DILocation(line: 501, column: 13, scope: !15351)
!15363 = !DILocation(line: 502, column: 8, scope: !15351)
!15364 = !DILocation(line: 502, column: 13, scope: !15351)
!15365 = !DILocation(line: 503, column: 2, scope: !15351)
!15366 = !DILocation(line: 504, column: 1, scope: !15351)
!15367 = distinct !DISubprogram(name: "sys_dnode_init", scope: !286, file: !286, line: 211, type: !15352, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15368)
!15368 = !{!15369}
!15369 = !DILocalVariable(name: "node", arg: 1, scope: !15367, file: !286, line: 211, type: !15180)
!15370 = !DILocation(line: 0, scope: !15367)
!15371 = !DILocation(line: 213, column: 8, scope: !15367)
!15372 = !DILocation(line: 213, column: 13, scope: !15367)
!15373 = !DILocation(line: 214, column: 8, scope: !15367)
!15374 = !DILocation(line: 214, column: 13, scope: !15367)
!15375 = !DILocation(line: 215, column: 1, scope: !15367)
!15376 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2227, file: !2227, line: 183, type: !15377, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15381)
!15377 = !DISubroutineType(types: !15378)
!15378 = !{!1460, !15379}
!15379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15380, size: 32)
!15380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2201)
!15381 = !{!15382, !15383, !15384, !15386}
!15382 = !DILocalVariable(name: "timeout", arg: 1, scope: !15376, file: !2227, line: 183, type: !15379)
!15383 = !DILocalVariable(name: "ticks", scope: !15376, file: !2227, line: 185, type: !1460)
!15384 = !DILocalVariable(name: "__i", scope: !15385, file: !2227, line: 187, type: !15063)
!15385 = distinct !DILexicalBlock(scope: !15376, file: !2227, line: 187, column: 2)
!15386 = !DILocalVariable(name: "__key", scope: !15385, file: !2227, line: 187, type: !15063)
!15387 = !DILocation(line: 0, scope: !15376)
!15388 = !DILocation(line: 0, scope: !15385)
!15389 = !DILocation(line: 0, scope: !15085, inlinedAt: !15390)
!15390 = distinct !DILocation(line: 187, column: 2, scope: !15385)
!15391 = !DILocation(line: 55, column: 2, scope: !15094, inlinedAt: !15392)
!15392 = distinct !DILocation(line: 145, column: 10, scope: !15085, inlinedAt: !15390)
!15393 = !DILocation(line: 0, scope: !15094, inlinedAt: !15392)
!15394 = !DILocation(line: 188, column: 11, scope: !15395)
!15395 = distinct !DILexicalBlock(scope: !15396, file: !2227, line: 187, column: 24)
!15396 = distinct !DILexicalBlock(scope: !15385, file: !2227, line: 187, column: 2)
!15397 = !DILocation(line: 0, scope: !15153, inlinedAt: !15398)
!15398 = distinct !DILocation(line: 187, column: 2, scope: !15396)
!15399 = !DILocation(line: 0, scope: !15161, inlinedAt: !15400)
!15400 = distinct !DILocation(line: 215, column: 2, scope: !15153, inlinedAt: !15398)
!15401 = !DILocation(line: 95, column: 2, scope: !15161, inlinedAt: !15400)
!15402 = !DILocation(line: 191, column: 2, scope: !15376)
!15403 = distinct !DISubprogram(name: "timeout_rem", scope: !2227, file: !2227, line: 165, type: !15377, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15404)
!15404 = !{!15405, !15406, !15407}
!15405 = !DILocalVariable(name: "timeout", arg: 1, scope: !15403, file: !2227, line: 165, type: !15379)
!15406 = !DILocalVariable(name: "ticks", scope: !15403, file: !2227, line: 167, type: !1460)
!15407 = !DILocalVariable(name: "t", scope: !15408, file: !2227, line: 173, type: !2200)
!15408 = distinct !DILexicalBlock(scope: !15403, file: !2227, line: 173, column: 2)
!15409 = !DILocation(line: 0, scope: !15403)
!15410 = !DILocation(line: 169, column: 6, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15403, file: !2227, line: 169, column: 6)
!15412 = !DILocation(line: 169, column: 6, scope: !15403)
!15413 = !DILocation(line: 173, column: 28, scope: !15408)
!15414 = !DILocation(line: 0, scope: !15408)
!15415 = !DILocation(line: 173, column: 39, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !15408, file: !2227, line: 173, column: 2)
!15417 = !DILocation(line: 173, column: 2, scope: !15408)
!15418 = !DILocation(line: 174, column: 15, scope: !15419)
!15419 = distinct !DILexicalBlock(scope: !15416, file: !2227, line: 173, column: 61)
!15420 = !DILocation(line: 174, column: 9, scope: !15419)
!15421 = !DILocation(line: 175, column: 15, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15419, file: !2227, line: 175, column: 7)
!15423 = !DILocation(line: 175, column: 7, scope: !15419)
!15424 = !DILocation(line: 173, column: 52, scope: !15416)
!15425 = distinct !{!15425, !15417, !15426}
!15426 = !DILocation(line: 178, column: 2, scope: !15408)
!15427 = !DILocation(line: 180, column: 17, scope: !15403)
!15428 = !DILocation(line: 180, column: 15, scope: !15403)
!15429 = !DILocation(line: 180, column: 2, scope: !15403)
!15430 = !DILocation(line: 181, column: 1, scope: !15403)
!15431 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12743, file: !12743, line: 35, type: !15432, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15434)
!15432 = !DISubroutineType(types: !15433)
!15433 = !{!224, !15379}
!15434 = !{!15435}
!15435 = !DILocalVariable(name: "to", arg: 1, scope: !15431, file: !12743, line: 35, type: !15379)
!15436 = !DILocation(line: 0, scope: !15431)
!15437 = !DILocation(line: 37, column: 35, scope: !15431)
!15438 = !DILocation(line: 37, column: 10, scope: !15431)
!15439 = !DILocation(line: 37, column: 9, scope: !15431)
!15440 = !DILocation(line: 37, column: 2, scope: !15431)
!15441 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2227, file: !2227, line: 194, type: !15377, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15442)
!15442 = !{!15443, !15444, !15445, !15447}
!15443 = !DILocalVariable(name: "timeout", arg: 1, scope: !15441, file: !2227, line: 194, type: !15379)
!15444 = !DILocalVariable(name: "ticks", scope: !15441, file: !2227, line: 196, type: !1460)
!15445 = !DILocalVariable(name: "__i", scope: !15446, file: !2227, line: 198, type: !15063)
!15446 = distinct !DILexicalBlock(scope: !15441, file: !2227, line: 198, column: 2)
!15447 = !DILocalVariable(name: "__key", scope: !15446, file: !2227, line: 198, type: !15063)
!15448 = !DILocation(line: 0, scope: !15441)
!15449 = !DILocation(line: 0, scope: !15446)
!15450 = !DILocation(line: 0, scope: !15085, inlinedAt: !15451)
!15451 = distinct !DILocation(line: 198, column: 2, scope: !15446)
!15452 = !DILocation(line: 55, column: 2, scope: !15094, inlinedAt: !15453)
!15453 = distinct !DILocation(line: 145, column: 10, scope: !15085, inlinedAt: !15451)
!15454 = !DILocation(line: 0, scope: !15094, inlinedAt: !15453)
!15455 = !DILocation(line: 199, column: 11, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15457, file: !2227, line: 198, column: 24)
!15457 = distinct !DILexicalBlock(scope: !15446, file: !2227, line: 198, column: 2)
!15458 = !DILocation(line: 199, column: 23, scope: !15456)
!15459 = !DILocation(line: 0, scope: !15153, inlinedAt: !15460)
!15460 = distinct !DILocation(line: 198, column: 2, scope: !15457)
!15461 = !DILocation(line: 0, scope: !15161, inlinedAt: !15462)
!15462 = distinct !DILocation(line: 215, column: 2, scope: !15153, inlinedAt: !15460)
!15463 = !DILocation(line: 95, column: 2, scope: !15161, inlinedAt: !15462)
!15464 = !DILocation(line: 199, column: 21, scope: !15456)
!15465 = !DILocation(line: 202, column: 2, scope: !15441)
!15466 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2227, file: !2227, line: 205, type: !15169, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15467)
!15467 = !{!15468, !15469, !15471}
!15468 = !DILocalVariable(name: "ret", scope: !15466, file: !2227, line: 207, type: !721)
!15469 = !DILocalVariable(name: "__i", scope: !15470, file: !2227, line: 209, type: !15063)
!15470 = distinct !DILexicalBlock(scope: !15466, file: !2227, line: 209, column: 2)
!15471 = !DILocalVariable(name: "__key", scope: !15470, file: !2227, line: 209, type: !15063)
!15472 = !DILocation(line: 0, scope: !15466)
!15473 = !DILocation(line: 0, scope: !15470)
!15474 = !DILocation(line: 0, scope: !15085, inlinedAt: !15475)
!15475 = distinct !DILocation(line: 209, column: 2, scope: !15470)
!15476 = !DILocation(line: 55, column: 2, scope: !15094, inlinedAt: !15477)
!15477 = distinct !DILocation(line: 145, column: 10, scope: !15085, inlinedAt: !15475)
!15478 = !DILocation(line: 0, scope: !15094, inlinedAt: !15477)
!15479 = !DILocation(line: 210, column: 9, scope: !15480)
!15480 = distinct !DILexicalBlock(scope: !15481, file: !2227, line: 209, column: 24)
!15481 = distinct !DILexicalBlock(scope: !15470, file: !2227, line: 209, column: 2)
!15482 = !DILocation(line: 0, scope: !15153, inlinedAt: !15483)
!15483 = distinct !DILocation(line: 209, column: 2, scope: !15481)
!15484 = !DILocation(line: 0, scope: !15161, inlinedAt: !15485)
!15485 = distinct !DILocation(line: 215, column: 2, scope: !15153, inlinedAt: !15483)
!15486 = !DILocation(line: 95, column: 2, scope: !15161, inlinedAt: !15485)
!15487 = !DILocation(line: 212, column: 2, scope: !15466)
!15488 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2227, file: !2227, line: 215, type: !10190, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15489)
!15489 = !{!15490, !15491, !15492, !15494, !15495, !15498, !15499}
!15490 = !DILocalVariable(name: "ticks", arg: 1, scope: !15488, file: !2227, line: 215, type: !721)
!15491 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15488, file: !2227, line: 215, type: !224)
!15492 = !DILocalVariable(name: "__i", scope: !15493, file: !2227, line: 217, type: !15063)
!15493 = distinct !DILexicalBlock(scope: !15488, file: !2227, line: 217, column: 2)
!15494 = !DILocalVariable(name: "__key", scope: !15493, file: !2227, line: 217, type: !15063)
!15495 = !DILocalVariable(name: "next_to", scope: !15496, file: !2227, line: 218, type: !103)
!15496 = distinct !DILexicalBlock(scope: !15497, file: !2227, line: 217, column: 24)
!15497 = distinct !DILexicalBlock(scope: !15493, file: !2227, line: 217, column: 2)
!15498 = !DILocalVariable(name: "sooner", scope: !15496, file: !2227, line: 219, type: !224)
!15499 = !DILocalVariable(name: "imminent", scope: !15496, file: !2227, line: 221, type: !224)
!15500 = !DILocation(line: 0, scope: !15488)
!15501 = !DILocation(line: 0, scope: !15493)
!15502 = !DILocation(line: 0, scope: !15085, inlinedAt: !15503)
!15503 = distinct !DILocation(line: 217, column: 2, scope: !15493)
!15504 = !DILocation(line: 55, column: 2, scope: !15094, inlinedAt: !15505)
!15505 = distinct !DILocation(line: 145, column: 10, scope: !15085, inlinedAt: !15503)
!15506 = !DILocation(line: 0, scope: !15094, inlinedAt: !15505)
!15507 = !DILocation(line: 218, column: 17, scope: !15496)
!15508 = !DILocation(line: 0, scope: !15496)
!15509 = !DILocation(line: 221, column: 27, scope: !15496)
!15510 = !DILocation(line: 233, column: 17, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15496, file: !2227, line: 233, column: 7)
!15512 = !DILocation(line: 234, column: 26, scope: !15513)
!15513 = distinct !DILexicalBlock(scope: !15511, file: !2227, line: 233, column: 56)
!15514 = !DILocation(line: 234, column: 4, scope: !15513)
!15515 = !DILocation(line: 235, column: 3, scope: !15513)
!15516 = !DILocation(line: 0, scope: !15153, inlinedAt: !15517)
!15517 = distinct !DILocation(line: 217, column: 2, scope: !15497)
!15518 = !DILocation(line: 0, scope: !15161, inlinedAt: !15519)
!15519 = distinct !DILocation(line: 215, column: 2, scope: !15153, inlinedAt: !15517)
!15520 = !DILocation(line: 95, column: 2, scope: !15161, inlinedAt: !15519)
!15521 = !DILocation(line: 237, column: 1, scope: !15488)
!15522 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2227, file: !2227, line: 239, type: !15523, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15525)
!15523 = !DISubroutineType(types: !15524)
!15524 = !{null, !721}
!15525 = !{!15526, !15527, !15528, !15530}
!15526 = !DILocalVariable(name: "ticks", arg: 1, scope: !15522, file: !2227, line: 239, type: !721)
!15527 = !DILocalVariable(name: "key", scope: !15522, file: !2227, line: 245, type: !15063)
!15528 = !DILocalVariable(name: "t", scope: !15529, file: !2227, line: 262, type: !2200)
!15529 = distinct !DILexicalBlock(scope: !15522, file: !2227, line: 261, column: 67)
!15530 = !DILocalVariable(name: "dt", scope: !15529, file: !2227, line: 263, type: !103)
!15531 = !DILocation(line: 0, scope: !15522)
!15532 = !DILocation(line: 242, column: 2, scope: !15522)
!15533 = !DILocation(line: 0, scope: !15085, inlinedAt: !15534)
!15534 = distinct !DILocation(line: 245, column: 25, scope: !15522)
!15535 = !DILocation(line: 55, column: 2, scope: !15094, inlinedAt: !15536)
!15536 = distinct !DILocation(line: 145, column: 10, scope: !15085, inlinedAt: !15534)
!15537 = !DILocation(line: 0, scope: !15094, inlinedAt: !15536)
!15538 = !DILocation(line: 261, column: 9, scope: !15522)
!15539 = !DILocation(line: 261, column: 17, scope: !15522)
!15540 = !DILocation(line: 261, column: 25, scope: !15522)
!15541 = !DILocation(line: 261, column: 37, scope: !15522)
!15542 = !DILocation(line: 261, column: 47, scope: !15522)
!15543 = !DILocation(line: 261, column: 44, scope: !15522)
!15544 = !DILocation(line: 261, column: 2, scope: !15522)
!15545 = !DILocation(line: 0, scope: !15529)
!15546 = !DILocation(line: 263, column: 12, scope: !15529)
!15547 = !DILocation(line: 265, column: 16, scope: !15529)
!15548 = !DILocation(line: 265, column: 13, scope: !15529)
!15549 = !DILocation(line: 266, column: 13, scope: !15529)
!15550 = !DILocation(line: 267, column: 3, scope: !15529)
!15551 = !DILocation(line: 0, scope: !15153, inlinedAt: !15552)
!15552 = distinct !DILocation(line: 269, column: 3, scope: !15529)
!15553 = !DILocation(line: 0, scope: !15161, inlinedAt: !15554)
!15554 = distinct !DILocation(line: 215, column: 2, scope: !15153, inlinedAt: !15552)
!15555 = !DILocation(line: 95, column: 2, scope: !15161, inlinedAt: !15554)
!15556 = !DILocation(line: 270, column: 6, scope: !15529)
!15557 = !DILocation(line: 270, column: 3, scope: !15529)
!15558 = !DILocation(line: 0, scope: !15085, inlinedAt: !15559)
!15559 = distinct !DILocation(line: 271, column: 9, scope: !15529)
!15560 = !DILocation(line: 55, column: 2, scope: !15094, inlinedAt: !15561)
!15561 = distinct !DILocation(line: 145, column: 10, scope: !15085, inlinedAt: !15559)
!15562 = !DILocation(line: 0, scope: !15094, inlinedAt: !15561)
!15563 = !DILocation(line: 272, column: 22, scope: !15529)
!15564 = distinct !{!15564, !15544, !15565}
!15565 = !DILocation(line: 273, column: 2, scope: !15522)
!15566 = !DILocation(line: 276, column: 19, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15568, file: !2227, line: 275, column: 23)
!15568 = distinct !DILexicalBlock(scope: !15522, file: !2227, line: 275, column: 6)
!15569 = !DILocation(line: 277, column: 2, scope: !15567)
!15570 = !DILocation(line: 279, column: 15, scope: !15522)
!15571 = !DILocation(line: 279, column: 12, scope: !15522)
!15572 = !DILocation(line: 280, column: 21, scope: !15522)
!15573 = !DILocation(line: 282, column: 24, scope: !15522)
!15574 = !DILocation(line: 282, column: 2, scope: !15522)
!15575 = !DILocation(line: 0, scope: !15153, inlinedAt: !15576)
!15576 = distinct !DILocation(line: 284, column: 2, scope: !15522)
!15577 = !DILocation(line: 0, scope: !15161, inlinedAt: !15578)
!15578 = distinct !DILocation(line: 215, column: 2, scope: !15153, inlinedAt: !15576)
!15579 = !DILocation(line: 95, column: 2, scope: !15161, inlinedAt: !15578)
!15580 = !DILocation(line: 285, column: 1, scope: !15522)
!15581 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2227, file: !2227, line: 287, type: !15582, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15584)
!15582 = !DISubroutineType(types: !15583)
!15583 = !{!343}
!15584 = !{!15585, !15586, !15588}
!15585 = !DILocalVariable(name: "t", scope: !15581, file: !2227, line: 289, type: !163)
!15586 = !DILocalVariable(name: "__i", scope: !15587, file: !2227, line: 291, type: !15063)
!15587 = distinct !DILexicalBlock(scope: !15581, file: !2227, line: 291, column: 2)
!15588 = !DILocalVariable(name: "__key", scope: !15587, file: !2227, line: 291, type: !15063)
!15589 = !DILocation(line: 0, scope: !15581)
!15590 = !DILocation(line: 0, scope: !15587)
!15591 = !DILocation(line: 0, scope: !15085, inlinedAt: !15592)
!15592 = distinct !DILocation(line: 291, column: 2, scope: !15587)
!15593 = !DILocation(line: 55, column: 2, scope: !15094, inlinedAt: !15594)
!15594 = distinct !DILocation(line: 145, column: 10, scope: !15085, inlinedAt: !15592)
!15595 = !DILocation(line: 0, scope: !15094, inlinedAt: !15594)
!15596 = !DILocation(line: 292, column: 7, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15598, file: !2227, line: 291, column: 24)
!15598 = distinct !DILexicalBlock(scope: !15587, file: !2227, line: 291, column: 2)
!15599 = !DILocation(line: 292, column: 19, scope: !15597)
!15600 = !DILocation(line: 0, scope: !15153, inlinedAt: !15601)
!15601 = distinct !DILocation(line: 291, column: 2, scope: !15598)
!15602 = !DILocation(line: 0, scope: !15161, inlinedAt: !15603)
!15603 = distinct !DILocation(line: 215, column: 2, scope: !15153, inlinedAt: !15601)
!15604 = !DILocation(line: 95, column: 2, scope: !15161, inlinedAt: !15603)
!15605 = !DILocation(line: 292, column: 17, scope: !15597)
!15606 = !DILocation(line: 294, column: 2, scope: !15581)
!15607 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2227, file: !2227, line: 297, type: !135, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !162)
!15608 = !DILocation(line: 300, column: 19, scope: !15607)
!15609 = !DILocation(line: 300, column: 9, scope: !15607)
!15610 = !DILocation(line: 300, column: 2, scope: !15607)
!15611 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2227, file: !2227, line: 306, type: !15582, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !162)
!15612 = !DILocation(line: 308, column: 9, scope: !15611)
!15613 = !DILocation(line: 308, column: 2, scope: !15611)
!15614 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2227, file: !2227, line: 319, type: !6104, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15615)
!15615 = !{!15616, !15617, !15618, !15619}
!15616 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15614, file: !2227, line: 319, type: !137)
!15617 = !DILocalVariable(name: "start_cycles", scope: !15614, file: !2227, line: 328, type: !137)
!15618 = !DILocalVariable(name: "cycles_to_wait", scope: !15614, file: !2227, line: 331, type: !137)
!15619 = !DILocalVariable(name: "current_cycles", scope: !15620, file: !2227, line: 338, type: !137)
!15620 = distinct !DILexicalBlock(scope: !15621, file: !2227, line: 337, column: 11)
!15621 = distinct !DILexicalBlock(scope: !15622, file: !2227, line: 337, column: 2)
!15622 = distinct !DILexicalBlock(scope: !15614, file: !2227, line: 337, column: 2)
!15623 = !DILocation(line: 0, scope: !15614)
!15624 = !DILocation(line: 322, column: 19, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15614, file: !2227, line: 322, column: 6)
!15626 = !DILocation(line: 322, column: 6, scope: !15614)
!15627 = !DILocation(line: 328, column: 26, scope: !15614)
!15628 = !DILocation(line: 333, column: 43, scope: !15614)
!15629 = !DILocation(line: 337, column: 2, scope: !15614)
!15630 = !DILocation(line: 338, column: 29, scope: !15620)
!15631 = !DILocation(line: 0, scope: !15620)
!15632 = !DILocation(line: 341, column: 23, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15620, file: !2227, line: 341, column: 7)
!15634 = !DILocation(line: 341, column: 39, scope: !15633)
!15635 = !DILocation(line: 349, column: 1, scope: !15614)
!15636 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !370, file: !370, line: 1675, type: !135, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !162)
!15637 = !DILocation(line: 1677, column: 9, scope: !15636)
!15638 = !DILocation(line: 1677, column: 2, scope: !15636)
!15639 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !15640, file: !15640, line: 24, type: !135, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !162)
!15640 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15641 = !DILocation(line: 26, column: 9, scope: !15639)
!15642 = !DILocation(line: 26, column: 2, scope: !15639)
!15643 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2227, file: !2227, line: 364, type: !15644, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !15646)
!15644 = !DISubroutineType(types: !15645)
!15645 = !{!163, !15053}
!15646 = !{!15647, !15648}
!15647 = !DILocalVariable(name: "timeout", arg: 1, scope: !15643, file: !2227, line: 364, type: !15053)
!15648 = !DILocalVariable(name: "dt", scope: !15643, file: !2227, line: 366, type: !1460)
!15649 = !DILocation(line: 0, scope: !15643)
!15650 = !DILocation(line: 368, column: 6, scope: !15643)
!15651 = !DILocation(line: 371, column: 10, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15653, file: !2227, line: 370, column: 47)
!15653 = distinct !DILexicalBlock(scope: !15654, file: !2227, line: 370, column: 13)
!15654 = distinct !DILexicalBlock(scope: !15643, file: !2227, line: 368, column: 6)
!15655 = !DILocation(line: 371, column: 3, scope: !15652)
!15656 = !DILocation(line: 376, column: 58, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15658, file: !2227, line: 376, column: 7)
!15658 = distinct !DILexicalBlock(scope: !15653, file: !2227, line: 372, column: 9)
!15659 = !DILocation(line: 376, column: 7, scope: !15658)
!15660 = !DILocation(line: 376, column: 43, scope: !15657)
!15661 = !DILocation(line: 377, column: 4, scope: !15662)
!15662 = distinct !DILexicalBlock(scope: !15657, file: !2227, line: 376, column: 64)
!15663 = !DILocation(line: 379, column: 10, scope: !15658)
!15664 = !DILocation(line: 379, column: 33, scope: !15658)
!15665 = !DILocation(line: 379, column: 31, scope: !15658)
!15666 = !DILocation(line: 379, column: 3, scope: !15658)
!15667 = !DILocation(line: 0, scope: !15654)
!15668 = !DILocation(line: 381, column: 1, scope: !15643)
!15669 = distinct !DISubprogram(name: "boot_banner", scope: !15670, file: !15670, line: 26, type: !2794, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !162)
!15670 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15671 = !DILocation(line: 34, column: 2, scope: !15669)
!15672 = !DILocation(line: 36, column: 1, scope: !15669)
