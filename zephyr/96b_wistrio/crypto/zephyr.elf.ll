; ModuleID = 'build/96b_wistrio/crypto/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.mode_test = type { i8*, void (%struct.device*)* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.ctr_params }
%struct.ctr_params = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.ctr_params }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.crypto_driver_api = type { i32 (%struct.device*)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)*, i32 (%struct.device*, %struct.hash_ctx*, i32)*, i32 (%struct.device*, %struct.hash_ctx*)*, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* }
%struct.cipher_ctx = type { %struct.cipher_ops, %union.anon.4, %struct.device*, i8*, i8*, %union.anon.5, i16, i16 }
%struct.cipher_ops = type { i32, %union.anon.3 }
%union.anon.3 = type { i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)* }
%struct.cipher_pkt = type { i8*, i32, i8*, i32, i32, %struct.cipher_ctx* }
%union.anon.4 = type { i8* }
%union.anon.5 = type { %struct.ctr_params }
%struct.hash_ctx = type { %struct.device*, i8*, i32 (%struct.hash_ctx*, %struct.hash_pkt*, i1)*, i8, i16 }
%struct.hash_pkt = type { i8*, i32, i8*, %struct.hash_ctx* }
%struct.tc_shim_drv_state = type { i32, %struct.tc_aes_key_sched_struct }
%struct.tc_aes_key_sched_struct = type { [44 x i32] }
%struct.gpio_stm32_config = type { %struct.ctr_params, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.ctr_params, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.cipher_aead_pkt = type { %struct.cipher_pkt*, i8*, i32, i8* }
%struct.ccm_params = type { i16, i16 }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.ctr_params, %struct.ctr_params }
%struct.tc_ccm_mode_struct = type { %struct.tc_aes_key_sched_struct*, i8*, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.ctr_params*, %struct.ctr_params* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236564 to i8*), void (i8*)* inttoptr (i32 134234901 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236564 to i8*), void (i8*)* inttoptr (i32 134234891 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236564 to i8*), void (i8*)* inttoptr (i32 134234881 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236564 to i8*), void (i8*)* inttoptr (i32 134234871 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236564 to i8*), void (i8*)* inttoptr (i32 134234861 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236564 to i8*), void (i8*)* inttoptr (i32 134234851 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236564 to i8*), void (i8*)* inttoptr (i32 134234841 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [40 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_crypto_tinycrypt to i8*), i8* bitcast (%struct.init_entry* @__init___device_crypto_tinycrypt to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_tinycrypt to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Please provision the key separately as the module doesnt support a raw key\0A\00", align 1
@.str.2 = private unnamed_addr constant [90 x i8] c"%c: The app assumes sync semantics. Please rewrite the app accordingly before proceeding\0A\00", align 1
@.str.3 = private unnamed_addr constant [95 x i8] c"%c: The app assumes distinct IO buffers. Please rewrite the app accordingly before proceeding\0A\00", align 1
@cap_flags = dso_local local_unnamed_addr global i32 0, align 4, !dbg !314
@__const.ecb_mode.ecb_key = private unnamed_addr constant [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1
@__const.ecb_mode.ecb_plaintext = private unnamed_addr constant [16 x i8] c"\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF", align 1
@__const.ecb_mode.ecb_ciphertext = private unnamed_addr constant [16 x i8] c"i\C4\E0\D8j{\040\D8\CD\B7\80p\B4\C5Z", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"%c: ECB mode ENCRYPT - Failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"%c: Output length (encryption): %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"%c: ECB mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"%c: ECB mode ENCRYPT - Match\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"%c: ECB mode DECRYPT - Failed\0A\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"%c: Output length (decryption): %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [77 x i8] c"%c: ECB mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"%c: ECB mode DECRYPT - Match\0A\00", align 1
@key = internal global [16 x i8] c"+~\15\16(\AE\D2\A6\AB\F7\15\88\09\CFO<", align 1, !dbg !316
@plaintext = internal global [64 x i8] c"k\C1\BE\E2.@\9F\96\E9=~\11s\93\17*\AE-\8AW\1E\03\AC\9C\9E\B7o\ACE\AF\8EQ0\C8\1CF\A3\\\E4\11\E5\FB\C1\19\1A\0AR\EF\F6\9F$E\DFO\9B\17\AD+A{\E6l7\10", align 1, !dbg !318
@cbc_mode.iv = internal global [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1, !dbg !291
@.str.12 = private unnamed_addr constant [31 x i8] c"%c: CBC mode ENCRYPT - Failed\0A\00", align 1
@cbc_ciphertext = internal constant [80 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0FvI\AB\AC\81\19\B2F\CE\E9\8E\9B\12\E9\19}P\86\CB\9BPr\19\EE\95\DB\11:\91vx\B2s\BE\D6\B8\E3\C1t;q\16\E6\9E\22\22\95\16?\F1\CA\A1h\1F\AC\09\12\0E\CA0u\86\E1\A7", align 1, !dbg !320
@.str.13 = private unnamed_addr constant [75 x i8] c"%c: CBC mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"%c: CBC mode ENCRYPT - Match\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"%c: CBC mode DECRYPT - Failed\0A\00", align 1
@.str.16 = private unnamed_addr constant [77 x i8] c"%c: CBC mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%c: CBC mode DECRYPT - Match\0A\00", align 1
@__const.ctr_mode.iv = private unnamed_addr constant [12 x i8] c"\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"%c: CTR mode ENCRYPT - Failed\0A\00", align 1
@ctr_ciphertext = internal constant [64 x i8] c"\22\E5/\B1w\D8e\B2\F7\C6\B5\12i-\11M\EDl\1Cr%\DA\F6\A2\AA\D9\D3\DA-\BA!h5\C0\AFko@\C3\C6\EF\C5\85\D0\90,\C2c\12+\C5\8Er\DE\\\A2\A3\\\85:\B9,\06\BB", align 1, !dbg !324
@.str.19 = private unnamed_addr constant [75 x i8] c"%c: CTR mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"%c: CTR mode ENCRYPT - Match\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c: CTR mode DECRYPT - Failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [77 x i8] c"%c: CTR mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c: CTR mode DECRYPT - Match\0A\00", align 1
@ccm_key = internal global [16 x i8] c"\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF", align 1, !dbg !327
@ccm_data = internal global [23 x i8] c"\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E", align 1, !dbg !329
@ccm_hdr = internal global [8 x i8] c"\00\01\02\03\04\05\06\07", align 1, !dbg !334
@ccm_nonce = internal global [13 x i8] c"\00\00\00\03\02\01\00\A0\A1\A2\A3\A4\A5", align 1, !dbg !339
@.str.24 = private unnamed_addr constant [31 x i8] c"%c: CCM mode ENCRYPT - Failed\0A\00", align 1
@ccm_expected = internal constant [31 x i8] c"X\8C\97\9Aa\C6c\D2\F0f\D0\C2\C0\F9\89\80m_ka\DA\C3\84\17\E8\D1,\FD\F9&\E0", align 1, !dbg !344
@.str.25 = private unnamed_addr constant [75 x i8] c"%c: CCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"%c: CCM mode ENCRYPT - Match\0A\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"%c: CCM mode DECRYPT - Failed\0A\00", align 1
@.str.28 = private unnamed_addr constant [77 x i8] c"%c: CCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"%c: CCM mode DECRYPT - Match\0A\00", align 1
@gcm_key = internal global [16 x i8] c"\07\1B\11;\0C\A7C\FE\CC\CF=\05\1Fss\82", align 1, !dbg !349
@gcm_data = internal global [42 x i8] c"\08\00\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./01234\00\04", align 1, !dbg !351
@gcm_hdr = internal global [20 x i8] c"\E2\01\06\D7\CD\0D\F0v\1E\8D\CD=\88\E5L*v\D4W\ED", align 1, !dbg !356
@gcm_nonce = internal global [12 x i8] c"\F0v\1E\8D\CD=\00\01v\D4W\ED", align 1, !dbg !361
@.str.30 = private unnamed_addr constant [31 x i8] c"%c: GCM mode ENCRYPT - Failed\0A\00", align 1
@gcm_expected = internal constant [58 x i8] c"\13\B4\C7+8\9D\C5\01\8Er\A1q\DD\85\A5\D3u\22t\D3\A0\19\FB\CA\ED\09\A4%\CD\9B.\1C\9Br\EE\E7\C9\DE}R\B3\F3\D6\A5(OJm?\E2*]l+\96\04\94\C3", align 1, !dbg !366
@.str.31 = private unnamed_addr constant [75 x i8] c"%c: GCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"%c: GCM mode ENCRYPT - Match\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c: GCM mode DECRYPT - Failed\0A\00", align 1
@.str.34 = private unnamed_addr constant [77 x i8] c"%c: GCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"%c: GCM mode DECRYPT - Match\0A\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"%c: %s pseudo device not found\0A\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ECB Mode\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"CBC Mode\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"CTR Mode\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"CCM Mode\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"GCM Mode\00", align 1
@__const.main.modes = private unnamed_addr constant [6 x %struct.mode_test] [%struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), void (%struct.device*)* @ecb_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), void (%struct.device*)* @cbc_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), void (%struct.device*)* @ctr_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), void (%struct.device*)* @ccm_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), void (%struct.device*)* @gcm_mode }, %struct.mode_test zeroinitializer], align 4
@.str.43 = private unnamed_addr constant [22 x i8] c"%c: Incompatible h/w\0A\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"%c: Cipher Sample\0A\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"Was waiting for: \0A\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"0x%02x \00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"\0A But got:\0A\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !377
@.str.1.52 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !401
@.str.57 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !412
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !469
@.str.63 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.65 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.66 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.64 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.68 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.69 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.67 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@inv_sbox = internal unnamed_addr constant [256 x i8] c"R\09j\D506\A58\BF@\A3\9E\81\F3\D7\FB|\E39\82\9B/\FF\874\8ECD\C4\DE\E9\CBT{\942\A6\C2#=\EEL\95\0BB\FA\C3N\08.\A1f(\D9$\B2v[\A2Im\8B\D1%r\F8\F6d\86h\98\16\D4\A4\\\CC]e\B6\92lpHP\FD\ED\B9\DA^\15FW\A7\8D\9D\84\90\D8\AB\00\8C\BC\D3\0A\F7\E4X\05\B8\B3E\06\D0,\1E\8F\CA?\0F\02\C1\AF\BD\03\01\13\8Ak:\91\11AOg\DC\EA\97\F2\CF\CE\F0\B4\E6s\96\ACt\22\E7\AD5\85\E2\F97\E8\1Cu\DFnG\F1\1Aq\1D)\C5\89o\B7b\0E\AA\18\BE\1B\FCV>K\C6\D2y \9A\DB\C0\FEx\CDZ\F4\1F\DD\A83\88\07\C71\B1\12\10Y'\80\EC_`Q\7F\A9\19\B5J\0D-\E5z\9F\93\C9\9C\EF\A0\E0;M\AE*\F5\B0\C8\EB\BB<\83S\99a\17+\04~\BAw\D6&\E1i\14cU!\0C}", align 1, !dbg !498
@__const.tc_aes128_set_encrypt_key.rconst = private unnamed_addr constant [11 x i32] [i32 0, i32 16777216, i32 33554432, i32 67108864, i32 134217728, i32 268435456, i32 536870912, i32 1073741824, i32 -2147483648, i32 452984832, i32 905969664], align 4
@sbox = internal unnamed_addr constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\\\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 1, !dbg !518
@.str.74 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.75 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.76 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.77 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.108 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.103 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.104 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.105 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.106 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.107 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.98 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.99 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.93 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.100 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10.101 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11.102 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12.91 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.13.92 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.14.94 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.15.95 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.16.96 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.17.97 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.18.84 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.19.85 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.20.86 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.21.87 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.22.88 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.23.89 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.24.90 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.25.83 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.26.82 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.27.80 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.28.81 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !530
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.ctr_params { i32 101384192 } }], align 4, !dbg !677
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !536
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !686
@.str.120 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.121 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !722
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.136, i32 0, i32 0), %struct.ctr_params { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.137, i32 0, i32 0), %struct.ctr_params { i32 285933596 } }], align 4, !dbg !732
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !737
@.str.136 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.137 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !757
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !865
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1016
@.str.139 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !985
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !970
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.139, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !943
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !959
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !987
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1001
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1003
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1005
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1007
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1009
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1011
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1021
@.str.141 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1048
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1125
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1114
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1166
@.str.150 = private unnamed_addr constant [10 x i8] c"tinycrypt\00", align 1
@log_const_tinycrypt = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.150, i32 0, i32 0), i8 4 }, section ".log_const_tinycrypt", align 4, !dbg !1232
@__devicehdl_crypto_tinycrypt = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1043
@.str.1.152 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@crypto_enc_funcs = internal global %struct.crypto_driver_api { i32 (%struct.device*)* @tc_query_caps, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)* @tc_session_setup, i32 (%struct.device*, %struct.cipher_ctx*)* @tc_session_free, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)* null, i32 (%struct.device*, %struct.hash_ctx*, i32)* null, i32 (%struct.device*, %struct.hash_ctx*)* null, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* null }, align 4, !dbg !1270
@__devstate_crypto_tinycrypt = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1268
@__device_crypto_tinycrypt = internal constant %struct.device { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.152, i32 0, i32 0), i8* null, i8* bitcast (%struct.crypto_driver_api* @crypto_enc_funcs to i8*), %struct.device_state* @__devstate_crypto_tinycrypt, i8* null, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_crypto_tinycrypt, i32 0, i32 0) }, section ".z_device_POST_KERNEL90_", align 4, !dbg !1241
@__init___device_crypto_tinycrypt = internal constant %struct.init_entry { i32 (%struct.device*)* @tc_shim_init, %struct.device* @__device_crypto_tinycrypt }, section ".z_init_POST_KERNEL90_", align 4, !dbg !1257
@.str.2.153 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported algo\0A\00", align 1
@.str.3.154 = private unnamed_addr constant [40 x i8] c"%c: Async not supported by this driver\0A\00", align 1
@.str.4.155 = private unnamed_addr constant [34 x i8] c"%c: TC Shim Unsupported key size\0A\00", align 1
@.str.5.156 = private unnamed_addr constant [44 x i8] c"%c: Tinycrypt supports only 32 bit counter\0A\00", align 1
@.str.6.157 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported mode\0A\00", align 1
@.str.7.158 = private unnamed_addr constant [30 x i8] c"%c: Max sessions in progress\0A\00", align 1
@tc_driver_state = internal global [2 x %struct.tc_shim_drv_state] zeroinitializer, align 4, !dbg !1398
@.str.8.159 = private unnamed_addr constant [38 x i8] c"%c: TC internal error in setting key\0A\00", align 1
@.str.9.168 = private unnamed_addr constant [45 x i8] c"%c: TC internal error during CBC encryption\0A\00", align 1
@.str.10.167 = private unnamed_addr constant [37 x i8] c"%c: TC internal error during CTR OP\0A\00", align 1
@.str.11.165 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM encryption config\0A\00", align 1
@.str.12.166 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM Encryption OP\0A\00", align 1
@.str.13.163 = private unnamed_addr constant [43 x i8] c"%c: TC needs contiguous iv and ciphertext\0A\00", align 1
@.str.14.164 = private unnamed_addr constant [50 x i8] c"%c: Func TC internal error during CBC decryption\0A\00", align 1
@.str.15.160 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM decryption config\0A\00", align 1
@.str.16.161 = private unnamed_addr constant [51 x i8] c"%c: TC needs contiguous hash  at the end of inbuf\0A\00", align 1
@.str.17.162 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM decryption OP\0A\00", align 1
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1037
@.str.171 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1414
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1658
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1636
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1622
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1570
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1035
@.str.1.174 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1660
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1640
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1638
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1587
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1033
@.str.2.175 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1673
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1644
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1642
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1596
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1031
@.str.3.176 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1675
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1648
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1646
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1605
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1029
@.str.4.177 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1677
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1652
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1650
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1611
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1027
@.str.5.178 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1679
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1656
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1654
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1620
@.str.182 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.182, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1681
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1041
@.str.1.183 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1841
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1896
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1837
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1898
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.183, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1822
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1824
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1039
@.str.2.188 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1904
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1839
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1914
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.188, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1833
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1835
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1885
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1888
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1890
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1893
@.str.3.185 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.4.191 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.5.193 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.6.194 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.141, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1098
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1906
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1908
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1910
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1912
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.7 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1921
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2030
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2032
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2028
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1999
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !2034
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.171, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1568
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.174, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1585
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.175, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1594
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.176, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1603
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.177, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1609
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.178, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1618
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2121
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !2145
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !2148
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2151
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2155
@.str.230 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.234 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.235 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.236 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.240 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.241 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.242 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.243 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.244 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.239 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.238 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.240, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.241, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.242, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.243, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.244, i32 0, i32 0)], align 4
@.str.246 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2162
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2385
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2371
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2380
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2392
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2397
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.255 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.262, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.263, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.264, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.265, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.259, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.266, i32 0, i32 0)], align 4, !dbg !2425
@.str.260 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.261 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.262 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.263 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.264 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.265 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.259 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.266 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2539
@.str.8.258 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2552
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2660
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2663
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2665
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2390
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2382
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2667
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2703
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2249
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2701
@.str.319 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3272 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3276, !srcloc !3277
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3278, !srcloc !3279
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3280, !srcloc !3281
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3282, !srcloc !3283
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3284, !srcloc !3285
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3286, !srcloc !3287
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3288, !srcloc !3289
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3290, !srcloc !3291
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3292, !srcloc !3293
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3294, !srcloc !3295
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3296, !srcloc !3297
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3298, !srcloc !3299
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3300, !srcloc !3301
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3302, !srcloc !3303
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3304, !srcloc !3305
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3306, !srcloc !3307
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3308, !srcloc !3309
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3310, !srcloc !3311
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3312, !srcloc !3313
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3314, !srcloc !3315
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3316, !srcloc !3317
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3318, !srcloc !3319
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3322, !srcloc !3323
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3324, !srcloc !3325
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3326, !srcloc !3327
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3330, !srcloc !3333
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3366, !srcloc !3367
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3368, !srcloc !3369
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3372, !srcloc !3373
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3374, !srcloc !3375
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3376, !srcloc !3377
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3378, !srcloc !3379
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3380, !srcloc !3381
  ret void, !dbg !3382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @validate_hw_compatibility(%struct.device* noundef %0) local_unnamed_addr #1 !dbg !3385 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3387, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.value(metadata i32 0, metadata !3388, metadata !DIExpression()), !dbg !3389
  %2 = tail call fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) #26, !dbg !3390
  call void @llvm.dbg.value(metadata i32 %2, metadata !3388, metadata !DIExpression()), !dbg !3389
  %3 = and i32 %2, 2, !dbg !3391
  %4 = icmp eq i32 %3, 0, !dbg !3393
  br i1 %4, label %5, label %8, !dbg !3394

5:                                                ; preds = %1
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3395
  %7 = zext i8 %6 to i32, !dbg !3395
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7) #27, !dbg !3395
  br label %21, !dbg !3401

8:                                                ; preds = %1
  %9 = and i32 %2, 32, !dbg !3402
  %10 = icmp eq i32 %9, 0, !dbg !3404
  br i1 %10, label %11, label %14, !dbg !3405

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3406
  %13 = zext i8 %12 to i32, !dbg !3406
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([90 x i8], [90 x i8]* @.str.2, i32 0, i32 0), i32 noundef %13) #27, !dbg !3406
  br label %21, !dbg !3412

14:                                               ; preds = %8
  %15 = and i32 %2, 16, !dbg !3413
  %16 = icmp eq i32 %15, 0, !dbg !3415
  br i1 %16, label %17, label %20, !dbg !3416

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3417
  %19 = zext i8 %18 to i32, !dbg !3417
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.3, i32 0, i32 0), i32 noundef %19) #27, !dbg !3417
  br label %21, !dbg !3423

20:                                               ; preds = %14
  store i32 50, i32* @cap_flags, align 4, !dbg !3424
  br label %21, !dbg !3425

21:                                               ; preds = %20, %17, %11, %5
  %22 = phi i32 [ -1, %5 ], [ -1, %11 ], [ -1, %17 ], [ 0, %20 ], !dbg !3389
  ret i32 %22, !dbg !3426
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) unnamed_addr #1 !dbg !3427 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3429, metadata !DIExpression()), !dbg !3432
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3433
  %3 = bitcast i8** %2 to %struct.crypto_driver_api**, !dbg !3433
  %4 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %3, align 4, !dbg !3433
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %4, metadata !3430, metadata !DIExpression()), !dbg !3432
  %5 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %4, i32 0, i32 0, !dbg !3434
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !3434
  %7 = tail call i32 %6(%struct.device* noundef %0) #27, !dbg !3435
  call void @llvm.dbg.value(metadata i32 %7, metadata !3431, metadata !DIExpression()), !dbg !3432
  ret i32 %7, !dbg !3436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !3437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3442, metadata !DIExpression()), !dbg !3443
  %2 = add i32 %0, -1, !dbg !3444
  %3 = icmp ult i32 %2, 3, !dbg !3444
  %4 = trunc i32 %2 to i24, !dbg !3444
  %5 = shl i24 %4, 3, !dbg !3444
  %6 = lshr i24 4806469, %5, !dbg !3444
  %7 = trunc i24 %6 to i8, !dbg !3444
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3444
  ret i8 %8, !dbg !3445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ecb_mode(%struct.device* noundef %0) #1 !dbg !3446 {
  %2 = alloca [16 x i8], align 1
  %3 = alloca [16 x i8], align 1
  %4 = alloca [16 x i8], align 1
  %5 = alloca [16 x i8], align 1
  %6 = alloca [16 x i8], align 1
  %7 = alloca %struct.cipher_ctx, align 4
  %8 = alloca %struct.cipher_pkt, align 4
  %9 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3448, metadata !DIExpression()), !dbg !3458
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !3459
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3459
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !3449, metadata !DIExpression()), !dbg !3460
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %10, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_key, i32 0, i32 0), i32 16, i1 false), !dbg !3460
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i32 0, i32 0, !dbg !3461
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3461
  call void @llvm.dbg.declare(metadata [16 x i8]* %3, metadata !3450, metadata !DIExpression()), !dbg !3462
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %11, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_plaintext, i32 0, i32 0), i32 16, i1 false), !dbg !3462
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !3463
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3463
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !3451, metadata !DIExpression()), !dbg !3464
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %12, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_ciphertext, i32 0, i32 0), i32 16, i1 false), !dbg !3464
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0, !dbg !3465
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3465
  call void @llvm.dbg.declare(metadata [16 x i8]* %5, metadata !3452, metadata !DIExpression()), !dbg !3466
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %13, i8 0, i32 16, i1 false), !dbg !3466
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3467
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3467
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3453, metadata !DIExpression()), !dbg !3468
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %14, i8 0, i32 16, i1 false), !dbg !3468
  %15 = bitcast %struct.cipher_ctx* %7 to i8*, !dbg !3469
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3469
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %7, metadata !3454, metadata !DIExpression()), !dbg !3470
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %15, i8 0, i64 28, i1 false), !dbg !3470
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 1, i32 0, !dbg !3471
  store i8* %10, i8** %16, align 4, !dbg !3471
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 6, !dbg !3472
  store i16 16, i16* %17, align 4, !dbg !3472
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 7, !dbg !3472
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3473
  %20 = trunc i32 %19 to i16, !dbg !3473
  store i16 %20, i16* %18, align 2, !dbg !3472
  %21 = bitcast %struct.cipher_pkt* %8 to i8*, !dbg !3474
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3474
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %8, metadata !3455, metadata !DIExpression()), !dbg !3475
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 0, !dbg !3476
  store i8* %11, i8** %22, align 4, !dbg !3476
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 1, !dbg !3476
  store i32 16, i32* %23, align 4, !dbg !3476
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 2, !dbg !3476
  store i8* %13, i8** %24, align 4, !dbg !3476
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 3, !dbg !3476
  store i32 16, i32* %25, align 4, !dbg !3476
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 4, !dbg !3476
  store i32 0, i32* %26, align 4, !dbg !3476
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 5, !dbg !3476
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3476
  %28 = bitcast %struct.cipher_pkt* %9 to i8*, !dbg !3477
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3477
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %9, metadata !3456, metadata !DIExpression()), !dbg !3478
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 0, !dbg !3479
  store i8* %13, i8** %29, align 4, !dbg !3479
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 1, !dbg !3479
  store i32 16, i32* %30, align 4, !dbg !3479
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 2, !dbg !3479
  store i8* %14, i8** %31, align 4, !dbg !3479
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 3, !dbg !3479
  store i32 16, i32* %32, align 4, !dbg !3479
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 4, !dbg !3479
  store i32 0, i32* %33, align 4, !dbg !3479
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 5, !dbg !3479
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3479
  %35 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 1) #26, !dbg !3480
  %36 = icmp eq i32 %35, 0, !dbg !3480
  br i1 %36, label %37, label %74, !dbg !3482

37:                                               ; preds = %1
  %38 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %8) #26, !dbg !3483
  %39 = icmp eq i32 %38, 0, !dbg !3483
  br i1 %39, label %43, label %40, !dbg !3485

40:                                               ; preds = %37
  %41 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3486
  %42 = zext i8 %41 to i32, !dbg !3486
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 noundef %42) #27, !dbg !3486
  br label %73, !dbg !3492

43:                                               ; preds = %37
  %44 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3493
  %45 = zext i8 %44 to i32, !dbg !3493
  %46 = load i32, i32* %26, align 4, !dbg !3493
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %45, i32 noundef %46) #27, !dbg !3493
  %47 = load i8*, i8** %24, align 4, !dbg !3498
  %48 = call i32 @memcmp(i8* noundef %47, i8* noundef nonnull %12, i32 noundef 16) #27, !dbg !3500
  %49 = icmp eq i32 %48, 0, !dbg !3500
  br i1 %49, label %54, label %50, !dbg !3501

50:                                               ; preds = %43
  %51 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3502
  %52 = zext i8 %51 to i32, !dbg !3502
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i32 0, i32 0), i32 noundef %52) #27, !dbg !3502
  %53 = load i8*, i8** %24, align 4, !dbg !3508
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %12, i8* noundef %53, i32 noundef 16) #26, !dbg !3509
  br label %73, !dbg !3510

54:                                               ; preds = %43
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i32 noundef %45) #27, !dbg !3511
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3516
  %55 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 0) #26, !dbg !3517
  %56 = icmp eq i32 %55, 0, !dbg !3517
  br i1 %56, label %57, label %74, !dbg !3519

57:                                               ; preds = %54
  %58 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %9) #26, !dbg !3520
  %59 = icmp eq i32 %58, 0, !dbg !3520
  br i1 %59, label %63, label %60, !dbg !3522

60:                                               ; preds = %57
  %61 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3523
  %62 = zext i8 %61 to i32, !dbg !3523
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0), i32 noundef %62) #27, !dbg !3523
  br label %73, !dbg !3529

63:                                               ; preds = %57
  %64 = load i32, i32* %33, align 4, !dbg !3530
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %45, i32 noundef %64) #27, !dbg !3530
  %65 = load i8*, i8** %31, align 4, !dbg !3535
  %66 = call i32 @memcmp(i8* noundef %65, i8* noundef nonnull %11, i32 noundef 16) #27, !dbg !3537
  %67 = icmp eq i32 %66, 0, !dbg !3537
  br i1 %67, label %72, label %68, !dbg !3538

68:                                               ; preds = %63
  %69 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3539
  %70 = zext i8 %69 to i32, !dbg !3539
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.10, i32 0, i32 0), i32 noundef %70) #27, !dbg !3539
  %71 = load i8*, i8** %31, align 4, !dbg !3545
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %11, i8* noundef %71, i32 noundef 16) #26, !dbg !3546
  br label %73, !dbg !3547

72:                                               ; preds = %63
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i32 noundef %45) #27, !dbg !3548
  br label %73, !dbg !3553

73:                                               ; preds = %72, %68, %60, %50, %40
  call void @llvm.dbg.label(metadata !3457), !dbg !3554
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3555
  br label %74, !dbg !3556

74:                                               ; preds = %54, %1, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3556
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3556
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3556
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3556
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3556
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3556
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3556
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3556
  ret void, !dbg !3556
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #5

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3557 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3559, metadata !DIExpression()), !dbg !3566
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3560, metadata !DIExpression()), !dbg !3566
  call void @llvm.dbg.value(metadata i32 1, metadata !3561, metadata !DIExpression()), !dbg !3566
  call void @llvm.dbg.value(metadata i32 %2, metadata !3562, metadata !DIExpression()), !dbg !3566
  call void @llvm.dbg.value(metadata i32 %3, metadata !3563, metadata !DIExpression()), !dbg !3566
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3567
  %6 = bitcast i8** %5 to %struct.crypto_driver_api**, !dbg !3567
  %7 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %6, align 4, !dbg !3567
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %7, metadata !3564, metadata !DIExpression()), !dbg !3566
  %8 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 2, !dbg !3568
  store %struct.device* %0, %struct.device** %8, align 4, !dbg !3569
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !3570
  store i32 %2, i32* %9, align 4, !dbg !3571
  call void @llvm.dbg.value(metadata i16 undef, metadata !3565, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !3566
  call void @llvm.dbg.value(metadata i16 undef, metadata !3565, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_and, DW_OP_stack_value)), !dbg !3566
  call void @llvm.dbg.value(metadata i16 undef, metadata !3565, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 96, DW_OP_and, DW_OP_stack_value)), !dbg !3566
  %10 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %7, i32 0, i32 1, !dbg !3572
  %11 = load i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)** %10, align 4, !dbg !3572
  %12 = tail call i32 %11(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef 1, i32 noundef %2, i32 noundef %3) #27, !dbg !3573
  ret i32 %12, !dbg !3574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) unnamed_addr #1 !dbg !3575 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3577, metadata !DIExpression()), !dbg !3579
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3578, metadata !DIExpression()), !dbg !3579
  %3 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3580
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %3, align 4, !dbg !3581
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, i32 0, !dbg !3582
  %5 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)** %4, align 4, !dbg !3582
  %6 = tail call i32 %5(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) #27, !dbg !3583
  ret i32 %6, !dbg !3584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_buffer_comparison(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #1 !dbg !3585 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3589, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i8* %1, metadata !3590, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i32 %2, metadata !3591, metadata !DIExpression()), !dbg !3594
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0)) #27, !dbg !3595
  call void @llvm.dbg.value(metadata i32 0, metadata !3592, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i32 1, metadata !3593, metadata !DIExpression()), !dbg !3594
  %4 = icmp eq i32 %2, 0, !dbg !3596
  br i1 %4, label %5, label %6, !dbg !3599

5:                                                ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3600
  call void @llvm.dbg.value(metadata i32 0, metadata !3592, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i32 1, metadata !3593, metadata !DIExpression()), !dbg !3594
  br label %33, !dbg !3601

6:                                                ; preds = %3, %14
  %7 = phi i32 [ %17, %14 ], [ 1, %3 ]
  %8 = phi i32 [ %16, %14 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3593, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i32 %8, metadata !3592, metadata !DIExpression()), !dbg !3594
  %9 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !3603
  %10 = load i8, i8* %9, align 1, !dbg !3603
  %11 = zext i8 %10 to i32, !dbg !3603
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %11) #27, !dbg !3605
  %12 = icmp eq i32 %7, 10, !dbg !3606
  br i1 %12, label %13, label %14, !dbg !3608

13:                                               ; preds = %6
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3609
  call void @llvm.dbg.value(metadata i32 0, metadata !3593, metadata !DIExpression()), !dbg !3594
  br label %14, !dbg !3611

14:                                               ; preds = %6, %13
  %15 = phi i32 [ 0, %13 ], [ %7, %6 ], !dbg !3612
  call void @llvm.dbg.value(metadata i32 %15, metadata !3593, metadata !DIExpression()), !dbg !3594
  %16 = add nuw i32 %8, 1, !dbg !3613
  call void @llvm.dbg.value(metadata i32 %16, metadata !3592, metadata !DIExpression()), !dbg !3594
  %17 = add nsw i32 %15, 1, !dbg !3614
  call void @llvm.dbg.value(metadata i32 %17, metadata !3593, metadata !DIExpression()), !dbg !3594
  %18 = icmp eq i32 %16, %2, !dbg !3596
  br i1 %18, label %19, label %6, !dbg !3599, !llvm.loop !3615

19:                                               ; preds = %14
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3600
  call void @llvm.dbg.value(metadata i32 0, metadata !3592, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i32 1, metadata !3593, metadata !DIExpression()), !dbg !3594
  br i1 %4, label %33, label %20, !dbg !3601

20:                                               ; preds = %19, %28
  %21 = phi i32 [ %31, %28 ], [ 1, %19 ]
  %22 = phi i32 [ %30, %28 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3593, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i32 %22, metadata !3592, metadata !DIExpression()), !dbg !3594
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !3617
  %24 = load i8, i8* %23, align 1, !dbg !3617
  %25 = zext i8 %24 to i32, !dbg !3617
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %25) #27, !dbg !3620
  %26 = icmp eq i32 %21, 10, !dbg !3621
  br i1 %26, label %27, label %28, !dbg !3623

27:                                               ; preds = %20
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3624
  call void @llvm.dbg.value(metadata i32 0, metadata !3593, metadata !DIExpression()), !dbg !3594
  br label %28, !dbg !3626

28:                                               ; preds = %20, %27
  %29 = phi i32 [ 0, %27 ], [ %21, %20 ], !dbg !3627
  call void @llvm.dbg.value(metadata i32 %29, metadata !3593, metadata !DIExpression()), !dbg !3594
  %30 = add nuw i32 %22, 1, !dbg !3628
  call void @llvm.dbg.value(metadata i32 %30, metadata !3592, metadata !DIExpression()), !dbg !3594
  %31 = add nsw i32 %29, 1, !dbg !3629
  call void @llvm.dbg.value(metadata i32 %31, metadata !3593, metadata !DIExpression()), !dbg !3594
  %32 = icmp eq i32 %30, %2, !dbg !3630
  br i1 %32, label %33, label %20, !dbg !3601, !llvm.loop !3631

33:                                               ; preds = %28, %5, %19
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3633
  ret void, !dbg !3634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) unnamed_addr #1 !dbg !3635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3637, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3638, metadata !DIExpression()), !dbg !3640
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3641
  %4 = bitcast i8** %3 to %struct.crypto_driver_api**, !dbg !3641
  %5 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %4, align 4, !dbg !3641
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %5, metadata !3639, metadata !DIExpression()), !dbg !3640
  %6 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %5, i32 0, i32 2, !dbg !3642
  %7 = load i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, %struct.cipher_ctx*)** %6, align 4, !dbg !3642
  %8 = tail call i32 %7(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) #27, !dbg !3643
  ret void, !dbg !3644
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define dso_local void @cbc_mode(%struct.device* noundef %0) #1 !dbg !293 {
  %2 = alloca [80 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 4
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !298, metadata !DIExpression()), !dbg !3645
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %2, i32 0, i32 0, !dbg !3646
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3646
  call void @llvm.dbg.declare(metadata [80 x i8]* %2, metadata !299, metadata !DIExpression()), !dbg !3647
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(80) %7, i8 0, i32 80, i1 false), !dbg !3647
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3648
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3648
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !303, metadata !DIExpression()), !dbg !3649
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3649
  %9 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3650
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3650
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !307, metadata !DIExpression()), !dbg !3651
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %9, i8 0, i64 28, i1 false), !dbg !3651
  %10 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3652
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %10, align 4, !dbg !3652
  %11 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3653
  store i16 16, i16* %11, align 4, !dbg !3653
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3653
  %13 = load i32, i32* @cap_flags, align 4, !dbg !3654
  %14 = trunc i32 %13 to i16, !dbg !3654
  store i16 %14, i16* %12, align 2, !dbg !3653
  %15 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3655
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3655
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !308, metadata !DIExpression()), !dbg !3656
  %16 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3657
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %16, align 4, !dbg !3657
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3657
  store i32 64, i32* %17, align 4, !dbg !3657
  %18 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3657
  store i8* %7, i8** %18, align 4, !dbg !3657
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3657
  store i32 80, i32* %19, align 4, !dbg !3657
  %20 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3657
  store i32 0, i32* %20, align 4, !dbg !3657
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3657
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %21, align 4, !dbg !3657
  %22 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3658
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3658
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !309, metadata !DIExpression()), !dbg !3659
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3660
  store i8* %7, i8** %23, align 4, !dbg !3660
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3660
  store i32 80, i32* %24, align 4, !dbg !3660
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3660
  store i8* %8, i8** %25, align 4, !dbg !3660
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3660
  store i32 64, i32* %26, align 4, !dbg !3660
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3660
  store i32 0, i32* %27, align 4, !dbg !3660
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3660
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %28, align 4, !dbg !3660
  %29 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 1) #26, !dbg !3661
  %30 = icmp eq i32 %29, 0, !dbg !3661
  br i1 %30, label %31, label %68, !dbg !3663

31:                                               ; preds = %1
  %32 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @cbc_mode.iv, i32 0, i32 0)) #26, !dbg !3664
  %33 = icmp eq i32 %32, 0, !dbg !3664
  br i1 %33, label %37, label %34, !dbg !3666

34:                                               ; preds = %31
  %35 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3667
  %36 = zext i8 %35 to i32, !dbg !3667
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0), i32 noundef %36) #27, !dbg !3667
  br label %67, !dbg !3673

37:                                               ; preds = %31
  %38 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3674
  %39 = zext i8 %38 to i32, !dbg !3674
  %40 = load i32, i32* %20, align 4, !dbg !3674
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %39, i32 noundef %40) #27, !dbg !3674
  %41 = load i8*, i8** %18, align 4, !dbg !3679
  %42 = call i32 @memcmp(i8* noundef %41, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i32 noundef 80) #27, !dbg !3681
  %43 = icmp eq i32 %42, 0, !dbg !3681
  br i1 %43, label %48, label %44, !dbg !3682

44:                                               ; preds = %37
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3683
  %46 = zext i8 %45 to i32, !dbg !3683
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i32 0, i32 0), i32 noundef %46) #27, !dbg !3683
  %47 = load i8*, i8** %18, align 4, !dbg !3689
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i8* noundef %47, i32 noundef 80) #26, !dbg !3690
  br label %67, !dbg !3691

48:                                               ; preds = %37
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i32 noundef %39) #27, !dbg !3692
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3697
  %49 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 0) #26, !dbg !3698
  %50 = icmp eq i32 %49, 0, !dbg !3698
  br i1 %50, label %51, label %68, !dbg !3700

51:                                               ; preds = %48
  %52 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !3701
  %53 = icmp eq i32 %52, 0, !dbg !3701
  br i1 %53, label %57, label %54, !dbg !3703

54:                                               ; preds = %51
  %55 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3704
  %56 = zext i8 %55 to i32, !dbg !3704
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 noundef %56) #27, !dbg !3704
  br label %67, !dbg !3710

57:                                               ; preds = %51
  %58 = load i32, i32* %27, align 4, !dbg !3711
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %39, i32 noundef %58) #27, !dbg !3711
  %59 = load i8*, i8** %25, align 4, !dbg !3716
  %60 = call i32 @memcmp(i8* noundef %59, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3718
  %61 = icmp eq i32 %60, 0, !dbg !3718
  br i1 %61, label %66, label %62, !dbg !3719

62:                                               ; preds = %57
  %63 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3720
  %64 = zext i8 %63 to i32, !dbg !3720
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.16, i32 0, i32 0), i32 noundef %64) #27, !dbg !3720
  %65 = load i8*, i8** %25, align 4, !dbg !3726
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %65, i32 noundef 64) #26, !dbg !3727
  br label %67, !dbg !3728

66:                                               ; preds = %57
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0), i32 noundef %39) #27, !dbg !3729
  br label %67, !dbg !3734

67:                                               ; preds = %66, %62, %54, %44, %34
  call void @llvm.dbg.label(metadata !310), !dbg !3735
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3736
  br label %68, !dbg !3737

68:                                               ; preds = %48, %1, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3737
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3737
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3737
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3737
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3737
  ret void, !dbg !3737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3738 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3740, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3741, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata i8* %2, metadata !3742, metadata !DIExpression()), !dbg !3743
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3744
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3745
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3746
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3746
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3746
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3747
  ret i32 %8, !dbg !3748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ctr_mode(%struct.device* noundef %0) #1 !dbg !3749 {
  %2 = alloca [64 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  %7 = alloca [12 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3751, metadata !DIExpression()), !dbg !3759
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0, !dbg !3760
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3760
  call void @llvm.dbg.declare(metadata [64 x i8]* %2, metadata !3752, metadata !DIExpression()), !dbg !3761
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3761
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3762
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3762
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !3753, metadata !DIExpression()), !dbg !3763
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %9, i8 0, i32 64, i1 false), !dbg !3763
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3764
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3764
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3754, metadata !DIExpression()), !dbg !3765
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3766
  store i64 0, i64* %11, align 8, !dbg !3766
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3767
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %12, align 8, !dbg !3767
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3766
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3766
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3766
  store i8* null, i8** %14, align 8, !dbg !3766
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3766
  store i8* null, i8** %15, align 4, !dbg !3766
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, i32 0, i32 0, !dbg !3768
  store i32 32, i32* %16, align 8, !dbg !3768
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3766
  store i16 16, i16* %17, align 4, !dbg !3766
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3766
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3769
  %20 = trunc i32 %19 to i16, !dbg !3769
  store i16 %20, i16* %18, align 2, !dbg !3766
  %21 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3770
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3770
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3755, metadata !DIExpression()), !dbg !3771
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3772
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %22, align 4, !dbg !3772
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3772
  store i32 64, i32* %23, align 4, !dbg !3772
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3772
  store i8* %8, i8** %24, align 4, !dbg !3772
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3772
  store i32 64, i32* %25, align 4, !dbg !3772
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3772
  store i32 0, i32* %26, align 4, !dbg !3772
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3772
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3772
  %28 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3773
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3773
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !3756, metadata !DIExpression()), !dbg !3774
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3775
  store i8* %8, i8** %29, align 4, !dbg !3775
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3775
  store i32 64, i32* %30, align 4, !dbg !3775
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3775
  store i8* %9, i8** %31, align 4, !dbg !3775
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3775
  store i32 64, i32* %32, align 4, !dbg !3775
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3775
  store i32 0, i32* %33, align 4, !dbg !3775
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3775
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3775
  %35 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i32 0, i32 0, !dbg !3776
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3776
  call void @llvm.dbg.declare(metadata [12 x i8]* %7, metadata !3757, metadata !DIExpression()), !dbg !3777
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(12) %35, i8* noundef nonnull align 1 dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @__const.ctr_mode.iv, i32 0, i32 0), i32 12, i1 false), !dbg !3777
  %36 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 1) #26, !dbg !3778
  %37 = icmp eq i32 %36, 0, !dbg !3778
  br i1 %37, label %38, label %75, !dbg !3780

38:                                               ; preds = %1
  %39 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef nonnull %35) #26, !dbg !3781
  %40 = icmp eq i32 %39, 0, !dbg !3781
  br i1 %40, label %44, label %41, !dbg !3783

41:                                               ; preds = %38
  %42 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3784
  %43 = zext i8 %42 to i32, !dbg !3784
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0), i32 noundef %43) #27, !dbg !3784
  br label %74, !dbg !3790

44:                                               ; preds = %38
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3791
  %46 = zext i8 %45 to i32, !dbg !3791
  %47 = load i32, i32* %26, align 4, !dbg !3791
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %46, i32 noundef %47) #27, !dbg !3791
  %48 = load i8*, i8** %24, align 4, !dbg !3796
  %49 = call i32 @memcmp(i8* noundef %48, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3798
  %50 = icmp eq i32 %49, 0, !dbg !3798
  br i1 %50, label %55, label %51, !dbg !3799

51:                                               ; preds = %44
  %52 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3800
  %53 = zext i8 %52 to i32, !dbg !3800
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.19, i32 0, i32 0), i32 noundef %53) #27, !dbg !3800
  %54 = load i8*, i8** %24, align 4, !dbg !3806
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i8* noundef %54, i32 noundef 64) #26, !dbg !3807
  br label %74, !dbg !3808

55:                                               ; preds = %44
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i32 0, i32 0), i32 noundef %46) #27, !dbg !3809
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3814
  %56 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 0) #26, !dbg !3815
  %57 = icmp eq i32 %56, 0, !dbg !3815
  br i1 %57, label %58, label %75, !dbg !3817

58:                                               ; preds = %55
  %59 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %35) #26, !dbg !3818
  %60 = icmp eq i32 %59, 0, !dbg !3818
  br i1 %60, label %64, label %61, !dbg !3820

61:                                               ; preds = %58
  %62 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3821
  %63 = zext i8 %62 to i32, !dbg !3821
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef %63) #27, !dbg !3821
  br label %74, !dbg !3827

64:                                               ; preds = %58
  %65 = load i32, i32* %33, align 4, !dbg !3828
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %46, i32 noundef %65) #27, !dbg !3828
  %66 = load i8*, i8** %31, align 4, !dbg !3833
  %67 = call i32 @memcmp(i8* noundef %66, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3835
  %68 = icmp eq i32 %67, 0, !dbg !3835
  br i1 %68, label %73, label %69, !dbg !3836

69:                                               ; preds = %64
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3837
  %71 = zext i8 %70 to i32, !dbg !3837
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.22, i32 0, i32 0), i32 noundef %71) #27, !dbg !3837
  %72 = load i8*, i8** %31, align 4, !dbg !3843
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %72, i32 noundef 64) #26, !dbg !3844
  br label %74, !dbg !3845

73:                                               ; preds = %64
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef %46) #27, !dbg !3846
  br label %74, !dbg !3851

74:                                               ; preds = %73, %69, %61, %51, %41
  call void @llvm.dbg.label(metadata !3758), !dbg !3852
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3853
  br label %75, !dbg !3854

75:                                               ; preds = %55, %1, %74
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3854
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3854
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3854
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3854
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3854
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3854
  ret void, !dbg !3854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3855 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3857, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3858, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata i8* %2, metadata !3859, metadata !DIExpression()), !dbg !3860
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3861
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3862
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3863
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3863
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3863
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3864
  ret i32 %8, !dbg !3865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ccm_mode(%struct.device* noundef %0) #1 !dbg !3866 {
  %2 = alloca [50 x i8], align 1
  %3 = alloca [25 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3868, metadata !DIExpression()), !dbg !3882
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 0, !dbg !3883
  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %8) #25, !dbg !3883
  call void @llvm.dbg.declare(metadata [50 x i8]* %2, metadata !3869, metadata !DIExpression()), !dbg !3884
  %9 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i32 0, i32 0, !dbg !3885
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %9) #25, !dbg !3885
  call void @llvm.dbg.declare(metadata [25 x i8]* %3, metadata !3873, metadata !DIExpression()), !dbg !3886
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3887
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3887
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3877, metadata !DIExpression()), !dbg !3888
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3889
  store i64 0, i64* %11, align 8, !dbg !3889
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3890
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ccm_key, i32 0, i32 0), i8** %12, align 8, !dbg !3890
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3889
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3889
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3889
  store i8* null, i8** %14, align 8, !dbg !3889
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3889
  store i8* null, i8** %15, align 4, !dbg !3889
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !3889
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !3891
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !3892
  store i16 8, i16* %18, align 8, !dbg !3892
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !3892
  store i16 13, i16* %19, align 2, !dbg !3892
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3889
  store i16 16, i16* %20, align 4, !dbg !3889
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3889
  %22 = load i32, i32* @cap_flags, align 4, !dbg !3893
  %23 = trunc i32 %22 to i16, !dbg !3893
  store i16 %23, i16* %21, align 2, !dbg !3889
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3894
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !3894
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3878, metadata !DIExpression()), !dbg !3895
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3896
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8** %25, align 4, !dbg !3896
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3896
  store i32 23, i32* %26, align 4, !dbg !3896
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3896
  store i8* %8, i8** %27, align 4, !dbg !3896
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3896
  store i32 50, i32* %28, align 4, !dbg !3896
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3896
  store i32 0, i32* %29, align 4, !dbg !3896
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3896
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !3896
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !3897
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !3897
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !3879, metadata !DIExpression()), !dbg !3898
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !3899
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !3899
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @ccm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !3899
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !3899
  store i32 8, i32* %34, align 4, !dbg !3899
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !3899
  %36 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 23, !dbg !3900
  store i8* %36, i8** %35, align 4, !dbg !3899
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !3901
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !3901
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !3880, metadata !DIExpression()), !dbg !3902
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !3903
  store i8* %8, i8** %38, align 4, !dbg !3903
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !3903
  store i32 23, i32* %39, align 4, !dbg !3903
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !3903
  store i8* %9, i8** %40, align 4, !dbg !3903
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !3903
  store i32 25, i32* %41, align 4, !dbg !3903
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !3903
  store i32 0, i32* %42, align 4, !dbg !3903
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !3903
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !3903
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 1) #26, !dbg !3904
  %45 = icmp eq i32 %44, 0, !dbg !3904
  br i1 %45, label %46, label %83, !dbg !3906

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !3907
  %47 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !3908
  %48 = icmp eq i32 %47, 0, !dbg !3908
  br i1 %48, label %52, label %49, !dbg !3910

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3911
  %51 = zext i8 %50 to i32, !dbg !3911
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef %51) #27, !dbg !3911
  br label %82, !dbg !3917

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3918
  %54 = zext i8 %53 to i32, !dbg !3918
  %55 = load i32, i32* %29, align 4, !dbg !3918
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !3918
  %56 = load i8*, i8** %27, align 4, !dbg !3923
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i32 noundef 31) #27, !dbg !3925
  %58 = icmp eq i32 %57, 0, !dbg !3925
  br i1 %58, label %63, label %59, !dbg !3926

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3927
  %61 = zext i8 %60 to i32, !dbg !3927
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.25, i32 0, i32 0), i32 noundef %61) #27, !dbg !3927
  %62 = load i8*, i8** %27, align 4, !dbg !3933
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 31) #26, !dbg !3934
  br label %82, !dbg !3935

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i32 noundef %54) #27, !dbg !3936
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3941
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 0) #26, !dbg !3942
  %65 = icmp eq i32 %64, 0, !dbg !3942
  br i1 %65, label %66, label %83, !dbg !3944

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !3945
  %67 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !3946
  %68 = icmp eq i32 %67, 0, !dbg !3946
  br i1 %68, label %72, label %69, !dbg !3948

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3949
  %71 = zext i8 %70 to i32, !dbg !3949
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0), i32 noundef %71) #27, !dbg !3949
  br label %82, !dbg !3955

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !3956
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !3956
  %74 = load i8*, i8** %40, align 4, !dbg !3961
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i32 noundef 23) #27, !dbg !3963
  %76 = icmp eq i32 %75, 0, !dbg !3963
  br i1 %76, label %81, label %77, !dbg !3964

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3965
  %79 = zext i8 %78 to i32, !dbg !3965
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.28, i32 0, i32 0), i32 noundef %79) #27, !dbg !3965
  %80 = load i8*, i8** %40, align 4, !dbg !3971
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 23) #26, !dbg !3972
  br label %82, !dbg !3973

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i32 noundef %54) #27, !dbg !3974
  br label %82, !dbg !3979

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !3881), !dbg !3980
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3981
  br label %83, !dbg !3982

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !3982
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !3982
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !3982
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3982
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %9) #25, !dbg !3982
  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %8) #25, !dbg !3982
  ret void, !dbg !3982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !3983 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3985, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !3986, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0), metadata !3987, metadata !DIExpression()), !dbg !3988
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !3989
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !3989
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !3990
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !3991
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3992
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !3992
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !3992
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0)) #27, !dbg !3993
  ret i32 %9, !dbg !3994
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gcm_mode(%struct.device* noundef %0) #1 !dbg !3995 {
  %2 = alloca [60 x i8], align 1
  %3 = alloca [44 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3997, metadata !DIExpression()), !dbg !4009
  %8 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 0, !dbg !4010
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4010
  call void @llvm.dbg.declare(metadata [60 x i8]* %2, metadata !3998, metadata !DIExpression()), !dbg !4011
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(60) %8, i8 0, i32 60, i1 false), !dbg !4011
  %9 = getelementptr inbounds [44 x i8], [44 x i8]* %3, i32 0, i32 0, !dbg !4012
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4012
  call void @llvm.dbg.declare(metadata [44 x i8]* %3, metadata !4002, metadata !DIExpression()), !dbg !4013
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(44) %9, i8 0, i32 44, i1 false), !dbg !4013
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !4014
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4014
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !4004, metadata !DIExpression()), !dbg !4015
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !4016
  store i64 0, i64* %11, align 8, !dbg !4016
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !4017
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @gcm_key, i32 0, i32 0), i8** %12, align 8, !dbg !4017
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !4016
  store %struct.device* null, %struct.device** %13, align 4, !dbg !4016
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !4016
  store i8* null, i8** %14, align 8, !dbg !4016
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !4016
  store i8* null, i8** %15, align 4, !dbg !4016
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !4016
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !4018
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !4019
  store i16 16, i16* %18, align 8, !dbg !4019
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !4019
  store i16 12, i16* %19, align 2, !dbg !4019
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !4016
  store i16 16, i16* %20, align 4, !dbg !4016
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !4016
  %22 = load i32, i32* @cap_flags, align 4, !dbg !4020
  %23 = trunc i32 %22 to i16, !dbg !4020
  store i16 %23, i16* %21, align 2, !dbg !4016
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !4021
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4021
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !4005, metadata !DIExpression()), !dbg !4022
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !4023
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8** %25, align 4, !dbg !4023
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !4023
  store i32 42, i32* %26, align 4, !dbg !4023
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !4023
  store i8* %8, i8** %27, align 4, !dbg !4023
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !4023
  store i32 60, i32* %28, align 4, !dbg !4023
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !4023
  store i32 0, i32* %29, align 4, !dbg !4023
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !4023
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !4023
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !4024
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4024
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !4006, metadata !DIExpression()), !dbg !4025
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !4026
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !4026
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @gcm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !4026
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !4026
  store i32 20, i32* %34, align 4, !dbg !4026
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !4026
  %36 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 42, !dbg !4027
  store i8* %36, i8** %35, align 4, !dbg !4026
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !4028
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4028
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !4007, metadata !DIExpression()), !dbg !4029
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !4030
  store i8* %8, i8** %38, align 4, !dbg !4030
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !4030
  store i32 42, i32* %39, align 4, !dbg !4030
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !4030
  store i8* %9, i8** %40, align 4, !dbg !4030
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !4030
  store i32 44, i32* %41, align 4, !dbg !4030
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !4030
  store i32 0, i32* %42, align 4, !dbg !4030
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !4030
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !4030
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 1) #26, !dbg !4031
  %45 = icmp eq i32 %44, 0, !dbg !4031
  br i1 %45, label %46, label %83, !dbg !4033

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !4034
  %47 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4035
  %48 = icmp eq i32 %47, 0, !dbg !4035
  br i1 %48, label %52, label %49, !dbg !4037

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4038
  %51 = zext i8 %50 to i32, !dbg !4038
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef %51) #27, !dbg !4038
  br label %82, !dbg !4044

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4045
  %54 = zext i8 %53 to i32, !dbg !4045
  %55 = load i32, i32* %29, align 4, !dbg !4045
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !4045
  %56 = load i8*, i8** %27, align 4, !dbg !4050
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i32 noundef 58) #27, !dbg !4052
  %58 = icmp eq i32 %57, 0, !dbg !4052
  br i1 %58, label %63, label %59, !dbg !4053

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4054
  %61 = zext i8 %60 to i32, !dbg !4054
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.31, i32 0, i32 0), i32 noundef %61) #27, !dbg !4054
  %62 = load i8*, i8** %27, align 4, !dbg !4060
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 58) #26, !dbg !4061
  br label %82, !dbg !4062

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i32 noundef %54) #27, !dbg !4063
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4068
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 0) #26, !dbg !4069
  %65 = icmp eq i32 %64, 0, !dbg !4069
  br i1 %65, label %66, label %83, !dbg !4071

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !4072
  %67 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4073
  %68 = icmp eq i32 %67, 0, !dbg !4073
  br i1 %68, label %72, label %69, !dbg !4075

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4076
  %71 = zext i8 %70 to i32, !dbg !4076
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef %71) #27, !dbg !4076
  br label %82, !dbg !4082

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !4083
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !4083
  %74 = load i8*, i8** %40, align 4, !dbg !4088
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i32 noundef 42) #27, !dbg !4090
  %76 = icmp eq i32 %75, 0, !dbg !4090
  br i1 %76, label %81, label %77, !dbg !4091

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4092
  %79 = zext i8 %78 to i32, !dbg !4092
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.34, i32 0, i32 0), i32 noundef %79) #27, !dbg !4092
  %80 = load i8*, i8** %40, align 4, !dbg !4098
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 42) #26, !dbg !4099
  br label %82, !dbg !4100

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i32 noundef %54) #27, !dbg !4101
  br label %82, !dbg !4106

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !4008), !dbg !4107
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4108
  br label %83, !dbg !4109

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4109
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4109
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4109
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4109
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4109
  ret void, !dbg !4109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4110 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4112, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4113, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0), metadata !4114, metadata !DIExpression()), !dbg !4115
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4116
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4116
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4117
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4118
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4119
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4119
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4119
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0)) #27, !dbg !4120
  ret i32 %9, !dbg !4121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !4122 {
  %1 = tail call fastcc %struct.device* @device_get_binding() #26, !dbg !4134
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !4124, metadata !DIExpression()), !dbg !4135
  %2 = icmp eq %struct.device* %1, null, !dbg !4136
  br i1 %2, label %3, label %6, !dbg !4138

3:                                                ; preds = %0
  %4 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4139
  %5 = zext i8 %4 to i32, !dbg !4139
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0), i32 noundef %5, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4139
  br label %23, !dbg !4145

6:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata [6 x %struct.mode_test]* @__const.main.modes, metadata !4125, metadata !DIExpression()), !dbg !4146
  %7 = tail call i32 @validate_hw_compatibility(%struct.device* noundef nonnull %1) #26, !dbg !4147
  %8 = icmp eq i32 %7, 0, !dbg !4147
  br i1 %8, label %12, label %9, !dbg !4149

9:                                                ; preds = %6
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4150
  %11 = zext i8 %10 to i32, !dbg !4150
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0), i32 noundef %11) #27, !dbg !4150
  br label %23, !dbg !4156

12:                                               ; preds = %6
  %13 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4157
  %14 = zext i8 %13 to i32, !dbg !4157
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i32 noundef %14) #27, !dbg !4157
  call void @llvm.dbg.value(metadata i32 0, metadata !4133, metadata !DIExpression()), !dbg !4135
  br label %15, !dbg !4162

15:                                               ; preds = %12, %15
  %16 = phi i32 [ 0, %12 ], [ %21, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4133, metadata !DIExpression()), !dbg !4135
  %17 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 0, !dbg !4164
  %18 = load i8*, i8** %17, align 4, !dbg !4166
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 noundef %14, i8* noundef %18) #27, !dbg !4166
  %19 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 1, !dbg !4172
  %20 = load void (%struct.device*)*, void (%struct.device*)** %19, align 4, !dbg !4172
  tail call void %20(%struct.device* noundef nonnull %1) #27, !dbg !4173
  %21 = add nuw nsw i32 %16, 1, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %21, metadata !4133, metadata !DIExpression()), !dbg !4135
  %22 = icmp eq i32 %21, 5, !dbg !4162
  br i1 %22, label %23, label %15, !dbg !4162, !llvm.loop !4175

23:                                               ; preds = %15, %9, %3
  ret void, !dbg !4177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @device_get_binding() unnamed_addr #1 !dbg !4178 {
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), metadata !4183, metadata !DIExpression()), !dbg !4184
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4185, !srcloc !4187
  %1 = tail call %struct.device* @z_impl_device_get_binding(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4188
  ret %struct.device* %1, !dbg !4189
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4190 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4205, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %0, metadata !4201, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %1, metadata !4202, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %2, metadata !4203, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %3, metadata !4204, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %0, metadata !4206, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %0, metadata !4207, metadata !DIExpression()), !dbg !4267
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4268
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4268
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4210, metadata !DIExpression()), !dbg !4269
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4270
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4270
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4211, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i32 0, metadata !4212, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 0, metadata !4213, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 0, metadata !4214, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 -1, metadata !4215, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8 0, metadata !4218, metadata !DIExpression()), !dbg !4267
  %12 = and i32 %2, 4, !dbg !4272
  %13 = icmp eq i32 %12, 0, !dbg !4273
  call void @llvm.dbg.value(metadata i1 %13, metadata !4219, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4267
  %14 = lshr i32 %2, 3, !dbg !4274
  %15 = and i32 %14, 7, !dbg !4274
  %16 = add nuw nsw i32 %15, 1, !dbg !4275
  call void @llvm.dbg.value(metadata i32 %16, metadata !4220, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8 0, metadata !4221, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %0, metadata !4222, metadata !DIExpression()), !dbg !4267
  %17 = ptrtoint i8* %0 to i32, !dbg !4276
  %18 = and i32 %17, 3, !dbg !4278
  %19 = icmp eq i32 %18, 0, !dbg !4278
  br i1 %19, label %20, label %316, !dbg !4279

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4280
  call void @llvm.dbg.value(metadata i8* %21, metadata !4207, metadata !DIExpression()), !dbg !4267
  %22 = icmp eq i8* %0, null, !dbg !4281
  %23 = and i32 %1, 7, !dbg !4283
  %24 = sub nuw nsw i32 8, %23, !dbg !4283
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4283
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4283
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4283
  call void @llvm.dbg.value(metadata i32 %27, metadata !4202, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %26, metadata !4207, metadata !DIExpression()), !dbg !4267
  br i1 %22, label %33, label %28, !dbg !4284

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4286
  %30 = sub i32 4, %17, !dbg !4286
  %31 = add i32 %30, %29, !dbg !4287
  %32 = icmp ugt i32 %31, %27, !dbg !4288
  br i1 %32, label %316, label %33, !dbg !4289

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4290
  call void @llvm.dbg.value(metadata i8* %34, metadata !4204, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %3, metadata !4217, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 4, metadata !4209, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 4, metadata !4208, metadata !DIExpression()), !dbg !4267
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4291

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4205, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %42, metadata !4204, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %43, metadata !4207, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %44, metadata !4208, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %45, metadata !4209, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %72, metadata !4215, metadata !DIExpression()), !dbg !4267
  br i1 %46, label %73, label %47, !dbg !4292

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4293
  %49 = zext i1 %48 to i32, !dbg !4297
  %50 = add nsw i32 %72, %49, !dbg !4297
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4297
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4297
  call void @llvm.dbg.value(metadata i32 %52, metadata !4208, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %51, metadata !4209, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8 poison, metadata !4218, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %50, metadata !4215, metadata !DIExpression()), !dbg !4267
  br label %53, !dbg !4298

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4205, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %40, metadata !4204, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %58, metadata !4207, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %57, metadata !4208, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %56, metadata !4209, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8 poison, metadata !4218, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %54, metadata !4215, metadata !DIExpression()), !dbg !4267
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4299
  call void @llvm.dbg.value(metadata i8* %60, metadata !4204, metadata !DIExpression()), !dbg !4267
  %61 = load i8, i8* %60, align 1, !dbg !4301
  %62 = icmp eq i8 %61, 0, !dbg !4302
  br i1 %62, label %223, label %63, !dbg !4303, !llvm.loop !4304

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4292

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4307

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4218, metadata !DIExpression()), !dbg !4267
  %75 = add nsw i32 %72, -1, !dbg !4308
  call void @llvm.dbg.value(metadata i32 %75, metadata !4215, metadata !DIExpression()), !dbg !4267
  br label %53, !dbg !4309

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4310

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4209, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 4, metadata !4208, metadata !DIExpression()), !dbg !4267
  br label %53, !dbg !4311

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4209, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 4, metadata !4208, metadata !DIExpression()), !dbg !4267
  br label %53, !dbg !4312

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4313
  %81 = icmp eq i8 %80, 108, !dbg !4315
  br i1 %81, label %82, label %109, !dbg !4316

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4317
  %84 = load i8, i8* %83, align 1, !dbg !4317
  %85 = icmp eq i8 %84, 108, !dbg !4320
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4321
  %89 = add i32 %88, 7, !dbg !4321
  %90 = and i32 %89, -8, !dbg !4321
  %91 = inttoptr i32 %90 to i8*, !dbg !4321
  %92 = inttoptr i32 %90 to double*, !dbg !4321
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4321
  %94 = load double, double* %92, align 8, !dbg !4321
  call void @llvm.dbg.value(metadata i8* %93, metadata !4205, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 8, metadata !4208, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 8, metadata !4209, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata double %94, metadata !4235, metadata !DIExpression()), !dbg !4323
  %95 = ptrtoint i8* %43 to i32, !dbg !4324
  %96 = add i32 %95, 7, !dbg !4324
  %97 = and i32 %96, -8, !dbg !4324
  %98 = inttoptr i32 %97 to i8*, !dbg !4325
  call void @llvm.dbg.value(metadata i8* %98, metadata !4207, metadata !DIExpression()), !dbg !4267
  br i1 %22, label %104, label %99, !dbg !4326

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4327
  %101 = icmp ugt i32 %100, %194, !dbg !4331
  br i1 %101, label %316, label %102, !dbg !4332

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4333
  store double %94, double* %103, align 8, !dbg !4333
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4336
  call void @llvm.dbg.value(metadata i8* %105, metadata !4207, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8 poison, metadata !4218, metadata !DIExpression()), !dbg !4267
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4218, metadata !DIExpression()), !dbg !4267
  br label %53, !dbg !4337

107:                                              ; preds = %73, %73
  br label %109, !dbg !4338

108:                                              ; preds = %73
  br label %109, !dbg !4338

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4267
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4267
  call void @llvm.dbg.value(metadata i32 %113, metadata !4208, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %112, metadata !4209, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8 poison, metadata !4221, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8 poison, metadata !4218, metadata !DIExpression()), !dbg !4267
  %114 = ptrtoint i8* %43 to i32, !dbg !4338
  %115 = add i32 %114, -1, !dbg !4338
  %116 = add i32 %115, %112, !dbg !4338
  %117 = sub i32 0, %112, !dbg !4338
  %118 = and i32 %116, %117, !dbg !4338
  %119 = inttoptr i32 %118 to i8*, !dbg !4339
  call void @llvm.dbg.value(metadata i8* %119, metadata !4207, metadata !DIExpression()), !dbg !4267
  br i1 %22, label %124, label %120, !dbg !4340

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4342
  %122 = add i32 %121, %118, !dbg !4343
  %123 = icmp ugt i32 %122, %194, !dbg !4344
  br i1 %123, label %316, label %124, !dbg !4345

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4346

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4339
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4347
  call void @llvm.dbg.value(metadata i8* %127, metadata !4205, metadata !DIExpression()), !dbg !4267
  %128 = bitcast i8* %41 to i8**, !dbg !4347
  %129 = load i8*, i8** %128, align 4, !dbg !4347
  call void @llvm.dbg.value(metadata i8* %129, metadata !4217, metadata !DIExpression()), !dbg !4267
  br label %130, !dbg !4348

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4349
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4350
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4267
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4351
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4267
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4352
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4267
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4267
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4267
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4267
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4353
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4205, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %142, metadata !4202, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %141, metadata !4204, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %140, metadata !4207, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %139, metadata !4208, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %138, metadata !4209, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %137, metadata !4212, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %136, metadata !4220, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %135, metadata !4213, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8 poison, metadata !4218, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %133, metadata !4217, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %132, metadata !4215, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %131, metadata !4214, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.label(metadata !4266), !dbg !4355
  br i1 %22, label %146, label %144, !dbg !4356

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4357
  store i8* %133, i8** %145, align 4, !dbg !4360
  br label %146, !dbg !4361

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4362
  call void @llvm.dbg.value(metadata i32 %147, metadata !4220, metadata !DIExpression()), !dbg !4267
  %148 = icmp sgt i32 %136, 0, !dbg !4363
  br i1 %148, label %152, label %149, !dbg !4364

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !4365
  %151 = zext i1 %150 to i32, !dbg !4365
  br label %152, !dbg !4364

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4364
  %154 = icmp eq i32 %153, 0, !dbg !4364
  call void @llvm.dbg.value(metadata i1 %154, metadata !4244, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4366
  call void @llvm.dbg.value(metadata i1 %36, metadata !4247, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4366
  %155 = or i1 %36, %154, !dbg !4367
  br i1 %155, label %156, label %190, !dbg !4367

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4368
  %158 = sub i32 %157, %17, !dbg !4368
  %159 = lshr i32 %158, 2, !dbg !4369
  call void @llvm.dbg.value(metadata i32 %159, metadata !4248, metadata !DIExpression()), !dbg !4370
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4371
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4371
  br i1 %163, label %316, label %164, !dbg !4371

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4373

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4374
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4377
  store i8 %166, i8* %167, align 1, !dbg !4378
  %168 = trunc i32 %132 to i8, !dbg !4379
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4380
  store i8 %168, i8* %169, align 1, !dbg !4381
  br i1 %154, label %173, label %170, !dbg !4382

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4383
  store i8 %171, i8* %167, align 1, !dbg !4383
  %172 = add i32 %131, 1, !dbg !4386
  call void @llvm.dbg.value(metadata i32 %172, metadata !4214, metadata !DIExpression()), !dbg !4267
  br label %185, !dbg !4387

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4388
  call void @llvm.dbg.value(metadata i32 %174, metadata !4213, metadata !DIExpression()), !dbg !4267
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4390

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4391
  call void @llvm.dbg.value(metadata i32 %177, metadata !4202, metadata !DIExpression()), !dbg !4267
  br label %185, !dbg !4394

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4395

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4396
  call void @llvm.dbg.value(metadata i32 %180, metadata !4202, metadata !DIExpression()), !dbg !4267
  br label %185, !dbg !4399

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4400
  %183 = add i32 %142, 2, !dbg !4402
  %184 = add i32 %183, %182, !dbg !4403
  call void @llvm.dbg.value(metadata i32 %184, metadata !4202, metadata !DIExpression()), !dbg !4267
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4267
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4267
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4267
  call void @llvm.dbg.value(metadata i32 %188, metadata !4202, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %187, metadata !4213, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %186, metadata !4214, metadata !DIExpression()), !dbg !4267
  %189 = add nuw nsw i32 %137, 1, !dbg !4404
  call void @llvm.dbg.value(metadata i32 undef, metadata !4202, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 undef, metadata !4212, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 undef, metadata !4213, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 undef, metadata !4214, metadata !DIExpression()), !dbg !4267
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4349
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4351
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4352
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4353
  call void @llvm.dbg.value(metadata i32 %194, metadata !4202, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %193, metadata !4212, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %192, metadata !4213, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %191, metadata !4214, metadata !DIExpression()), !dbg !4267
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4405
  call void @llvm.dbg.value(metadata i8* %195, metadata !4207, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %143, metadata !4205, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %141, metadata !4204, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %139, metadata !4208, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %138, metadata !4209, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8 poison, metadata !4221, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8 poison, metadata !4218, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %132, metadata !4215, metadata !DIExpression()), !dbg !4267
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4299
  call void @llvm.dbg.value(metadata i8* %196, metadata !4204, metadata !DIExpression()), !dbg !4267
  %197 = load i8, i8* %196, align 1, !dbg !4301
  %198 = icmp eq i8 %197, 0, !dbg !4302
  br i1 %198, label %223, label %63, !dbg !4303

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4406

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4407
  call void @llvm.dbg.value(metadata i8* %201, metadata !4205, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 undef, metadata !4251, metadata !DIExpression()), !dbg !4408
  br i1 %22, label %216, label %202, !dbg !4409

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4407
  %204 = load i32, i32* %203, align 4, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %204, metadata !4251, metadata !DIExpression()), !dbg !4408
  %205 = inttoptr i32 %118 to i32*, !dbg !4410
  store i32 %204, i32* %205, align 4, !dbg !4413
  br label %216, !dbg !4414

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4415
  %208 = add i32 %207, 7, !dbg !4415
  %209 = and i32 %208, -8, !dbg !4415
  %210 = inttoptr i32 %209 to i8*, !dbg !4415
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4415
  call void @llvm.dbg.value(metadata i8* %211, metadata !4205, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i64 undef, metadata !4257, metadata !DIExpression()), !dbg !4416
  br i1 %22, label %216, label %212, !dbg !4417

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4415
  %214 = load i64, i64* %213, align 8, !dbg !4415
  call void @llvm.dbg.value(metadata i64 %214, metadata !4257, metadata !DIExpression()), !dbg !4416
  %215 = inttoptr i32 %118 to i64*, !dbg !4418
  store i64 %214, i64* %215, align 8, !dbg !4423
  br label %216, !dbg !4424

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4425
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4425
  call void @llvm.dbg.value(metadata i8* %218, metadata !4205, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %40, metadata !4204, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %219, metadata !4207, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %113, metadata !4208, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %112, metadata !4209, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8 poison, metadata !4221, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8 poison, metadata !4218, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %72, metadata !4215, metadata !DIExpression()), !dbg !4267
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4299
  call void @llvm.dbg.value(metadata i8* %220, metadata !4204, metadata !DIExpression()), !dbg !4267
  %221 = load i8, i8* %220, align 1, !dbg !4301
  %222 = icmp eq i8 %221, 0, !dbg !4302
  br i1 %222, label %223, label %38, !dbg !4303

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4426
  %225 = ptrtoint i8* %224 to i32, !dbg !4427
  %226 = sub i32 %225, %17, !dbg !4427
  %227 = lshr i32 %226, 2, !dbg !4429
  %228 = icmp ugt i32 %226, 1023, !dbg !4430
  br i1 %228, label %316, label %229, !dbg !4431

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4432

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4433
  %232 = add i32 %231, %226, !dbg !4436
  br label %316, !dbg !4437

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4438
  store i8 %234, i8* %0, align 1, !dbg !4439
  %235 = trunc i32 %192 to i8, !dbg !4440
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4442
  store i8 %236, i8* %238, align 1, !dbg !4444
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4445
  store i8 %237, i8* %239, align 1, !dbg !4446
  %240 = trunc i32 %191 to i8, !dbg !4447
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4448
  store i8 %240, i8* %241, align 1, !dbg !4449
  %242 = icmp eq i32 %191, 0, !dbg !4450
  %243 = xor i1 %242, true, !dbg !4451
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4451
  call void @llvm.dbg.value(metadata i8* %224, metadata !4207, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 0, metadata !4216, metadata !DIExpression()), !dbg !4267
  br i1 %245, label %246, label %265, !dbg !4451

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4452

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4207, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %250, metadata !4216, metadata !DIExpression()), !dbg !4267
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4453
  %252 = load i8, i8* %251, align 1, !dbg !4453
  %253 = icmp sgt i8 %252, -1, !dbg !4455
  br i1 %253, label %261, label %254, !dbg !4456

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4260, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4457
  %255 = ptrtoint i8* %249 to i32, !dbg !4458
  %256 = add i32 %247, %255, !dbg !4460
  %257 = icmp ugt i32 %256, %194, !dbg !4461
  br i1 %257, label %316, label %258, !dbg !4462

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4463
  call void @llvm.dbg.value(metadata i8 %259, metadata !4260, metadata !DIExpression()), !dbg !4457
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4464
  call void @llvm.dbg.value(metadata i8* %260, metadata !4207, metadata !DIExpression()), !dbg !4267
  store i8 %259, i8* %249, align 1, !dbg !4465
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4405
  call void @llvm.dbg.value(metadata i8* %262, metadata !4207, metadata !DIExpression()), !dbg !4267
  %263 = add nuw i32 %250, 1, !dbg !4466
  call void @llvm.dbg.value(metadata i32 %263, metadata !4216, metadata !DIExpression()), !dbg !4267
  %264 = icmp eq i32 %263, %193, !dbg !4467
  br i1 %264, label %265, label %248, !dbg !4452, !llvm.loop !4468

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4405
  call void @llvm.dbg.value(metadata i8* %266, metadata !4207, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 0, metadata !4216, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %133, metadata !4217, metadata !DIExpression()), !dbg !4267
  %267 = icmp eq i32 %193, 0, !dbg !4470
  br i1 %267, label %312, label %268, !dbg !4473

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4473

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4207, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %272, metadata !4217, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %273, metadata !4216, metadata !DIExpression()), !dbg !4267
  br i1 %242, label %278, label %274, !dbg !4474

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4477
  %276 = load i8, i8* %275, align 1, !dbg !4477
  %277 = icmp sgt i8 %276, -1, !dbg !4478
  br i1 %277, label %278, label %307, !dbg !4479

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4480

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4208, metadata !DIExpression()), !dbg !4267
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4481
  %281 = load i8, i8* %280, align 1, !dbg !4481
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4484
  call void @llvm.dbg.value(metadata i8* %282, metadata !4207, metadata !DIExpression()), !dbg !4267
  store i8 %281, i8* %271, align 1, !dbg !4485
  br label %293, !dbg !4486

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4487
  %285 = load i8, i8* %284, align 1, !dbg !4487
  %286 = zext i8 %285 to i32, !dbg !4487
  %287 = shl nuw nsw i32 %286, 2, !dbg !4489
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4490
  %289 = bitcast i8* %288 to i8**, !dbg !4491
  %290 = load i8*, i8** %289, align 4, !dbg !4491
  call void @llvm.dbg.value(metadata i8* %290, metadata !4217, metadata !DIExpression()), !dbg !4267
  store i8* null, i8** %289, align 4, !dbg !4492
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !4493
  %292 = add i32 %291, 1, !dbg !4494
  call void @llvm.dbg.value(metadata i32 %292, metadata !4208, metadata !DIExpression()), !dbg !4267
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4267
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4495
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4267
  call void @llvm.dbg.value(metadata i8* %296, metadata !4207, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %295, metadata !4208, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %294, metadata !4217, metadata !DIExpression()), !dbg !4267
  %297 = ptrtoint i8* %296 to i32, !dbg !4496
  %298 = add i32 %269, %295, !dbg !4498
  %299 = add i32 %298, %297, !dbg !4499
  %300 = icmp ugt i32 %299, %194, !dbg !4500
  br i1 %300, label %316, label %301, !dbg !4501

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4502
  %303 = load i8, i8* %302, align 1, !dbg !4502
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4503
  call void @llvm.dbg.value(metadata i8* %304, metadata !4207, metadata !DIExpression()), !dbg !4267
  store i8 %303, i8* %296, align 1, !dbg !4504
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !4505
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4506
  call void @llvm.dbg.value(metadata i8* %306, metadata !4207, metadata !DIExpression()), !dbg !4267
  br label %307, !dbg !4507

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4508
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4267
  call void @llvm.dbg.value(metadata i8* %309, metadata !4207, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i8* %308, metadata !4217, metadata !DIExpression()), !dbg !4267
  %310 = add nuw i32 %273, 1, !dbg !4509
  call void @llvm.dbg.value(metadata i32 %310, metadata !4216, metadata !DIExpression()), !dbg !4267
  %311 = icmp eq i32 %310, %193, !dbg !4470
  br i1 %311, label %312, label %270, !dbg !4473, !llvm.loop !4510

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4405
  %314 = ptrtoint i8* %313 to i32, !dbg !4512
  %315 = sub i32 %314, %17, !dbg !4512
  br label %316, !dbg !4513

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4267
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4514
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4514
  ret i32 %317, !dbg !4514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4515 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4519, metadata !DIExpression()), !dbg !4520
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !4521
  ret i1 %2, !dbg !4522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4523 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4528, metadata !DIExpression()), !dbg !4529
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4530
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4531
  %4 = and i1 %2, %3, !dbg !4531
  ret i1 %4, !dbg !4532
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4533 {
  %5 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4537, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.value(metadata i32 %1, metadata !4538, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.value(metadata i32 %2, metadata !4539, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.value(metadata i8* %3, metadata !4540, metadata !DIExpression()), !dbg !4543
  %6 = bitcast %union.anon.4* %5 to i8*, !dbg !4544
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4544
  call void @llvm.dbg.declare(metadata %union.anon.4* %5, metadata !4541, metadata !DIExpression()), !dbg !4545
  call void @llvm.va_start(i8* nonnull %6), !dbg !4546
  %7 = bitcast %union.anon.4* %5 to i32*, !dbg !4547
  %8 = load i32, i32* %7, align 4, !dbg !4547
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4547
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !4547
  call void @llvm.dbg.value(metadata i32 %10, metadata !4542, metadata !DIExpression()), !dbg !4543
  call void @llvm.va_end(i8* nonnull %6), !dbg !4548
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4549
  ret i32 %10, !dbg !4550
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4551 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4563, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4564, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata i8* %2, metadata !4565, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata i8* %3, metadata !4566, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata i8* %3, metadata !4567, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata i8* %3, metadata !4568, metadata !DIExpression()), !dbg !4582
  %5 = icmp eq i8* %3, null, !dbg !4583
  br i1 %5, label %45, label %6, !dbg !4585

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4577, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4582
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4586
  %8 = load i8, i8* %7, align 1, !dbg !4586
  %9 = zext i8 %8 to i32, !dbg !4587
  call void @llvm.dbg.value(metadata i32 %9, metadata !4578, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata i8 undef, metadata !4579, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4582
  call void @llvm.dbg.value(metadata i8 undef, metadata !4580, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4582
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4574, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4582
  call void @llvm.dbg.value(metadata i32 0, metadata !4576, metadata !DIExpression()), !dbg !4582
  %10 = icmp eq i8 %8, 0, !dbg !4588
  br i1 %10, label %39, label %11, !dbg !4591

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4592
  call void @llvm.dbg.value(metadata i8 %12, metadata !4577, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4582
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4574, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4582
  %13 = zext i8 %12 to i32, !dbg !4593
  call void @llvm.dbg.value(metadata i32 %13, metadata !4577, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4582
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4574, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4582
  %14 = shl nuw nsw i32 %13, 2, !dbg !4594
  call void @llvm.dbg.value(metadata i32 %14, metadata !4577, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4574, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4582
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4595
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4574, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4582
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4596
  %17 = load i8, i8* %16, align 1, !dbg !4596
  call void @llvm.dbg.value(metadata i8 %17, metadata !4579, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4582
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4574, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4582
  %18 = zext i8 %17 to i32, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %18, metadata !4579, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4574, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4582
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4598
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4574, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4582
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4599
  %21 = load i8, i8* %20, align 1, !dbg !4599
  call void @llvm.dbg.value(metadata i8 %21, metadata !4580, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4582
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4574, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4582
  %22 = zext i8 %21 to i32, !dbg !4600
  call void @llvm.dbg.value(metadata i32 %22, metadata !4580, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4574, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4582
  %23 = shl nuw nsw i32 %22, 1, !dbg !4601
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4574, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4582
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4602
  call void @llvm.dbg.value(metadata i8* %24, metadata !4574, metadata !DIExpression()), !dbg !4582
  br label %25, !dbg !4591

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4574, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata i32 %27, metadata !4576, metadata !DIExpression()), !dbg !4582
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4603
  call void @llvm.dbg.value(metadata i8* %28, metadata !4574, metadata !DIExpression()), !dbg !4582
  %29 = load i8, i8* %26, align 1, !dbg !4605
  %30 = zext i8 %29 to i32, !dbg !4605
  call void @llvm.dbg.value(metadata i32 %30, metadata !4581, metadata !DIExpression()), !dbg !4582
  %31 = shl nuw nsw i32 %30, 2, !dbg !4606
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4607
  %33 = bitcast i8* %32 to i8**, !dbg !4608
  call void @llvm.dbg.value(metadata i8** %33, metadata !4575, metadata !DIExpression()), !dbg !4582
  store i8* %28, i8** %33, align 4, !dbg !4609
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4610
  %35 = add i32 %34, 1, !dbg !4611
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4612
  call void @llvm.dbg.value(metadata i8* %36, metadata !4574, metadata !DIExpression()), !dbg !4582
  %37 = add nuw nsw i32 %27, 1, !dbg !4613
  call void @llvm.dbg.value(metadata i32 %37, metadata !4576, metadata !DIExpression()), !dbg !4582
  %38 = icmp eq i32 %37, %9, !dbg !4588
  br i1 %38, label %39, label %25, !dbg !4591, !llvm.loop !4614

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4616
  call void @llvm.dbg.value(metadata i8* %40, metadata !4567, metadata !DIExpression()), !dbg !4582
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4617
  %42 = bitcast i8* %41 to i8**, !dbg !4617
  %43 = load i8*, i8** %42, align 1, !dbg !4617
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4618
  br label %45, !dbg !4619

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4582
  ret i32 %46, !dbg !4620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4621 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4625, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4626, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i8* %2, metadata !4627, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i8* %3, metadata !4628, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i8* %4, metadata !4629, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.value(metadata i8* %4, metadata !4630, metadata !DIExpression()), !dbg !4635
  %6 = ptrtoint i8* %4 to i32, !dbg !4636
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4636
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4636
  ret i32 %8, !dbg !4637
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4638 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4642, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.value(metadata i32 %1, metadata !4643, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.value(metadata i8 0, metadata !4645, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.value(metadata i32 0, metadata !4646, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.value(metadata i8 poison, metadata !4645, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.value(metadata i8* %0, metadata !4642, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4647
  %3 = load i8, i8* %0, align 1, !dbg !4648
  call void @llvm.dbg.value(metadata i8 %3, metadata !4644, metadata !DIExpression()), !dbg !4647
  %4 = icmp eq i8 %3, 0, !dbg !4649
  br i1 %4, label %29, label %5, !dbg !4650

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4651
  call void @llvm.dbg.value(metadata i32 %8, metadata !4646, metadata !DIExpression()), !dbg !4647
  br i1 %9, label %11, label %22, !dbg !4652

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4654
  br i1 %12, label %13, label %17, !dbg !4658

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4659
  br i1 %14, label %29, label %15, !dbg !4662

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4663
  br i1 %16, label %29, label %22, !dbg !4665

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4666
  %19 = xor i1 %18, true, !dbg !4668
  %20 = zext i1 %18 to i32, !dbg !4668
  %21 = add nsw i32 %8, %20, !dbg !4668
  br label %22, !dbg !4668

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4647
  call void @llvm.dbg.value(metadata i32 %24, metadata !4646, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.value(metadata i8 poison, metadata !4645, metadata !DIExpression()), !dbg !4647
  %25 = icmp eq i8 %6, 37, !dbg !4669
  %26 = xor i1 %25, %23, !dbg !4671
  call void @llvm.dbg.value(metadata i8* %10, metadata !4642, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.value(metadata i8* %10, metadata !4642, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4647
  %27 = load i8, i8* %10, align 1, !dbg !4648
  call void @llvm.dbg.value(metadata i8 %27, metadata !4644, metadata !DIExpression()), !dbg !4647
  %28 = icmp eq i8 %27, 0, !dbg !4649
  br i1 %28, label %29, label %5, !dbg !4650, !llvm.loop !4672

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4647
  ret i1 %30, !dbg !4674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !4675 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4679, metadata !DIExpression()), !dbg !4680
  %2 = add i8 %0, -64, !dbg !4681
  %3 = icmp ult i8 %2, 59, !dbg !4681
  ret i1 %3, !dbg !4682
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4683 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4691, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %1, metadata !4692, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4693, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %3, metadata !4694, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %4, metadata !4695, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i16* %5, metadata !4696, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %6, metadata !4697, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %0, metadata !4698, metadata !DIExpression()), !dbg !4760
  %11 = bitcast i8* %0 to i32*, !dbg !4761
  call void @llvm.dbg.value(metadata i32* %11, metadata !4699, metadata !DIExpression()), !dbg !4760
  %12 = and i32 %4, 8, !dbg !4762
  %13 = icmp eq i32 %12, 0, !dbg !4763
  call void @llvm.dbg.value(metadata i1 %13, metadata !4703, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %0, metadata !4706, metadata !DIExpression()), !dbg !4760
  %14 = icmp eq i32 %1, 0, !dbg !4764
  br i1 %14, label %15, label %17, !dbg !4765

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4766
  br label %17, !dbg !4765

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4765
  call void @llvm.dbg.value(metadata i32 %18, metadata !4692, metadata !DIExpression()), !dbg !4760
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4767
  %20 = load i8, i8* %19, align 1, !dbg !4767
  %21 = zext i8 %20 to i32, !dbg !4768
  call void @llvm.dbg.value(metadata i32 %21, metadata !4701, metadata !DIExpression()), !dbg !4760
  %22 = icmp ne i8 %20, 0, !dbg !4769
  %23 = and i32 %4, 1, !dbg !4770
  %24 = icmp ne i32 %23, 0, !dbg !4770
  %25 = and i1 %24, %22, !dbg !4770
  call void @llvm.dbg.value(metadata i1 %25, metadata !4705, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4760
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4771
  %27 = load i8, i8* %26, align 1, !dbg !4771
  %28 = zext i8 %27 to i32, !dbg !4772
  call void @llvm.dbg.value(metadata i32 %28, metadata !4702, metadata !DIExpression()), !dbg !4760
  %29 = icmp ne i8 %27, 0, !dbg !4773
  %30 = and i32 %4, 2, !dbg !4774
  %31 = icmp ne i32 %30, 0, !dbg !4774
  %32 = and i1 %31, %29, !dbg !4774
  call void @llvm.dbg.value(metadata i1 %32, metadata !4704, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4760
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4775
  br i1 %33, label %38, label %34, !dbg !4775

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4777
  br i1 %35, label %267, label %36, !dbg !4780

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4781
  br label %267, !dbg !4783

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4784
  %40 = zext i8 %39 to i32, !dbg !4785
  %41 = shl nuw nsw i32 %40, 2, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %41, metadata !4700, metadata !DIExpression()), !dbg !4760
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4787
  %43 = bitcast i8* %42 to i8**, !dbg !4788
  %44 = load i8*, i8** %43, align 4, !dbg !4788
  call void @llvm.dbg.value(metadata i8* %44, metadata !4709, metadata !DIExpression()), !dbg !4760
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4789
  call void @llvm.dbg.value(metadata i8* %45, metadata !4710, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 0, metadata !4711, metadata !DIExpression()), !dbg !4760
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4790
  br i1 %46, label %47, label %132, !dbg !4791

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4708, metadata !DIExpression()), !dbg !4760
  br i1 %25, label %48, label %73, !dbg !4792

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4708, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %45, metadata !4710, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 0, metadata !4711, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 0, metadata !4712, metadata !DIExpression()), !dbg !4793
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4794

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4708, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %52, metadata !4710, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %53, metadata !4711, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %54, metadata !4712, metadata !DIExpression()), !dbg !4793
  %55 = load i8, i8* %52, align 1, !dbg !4795
  %56 = zext i8 %55 to i32, !dbg !4796
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4796
  %58 = bitcast i32* %57 to i8**, !dbg !4797
  %59 = load i8*, i8** %58, align 4, !dbg !4797
  call void @llvm.dbg.value(metadata i8* %59, metadata !4718, metadata !DIExpression()), !dbg !4798
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4799
  call void @llvm.dbg.value(metadata i32 %60, metadata !4721, metadata !DIExpression()), !dbg !4798
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4800
  br i1 %62, label %63, label %67, !dbg !4800

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4802
  %65 = add nuw i32 %53, 1, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %65, metadata !4711, metadata !DIExpression()), !dbg !4760
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4805
  store i16 %64, i16* %66, align 2, !dbg !4806
  br label %67, !dbg !4807

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4760
  call void @llvm.dbg.value(metadata i32 %68, metadata !4711, metadata !DIExpression()), !dbg !4760
  %69 = add nsw i32 %60, %51, !dbg !4808
  call void @llvm.dbg.value(metadata i32 %69, metadata !4708, metadata !DIExpression()), !dbg !4760
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4809
  call void @llvm.dbg.value(metadata i8* %70, metadata !4710, metadata !DIExpression()), !dbg !4760
  %71 = add nuw nsw i32 %54, 1, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %71, metadata !4712, metadata !DIExpression()), !dbg !4793
  %72 = icmp eq i32 %71, %21, !dbg !4811
  br i1 %72, label %79, label %50, !dbg !4794, !llvm.loop !4812

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4814
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4814
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4814
  br label %79, !dbg !4814

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4817
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4760
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4818
  call void @llvm.dbg.value(metadata i1 undef, metadata !4722, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4819
  call void @llvm.dbg.value(metadata i32 0, metadata !4723, metadata !DIExpression()), !dbg !4820
  call void @llvm.dbg.value(metadata i32 %82, metadata !4708, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %81, metadata !4710, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %80, metadata !4711, metadata !DIExpression()), !dbg !4760
  %83 = icmp eq i8 %27, 0, !dbg !4821
  br i1 %83, label %267, label %84, !dbg !4822

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4823
  %86 = icmp eq i32 %85, 0, !dbg !4824
  call void @llvm.dbg.value(metadata i1 %86, metadata !4722, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4819
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4822

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4708, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %93, metadata !4710, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %94, metadata !4711, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %95, metadata !4723, metadata !DIExpression()), !dbg !4820
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4825
  call void @llvm.dbg.value(metadata i8* %96, metadata !4710, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8 undef, metadata !4725, metadata !DIExpression()), !dbg !4826
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4827
  call void @llvm.dbg.value(metadata i8* %97, metadata !4710, metadata !DIExpression()), !dbg !4760
  %98 = load i8, i8* %96, align 1, !dbg !4828
  call void @llvm.dbg.value(metadata i8 %98, metadata !4728, metadata !DIExpression()), !dbg !4826
  %99 = zext i8 %98 to i32, !dbg !4829
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4829
  %101 = bitcast i32* %100 to i8**, !dbg !4830
  %102 = load i8*, i8** %101, align 4, !dbg !4830
  call void @llvm.dbg.value(metadata i8* %102, metadata !4729, metadata !DIExpression()), !dbg !4826
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4831
  call void @llvm.dbg.value(metadata i1 %103, metadata !4730, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4826
  br i1 %13, label %110, label %104, !dbg !4832

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4834
  call void @llvm.dbg.value(metadata i8 %105, metadata !4725, metadata !DIExpression()), !dbg !4826
  %106 = zext i8 %105 to i32, !dbg !4835
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !4836
  br i1 %107, label %108, label %110, !dbg !4837

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.52, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !4838
  %109 = add nsw i32 %92, -2, !dbg !4844
  call void @llvm.dbg.value(metadata i32 %109, metadata !4708, metadata !DIExpression()), !dbg !4760
  br label %127, !dbg !4845

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4846

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4847

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4849
  call void @llvm.dbg.value(metadata i32 %113, metadata !4708, metadata !DIExpression()), !dbg !4760
  br label %127, !dbg !4852

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4853

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4756), !dbg !4854
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !4855
  call void @llvm.dbg.value(metadata i32 %116, metadata !4731, metadata !DIExpression()), !dbg !4826
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4856
  br i1 %118, label %119, label %123, !dbg !4856

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4858
  %121 = add nuw i32 %94, 1, !dbg !4860
  call void @llvm.dbg.value(metadata i32 %121, metadata !4711, metadata !DIExpression()), !dbg !4760
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4861
  store i16 %120, i16* %122, align 2, !dbg !4862
  br label %123, !dbg !4863

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4760
  call void @llvm.dbg.value(metadata i32 %124, metadata !4711, metadata !DIExpression()), !dbg !4760
  %125 = add i32 %92, -1, !dbg !4864
  %126 = add i32 %125, %116, !dbg !4865
  call void @llvm.dbg.value(metadata i32 %126, metadata !4708, metadata !DIExpression()), !dbg !4760
  br label %127, !dbg !4866

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4760
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4826
  call void @llvm.dbg.value(metadata i32 %129, metadata !4708, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %128, metadata !4711, metadata !DIExpression()), !dbg !4760
  %130 = add nuw nsw i32 %95, 1, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %97, metadata !4710, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %130, metadata !4723, metadata !DIExpression()), !dbg !4820
  %131 = icmp eq i32 %130, %28, !dbg !4821
  br i1 %131, label %267, label %91, !dbg !4822, !llvm.loop !4868

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4733, metadata !DIExpression()), !dbg !4870
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4734, metadata !DIExpression()), !dbg !4871
  br i1 %25, label %133, label %135, !dbg !4872

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4735, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8 0, metadata !4736, metadata !DIExpression()), !dbg !4760
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4873
  call void @llvm.dbg.value(metadata i8* %134, metadata !4737, metadata !DIExpression()), !dbg !4760
  br label %140, !dbg !4876

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4877
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4877

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4737, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8 undef, metadata !4736, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8 0, metadata !4735, metadata !DIExpression()), !dbg !4760
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !4879
  br label %145, !dbg !4882

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4883
  call void @llvm.dbg.value(metadata i8* %148, metadata !4710, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 0, metadata !4739, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.value(metadata i8 %146, metadata !4736, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8 %147, metadata !4735, metadata !DIExpression()), !dbg !4760
  %149 = icmp eq i8 %27, 0, !dbg !4885
  br i1 %149, label %150, label %152, !dbg !4886

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4887
  br label %157, !dbg !4886

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4886

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4887
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4888
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4889
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4760
  call void @llvm.dbg.value(metadata i8 undef, metadata !4732, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4760
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4890
  %163 = load i8, i8* %162, align 1, !dbg !4890
  %164 = zext i8 %159 to i32, !dbg !4891
  %165 = add i8 %163, %159, !dbg !4892
  call void @llvm.dbg.value(metadata i8 %165, metadata !4732, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4760
  %166 = icmp eq i32 %30, 0, !dbg !4893
  %167 = lshr i8 %160, 1, !dbg !4894
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4894
  call void @llvm.dbg.value(metadata i8 %168, metadata !4732, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4760
  %169 = icmp eq i32 %23, 0, !dbg !4895
  %170 = icmp eq i32 %158, 0, !dbg !4887
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4887
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4887
  call void @llvm.dbg.value(metadata i8 %172, metadata !4732, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4760
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4747, metadata !DIExpression()), !dbg !4896
  %173 = load i32, i32* %11, align 1, !dbg !4897
  store i8 %165, i8* %162, align 1, !dbg !4898
  store i8 %172, i8* %19, align 1, !dbg !4898
  store i8 %168, i8* %26, align 1, !dbg !4898
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %174, metadata !4738, metadata !DIExpression()), !dbg !4760
  %175 = icmp slt i32 %174, 0, !dbg !4900
  br i1 %175, label %267, label %220, !dbg !4902

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4710, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %178, metadata !4739, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.value(metadata i8 %179, metadata !4736, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8 %180, metadata !4735, metadata !DIExpression()), !dbg !4760
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4903
  call void @llvm.dbg.value(metadata i8* %181, metadata !4710, metadata !DIExpression()), !dbg !4760
  %182 = load i8, i8* %177, align 1, !dbg !4904
  call void @llvm.dbg.value(metadata i8 %182, metadata !4741, metadata !DIExpression()), !dbg !4905
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4906
  call void @llvm.dbg.value(metadata i8* %183, metadata !4710, metadata !DIExpression()), !dbg !4760
  %184 = load i8, i8* %181, align 1, !dbg !4907
  call void @llvm.dbg.value(metadata i8 %184, metadata !4744, metadata !DIExpression()), !dbg !4905
  %185 = zext i8 %184 to i32, !dbg !4908
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4908
  %187 = bitcast i32* %186 to i8**, !dbg !4909
  %188 = load i8*, i8** %187, align 4, !dbg !4909
  call void @llvm.dbg.value(metadata i8* %188, metadata !4745, metadata !DIExpression()), !dbg !4905
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !4910
  call void @llvm.dbg.value(metadata i1 %189, metadata !4746, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4905
  br i1 %13, label %193, label %190, !dbg !4911

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4913
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !4914
  br i1 %192, label %215, label %193, !dbg !4915

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4916

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4917

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4920
  call void @llvm.dbg.value(metadata i8 %196, metadata !4735, metadata !DIExpression()), !dbg !4760
  br label %208, !dbg !4923

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4924

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4925
  call void @llvm.dbg.value(metadata i8 %199, metadata !4736, metadata !DIExpression()), !dbg !4760
  br label %208, !dbg !4928

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4929

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4931
  call void @llvm.dbg.value(metadata i8 %202, metadata !4735, metadata !DIExpression()), !dbg !4760
  br label %208, !dbg !4934

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4935
  call void @llvm.dbg.value(metadata i8 %204, metadata !4736, metadata !DIExpression()), !dbg !4760
  %205 = zext i8 %179 to i32, !dbg !4937
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4937
  store i8 %182, i8* %206, align 1, !dbg !4938
  %207 = add i8 %179, 2, !dbg !4939
  call void @llvm.dbg.value(metadata i8 %207, metadata !4736, metadata !DIExpression()), !dbg !4760
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4940
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4940
  store i8 %184, i8* %214, align 1, !dbg !4940
  br label %215, !dbg !4941

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4760
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4889
  call void @llvm.dbg.value(metadata i8 %217, metadata !4736, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8 %216, metadata !4735, metadata !DIExpression()), !dbg !4760
  %218 = add nuw nsw i32 %178, 1, !dbg !4941
  call void @llvm.dbg.value(metadata i8* %183, metadata !4710, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %218, metadata !4739, metadata !DIExpression()), !dbg !4884
  %219 = icmp eq i32 %218, %28, !dbg !4885
  br i1 %219, label %157, label %176, !dbg !4886, !llvm.loop !4942

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4894
  call void @llvm.dbg.value(metadata i32 %174, metadata !4708, metadata !DIExpression()), !dbg !4760
  store i32 %173, i32* %11, align 1, !dbg !4944
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4945
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !4946
  call void @llvm.dbg.value(metadata i32 %223, metadata !4738, metadata !DIExpression()), !dbg !4760
  %224 = icmp slt i32 %223, 0, !dbg !4947
  br i1 %224, label %267, label %225, !dbg !4949

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4708, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4760
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4950
  %228 = add nuw nsw i32 %41, %21, !dbg !4950
  %229 = sub i32 %227, %228, !dbg !4950
  call void @llvm.dbg.value(metadata i32 %229, metadata !4748, metadata !DIExpression()), !dbg !4760
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %230, metadata !4738, metadata !DIExpression()), !dbg !4760
  %231 = icmp slt i32 %230, 0, !dbg !4952
  br i1 %231, label %267, label %232, !dbg !4954

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4955
  call void @llvm.dbg.value(metadata i32 %233, metadata !4708, metadata !DIExpression()), !dbg !4760
  %234 = add nuw nsw i32 %233, %230, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %234, metadata !4708, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 0, metadata !4749, metadata !DIExpression()), !dbg !4957
  %235 = icmp eq i8 %159, 0, !dbg !4958
  br i1 %235, label %264, label %236, !dbg !4959

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4959

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4749, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.value(metadata i32 %240, metadata !4708, metadata !DIExpression()), !dbg !4760
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4960
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4961
  %242 = load i8, i8* %241, align 1, !dbg !4961
  call void @llvm.dbg.value(metadata i8 %242, metadata !4751, metadata !DIExpression()), !dbg !4962
  store i8 %242, i8* %10, align 1, !dbg !4963
  %243 = zext i8 %242 to i32, !dbg !4964
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4964
  %245 = bitcast i32* %244 to i8**, !dbg !4965
  %246 = load i8*, i8** %245, align 4, !dbg !4965
  call void @llvm.dbg.value(metadata i8* %246, metadata !4754, metadata !DIExpression()), !dbg !4962
  br i1 %237, label %250, label %247, !dbg !4966

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4967
  %249 = load i16, i16* %248, align 2, !dbg !4967
  br label %250, !dbg !4966

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4966
  call void @llvm.dbg.value(metadata i32 undef, metadata !4755, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4962
  call void @llvm.dbg.value(metadata i8* %10, metadata !4751, metadata !DIExpression(DW_OP_deref)), !dbg !4962
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %252, metadata !4738, metadata !DIExpression()), !dbg !4760
  %253 = icmp slt i32 %252, 0, !dbg !4969
  br i1 %253, label %257, label %254, !dbg !4971

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4755, metadata !DIExpression()), !dbg !4962
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4708, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4760
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %255, metadata !4738, metadata !DIExpression()), !dbg !4760
  %256 = icmp slt i32 %255, 0, !dbg !4973
  br i1 %256, label %257, label %259, !dbg !4975

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4708, metadata !DIExpression()), !dbg !4760
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4976
  call void @llvm.dbg.value(metadata i32 undef, metadata !4708, metadata !DIExpression()), !dbg !4760
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %260, metadata !4708, metadata !DIExpression()), !dbg !4760
  %261 = add nsw i32 %260, %255, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %261, metadata !4708, metadata !DIExpression()), !dbg !4760
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4976
  %262 = add nuw nsw i32 %239, 1, !dbg !4979
  call void @llvm.dbg.value(metadata i32 %262, metadata !4749, metadata !DIExpression()), !dbg !4957
  %263 = icmp eq i32 %262, %164, !dbg !4958
  br i1 %263, label %264, label %238, !dbg !4959, !llvm.loop !4980

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4956
  call void @llvm.dbg.value(metadata i32 %265, metadata !4708, metadata !DIExpression()), !dbg !4760
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4982
  br label %267, !dbg !4983

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4760
  ret i32 %268, !dbg !4984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4985 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4989, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.value(metadata i8* %0, metadata !4990, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.value(metadata i8* %0, metadata !4991, metadata !DIExpression()), !dbg !4997
  %2 = load i8, i8* %0, align 1, !dbg !4998
  %3 = zext i8 %2 to i32, !dbg !4998
  %4 = shl nuw nsw i32 %3, 2, !dbg !4999
  call void @llvm.dbg.value(metadata i32 %4, metadata !4992, metadata !DIExpression()), !dbg !4997
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5000
  %6 = load i8, i8* %5, align 1, !dbg !5000
  %7 = zext i8 %6 to i32, !dbg !5000
  call void @llvm.dbg.value(metadata i32 %7, metadata !4993, metadata !DIExpression()), !dbg !4997
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5001
  %9 = load i8, i8* %8, align 1, !dbg !5001
  %10 = zext i8 %9 to i32, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %10, metadata !4994, metadata !DIExpression()), !dbg !4997
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !5002
  call void @llvm.dbg.value(metadata i8* %11, metadata !4990, metadata !DIExpression()), !dbg !4997
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !5003
  call void @llvm.dbg.value(metadata i8* %12, metadata !4990, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.value(metadata i32 0, metadata !4995, metadata !DIExpression()), !dbg !5004
  %13 = icmp eq i8 %6, 0, !dbg !5005
  br i1 %13, label %14, label %19, !dbg !5007

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4997
  %16 = ptrtoint i8* %15 to i32, !dbg !5008
  %17 = ptrtoint i8* %0 to i32, !dbg !5008
  %18 = sub i32 %16, %17, !dbg !5008
  ret i32 %18, !dbg !5009

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4995, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i8* %21, metadata !4990, metadata !DIExpression()), !dbg !4997
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !5010
  call void @llvm.dbg.value(metadata i8* %22, metadata !4990, metadata !DIExpression()), !dbg !4997
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !5012
  %24 = add i32 %23, 1, !dbg !5013
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !5014
  call void @llvm.dbg.value(metadata i8* %25, metadata !4990, metadata !DIExpression()), !dbg !4997
  %26 = add nuw nsw i32 %20, 1, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %26, metadata !4995, metadata !DIExpression()), !dbg !5004
  %27 = icmp eq i32 %26, %7, !dbg !5005
  br i1 %27, label %14, label %19, !dbg !5007, !llvm.loop !5016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5018 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5022, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %1, metadata !5023, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %2, metadata !5024, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i16 %3, metadata !5025, metadata !DIExpression()), !dbg !5026
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5027
  br i1 %5, label %6, label %9, !dbg !5029

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5030
  %8 = add i32 %7, 1, !dbg !5032
  br label %20, !dbg !5033

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5034
  br i1 %10, label %13, label %11, !dbg !5035

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5035
  br label %16, !dbg !5035

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5036
  %15 = add i32 %14, 1, !dbg !5037
  br label %16, !dbg !5035

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5035
  %18 = and i32 %17, 65535, !dbg !5038
  call void @llvm.dbg.value(metadata i32 %17, metadata !5025, metadata !DIExpression()), !dbg !5026
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !5039
  br label %20, !dbg !5040

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5026
  ret i32 %21, !dbg !5041
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5044, metadata !DIExpression()), !dbg !5045
  ret i32 0, !dbg !5046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !5047 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5051, metadata !DIExpression()), !dbg !5052
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5053
  ret void, !dbg !5054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5055 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5058
  ret i8* %1, !dbg !5059
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5060 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5071, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i8* %0, metadata !5070, metadata !DIExpression()), !dbg !5082
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !5083
  ret void, !dbg !5085
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5090, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %1, metadata !5091, metadata !DIExpression()), !dbg !5092
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5093
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !5093
  ret i32 %4, !dbg !5094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5095 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5102, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5099, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata i8* %1, metadata !5100, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata i8* %2, metadata !5101, metadata !DIExpression()), !dbg !5103
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !5104
  ret void, !dbg !5105
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5106 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5110, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata i32 %1, metadata !5111, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata i32 0, metadata !5112, metadata !DIExpression()), !dbg !5113
  %3 = icmp eq i32 %1, 0, !dbg !5114
  br i1 %3, label %13, label %4, !dbg !5117

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5112, metadata !DIExpression()), !dbg !5113
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5118
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5120
  %8 = load i8, i8* %7, align 1, !dbg !5120
  %9 = zext i8 %8 to i32, !dbg !5120
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !5118
  %11 = add nuw i32 %5, 1, !dbg !5121
  call void @llvm.dbg.value(metadata i32 %11, metadata !5112, metadata !DIExpression()), !dbg !5113
  %12 = icmp eq i32 %11, %1, !dbg !5114
  br i1 %12, label %13, label %4, !dbg !5117, !llvm.loop !5122

13:                                               ; preds = %4, %2
  ret void, !dbg !5124
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5125 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5129, metadata !DIExpression()), !dbg !5131
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !5132
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5132
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !5130, metadata !DIExpression()), !dbg !5133
  call void @llvm.va_start(i8* nonnull %3), !dbg !5134
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !5135
  %5 = load i32, i32* %4, align 4, !dbg !5135
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5135
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !5135
  call void @llvm.va_end(i8* nonnull %3), !dbg !5136
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5137
  ret void, !dbg !5137
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5138 {
  %4 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5142, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata i32 %1, metadata !5143, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.value(metadata i8* %2, metadata !5144, metadata !DIExpression()), !dbg !5147
  %5 = bitcast %union.anon.4* %4 to i8*, !dbg !5148
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5148
  call void @llvm.dbg.declare(metadata %union.anon.4* %4, metadata !5145, metadata !DIExpression()), !dbg !5149
  call void @llvm.va_start(i8* nonnull %5), !dbg !5150
  %6 = bitcast %union.anon.4* %4 to i32*, !dbg !5151
  %7 = load i32, i32* %6, align 4, !dbg !5151
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5151
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !5151
  call void @llvm.dbg.value(metadata i32 %9, metadata !5146, metadata !DIExpression()), !dbg !5147
  call void @llvm.va_end(i8* nonnull %5), !dbg !5152
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5153
  ret i32 %9, !dbg !5154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5155 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5162, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.value(metadata i8* %0, metadata !5159, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.value(metadata i32 %1, metadata !5160, metadata !DIExpression()), !dbg !5169
  call void @llvm.dbg.value(metadata i8* %2, metadata !5161, metadata !DIExpression()), !dbg !5169
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5170
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5170
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5163, metadata !DIExpression()), !dbg !5171
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5172
  store i8* %0, i8** %7, align 4, !dbg !5172
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5172
  store i32 %1, i32* %8, align 4, !dbg !5172
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5172
  store i32 0, i32* %9, align 4, !dbg !5172
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !5173
  %10 = load i32, i32* %9, align 4, !dbg !5174
  %11 = load i32, i32* %8, align 4, !dbg !5176
  %12 = icmp slt i32 %10, %11, !dbg !5177
  br i1 %12, label %13, label %15, !dbg !5178

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5179
  store i8 0, i8* %14, align 1, !dbg !5181
  br label %15, !dbg !5182

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5183
  ret i32 %10, !dbg !5184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5190, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5191, metadata !DIExpression()), !dbg !5192
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5193
  %4 = load i8*, i8** %3, align 4, !dbg !5193
  %5 = icmp eq i8* %4, null, !dbg !5195
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5196
  br i1 %5, label %12, label %8, !dbg !5197

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5198
  %10 = load i32, i32* %9, align 4, !dbg !5198
  %11 = icmp slt i32 %7, %10, !dbg !5199
  br i1 %11, label %15, label %12, !dbg !5200

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5201
  %14 = add nsw i32 %7, 1, !dbg !5203
  store i32 %14, i32* %13, align 4, !dbg !5203
  br label %25, !dbg !5204

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5205
  %17 = icmp eq i32 %7, %16, !dbg !5207
  br i1 %17, label %18, label %21, !dbg !5208

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5209
  store i32 %19, i32* %6, align 4, !dbg !5209
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5211
  store i8 0, i8* %20, align 1, !dbg !5212
  br label %25, !dbg !5213

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5214
  %23 = add nsw i32 %7, 1, !dbg !5216
  store i32 %23, i32* %6, align 4, !dbg !5216
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5217
  store i8 %22, i8* %24, align 1, !dbg !5218
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5219
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !5220 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5230, metadata !DIExpression()), !dbg !5234
  call void @llvm.dbg.value(metadata i8* %1, metadata !5231, metadata !DIExpression()), !dbg !5234
  call void @llvm.dbg.value(metadata i8* %2, metadata !5232, metadata !DIExpression()), !dbg !5234
  call void @llvm.dbg.value(metadata i8* %3, metadata !5233, metadata !DIExpression()), !dbg !5234
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5235
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !5236
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !5237
  unreachable, !dbg !5238
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !5239 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !5343
  ret %struct.k_thread* %1, !dbg !5344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5350, metadata !DIExpression()), !dbg !5351
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5352, !srcloc !5354
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5355
  ret void, !dbg !5356
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !5357 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5358, !srcloc !5360
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5361
  ret %struct.k_thread* %1, !dbg !5362
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5363 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5376, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5373, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i8* %1, metadata !5374, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i8* %2, metadata !5375, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %4, metadata !5377, metadata !DIExpression()), !dbg !5502
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5503
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5503
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5378, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i32 0, metadata !5382, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i1 undef, metadata !5384, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5502
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5505

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5505

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5506
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5376, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i8* %30, metadata !5375, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %29, metadata !5382, metadata !DIExpression()), !dbg !5502
  %31 = load i8, i8* %30, align 1, !dbg !5507
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5505

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5507
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5508
  call void @llvm.dbg.value(metadata i8* %34, metadata !5375, metadata !DIExpression()), !dbg !5502
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5508
  call void @llvm.dbg.value(metadata i32 %35, metadata !5386, metadata !DIExpression()), !dbg !5509
  %36 = icmp slt i32 %35, 0, !dbg !5510
  %37 = add i32 %29, 1, !dbg !5508
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression()), !dbg !5502
  br i1 %36, label %365, label %28, !llvm.loop !5512

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5514
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5391, metadata !DIExpression()), !dbg !5515
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5515
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5434, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5437, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i8* %30, metadata !5440, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i32 -1, metadata !5441, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i32 -1, metadata !5442, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i8* null, metadata !5443, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i8* %14, metadata !5444, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i8 0, metadata !5445, metadata !DIExpression()), !dbg !5516
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5517
  call void @llvm.dbg.value(metadata i8* %39, metadata !5375, metadata !DIExpression()), !dbg !5502
  %40 = load i24, i24* %15, align 8, !dbg !5518
  %41 = and i24 %40, 256, !dbg !5518
  %42 = icmp eq i24 %41, 0, !dbg !5518
  br i1 %42, label %51, label %43, !dbg !5520

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5521
  call void @llvm.dbg.value(metadata i8* %44, metadata !5376, metadata !DIExpression()), !dbg !5502
  %45 = bitcast i8* %27 to i32*, !dbg !5521
  %46 = load i32, i32* %45, align 4, !dbg !5521
  call void @llvm.dbg.value(metadata i32 %46, metadata !5441, metadata !DIExpression()), !dbg !5516
  %47 = icmp slt i32 %46, 0, !dbg !5523
  br i1 %47, label %48, label %56, !dbg !5525

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5526
  store i24 %49, i24* %15, align 8, !dbg !5526
  %50 = sub nsw i32 0, %46, !dbg !5528
  call void @llvm.dbg.value(metadata i32 %50, metadata !5441, metadata !DIExpression()), !dbg !5516
  br label %56, !dbg !5529

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5530
  %53 = icmp eq i24 %52, 0, !dbg !5530
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5532
  br label %56, !dbg !5532

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5533
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5516
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5376, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %58, metadata !5441, metadata !DIExpression()), !dbg !5516
  %60 = and i24 %57, 1024, !dbg !5533
  %61 = icmp eq i24 %60, 0, !dbg !5533
  br i1 %61, label %69, label %62, !dbg !5534

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5535
  call void @llvm.dbg.value(metadata i8* %63, metadata !5376, metadata !DIExpression()), !dbg !5502
  %64 = bitcast i8* %59 to i32*, !dbg !5535
  %65 = load i32, i32* %64, align 4, !dbg !5535
  call void @llvm.dbg.value(metadata i32 %65, metadata !5446, metadata !DIExpression()), !dbg !5536
  %66 = icmp slt i32 %65, 0, !dbg !5537
  br i1 %66, label %67, label %74, !dbg !5539

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5540
  store i24 %68, i24* %15, align 8, !dbg !5540
  br label %74, !dbg !5542

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5543
  %71 = icmp eq i24 %70, 0, !dbg !5543
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5545
  br label %74, !dbg !5545

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5546
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5516
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5516
  call void @llvm.dbg.value(metadata i8* %77, metadata !5376, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %76, metadata !5442, metadata !DIExpression()), !dbg !5516
  store i32 0, i32* %16, align 4, !dbg !5547
  store i32 0, i32* %17, align 8, !dbg !5548
  %78 = lshr i24 %75, 16, !dbg !5546
  call void @llvm.dbg.value(metadata i24 %78, metadata !5449, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5516
  %79 = lshr i24 %75, 11, !dbg !5549
  %80 = and i24 %79, 15, !dbg !5549
  %81 = zext i24 %80 to i32, !dbg !5549
  call void @llvm.dbg.value(metadata i32 %81, metadata !5450, metadata !DIExpression()), !dbg !5516
  %82 = trunc i24 %78 to i3, !dbg !5550
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5550

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5551

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5554
  call void @llvm.dbg.value(metadata i8* %85, metadata !5376, metadata !DIExpression()), !dbg !5502
  %86 = bitcast i8* %77 to i32*, !dbg !5554
  %87 = load i32, i32* %86, align 4, !dbg !5554
  %88 = sext i32 %87 to i64, !dbg !5554
  store i64 %88, i64* %20, align 8, !dbg !5556
  br label %115, !dbg !5557

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5558
  call void @llvm.dbg.value(metadata i8* %90, metadata !5376, metadata !DIExpression()), !dbg !5502
  %91 = bitcast i8* %77 to i32*, !dbg !5558
  %92 = load i32, i32* %91, align 4, !dbg !5558
  %93 = sext i32 %92 to i64, !dbg !5558
  store i64 %93, i64* %20, align 8, !dbg !5561
  br label %115, !dbg !5562

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5563
  %96 = add i32 %95, 7, !dbg !5563
  %97 = and i32 %96, -8, !dbg !5563
  %98 = inttoptr i32 %97 to i8*, !dbg !5563
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5563
  call void @llvm.dbg.value(metadata i8* %99, metadata !5376, metadata !DIExpression()), !dbg !5502
  %100 = inttoptr i32 %97 to i64*, !dbg !5563
  %101 = load i64, i64* %100, align 8, !dbg !5563
  store i64 %101, i64* %20, align 8, !dbg !5564
  br label %115, !dbg !5565

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5566
  %104 = add i32 %103, 7, !dbg !5566
  %105 = and i32 %104, -8, !dbg !5566
  %106 = inttoptr i32 %105 to i8*, !dbg !5566
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5566
  call void @llvm.dbg.value(metadata i8* %107, metadata !5376, metadata !DIExpression()), !dbg !5502
  %108 = inttoptr i32 %105 to i64*, !dbg !5566
  %109 = load i64, i64* %108, align 8, !dbg !5566
  store i64 %109, i64* %20, align 8, !dbg !5567
  br label %115, !dbg !5568

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5569
  call void @llvm.dbg.value(metadata i8* %111, metadata !5376, metadata !DIExpression()), !dbg !5502
  %112 = bitcast i8* %77 to i32*, !dbg !5569
  %113 = load i32, i32* %112, align 4, !dbg !5569
  %114 = sext i32 %113 to i64, !dbg !5570
  store i64 %114, i64* %20, align 8, !dbg !5571
  br label %115, !dbg !5572

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5573
  call void @llvm.dbg.value(metadata i8* %117, metadata !5376, metadata !DIExpression()), !dbg !5502
  %118 = trunc i24 %79 to i4, !dbg !5574
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5574

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5575
  %121 = ashr exact i64 %120, 56, !dbg !5575
  store i64 %121, i64* %20, align 8, !dbg !5578
  br label %177, !dbg !5579

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5580
  %124 = ashr exact i64 %123, 48, !dbg !5580
  store i64 %124, i64* %20, align 8, !dbg !5583
  br label %177, !dbg !5584

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5585

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5588
  call void @llvm.dbg.value(metadata i8* %127, metadata !5376, metadata !DIExpression()), !dbg !5502
  %128 = bitcast i8* %77 to i32*, !dbg !5588
  %129 = load i32, i32* %128, align 4, !dbg !5588
  %130 = zext i32 %129 to i64, !dbg !5588
  store i64 %130, i64* %20, align 8, !dbg !5590
  br label %157, !dbg !5591

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5592
  call void @llvm.dbg.value(metadata i8* %132, metadata !5376, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i8* %132, metadata !5376, metadata !DIExpression()), !dbg !5502
  %133 = bitcast i8* %77 to i32*, !dbg !5592
  %134 = load i32, i32* %133, align 4, !dbg !5592
  %135 = zext i32 %134 to i64, !dbg !5592
  store i64 %135, i64* %20, align 8, !dbg !5592
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5594
  %138 = add i32 %137, 7, !dbg !5594
  %139 = and i32 %138, -8, !dbg !5594
  %140 = inttoptr i32 %139 to i8*, !dbg !5594
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5594
  call void @llvm.dbg.value(metadata i8* %141, metadata !5376, metadata !DIExpression()), !dbg !5502
  %142 = inttoptr i32 %139 to i64*, !dbg !5594
  %143 = load i64, i64* %142, align 8, !dbg !5594
  store i64 %143, i64* %20, align 8, !dbg !5595
  br label %157, !dbg !5596

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5597
  %146 = add i32 %145, 7, !dbg !5597
  %147 = and i32 %146, -8, !dbg !5597
  %148 = inttoptr i32 %147 to i8*, !dbg !5597
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5597
  call void @llvm.dbg.value(metadata i8* %149, metadata !5376, metadata !DIExpression()), !dbg !5502
  %150 = inttoptr i32 %147 to i64*, !dbg !5597
  %151 = load i64, i64* %150, align 8, !dbg !5597
  store i64 %151, i64* %20, align 8, !dbg !5598
  br label %157, !dbg !5599

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5600
  call void @llvm.dbg.value(metadata i8* %153, metadata !5376, metadata !DIExpression()), !dbg !5502
  %154 = bitcast i8* %77 to i32*, !dbg !5600
  %155 = load i32, i32* %154, align 4, !dbg !5600
  %156 = zext i32 %155 to i64, !dbg !5601
  store i64 %156, i64* %20, align 8, !dbg !5602
  br label %157, !dbg !5603

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5604
  call void @llvm.dbg.value(metadata i8* %159, metadata !5376, metadata !DIExpression()), !dbg !5502
  %160 = trunc i24 %79 to i4, !dbg !5605
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5605

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5606
  store i64 %162, i64* %20, align 8, !dbg !5609
  br label %177, !dbg !5610

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5611
  store i64 %164, i64* %20, align 8, !dbg !5614
  br label %177, !dbg !5615

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5616
  %167 = add i32 %166, 7, !dbg !5616
  %168 = and i32 %167, -8, !dbg !5616
  %169 = inttoptr i32 %168 to i8*, !dbg !5616
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5616
  call void @llvm.dbg.value(metadata i8* %170, metadata !5376, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i8* %170, metadata !5376, metadata !DIExpression()), !dbg !5502
  %171 = inttoptr i32 %168 to double*, !dbg !5616
  %172 = load double, double* %171, align 8, !dbg !5616
  store double %172, double* %19, align 8, !dbg !5616
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5620
  call void @llvm.dbg.value(metadata i8* %174, metadata !5376, metadata !DIExpression()), !dbg !5502
  %175 = bitcast i8* %77 to i8**, !dbg !5620
  %176 = load i8*, i8** %175, align 4, !dbg !5620
  store i8* %176, i8** %18, align 8, !dbg !5623
  br label %177, !dbg !5624

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5516
  call void @llvm.dbg.value(metadata i8* %178, metadata !5376, metadata !DIExpression()), !dbg !5502
  %179 = and i24 %75, 3, !dbg !5625
  %180 = icmp eq i24 %179, 0, !dbg !5625
  br i1 %180, label %185, label %181, !dbg !5625

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5626
  call void @llvm.dbg.value(metadata i32 %182, metadata !5451, metadata !DIExpression()), !dbg !5627
  %183 = icmp slt i32 %182, 0, !dbg !5628
  %184 = add i32 %182, %29, !dbg !5626
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression()), !dbg !5502
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5630
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5631

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5632
  call void @llvm.dbg.value(metadata i32 %188, metadata !5455, metadata !DIExpression()), !dbg !5633
  %189 = icmp slt i32 %188, 0, !dbg !5634
  %190 = add i32 %29, 1, !dbg !5632
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression()), !dbg !5502
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5636
  call void @llvm.dbg.value(metadata i8* %192, metadata !5443, metadata !DIExpression()), !dbg !5516
  %193 = icmp sgt i32 %76, -1, !dbg !5637
  br i1 %193, label %194, label %196, !dbg !5639

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5640
  call void @llvm.dbg.value(metadata i32 %195, metadata !5458, metadata !DIExpression()), !dbg !5642
  br label %241, !dbg !5643

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5644
  call void @llvm.dbg.value(metadata i32 %197, metadata !5458, metadata !DIExpression()), !dbg !5642
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5443, metadata !DIExpression()), !dbg !5516
  %199 = load i64, i64* %20, align 8, !dbg !5646
  %200 = trunc i64 %199 to i8, !dbg !5647
  store i8 %200, i8* %10, align 1, !dbg !5648
  call void @llvm.dbg.value(metadata i8* %23, metadata !5444, metadata !DIExpression()), !dbg !5516
  br label %245, !dbg !5649

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5650
  %203 = icmp eq i24 %202, 0, !dbg !5650
  %204 = trunc i24 %75 to i8, !dbg !5652
  %205 = shl i8 %204, 1, !dbg !5652
  %206 = and i8 %205, 32, !dbg !5652
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5652
  call void @llvm.dbg.value(metadata i8 %207, metadata !5445, metadata !DIExpression()), !dbg !5516
  %208 = load i64, i64* %20, align 8, !dbg !5653
  call void @llvm.dbg.value(metadata i64 %208, metadata !5383, metadata !DIExpression()), !dbg !5502
  %209 = icmp slt i64 %208, 0, !dbg !5654
  br i1 %209, label %210, label %212, !dbg !5656

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5445, metadata !DIExpression()), !dbg !5516
  %211 = sub nsw i64 0, %208, !dbg !5657
  store i64 %211, i64* %20, align 8, !dbg !5659
  br label %212, !dbg !5660

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5516
  call void @llvm.dbg.value(metadata i8 %213, metadata !5445, metadata !DIExpression()), !dbg !5516
  %214 = load i64, i64* %20, align 8, !dbg !5661
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5662
  call void @llvm.dbg.value(metadata i8* %215, metadata !5443, metadata !DIExpression()), !dbg !5516
  br label %216, !dbg !5663

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5664
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5665
  call void @llvm.dbg.value(metadata i8* %218, metadata !5443, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i8 %217, metadata !5445, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.label(metadata !5501), !dbg !5666
  %219 = icmp sgt i32 %76, -1, !dbg !5667
  br i1 %219, label %222, label %220, !dbg !5668

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5669
  br label %245, !dbg !5668

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5671
  %224 = sub i32 %22, %223, !dbg !5671
  call void @llvm.dbg.value(metadata i32 %224, metadata !5460, metadata !DIExpression()), !dbg !5672
  %225 = load i24, i24* %15, align 8, !dbg !5673
  %226 = and i24 %225, -65, !dbg !5673
  store i24 %226, i24* %15, align 8, !dbg !5673
  %227 = icmp ugt i32 %76, %224, !dbg !5674
  br i1 %227, label %228, label %245, !dbg !5676

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5677
  store i32 %229, i32* %16, align 4, !dbg !5679
  br label %245, !dbg !5680

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5681
  %232 = icmp eq i8* %231, null, !dbg !5683
  br i1 %232, label %245, label %233, !dbg !5684

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5685
  %235 = zext i32 %234 to i64, !dbg !5685
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5687
  call void @llvm.dbg.value(metadata i8* %236, metadata !5443, metadata !DIExpression()), !dbg !5516
  %237 = load i24, i24* %15, align 8, !dbg !5688
  %238 = or i24 %237, 1048576, !dbg !5688
  store i24 %238, i24* %15, align 8, !dbg !5688
  store i8 120, i8* %21, align 1, !dbg !5689
  br label %216, !dbg !5690

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5691
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5694
  br label %363, !dbg !5695

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5696
  call void @llvm.dbg.value(metadata i32 %242, metadata !5458, metadata !DIExpression()), !dbg !5642
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5697
  call void @llvm.dbg.value(metadata i32 -1, metadata !5442, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i32 %29, metadata !5382, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i8* %192, metadata !5443, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i8* %243, metadata !5444, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i8 0, metadata !5445, metadata !DIExpression()), !dbg !5516
  %244 = icmp eq i8* %192, null, !dbg !5698
  br i1 %244, label %363, label %245, !dbg !5700, !llvm.loop !5512

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5669
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5516
  call void @llvm.dbg.value(metadata i32 0, metadata !5464, metadata !DIExpression()), !dbg !5516
  %250 = zext i8 %249 to i32, !dbg !5701
  %251 = icmp eq i8 %249, 0, !dbg !5703
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5516
  call void @llvm.dbg.value(metadata i32 undef, metadata !5463, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5516
  call void @llvm.dbg.value(metadata i32 undef, metadata !5463, metadata !DIExpression()), !dbg !5516
  %252 = icmp sgt i32 %58, 0, !dbg !5704
  br i1 %252, label %253, label %302, !dbg !5705

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5669
  %255 = icmp eq i24 %254, 0, !dbg !5669
  %256 = ptrtoint i8* %248 to i32, !dbg !5706
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5516
  %257 = ptrtoint i8* %247 to i32, !dbg !5706
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5516
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5516
  %258 = xor i1 %251, true, !dbg !5707
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5516
  %259 = sext i1 %258 to i32, !dbg !5707
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5516
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5516
  %260 = lshr i24 %246, 19, !dbg !5708
  %261 = and i24 %260, 1, !dbg !5708
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5708
  %263 = zext i24 %262 to i32, !dbg !5708
  %264 = add i32 %257, %259, !dbg !5708
  %265 = add i32 %256, %263, !dbg !5708
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5516
  %266 = and i24 %246, 4194304, !dbg !5709
  %267 = icmp eq i24 %266, 0, !dbg !5709
  %268 = load i32, i32* %16, align 4, !dbg !5711
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5463, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5516
  call void @llvm.dbg.value(metadata i32 undef, metadata !5463, metadata !DIExpression()), !dbg !5516
  %269 = load i32, i32* %17, align 8, !dbg !5712
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5712
  call void @llvm.dbg.value(metadata i32 undef, metadata !5463, metadata !DIExpression()), !dbg !5516
  %271 = add i32 %264, %58, !dbg !5712
  %272 = add i32 %265, %268, !dbg !5712
  %273 = add i32 %272, %270, !dbg !5713
  %274 = sub i32 %271, %273, !dbg !5713
  call void @llvm.dbg.value(metadata i32 %274, metadata !5441, metadata !DIExpression()), !dbg !5516
  %275 = and i24 %246, 4, !dbg !5714
  %276 = icmp eq i24 %275, 0, !dbg !5714
  br i1 %276, label %277, label %302, !dbg !5715

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5465, metadata !DIExpression()), !dbg !5716
  %278 = and i24 %246, 64, !dbg !5717
  %279 = icmp eq i24 %278, 0, !dbg !5717
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5718
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5718
  %282 = select i1 %279, i32 32, i32 48, !dbg !5718
  br i1 %280, label %287, label %283, !dbg !5718

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5719
  call void @llvm.dbg.value(metadata i32 %284, metadata !5470, metadata !DIExpression()), !dbg !5720
  %285 = icmp slt i32 %284, 0, !dbg !5721
  %286 = add i32 %29, 1, !dbg !5719
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression()), !dbg !5502
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5516
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5506
  call void @llvm.dbg.value(metadata i32 %290, metadata !5382, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i8 undef, metadata !5465, metadata !DIExpression()), !dbg !5716
  call void @llvm.dbg.value(metadata i8 %288, metadata !5445, metadata !DIExpression()), !dbg !5516
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5723
  %292 = add i32 %291, -1, !dbg !5723
  br label %293, !dbg !5723

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5724
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5506
  call void @llvm.dbg.value(metadata i32 %295, metadata !5382, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %294, metadata !5441, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i32 %294, metadata !5441, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5516
  %296 = icmp sgt i32 %294, 0, !dbg !5725
  br i1 %296, label %297, label %302, !dbg !5723

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5726
  call void @llvm.dbg.value(metadata i32 %298, metadata !5441, metadata !DIExpression()), !dbg !5516
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5727
  call void @llvm.dbg.value(metadata i32 %299, metadata !5476, metadata !DIExpression()), !dbg !5728
  %300 = icmp slt i32 %299, 0, !dbg !5729
  %301 = add i32 %295, 1, !dbg !5727
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression()), !dbg !5502
  br i1 %300, label %361, label %293, !llvm.loop !5731

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5516
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5516
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5506
  call void @llvm.dbg.value(metadata i32 %305, metadata !5382, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %304, metadata !5441, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata i8 %303, metadata !5445, metadata !DIExpression()), !dbg !5516
  %306 = icmp eq i8 %303, 0, !dbg !5733
  br i1 %306, label %312, label %307, !dbg !5734

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5735
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5736
  call void @llvm.dbg.value(metadata i32 %309, metadata !5479, metadata !DIExpression()), !dbg !5737
  %310 = icmp slt i32 %309, 0, !dbg !5738
  %311 = add i32 %305, 1, !dbg !5736
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression()), !dbg !5502
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5506
  call void @llvm.dbg.value(metadata i32 %313, metadata !5382, metadata !DIExpression()), !dbg !5502
  %314 = lshr i24 %246, 20, !dbg !5740
  %315 = lshr i24 %246, 19, !dbg !5741
  %316 = or i24 %314, %315, !dbg !5742
  %317 = and i24 %316, 1, !dbg !5742
  %318 = icmp eq i24 %317, 0, !dbg !5742
  br i1 %318, label %323, label %319, !dbg !5743

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5744
  call void @llvm.dbg.value(metadata i32 %320, metadata !5483, metadata !DIExpression()), !dbg !5745
  %321 = icmp slt i32 %320, 0, !dbg !5746
  %322 = add i32 %313, 1, !dbg !5744
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression()), !dbg !5502
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5506
  call void @llvm.dbg.value(metadata i32 %324, metadata !5382, metadata !DIExpression()), !dbg !5502
  %325 = and i24 %246, 1048576, !dbg !5748
  %326 = icmp eq i24 %325, 0, !dbg !5748
  br i1 %326, label %333, label %327, !dbg !5749

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5750
  %329 = zext i8 %328 to i32, !dbg !5750
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5750
  call void @llvm.dbg.value(metadata i32 %330, metadata !5489, metadata !DIExpression()), !dbg !5751
  %331 = icmp slt i32 %330, 0, !dbg !5752
  %332 = add i32 %324, 1, !dbg !5750
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression()), !dbg !5502
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5506
  call void @llvm.dbg.value(metadata i32 %334, metadata !5382, metadata !DIExpression()), !dbg !5502
  %335 = load i32, i32* %16, align 4, !dbg !5754
  call void @llvm.dbg.value(metadata i32 %335, metadata !5464, metadata !DIExpression()), !dbg !5516
  br label %336, !dbg !5755

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5756
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5506
  call void @llvm.dbg.value(metadata i32 %338, metadata !5382, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %337, metadata !5464, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5516
  %339 = icmp sgt i32 %337, 0, !dbg !5757
  br i1 %339, label %340, label %345, !dbg !5755

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5758
  call void @llvm.dbg.value(metadata i32 %341, metadata !5464, metadata !DIExpression()), !dbg !5516
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5759
  call void @llvm.dbg.value(metadata i32 %342, metadata !5493, metadata !DIExpression()), !dbg !5760
  %343 = icmp slt i32 %342, 0, !dbg !5761
  %344 = add i32 %338, 1, !dbg !5759
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression()), !dbg !5502
  br i1 %343, label %361, label %336, !llvm.loop !5763

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5765
  call void @llvm.dbg.value(metadata i32 %346, metadata !5496, metadata !DIExpression()), !dbg !5766
  %347 = icmp slt i32 %346, 0, !dbg !5767
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression()), !dbg !5502
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5765
  call void @llvm.dbg.value(metadata i32 %349, metadata !5382, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %304, metadata !5441, metadata !DIExpression()), !dbg !5516
  %350 = icmp sgt i32 %304, 0, !dbg !5769
  br i1 %350, label %351, label %363, !dbg !5770

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5770
  %353 = add i32 %352, %338, !dbg !5770
  br label %354, !dbg !5770

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %355, metadata !5441, metadata !DIExpression()), !dbg !5516
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5771
  call void @llvm.dbg.value(metadata i32 %356, metadata !5498, metadata !DIExpression()), !dbg !5772
  %357 = icmp slt i32 %356, 0, !dbg !5773
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5775
  call void @llvm.dbg.value(metadata i32 undef, metadata !5382, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %359, metadata !5441, metadata !DIExpression()), !dbg !5516
  %360 = icmp sgt i32 %355, 1, !dbg !5769
  br i1 %360, label %354, label %363, !dbg !5770, !llvm.loop !5776

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5382, metadata !DIExpression()), !dbg !5502
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5513
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5506
  call void @llvm.dbg.value(metadata i32 %364, metadata !5382, metadata !DIExpression()), !dbg !5502
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5513
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5502
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5778
  ret i32 %366, !dbg !5778
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5779 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5783, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i8* %1, metadata !5784, metadata !DIExpression()), !dbg !5785
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5786
  store i24 0, i24* %3, align 4, !dbg !5786
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5786
  store i8 0, i8* %4, align 1, !dbg !5786
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5786
  store i32 0, i32* %5, align 4, !dbg !5786
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5786
  store i32 0, i32* %6, align 4, !dbg !5786
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5787
  call void @llvm.dbg.value(metadata i8* %7, metadata !5784, metadata !DIExpression()), !dbg !5785
  %8 = load i8, i8* %7, align 1, !dbg !5788
  %9 = icmp eq i8 %8, 37, !dbg !5790
  br i1 %9, label %10, label %12, !dbg !5791

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5792
  call void @llvm.dbg.value(metadata i8* %11, metadata !5784, metadata !DIExpression()), !dbg !5785
  store i8 37, i8* %4, align 1, !dbg !5794
  br label %18, !dbg !5795

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5796
  call void @llvm.dbg.value(metadata i8* %13, metadata !5784, metadata !DIExpression()), !dbg !5785
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5797
  call void @llvm.dbg.value(metadata i8* %14, metadata !5784, metadata !DIExpression()), !dbg !5785
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5798
  call void @llvm.dbg.value(metadata i8* %15, metadata !5784, metadata !DIExpression()), !dbg !5785
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5799
  call void @llvm.dbg.value(metadata i8* %16, metadata !5784, metadata !DIExpression()), !dbg !5785
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5800
  call void @llvm.dbg.value(metadata i8* %17, metadata !5784, metadata !DIExpression()), !dbg !5785
  br label %18, !dbg !5801

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5785
  ret i8* %19, !dbg !5802
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5803 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5807, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.value(metadata i8* %1, metadata !5808, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.value(metadata i8* %2, metadata !5809, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.value(metadata i8* %3, metadata !5810, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.value(metadata i32 0, metadata !5811, metadata !DIExpression()), !dbg !5814
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5815

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5816
  call void @llvm.dbg.value(metadata i32 %9, metadata !5811, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.value(metadata i8* %8, metadata !5809, metadata !DIExpression()), !dbg !5814
  %10 = icmp ult i8* %8, %3, !dbg !5817
  br i1 %10, label %11, label %13, !dbg !5818

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5819
  br label %17, !dbg !5818

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5820

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5821
  %16 = icmp eq i8 %15, 0, !dbg !5820
  br i1 %16, label %24, label %17, !dbg !5815

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5819
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5822
  call void @llvm.dbg.value(metadata i8* %19, metadata !5809, metadata !DIExpression()), !dbg !5814
  %20 = zext i8 %18 to i32, !dbg !5823
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5824
  call void @llvm.dbg.value(metadata i32 %21, metadata !5812, metadata !DIExpression()), !dbg !5825
  %22 = icmp slt i32 %21, 0, !dbg !5826
  %23 = add i32 %9, 1, !dbg !5828
  call void @llvm.dbg.value(metadata i32 undef, metadata !5811, metadata !DIExpression()), !dbg !5814
  br i1 %22, label %24, label %7, !llvm.loop !5829

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5814
  ret i32 %25, !dbg !5831
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5832 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5836, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5837, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i8* %2, metadata !5838, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i8* %3, metadata !5839, metadata !DIExpression()), !dbg !5846
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5847
  %6 = load i8, i8* %5, align 1, !dbg !5847
  %7 = zext i8 %6 to i32, !dbg !5848
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5849
  %9 = icmp eq i32 %8, 0, !dbg !5849
  call void @llvm.dbg.value(metadata i1 %9, metadata !5840, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5846
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5850
  call void @llvm.dbg.value(metadata i32 %10, metadata !5841, metadata !DIExpression()), !dbg !5846
  %11 = ptrtoint i8* %3 to i32, !dbg !5851
  %12 = ptrtoint i8* %2 to i32, !dbg !5851
  %13 = sub i32 %11, %12, !dbg !5851
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5852
  call void @llvm.dbg.value(metadata i8* %14, metadata !5843, metadata !DIExpression()), !dbg !5846
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5853

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5846
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5836, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i8* %18, metadata !5843, metadata !DIExpression()), !dbg !5846
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5854
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5855
  call void @llvm.dbg.value(metadata i32 %25, metadata !5844, metadata !DIExpression()), !dbg !5856
  %26 = icmp ult i32 %25, 10, !dbg !5857
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5858
  %28 = add i32 %27, %25, !dbg !5856
  %29 = trunc i32 %28 to i8, !dbg !5858
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5859
  call void @llvm.dbg.value(metadata i8* %30, metadata !5843, metadata !DIExpression()), !dbg !5846
  store i8 %29, i8* %30, align 1, !dbg !5860
  call void @llvm.dbg.value(metadata i64 %22, metadata !5836, metadata !DIExpression()), !dbg !5846
  %31 = icmp uge i64 %19, %15, !dbg !5861
  %32 = icmp ugt i8* %30, %2, !dbg !5862
  %33 = and i1 %31, %32, !dbg !5862
  br i1 %33, label %17, label %34, !dbg !5863, !llvm.loop !5864

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5866
  %36 = load i24, i24* %35, align 4, !dbg !5866
  %37 = and i24 %36, 32, !dbg !5866
  %38 = icmp eq i24 %37, 0, !dbg !5866
  br i1 %38, label %44, label %39, !dbg !5868

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5869

40:                                               ; preds = %39
  br label %41, !dbg !5871

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5875
  store i24 %43, i24* %35, align 4, !dbg !5875
  br label %44, !dbg !5876

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5877 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5883, metadata !DIExpression()), !dbg !5886
  call void @llvm.dbg.value(metadata i8* %1, metadata !5884, metadata !DIExpression()), !dbg !5886
  call void @llvm.dbg.value(metadata i32 %2, metadata !5885, metadata !DIExpression()), !dbg !5886
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5887
  %5 = load i24, i24* %4, align 4, !dbg !5887
  %6 = lshr i24 %5, 11, !dbg !5887
  %7 = and i24 %6, 15, !dbg !5887
  %8 = zext i24 %7 to i32, !dbg !5887
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5888

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5889
  store i32 %2, i32* %10, align 4, !dbg !5891
  br label %28, !dbg !5892

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5893
  store i8 %12, i8* %1, align 1, !dbg !5894
  br label %28, !dbg !5895

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5896
  %15 = bitcast i8* %1 to i16*, !dbg !5897
  store i16 %14, i16* %15, align 2, !dbg !5898
  br label %28, !dbg !5899

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5900
  store i32 %2, i32* %17, align 4, !dbg !5901
  br label %28, !dbg !5902

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5903
  %20 = bitcast i8* %1 to i64*, !dbg !5904
  store i64 %19, i64* %20, align 8, !dbg !5905
  br label %28, !dbg !5906

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5907
  %23 = bitcast i8* %1 to i64*, !dbg !5908
  store i64 %22, i64* %23, align 8, !dbg !5909
  br label %28, !dbg !5910

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5911
  store i32 %2, i32* %25, align 4, !dbg !5912
  br label %28, !dbg !5913

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5914
  store i32 %2, i32* %27, align 4, !dbg !5915
  br label %28, !dbg !5916

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5917
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !5918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5921, metadata !DIExpression()), !dbg !5922
  %2 = add i32 %0, -65, !dbg !5923
  %3 = icmp ult i32 %2, 26, !dbg !5924
  %4 = zext i1 %3 to i32, !dbg !5924
  ret i32 %4, !dbg !5925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !5926 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5930, metadata !DIExpression()), !dbg !5931
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5932

2:                                                ; preds = %1
  br label %4, !dbg !5933

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5935

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5936
  ret i32 %5, !dbg !5937
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5938 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5940, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.value(metadata i8* %1, metadata !5941, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.value(metadata i8 1, metadata !5942, metadata !DIExpression()), !dbg !5943
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5944

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5942, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.value(metadata i8* %5, metadata !5941, metadata !DIExpression()), !dbg !5943
  %6 = load i8, i8* %5, align 1, !dbg !5945
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5947

7:                                                ; preds = %4
  br label %11, !dbg !5948

8:                                                ; preds = %4
  br label %11, !dbg !5950

9:                                                ; preds = %4
  br label %11, !dbg !5951

10:                                               ; preds = %4
  br label %11, !dbg !5952

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5953
  %14 = or i24 %13, %12, !dbg !5953
  store i24 %14, i24* %3, align 4, !dbg !5953
  call void @llvm.dbg.value(metadata i8 poison, metadata !5942, metadata !DIExpression()), !dbg !5943
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5941, metadata !DIExpression()), !dbg !5943
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5942, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.value(metadata i8* %15, metadata !5941, metadata !DIExpression()), !dbg !5943
  %17 = load i24, i24* %3, align 4, !dbg !5954
  %18 = and i24 %17, 68, !dbg !5956
  %19 = icmp eq i24 %18, 68, !dbg !5956
  br i1 %19, label %20, label %22, !dbg !5956

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5957
  store i24 %21, i24* %3, align 4, !dbg !5957
  br label %22, !dbg !5959

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5960
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5961 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5963, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.value(metadata i8* %1, metadata !5964, metadata !DIExpression()), !dbg !5967
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5968
  %5 = load i24, i24* %4, align 4, !dbg !5969
  %6 = or i24 %5, 128, !dbg !5969
  store i24 %6, i24* %4, align 4, !dbg !5969
  call void @llvm.dbg.value(metadata i8* %1, metadata !5964, metadata !DIExpression()), !dbg !5967
  %7 = load i8, i8* %1, align 1, !dbg !5970
  %8 = icmp eq i8 %7, 42, !dbg !5972
  br i1 %8, label %9, label %12, !dbg !5973

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5974
  store i24 %10, i24* %4, align 4, !dbg !5974
  call void @llvm.dbg.value(metadata i8* %1, metadata !5964, metadata !DIExpression()), !dbg !5967
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5976
  call void @llvm.dbg.value(metadata i8* %11, metadata !5964, metadata !DIExpression()), !dbg !5967
  store i8* %11, i8** %3, align 4, !dbg !5976
  br label %29, !dbg !5977

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5965, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.value(metadata i8** %3, metadata !5964, metadata !DIExpression(DW_OP_deref)), !dbg !5967
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5978
  call void @llvm.dbg.value(metadata i32 %13, metadata !5966, metadata !DIExpression()), !dbg !5967
  %14 = load i8*, i8** %3, align 4, !dbg !5979
  call void @llvm.dbg.value(metadata i8* %14, metadata !5964, metadata !DIExpression()), !dbg !5967
  %15 = icmp eq i8* %14, %1, !dbg !5981
  br i1 %15, label %29, label %16, !dbg !5982

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5983
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5985
  store i32 %13, i32* %18, align 4, !dbg !5986
  %19 = lshr i32 %13, 31, !dbg !5987
  %20 = lshr i24 %17, 1, !dbg !5988
  %21 = and i24 %20, 1, !dbg !5988
  %22 = zext i24 %21 to i32, !dbg !5988
  %23 = or i32 %19, %22, !dbg !5988
  %24 = trunc i32 %23 to i24, !dbg !5988
  %25 = shl nuw nsw i24 %24, 1, !dbg !5988
  %26 = and i24 %17, -131, !dbg !5988
  %27 = or i24 %26, 128, !dbg !5988
  %28 = or i24 %25, %27, !dbg !5988
  store i24 %28, i24* %4, align 4, !dbg !5988
  br label %29, !dbg !5989

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5967
  ret i8* %30, !dbg !5990
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5991 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5993, metadata !DIExpression()), !dbg !5996
  call void @llvm.dbg.value(metadata i8* %1, metadata !5994, metadata !DIExpression()), !dbg !5996
  %4 = load i8, i8* %1, align 1, !dbg !5997
  %5 = icmp eq i8 %4, 46, !dbg !5998
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5999
  %7 = load i24, i24* %6, align 4, !dbg !6000
  %8 = select i1 %5, i24 512, i24 0, !dbg !6000
  %9 = and i24 %7, -513, !dbg !6000
  %10 = or i24 %9, %8, !dbg !6000
  store i24 %10, i24* %6, align 4, !dbg !6000
  br i1 %5, label %11, label %32, !dbg !6001

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5994, metadata !DIExpression()), !dbg !5996
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6002
  call void @llvm.dbg.value(metadata i8* %12, metadata !5994, metadata !DIExpression()), !dbg !5996
  store i8* %12, i8** %3, align 4, !dbg !6002
  %13 = load i8, i8* %12, align 1, !dbg !6003
  %14 = icmp eq i8 %13, 42, !dbg !6005
  br i1 %14, label %15, label %18, !dbg !6006

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6007
  store i24 %16, i24* %6, align 4, !dbg !6007
  call void @llvm.dbg.value(metadata i8* %12, metadata !5994, metadata !DIExpression()), !dbg !5996
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6009
  call void @llvm.dbg.value(metadata i8* %17, metadata !5994, metadata !DIExpression()), !dbg !5996
  store i8* %17, i8** %3, align 4, !dbg !6009
  br label %32, !dbg !6010

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5994, metadata !DIExpression(DW_OP_deref)), !dbg !5996
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6011
  call void @llvm.dbg.value(metadata i32 %19, metadata !5995, metadata !DIExpression()), !dbg !5996
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6012
  store i32 %19, i32* %20, align 4, !dbg !6013
  %21 = lshr i32 %19, 31, !dbg !6014
  %22 = load i24, i24* %6, align 4, !dbg !6015
  %23 = lshr i24 %22, 1, !dbg !6015
  %24 = and i24 %23, 1, !dbg !6015
  %25 = zext i24 %24 to i32, !dbg !6015
  %26 = or i32 %21, %25, !dbg !6015
  %27 = trunc i32 %26 to i24, !dbg !6015
  %28 = shl nuw nsw i24 %27, 1, !dbg !6015
  %29 = and i24 %22, -3, !dbg !6015
  %30 = or i24 %28, %29, !dbg !6015
  store i24 %30, i24* %6, align 4, !dbg !6015
  %31 = load i8*, i8** %3, align 4, !dbg !6016
  call void @llvm.dbg.value(metadata i8* %31, metadata !5994, metadata !DIExpression()), !dbg !5996
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5996
  ret i8* %33, !dbg !6017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6018 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6020, metadata !DIExpression()), !dbg !6022
  call void @llvm.dbg.value(metadata i8* %1, metadata !6021, metadata !DIExpression()), !dbg !6022
  %3 = load i8, i8* %1, align 1, !dbg !6023
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6024

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6025
  call void @llvm.dbg.value(metadata i8* %5, metadata !6021, metadata !DIExpression()), !dbg !6022
  %6 = load i8, i8* %5, align 1, !dbg !6028
  %7 = icmp eq i8 %6, 104, !dbg !6029
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6030
  %9 = load i24, i24* %8, align 4, !dbg !6030
  %10 = and i24 %9, -30721, !dbg !6030
  br i1 %7, label %11, label %14, !dbg !6031

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6032
  store i24 %12, i24* %8, align 4, !dbg !6032
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6034
  call void @llvm.dbg.value(metadata i8* %13, metadata !6021, metadata !DIExpression()), !dbg !6022
  br label %56, !dbg !6035

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6036
  store i24 %15, i24* %8, align 4, !dbg !6036
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6038
  call void @llvm.dbg.value(metadata i8* %17, metadata !6021, metadata !DIExpression()), !dbg !6022
  %18 = load i8, i8* %17, align 1, !dbg !6040
  %19 = icmp eq i8 %18, 108, !dbg !6041
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6042
  %21 = load i24, i24* %20, align 4, !dbg !6042
  %22 = and i24 %21, -30721, !dbg !6042
  br i1 %19, label %23, label %26, !dbg !6043

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6044
  store i24 %24, i24* %20, align 4, !dbg !6044
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6046
  call void @llvm.dbg.value(metadata i8* %25, metadata !6021, metadata !DIExpression()), !dbg !6022
  br label %56, !dbg !6047

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6048
  store i24 %27, i24* %20, align 4, !dbg !6048
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6050
  %30 = load i24, i24* %29, align 4, !dbg !6051
  %31 = and i24 %30, -30721, !dbg !6051
  %32 = or i24 %31, 10240, !dbg !6051
  store i24 %32, i24* %29, align 4, !dbg !6051
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6052
  call void @llvm.dbg.value(metadata i8* %33, metadata !6021, metadata !DIExpression()), !dbg !6022
  br label %56, !dbg !6053

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6054
  %36 = load i24, i24* %35, align 4, !dbg !6055
  %37 = and i24 %36, -30721, !dbg !6055
  %38 = or i24 %37, 12288, !dbg !6055
  store i24 %38, i24* %35, align 4, !dbg !6055
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6056
  call void @llvm.dbg.value(metadata i8* %39, metadata !6021, metadata !DIExpression()), !dbg !6022
  br label %56, !dbg !6057

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6058
  %42 = load i24, i24* %41, align 4, !dbg !6059
  %43 = and i24 %42, -30721, !dbg !6059
  %44 = or i24 %43, 14336, !dbg !6059
  store i24 %44, i24* %41, align 4, !dbg !6059
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6060
  call void @llvm.dbg.value(metadata i8* %45, metadata !6021, metadata !DIExpression()), !dbg !6022
  br label %56, !dbg !6061

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6062
  %48 = load i24, i24* %47, align 4, !dbg !6063
  %49 = and i24 %48, -30723, !dbg !6063
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6064
  call void @llvm.dbg.value(metadata i8* %50, metadata !6021, metadata !DIExpression()), !dbg !6022
  %51 = or i24 %49, 16386, !dbg !6065
  store i24 %51, i24* %47, align 4, !dbg !6065
  br label %56, !dbg !6066

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6067
  %54 = load i24, i24* %53, align 4, !dbg !6068
  %55 = and i24 %54, -30721, !dbg !6068
  store i24 %55, i24* %53, align 4, !dbg !6068
  br label %56, !dbg !6069

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6021, metadata !DIExpression()), !dbg !6022
  ret i8* %57, !dbg !6070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6071 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6073, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i8* %1, metadata !6074, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i8 0, metadata !6075, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i8* %1, metadata !6074, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6078
  %3 = load i8, i8* %1, align 1, !dbg !6079
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6080
  store i8 %3, i8* %4, align 1, !dbg !6081
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6082

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6083

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6084
  %9 = load i24, i24* %8, align 4, !dbg !6084
  %10 = and i24 %9, -458753, !dbg !6084
  %11 = or i24 %10, %7, !dbg !6084
  call void @llvm.dbg.label(metadata !6076), !dbg !6085
  %12 = and i24 %9, 30720, !dbg !6086
  %13 = icmp eq i24 %12, 16384, !dbg !6086
  %14 = zext i1 %13 to i24, !dbg !6088
  %15 = or i24 %11, %14, !dbg !6088
  %16 = icmp eq i8 %3, 99, !dbg !6089
  br i1 %16, label %17, label %43, !dbg !6091

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6092
  %19 = icmp ne i24 %18, 0, !dbg !6092
  call void @llvm.dbg.value(metadata i1 %19, metadata !6075, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6078
  br label %43, !dbg !6094

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6095
  %22 = load i24, i24* %21, align 4, !dbg !6096
  %23 = and i24 %22, -458753, !dbg !6096
  %24 = or i24 %23, 262144, !dbg !6096
  call void @llvm.dbg.value(metadata i8 1, metadata !6075, metadata !DIExpression()), !dbg !6078
  br label %43, !dbg !6097

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6100
  %27 = load i24, i24* %26, align 4, !dbg !6101
  %28 = and i24 %27, -458753, !dbg !6101
  %29 = or i24 %28, 196608, !dbg !6101
  %30 = and i24 %27, 30720, !dbg !6102
  %31 = icmp eq i24 %30, 16384, !dbg !6102
  br label %43, !dbg !6104

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6105
  %34 = load i24, i24* %33, align 4, !dbg !6106
  %35 = and i24 %34, -458753, !dbg !6106
  %36 = or i24 %35, 196608, !dbg !6106
  %37 = and i24 %34, 30720, !dbg !6107
  %38 = icmp ne i24 %37, 0, !dbg !6107
  br label %43, !dbg !6109

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6110
  %41 = load i24, i24* %40, align 4, !dbg !6111
  %42 = or i24 %41, 1, !dbg !6111
  br label %43, !dbg !6112

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6113
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6114
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6115
  call void @llvm.dbg.value(metadata i8* %48, metadata !6074, metadata !DIExpression()), !dbg !6078
  call void @llvm.dbg.value(metadata i8 poison, metadata !6075, metadata !DIExpression()), !dbg !6078
  %49 = lshr i24 %44, 1, !dbg !6113
  %50 = and i24 %49, 1, !dbg !6113
  %51 = zext i24 %50 to i32, !dbg !6113
  %52 = or i32 %51, %47, !dbg !6113
  %53 = trunc i32 %52 to i24, !dbg !6113
  %54 = shl nuw nsw i24 %53, 1, !dbg !6113
  %55 = and i24 %44, -3, !dbg !6113
  %56 = or i24 %54, %55, !dbg !6113
  store i24 %56, i24* %46, align 4, !dbg !6113
  ret i8* %48, !dbg !6116
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6117 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6121, metadata !DIExpression()), !dbg !6124
  %2 = load i8*, i8** %0, align 4, !dbg !6125
  call void @llvm.dbg.value(metadata i8* %2, metadata !6122, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i32 0, metadata !6123, metadata !DIExpression()), !dbg !6124
  %3 = load i8, i8* %2, align 1, !dbg !6126
  %4 = zext i8 %3 to i32, !dbg !6127
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6128
  %6 = icmp eq i32 %5, 0, !dbg !6129
  br i1 %6, label %19, label %7, !dbg !6129

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6123, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i8* %10, metadata !6122, metadata !DIExpression()), !dbg !6124
  %11 = mul i32 %9, 10, !dbg !6130
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6132
  call void @llvm.dbg.value(metadata i8* %12, metadata !6122, metadata !DIExpression()), !dbg !6124
  %13 = add i32 %11, -48, !dbg !6133
  %14 = add i32 %13, %8, !dbg !6134
  call void @llvm.dbg.value(metadata i32 %14, metadata !6123, metadata !DIExpression()), !dbg !6124
  %15 = load i8, i8* %12, align 1, !dbg !6126
  %16 = zext i8 %15 to i32, !dbg !6127
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6128
  %18 = icmp eq i32 %17, 0, !dbg !6129
  br i1 %18, label %19, label %7, !dbg !6129, !llvm.loop !6135

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6124
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6124
  store i8* %20, i8** %0, align 4, !dbg !6137
  ret i32 %21, !dbg !6138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !6139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6141, metadata !DIExpression()), !dbg !6142
  %2 = add i32 %0, -48, !dbg !6143
  %3 = icmp ult i32 %2, 10, !dbg !6144
  %4 = zext i1 %3 to i32, !dbg !6144
  ret i32 %4, !dbg !6145
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6146 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6148, !srcloc !6149
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6150, !srcloc !6151
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6152, !srcloc !6153
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6154, !srcloc !6155
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6156, !srcloc !6157
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6158, !srcloc !6159
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6160, !srcloc !6161
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6162, !srcloc !6163
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6164, !srcloc !6165
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6166, !srcloc !6167
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6168, !srcloc !6169
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6170, !srcloc !6171
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6172, !srcloc !6173
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6174, !srcloc !6175
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6176, !srcloc !6177
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6178, !srcloc !6179
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6180, !srcloc !6181
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6182, !srcloc !6183
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6184, !srcloc !6185
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6186, !srcloc !6187
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6188, !srcloc !6189
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT\0A\09.equ\09CONFIG_TINYCRYPT,1\0A\09.type\09CONFIG_TINYCRYPT,%object", ""() #25, !dbg !6190, !srcloc !6191
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6192, !srcloc !6193
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6194, !srcloc !6195
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6196, !srcloc !6197
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6198, !srcloc !6199
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6200, !srcloc !6201
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6202, !srcloc !6203
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #25, !dbg !6204, !srcloc !6205
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6206, !srcloc !6207
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6208, !srcloc !6209
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6210, !srcloc !6211
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #25, !dbg !6212, !srcloc !6213
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6214, !srcloc !6215
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #25, !dbg !6216, !srcloc !6217
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #25, !dbg !6218, !srcloc !6219
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #25, !dbg !6220, !srcloc !6221
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6222, !srcloc !6223
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #25, !dbg !6224, !srcloc !6225
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #25, !dbg !6226, !srcloc !6227
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #25, !dbg !6228, !srcloc !6229
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6230, !srcloc !6231
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6232, !srcloc !6233
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6234, !srcloc !6235
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6236, !srcloc !6237
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6238, !srcloc !6239
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6240, !srcloc !6241
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6242, !srcloc !6243
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6244, !srcloc !6245
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6246, !srcloc !6247
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6248, !srcloc !6249
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6250, !srcloc !6251
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6252, !srcloc !6253
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6254, !srcloc !6255
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6256, !srcloc !6257
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6258, !srcloc !6259
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6260, !srcloc !6261
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6262, !srcloc !6263
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6264, !srcloc !6265
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6266, !srcloc !6267
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6268, !srcloc !6269
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6270, !srcloc !6271
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6272, !srcloc !6273
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6274, !srcloc !6275
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6276, !srcloc !6277
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6278, !srcloc !6279
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6280, !srcloc !6281
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6282, !srcloc !6283
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6284, !srcloc !6285
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6286, !srcloc !6287
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6288, !srcloc !6289
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6290, !srcloc !6291
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6292, !srcloc !6293
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6294, !srcloc !6295
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6296, !srcloc !6297
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6298, !srcloc !6299
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6300, !srcloc !6301
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6302, !srcloc !6303
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6304, !srcloc !6305
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6306, !srcloc !6307
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6308, !srcloc !6309
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6310, !srcloc !6311
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6312, !srcloc !6313
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6314, !srcloc !6315
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6316, !srcloc !6317
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6318, !srcloc !6319
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6320, !srcloc !6321
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES\0A\09.equ\09CONFIG_TINYCRYPT_AES,1\0A\09.type\09CONFIG_TINYCRYPT_AES,%object", ""() #25, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CBC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CBC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CBC,%object", ""() #25, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CTR\0A\09.equ\09CONFIG_TINYCRYPT_AES_CTR,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CTR,%object", ""() #25, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CCM\0A\09.equ\09CONFIG_TINYCRYPT_AES_CCM,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CCM,%object", ""() #25, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CMAC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CMAC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CMAC,%object", ""() #25, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #25, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #25, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #25, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #25, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO\0A\09.equ\09CONFIG_CRYPTO,1\0A\09.type\09CONFIG_CRYPTO,%object", ""() #25, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_INIT_PRIORITY\0A\09.equ\09CONFIG_CRYPTO_INIT_PRIORITY,90\0A\09.type\09CONFIG_CRYPTO_INIT_PRIORITY,%object", ""() #25, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL_DBG\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL_DBG,1\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL_DBG,%object", ""() #25, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL,4\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL,%object", ""() #25, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM,%object", ""() #25, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,2\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,%object", ""() #25, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,%object", ""() #25, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_EXPERIMENTAL\0A\09.equ\09CONFIG_EXPERIMENTAL,1\0A\09.type\09CONFIG_EXPERIMENTAL,%object", ""() #25, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6786, !srcloc !6787
  ret void, !dbg !6788
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6789 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6791, metadata !DIExpression()), !dbg !6793
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6794, !srcloc !6803
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6794
  call void @llvm.dbg.value(metadata i32 %3, metadata !6800, metadata !DIExpression()) #25, !dbg !6804
  call void @llvm.dbg.value(metadata i32 undef, metadata !6801, metadata !DIExpression()) #25, !dbg !6804
  call void @llvm.dbg.value(metadata i32 %3, metadata !6792, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata i32 %3, metadata !6805, metadata !DIExpression()) #25, !dbg !6810
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6812, !srcloc !6813
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !6814
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !6815
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #26, !dbg !6816
  ret i32 0, !dbg !6817
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !6818 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !6823, metadata !DIExpression()), !dbg !6825
  %2 = bitcast i32* %1 to i8*, !dbg !6826
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6826
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6824, metadata !DIExpression()), !dbg !6827
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6828
  %4 = or i32 %3, 268435456, !dbg !6828
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6828
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6829
  %6 = and i32 %5, 268435456, !dbg !6829
  store volatile i32 %6, i32* %1, align 4, !dbg !6830
  %7 = load volatile i32, i32* %1, align 4, !dbg !6831
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6832
  ret void, !dbg !6832
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #16 !dbg !6833 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !6836, metadata !DIExpression()), !dbg !6837
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !6838
  %2 = and i32 %1, -6145, !dbg !6838
  %3 = or i32 %2, 2048, !dbg !6838
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !6838
  ret void, !dbg !6839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #3 !dbg !6840 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6842, metadata !DIExpression()), !dbg !6843
  ret i32 0, !dbg !6844
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6845 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6848, metadata !DIExpression()), !dbg !6856
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !6857
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6857
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !6849, metadata !DIExpression()), !dbg !6858
  call void @llvm.va_start(i8* nonnull %3), !dbg !6859
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !6860
  %5 = load i32, i32* %4, align 4, !dbg !6860
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6860
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !6860
  call void @llvm.va_end(i8* nonnull %3), !dbg !6861
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6862
  ret void, !dbg !6862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6863 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6868, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.value(metadata i8* %0, metadata !6867, metadata !DIExpression()), !dbg !6869
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !6870
  ret void, !dbg !6871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6876, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i8* %1, metadata !6877, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i32 %2, metadata !6878, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i8* %1, metadata !6879, metadata !DIExpression()), !dbg !6880
  %4 = icmp eq i32 %2, 0, !dbg !6881
  br i1 %4, label %14, label %5, !dbg !6882

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) #26, !dbg !6880
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6882

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6879, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i32 %10, metadata !6878, metadata !DIExpression()), !dbg !6880
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0), i32 noundef %7) #27, !dbg !6883
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !6885
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6886
  call void @llvm.dbg.value(metadata i32 %11, metadata !6878, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i8* %12, metadata !6879, metadata !DIExpression()), !dbg !6880
  br i1 %13, label %14, label %8, !dbg !6886, !llvm.loop !6887

14:                                               ; preds = %8, %3
  ret void, !dbg !6889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) unnamed_addr #3 !dbg !6890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6892, metadata !DIExpression()), !dbg !6893
  %2 = add i32 %0, -1, !dbg !6894
  %3 = icmp ult i32 %2, 4, !dbg !6894
  %4 = shl i32 %2, 3, !dbg !6894
  %5 = lshr i32 1145657157, %4, !dbg !6894
  %6 = trunc i32 %5 to i8, !dbg !6894
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6894
  ret i8 %7, !dbg !6895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6896 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6900, metadata !DIExpression()), !dbg !6911
  call void @llvm.dbg.value(metadata i32 %1, metadata !6901, metadata !DIExpression()), !dbg !6911
  call void @llvm.dbg.value(metadata i32 0, metadata !6902, metadata !DIExpression()), !dbg !6912
  br label %4, !dbg !6913

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.64, i32 0, i32 0)) #27, !dbg !6914
  call void @llvm.dbg.value(metadata i32 0, metadata !6904, metadata !DIExpression()), !dbg !6915
  br label %16, !dbg !6916

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6902, metadata !DIExpression()), !dbg !6912
  %6 = icmp ult i32 %5, %1, !dbg !6917
  br i1 %6, label %7, label %11, !dbg !6921

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6922
  %9 = load i8, i8* %8, align 1, !dbg !6922
  %10 = zext i8 %9 to i32, !dbg !6924
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.65, i32 0, i32 0), i32 noundef %10) #27, !dbg !6925
  br label %12, !dbg !6926

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.66, i32 0, i32 0)) #27, !dbg !6927
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6929
  call void @llvm.dbg.value(metadata i32 %13, metadata !6902, metadata !DIExpression()), !dbg !6912
  %14 = icmp eq i32 %13, 8, !dbg !6930
  br i1 %14, label %3, label %4, !dbg !6913, !llvm.loop !6931

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.67, i32 0, i32 0)) #27, !dbg !6933
  ret void, !dbg !6934

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6904, metadata !DIExpression()), !dbg !6915
  %18 = icmp ult i32 %17, %1, !dbg !6935
  br i1 %18, label %19, label %26, !dbg !6936

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6937
  %21 = load i8, i8* %20, align 1, !dbg !6937
  call void @llvm.dbg.value(metadata i8 %21, metadata !6906, metadata !DIExpression()), !dbg !6938
  %22 = zext i8 %21 to i32, !dbg !6939
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !6940
  %24 = icmp eq i32 %23, 0, !dbg !6941
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6940
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.68, i32 0, i32 0), i32 noundef %25) #27, !dbg !6942
  br label %27, !dbg !6943

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.69, i32 0, i32 0)) #27, !dbg !6944
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6946
  call void @llvm.dbg.value(metadata i32 %28, metadata !6904, metadata !DIExpression()), !dbg !6915
  %29 = icmp eq i32 %28, 8, !dbg !6947
  br i1 %29, label %15, label %16, !dbg !6916, !llvm.loop !6948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !6950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6952, metadata !DIExpression()), !dbg !6953
  %2 = add i32 %0, -32, !dbg !6954
  %3 = icmp ult i32 %2, 95, !dbg !6954
  %4 = zext i1 %3 to i32, !dbg !6954
  ret i32 %4, !dbg !6955
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_copy(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !6956 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6961, metadata !DIExpression()), !dbg !6965
  call void @llvm.dbg.value(metadata i32 %1, metadata !6962, metadata !DIExpression()), !dbg !6965
  call void @llvm.dbg.value(metadata i8* %2, metadata !6963, metadata !DIExpression()), !dbg !6965
  call void @llvm.dbg.value(metadata i32 %3, metadata !6964, metadata !DIExpression()), !dbg !6965
  %5 = icmp ugt i32 %3, %1, !dbg !6966
  br i1 %5, label %8, label %6, !dbg !6968

6:                                                ; preds = %4
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %3) #27, !dbg !6969
  br label %8, !dbg !6971

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %3, %6 ], [ 0, %4 ], !dbg !6972
  ret i32 %9, !dbg !6973
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_set(i8* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6974 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6978, metadata !DIExpression()), !dbg !6981
  call void @llvm.dbg.value(metadata i8 %1, metadata !6979, metadata !DIExpression()), !dbg !6981
  call void @llvm.dbg.value(metadata i32 %2, metadata !6980, metadata !DIExpression()), !dbg !6981
  %4 = zext i8 %1 to i32, !dbg !6982
  %5 = tail call i8* @memset(i8* noundef %0, i32 noundef %4, i32 noundef %2) #27, !dbg !6983
  ret void, !dbg !6984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @_double_byte(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !6985 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6989, metadata !DIExpression()), !dbg !6990
  %2 = shl i8 %0, 1, !dbg !6991
  %3 = icmp slt i8 %0, 0, !dbg !6992
  %4 = select i1 %3, i8 27, i8 0, !dbg !6992
  %5 = xor i8 %4, %2, !dbg !6993
  ret i8 %5, !dbg !6994
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @_compare(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !6995 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6999, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.value(metadata i8* %1, metadata !7000, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.value(metadata i32 %2, metadata !7001, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.value(metadata i8* %0, metadata !7002, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.value(metadata i8* %1, metadata !7003, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.value(metadata i8 0, metadata !7004, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.value(metadata i32 0, metadata !7005, metadata !DIExpression()), !dbg !7008
  call void @llvm.dbg.value(metadata i8 undef, metadata !7004, metadata !DIExpression()), !dbg !7007
  %4 = icmp eq i32 %2, 0, !dbg !7009
  br i1 %4, label %5, label %7, !dbg !7011

5:                                                ; preds = %7, %3
  %6 = phi i32 [ 0, %3 ], [ %16, %7 ]
  ret i32 %6, !dbg !7012

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %17, %7 ], [ 0, %3 ]
  %9 = phi i32 [ %16, %7 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7005, metadata !DIExpression()), !dbg !7008
  %10 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !7013
  %11 = load i8, i8* %10, align 1, !dbg !7013
  %12 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !7015
  %13 = load i8, i8* %12, align 1, !dbg !7015
  %14 = xor i8 %13, %11, !dbg !7016
  %15 = zext i8 %14 to i32, !dbg !7016
  %16 = or i32 %9, %15, !dbg !7017
  call void @llvm.dbg.value(metadata i32 %16, metadata !7004, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7007
  %17 = add nuw i32 %8, 1, !dbg !7018
  call void @llvm.dbg.value(metadata i32 %17, metadata !7005, metadata !DIExpression()), !dbg !7008
  call void @llvm.dbg.value(metadata i8 undef, metadata !7004, metadata !DIExpression()), !dbg !7007
  %18 = icmp eq i32 %17, %2, !dbg !7009
  br i1 %18, label %5, label %7, !dbg !7011, !llvm.loop !7019
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes128_set_decrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !7021 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7025, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.value(metadata i8* %1, metadata !7026, metadata !DIExpression()), !dbg !7027
  %3 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) #27, !dbg !7028
  ret i32 %3, !dbg !7029
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_decrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7030 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7035, metadata !DIExpression()), !dbg !7040
  call void @llvm.dbg.value(metadata i8* %1, metadata !7036, metadata !DIExpression()), !dbg !7040
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7037, metadata !DIExpression()), !dbg !7040
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7041
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7041
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7038, metadata !DIExpression()), !dbg !7042
  %6 = icmp eq i8* %0, null, !dbg !7043
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7045
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7045
  br i1 %10, label %23, label %11, !dbg !7045

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7046
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7047
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7048
  call void @llvm.dbg.value(metadata i32 9, metadata !7039, metadata !DIExpression()), !dbg !7040
  br label %14, !dbg !7049

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 9, %11 ], [ %18, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7039, metadata !DIExpression()), !dbg !7040
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7051
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7054
  %16 = shl i32 %15, 2, !dbg !7055
  %17 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %16, !dbg !7056
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %17) #26, !dbg !7057
  call fastcc void @inv_mix_columns(i8* noundef nonnull %5) #26, !dbg !7058
  %18 = add nsw i32 %15, -1, !dbg !7059
  call void @llvm.dbg.value(metadata i32 %18, metadata !7039, metadata !DIExpression()), !dbg !7040
  %19 = icmp eq i32 %18, 0, !dbg !7060
  br i1 %19, label %20, label %14, !dbg !7049, !llvm.loop !7061

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7063
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7064
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7065
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7066
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7067
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7068
  br label %23, !dbg !7069

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7040
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7070
  ret i32 %24, !dbg !7070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7071 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7076, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32* %1, metadata !7077, metadata !DIExpression()), !dbg !7078
  %3 = load i32, i32* %1, align 4, !dbg !7079
  %4 = lshr i32 %3, 24, !dbg !7080
  %5 = load i8, i8* %0, align 1, !dbg !7081
  %6 = trunc i32 %4 to i8, !dbg !7081
  %7 = xor i8 %5, %6, !dbg !7081
  store i8 %7, i8* %0, align 1, !dbg !7081
  %8 = load i32, i32* %1, align 4, !dbg !7082
  %9 = lshr i32 %8, 16, !dbg !7083
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7084
  %11 = load i8, i8* %10, align 1, !dbg !7085
  %12 = trunc i32 %9 to i8, !dbg !7085
  %13 = xor i8 %11, %12, !dbg !7085
  store i8 %13, i8* %10, align 1, !dbg !7085
  %14 = load i32, i32* %1, align 4, !dbg !7086
  %15 = lshr i32 %14, 8, !dbg !7087
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7088
  %17 = load i8, i8* %16, align 1, !dbg !7089
  %18 = trunc i32 %15 to i8, !dbg !7089
  %19 = xor i8 %17, %18, !dbg !7089
  store i8 %19, i8* %16, align 1, !dbg !7089
  %20 = load i32, i32* %1, align 4, !dbg !7090
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7091
  %22 = load i8, i8* %21, align 1, !dbg !7092
  %23 = trunc i32 %20 to i8, !dbg !7092
  %24 = xor i8 %22, %23, !dbg !7092
  store i8 %24, i8* %21, align 1, !dbg !7092
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7093
  %26 = load i32, i32* %25, align 4, !dbg !7093
  %27 = lshr i32 %26, 24, !dbg !7094
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7095
  %29 = load i8, i8* %28, align 1, !dbg !7096
  %30 = trunc i32 %27 to i8, !dbg !7096
  %31 = xor i8 %29, %30, !dbg !7096
  store i8 %31, i8* %28, align 1, !dbg !7096
  %32 = load i32, i32* %25, align 4, !dbg !7097
  %33 = lshr i32 %32, 16, !dbg !7098
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7099
  %35 = load i8, i8* %34, align 1, !dbg !7100
  %36 = trunc i32 %33 to i8, !dbg !7100
  %37 = xor i8 %35, %36, !dbg !7100
  store i8 %37, i8* %34, align 1, !dbg !7100
  %38 = load i32, i32* %25, align 4, !dbg !7101
  %39 = lshr i32 %38, 8, !dbg !7102
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7103
  %41 = load i8, i8* %40, align 1, !dbg !7104
  %42 = trunc i32 %39 to i8, !dbg !7104
  %43 = xor i8 %41, %42, !dbg !7104
  store i8 %43, i8* %40, align 1, !dbg !7104
  %44 = load i32, i32* %25, align 4, !dbg !7105
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7106
  %46 = load i8, i8* %45, align 1, !dbg !7107
  %47 = trunc i32 %44 to i8, !dbg !7107
  %48 = xor i8 %46, %47, !dbg !7107
  store i8 %48, i8* %45, align 1, !dbg !7107
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7108
  %50 = load i32, i32* %49, align 4, !dbg !7108
  %51 = lshr i32 %50, 24, !dbg !7109
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7110
  %53 = load i8, i8* %52, align 1, !dbg !7111
  %54 = trunc i32 %51 to i8, !dbg !7111
  %55 = xor i8 %53, %54, !dbg !7111
  store i8 %55, i8* %52, align 1, !dbg !7111
  %56 = load i32, i32* %49, align 4, !dbg !7112
  %57 = lshr i32 %56, 16, !dbg !7113
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7114
  %59 = load i8, i8* %58, align 1, !dbg !7115
  %60 = trunc i32 %57 to i8, !dbg !7115
  %61 = xor i8 %59, %60, !dbg !7115
  store i8 %61, i8* %58, align 1, !dbg !7115
  %62 = load i32, i32* %49, align 4, !dbg !7116
  %63 = lshr i32 %62, 8, !dbg !7117
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7118
  %65 = load i8, i8* %64, align 1, !dbg !7119
  %66 = trunc i32 %63 to i8, !dbg !7119
  %67 = xor i8 %65, %66, !dbg !7119
  store i8 %67, i8* %64, align 1, !dbg !7119
  %68 = load i32, i32* %49, align 4, !dbg !7120
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7121
  %70 = load i8, i8* %69, align 1, !dbg !7122
  %71 = trunc i32 %68 to i8, !dbg !7122
  %72 = xor i8 %70, %71, !dbg !7122
  store i8 %72, i8* %69, align 1, !dbg !7122
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7123
  %74 = load i32, i32* %73, align 4, !dbg !7123
  %75 = lshr i32 %74, 24, !dbg !7124
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7125
  %77 = load i8, i8* %76, align 1, !dbg !7126
  %78 = trunc i32 %75 to i8, !dbg !7126
  %79 = xor i8 %77, %78, !dbg !7126
  store i8 %79, i8* %76, align 1, !dbg !7126
  %80 = load i32, i32* %73, align 4, !dbg !7127
  %81 = lshr i32 %80, 16, !dbg !7128
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7129
  %83 = load i8, i8* %82, align 1, !dbg !7130
  %84 = trunc i32 %81 to i8, !dbg !7130
  %85 = xor i8 %83, %84, !dbg !7130
  store i8 %85, i8* %82, align 1, !dbg !7130
  %86 = load i32, i32* %73, align 4, !dbg !7131
  %87 = lshr i32 %86, 8, !dbg !7132
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7133
  %89 = load i8, i8* %88, align 1, !dbg !7134
  %90 = trunc i32 %87 to i8, !dbg !7134
  %91 = xor i8 %89, %90, !dbg !7134
  store i8 %91, i8* %88, align 1, !dbg !7134
  %92 = load i32, i32* %73, align 4, !dbg !7135
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7136
  %94 = load i8, i8* %93, align 1, !dbg !7137
  %95 = trunc i32 %92 to i8, !dbg !7137
  %96 = xor i8 %94, %95, !dbg !7137
  store i8 %96, i8* %93, align 1, !dbg !7137
  ret void, !dbg !7138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7139 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7143, metadata !DIExpression()), !dbg !7145
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7146
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7146
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7144, metadata !DIExpression()), !dbg !7147
  %4 = load i8, i8* %0, align 1, !dbg !7148
  store i8 %4, i8* %3, align 1, !dbg !7149
  %5 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7150
  %6 = load i8, i8* %5, align 1, !dbg !7150
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7151
  store i8 %6, i8* %7, align 1, !dbg !7152
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7153
  %9 = load i8, i8* %8, align 1, !dbg !7153
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7154
  store i8 %9, i8* %10, align 1, !dbg !7155
  %11 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7156
  %12 = load i8, i8* %11, align 1, !dbg !7156
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7157
  store i8 %12, i8* %13, align 1, !dbg !7158
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7159
  %15 = load i8, i8* %14, align 1, !dbg !7159
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7160
  store i8 %15, i8* %16, align 1, !dbg !7161
  %17 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7162
  %18 = load i8, i8* %17, align 1, !dbg !7162
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7163
  store i8 %18, i8* %19, align 1, !dbg !7164
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7165
  %21 = load i8, i8* %20, align 1, !dbg !7165
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7166
  store i8 %21, i8* %22, align 1, !dbg !7167
  %23 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7168
  %24 = load i8, i8* %23, align 1, !dbg !7168
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7169
  store i8 %24, i8* %25, align 1, !dbg !7170
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7171
  %27 = load i8, i8* %26, align 1, !dbg !7171
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7172
  store i8 %27, i8* %28, align 1, !dbg !7173
  %29 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7174
  %30 = load i8, i8* %29, align 1, !dbg !7174
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7175
  store i8 %30, i8* %31, align 1, !dbg !7176
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7177
  %33 = load i8, i8* %32, align 1, !dbg !7177
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7178
  store i8 %33, i8* %34, align 1, !dbg !7179
  %35 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7180
  %36 = load i8, i8* %35, align 1, !dbg !7180
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7181
  store i8 %36, i8* %37, align 1, !dbg !7182
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7183
  %39 = load i8, i8* %38, align 1, !dbg !7183
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7184
  store i8 %39, i8* %40, align 1, !dbg !7185
  %41 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7186
  %42 = load i8, i8* %41, align 1, !dbg !7186
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7187
  store i8 %42, i8* %43, align 1, !dbg !7188
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7189
  %45 = load i8, i8* %44, align 1, !dbg !7189
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7190
  store i8 %45, i8* %46, align 1, !dbg !7191
  %47 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7192
  %48 = load i8, i8* %47, align 1, !dbg !7192
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7193
  store i8 %48, i8* %49, align 1, !dbg !7194
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7195
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7196
  ret void, !dbg !7196
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @inv_sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7197 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7199, metadata !DIExpression()), !dbg !7201
  call void @llvm.dbg.value(metadata i32 0, metadata !7200, metadata !DIExpression()), !dbg !7201
  br label %2, !dbg !7202

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7200, metadata !DIExpression()), !dbg !7201
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7204
  %5 = load i8, i8* %4, align 1, !dbg !7204
  %6 = zext i8 %5 to i32, !dbg !7207
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @inv_sbox, i32 0, i32 %6, !dbg !7207
  %8 = load i8, i8* %7, align 1, !dbg !7207
  store i8 %8, i8* %4, align 1, !dbg !7208
  %9 = add nuw nsw i32 %3, 1, !dbg !7209
  call void @llvm.dbg.value(metadata i32 %9, metadata !7200, metadata !DIExpression()), !dbg !7201
  %10 = icmp eq i32 %9, 16, !dbg !7210
  br i1 %10, label %11, label %2, !dbg !7202, !llvm.loop !7211

11:                                               ; preds = %2
  ret void, !dbg !7213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7214 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7216, metadata !DIExpression()), !dbg !7218
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7219
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7219
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7217, metadata !DIExpression()), !dbg !7220
  call fastcc void @mult_row_column(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7221
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7222
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7223
  call fastcc void @mult_row_column(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7224
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7225
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7226
  call fastcc void @mult_row_column(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7227
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7228
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7229
  call fastcc void @mult_row_column(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7230
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7231
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7232
  ret void, !dbg !7232
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7233 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7237, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata i8* %1, metadata !7238, metadata !DIExpression()), !dbg !7239
  %3 = load i8, i8* %1, align 1, !dbg !7240
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7240
  %5 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %4) #27, !dbg !7240
  %6 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %5) #27, !dbg !7240
  %7 = load i8, i8* %1, align 1, !dbg !7240
  %8 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %7) #27, !dbg !7240
  %9 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %8) #27, !dbg !7240
  %10 = load i8, i8* %1, align 1, !dbg !7240
  %11 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %10) #27, !dbg !7240
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7241
  %13 = load i8, i8* %12, align 1, !dbg !7241
  %14 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %13) #27, !dbg !7241
  %15 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %14) #27, !dbg !7241
  %16 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %15) #27, !dbg !7241
  %17 = load i8, i8* %12, align 1, !dbg !7241
  %18 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %17) #27, !dbg !7241
  %19 = load i8, i8* %12, align 1, !dbg !7241
  %20 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7242
  %21 = load i8, i8* %20, align 1, !dbg !7242
  %22 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %21) #27, !dbg !7242
  %23 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %22) #27, !dbg !7242
  %24 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %23) #27, !dbg !7242
  %25 = load i8, i8* %20, align 1, !dbg !7242
  %26 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %25) #27, !dbg !7242
  %27 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %26) #27, !dbg !7242
  %28 = load i8, i8* %20, align 1, !dbg !7242
  %29 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7243
  %30 = load i8, i8* %29, align 1, !dbg !7243
  %31 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %30) #27, !dbg !7243
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7243
  %33 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %32) #27, !dbg !7243
  %34 = load i8, i8* %29, align 1, !dbg !7243
  %35 = xor i8 %9, %6, !dbg !7243
  %36 = xor i8 %35, %11, !dbg !7242
  %37 = xor i8 %36, %16, !dbg !7242
  %38 = xor i8 %37, %18, !dbg !7241
  %39 = xor i8 %38, %19, !dbg !7241
  %40 = xor i8 %39, %24, !dbg !7240
  %41 = xor i8 %40, %27, !dbg !7240
  %42 = xor i8 %41, %28, !dbg !7244
  %43 = xor i8 %42, %33, !dbg !7245
  %44 = xor i8 %43, %34, !dbg !7246
  store i8 %44, i8* %0, align 1, !dbg !7247
  %45 = load i8, i8* %1, align 1, !dbg !7248
  %46 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %45) #27, !dbg !7248
  %47 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %46) #27, !dbg !7248
  %48 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %47) #27, !dbg !7248
  %49 = load i8, i8* %1, align 1, !dbg !7248
  %50 = load i8, i8* %12, align 1, !dbg !7249
  %51 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %50) #27, !dbg !7249
  %52 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %51) #27, !dbg !7249
  %53 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %52) #27, !dbg !7249
  %54 = load i8, i8* %12, align 1, !dbg !7249
  %55 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %54) #27, !dbg !7249
  %56 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %55) #27, !dbg !7249
  %57 = load i8, i8* %12, align 1, !dbg !7249
  %58 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %57) #27, !dbg !7249
  %59 = load i8, i8* %20, align 1, !dbg !7250
  %60 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %59) #27, !dbg !7250
  %61 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %60) #27, !dbg !7250
  %62 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %61) #27, !dbg !7250
  %63 = load i8, i8* %20, align 1, !dbg !7250
  %64 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %63) #27, !dbg !7250
  %65 = load i8, i8* %20, align 1, !dbg !7250
  %66 = load i8, i8* %29, align 1, !dbg !7251
  %67 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %66) #27, !dbg !7251
  %68 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %67) #27, !dbg !7251
  %69 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %68) #27, !dbg !7251
  %70 = load i8, i8* %29, align 1, !dbg !7251
  %71 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %70) #27, !dbg !7251
  %72 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %71) #27, !dbg !7251
  %73 = load i8, i8* %29, align 1, !dbg !7251
  %74 = xor i8 %49, %48, !dbg !7251
  %75 = xor i8 %74, %53, !dbg !7251
  %76 = xor i8 %75, %56, !dbg !7250
  %77 = xor i8 %76, %58, !dbg !7250
  %78 = xor i8 %77, %62, !dbg !7249
  %79 = xor i8 %78, %64, !dbg !7249
  %80 = xor i8 %79, %65, !dbg !7248
  %81 = xor i8 %80, %69, !dbg !7252
  %82 = xor i8 %81, %72, !dbg !7253
  %83 = xor i8 %82, %73, !dbg !7254
  %84 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7255
  store i8 %83, i8* %84, align 1, !dbg !7256
  %85 = load i8, i8* %1, align 1, !dbg !7257
  %86 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %85) #27, !dbg !7257
  %87 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %86) #27, !dbg !7257
  %88 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %87) #27, !dbg !7257
  %89 = load i8, i8* %1, align 1, !dbg !7257
  %90 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %89) #27, !dbg !7257
  %91 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %90) #27, !dbg !7257
  %92 = load i8, i8* %1, align 1, !dbg !7257
  %93 = load i8, i8* %12, align 1, !dbg !7258
  %94 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %93) #27, !dbg !7258
  %95 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %94) #27, !dbg !7258
  %96 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %95) #27, !dbg !7258
  %97 = load i8, i8* %12, align 1, !dbg !7258
  %98 = load i8, i8* %20, align 1, !dbg !7259
  %99 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %98) #27, !dbg !7259
  %100 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %99) #27, !dbg !7259
  %101 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %100) #27, !dbg !7259
  %102 = load i8, i8* %20, align 1, !dbg !7259
  %103 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %102) #27, !dbg !7259
  %104 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %103) #27, !dbg !7259
  %105 = load i8, i8* %20, align 1, !dbg !7259
  %106 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %105) #27, !dbg !7259
  %107 = load i8, i8* %29, align 1, !dbg !7260
  %108 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %107) #27, !dbg !7260
  %109 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %108) #27, !dbg !7260
  %110 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %109) #27, !dbg !7260
  %111 = load i8, i8* %29, align 1, !dbg !7260
  %112 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %111) #27, !dbg !7260
  %113 = load i8, i8* %29, align 1, !dbg !7260
  %114 = xor i8 %91, %88, !dbg !7260
  %115 = xor i8 %114, %92, !dbg !7260
  %116 = xor i8 %115, %96, !dbg !7259
  %117 = xor i8 %116, %97, !dbg !7259
  %118 = xor i8 %117, %101, !dbg !7258
  %119 = xor i8 %118, %104, !dbg !7257
  %120 = xor i8 %119, %106, !dbg !7257
  %121 = xor i8 %120, %110, !dbg !7261
  %122 = xor i8 %121, %112, !dbg !7262
  %123 = xor i8 %122, %113, !dbg !7263
  %124 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7264
  store i8 %123, i8* %124, align 1, !dbg !7265
  %125 = load i8, i8* %1, align 1, !dbg !7266
  %126 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %125) #27, !dbg !7266
  %127 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %126) #27, !dbg !7266
  %128 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %127) #27, !dbg !7266
  %129 = load i8, i8* %1, align 1, !dbg !7266
  %130 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %129) #27, !dbg !7266
  %131 = load i8, i8* %1, align 1, !dbg !7266
  %132 = load i8, i8* %12, align 1, !dbg !7267
  %133 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %132) #27, !dbg !7267
  %134 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %133) #27, !dbg !7267
  %135 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %134) #27, !dbg !7267
  %136 = load i8, i8* %12, align 1, !dbg !7267
  %137 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %136) #27, !dbg !7267
  %138 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %137) #27, !dbg !7267
  %139 = load i8, i8* %12, align 1, !dbg !7267
  %140 = load i8, i8* %20, align 1, !dbg !7268
  %141 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %140) #27, !dbg !7268
  %142 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %141) #27, !dbg !7268
  %143 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %142) #27, !dbg !7268
  %144 = load i8, i8* %20, align 1, !dbg !7268
  %145 = load i8, i8* %29, align 1, !dbg !7269
  %146 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %145) #27, !dbg !7269
  %147 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %146) #27, !dbg !7269
  %148 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %147) #27, !dbg !7269
  %149 = load i8, i8* %29, align 1, !dbg !7269
  %150 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %149) #27, !dbg !7269
  %151 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %150) #27, !dbg !7269
  %152 = load i8, i8* %29, align 1, !dbg !7269
  %153 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %152) #27, !dbg !7269
  %154 = xor i8 %130, %128, !dbg !7269
  %155 = xor i8 %154, %131, !dbg !7269
  %156 = xor i8 %155, %135, !dbg !7268
  %157 = xor i8 %156, %138, !dbg !7267
  %158 = xor i8 %157, %139, !dbg !7267
  %159 = xor i8 %158, %143, !dbg !7266
  %160 = xor i8 %159, %144, !dbg !7266
  %161 = xor i8 %160, %148, !dbg !7270
  %162 = xor i8 %161, %151, !dbg !7271
  %163 = xor i8 %162, %153, !dbg !7272
  %164 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7273
  store i8 %163, i8* %164, align 1, !dbg !7274
  ret void, !dbg !7275
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef readonly %1) local_unnamed_addr #17 !dbg !7276 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7280, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8* %1, metadata !7281, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.declare(metadata [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, metadata !7282, metadata !DIExpression()), !dbg !7287
  %3 = icmp eq %struct.tc_aes_key_sched_struct* %0, null, !dbg !7288
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4, !dbg !7290
  br i1 %5, label %80, label %9, !dbg !7290

6:                                                ; preds = %9
  call void @llvm.dbg.value(metadata i32 4, metadata !7284, metadata !DIExpression()), !dbg !7286
  %7 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4, !dbg !7291
  br label %36, !dbg !7295

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %34, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7284, metadata !DIExpression()), !dbg !7286
  %11 = shl nuw nsw i32 %10, 2, !dbg !7296
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !7300
  %13 = load i8, i8* %12, align 1, !dbg !7300
  %14 = zext i8 %13 to i32, !dbg !7300
  %15 = shl nuw i32 %14, 24, !dbg !7301
  %16 = or i32 %11, 1, !dbg !7302
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7303
  %18 = load i8, i8* %17, align 1, !dbg !7303
  %19 = zext i8 %18 to i32, !dbg !7303
  %20 = shl nuw nsw i32 %19, 16, !dbg !7304
  %21 = or i32 %20, %15, !dbg !7305
  %22 = or i32 %11, 2, !dbg !7306
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !7307
  %24 = load i8, i8* %23, align 1, !dbg !7307
  %25 = zext i8 %24 to i32, !dbg !7307
  %26 = shl nuw nsw i32 %25, 8, !dbg !7308
  %27 = or i32 %21, %26, !dbg !7309
  %28 = or i32 %11, 3, !dbg !7310
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !7311
  %30 = load i8, i8* %29, align 1, !dbg !7311
  %31 = zext i8 %30 to i32, !dbg !7312
  %32 = or i32 %27, %31, !dbg !7313
  %33 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %10, !dbg !7314
  store i32 %32, i32* %33, align 4, !dbg !7315
  %34 = add nuw nsw i32 %10, 1, !dbg !7316
  call void @llvm.dbg.value(metadata i32 %34, metadata !7284, metadata !DIExpression()), !dbg !7286
  %35 = icmp eq i32 %34, 4, !dbg !7317
  br i1 %35, label %6, label %9, !dbg !7318, !llvm.loop !7319

36:                                               ; preds = %6, %71
  %37 = phi i32 [ %76, %71 ], [ %8, %6 ], !dbg !7291
  %38 = phi i32 [ %78, %71 ], [ 4, %6 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7284, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %37, metadata !7285, metadata !DIExpression()), !dbg !7286
  %39 = and i32 %38, 3, !dbg !7321
  %40 = icmp eq i32 %39, 0, !dbg !7323
  br i1 %40, label %41, label %71, !dbg !7324

41:                                               ; preds = %36
  %42 = tail call fastcc i32 @rotword(i32 noundef %37) #26, !dbg !7325
  %43 = lshr i32 %42, 24, !dbg !7325
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %43, !dbg !7325
  %45 = load i8, i8* %44, align 1, !dbg !7325
  %46 = zext i8 %45 to i32, !dbg !7325
  %47 = shl nuw i32 %46, 24, !dbg !7325
  %48 = lshr i32 %42, 16, !dbg !7325
  %49 = and i32 %48, 255, !dbg !7325
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %49, !dbg !7325
  %51 = load i8, i8* %50, align 1, !dbg !7325
  %52 = zext i8 %51 to i32, !dbg !7325
  %53 = shl nuw nsw i32 %52, 16, !dbg !7325
  %54 = or i32 %53, %47, !dbg !7325
  %55 = lshr i32 %42, 8, !dbg !7325
  %56 = and i32 %55, 255, !dbg !7325
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %56, !dbg !7325
  %58 = load i8, i8* %57, align 1, !dbg !7325
  %59 = zext i8 %58 to i32, !dbg !7325
  %60 = shl nuw nsw i32 %59, 8, !dbg !7325
  %61 = or i32 %54, %60, !dbg !7325
  %62 = and i32 %42, 255, !dbg !7325
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %62, !dbg !7325
  %64 = load i8, i8* %63, align 1, !dbg !7325
  %65 = zext i8 %64 to i32, !dbg !7325
  %66 = or i32 %61, %65, !dbg !7325
  %67 = lshr i32 %38, 2, !dbg !7327
  %68 = getelementptr inbounds [11 x i32], [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, i32 0, i32 %67, !dbg !7328
  %69 = load i32, i32* %68, align 4, !dbg !7328
  %70 = xor i32 %66, %69, !dbg !7329
  call void @llvm.dbg.value(metadata i32 %70, metadata !7285, metadata !DIExpression()), !dbg !7286
  br label %71, !dbg !7330

71:                                               ; preds = %41, %36
  %72 = phi i32 [ %70, %41 ], [ %37, %36 ], !dbg !7331
  call void @llvm.dbg.value(metadata i32 %72, metadata !7285, metadata !DIExpression()), !dbg !7286
  %73 = add nsw i32 %38, -4, !dbg !7332
  %74 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %73, !dbg !7333
  %75 = load i32, i32* %74, align 4, !dbg !7333
  %76 = xor i32 %75, %72, !dbg !7334
  %77 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %38, !dbg !7335
  store i32 %76, i32* %77, align 4, !dbg !7336
  %78 = add nuw nsw i32 %38, 1, !dbg !7337
  call void @llvm.dbg.value(metadata i32 %78, metadata !7284, metadata !DIExpression()), !dbg !7286
  %79 = icmp eq i32 %78, 44, !dbg !7338
  br i1 %79, label %80, label %36, !dbg !7295, !llvm.loop !7339

80:                                               ; preds = %71, %2
  %81 = phi i32 [ 0, %2 ], [ 1, %71 ], !dbg !7286
  ret i32 %81, !dbg !7341
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @rotword(i32 noundef %0) unnamed_addr #13 !dbg !7342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7346, metadata !DIExpression()), !dbg !7347
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 8), !dbg !7348
  ret i32 %2, !dbg !7349
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_encrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7350 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7355, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i8* %1, metadata !7356, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7357, metadata !DIExpression()), !dbg !7360
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7361
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7361
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7358, metadata !DIExpression()), !dbg !7362
  %6 = icmp eq i8* %0, null, !dbg !7363
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7365
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7365
  br i1 %10, label %23, label %11, !dbg !7365

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7366
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7367
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7368
  call void @llvm.dbg.value(metadata i32 0, metadata !7359, metadata !DIExpression()), !dbg !7360
  br label %14, !dbg !7369

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 0, %11 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7359, metadata !DIExpression()), !dbg !7360
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7371
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7374
  call fastcc void @mix_columns(i8* noundef nonnull %5) #26, !dbg !7375
  %16 = add nuw nsw i32 %15, 1, !dbg !7376
  %17 = shl nuw nsw i32 %16, 2, !dbg !7377
  %18 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %17, !dbg !7378
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %18) #26, !dbg !7379
  call void @llvm.dbg.value(metadata i32 %16, metadata !7359, metadata !DIExpression()), !dbg !7360
  %19 = icmp eq i32 %16, 9, !dbg !7380
  br i1 %19, label %20, label %14, !dbg !7369, !llvm.loop !7381

20:                                               ; preds = %14
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7383
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7384
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7385
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7386
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7387
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7388
  br label %23, !dbg !7389

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7360
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7390
  ret i32 %24, !dbg !7390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key.72(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7391 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7393, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.value(metadata i32* %1, metadata !7394, metadata !DIExpression()), !dbg !7395
  %3 = load i32, i32* %1, align 4, !dbg !7396
  %4 = lshr i32 %3, 24, !dbg !7397
  %5 = load i8, i8* %0, align 1, !dbg !7398
  %6 = trunc i32 %4 to i8, !dbg !7398
  %7 = xor i8 %5, %6, !dbg !7398
  store i8 %7, i8* %0, align 1, !dbg !7398
  %8 = load i32, i32* %1, align 4, !dbg !7399
  %9 = lshr i32 %8, 16, !dbg !7400
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7401
  %11 = load i8, i8* %10, align 1, !dbg !7402
  %12 = trunc i32 %9 to i8, !dbg !7402
  %13 = xor i8 %11, %12, !dbg !7402
  store i8 %13, i8* %10, align 1, !dbg !7402
  %14 = load i32, i32* %1, align 4, !dbg !7403
  %15 = lshr i32 %14, 8, !dbg !7404
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7405
  %17 = load i8, i8* %16, align 1, !dbg !7406
  %18 = trunc i32 %15 to i8, !dbg !7406
  %19 = xor i8 %17, %18, !dbg !7406
  store i8 %19, i8* %16, align 1, !dbg !7406
  %20 = load i32, i32* %1, align 4, !dbg !7407
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7408
  %22 = load i8, i8* %21, align 1, !dbg !7409
  %23 = trunc i32 %20 to i8, !dbg !7409
  %24 = xor i8 %22, %23, !dbg !7409
  store i8 %24, i8* %21, align 1, !dbg !7409
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7410
  %26 = load i32, i32* %25, align 4, !dbg !7410
  %27 = lshr i32 %26, 24, !dbg !7411
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7412
  %29 = load i8, i8* %28, align 1, !dbg !7413
  %30 = trunc i32 %27 to i8, !dbg !7413
  %31 = xor i8 %29, %30, !dbg !7413
  store i8 %31, i8* %28, align 1, !dbg !7413
  %32 = load i32, i32* %25, align 4, !dbg !7414
  %33 = lshr i32 %32, 16, !dbg !7415
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7416
  %35 = load i8, i8* %34, align 1, !dbg !7417
  %36 = trunc i32 %33 to i8, !dbg !7417
  %37 = xor i8 %35, %36, !dbg !7417
  store i8 %37, i8* %34, align 1, !dbg !7417
  %38 = load i32, i32* %25, align 4, !dbg !7418
  %39 = lshr i32 %38, 8, !dbg !7419
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7420
  %41 = load i8, i8* %40, align 1, !dbg !7421
  %42 = trunc i32 %39 to i8, !dbg !7421
  %43 = xor i8 %41, %42, !dbg !7421
  store i8 %43, i8* %40, align 1, !dbg !7421
  %44 = load i32, i32* %25, align 4, !dbg !7422
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7423
  %46 = load i8, i8* %45, align 1, !dbg !7424
  %47 = trunc i32 %44 to i8, !dbg !7424
  %48 = xor i8 %46, %47, !dbg !7424
  store i8 %48, i8* %45, align 1, !dbg !7424
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7425
  %50 = load i32, i32* %49, align 4, !dbg !7425
  %51 = lshr i32 %50, 24, !dbg !7426
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7427
  %53 = load i8, i8* %52, align 1, !dbg !7428
  %54 = trunc i32 %51 to i8, !dbg !7428
  %55 = xor i8 %53, %54, !dbg !7428
  store i8 %55, i8* %52, align 1, !dbg !7428
  %56 = load i32, i32* %49, align 4, !dbg !7429
  %57 = lshr i32 %56, 16, !dbg !7430
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7431
  %59 = load i8, i8* %58, align 1, !dbg !7432
  %60 = trunc i32 %57 to i8, !dbg !7432
  %61 = xor i8 %59, %60, !dbg !7432
  store i8 %61, i8* %58, align 1, !dbg !7432
  %62 = load i32, i32* %49, align 4, !dbg !7433
  %63 = lshr i32 %62, 8, !dbg !7434
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7435
  %65 = load i8, i8* %64, align 1, !dbg !7436
  %66 = trunc i32 %63 to i8, !dbg !7436
  %67 = xor i8 %65, %66, !dbg !7436
  store i8 %67, i8* %64, align 1, !dbg !7436
  %68 = load i32, i32* %49, align 4, !dbg !7437
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7438
  %70 = load i8, i8* %69, align 1, !dbg !7439
  %71 = trunc i32 %68 to i8, !dbg !7439
  %72 = xor i8 %70, %71, !dbg !7439
  store i8 %72, i8* %69, align 1, !dbg !7439
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7440
  %74 = load i32, i32* %73, align 4, !dbg !7440
  %75 = lshr i32 %74, 24, !dbg !7441
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7442
  %77 = load i8, i8* %76, align 1, !dbg !7443
  %78 = trunc i32 %75 to i8, !dbg !7443
  %79 = xor i8 %77, %78, !dbg !7443
  store i8 %79, i8* %76, align 1, !dbg !7443
  %80 = load i32, i32* %73, align 4, !dbg !7444
  %81 = lshr i32 %80, 16, !dbg !7445
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7446
  %83 = load i8, i8* %82, align 1, !dbg !7447
  %84 = trunc i32 %81 to i8, !dbg !7447
  %85 = xor i8 %83, %84, !dbg !7447
  store i8 %85, i8* %82, align 1, !dbg !7447
  %86 = load i32, i32* %73, align 4, !dbg !7448
  %87 = lshr i32 %86, 8, !dbg !7449
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7450
  %89 = load i8, i8* %88, align 1, !dbg !7451
  %90 = trunc i32 %87 to i8, !dbg !7451
  %91 = xor i8 %89, %90, !dbg !7451
  store i8 %91, i8* %88, align 1, !dbg !7451
  %92 = load i32, i32* %73, align 4, !dbg !7452
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7453
  %94 = load i8, i8* %93, align 1, !dbg !7454
  %95 = trunc i32 %92 to i8, !dbg !7454
  %96 = xor i8 %94, %95, !dbg !7454
  store i8 %96, i8* %93, align 1, !dbg !7454
  ret void, !dbg !7455
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7456 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7458, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i32 0, metadata !7459, metadata !DIExpression()), !dbg !7460
  br label %2, !dbg !7461

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7459, metadata !DIExpression()), !dbg !7460
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7463
  %5 = load i8, i8* %4, align 1, !dbg !7463
  %6 = zext i8 %5 to i32, !dbg !7466
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %6, !dbg !7466
  %8 = load i8, i8* %7, align 1, !dbg !7466
  store i8 %8, i8* %4, align 1, !dbg !7467
  %9 = add nuw nsw i32 %3, 1, !dbg !7468
  call void @llvm.dbg.value(metadata i32 %9, metadata !7459, metadata !DIExpression()), !dbg !7460
  %10 = icmp eq i32 %9, 16, !dbg !7469
  br i1 %10, label %11, label %2, !dbg !7461, !llvm.loop !7470

11:                                               ; preds = %2
  ret void, !dbg !7472
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7473 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7475, metadata !DIExpression()), !dbg !7477
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7478
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7478
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7476, metadata !DIExpression()), !dbg !7479
  %4 = load i8, i8* %0, align 1, !dbg !7480
  store i8 %4, i8* %3, align 1, !dbg !7481
  %5 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7482
  %6 = load i8, i8* %5, align 1, !dbg !7482
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7483
  store i8 %6, i8* %7, align 1, !dbg !7484
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7485
  %9 = load i8, i8* %8, align 1, !dbg !7485
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7486
  store i8 %9, i8* %10, align 1, !dbg !7487
  %11 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7488
  %12 = load i8, i8* %11, align 1, !dbg !7488
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7489
  store i8 %12, i8* %13, align 1, !dbg !7490
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7491
  %15 = load i8, i8* %14, align 1, !dbg !7491
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7492
  store i8 %15, i8* %16, align 1, !dbg !7493
  %17 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7494
  %18 = load i8, i8* %17, align 1, !dbg !7494
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7495
  store i8 %18, i8* %19, align 1, !dbg !7496
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7497
  %21 = load i8, i8* %20, align 1, !dbg !7497
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7498
  store i8 %21, i8* %22, align 1, !dbg !7499
  %23 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7500
  %24 = load i8, i8* %23, align 1, !dbg !7500
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7501
  store i8 %24, i8* %25, align 1, !dbg !7502
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7503
  %27 = load i8, i8* %26, align 1, !dbg !7503
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7504
  store i8 %27, i8* %28, align 1, !dbg !7505
  %29 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7506
  %30 = load i8, i8* %29, align 1, !dbg !7506
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7507
  store i8 %30, i8* %31, align 1, !dbg !7508
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7509
  %33 = load i8, i8* %32, align 1, !dbg !7509
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7510
  store i8 %33, i8* %34, align 1, !dbg !7511
  %35 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7512
  %36 = load i8, i8* %35, align 1, !dbg !7512
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7513
  store i8 %36, i8* %37, align 1, !dbg !7514
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7515
  %39 = load i8, i8* %38, align 1, !dbg !7515
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7516
  store i8 %39, i8* %40, align 1, !dbg !7517
  %41 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7518
  %42 = load i8, i8* %41, align 1, !dbg !7518
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7519
  store i8 %42, i8* %43, align 1, !dbg !7520
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7521
  %45 = load i8, i8* %44, align 1, !dbg !7521
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7522
  store i8 %45, i8* %46, align 1, !dbg !7523
  %47 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7524
  %48 = load i8, i8* %47, align 1, !dbg !7524
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7525
  store i8 %48, i8* %49, align 1, !dbg !7526
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7527
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7528
  ret void, !dbg !7528
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7529 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7531, metadata !DIExpression()), !dbg !7533
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7534
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7534
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7532, metadata !DIExpression()), !dbg !7535
  call fastcc void @mult_row_column.73(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7536
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7537
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7538
  call fastcc void @mult_row_column.73(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7539
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7540
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7541
  call fastcc void @mult_row_column.73(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7542
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7543
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7544
  call fastcc void @mult_row_column.73(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7545
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7546
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7547
  ret void, !dbg !7547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column.73(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7548 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7550, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i8* %1, metadata !7551, metadata !DIExpression()), !dbg !7552
  %3 = load i8, i8* %1, align 1, !dbg !7553
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7554
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7555
  %6 = load i8, i8* %5, align 1, !dbg !7555
  %7 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %6) #27, !dbg !7555
  %8 = load i8, i8* %5, align 1, !dbg !7555
  %9 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7556
  %10 = load i8, i8* %9, align 1, !dbg !7556
  %11 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7557
  %12 = load i8, i8* %11, align 1, !dbg !7557
  %13 = xor i8 %7, %4, !dbg !7555
  %14 = xor i8 %13, %8, !dbg !7558
  %15 = xor i8 %14, %10, !dbg !7559
  %16 = xor i8 %15, %12, !dbg !7560
  store i8 %16, i8* %0, align 1, !dbg !7561
  %17 = load i8, i8* %1, align 1, !dbg !7562
  %18 = load i8, i8* %5, align 1, !dbg !7563
  %19 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %18) #27, !dbg !7564
  %20 = load i8, i8* %9, align 1, !dbg !7565
  %21 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %20) #27, !dbg !7565
  %22 = load i8, i8* %9, align 1, !dbg !7565
  %23 = load i8, i8* %11, align 1, !dbg !7566
  %24 = xor i8 %19, %17, !dbg !7565
  %25 = xor i8 %24, %21, !dbg !7567
  %26 = xor i8 %25, %22, !dbg !7568
  %27 = xor i8 %26, %23, !dbg !7569
  %28 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7570
  store i8 %27, i8* %28, align 1, !dbg !7571
  %29 = load i8, i8* %1, align 1, !dbg !7572
  %30 = load i8, i8* %5, align 1, !dbg !7573
  %31 = load i8, i8* %9, align 1, !dbg !7574
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7575
  %33 = load i8, i8* %11, align 1, !dbg !7576
  %34 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %33) #27, !dbg !7576
  %35 = load i8, i8* %11, align 1, !dbg !7576
  %36 = xor i8 %30, %29, !dbg !7576
  %37 = xor i8 %36, %32, !dbg !7577
  %38 = xor i8 %37, %34, !dbg !7578
  %39 = xor i8 %38, %35, !dbg !7579
  %40 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7580
  store i8 %39, i8* %40, align 1, !dbg !7581
  %41 = load i8, i8* %1, align 1, !dbg !7582
  %42 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %41) #27, !dbg !7582
  %43 = load i8, i8* %1, align 1, !dbg !7582
  %44 = xor i8 %43, %42, !dbg !7582
  %45 = load i8, i8* %5, align 1, !dbg !7583
  %46 = xor i8 %44, %45, !dbg !7584
  %47 = load i8, i8* %9, align 1, !dbg !7585
  %48 = xor i8 %46, %47, !dbg !7586
  %49 = load i8, i8* %11, align 1, !dbg !7587
  %50 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %49) #27, !dbg !7588
  %51 = xor i8 %48, %50, !dbg !7589
  %52 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7590
  store i8 %51, i8* %52, align 1, !dbg !7591
  ret void, !dbg !7592
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_encrypt(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7593 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7599, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32 %1, metadata !7600, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8* %2, metadata !7601, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32 %3, metadata !7602, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8* %4, metadata !7603, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7604, metadata !DIExpression()), !dbg !7608
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7609
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7609
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7605, metadata !DIExpression()), !dbg !7610
  %9 = icmp eq i8* %0, null, !dbg !7611
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7613
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7613
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7613
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7613
  %18 = xor i1 %17, true, !dbg !7613
  %19 = or i32 %3, %1, !dbg !7613
  %20 = and i32 %19, 15, !dbg !7613
  %21 = icmp eq i32 %20, 0, !dbg !7613
  %22 = and i1 %21, %18, !dbg !7613
  %23 = add i32 %3, 16
  %24 = icmp eq i32 %23, %1
  %25 = and i1 %24, %22, !dbg !7613
  br i1 %25, label %26, label %52, !dbg !7613

26:                                               ; preds = %6
  %27 = call i32 @_copy(i8* noundef nonnull %8, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7614
  %28 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7615
  call void @llvm.dbg.value(metadata i8* %0, metadata !7599, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !7608
  call void @llvm.dbg.value(metadata i32 0, metadata !7607, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32 0, metadata !7606, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8* %2, metadata !7601, metadata !DIExpression()), !dbg !7608
  br i1 %14, label %52, label %29, !dbg !7616

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !7618
  call void @llvm.dbg.value(metadata i8* %30, metadata !7599, metadata !DIExpression()), !dbg !7608
  br label %31, !dbg !7616

31:                                               ; preds = %29, %47
  %32 = phi i32 [ %49, %47 ], [ 0, %29 ]
  %33 = phi i32 [ %50, %47 ], [ 0, %29 ]
  %34 = phi i8* [ %48, %47 ], [ %30, %29 ]
  %35 = phi i8* [ %36, %47 ], [ %2, %29 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !7607, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32 %33, metadata !7606, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8* %34, metadata !7599, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8* %35, metadata !7601, metadata !DIExpression()), !dbg !7608
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7619
  call void @llvm.dbg.value(metadata i8* %36, metadata !7601, metadata !DIExpression()), !dbg !7608
  %37 = load i8, i8* %35, align 1, !dbg !7622
  %38 = add i32 %32, 1, !dbg !7623
  call void @llvm.dbg.value(metadata i32 %38, metadata !7607, metadata !DIExpression()), !dbg !7608
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %32, !dbg !7624
  %40 = load i8, i8* %39, align 1, !dbg !7625
  %41 = xor i8 %40, %37, !dbg !7625
  store i8 %41, i8* %39, align 1, !dbg !7625
  %42 = icmp eq i32 %38, 16, !dbg !7626
  br i1 %42, label %43, label %47, !dbg !7628

43:                                               ; preds = %31
  %44 = call i32 @tc_aes_encrypt(i8* noundef nonnull %8, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7629
  %45 = call i32 @_copy(i8* noundef %34, i32 noundef 16, i8* noundef nonnull %8, i32 noundef 16) #27, !dbg !7631
  %46 = getelementptr inbounds i8, i8* %34, i32 16, !dbg !7632
  call void @llvm.dbg.value(metadata i8* %46, metadata !7599, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i32 0, metadata !7607, metadata !DIExpression()), !dbg !7608
  br label %47, !dbg !7633

47:                                               ; preds = %31, %43
  %48 = phi i8* [ %46, %43 ], [ %34, %31 ], !dbg !7608
  %49 = phi i32 [ 0, %43 ], [ %38, %31 ], !dbg !7634
  call void @llvm.dbg.value(metadata i32 %49, metadata !7607, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8* %48, metadata !7599, metadata !DIExpression()), !dbg !7608
  %50 = add nuw i32 %33, 1, !dbg !7635
  call void @llvm.dbg.value(metadata i32 %50, metadata !7606, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.value(metadata i8* %36, metadata !7601, metadata !DIExpression()), !dbg !7608
  %51 = icmp eq i32 %50, %3, !dbg !7636
  br i1 %51, label %52, label %31, !dbg !7616, !llvm.loop !7637

52:                                               ; preds = %47, %26, %6
  %53 = phi i32 [ 0, %6 ], [ 1, %26 ], [ 1, %47 ], !dbg !7608
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7639
  ret i32 %53, !dbg !7639
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_decrypt(i8* noundef writeonly %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i8* nocapture noundef readonly %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7640 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7642, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i32 %1, metadata !7643, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i8* %2, metadata !7644, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i32 %3, metadata !7645, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i8* %4, metadata !7646, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7647, metadata !DIExpression()), !dbg !7652
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7653
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7653
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7648, metadata !DIExpression()), !dbg !7654
  %9 = icmp eq i8* %0, null, !dbg !7655
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7657
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7657
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7657
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7657
  %18 = xor i1 %17, true, !dbg !7657
  %19 = or i32 %3, %1, !dbg !7657
  %20 = and i32 %19, 15, !dbg !7657
  %21 = icmp eq i32 %20, 0, !dbg !7657
  %22 = and i1 %21, %18, !dbg !7657
  %23 = icmp eq i32 %1, %3
  %24 = and i1 %23, %22, !dbg !7657
  %25 = xor i1 %24, true, !dbg !7657
  %26 = or i1 %14, %25, !dbg !7657
  %27 = zext i1 %24 to i32, !dbg !7657
  br i1 %26, label %51, label %28, !dbg !7657

28:                                               ; preds = %6, %39
  %29 = phi i32 [ %42, %39 ], [ 0, %6 ]
  %30 = phi i32 [ %49, %39 ], [ 0, %6 ]
  %31 = phi i8* [ %45, %39 ], [ %4, %6 ]
  %32 = phi i8* [ %48, %39 ], [ %0, %6 ]
  %33 = phi i8* [ %40, %39 ], [ %2, %6 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !7651, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i32 %30, metadata !7650, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i8* %31, metadata !7649, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i8* %32, metadata !7642, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i8* %33, metadata !7644, metadata !DIExpression()), !dbg !7652
  %34 = and i32 %30, 15, !dbg !7658
  %35 = icmp eq i32 %34, 0, !dbg !7663
  br i1 %35, label %36, label %39, !dbg !7664

36:                                               ; preds = %28
  %37 = call i32 @tc_aes_decrypt(i8* noundef nonnull %8, i8* noundef %33, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7665
  %38 = getelementptr inbounds i8, i8* %33, i32 16, !dbg !7667
  call void @llvm.dbg.value(metadata i8* %38, metadata !7644, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i32 0, metadata !7651, metadata !DIExpression()), !dbg !7652
  br label %39, !dbg !7668

39:                                               ; preds = %36, %28
  %40 = phi i8* [ %38, %36 ], [ %33, %28 ]
  %41 = phi i32 [ 0, %36 ], [ %29, %28 ], !dbg !7669
  call void @llvm.dbg.value(metadata i32 %41, metadata !7651, metadata !DIExpression()), !dbg !7652
  call void @llvm.dbg.value(metadata i8* %40, metadata !7644, metadata !DIExpression()), !dbg !7652
  %42 = add i32 %41, 1, !dbg !7670
  call void @llvm.dbg.value(metadata i32 %42, metadata !7651, metadata !DIExpression()), !dbg !7652
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %41, !dbg !7671
  %44 = load i8, i8* %43, align 1, !dbg !7671
  %45 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !7672
  call void @llvm.dbg.value(metadata i8* %45, metadata !7649, metadata !DIExpression()), !dbg !7652
  %46 = load i8, i8* %31, align 1, !dbg !7673
  %47 = xor i8 %46, %44, !dbg !7674
  %48 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7675
  call void @llvm.dbg.value(metadata i8* %48, metadata !7642, metadata !DIExpression()), !dbg !7652
  store i8 %47, i8* %32, align 1, !dbg !7676
  %49 = add nuw i32 %30, 1, !dbg !7677
  call void @llvm.dbg.value(metadata i32 %49, metadata !7650, metadata !DIExpression()), !dbg !7652
  %50 = icmp eq i32 %49, %3, !dbg !7678
  br i1 %50, label %51, label %28, !dbg !7679, !llvm.loop !7680

51:                                               ; preds = %39, %6
  %52 = phi i32 [ %27, %6 ], [ 1, %39 ], !dbg !7652
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7682
  ret i32 %52, !dbg !7682
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7683 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7689, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i32 %1, metadata !7690, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i8* %2, metadata !7691, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i32 %3, metadata !7692, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i8* %4, metadata !7693, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7694, metadata !DIExpression()), !dbg !7699
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7700
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7700
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7695, metadata !DIExpression()), !dbg !7701
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7702
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7702
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7696, metadata !DIExpression()), !dbg !7703
  %11 = icmp eq i8* %0, null, !dbg !7704
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7706
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7706
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7706
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7706
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7706
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7706
  br i1 %23, label %86, label %24, !dbg !7706

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !7707
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 12, !dbg !7708
  %27 = load i8, i8* %26, align 1, !dbg !7708
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 13, !dbg !7709
  %29 = load i8, i8* %28, align 1, !dbg !7709
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7710
  %31 = load i8, i8* %30, align 1, !dbg !7710
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7711
  %33 = load i8, i8* %32, align 1, !dbg !7711
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i8 %27), metadata !7697, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7699
  call void @llvm.dbg.value(metadata i32 0, metadata !7698, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i8* %0, metadata !7689, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i8* %2, metadata !7691, metadata !DIExpression()), !dbg !7699
  %34 = zext i8 %29 to i32, !dbg !7709
  call void @llvm.dbg.value(metadata !DIArgList(i32 %34, i8 %33, i8 %31, i8 %27), metadata !7697, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7699
  %35 = shl nuw nsw i32 %34, 16, !dbg !7712
  call void @llvm.dbg.value(metadata !DIArgList(i32 %35, i8 %33, i8 %31, i8 %27), metadata !7697, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7699
  %36 = zext i8 %27 to i32, !dbg !7708
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %36), metadata !7697, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7699
  %37 = shl nuw i32 %36, 24, !dbg !7713
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %37), metadata !7697, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7699
  %38 = or i32 %35, %37, !dbg !7714
  call void @llvm.dbg.value(metadata !DIArgList(i32 %38, i8 %33, i8 %31), metadata !7697, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7699
  %39 = zext i8 %31 to i32, !dbg !7710
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %39, i8 %27), metadata !7697, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7699
  %40 = shl nuw nsw i32 %39, 8, !dbg !7715
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %40, i8 %27), metadata !7697, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7699
  %41 = or i32 %38, %40, !dbg !7716
  call void @llvm.dbg.value(metadata !DIArgList(i32 %41, i8 %33), metadata !7697, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7699
  %42 = zext i8 %33 to i32, !dbg !7717
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i32 %42, i8 %31, i8 %27), metadata !7697, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7699
  %43 = or i32 %41, %42, !dbg !7718
  call void @llvm.dbg.value(metadata i32 %43, metadata !7697, metadata !DIExpression()), !dbg !7699
  br label %44, !dbg !7719

44:                                               ; preds = %24, %67
  %45 = phi i8 [ %68, %67 ], [ %33, %24 ]
  %46 = phi i8 [ %69, %67 ], [ %31, %24 ]
  %47 = phi i8 [ %70, %67 ], [ %29, %24 ]
  %48 = phi i8 [ %71, %67 ], [ %27, %24 ]
  %49 = phi i32 [ %79, %67 ], [ 0, %24 ]
  %50 = phi i32 [ %72, %67 ], [ %43, %24 ]
  %51 = phi i8* [ %78, %67 ], [ %0, %24 ]
  %52 = phi i8* [ %75, %67 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7698, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i32 %50, metadata !7697, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i8* %51, metadata !7689, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i8* %52, metadata !7691, metadata !DIExpression()), !dbg !7699
  %53 = and i32 %49, 15, !dbg !7721
  %54 = icmp eq i32 %53, 0, !dbg !7725
  br i1 %54, label %55, label %67, !dbg !7726

55:                                               ; preds = %44
  %56 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7727
  %57 = icmp eq i32 %56, 0, !dbg !7727
  br i1 %57, label %86, label %58, !dbg !7730

58:                                               ; preds = %55
  %59 = add i32 %50, 1, !dbg !7731
  call void @llvm.dbg.value(metadata i32 %59, metadata !7697, metadata !DIExpression()), !dbg !7699
  %60 = lshr i32 %59, 24, !dbg !7733
  %61 = trunc i32 %60 to i8, !dbg !7734
  store i8 %61, i8* %26, align 1, !dbg !7735
  %62 = lshr i32 %59, 16, !dbg !7736
  %63 = trunc i32 %62 to i8, !dbg !7737
  store i8 %63, i8* %28, align 1, !dbg !7738
  %64 = lshr i32 %59, 8, !dbg !7739
  %65 = trunc i32 %64 to i8, !dbg !7740
  store i8 %65, i8* %30, align 1, !dbg !7741
  %66 = trunc i32 %59 to i8, !dbg !7742
  store i8 %66, i8* %32, align 1, !dbg !7743
  br label %67, !dbg !7744

67:                                               ; preds = %58, %44
  %68 = phi i8 [ %66, %58 ], [ %45, %44 ]
  %69 = phi i8 [ %65, %58 ], [ %46, %44 ]
  %70 = phi i8 [ %63, %58 ], [ %47, %44 ]
  %71 = phi i8 [ %61, %58 ], [ %48, %44 ]
  %72 = phi i32 [ %59, %58 ], [ %50, %44 ], !dbg !7699
  call void @llvm.dbg.value(metadata i32 %72, metadata !7697, metadata !DIExpression()), !dbg !7699
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %53, !dbg !7745
  %74 = load i8, i8* %73, align 1, !dbg !7745
  %75 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !7746
  call void @llvm.dbg.value(metadata i8* %75, metadata !7691, metadata !DIExpression()), !dbg !7699
  %76 = load i8, i8* %52, align 1, !dbg !7747
  %77 = xor i8 %76, %74, !dbg !7748
  %78 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !7749
  call void @llvm.dbg.value(metadata i8* %78, metadata !7689, metadata !DIExpression()), !dbg !7699
  store i8 %77, i8* %51, align 1, !dbg !7750
  %79 = add nuw i32 %49, 1, !dbg !7751
  call void @llvm.dbg.value(metadata i32 %79, metadata !7698, metadata !DIExpression()), !dbg !7699
  %80 = icmp eq i32 %79, %3, !dbg !7752
  br i1 %80, label %81, label %44, !dbg !7719, !llvm.loop !7753

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %4, i32 12, !dbg !7755
  store i8 %71, i8* %82, align 1, !dbg !7756
  %83 = getelementptr inbounds i8, i8* %4, i32 13, !dbg !7757
  store i8 %70, i8* %83, align 1, !dbg !7758
  %84 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !7759
  store i8 %69, i8* %84, align 1, !dbg !7760
  %85 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !7761
  store i8 %68, i8* %85, align 1, !dbg !7762
  br label %86, !dbg !7763

86:                                               ; preds = %55, %6, %81
  %87 = phi i32 [ 1, %81 ], [ 0, %6 ], [ 0, %55 ], !dbg !7699
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7764
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7764
  ret i32 %87, !dbg !7764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef writeonly %0, %struct.tc_aes_key_sched_struct* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #9 !dbg !7765 {
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %0, metadata !7770, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %1, metadata !7771, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.value(metadata i8* %2, metadata !7772, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.value(metadata i32 %3, metadata !7773, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.value(metadata i32 %4, metadata !7774, metadata !DIExpression()), !dbg !7775
  %6 = icmp eq %struct.tc_ccm_mode_struct* %0, null, !dbg !7776
  %7 = icmp eq %struct.tc_aes_key_sched_struct* %1, null
  %8 = or i1 %6, %7, !dbg !7778
  %9 = icmp eq i8* %2, null
  %10 = or i1 %8, %9, !dbg !7778
  %11 = icmp ne i32 %3, 13
  %12 = or i1 %10, %11, !dbg !7778
  br i1 %12, label %23, label %13, !dbg !7778

13:                                               ; preds = %5
  %14 = add i32 %4, -4, !dbg !7779
  %15 = icmp ult i32 %14, 13, !dbg !7779
  %16 = and i32 %4, 1
  %17 = icmp eq i32 %16, 0
  %18 = and i1 %15, %17, !dbg !7779
  br i1 %18, label %19, label %23, !dbg !7779

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 2, !dbg !7782
  store i32 %4, i32* %20, align 4, !dbg !7783
  %21 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 0, !dbg !7784
  store %struct.tc_aes_key_sched_struct* %1, %struct.tc_aes_key_sched_struct** %21, align 4, !dbg !7785
  %22 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 1, !dbg !7786
  store i8* %2, i8** %22, align 4, !dbg !7787
  br label %23, !dbg !7788

23:                                               ; preds = %13, %5, %19
  %24 = phi i32 [ 1, %19 ], [ 0, %5 ], [ 0, %13 ], !dbg !7775
  ret i32 %24, !dbg !7789
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_generation_encryption(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !7790 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7794, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i32 %1, metadata !7795, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i8* %2, metadata !7796, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i32 %3, metadata !7797, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i8* %4, metadata !7798, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i32 %5, metadata !7799, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !7800, metadata !DIExpression()), !dbg !7804
  %10 = icmp eq i8* %0, null, !dbg !7805
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !7807
  br i1 %12, label %85, label %13, !dbg !7807

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !7808
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !7809
  br i1 %16, label %85, label %17, !dbg !7809

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !7810
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !7811
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !7811
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !7811
  br i1 %24, label %85, label %25, !dbg !7811

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !7812
  %27 = load i32, i32* %26, align 4, !dbg !7812
  %28 = add i32 %27, %5, !dbg !7813
  %29 = icmp ugt i32 %28, %1, !dbg !7814
  br i1 %29, label %85, label %30, !dbg !7815

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7816
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7816
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7801, metadata !DIExpression()), !dbg !7817
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !7818
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7818
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !7802, metadata !DIExpression()), !dbg !7819
  %33 = select i1 %18, i32 64, i32 0, !dbg !7820
  %34 = shl i32 %27, 2, !dbg !7821
  %35 = add i32 %34, 248, !dbg !7821
  %36 = and i32 %35, 248, !dbg !7821
  %37 = or i32 %36, %33, !dbg !7822
  %38 = trunc i32 %37 to i8, !dbg !7823
  %39 = or i8 %38, 1, !dbg !7823
  store i8 %39, i8* %31, align 1, !dbg !7824
  call void @llvm.dbg.value(metadata i32 1, metadata !7803, metadata !DIExpression()), !dbg !7804
  %40 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %41 = load i8*, i8** %40, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !7803, metadata !DIExpression()), !dbg !7804
  br label %42, !dbg !7825

42:                                               ; preds = %30, %42
  %43 = phi i32 [ 1, %30 ], [ %48, %42 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !7803, metadata !DIExpression()), !dbg !7804
  %44 = add nsw i32 %43, -1, !dbg !7827
  %45 = getelementptr inbounds i8, i8* %41, i32 %44, !dbg !7830
  %46 = load i8, i8* %45, align 1, !dbg !7830
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %43, !dbg !7831
  store i8 %46, i8* %47, align 1, !dbg !7832
  %48 = add nuw nsw i32 %43, 1, !dbg !7833
  call void @llvm.dbg.value(metadata i32 %48, metadata !7803, metadata !DIExpression()), !dbg !7804
  %49 = icmp eq i32 %48, 14, !dbg !7834
  br i1 %49, label %50, label %42, !dbg !7825, !llvm.loop !7835

50:                                               ; preds = %42
  %51 = lshr i32 %5, 8, !dbg !7837
  %52 = trunc i32 %51 to i8, !dbg !7838
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7839
  store i8 %52, i8* %53, align 1, !dbg !7840
  %54 = trunc i32 %5 to i8, !dbg !7841
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7842
  store i8 %54, i8* %55, align 1, !dbg !7843
  %56 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !7844
  %57 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7844
  %58 = call i32 @tc_aes_encrypt(i8* noundef nonnull %32, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %57) #27, !dbg !7845
  br i1 %18, label %59, label %61, !dbg !7846

59:                                               ; preds = %50
  %60 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7847
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %60) #26, !dbg !7850
  br label %61, !dbg !7851

61:                                               ; preds = %59, %50
  br i1 %14, label %62, label %64, !dbg !7852

62:                                               ; preds = %61
  %63 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7853
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %4, i32 noundef %5, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %63) #26, !dbg !7856
  br label %64, !dbg !7857

64:                                               ; preds = %62, %61
  store i8 1, i8* %31, align 1, !dbg !7858
  store i8 0, i8* %55, align 1, !dbg !7859
  store i8 0, i8* %53, align 1, !dbg !7860
  %65 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7861
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %5, i8* noundef %4, i32 noundef %5, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %65) #26, !dbg !7862
  store i8 0, i8* %55, align 1, !dbg !7863
  store i8 0, i8* %53, align 1, !dbg !7864
  %66 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7865
  %67 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %66) #27, !dbg !7866
  call void @llvm.dbg.value(metadata !DIArgList(i8* %0, i32 %5), metadata !7794, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7804
  call void @llvm.dbg.value(metadata i32 0, metadata !7803, metadata !DIExpression()), !dbg !7804
  %68 = load i32, i32* %26, align 4, !dbg !7867
  %69 = icmp eq i32 %68, 0, !dbg !7870
  br i1 %69, label %84, label %70, !dbg !7871

70:                                               ; preds = %64
  %71 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7872
  call void @llvm.dbg.value(metadata i8* %71, metadata !7794, metadata !DIExpression()), !dbg !7804
  br label %72, !dbg !7871

72:                                               ; preds = %70, %72
  %73 = phi i32 [ %81, %72 ], [ 0, %70 ]
  %74 = phi i8* [ %80, %72 ], [ %71, %70 ]
  call void @llvm.dbg.value(metadata i32 %73, metadata !7803, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i8* %74, metadata !7794, metadata !DIExpression()), !dbg !7804
  %75 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %73, !dbg !7873
  %76 = load i8, i8* %75, align 1, !dbg !7873
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %73, !dbg !7875
  %78 = load i8, i8* %77, align 1, !dbg !7875
  %79 = xor i8 %78, %76, !dbg !7876
  %80 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !7877
  call void @llvm.dbg.value(metadata i8* %80, metadata !7794, metadata !DIExpression()), !dbg !7804
  store i8 %79, i8* %74, align 1, !dbg !7878
  %81 = add nuw i32 %73, 1, !dbg !7879
  call void @llvm.dbg.value(metadata i32 %81, metadata !7803, metadata !DIExpression()), !dbg !7804
  %82 = load i32, i32* %26, align 4, !dbg !7867
  %83 = icmp ult i32 %81, %82, !dbg !7870
  br i1 %83, label %72, label %84, !dbg !7871, !llvm.loop !7880

84:                                               ; preds = %72, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7882
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7882
  br label %85

85:                                               ; preds = %7, %25, %13, %17, %84
  %86 = phi i32 [ 1, %84 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !7804
  ret i32 %86, !dbg !7882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_cbc_mac(i8* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, %struct.tc_aes_key_sched_struct* noundef %4) unnamed_addr #1 !dbg !7883 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7887, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i8* %1, metadata !7888, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i32 %2, metadata !7889, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i32 %3, metadata !7890, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %4, metadata !7891, metadata !DIExpression()), !dbg !7893
  %6 = icmp eq i32 %3, 0, !dbg !7894
  br i1 %6, label %17, label %7, !dbg !7896

7:                                                ; preds = %5
  %8 = lshr i32 %2, 8, !dbg !7897
  %9 = load i8, i8* %0, align 1, !dbg !7899
  %10 = trunc i32 %8 to i8, !dbg !7899
  %11 = xor i8 %9, %10, !dbg !7899
  store i8 %11, i8* %0, align 1, !dbg !7899
  %12 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7900
  %13 = load i8, i8* %12, align 1, !dbg !7901
  %14 = trunc i32 %2 to i8, !dbg !7901
  %15 = xor i8 %13, %14, !dbg !7901
  store i8 %15, i8* %12, align 1, !dbg !7901
  %16 = add i32 %2, 2, !dbg !7902
  call void @llvm.dbg.value(metadata i32 %16, metadata !7889, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i32 2, metadata !7892, metadata !DIExpression()), !dbg !7893
  br label %17, !dbg !7903

17:                                               ; preds = %5, %7
  %18 = phi i32 [ %16, %7 ], [ %2, %5 ]
  %19 = phi i32 [ 2, %7 ], [ 0, %5 ], !dbg !7904
  call void @llvm.dbg.value(metadata i32 %19, metadata !7892, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i32 %18, metadata !7889, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i8* %1, metadata !7888, metadata !DIExpression()), !dbg !7893
  %20 = icmp ult i32 %19, %18, !dbg !7905
  br i1 %20, label %21, label %39, !dbg !7906

21:                                               ; preds = %17, %37
  %22 = phi i32 [ %26, %37 ], [ %19, %17 ]
  %23 = phi i8* [ %24, %37 ], [ %1, %17 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !7892, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i8* %23, metadata !7888, metadata !DIExpression()), !dbg !7893
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7907
  call void @llvm.dbg.value(metadata i8* %24, metadata !7888, metadata !DIExpression()), !dbg !7893
  %25 = load i8, i8* %23, align 1, !dbg !7909
  %26 = add i32 %22, 1, !dbg !7910
  call void @llvm.dbg.value(metadata i32 %26, metadata !7892, metadata !DIExpression()), !dbg !7893
  %27 = and i32 %22, 15, !dbg !7911
  %28 = getelementptr inbounds i8, i8* %0, i32 %27, !dbg !7912
  %29 = load i8, i8* %28, align 1, !dbg !7913
  %30 = xor i8 %29, %25, !dbg !7913
  store i8 %30, i8* %28, align 1, !dbg !7913
  %31 = and i32 %26, 15, !dbg !7914
  %32 = icmp eq i32 %31, 0, !dbg !7916
  %33 = icmp eq i32 %18, %26
  %34 = or i1 %33, %32, !dbg !7917
  br i1 %34, label %35, label %37, !dbg !7917

35:                                               ; preds = %21
  %36 = tail call i32 @tc_aes_encrypt(i8* noundef nonnull %0, i8* noundef nonnull %0, %struct.tc_aes_key_sched_struct* noundef %4) #27, !dbg !7918
  br label %37, !dbg !7920

37:                                               ; preds = %21, %35
  call void @llvm.dbg.value(metadata i32 %26, metadata !7892, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i8* %24, metadata !7888, metadata !DIExpression()), !dbg !7893
  %38 = icmp eq i32 %26, %18, !dbg !7905
  br i1 %38, label %39, label %21, !dbg !7906, !llvm.loop !7921

39:                                               ; preds = %37, %17
  ret void, !dbg !7923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) unnamed_addr #1 !dbg !7924 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7929, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i32 %1, metadata !7930, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i8* %2, metadata !7931, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i32 %3, metadata !7932, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i8* %4, metadata !7933, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7934, metadata !DIExpression()), !dbg !7939
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7940
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7940
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7935, metadata !DIExpression()), !dbg !7941
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7942
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7942
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7936, metadata !DIExpression()), !dbg !7943
  %11 = icmp eq i8* %0, null, !dbg !7944
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7946
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7946
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7946
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7946
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7946
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7946
  br i1 %23, label %63, label %24, !dbg !7946

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !7947
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7948
  %27 = load i8, i8* %26, align 1, !dbg !7948
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7949
  %29 = load i8, i8* %28, align 1, !dbg !7949
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i8 %29), metadata !7937, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7939
  call void @llvm.dbg.value(metadata i32 0, metadata !7938, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i8* %0, metadata !7929, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i8* %2, metadata !7931, metadata !DIExpression()), !dbg !7939
  %30 = zext i8 %27 to i16, !dbg !7948
  call void @llvm.dbg.value(metadata !DIArgList(i16 %30, i8 %29), metadata !7937, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7939
  %31 = shl nuw i16 %30, 8, !dbg !7950
  call void @llvm.dbg.value(metadata !DIArgList(i16 %31, i8 %29), metadata !7937, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7939
  %32 = zext i8 %29 to i16, !dbg !7951
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i16 %32), metadata !7937, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7939
  %33 = or i16 %31, %32, !dbg !7952
  call void @llvm.dbg.value(metadata i16 %33, metadata !7937, metadata !DIExpression()), !dbg !7939
  br label %34, !dbg !7953

34:                                               ; preds = %24, %48
  %35 = phi i32 [ %56, %48 ], [ 0, %24 ]
  %36 = phi i16 [ %49, %48 ], [ %33, %24 ]
  %37 = phi i8* [ %55, %48 ], [ %0, %24 ]
  %38 = phi i8* [ %52, %48 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !7938, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i16 %36, metadata !7937, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i8* %37, metadata !7929, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i8* %38, metadata !7931, metadata !DIExpression()), !dbg !7939
  %39 = and i32 %35, 15, !dbg !7955
  %40 = icmp eq i32 %39, 0, !dbg !7959
  br i1 %40, label %41, label %48, !dbg !7960

41:                                               ; preds = %34
  %42 = add i16 %36, 1, !dbg !7961
  call void @llvm.dbg.value(metadata i16 %42, metadata !7937, metadata !DIExpression()), !dbg !7939
  %43 = lshr i16 %42, 8, !dbg !7963
  %44 = trunc i16 %43 to i8, !dbg !7964
  store i8 %44, i8* %26, align 1, !dbg !7965
  %45 = trunc i16 %42 to i8, !dbg !7966
  store i8 %45, i8* %28, align 1, !dbg !7967
  %46 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7968
  %47 = icmp eq i32 %46, 0, !dbg !7968
  br i1 %47, label %63, label %48, !dbg !7970

48:                                               ; preds = %41, %34
  %49 = phi i16 [ %42, %41 ], [ %36, %34 ], !dbg !7939
  call void @llvm.dbg.value(metadata i16 %49, metadata !7937, metadata !DIExpression()), !dbg !7939
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %39, !dbg !7971
  %51 = load i8, i8* %50, align 1, !dbg !7971
  %52 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !7972
  call void @llvm.dbg.value(metadata i8* %52, metadata !7931, metadata !DIExpression()), !dbg !7939
  %53 = load i8, i8* %38, align 1, !dbg !7973
  %54 = xor i8 %53, %51, !dbg !7974
  %55 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !7975
  call void @llvm.dbg.value(metadata i8* %55, metadata !7929, metadata !DIExpression()), !dbg !7939
  store i8 %54, i8* %37, align 1, !dbg !7976
  %56 = add nuw i32 %35, 1, !dbg !7977
  call void @llvm.dbg.value(metadata i32 %56, metadata !7938, metadata !DIExpression()), !dbg !7939
  %57 = icmp eq i32 %56, %3, !dbg !7978
  br i1 %57, label %58, label %34, !dbg !7953, !llvm.loop !7979

58:                                               ; preds = %48
  %59 = load i8, i8* %26, align 1, !dbg !7981
  %60 = load i8, i8* %28, align 1, !dbg !7982
  %61 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !7983
  store i8 %59, i8* %61, align 1, !dbg !7984
  %62 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !7985
  store i8 %60, i8* %62, align 1, !dbg !7986
  br label %63, !dbg !7987

63:                                               ; preds = %41, %6, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7988
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7988
  ret void, !dbg !7988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_decryption_verification(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !7989 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7991, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i32 %1, metadata !7992, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i8* %2, metadata !7993, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i32 %3, metadata !7994, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i8* %4, metadata !7995, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i32 %5, metadata !7996, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !7997, metadata !DIExpression()), !dbg !8001
  %10 = icmp eq i8* %0, null, !dbg !8002
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !8004
  br i1 %12, label %106, label %13, !dbg !8004

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !8005
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !8006
  br i1 %16, label %106, label %17, !dbg !8006

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !8007
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !8008
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !8008
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !8008
  br i1 %24, label %106, label %25, !dbg !8008

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !8009
  %27 = load i32, i32* %26, align 4, !dbg !8009
  %28 = sub i32 %5, %27, !dbg !8010
  %29 = icmp ugt i32 %28, %1, !dbg !8011
  br i1 %29, label %106, label %30, !dbg !8012

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !8013
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8013
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7998, metadata !DIExpression()), !dbg !8014
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !8015
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8015
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !7999, metadata !DIExpression()), !dbg !8016
  store i8 1, i8* %31, align 1, !dbg !8017
  call void @llvm.dbg.value(metadata i32 1, metadata !8000, metadata !DIExpression()), !dbg !8001
  %33 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %34 = load i8*, i8** %33, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8000, metadata !DIExpression()), !dbg !8001
  br label %35, !dbg !8018

35:                                               ; preds = %30, %35
  %36 = phi i32 [ 1, %30 ], [ %41, %35 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !8000, metadata !DIExpression()), !dbg !8001
  %37 = add nsw i32 %36, -1, !dbg !8020
  %38 = getelementptr inbounds i8, i8* %34, i32 %37, !dbg !8023
  %39 = load i8, i8* %38, align 1, !dbg !8023
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %36, !dbg !8024
  store i8 %39, i8* %40, align 1, !dbg !8025
  %41 = add nuw nsw i32 %36, 1, !dbg !8026
  call void @llvm.dbg.value(metadata i32 %41, metadata !8000, metadata !DIExpression()), !dbg !8001
  %42 = icmp eq i32 %41, 14, !dbg !8027
  br i1 %42, label %43, label %35, !dbg !8018, !llvm.loop !8028

43:                                               ; preds = %35
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !8030
  store i8 0, i8* %44, align 1, !dbg !8031
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !8032
  store i8 0, i8* %45, align 1, !dbg !8033
  %46 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !8034
  %47 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8034
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %28, i8* noundef %4, i32 noundef %28, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %47) #26, !dbg !8035
  store i8 0, i8* %44, align 1, !dbg !8036
  store i8 0, i8* %45, align 1, !dbg !8037
  %48 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8038
  %49 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %48) #27, !dbg !8039
  call void @llvm.dbg.value(metadata i32 0, metadata !8000, metadata !DIExpression()), !dbg !8001
  %50 = load i32, i32* %26, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !8000, metadata !DIExpression()), !dbg !8001
  %51 = icmp eq i32 %50, 0, !dbg !8040
  br i1 %51, label %66, label %52, !dbg !8043

52:                                               ; preds = %43
  %53 = getelementptr inbounds i8, i8* %4, i32 %5
  %54 = sub i32 0, %50
  %55 = getelementptr inbounds i8, i8* %53, i32 %54
  br label %56, !dbg !8043

56:                                               ; preds = %52, %56
  %57 = phi i32 [ 0, %52 ], [ %64, %56 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !8000, metadata !DIExpression()), !dbg !8001
  %58 = getelementptr inbounds i8, i8* %55, i32 %57, !dbg !8044
  %59 = load i8, i8* %58, align 1, !dbg !8046
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %57, !dbg !8047
  %61 = load i8, i8* %60, align 1, !dbg !8047
  %62 = xor i8 %61, %59, !dbg !8048
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %57, !dbg !8049
  store i8 %62, i8* %63, align 1, !dbg !8050
  %64 = add nuw i32 %57, 1, !dbg !8051
  call void @llvm.dbg.value(metadata i32 %64, metadata !8000, metadata !DIExpression()), !dbg !8001
  %65 = icmp eq i32 %64, %50, !dbg !8040
  br i1 %65, label %66, label %56, !dbg !8043, !llvm.loop !8052

66:                                               ; preds = %56, %43
  %67 = select i1 %18, i32 64, i32 0, !dbg !8054
  %68 = shl i32 %50, 2, !dbg !8055
  %69 = add i32 %68, 248, !dbg !8055
  %70 = and i32 %69, 248, !dbg !8055
  %71 = or i32 %70, %67, !dbg !8056
  %72 = trunc i32 %71 to i8, !dbg !8057
  %73 = or i8 %72, 1, !dbg !8057
  store i8 %73, i8* %31, align 1, !dbg !8058
  call void @llvm.dbg.value(metadata i32 1, metadata !8000, metadata !DIExpression()), !dbg !8001
  %74 = load i8*, i8** %33, align 4
  br label %75, !dbg !8059

75:                                               ; preds = %66, %75
  %76 = phi i32 [ 1, %66 ], [ %81, %75 ]
  call void @llvm.dbg.value(metadata i32 %76, metadata !8000, metadata !DIExpression()), !dbg !8001
  %77 = add nsw i32 %76, -1, !dbg !8061
  %78 = getelementptr inbounds i8, i8* %74, i32 %77, !dbg !8064
  %79 = load i8, i8* %78, align 1, !dbg !8064
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %76, !dbg !8065
  store i8 %79, i8* %80, align 1, !dbg !8066
  %81 = add nuw nsw i32 %76, 1, !dbg !8067
  call void @llvm.dbg.value(metadata i32 %81, metadata !8000, metadata !DIExpression()), !dbg !8001
  %82 = icmp eq i32 %81, 14, !dbg !8068
  br i1 %82, label %83, label %75, !dbg !8059, !llvm.loop !8069

83:                                               ; preds = %75
  %84 = sub i32 %5, %50, !dbg !8071
  %85 = lshr i32 %84, 8, !dbg !8072
  %86 = trunc i32 %85 to i8, !dbg !8073
  store i8 %86, i8* %45, align 1, !dbg !8074
  %87 = trunc i32 %84 to i8, !dbg !8075
  store i8 %87, i8* %44, align 1, !dbg !8076
  %88 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8077
  %89 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %88) #27, !dbg !8078
  br i1 %18, label %90, label %92, !dbg !8079

90:                                               ; preds = %83
  %91 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8080
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %91) #26, !dbg !8083
  br label %92, !dbg !8084

92:                                               ; preds = %90, %83
  br i1 %14, label %93, label %97, !dbg !8085

93:                                               ; preds = %92
  %94 = load i32, i32* %26, align 4, !dbg !8086
  %95 = sub i32 %5, %94, !dbg !8089
  %96 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8090
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %0, i32 noundef %95, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %96) #26, !dbg !8091
  br label %97, !dbg !8092

97:                                               ; preds = %93, %92
  %98 = load i32, i32* %26, align 4, !dbg !8093
  %99 = call i32 @_compare(i8* noundef nonnull %31, i8* noundef nonnull %32, i32 noundef %98) #27, !dbg !8095
  %100 = icmp eq i32 %99, 0, !dbg !8096
  br i1 %100, label %104, label %101, !dbg !8097

101:                                              ; preds = %97
  %102 = load i32, i32* %26, align 4, !dbg !8098
  %103 = sub i32 %5, %102, !dbg !8100
  call void @_set(i8* noundef %0, i8 noundef zeroext 0, i32 noundef %103) #27, !dbg !8101
  br label %104, !dbg !8102

104:                                              ; preds = %97, %101
  %105 = phi i32 [ 0, %101 ], [ 1, %97 ], !dbg !8103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8104
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8104
  br label %106

106:                                              ; preds = %7, %25, %13, %17, %104
  %107 = phi i32 [ %105, %104 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !8001
  ret i32 %107, !dbg !8104
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !8105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8154, metadata !DIExpression()), !dbg !8156
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !8155, metadata !DIExpression()), !dbg !8156
  %3 = icmp eq %struct.__esf* %1, null, !dbg !8157
  br i1 %3, label %5, label %4, !dbg !8159

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !8160
  br label %5, !dbg !8162

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !8163
  ret void, !dbg !8164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8165 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8169, metadata !DIExpression()), !dbg !8170
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8171
  %3 = load i32, i32* %2, align 4, !dbg !8171
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !8171
  %5 = load i32, i32* %4, align 4, !dbg !8171
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !8171
  %7 = load i32, i32* %6, align 4, !dbg !8171
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.74, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !8171
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !8176
  %9 = load i32, i32* %8, align 4, !dbg !8176
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !8176
  %11 = load i32, i32* %10, align 4, !dbg !8176
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !8176
  %13 = load i32, i32* %12, align 4, !dbg !8176
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.75, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !8176
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !8181
  %15 = load i32, i32* %14, align 4, !dbg !8181
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.76, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !8181
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8186
  %17 = load i32, i32* %16, align 4, !dbg !8186
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.77, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8186
  ret void, !dbg !8191
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !8192 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8209, metadata !DIExpression()), !dbg !8212
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !8210, metadata !DIExpression()), !dbg !8212
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8213
  %4 = load i32, i32* %3, align 4, !dbg !8213
  call void @llvm.dbg.value(metadata i32 %4, metadata !8211, metadata !DIExpression()), !dbg !8212
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !8214
  ret void, !dbg !8215
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !8216 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8220, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata i8* %0, metadata !8221, metadata !DIExpression()), !dbg !8223
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !8224
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !8224
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !8222, metadata !DIExpression()), !dbg !8225
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !8225
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8226
  %5 = bitcast i8* %4 to i32*, !dbg !8226
  %6 = load i32, i32* %5, align 4, !dbg !8226
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !8227
  store i32 %6, i32* %7, align 4, !dbg !8228
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !8229
  unreachable, !dbg !8230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8234, metadata !DIExpression()), !dbg !8235
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !8236
  ret void, !dbg !8237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8242, metadata !DIExpression()), !dbg !8243
  %2 = icmp sgt i32 %0, -1, !dbg !8244
  br i1 %2, label %3, label %8, !dbg !8246

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8247, !srcloc !8249
  %4 = and i32 %0, 31, !dbg !8250
  %5 = shl nuw i32 1, %4, !dbg !8251
  %6 = lshr i32 %0, 5, !dbg !8252
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !8253
  store volatile i32 %5, i32* %7, align 4, !dbg !8254
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8255, !srcloc !8256
  br label %8, !dbg !8257

8:                                                ; preds = %3, %1
  ret void, !dbg !8258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !8259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8261, metadata !DIExpression()), !dbg !8262
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !8263
  ret void, !dbg !8264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8267, metadata !DIExpression()), !dbg !8268
  %2 = icmp sgt i32 %0, -1, !dbg !8269
  br i1 %2, label %3, label %8, !dbg !8271

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !8272
  %5 = shl nuw i32 1, %4, !dbg !8274
  %6 = lshr i32 %0, 5, !dbg !8275
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !8276
  store volatile i32 %5, i32* %7, align 4, !dbg !8277
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8278, !srcloc !8282
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8283, !srcloc !8286
  br label %8, !dbg !8287

8:                                                ; preds = %3, %1
  ret void, !dbg !8288
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #18 !dbg !8289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8293, metadata !DIExpression()), !dbg !8294
  %2 = lshr i32 %0, 5, !dbg !8295
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !8296
  %4 = load volatile i32, i32* %3, align 4, !dbg !8296
  %5 = and i32 %0, 31, !dbg !8297
  %6 = shl nuw i32 1, %5, !dbg !8297
  %7 = and i32 %4, %6, !dbg !8298
  ret i32 %7, !dbg !8299
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !8300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8304, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata i32 %1, metadata !8305, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.value(metadata i32 %2, metadata !8306, metadata !DIExpression()), !dbg !8307
  %4 = add i32 %1, 1, !dbg !8308
  call void @llvm.dbg.value(metadata i32 %4, metadata !8305, metadata !DIExpression()), !dbg !8307
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !8311
  ret void, !dbg !8312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !8313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8317, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.value(metadata i32 %1, metadata !8318, metadata !DIExpression()), !dbg !8319
  %3 = trunc i32 %1 to i8, !dbg !8320
  %4 = shl i8 %3, 4, !dbg !8320
  %5 = and i32 %0, 15, !dbg !8322
  %6 = add nsw i32 %5, -4, !dbg !8322
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !8322
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8322
  %9 = icmp slt i32 %0, 0, !dbg !8322
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !8322
  store volatile i8 %4, i8* %10, align 1, !dbg !8320
  ret void, !dbg !8323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !8324 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8326, metadata !DIExpression()), !dbg !8327
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !8328
  ret void, !dbg !8329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !8330 {
  tail call void @z_SysNmiOnReset() #27, !dbg !8332
  tail call void @z_arm_int_exit() #27, !dbg !8333
  ret void, !dbg !8334
}

; Function Attrs: optsize
declare !dbg !8335 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !8336 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !8338 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !8340
  tail call void @z_bss_zero() #27, !dbg !8341
  tail call void @z_data_copy() #27, !dbg !8342
  tail call void @z_arm_interrupt_init() #27, !dbg !8343
  tail call void @z_cstart() #29, !dbg !8344
  unreachable, !dbg !8344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !8345 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8346
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8347, !srcloc !8350
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8351, !srcloc !8354
  ret void, !dbg !8355
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !8356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8359, metadata !DIExpression()), !dbg !8360
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8361
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !8362
  store i32 %0, i32* %3, align 4, !dbg !8363
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8364
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !8365
  store i32 %4, i32* %5, align 4, !dbg !8366
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8367
  %7 = or i32 %6, 268435456, !dbg !8367
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8367
  call void @llvm.dbg.value(metadata i32 0, metadata !8368, metadata !DIExpression()) #25, !dbg !8371
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8373, !srcloc !8374
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8375
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !8376
  %10 = load i32, i32* %9, align 4, !dbg !8376
  ret i32 %10, !dbg !8377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !8378 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8488, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8489, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata i8* %2, metadata !8490, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8491, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata i8* %4, metadata !8492, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata i8* %5, metadata !8493, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata i8* %6, metadata !8494, metadata !DIExpression()), !dbg !8496
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8497
  call void @llvm.dbg.value(metadata i8* %8, metadata !8495, metadata !DIExpression()), !dbg !8496
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8498
  %10 = bitcast i8* %9 to i32*, !dbg !8498
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8499
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8500
  %12 = bitcast i8* %8 to i32*, !dbg !8501
  store i32 %11, i32* %12, align 4, !dbg !8502
  %13 = ptrtoint i8* %4 to i32, !dbg !8503
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8504
  %15 = bitcast i8* %14 to i32*, !dbg !8504
  store i32 %13, i32* %15, align 4, !dbg !8505
  %16 = ptrtoint i8* %5 to i32, !dbg !8506
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8507
  %18 = bitcast i8* %17 to i32*, !dbg !8507
  store i32 %16, i32* %18, align 4, !dbg !8508
  %19 = ptrtoint i8* %6 to i32, !dbg !8509
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8510
  %21 = bitcast i8* %20 to i32*, !dbg !8510
  store i32 %19, i32* %21, align 4, !dbg !8511
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8512
  %23 = bitcast i8* %22 to i32*, !dbg !8512
  store i32 16777216, i32* %23, align 4, !dbg !8513
  %24 = ptrtoint i8* %8 to i32, !dbg !8514
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8515
  store i32 %24, i32* %25, align 8, !dbg !8516
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8517
  store i32 0, i32* %26, align 4, !dbg !8518
  ret void, !dbg !8519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !8520 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8525, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.value(metadata i32 %1, metadata !8526, metadata !DIExpression()), !dbg !8531
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8532
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8527, metadata !DIExpression()), !dbg !8531
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8533
  br i1 %4, label %19, label %5, !dbg !8535

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8530, metadata !DIExpression()), !dbg !8531
  %6 = icmp eq i32 %0, -22, !dbg !8536
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8536
  %8 = load i32, i32* %7, align 4, !dbg !8536
  br i1 %6, label %16, label %9, !dbg !8538

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8536
  %11 = icmp ule i32 %10, %0, !dbg !8536
  %12 = icmp ugt i32 %8, %0, !dbg !8536
  %13 = and i1 %12, %11, !dbg !8536
  %14 = icmp ugt i32 %8, %1, !dbg !8536
  %15 = and i1 %14, %13, !dbg !8536
  br i1 %15, label %18, label %19, !dbg !8536

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8536
  br i1 %17, label %18, label %19, !dbg !8538

18:                                               ; preds = %9, %16
  br label %19, !dbg !8539

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8531
  ret i32 %20, !dbg !8541
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !8542 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8546, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata i8* %1, metadata !8547, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8548, metadata !DIExpression()), !dbg !8549
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8550
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8551
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !8552, !srcloc !8553
  unreachable, !dbg !8554
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8555 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8573, metadata !DIExpression()), !dbg !8583
  call void @llvm.dbg.value(metadata i32 %1, metadata !8574, metadata !DIExpression()), !dbg !8583
  call void @llvm.dbg.value(metadata i32 %2, metadata !8575, metadata !DIExpression()), !dbg !8583
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8576, metadata !DIExpression()), !dbg !8583
  call void @llvm.dbg.value(metadata i32 0, metadata !8577, metadata !DIExpression()), !dbg !8583
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8584
  %9 = and i32 %8, 511, !dbg !8585
  call void @llvm.dbg.value(metadata i32 %9, metadata !8578, metadata !DIExpression()), !dbg !8583
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8586
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8586
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !8587
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8587
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8582, metadata !DIExpression()), !dbg !8588
  call void @llvm.dbg.value(metadata i32 0, metadata !8589, metadata !DIExpression()) #25, !dbg !8592
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8594, !srcloc !8595
  call void @llvm.dbg.value(metadata i8* %6, metadata !8580, metadata !DIExpression(DW_OP_deref)), !dbg !8583
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !8596
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !8581, metadata !DIExpression()), !dbg !8583
  call void @llvm.dbg.value(metadata i8* %5, metadata !8579, metadata !DIExpression(DW_OP_deref)), !dbg !8583
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !8597
  call void @llvm.dbg.value(metadata i32 %12, metadata !8577, metadata !DIExpression()), !dbg !8583
  %13 = load i8, i8* %5, align 1, !dbg !8598, !range !8600
  call void @llvm.dbg.value(metadata i8 %13, metadata !8579, metadata !DIExpression()), !dbg !8583
  %14 = icmp eq i8 %13, 0, !dbg !8598
  br i1 %14, label %15, label %32, !dbg !8601

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !8602
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !8603
  %18 = load i8, i8* %6, align 1, !dbg !8604, !range !8600
  call void @llvm.dbg.value(metadata i8 %18, metadata !8580, metadata !DIExpression()), !dbg !8583
  %19 = icmp eq i8 %18, 0, !dbg !8604
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8606
  %21 = load i32, i32* %20, align 4, !dbg !8606
  br i1 %19, label %27, label %22, !dbg !8607

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !8608
  %24 = icmp eq i32 %23, 0, !dbg !8611
  br i1 %24, label %25, label %31, !dbg !8612

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !8613
  br label %29, !dbg !8615

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !8616
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !8606
  br label %31, !dbg !8618

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !8618
  br label %32, !dbg !8619

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8619
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8619
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8619
  ret void, !dbg !8619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8625, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i32 %1, metadata !8626, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i32 %2, metadata !8627, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i8* %3, metadata !8628, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata i8 0, metadata !8629, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8630, metadata !DIExpression()), !dbg !8631
  store i8 0, i8* %3, align 1, !dbg !8632
  %5 = icmp ugt i32 %2, -16777217, !dbg !8633
  br i1 %5, label %6, label %17, !dbg !8635

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8636
  %8 = icmp eq i32 %7, 8, !dbg !8636
  br i1 %8, label %9, label %10, !dbg !8636

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.108, i32 0, i32 0), i32 noundef 69) #27, !dbg !8638
  br label %17, !dbg !8644

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8645
  %12 = icmp eq i32 %11, 0, !dbg !8645
  br i1 %12, label %13, label %14, !dbg !8646

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8630, metadata !DIExpression()), !dbg !8631
  store i8 1, i8* %3, align 1, !dbg !8649
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8631
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8630, metadata !DIExpression()), !dbg !8631
  br label %17, !dbg !8652

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8631
  ret %struct.__esf* %18, !dbg !8653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8654 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8658, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i32 %1, metadata !8659, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i8* %2, metadata !8660, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i32 0, metadata !8661, metadata !DIExpression()), !dbg !8662
  store i8 0, i8* %2, align 1, !dbg !8663
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8664

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !8665
  call void @llvm.dbg.value(metadata i32 %5, metadata !8661, metadata !DIExpression()), !dbg !8662
  br label %12, !dbg !8667

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8668
  call void @llvm.dbg.value(metadata i32 %7, metadata !8661, metadata !DIExpression()), !dbg !8662
  br label %12, !dbg !8669

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8670
  call void @llvm.dbg.value(metadata i32 0, metadata !8661, metadata !DIExpression()), !dbg !8662
  br label %12, !dbg !8671

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !8672
  call void @llvm.dbg.value(metadata i32 0, metadata !8661, metadata !DIExpression()), !dbg !8662
  br label %12, !dbg !8673

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !8674
  br label %12, !dbg !8675

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !8676
  br label %12, !dbg !8677

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8662
  call void @llvm.dbg.value(metadata i32 %13, metadata !8661, metadata !DIExpression()), !dbg !8662
  ret i32 %13, !dbg !8678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8679 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8683, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i8* %1, metadata !8684, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i32 0, metadata !8685, metadata !DIExpression()), !dbg !8686
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.103, i32 0, i32 0), i32 noundef 69) #27, !dbg !8687
  store i8 0, i8* %1, align 1, !dbg !8692
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8693
  %4 = and i32 %3, 2, !dbg !8695
  %5 = icmp eq i32 %4, 0, !dbg !8696
  br i1 %5, label %7, label %6, !dbg !8697

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 69) #27, !dbg !8698
  br label %36, !dbg !8704

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8705
  %9 = icmp sgt i32 %8, -1, !dbg !8707
  br i1 %9, label %11, label %10, !dbg !8708

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.105, i32 0, i32 0), i32 noundef 69) #27, !dbg !8709
  br label %36, !dbg !8715

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8716
  %13 = and i32 %12, 1073741824, !dbg !8718
  %14 = icmp eq i32 %13, 0, !dbg !8719
  br i1 %14, label %36, label %15, !dbg !8720

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.106, i32 0, i32 0), i32 noundef 69) #27, !dbg !8721
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !8727
  br i1 %16, label %17, label %21, !dbg !8729

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8730
  %19 = load i32, i32* %18, align 4, !dbg !8730
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.107, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8730
  %20 = load i32, i32* %18, align 4, !dbg !8736
  call void @llvm.dbg.value(metadata i32 %20, metadata !8685, metadata !DIExpression()), !dbg !8686
  br label %36, !dbg !8737

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8738
  %23 = and i32 %22, 255, !dbg !8740
  %24 = icmp eq i32 %23, 0, !dbg !8741
  br i1 %24, label %27, label %25, !dbg !8742

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8743
  call void @llvm.dbg.value(metadata i32 %26, metadata !8685, metadata !DIExpression()), !dbg !8686
  br label %36, !dbg !8745

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8746
  %29 = and i32 %28, 65280, !dbg !8748
  %30 = icmp eq i32 %29, 0, !dbg !8749
  br i1 %30, label %32, label %31, !dbg !8750

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8751
  call void @llvm.dbg.value(metadata i32 0, metadata !8685, metadata !DIExpression()), !dbg !8686
  br label %36, !dbg !8753

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8754
  %34 = icmp ult i32 %33, 65536, !dbg !8756
  br i1 %34, label %36, label %35, !dbg !8757

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !8758
  call void @llvm.dbg.value(metadata i32 0, metadata !8685, metadata !DIExpression()), !dbg !8686
  br label %36, !dbg !8760

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !8686
  call void @llvm.dbg.value(metadata i32 %37, metadata !8685, metadata !DIExpression()), !dbg !8686
  ret i32 %37, !dbg !8761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8762 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8764, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i32 %1, metadata !8765, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i8* %2, metadata !8766, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i32 0, metadata !8767, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i32 -22, metadata !8768, metadata !DIExpression()), !dbg !8777
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.98, i32 0, i32 0), i32 noundef 69) #27, !dbg !8778
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8783
  %5 = and i32 %4, 16, !dbg !8785
  %6 = icmp eq i32 %5, 0, !dbg !8786
  br i1 %6, label %8, label %7, !dbg !8787

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.99, i32 0, i32 0), i32 noundef 69) #27, !dbg !8788
  br label %8, !dbg !8794

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8795
  %10 = and i32 %9, 8, !dbg !8797
  %11 = icmp eq i32 %10, 0, !dbg !8798
  br i1 %11, label %13, label %12, !dbg !8799

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8800
  br label %13, !dbg !8806

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8807
  %15 = and i32 %14, 2, !dbg !8808
  %16 = icmp eq i32 %15, 0, !dbg !8809
  br i1 %16, label %27, label %17, !dbg !8810

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.100, i32 0, i32 0), i32 noundef 69) #27, !dbg !8811
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8816
  call void @llvm.dbg.value(metadata i32 %18, metadata !8769, metadata !DIExpression()), !dbg !8817
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8818
  %20 = and i32 %19, 128, !dbg !8820
  %21 = icmp eq i32 %20, 0, !dbg !8821
  br i1 %21, label %27, label %22, !dbg !8822

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8768, metadata !DIExpression()), !dbg !8777
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.101, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !8823
  %23 = icmp eq i32 %1, 0, !dbg !8829
  br i1 %23, label %27, label %24, !dbg !8831

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8832
  %26 = and i32 %25, -129, !dbg !8832
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8832
  br label %27, !dbg !8834

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8777
  call void @llvm.dbg.value(metadata i32 %28, metadata !8768, metadata !DIExpression()), !dbg !8777
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8835
  %30 = and i32 %29, 1, !dbg !8837
  %31 = icmp eq i32 %30, 0, !dbg !8838
  br i1 %31, label %33, label %32, !dbg !8839

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.102, i32 0, i32 0), i32 noundef 69) #27, !dbg !8840
  br label %33, !dbg !8846

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8847
  %35 = and i32 %34, 16, !dbg !8848
  %36 = icmp eq i32 %35, 0, !dbg !8848
  br i1 %36, label %37, label %41, !dbg !8849

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8850
  %39 = and i32 %38, 2, !dbg !8851
  %40 = icmp eq i32 %39, 0, !dbg !8851
  br i1 %40, label %50, label %41, !dbg !8852

41:                                               ; preds = %37, %33
  %42 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8853
  %43 = and i32 %42, 2048, !dbg !8854
  %44 = icmp eq i32 %43, 0, !dbg !8854
  br i1 %44, label %50, label %45, !dbg !8855

45:                                               ; preds = %41
  %46 = ptrtoint %struct.__esf* %0 to i32, !dbg !8856
  %47 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %46) #27, !dbg !8857
  call void @llvm.dbg.value(metadata i32 %47, metadata !8772, metadata !DIExpression()), !dbg !8858
  %48 = icmp eq i32 %47, 0, !dbg !8859
  br i1 %48, label %50, label %49, !dbg !8861

49:                                               ; preds = %45
  call void @llvm.dbg.value(metadata i32 %47, metadata !8862, metadata !DIExpression()) #25, !dbg !8865
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %47) #25, !dbg !8868, !srcloc !8869
  call void @llvm.dbg.value(metadata i32 2, metadata !8767, metadata !DIExpression()), !dbg !8777
  br label %50, !dbg !8870

50:                                               ; preds = %49, %45, %41, %37
  %51 = phi i32 [ 0, %41 ], [ 0, %37 ], [ 2, %49 ], [ 0, %45 ], !dbg !8777
  call void @llvm.dbg.value(metadata i32 %51, metadata !8767, metadata !DIExpression()), !dbg !8777
  %52 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8871
  %53 = or i32 %52, 255, !dbg !8871
  store volatile i32 %53, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8871
  store i8 0, i8* %2, align 1, !dbg !8872
  ret i32 %51, !dbg !8873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8874 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8878, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.value(metadata i32 %0, metadata !8879, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.value(metadata i8* %1, metadata !8880, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.value(metadata i32 0, metadata !8881, metadata !DIExpression()), !dbg !8885
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !8886
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8891
  %4 = and i32 %3, 4096, !dbg !8893
  %5 = icmp eq i32 %4, 0, !dbg !8893
  br i1 %5, label %7, label %6, !dbg !8894

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !8895
  br label %7, !dbg !8901

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8902
  %9 = and i32 %8, 2048, !dbg !8904
  %10 = icmp eq i32 %9, 0, !dbg !8904
  br i1 %10, label %12, label %11, !dbg !8905

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8906
  br label %12, !dbg !8912

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8913
  %14 = and i32 %13, 512, !dbg !8914
  %15 = icmp eq i32 %14, 0, !dbg !8914
  br i1 %15, label %26, label %16, !dbg !8915

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !8916
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8921
  call void @llvm.dbg.value(metadata i32 %17, metadata !8882, metadata !DIExpression()), !dbg !8922
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8923
  %19 = and i32 %18, 32768, !dbg !8925
  %20 = icmp eq i32 %19, 0, !dbg !8926
  br i1 %20, label %26, label %21, !dbg !8927

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15.95, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8928
  %22 = icmp eq i32 %0, 0, !dbg !8934
  br i1 %22, label %26, label %23, !dbg !8936

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8937
  %25 = and i32 %24, -32769, !dbg !8937
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8937
  br label %26, !dbg !8939

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8940
  %28 = and i32 %27, 1024, !dbg !8942
  %29 = icmp eq i32 %28, 0, !dbg !8942
  br i1 %29, label %31, label %30, !dbg !8943

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !8944
  br label %31, !dbg !8950

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8951
  %33 = and i32 %32, 256, !dbg !8953
  %34 = icmp eq i32 %33, 0, !dbg !8954
  br i1 %34, label %36, label %35, !dbg !8955

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17.97, i32 0, i32 0), i32 noundef 69) #27, !dbg !8956
  br label %36, !dbg !8962

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8963
  %38 = or i32 %37, 65280, !dbg !8963
  store volatile i32 %38, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8963
  store i8 0, i8* %1, align 1, !dbg !8964
  ret void, !dbg !8965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8966 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8972, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8973, metadata !DIExpression()), !dbg !8974
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.84, i32 0, i32 0), i32 noundef 69) #27, !dbg !8975
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8980
  %2 = and i32 %1, 33554432, !dbg !8982
  %3 = icmp eq i32 %2, 0, !dbg !8983
  br i1 %3, label %5, label %4, !dbg !8984

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19.85, i32 0, i32 0), i32 noundef 69) #27, !dbg !8985
  br label %5, !dbg !8991

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8992
  %7 = and i32 %6, 16777216, !dbg !8994
  %8 = icmp eq i32 %7, 0, !dbg !8995
  br i1 %8, label %10, label %9, !dbg !8996

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20.86, i32 0, i32 0), i32 noundef 69) #27, !dbg !8997
  br label %10, !dbg !9003

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9004
  %12 = and i32 %11, 524288, !dbg !9006
  %13 = icmp eq i32 %12, 0, !dbg !9007
  br i1 %13, label %15, label %14, !dbg !9008

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21.87, i32 0, i32 0), i32 noundef 69) #27, !dbg !9009
  br label %15, !dbg !9015

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9016
  %17 = and i32 %16, 262144, !dbg !9018
  %18 = icmp eq i32 %17, 0, !dbg !9019
  br i1 %18, label %20, label %19, !dbg !9020

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.88, i32 0, i32 0), i32 noundef 69) #27, !dbg !9021
  br label %20, !dbg !9027

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9028
  %22 = and i32 %21, 131072, !dbg !9030
  %23 = icmp eq i32 %22, 0, !dbg !9031
  br i1 %23, label %25, label %24, !dbg !9032

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.23.89, i32 0, i32 0), i32 noundef 69) #27, !dbg !9033
  br label %25, !dbg !9039

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9040
  %27 = and i32 %26, 65536, !dbg !9042
  %28 = icmp eq i32 %27, 0, !dbg !9043
  br i1 %28, label %30, label %29, !dbg !9044

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.24.90, i32 0, i32 0), i32 noundef 69) #27, !dbg !9045
  br label %30, !dbg !9051

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9052
  %32 = or i32 %31, -65536, !dbg !9052
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9052
  ret void, !dbg !9053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !9054 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9058, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.value(metadata i8* %0, metadata !9059, metadata !DIExpression()), !dbg !9060
  store i8 0, i8* %0, align 1, !dbg !9061
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25.83, i32 0, i32 0), i32 noundef 69) #27, !dbg !9062
  ret void, !dbg !9067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !9068 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9072, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i32 %0, metadata !9073, metadata !DIExpression()), !dbg !9074
  %2 = icmp slt i32 %0, 16, !dbg !9075
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27.80, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.28.81, i32 0, i32 0), !dbg !9075
  %4 = add nsw i32 %0, -16, !dbg !9075
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26.82, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !9075
  ret void, !dbg !9080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9081 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9085, metadata !DIExpression()), !dbg !9088
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !9089
  %3 = load i32, i32* %2, align 4, !dbg !9089
  %4 = inttoptr i32 %3 to i16*, !dbg !9090
  call void @llvm.dbg.value(metadata i16* %4, metadata !9086, metadata !DIExpression()), !dbg !9088
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9091
  %6 = or i32 %5, 256, !dbg !9091
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9091
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9092, !srcloc !9095
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9096, !srcloc !9099
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !9100
  %8 = load i16, i16* %7, align 2, !dbg !9101
  call void @llvm.dbg.value(metadata i16 %8, metadata !9087, metadata !DIExpression()), !dbg !9088
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9102
  %10 = and i32 %9, -257, !dbg !9102
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9102
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9103, !srcloc !9095
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9105, !srcloc !9099
  %11 = icmp eq i16 %8, -8446, !dbg !9107
  ret i1 %11, !dbg !9109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !9110 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9111
  %2 = or i32 %1, 16, !dbg !9111
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9111
  ret void, !dbg !9112
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !9113 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9116, metadata !DIExpression()), !dbg !9117
  br label %1, !dbg !9118

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !9116, metadata !DIExpression()), !dbg !9117
  tail call fastcc void @__NVIC_SetPriority.111(i32 noundef %2) #26, !dbg !9120
  %3 = add nuw nsw i32 %2, 1, !dbg !9123
  call void @llvm.dbg.value(metadata i32 %3, metadata !9116, metadata !DIExpression()), !dbg !9117
  %4 = icmp eq i32 %3, 45, !dbg !9124
  br i1 %4, label %5, label %1, !dbg !9118, !llvm.loop !9125

5:                                                ; preds = %1
  ret void, !dbg !9127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.111(i32 noundef %0) unnamed_addr #16 !dbg !9128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9130, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 1, metadata !9131, metadata !DIExpression()), !dbg !9132
  %2 = and i32 %0, 15, !dbg !9133
  %3 = add nsw i32 %2, -4, !dbg !9133
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !9133
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !9133
  %6 = icmp slt i32 %0, 0, !dbg !9133
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !9133
  store volatile i8 16, i8* %7, align 1, !dbg !9134
  ret void, !dbg !9136
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9137 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9243, metadata !DIExpression()), !dbg !9244
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9245
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !9247
  br i1 %3, label %4, label %12, !dbg !9248

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !9249, !srcloc !9263
  call void @llvm.dbg.value(metadata i32 %5, metadata !9254, metadata !DIExpression()) #25, !dbg !9264
  %6 = icmp eq i32 %5, 0, !dbg !9265
  br i1 %6, label %12, label %7, !dbg !9266

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9267
  %9 = or i32 %8, 268435456, !dbg !9267
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9267
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9269
  %11 = and i32 %10, -32769, !dbg !9269
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9269
  br label %12, !dbg !9270

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !9271
  ret void, !dbg !9272
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !9273 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !9274
  ret void, !dbg !9275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !659, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.value(metadata i8 0, metadata !660, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.value(metadata i32 64, metadata !662, metadata !DIExpression()), !dbg !9276
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9277
  %3 = load i32, i32* %2, align 4, !dbg !9277
  %4 = add i32 %3, -64, !dbg !9279
  call void @llvm.dbg.value(metadata i32 %4, metadata !661, metadata !DIExpression()), !dbg !9276
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !9280
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !9281
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !9282
  call void @llvm.dbg.value(metadata i8 1, metadata !660, metadata !DIExpression()), !dbg !9276
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !9283
  ret void, !dbg !9284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !9285 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9286
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9287, !srcloc !9290
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9291, !srcloc !9294
  ret void, !dbg !9295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !9296 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !9297, !srcloc !9300
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9301
  ret void, !dbg !9302
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9303 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9318, metadata !DIExpression()), !dbg !9322
  call void @llvm.dbg.value(metadata i8 %1, metadata !9319, metadata !DIExpression()), !dbg !9322
  call void @llvm.dbg.value(metadata i32 %2, metadata !9320, metadata !DIExpression()), !dbg !9322
  call void @llvm.dbg.value(metadata i32 %3, metadata !9321, metadata !DIExpression()), !dbg !9322
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9323
  ret void, !dbg !9325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9326 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9331, metadata !DIExpression()), !dbg !9336
  call void @llvm.dbg.value(metadata i8 %1, metadata !9332, metadata !DIExpression()), !dbg !9336
  call void @llvm.dbg.value(metadata i32 undef, metadata !9333, metadata !DIExpression()), !dbg !9336
  call void @llvm.dbg.value(metadata i32 undef, metadata !9334, metadata !DIExpression()), !dbg !9336
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9337
  call void @llvm.dbg.value(metadata i8 %3, metadata !9335, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9336
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !9338
  call void @llvm.dbg.value(metadata i32 %4, metadata !9335, metadata !DIExpression()), !dbg !9336
  %5 = trunc i32 %4 to i8, !dbg !9339
  store i8 %5, i8* @static_regions_num, align 1, !dbg !9340
  ret void, !dbg !9341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !9342 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9346, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i8 %1, metadata !9347, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i8 %2, metadata !9348, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i1 %3, metadata !9349, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9352
  %5 = zext i8 %2 to i32, !dbg !9353
  call void @llvm.dbg.value(metadata i32 %5, metadata !9351, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i32 0, metadata !9350, metadata !DIExpression()), !dbg !9352
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !9351, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i32 0, metadata !9350, metadata !DIExpression()), !dbg !9352
  %7 = icmp eq i8 %1, 0, !dbg !9354
  br i1 %7, label %30, label %8, !dbg !9357

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9351, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i32 %10, metadata !9350, metadata !DIExpression()), !dbg !9352
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !9358
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !9361
  %13 = load i32, i32* %12, align 4, !dbg !9361
  %14 = icmp eq i32 %13, 0, !dbg !9362
  br i1 %14, label %26, label %15, !dbg !9363

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !9364

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9366
  %18 = icmp eq i32 %17, 0, !dbg !9366
  br i1 %18, label %19, label %20, !dbg !9367

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.120, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !9368
  br label %30, !dbg !9374

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !9375
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9376
  call void @llvm.dbg.value(metadata i32 %22, metadata !9351, metadata !DIExpression()), !dbg !9352
  %23 = icmp eq i32 %22, -22, !dbg !9377
  br i1 %23, label %30, label %24, !dbg !9379

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !9380
  call void @llvm.dbg.value(metadata i32 %25, metadata !9351, metadata !DIExpression()), !dbg !9352
  br label %26, !dbg !9381

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !9352
  call void @llvm.dbg.value(metadata i32 %27, metadata !9351, metadata !DIExpression()), !dbg !9352
  %28 = add nuw nsw i32 %10, 1, !dbg !9382
  call void @llvm.dbg.value(metadata i32 %28, metadata !9350, metadata !DIExpression()), !dbg !9352
  %29 = icmp eq i32 %28, %6, !dbg !9354
  br i1 %29, label %30, label %8, !dbg !9357, !llvm.loop !9383

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !9352
  ret i32 %31, !dbg !9385
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !9386 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9390, metadata !DIExpression()), !dbg !9392
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !9393
  %3 = load i32, i32* %2, align 4, !dbg !9393
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !9394, !range !9395
  %5 = icmp ult i32 %4, 2, !dbg !9394
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !9396
  br i1 %7, label %8, label %15, !dbg !9396

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !9397
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !9398
  %11 = load i32, i32* %10, align 4, !dbg !9398
  %12 = and i32 %11, %9, !dbg !9399
  %13 = icmp eq i32 %12, 0, !dbg !9400
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9391, metadata !DIExpression()), !dbg !9392
  ret i32 %16, !dbg !9401
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9402 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9406, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9407, metadata !DIExpression()), !dbg !9409
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9410
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9410
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9408, metadata !DIExpression()), !dbg !9411
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9412
  %6 = load i32, i32* %5, align 4, !dbg !9412
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9413
  store i32 %6, i32* %7, align 4, !dbg !9414
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9415
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9416
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9417
  %11 = load i32, i32* %10, align 4, !dbg !9417
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* noundef nonnull %8, %struct.ctr_params* noundef nonnull %9, i32 noundef %11) #26, !dbg !9418
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !9419
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9420
  ret i32 %12, !dbg !9421
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* nocapture noundef writeonly %0, %struct.ctr_params* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #20 !dbg !9422 {
  call void @llvm.dbg.value(metadata %struct.ctr_params* %0, metadata !9429, metadata !DIExpression()), !dbg !9433
  call void @llvm.dbg.value(metadata %struct.ctr_params* %1, metadata !9430, metadata !DIExpression()), !dbg !9433
  call void @llvm.dbg.value(metadata i32 undef, metadata !9431, metadata !DIExpression()), !dbg !9433
  call void @llvm.dbg.value(metadata i32 %2, metadata !9432, metadata !DIExpression()), !dbg !9433
  %4 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %1, i32 0, i32 0, !dbg !9434
  %5 = load i32, i32* %4, align 4, !dbg !9434
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !9435
  %7 = or i32 %6, %5, !dbg !9436
  %8 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %0, i32 0, i32 0, !dbg !9437
  store i32 %7, i32* %8, align 4, !dbg !9438
  ret void, !dbg !9439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9440 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9444, metadata !DIExpression()), !dbg !9446
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9445, metadata !DIExpression()), !dbg !9446
  %3 = zext i8 %0 to i32, !dbg !9447
  %4 = icmp ugt i8 %0, 7, !dbg !9449
  br i1 %4, label %5, label %6, !dbg !9450

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.121, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !9451
  br label %7, !dbg !9457

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !9458
  br label %7, !dbg !9459

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9446
  ret i32 %8, !dbg !9460
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !9461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9465, metadata !DIExpression()), !dbg !9467
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9466, metadata !DIExpression()), !dbg !9467
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !9468
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9469
  %4 = load i32, i32* %3, align 4, !dbg !9469
  %5 = and i32 %4, -32, !dbg !9470
  %6 = or i32 %5, %0, !dbg !9471
  %7 = or i32 %6, 16, !dbg !9471
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9472
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9473
  %9 = load i32, i32* %8, align 4, !dbg !9473
  %10 = or i32 %9, 1, !dbg !9474
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9475
  ret void, !dbg !9476
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !9477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9480, metadata !DIExpression()), !dbg !9481
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9482
  ret void, !dbg !9483
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !9484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9488, metadata !DIExpression()), !dbg !9489
  %2 = icmp ult i32 %0, 33, !dbg !9490
  br i1 %2, label %11, label %3, !dbg !9492

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9493
  br i1 %4, label %11, label %5, !dbg !9495

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9496
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9497, !range !9395
  %8 = mul nsw i32 %7, -2, !dbg !9498
  %9 = add nsw i32 %8, 62, !dbg !9498
  %10 = and i32 %9, 62, !dbg !9499
  br label %11, !dbg !9500

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9489
  ret i32 %12, !dbg !9501
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9502 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9506, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata i8 %1, metadata !9507, metadata !DIExpression()), !dbg !9508
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9509
  ret void, !dbg !9511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9512 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9516, metadata !DIExpression()), !dbg !9523
  call void @llvm.dbg.value(metadata i8 %1, metadata !9517, metadata !DIExpression()), !dbg !9523
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9524
  call void @llvm.dbg.value(metadata i8 %3, metadata !9518, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9523
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !9525
  call void @llvm.dbg.value(metadata i32 %4, metadata !9518, metadata !DIExpression()), !dbg !9523
  %5 = icmp ne i32 %4, -22, !dbg !9526
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9527
  call void @llvm.dbg.value(metadata i32 %4, metadata !9519, metadata !DIExpression()), !dbg !9528
  br i1 %7, label %8, label %12, !dbg !9527

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9519, metadata !DIExpression()), !dbg !9528
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !9529
  %10 = add i32 %9, 1, !dbg !9532
  call void @llvm.dbg.value(metadata i32 %10, metadata !9519, metadata !DIExpression()), !dbg !9528
  %11 = icmp eq i32 %10, 8, !dbg !9533
  br i1 %11, label %12, label %8, !dbg !9534, !llvm.loop !9535

12:                                               ; preds = %8, %2
  ret void, !dbg !9537
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !9538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9541, metadata !DIExpression()), !dbg !9542
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9543
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9544
  ret void, !dbg !9545
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9546 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9551
  %2 = icmp ugt i32 %1, 8, !dbg !9553
  br i1 %2, label %14, label %3, !dbg !9554

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !9555
  call void @llvm.dbg.value(metadata i32 0, metadata !9550, metadata !DIExpression()), !dbg !9556
  %4 = icmp eq i32 %1, 0, !dbg !9557
  br i1 %4, label %12, label %5, !dbg !9560

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !9560

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9550, metadata !DIExpression()), !dbg !9556
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !9561
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !9563
  %10 = add nuw i32 %8, 1, !dbg !9564
  call void @llvm.dbg.value(metadata i32 %10, metadata !9550, metadata !DIExpression()), !dbg !9556
  %11 = icmp eq i32 %10, %1, !dbg !9557
  br i1 %11, label %12, label %7, !dbg !9560, !llvm.loop !9565

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !9567
  store i8 %13, i8* @static_regions_num, align 1, !dbg !9568
  tail call void @arm_core_mpu_enable() #26, !dbg !9569
  br label %14, !dbg !9570

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !9556
  ret i32 %15, !dbg !9571
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9572 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9579, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i8* %1, metadata !9580, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i8* %0, metadata !9581, metadata !DIExpression()), !dbg !9582
  %3 = load i8, i8* %1, align 1, !dbg !9583
  %4 = icmp eq i8 %3, 0, !dbg !9584
  br i1 %4, label %13, label %5, !dbg !9585

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9579, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i8* %8, metadata !9580, metadata !DIExpression()), !dbg !9582
  store i8 %6, i8* %7, align 1, !dbg !9586
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9588
  call void @llvm.dbg.value(metadata i8* %9, metadata !9579, metadata !DIExpression()), !dbg !9582
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9589
  call void @llvm.dbg.value(metadata i8* %10, metadata !9580, metadata !DIExpression()), !dbg !9582
  %11 = load i8, i8* %10, align 1, !dbg !9583
  %12 = icmp eq i8 %11, 0, !dbg !9584
  br i1 %12, label %13, label %5, !dbg !9585, !llvm.loop !9590

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9592
  ret i8* %0, !dbg !9593
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9594 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9598, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i8* %1, metadata !9599, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 %2, metadata !9600, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i8* %0, metadata !9601, metadata !DIExpression()), !dbg !9602
  %4 = icmp eq i32 %2, 0, !dbg !9603
  br i1 %4, label %22, label %5, !dbg !9604

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9598, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 %7, metadata !9600, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i8* %8, metadata !9599, metadata !DIExpression()), !dbg !9602
  %9 = load i8, i8* %8, align 1, !dbg !9605
  %10 = icmp eq i8 %9, 0, !dbg !9606
  br i1 %10, label %16, label %11, !dbg !9607

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9608
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9610
  call void @llvm.dbg.value(metadata i8* %12, metadata !9599, metadata !DIExpression()), !dbg !9602
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9611
  call void @llvm.dbg.value(metadata i8* %13, metadata !9598, metadata !DIExpression()), !dbg !9602
  %14 = add i32 %7, -1, !dbg !9612
  call void @llvm.dbg.value(metadata i32 %14, metadata !9600, metadata !DIExpression()), !dbg !9602
  %15 = icmp eq i32 %14, 0, !dbg !9603
  br i1 %15, label %22, label %5, !dbg !9604, !llvm.loop !9613

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9598, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 %18, metadata !9600, metadata !DIExpression()), !dbg !9602
  store i8 0, i8* %17, align 1, !dbg !9615
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9617
  call void @llvm.dbg.value(metadata i8* %19, metadata !9598, metadata !DIExpression()), !dbg !9602
  %20 = add i32 %18, -1, !dbg !9618
  call void @llvm.dbg.value(metadata i32 %20, metadata !9600, metadata !DIExpression()), !dbg !9602
  %21 = icmp eq i32 %20, 0, !dbg !9619
  br i1 %21, label %22, label %16, !dbg !9620, !llvm.loop !9621

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9623
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9624 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9628, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.value(metadata i32 %1, metadata !9629, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.value(metadata i32 %1, metadata !9630, metadata !DIExpression()), !dbg !9631
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9632

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9628, metadata !DIExpression()), !dbg !9631
  %6 = load i8, i8* %5, align 1, !dbg !9633
  %7 = icmp eq i8 %6, %3, !dbg !9634
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9635
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9636
  call void @llvm.dbg.value(metadata i8* %10, metadata !9628, metadata !DIExpression()), !dbg !9631
  br i1 %9, label %11, label %4, !dbg !9635, !llvm.loop !9638

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9640
  ret i8* %12, !dbg !9641
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9642 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9644, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i32 %1, metadata !9645, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i8* null, metadata !9646, metadata !DIExpression()), !dbg !9647
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9648

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9647
  call void @llvm.dbg.value(metadata i8* %6, metadata !9646, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i8* %5, metadata !9644, metadata !DIExpression()), !dbg !9647
  %7 = load i8, i8* %5, align 1, !dbg !9649
  %8 = icmp eq i8 %7, %3, !dbg !9652
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9653
  call void @llvm.dbg.value(metadata i8* %9, metadata !9646, metadata !DIExpression()), !dbg !9647
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9654
  call void @llvm.dbg.value(metadata i8* %10, metadata !9644, metadata !DIExpression()), !dbg !9647
  %11 = icmp eq i8 %7, 0, !dbg !9655
  br i1 %11, label %12, label %4, !dbg !9655, !llvm.loop !9656

12:                                               ; preds = %4
  ret i8* %9, !dbg !9658
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !9659 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9663, metadata !DIExpression()), !dbg !9665
  call void @llvm.dbg.value(metadata i32 0, metadata !9664, metadata !DIExpression()), !dbg !9665
  %2 = load i8, i8* %0, align 1, !dbg !9666
  %3 = icmp eq i8 %2, 0, !dbg !9667
  br i1 %3, label %11, label %4, !dbg !9668

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9664, metadata !DIExpression()), !dbg !9665
  call void @llvm.dbg.value(metadata i8* %6, metadata !9663, metadata !DIExpression()), !dbg !9665
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9669
  call void @llvm.dbg.value(metadata i8* %7, metadata !9663, metadata !DIExpression()), !dbg !9665
  %8 = add i32 %5, 1, !dbg !9671
  call void @llvm.dbg.value(metadata i32 %8, metadata !9664, metadata !DIExpression()), !dbg !9665
  %9 = load i8, i8* %7, align 1, !dbg !9666
  %10 = icmp eq i8 %9, 0, !dbg !9667
  br i1 %10, label %11, label %4, !dbg !9668, !llvm.loop !9672

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9665
  ret i32 %12, !dbg !9674
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9675 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9679, metadata !DIExpression()), !dbg !9682
  call void @llvm.dbg.value(metadata i32 %1, metadata !9680, metadata !DIExpression()), !dbg !9682
  call void @llvm.dbg.value(metadata i32 0, metadata !9681, metadata !DIExpression()), !dbg !9682
  %3 = load i8, i8* %0, align 1, !dbg !9683
  %4 = icmp ne i8 %3, 0, !dbg !9684
  %5 = icmp ne i32 %1, 0, !dbg !9685
  %6 = and i1 %4, %5, !dbg !9685
  br i1 %6, label %7, label %16, !dbg !9686

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9681, metadata !DIExpression()), !dbg !9682
  call void @llvm.dbg.value(metadata i8* %9, metadata !9679, metadata !DIExpression()), !dbg !9682
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9687
  call void @llvm.dbg.value(metadata i8* %10, metadata !9679, metadata !DIExpression()), !dbg !9682
  %11 = add nuw i32 %8, 1, !dbg !9689
  call void @llvm.dbg.value(metadata i32 %11, metadata !9681, metadata !DIExpression()), !dbg !9682
  %12 = load i8, i8* %10, align 1, !dbg !9683
  %13 = icmp ne i8 %12, 0, !dbg !9684
  %14 = icmp ult i32 %11, %1, !dbg !9685
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9685
  br i1 %15, label %7, label %16, !dbg !9686, !llvm.loop !9690

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9682
  ret i32 %17, !dbg !9692
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !9693 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9697, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i8* %1, metadata !9698, metadata !DIExpression()), !dbg !9699
  %3 = load i8, i8* %0, align 1, !dbg !9700
  %4 = load i8, i8* %1, align 1, !dbg !9701
  %5 = icmp ne i8 %3, %4, !dbg !9702
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9703
  br i1 %7, label %18, label %8, !dbg !9703

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9698, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i8* %10, metadata !9697, metadata !DIExpression()), !dbg !9699
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9704
  call void @llvm.dbg.value(metadata i8* %11, metadata !9697, metadata !DIExpression()), !dbg !9699
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9706
  call void @llvm.dbg.value(metadata i8* %12, metadata !9698, metadata !DIExpression()), !dbg !9699
  %13 = load i8, i8* %11, align 1, !dbg !9700
  %14 = load i8, i8* %12, align 1, !dbg !9701
  %15 = icmp ne i8 %13, %14, !dbg !9702
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9703
  br i1 %17, label %18, label %8, !dbg !9703, !llvm.loop !9707

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9700
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9701
  %21 = zext i8 %19 to i32, !dbg !9710
  %22 = zext i8 %20 to i32, !dbg !9711
  %23 = sub nsw i32 %21, %22, !dbg !9712
  ret i32 %23, !dbg !9713
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9714 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9718, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i8* %1, metadata !9719, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i32 %2, metadata !9720, metadata !DIExpression()), !dbg !9721
  %4 = icmp eq i32 %2, 0, !dbg !9722
  br i1 %4, label %23, label %5, !dbg !9722

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9720, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i8* %7, metadata !9719, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i8* %8, metadata !9718, metadata !DIExpression()), !dbg !9721
  %9 = load i8, i8* %8, align 1, !dbg !9723
  %10 = load i8, i8* %7, align 1, !dbg !9724
  %11 = icmp ne i8 %9, %10, !dbg !9725
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9726
  br i1 %13, label %19, label %14, !dbg !9726

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9727
  call void @llvm.dbg.value(metadata i8* %15, metadata !9718, metadata !DIExpression()), !dbg !9721
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9729
  call void @llvm.dbg.value(metadata i8* %16, metadata !9719, metadata !DIExpression()), !dbg !9721
  %17 = add i32 %6, -1, !dbg !9730
  call void @llvm.dbg.value(metadata i32 %17, metadata !9720, metadata !DIExpression()), !dbg !9721
  %18 = icmp eq i32 %17, 0, !dbg !9722
  br i1 %18, label %23, label %5, !dbg !9722, !llvm.loop !9731

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9734
  %21 = zext i8 %10 to i32, !dbg !9735
  %22 = sub nsw i32 %20, %21, !dbg !9736
  br label %23, !dbg !9737

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9737
  ret i32 %24, !dbg !9738
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !9739 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9743, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata i8* %1, metadata !9744, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata i8** %2, metadata !9745, metadata !DIExpression()), !dbg !9748
  %4 = icmp eq i8* %0, null, !dbg !9749
  br i1 %4, label %5, label %7, !dbg !9749

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9750
  br label %7, !dbg !9749

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9749
  call void @llvm.dbg.value(metadata i8* %8, metadata !9746, metadata !DIExpression()), !dbg !9748
  %9 = load i8, i8* %8, align 1, !dbg !9751
  %10 = icmp eq i8 %9, 0, !dbg !9751
  br i1 %10, label %33, label %11, !dbg !9752

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9746, metadata !DIExpression()), !dbg !9748
  %14 = zext i8 %12 to i32, !dbg !9751
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !9753
  %16 = icmp eq i8* %15, null, !dbg !9752
  br i1 %16, label %21, label %17, !dbg !9754

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9755
  call void @llvm.dbg.value(metadata i8* %18, metadata !9746, metadata !DIExpression()), !dbg !9748
  %19 = load i8, i8* %18, align 1, !dbg !9751
  %20 = icmp eq i8 %19, 0, !dbg !9751
  br i1 %20, label %33, label %11, !dbg !9752, !llvm.loop !9757

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9747, metadata !DIExpression()), !dbg !9748
  %24 = zext i8 %22 to i32, !dbg !9759
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !9760
  %26 = icmp eq i8* %25, null, !dbg !9761
  br i1 %26, label %27, label %31, !dbg !9762

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9763
  call void @llvm.dbg.value(metadata i8* %28, metadata !9747, metadata !DIExpression()), !dbg !9748
  %29 = load i8, i8* %28, align 1, !dbg !9759
  %30 = icmp eq i8 %29, 0, !dbg !9759
  br i1 %30, label %33, label %21, !dbg !9765, !llvm.loop !9766

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9768
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9771
  br label %33, !dbg !9772

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9748
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9748
  store i8* %34, i8** %2, align 4, !dbg !9748
  ret i8* %35, !dbg !9773
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9774 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9776, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata i8* %1, metadata !9777, metadata !DIExpression()), !dbg !9778
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9779
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9780
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !9781
  ret i8* %0, !dbg !9782
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9783 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9785, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i8* %1, metadata !9786, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i32 %2, metadata !9787, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i8* %0, metadata !9788, metadata !DIExpression()), !dbg !9790
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9791
  call void @llvm.dbg.value(metadata i32 %4, metadata !9789, metadata !DIExpression()), !dbg !9790
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9792
  call void @llvm.dbg.value(metadata i8* %5, metadata !9785, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i8* %1, metadata !9786, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i32 %2, metadata !9787, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i32 %2, metadata !9787, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9790
  %6 = icmp eq i32 %2, 0, !dbg !9793
  br i1 %6, label %18, label %7, !dbg !9794

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9795
  call void @llvm.dbg.value(metadata i8* %9, metadata !9785, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i8* %10, metadata !9786, metadata !DIExpression()), !dbg !9790
  %12 = load i8, i8* %10, align 1, !dbg !9796
  %13 = icmp eq i8 %12, 0, !dbg !9797
  br i1 %13, label %18, label %14, !dbg !9798

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9799
  call void @llvm.dbg.value(metadata i8* %15, metadata !9786, metadata !DIExpression()), !dbg !9790
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9801
  call void @llvm.dbg.value(metadata i8* %16, metadata !9785, metadata !DIExpression()), !dbg !9790
  store i8 %12, i8* %9, align 1, !dbg !9802
  call void @llvm.dbg.value(metadata i32 %11, metadata !9787, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i32 %11, metadata !9787, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9790
  %17 = icmp eq i32 %11, 0, !dbg !9793
  br i1 %17, label %18, label %7, !dbg !9794, !llvm.loop !9803

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9790
  store i8 0, i8* %19, align 1, !dbg !9805
  ret i8* %0, !dbg !9806
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9807 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9811, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i8* %1, metadata !9812, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i32 %2, metadata !9813, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i8* %0, metadata !9814, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i8* %1, metadata !9815, metadata !DIExpression()), !dbg !9816
  %4 = icmp eq i32 %2, 0, !dbg !9817
  br i1 %4, label %31, label %5, !dbg !9819

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9815, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i8* %0, metadata !9814, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i32 %2, metadata !9813, metadata !DIExpression()), !dbg !9816
  %6 = add i32 %2, -1, !dbg !9820
  call void @llvm.dbg.value(metadata i32 %6, metadata !9813, metadata !DIExpression()), !dbg !9816
  %7 = icmp eq i32 %6, 0, !dbg !9821
  br i1 %7, label %23, label %8, !dbg !9822

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9823
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9823
  br label %11, !dbg !9823

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9815, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i8* %14, metadata !9814, metadata !DIExpression()), !dbg !9816
  %15 = load i8, i8* %14, align 1, !dbg !9824
  %16 = load i8, i8* %13, align 1, !dbg !9825
  %17 = icmp eq i8 %15, %16, !dbg !9826
  br i1 %17, label %18, label %23, !dbg !9823

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9827
  call void @llvm.dbg.value(metadata i8* %19, metadata !9814, metadata !DIExpression()), !dbg !9816
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9829
  call void @llvm.dbg.value(metadata i8* %20, metadata !9815, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.value(metadata i32 %12, metadata !9813, metadata !DIExpression()), !dbg !9816
  %21 = add i32 %12, -1, !dbg !9820
  call void @llvm.dbg.value(metadata i32 %21, metadata !9813, metadata !DIExpression()), !dbg !9816
  %22 = icmp eq i32 %21, 0, !dbg !9821
  br i1 %22, label %23, label %11, !dbg !9822, !llvm.loop !9830

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9816
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9816
  %26 = load i8, i8* %24, align 1, !dbg !9832
  %27 = zext i8 %26 to i32, !dbg !9832
  %28 = load i8, i8* %25, align 1, !dbg !9833
  %29 = zext i8 %28 to i32, !dbg !9833
  %30 = sub nsw i32 %27, %29, !dbg !9834
  br label %31, !dbg !9835

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9816
  ret i32 %32, !dbg !9836
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9837 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9841, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i8* %1, metadata !9842, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i32 %2, metadata !9843, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i8* %0, metadata !9844, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i8* %1, metadata !9845, metadata !DIExpression()), !dbg !9846
  %4 = ptrtoint i8* %0 to i32, !dbg !9847
  %5 = ptrtoint i8* %1 to i32, !dbg !9847
  %6 = sub i32 %4, %5, !dbg !9847
  %7 = icmp ult i32 %6, %2, !dbg !9849
  br i1 %7, label %10, label %8, !dbg !9850

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9845, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i8* %0, metadata !9844, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i32 %2, metadata !9843, metadata !DIExpression()), !dbg !9846
  %9 = icmp eq i32 %2, 0, !dbg !9851
  br i1 %9, label %26, label %17, !dbg !9853

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9843, metadata !DIExpression()), !dbg !9846
  %12 = add i32 %11, -1, !dbg !9854
  call void @llvm.dbg.value(metadata i32 %12, metadata !9843, metadata !DIExpression()), !dbg !9846
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9857
  %14 = load i8, i8* %13, align 1, !dbg !9857
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9858
  store i8 %14, i8* %15, align 1, !dbg !9859
  %16 = icmp eq i32 %12, 0, !dbg !9860
  br i1 %16, label %26, label %10, !dbg !9861, !llvm.loop !9862

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9845, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i8* %19, metadata !9844, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i32 %20, metadata !9843, metadata !DIExpression()), !dbg !9846
  %21 = load i8, i8* %18, align 1, !dbg !9864
  store i8 %21, i8* %19, align 1, !dbg !9866
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9867
  call void @llvm.dbg.value(metadata i8* %22, metadata !9844, metadata !DIExpression()), !dbg !9846
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9868
  call void @llvm.dbg.value(metadata i8* %23, metadata !9845, metadata !DIExpression()), !dbg !9846
  %24 = add i32 %20, -1, !dbg !9869
  call void @llvm.dbg.value(metadata i32 %24, metadata !9843, metadata !DIExpression()), !dbg !9846
  %25 = icmp eq i32 %24, 0, !dbg !9851
  br i1 %25, label %26, label %17, !dbg !9853, !llvm.loop !9870

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9872
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9873 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9879, metadata !DIExpression()), !dbg !9884
  call void @llvm.dbg.value(metadata i8* %1, metadata !9880, metadata !DIExpression()), !dbg !9884
  call void @llvm.dbg.value(metadata i32 %2, metadata !9881, metadata !DIExpression()), !dbg !9884
  call void @llvm.dbg.value(metadata i8* %0, metadata !9882, metadata !DIExpression()), !dbg !9884
  call void @llvm.dbg.value(metadata i8* %1, metadata !9883, metadata !DIExpression()), !dbg !9884
  %4 = icmp eq i32 %2, 0, !dbg !9885
  br i1 %4, label %14, label %5, !dbg !9886

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9883, metadata !DIExpression()), !dbg !9884
  call void @llvm.dbg.value(metadata i8* %7, metadata !9882, metadata !DIExpression()), !dbg !9884
  call void @llvm.dbg.value(metadata i32 %8, metadata !9881, metadata !DIExpression()), !dbg !9884
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9887
  call void @llvm.dbg.value(metadata i8* %9, metadata !9883, metadata !DIExpression()), !dbg !9884
  %10 = load i8, i8* %6, align 1, !dbg !9889
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9890
  call void @llvm.dbg.value(metadata i8* %11, metadata !9882, metadata !DIExpression()), !dbg !9884
  store i8 %10, i8* %7, align 1, !dbg !9891
  %12 = add i32 %8, -1, !dbg !9892
  call void @llvm.dbg.value(metadata i32 %12, metadata !9881, metadata !DIExpression()), !dbg !9884
  %13 = icmp eq i32 %12, 0, !dbg !9885
  br i1 %13, label %14, label %5, !dbg !9886, !llvm.loop !9893

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9895
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #21 !dbg !9896 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9900, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.value(metadata i32 %1, metadata !9901, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.value(metadata i32 %2, metadata !9902, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.value(metadata i8* %0, metadata !9903, metadata !DIExpression()), !dbg !9905
  %4 = trunc i32 %1 to i8, !dbg !9906
  call void @llvm.dbg.value(metadata i8 %4, metadata !9904, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.value(metadata i32 %2, metadata !9902, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.value(metadata i8* %0, metadata !9903, metadata !DIExpression()), !dbg !9905
  %5 = icmp eq i32 %2, 0, !dbg !9907
  br i1 %5, label %12, label %6, !dbg !9908

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9902, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.value(metadata i8* %8, metadata !9903, metadata !DIExpression()), !dbg !9905
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9909
  call void @llvm.dbg.value(metadata i8* %9, metadata !9903, metadata !DIExpression()), !dbg !9905
  store i8 %4, i8* %8, align 1, !dbg !9911
  %10 = add i32 %7, -1, !dbg !9912
  call void @llvm.dbg.value(metadata i32 %10, metadata !9902, metadata !DIExpression()), !dbg !9905
  %11 = icmp eq i32 %10, 0, !dbg !9907
  br i1 %11, label %12, label %6, !dbg !9908, !llvm.loop !9913

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9915
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9916 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9920, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i32 %1, metadata !9921, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i32 %2, metadata !9922, metadata !DIExpression()), !dbg !9926
  %4 = icmp eq i32 %2, 0, !dbg !9927
  br i1 %4, label %17, label %5, !dbg !9928

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9929

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9930
  call void @llvm.dbg.value(metadata i8* %9, metadata !9923, metadata !DIExpression()), !dbg !9930
  call void @llvm.dbg.value(metadata i32 %8, metadata !9922, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i8* %9, metadata !9923, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9930
  %10 = load i8, i8* %9, align 1, !dbg !9931
  %11 = icmp eq i8 %10, %6, !dbg !9934
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9935
  call void @llvm.dbg.value(metadata i8* %12, metadata !9923, metadata !DIExpression()), !dbg !9930
  call void @llvm.dbg.value(metadata i32 %13, metadata !9922, metadata !DIExpression()), !dbg !9926
  br i1 %15, label %16, label %7, !dbg !9935, !llvm.loop !9936

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9938

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9926
  ret i8* %19, !dbg !9939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !9940 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9942, metadata !DIExpression()), !dbg !9943
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9944
  ret void, !dbg !9945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !9946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9948, metadata !DIExpression()), !dbg !9949
  ret i32 -1, !dbg !9950
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9955, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i32* %1, metadata !9956, metadata !DIExpression()), !dbg !9957
  %3 = ptrtoint i32* %1 to i32, !dbg !9958
  %4 = and i32 %3, -2, !dbg !9958
  %5 = icmp eq i32 %4, 2, !dbg !9958
  br i1 %5, label %6, label %9, !dbg !9958

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9959
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !9959
  br label %9, !dbg !9960

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9960
  ret i32 %10, !dbg !9961
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9964, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata i32* %1, metadata !9965, metadata !DIExpression()), !dbg !9966
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9967
  ret i32 %3, !dbg !9968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9972, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.value(metadata i32* %1, metadata !9973, metadata !DIExpression()), !dbg !9974
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9975, !srcloc !9977
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9978
  ret i32 %3, !dbg !9979
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9985, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata i32* %1, metadata !9986, metadata !DIExpression()), !dbg !9989
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9990
  call void @llvm.dbg.value(metadata i32 %3, metadata !9987, metadata !DIExpression()), !dbg !9989
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !9991
  call void @llvm.dbg.value(metadata i32 %4, metadata !9988, metadata !DIExpression()), !dbg !9989
  %5 = icmp ne i32 %3, %4, !dbg !9992
  %6 = sext i1 %5 to i32, !dbg !9993
  ret i32 %6, !dbg !9994
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9995 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9999, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.value(metadata i32 %1, metadata !10000, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.value(metadata i32 %2, metadata !10001, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.value(metadata i32* %3, metadata !10002, metadata !DIExpression()), !dbg !10003
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10004
  ret i32 %5, !dbg !10005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !10006 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10008, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i32 %1, metadata !10009, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i32 %2, metadata !10010, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.value(metadata i32* %3, metadata !10011, metadata !DIExpression()), !dbg !10012
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10013, !srcloc !10015
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10016
  ret i32 %5, !dbg !10017
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !10018 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10020, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata i32 %1, metadata !10021, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata i32 %2, metadata !10022, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata i32* %3, metadata !10023, metadata !DIExpression()), !dbg !10028
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !10029
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !10031
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !10031
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !10031
  br i1 %11, label %33, label %12, !dbg !10031

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !10028
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !10028
  call void @llvm.dbg.value(metadata i8* %14, metadata !10026, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata i32 %13, metadata !10024, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata i32 %1, metadata !10025, metadata !DIExpression()), !dbg !10028
  br label %15, !dbg !10032

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !10034
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !10028
  call void @llvm.dbg.value(metadata i8* %17, metadata !10026, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata i32 %16, metadata !10025, metadata !DIExpression()), !dbg !10028
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10035
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !10038
  call void @llvm.dbg.value(metadata i8* %19, metadata !10026, metadata !DIExpression()), !dbg !10028
  %20 = load i8, i8* %17, align 1, !dbg !10039
  %21 = zext i8 %20 to i32, !dbg !10040
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !10035
  %23 = icmp eq i32 %22, -1, !dbg !10041
  br i1 %23, label %30, label %24, !dbg !10042

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !10043
  call void @llvm.dbg.value(metadata i32 %25, metadata !10025, metadata !DIExpression()), !dbg !10028
  %26 = icmp eq i32 %25, 0, !dbg !10044
  br i1 %26, label %27, label %15, !dbg !10045, !llvm.loop !10046

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !10048
  call void @llvm.dbg.value(metadata i32 %28, metadata !10024, metadata !DIExpression()), !dbg !10028
  %29 = icmp eq i32 %28, 0, !dbg !10049
  br i1 %29, label %30, label %12, !dbg !10050, !llvm.loop !10051

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !10028
  call void @llvm.dbg.value(metadata i32 %31, metadata !10024, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.label(metadata !10027), !dbg !10054
  %32 = sub i32 %2, %31, !dbg !10055
  br label %33, !dbg !10056

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !10028
  ret i32 %34, !dbg !10057
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !10058 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10062, metadata !DIExpression()), !dbg !10063
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10064
  %3 = icmp eq i32 %2, -1, !dbg !10066
  br i1 %3, label %8, label %4, !dbg !10067

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10068
  %6 = icmp eq i32 %5, -1, !dbg !10069
  %7 = sext i1 %6 to i32, !dbg !10068
  br label %8, !dbg !10070

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !10063
  ret i32 %9, !dbg !10071
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10072 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10074, metadata !DIExpression()), !dbg !10085
  %8 = bitcast i64* %2 to i8*, !dbg !10086
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #25, !dbg !10086
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !10075, metadata !DIExpression()), !dbg !10087
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !10087
  store i64 %9, i64* %2, align 8, !dbg !10087
  %10 = bitcast i64* %4 to i8*, !dbg !10088
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #25, !dbg !10088
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !10083, metadata !DIExpression()), !dbg !10089
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !10089
  store i64 %11, i64* %4, align 8, !dbg !10089
  %12 = bitcast i64* %6 to i8*, !dbg !10090
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #25, !dbg !10090
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !10084, metadata !DIExpression()), !dbg !10091
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !10091
  store i64 %13, i64* %6, align 8, !dbg !10091
  %14 = trunc i64 %9 to i32, !dbg !10092
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !10092
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #26, !dbg !10094
  %17 = trunc i64 %13 to i32, !dbg !10095
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !10095
  br i1 %16, label %19, label %26, !dbg !10095

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !10095
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !10095
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #26, !dbg !10096
  br i1 %22, label %23, label %26, !dbg !10097

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #26, !dbg !10098
  br i1 %24, label %25, label %26, !dbg !10099

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #26, !dbg !10100
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #26, !dbg !10101
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #26, !dbg !10102
  br label %26, !dbg !10103

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !10085
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #25, !dbg !10104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #25, !dbg !10104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #25, !dbg !10104
  ret i32 %27, !dbg !10104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !10105 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10109, metadata !DIExpression()), !dbg !10110
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10111, !srcloc !10113
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #26, !dbg !10114
  ret i1 %2, !dbg !10115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10116 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !10121, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.value(metadata i32 %1, metadata !10122, metadata !DIExpression()), !dbg !10123
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !10124
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !10124
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !10125
  %6 = load i8, i8* %5, align 4, !dbg !10125
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !10126
  %8 = load i16, i16* %7, align 2, !dbg !10126
  %9 = zext i16 %8 to i32, !dbg !10127
  %10 = or i32 %9, %1, !dbg !10128
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #26, !dbg !10129
  ret void, !dbg !10130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !10131 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10134, metadata !DIExpression()), !dbg !10137
  call void @llvm.dbg.value(metadata i8 %1, metadata !10135, metadata !DIExpression()), !dbg !10137
  call void @llvm.dbg.value(metadata i32 %2, metadata !10136, metadata !DIExpression()), !dbg !10137
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10138, !srcloc !10140
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #26, !dbg !10141
  ret void, !dbg !10142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !10143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10145, metadata !DIExpression()), !dbg !10152
  call void @llvm.dbg.value(metadata i8 %1, metadata !10146, metadata !DIExpression()), !dbg !10152
  call void @llvm.dbg.value(metadata i32 %2, metadata !10147, metadata !DIExpression()), !dbg !10152
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10153
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !10153
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !10153
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !10148, metadata !DIExpression()), !dbg !10152
  call void @llvm.dbg.value(metadata i8* undef, metadata !10149, metadata !DIExpression()), !dbg !10152
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10154
  %8 = bitcast i8** %7 to %struct.ctr_params**, !dbg !10154
  %9 = load %struct.ctr_params*, %struct.ctr_params** %8, align 4, !dbg !10154
  call void @llvm.dbg.value(metadata %struct.ctr_params* %9, metadata !10151, metadata !DIExpression()), !dbg !10152
  %10 = and i32 %2, 786432
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 1048577, !dbg !10155
  %13 = icmp ne i32 %12, 1048577, !dbg !10155
  %14 = or i1 %13, %11, !dbg !10155
  %15 = xor i32 %2, 786432, !dbg !10155
  %16 = select i1 %14, i32 %2, i32 %15, !dbg !10155
  call void @llvm.dbg.value(metadata i32 %16, metadata !10147, metadata !DIExpression()), !dbg !10152
  call void @llvm.dbg.value(metadata i32 %16, metadata !10147, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !10152
  %17 = and i32 %16, 1, !dbg !10157
  %18 = icmp eq i32 %17, 0, !dbg !10159
  %19 = zext i8 %1 to i32, !dbg !10160
  %20 = shl nuw i32 1, %19, !dbg !10160
  br i1 %18, label %25, label %21, !dbg !10161

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %9, i32 0, i32 0, !dbg !10162
  %23 = load i32, i32* %22, align 4, !dbg !10164
  %24 = or i32 %23, %20, !dbg !10164
  store i32 %24, i32* %22, align 4, !dbg !10164
  br label %30, !dbg !10165

25:                                               ; preds = %3
  %26 = xor i32 %20, -1, !dbg !10166
  %27 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %9, i32 0, i32 0, !dbg !10168
  %28 = load i32, i32* %27, align 4, !dbg !10169
  %29 = and i32 %28, %26, !dbg !10169
  store i32 %29, i32* %27, align 4, !dbg !10169
  br label %30

30:                                               ; preds = %25, %21
  %31 = and i32 %16, -1048577, !dbg !10170
  call void @llvm.dbg.value(metadata i32 %31, metadata !10147, metadata !DIExpression()), !dbg !10152
  %32 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !10171
  %33 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %32, align 4, !dbg !10171
  %34 = tail call i32 %33(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %31) #27, !dbg !10172
  ret void, !dbg !10173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !10174 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10176, metadata !DIExpression()), !dbg !10177
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10178
  ret i1 %2, !dbg !10179
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !10180 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10182, metadata !DIExpression()), !dbg !10183
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !10184
  ret void, !dbg !10185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !10186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10190, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata i32 %1, metadata !10191, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !10192, metadata !DIExpression()), !dbg !10196
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10197
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !10197
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !10197
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !10193, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata i32 %0, metadata !10195, metadata !DIExpression()), !dbg !10196
  %7 = icmp slt i32 %0, %1, !dbg !10198
  br i1 %7, label %8, label %22, !dbg !10201

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10195, metadata !DIExpression()), !dbg !10196
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !10202
  %11 = icmp eq i32 %10, 0, !dbg !10202
  br i1 %11, label %19, label %12, !dbg !10205

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !10206
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !10208
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !10208
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !10210
  br i1 %15, label %19, label %16, !dbg !10211

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !10212
  %18 = load i8*, i8** %17, align 4, !dbg !10212
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !10213
  br label %19, !dbg !10214

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !10215
  call void @llvm.dbg.value(metadata i32 %20, metadata !10195, metadata !DIExpression()), !dbg !10196
  %21 = icmp eq i32 %20, %1, !dbg !10198
  br i1 %21, label %22, label %8, !dbg !10201, !llvm.loop !10216

22:                                               ; preds = %19, %3
  ret void, !dbg !10218
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #18 !dbg !10219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10221, metadata !DIExpression()), !dbg !10222
  %2 = shl nuw i32 1, %0, !dbg !10223
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !10226
  ret i32 %3, !dbg !10227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !10228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10232, metadata !DIExpression()), !dbg !10233
  %2 = shl nuw i32 1, %0, !dbg !10234
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !10237
  ret void, !dbg !10238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10242, metadata !DIExpression()), !dbg !10243
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !10244
  ret void, !dbg !10245
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #18 !dbg !10246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10248, metadata !DIExpression()), !dbg !10249
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !10250
  %3 = and i32 %2, %0, !dbg !10250
  %4 = icmp eq i32 %3, %0, !dbg !10251
  %5 = zext i1 %4 to i32, !dbg !10251
  ret i32 %5, !dbg !10252
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !10253 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10255, metadata !DIExpression()), !dbg !10256
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !10257
  ret void, !dbg !10258
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !10259 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10261, metadata !DIExpression()), !dbg !10262
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !10263
  ret void, !dbg !10264
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !10265 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10267, metadata !DIExpression()), !dbg !10268
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !10269
  ret void, !dbg !10270
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !10271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10273, metadata !DIExpression()), !dbg !10274
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !10275
  ret void, !dbg !10276
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !10277 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10279, metadata !DIExpression()), !dbg !10280
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !10281
  ret void, !dbg !10282
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !10283 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10285, metadata !DIExpression()), !dbg !10286
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !10287
  ret void, !dbg !10288
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10289 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10291, metadata !DIExpression()), !dbg !10292
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !10293
  ret i32 0, !dbg !10294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !989 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !993, metadata !DIExpression()), !dbg !10295
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !10296
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !10298
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !10300
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !10302
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !10304
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !10306
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !10308
  ret void, !dbg !10310
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !10311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10313, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.value(metadata i32 0, metadata !10314, metadata !DIExpression()), !dbg !10315
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !10316
  %3 = load i32, i32* %2, align 4, !dbg !10316
  call void @llvm.dbg.value(metadata i32 %3, metadata !10314, metadata !DIExpression()), !dbg !10315
  %4 = shl nuw i32 1, %0, !dbg !10317
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !10318
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !10319
  ret void, !dbg !10320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10323, metadata !DIExpression()), !dbg !10324
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !10325
  %3 = or i32 %2, %0, !dbg !10325
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !10325
  ret void, !dbg !10326
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !10327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10329, metadata !DIExpression()), !dbg !10330
  %2 = icmp slt i32 %0, 32, !dbg !10331
  br i1 %2, label %3, label %5, !dbg !10333

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !10334
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !10336
  br label %5, !dbg !10337

5:                                                ; preds = %1, %3
  ret void, !dbg !10338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10341, metadata !DIExpression()), !dbg !10342
  %2 = xor i32 %0, -1, !dbg !10343
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !10343
  %4 = and i32 %3, %2, !dbg !10343
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !10343
  ret void, !dbg !10344
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !10345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10349, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.value(metadata i32 %1, metadata !10350, metadata !DIExpression()), !dbg !10351
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !10352

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !10353
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !10355
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !10356
  br label %11, !dbg !10357

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !10358
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !10359
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !10360
  br label %11, !dbg !10361

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !10362
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !10363
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !10364
  br label %11, !dbg !10365

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10366
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !10367
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !10368
  br label %11, !dbg !10369

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10370
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10373, metadata !DIExpression()), !dbg !10374
  %2 = xor i32 %0, -1, !dbg !10375
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !10375
  %4 = and i32 %3, %2, !dbg !10375
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !10375
  ret void, !dbg !10376
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10379, metadata !DIExpression()), !dbg !10380
  %2 = xor i32 %0, -1, !dbg !10381
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !10381
  %4 = and i32 %3, %2, !dbg !10381
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !10381
  ret void, !dbg !10382
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10385, metadata !DIExpression()), !dbg !10386
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !10387
  %3 = or i32 %2, %0, !dbg !10387
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !10387
  ret void, !dbg !10388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10391, metadata !DIExpression()), !dbg !10392
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !10393
  %3 = or i32 %2, %0, !dbg !10393
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !10393
  ret void, !dbg !10394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !10395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10399, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10400, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata i8* %2, metadata !10401, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !10402, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10404, metadata !DIExpression()), !dbg !10405
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10406
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10406
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10408
  br i1 %6, label %7, label %9, !dbg !10409

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10410
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10411
  store i8* %2, i8** %8, align 4, !dbg !10412
  br label %9, !dbg !10413

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10405
  ret i32 %10, !dbg !10414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !10415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10417, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !10418, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10419, metadata !DIExpression()), !dbg !10420
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10421
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10422
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10423
  store i8* null, i8** %3, align 4, !dbg !10424
  ret void, !dbg !10425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !10426 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10428, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i8* %1, metadata !10429, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i8* %1, metadata !10430, metadata !DIExpression()), !dbg !10433
  %3 = bitcast i8* %1 to i32*, !dbg !10434
  %4 = load i32, i32* %3, align 4, !dbg !10434
  %5 = add i32 %4, -37, !dbg !10434
  %6 = icmp ult i32 %5, -9, !dbg !10434
  br i1 %6, label %15, label %7, !dbg !10436

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10437
  %9 = inttoptr i32 %8 to i32*, !dbg !10438
  call void @llvm.dbg.value(metadata i32* %9, metadata !10431, metadata !DIExpression()), !dbg !10433
  %10 = load volatile i32, i32* %9, align 4, !dbg !10439
  call void @llvm.dbg.value(metadata i32 %10, metadata !10432, metadata !DIExpression()), !dbg !10433
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10440
  %12 = bitcast i8* %11 to i32*, !dbg !10440
  %13 = load i32, i32* %12, align 4, !dbg !10440
  %14 = or i32 %13, %10, !dbg !10441
  call void @llvm.dbg.value(metadata i32 %14, metadata !10432, metadata !DIExpression()), !dbg !10433
  store volatile i32 %14, i32* %9, align 4, !dbg !10442
  br label %15, !dbg !10443

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10433
  ret i32 %16, !dbg !10444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !10445 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10447, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i8* %1, metadata !10448, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i8* %1, metadata !10449, metadata !DIExpression()), !dbg !10452
  %3 = bitcast i8* %1 to i32*, !dbg !10453
  %4 = load i32, i32* %3, align 4, !dbg !10453
  %5 = add i32 %4, -37, !dbg !10453
  %6 = icmp ult i32 %5, -9, !dbg !10453
  br i1 %6, label %16, label %7, !dbg !10455

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10456
  %9 = inttoptr i32 %8 to i32*, !dbg !10457
  call void @llvm.dbg.value(metadata i32* %9, metadata !10450, metadata !DIExpression()), !dbg !10452
  %10 = load volatile i32, i32* %9, align 4, !dbg !10458
  call void @llvm.dbg.value(metadata i32 %10, metadata !10451, metadata !DIExpression()), !dbg !10452
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10459
  %12 = bitcast i8* %11 to i32*, !dbg !10459
  %13 = load i32, i32* %12, align 4, !dbg !10459
  %14 = xor i32 %13, -1, !dbg !10460
  %15 = and i32 %10, %14, !dbg !10461
  call void @llvm.dbg.value(metadata i32 %15, metadata !10451, metadata !DIExpression()), !dbg !10452
  store volatile i32 %15, i32* %9, align 4, !dbg !10462
  br label %16, !dbg !10463

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10452
  ret i32 %17, !dbg !10464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #11 !dbg !10465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10467, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.value(metadata i8* %1, metadata !10468, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.value(metadata i32* %2, metadata !10469, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.value(metadata i8* %1, metadata !10470, metadata !DIExpression()), !dbg !10474
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10475
  call void @llvm.dbg.value(metadata i32 %4, metadata !10471, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.value(metadata i32 %4, metadata !10472, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.value(metadata i32 %4, metadata !10473, metadata !DIExpression()), !dbg !10474
  %5 = bitcast i8* %1 to i32*, !dbg !10476
  %6 = load i32, i32* %5, align 4, !dbg !10476
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !10477

7:                                                ; preds = %3
  br label %10, !dbg !10478

8:                                                ; preds = %3
  br label %10, !dbg !10480

9:                                                ; preds = %3
  br label %10, !dbg !10481

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !10482
  br label %12, !dbg !10483

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !10474
  ret i32 %13, !dbg !10483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !10484 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10486, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata i8* %1, metadata !10487, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata i8* %2, metadata !10488, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata i8* %1, metadata !10489, metadata !DIExpression()), !dbg !10494
  %4 = bitcast i8* %1 to i32*, !dbg !10495
  %5 = load i32, i32* %4, align 4, !dbg !10495
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %6, metadata !10493, metadata !DIExpression()), !dbg !10494
  %7 = icmp slt i32 %6, 0, !dbg !10497
  br i1 %7, label %22, label %8, !dbg !10499

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10489, metadata !DIExpression()), !dbg !10494
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10500
  %10 = bitcast i8* %9 to i32*, !dbg !10500
  %11 = load i32, i32* %10, align 4, !dbg !10500
  %12 = lshr i32 %11, 16, !dbg !10500
  %13 = and i32 %12, 7, !dbg !10500
  %14 = lshr i32 %11, 8, !dbg !10501
  %15 = and i32 %14, 31, !dbg !10501
  %16 = shl i32 %13, %15, !dbg !10502
  call void @llvm.dbg.value(metadata i32 %16, metadata !10492, metadata !DIExpression()), !dbg !10494
  %17 = and i32 %11, 255, !dbg !10503
  %18 = or i32 %17, 1073887232, !dbg !10504
  %19 = inttoptr i32 %18 to i32*, !dbg !10505
  call void @llvm.dbg.value(metadata i32* %19, metadata !10490, metadata !DIExpression()), !dbg !10494
  %20 = load volatile i32, i32* %19, align 4, !dbg !10506
  call void @llvm.dbg.value(metadata i32 %20, metadata !10491, metadata !DIExpression()), !dbg !10494
  %21 = or i32 %16, %20, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %21, metadata !10491, metadata !DIExpression()), !dbg !10494
  store volatile i32 %21, i32* %19, align 4, !dbg !10508
  br label %22, !dbg !10509

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10494
  ret i32 %23, !dbg !10510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #3 !dbg !10511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10515, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i32 0, metadata !10516, metadata !DIExpression()), !dbg !10517
  %2 = add i32 %0, -1, !dbg !10518
  %3 = icmp ult i32 %2, 4, !dbg !10518
  br i1 %3, label %4, label %7, !dbg !10518

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10518
  %6 = load i32, i32* %5, align 4, !dbg !10518
  call void @llvm.dbg.value(metadata i32 %6, metadata !10516, metadata !DIExpression()), !dbg !10517
  br label %7, !dbg !10519

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10517
  ret i32 %8, !dbg !10520
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10521 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10523, metadata !DIExpression()), !dbg !10526
  tail call void @config_enable_default_clocks() #27, !dbg !10527
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10528
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !10528
  %4 = lshr i32 %3, 4, !dbg !10528
  %5 = and i32 %4, 15, !dbg !10528
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10528
  %7 = load i8, i8* %6, align 1, !dbg !10528
  %8 = zext i8 %7 to i32, !dbg !10528
  %9 = lshr i32 %2, %8, !dbg !10528
  call void @llvm.dbg.value(metadata i32 %9, metadata !10524, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !10525, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10526
  %10 = icmp ult i32 %9, 32000000, !dbg !10529
  br i1 %10, label %11, label %13, !dbg !10531

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #27, !dbg !10532
  br label %13, !dbg !10534

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !10535
  tail call fastcc void @set_up_plls() #26, !dbg !10536
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10537
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #26, !dbg !10540
  br label %14, !dbg !10541

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10542
  %16 = icmp eq i32 %15, 12, !dbg !10543
  br i1 %16, label %17, label %14, !dbg !10541, !llvm.loop !10544

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !10546
  br i1 %18, label %19, label %21, !dbg !10548

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #27, !dbg !10549
  br label %21, !dbg !10551

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !10552
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !10553
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !10554
  ret i32 0, !dbg !10555
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #18 !dbg !10556 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10558
  %2 = and i32 %1, 240, !dbg !10558
  ret i32 %2, !dbg !10559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !10560 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10561
  %2 = icmp eq i32 %1, 1, !dbg !10565
  br i1 %2, label %7, label %3, !dbg !10566

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10567
  br label %4, !dbg !10569

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10570
  %6 = icmp eq i32 %5, 1, !dbg !10571
  br i1 %6, label %7, label %4, !dbg !10569, !llvm.loop !10572

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !10574
  br label %8, !dbg !10577

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !10578
  %10 = icmp eq i32 %9, 1, !dbg !10579
  br i1 %10, label %11, label %8, !dbg !10577, !llvm.loop !10580

11:                                               ; preds = %8
  ret void, !dbg !10582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10583 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10584
  %2 = icmp eq i32 %1, 12, !dbg !10586
  br i1 %2, label %3, label %4, !dbg !10587

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10588
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !10590
  br label %4, !dbg !10591

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !10592
  tail call void @config_pll_sysclock() #27, !dbg !10593
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !10594
  br label %5, !dbg !10595

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !10596
  %7 = icmp eq i32 %6, 1, !dbg !10597
  br i1 %7, label %8, label %5, !dbg !10595, !llvm.loop !10598

8:                                                ; preds = %5
  ret void, !dbg !10600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !10601 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10603, metadata !DIExpression()), !dbg !10604
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10605
  %2 = and i32 %1, -241, !dbg !10605
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10605
  ret void, !dbg !10606
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !10607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10609, metadata !DIExpression()), !dbg !10610
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10611
  %3 = and i32 %2, -4, !dbg !10611
  %4 = or i32 %3, %0, !dbg !10611
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10611
  ret void, !dbg !10612
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #18 !dbg !10613 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10614
  %2 = and i32 %1, 12, !dbg !10614
  ret i32 %2, !dbg !10615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !10616 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10618, metadata !DIExpression()), !dbg !10619
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10620
  %2 = and i32 %1, -1793, !dbg !10620
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10620
  ret void, !dbg !10621
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !10622 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10624, metadata !DIExpression()), !dbg !10625
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10626
  %2 = and i32 %1, -14337, !dbg !10626
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10626
  ret void, !dbg !10627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !10628 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10629
  %2 = icmp eq i32 %1, 1, !dbg !10631
  br i1 %2, label %7, label %3, !dbg !10632

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10633
  br label %4, !dbg !10635

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10636
  %6 = icmp eq i32 %5, 1, !dbg !10637
  br i1 %6, label %7, label %4, !dbg !10635, !llvm.loop !10638

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #26, !dbg !10640
  br label %8, !dbg !10641

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10642
  %10 = icmp eq i32 %9, 4, !dbg !10643
  br i1 %10, label %11, label %8, !dbg !10641, !llvm.loop !10644

11:                                               ; preds = %8
  ret void, !dbg !10646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !10647 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10648
  %2 = and i32 %1, -16777217, !dbg !10648
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10648
  ret void, !dbg !10649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !10650 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10651
  %2 = or i32 %1, 16777216, !dbg !10651
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10651
  ret void, !dbg !10652
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #18 !dbg !10653 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10654
  %2 = lshr i32 %1, 25, !dbg !10655
  %3 = and i32 %2, 1, !dbg !10655
  ret i32 %3, !dbg !10656
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #18 !dbg !10657 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10658
  %2 = lshr i32 %1, 1, !dbg !10659
  %3 = and i32 %2, 1, !dbg !10659
  ret i32 %3, !dbg !10660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !10661 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10662
  %2 = or i32 %1, 1, !dbg !10662
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10662
  ret void, !dbg !10663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !10664 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10665
  %2 = or i32 %1, 1, !dbg !10665
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10665
  ret void, !dbg !10666
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #18 !dbg !10667 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10668
  %2 = lshr i32 %1, 1, !dbg !10669
  %3 = and i32 %2, 1, !dbg !10669
  ret i32 %3, !dbg !10670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #3 !dbg !10671 {
  ret i32 16000000, !dbg !10673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !10676 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10677
  ret void, !dbg !10678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !10679 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10683, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.value(metadata i32 262144, metadata !10684, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10685, metadata !DIExpression()), !dbg !10686
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10687
  %2 = and i32 %1, -16580609, !dbg !10687
  %3 = or i32 %2, 4456448, !dbg !10687
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10687
  ret void, !dbg !10688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #3 !dbg !10689 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !10690
  %2 = zext i8 %1 to i32, !dbg !10690
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !10690
  ret i32 %3, !dbg !10691
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !10692 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #26, !dbg !10693
  ret void, !dbg !10694
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #15 !dbg !10695 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !10697, metadata !DIExpression()), !dbg !10699
  %2 = bitcast i32* %1 to i8*, !dbg !10700
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10700
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10698, metadata !DIExpression()), !dbg !10701
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10702
  %4 = or i32 %3, 1, !dbg !10702
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10702
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10703
  %6 = and i32 %5, 1, !dbg !10703
  store volatile i32 %6, i32* %1, align 4, !dbg !10704
  %7 = load volatile i32, i32* %1, align 4, !dbg !10705
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10706
  ret void, !dbg !10706
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10707 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10709, metadata !DIExpression()), !dbg !10710
  %2 = tail call fastcc zeroext i1 @device_is_ready.148() #26, !dbg !10711
  br i1 %2, label %3, label %4, !dbg !10713

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10714
  br label %4, !dbg !10715

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10710
  ret i32 %5, !dbg !10716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.148() unnamed_addr #1 !dbg !10717 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10721, metadata !DIExpression()), !dbg !10722
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10723, !srcloc !10725
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.149() #26, !dbg !10726
  ret i1 %1, !dbg !10727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10728 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10729
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10730
  ret void, !dbg !10731
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10734, metadata !DIExpression()), !dbg !10735
  %2 = icmp eq i32 %0, 10, !dbg !10736
  br i1 %2, label %3, label %4, !dbg !10738

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10739
  br label %4, !dbg !10741

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10742
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10743
  ret i32 %0, !dbg !10744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10745 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10748, metadata !DIExpression()), !dbg !10750
  call void @llvm.dbg.value(metadata i8 %0, metadata !10749, metadata !DIExpression()), !dbg !10750
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10751, !srcloc !10753
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10754
  ret void, !dbg !10755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10756 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10758, metadata !DIExpression()), !dbg !10761
  call void @llvm.dbg.value(metadata i8 %0, metadata !10759, metadata !DIExpression()), !dbg !10761
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10762
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10760, metadata !DIExpression()), !dbg !10761
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10763
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10763
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #27, !dbg !10764
  ret void, !dbg !10765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.149() unnamed_addr #1 !dbg !10766 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10768, metadata !DIExpression()), !dbg !10769
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #27, !dbg !10770
  ret i1 %1, !dbg !10771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !10772 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10819, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10820, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10821, metadata !DIExpression()), !dbg !10822
  ret void, !dbg !10823
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define internal i32 @tc_shim_init(%struct.device* nocapture noundef readnone %0) #21 !dbg !10824 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10826, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 0, metadata !10827, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 0, metadata !10827, metadata !DIExpression()), !dbg !10828
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 0, i32 0), align 4, !dbg !10829
  call void @llvm.dbg.value(metadata i32 1, metadata !10827, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 1, metadata !10827, metadata !DIExpression()), !dbg !10828
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 1, i32 0), align 4, !dbg !10829
  call void @llvm.dbg.value(metadata i32 2, metadata !10827, metadata !DIExpression()), !dbg !10828
  ret i32 0, !dbg !10833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @tc_query_caps(%struct.device* nocapture noundef readnone %0) #3 !dbg !10834 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10836, metadata !DIExpression()), !dbg !10837
  ret i32 50, !dbg !10838
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_setup(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #1 !dbg !10839 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10841, metadata !DIExpression()), !dbg !10849
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !10842, metadata !DIExpression()), !dbg !10849
  call void @llvm.dbg.value(metadata i32 %2, metadata !10843, metadata !DIExpression()), !dbg !10849
  call void @llvm.dbg.value(metadata i32 %3, metadata !10844, metadata !DIExpression()), !dbg !10849
  call void @llvm.dbg.value(metadata i32 %4, metadata !10845, metadata !DIExpression()), !dbg !10849
  %6 = icmp eq i32 %2, 1, !dbg !10850
  br i1 %6, label %8, label %7, !dbg !10852

7:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 69) #27, !dbg !10853
  br label %70, !dbg !10859

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 7, !dbg !10860
  %10 = load i16, i16* %9, align 2, !dbg !10860
  %11 = and i16 %10, 32, !dbg !10862
  %12 = icmp eq i16 %11, 0, !dbg !10862
  br i1 %12, label %13, label %14, !dbg !10863

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.154, i32 0, i32 0), i32 noundef 69) #27, !dbg !10864
  br label %70, !dbg !10870

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 6, !dbg !10871
  %16 = load i16, i16* %15, align 4, !dbg !10871
  %17 = icmp eq i16 %16, 16, !dbg !10873
  br i1 %17, label %19, label %18, !dbg !10874

18:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.155, i32 0, i32 0), i32 noundef 69) #27, !dbg !10875
  br label %70, !dbg !10881

19:                                               ; preds = %14
  %20 = icmp eq i32 %4, 1, !dbg !10882
  br i1 %20, label %21, label %37, !dbg !10884

21:                                               ; preds = %19
  switch i32 %3, label %36 [
    i32 2, label %22
    i32 3, label %25
    i32 4, label %33
  ], !dbg !10885

22:                                               ; preds = %21
  %23 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10887
  %24 = bitcast %union.anon.3* %23 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10887
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_encrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %24, align 4, !dbg !10889
  br label %53, !dbg !10890

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !10891
  %27 = load i32, i32* %26, align 4, !dbg !10891
  %28 = icmp eq i32 %27, 32, !dbg !10893
  br i1 %28, label %30, label %29, !dbg !10894

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !10895
  br label %70, !dbg !10901

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10902
  %32 = bitcast %union.anon.3* %31 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10902
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %32, align 4, !dbg !10903
  br label %53, !dbg !10904

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10905
  %35 = bitcast %union.anon.3* %34 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !10905
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_encrypt_mac, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %35, align 4, !dbg !10906
  br label %53, !dbg !10907

36:                                               ; preds = %21
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !10908
  br label %70, !dbg !10913

37:                                               ; preds = %19
  switch i32 %3, label %52 [
    i32 2, label %38
    i32 3, label %41
    i32 4, label %49
  ], !dbg !10914

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10916
  %40 = bitcast %union.anon.3* %39 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10916
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_decrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %40, align 4, !dbg !10918
  br label %53, !dbg !10919

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !10920
  %43 = load i32, i32* %42, align 4, !dbg !10920
  %44 = icmp eq i32 %43, 32, !dbg !10922
  br i1 %44, label %46, label %45, !dbg !10923

45:                                               ; preds = %41
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !10924
  br label %70, !dbg !10930

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10931
  %48 = bitcast %union.anon.3* %47 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10931
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %48, align 4, !dbg !10932
  br label %53, !dbg !10933

49:                                               ; preds = %37
  %50 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10934
  %51 = bitcast %union.anon.3* %50 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !10934
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_decrypt_auth, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %51, align 4, !dbg !10935
  br label %53, !dbg !10936

52:                                               ; preds = %37
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !10937
  br label %70, !dbg !10942

53:                                               ; preds = %38, %46, %49, %22, %30, %33
  %54 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !10943
  store i32 %3, i32* %54, align 4, !dbg !10944
  %55 = tail call fastcc i32 @get_unused_session() #26, !dbg !10945
  call void @llvm.dbg.value(metadata i32 %55, metadata !10848, metadata !DIExpression()), !dbg !10849
  %56 = icmp eq i32 %55, 2, !dbg !10946
  br i1 %56, label %57, label %58, !dbg !10948

57:                                               ; preds = %53
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.158, i32 0, i32 0), i32 noundef 69) #27, !dbg !10949
  br label %70, !dbg !10955

58:                                               ; preds = %53
  %59 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, !dbg !10956
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %59, metadata !10846, metadata !DIExpression()), !dbg !10849
  %60 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, i32 1, !dbg !10957
  %61 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 1, i32 0, !dbg !10959
  %62 = load i8*, i8** %61, align 4, !dbg !10959
  %63 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef nonnull %60, i8* noundef %62) #27, !dbg !10960
  %64 = icmp eq i32 %63, 0, !dbg !10961
  br i1 %64, label %65, label %67, !dbg !10962

65:                                               ; preds = %58
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.159, i32 0, i32 0), i32 noundef 69) #27, !dbg !10963
  %66 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %59, i32 0, i32 0, !dbg !10969
  store i32 0, i32* %66, align 4, !dbg !10970
  br label %70, !dbg !10971

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !10972
  %69 = bitcast i8** %68 to %struct.tc_shim_drv_state**, !dbg !10973
  store %struct.tc_shim_drv_state* %59, %struct.tc_shim_drv_state** %69, align 4, !dbg !10973
  br label %70, !dbg !10974

70:                                               ; preds = %67, %65, %57, %52, %45, %36, %29, %18, %13, %7
  %71 = phi i32 [ -22, %7 ], [ -22, %18 ], [ -22, %36 ], [ -28, %57 ], [ -5, %65 ], [ 0, %67 ], [ -22, %29 ], [ -22, %52 ], [ -22, %45 ], [ -22, %13 ], !dbg !10849
  ret i32 %71, !dbg !10975
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_free(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef readonly %1) #1 !dbg !10976 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10978, metadata !DIExpression()), !dbg !10981
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !10979, metadata !DIExpression()), !dbg !10981
  %3 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !10982
  %4 = load i8*, i8** %3, align 4, !dbg !10982
  call void @llvm.dbg.value(metadata i8* %4, metadata !10980, metadata !DIExpression()), !dbg !10981
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 180) #27, !dbg !10983
  %6 = bitcast i8* %4 to i32*, !dbg !10984
  store i32 0, i32* %6, align 4, !dbg !10985
  ret i32 0, !dbg !10986
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_encrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !10987 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !10989, metadata !DIExpression()), !dbg !10993
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !10990, metadata !DIExpression()), !dbg !10993
  call void @llvm.dbg.value(metadata i8* %2, metadata !10991, metadata !DIExpression()), !dbg !10993
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !10994
  %5 = bitcast i8** %4 to %struct.tc_shim_drv_state**, !dbg !10994
  %6 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %5, align 4, !dbg !10994
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %6, metadata !10992, metadata !DIExpression()), !dbg !10993
  %7 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !10995
  %8 = load i8*, i8** %7, align 4, !dbg !10995
  %9 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !10997
  %10 = load i32, i32* %9, align 4, !dbg !10997
  %11 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !10998
  %12 = load i8*, i8** %11, align 4, !dbg !10998
  %13 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !10999
  %14 = load i32, i32* %13, align 4, !dbg !10999
  %15 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %6, i32 0, i32 1, !dbg !11000
  %16 = tail call i32 @tc_cbc_mode_encrypt(i8* noundef %8, i32 noundef %10, i8* noundef %12, i32 noundef %14, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %15) #27, !dbg !11001
  %17 = icmp eq i32 %16, 0, !dbg !11002
  br i1 %17, label %18, label %19, !dbg !11003

18:                                               ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.168, i32 0, i32 0), i32 noundef 69) #27, !dbg !11004
  br label %22, !dbg !11010

19:                                               ; preds = %3
  %20 = load i32, i32* %13, align 4, !dbg !11011
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11012
  store i32 %20, i32* %21, align 4, !dbg !11013
  br label %22, !dbg !11014

22:                                               ; preds = %19, %18
  %23 = phi i32 [ -5, %18 ], [ 0, %19 ], !dbg !10993
  ret i32 %23, !dbg !11015
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ctr_op(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11016 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11018, metadata !DIExpression()), !dbg !11024
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11019, metadata !DIExpression()), !dbg !11024
  call void @llvm.dbg.value(metadata i8* %2, metadata !11020, metadata !DIExpression()), !dbg !11024
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11025
  %6 = bitcast i8** %5 to %struct.tc_shim_drv_state**, !dbg !11025
  %7 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %6, align 4, !dbg !11025
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %7, metadata !11021, metadata !DIExpression()), !dbg !11024
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !11026
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11026
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !11022, metadata !DIExpression()), !dbg !11027
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %8, i8 0, i32 16, i1 false), !dbg !11027
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 6, !dbg !11028
  %10 = load i16, i16* %9, align 4, !dbg !11028
  %11 = zext i16 %10 to i32, !dbg !11029
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, i32 0, i32 0, !dbg !11030
  %13 = load i32, i32* %12, align 4, !dbg !11030
  %14 = lshr i32 %13, 3, !dbg !11031
  %15 = sub nsw i32 %11, %14, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %15, metadata !11023, metadata !DIExpression()), !dbg !11024
  %16 = call i8* @memcpy(i8* noundef nonnull %8, i8* noundef %2, i32 noundef %15) #27, !dbg !11033
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11034
  %18 = load i8*, i8** %17, align 4, !dbg !11034
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11036
  %20 = load i32, i32* %19, align 4, !dbg !11036
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11037
  %22 = load i8*, i8** %21, align 4, !dbg !11037
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11038
  %24 = load i32, i32* %23, align 4, !dbg !11038
  %25 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %7, i32 0, i32 1, !dbg !11039
  %26 = call i32 @tc_ctr_mode(i8* noundef %18, i32 noundef %20, i8* noundef %22, i32 noundef %24, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef nonnull %25) #27, !dbg !11040
  %27 = icmp eq i32 %26, 0, !dbg !11041
  br i1 %27, label %28, label %29, !dbg !11042

28:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.167, i32 0, i32 0), i32 noundef 69) #27, !dbg !11043
  br label %32, !dbg !11049

29:                                               ; preds = %3
  %30 = load i32, i32* %23, align 4, !dbg !11050
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11051
  store i32 %30, i32* %31, align 4, !dbg !11052
  br label %32, !dbg !11053

32:                                               ; preds = %29, %28
  %33 = phi i32 [ -5, %28 ], [ 0, %29 ], !dbg !11024
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11054
  ret i32 %33, !dbg !11054
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_encrypt_mac(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11055 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11057, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11058, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i8* %2, metadata !11059, metadata !DIExpression()), !dbg !11072
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11073
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11073
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11060, metadata !DIExpression()), !dbg !11074
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11075
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11075
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11075
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11068, metadata !DIExpression()), !dbg !11072
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11076
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11077
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11069, metadata !DIExpression()), !dbg !11072
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11078
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11078
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11071, metadata !DIExpression()), !dbg !11072
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11079
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11081
  %15 = load i16, i16* %14, align 2, !dbg !11081
  %16 = zext i16 %15 to i32, !dbg !11082
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11083
  %18 = load i16, i16* %17, align 2, !dbg !11083
  %19 = zext i16 %18 to i32, !dbg !11084
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11085
  %21 = icmp eq i32 %20, 0, !dbg !11086
  br i1 %21, label %22, label %23, !dbg !11087

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11.165, i32 0, i32 0), i32 noundef 69) #27, !dbg !11088
  br label %56, !dbg !11094

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11095
  %25 = load i8*, i8** %24, align 4, !dbg !11095
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11097
  %27 = load i32, i32* %26, align 4, !dbg !11097
  %28 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11098
  %29 = load i8*, i8** %28, align 4, !dbg !11098
  %30 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11099
  %31 = load i32, i32* %30, align 4, !dbg !11099
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11100
  %33 = load i8*, i8** %32, align 4, !dbg !11100
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11101
  %35 = load i32, i32* %34, align 4, !dbg !11101
  %36 = call i32 @tc_ccm_generation_encryption(i8* noundef %25, i32 noundef %27, i8* noundef %29, i32 noundef %31, i8* noundef %33, i32 noundef %35, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11102
  %37 = icmp eq i32 %36, 0, !dbg !11103
  br i1 %37, label %38, label %39, !dbg !11104

38:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.166, i32 0, i32 0), i32 noundef 69) #27, !dbg !11105
  br label %56, !dbg !11111

39:                                               ; preds = %23
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11112
  %41 = load i8*, i8** %40, align 4, !dbg !11112
  %42 = icmp eq i8* %41, null, !dbg !11114
  br i1 %42, label %50, label %43, !dbg !11115

43:                                               ; preds = %39
  %44 = load i8*, i8** %24, align 4, !dbg !11116
  %45 = load i32, i32* %34, align 4, !dbg !11118
  %46 = getelementptr inbounds i8, i8* %44, i32 %45, !dbg !11119
  %47 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11120
  %48 = load i32, i32* %47, align 4, !dbg !11120
  %49 = call i8* @memcpy(i8* noundef nonnull %41, i8* noundef %46, i32 noundef %48) #27, !dbg !11121
  br label %50, !dbg !11122

50:                                               ; preds = %43, %39
  %51 = load i32, i32* %34, align 4, !dbg !11123
  %52 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11124
  %53 = load i32, i32* %52, align 4, !dbg !11124
  %54 = add i32 %53, %51, !dbg !11125
  %55 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11126
  store i32 %54, i32* %55, align 4, !dbg !11127
  br label %56, !dbg !11128

56:                                               ; preds = %50, %38, %22
  %57 = phi i32 [ -5, %22 ], [ -5, %38 ], [ 0, %50 ], !dbg !11072
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11129
  ret i32 %57, !dbg !11129
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_decrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef readnone %2) #1 !dbg !11130 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11132, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11133, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.value(metadata i8* %2, metadata !11134, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* undef, metadata !11135, metadata !DIExpression()), !dbg !11136
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11137
  %5 = load i8*, i8** %4, align 4, !dbg !11137
  %6 = icmp eq i8* %5, %2, !dbg !11139
  br i1 %6, label %8, label %7, !dbg !11140

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.163, i32 0, i32 0), i32 noundef 69) #27, !dbg !11141
  br label %27, !dbg !11147

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11148
  %10 = bitcast i8** %9 to %struct.tc_shim_drv_state**, !dbg !11148
  %11 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %10, align 4, !dbg !11148
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %11, metadata !11135, metadata !DIExpression()), !dbg !11136
  %12 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11149
  %13 = load i8*, i8** %12, align 4, !dbg !11149
  %14 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11151
  %15 = load i32, i32* %14, align 4, !dbg !11151
  %16 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !11152
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11153
  %18 = load i32, i32* %17, align 4, !dbg !11153
  %19 = add nsw i32 %18, -16, !dbg !11154
  %20 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %11, i32 0, i32 1, !dbg !11155
  %21 = tail call i32 @tc_cbc_mode_decrypt(i8* noundef %13, i32 noundef %15, i8* noundef nonnull %16, i32 noundef %19, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %20) #27, !dbg !11156
  %22 = icmp eq i32 %21, 0, !dbg !11157
  br i1 %22, label %23, label %24, !dbg !11158

23:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14.164, i32 0, i32 0), i32 noundef 69) #27, !dbg !11159
  br label %27, !dbg !11165

24:                                               ; preds = %8
  %25 = load i32, i32* %17, align 4, !dbg !11166
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11167
  store i32 %25, i32* %26, align 4, !dbg !11168
  br label %27, !dbg !11169

27:                                               ; preds = %24, %23, %7
  %28 = phi i32 [ -5, %7 ], [ -5, %23 ], [ 0, %24 ], !dbg !11136
  ret i32 %28, !dbg !11170
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_decrypt_auth(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11171 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11173, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11174, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i8* %2, metadata !11175, metadata !DIExpression()), !dbg !11180
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11181
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11181
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11176, metadata !DIExpression()), !dbg !11182
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11183
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11183
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11183
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11177, metadata !DIExpression()), !dbg !11180
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11184
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11185
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11178, metadata !DIExpression()), !dbg !11180
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11186
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11186
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11179, metadata !DIExpression()), !dbg !11180
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11187
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11189
  %15 = load i16, i16* %14, align 2, !dbg !11189
  %16 = zext i16 %15 to i32, !dbg !11190
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11191
  %18 = load i16, i16* %17, align 2, !dbg !11191
  %19 = zext i16 %18 to i32, !dbg !11192
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11193
  %21 = icmp eq i32 %20, 0, !dbg !11194
  br i1 %21, label %22, label %23, !dbg !11195

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15.160, i32 0, i32 0), i32 noundef 69) #27, !dbg !11196
  br label %54, !dbg !11202

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11203
  %25 = load i8*, i8** %24, align 4, !dbg !11203
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11205
  %27 = load i8*, i8** %26, align 4, !dbg !11205
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11206
  %29 = load i32, i32* %28, align 4, !dbg !11206
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !11207
  %31 = icmp eq i8* %25, %30, !dbg !11208
  br i1 %31, label %33, label %32, !dbg !11209

32:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16.161, i32 0, i32 0), i32 noundef 69) #27, !dbg !11210
  br label %54, !dbg !11216

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11217
  %35 = load i8*, i8** %34, align 4, !dbg !11217
  %36 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11219
  %37 = load i32, i32* %36, align 4, !dbg !11219
  %38 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11220
  %39 = load i8*, i8** %38, align 4, !dbg !11220
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11221
  %41 = load i32, i32* %40, align 4, !dbg !11221
  %42 = load i16, i16* %17, align 2, !dbg !11222
  %43 = zext i16 %42 to i32, !dbg !11223
  %44 = add nsw i32 %29, %43, !dbg !11224
  %45 = call i32 @tc_ccm_decryption_verification(i8* noundef %35, i32 noundef %37, i8* noundef %39, i32 noundef %41, i8* noundef %27, i32 noundef %44, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11225
  %46 = icmp eq i32 %45, 0, !dbg !11226
  br i1 %46, label %47, label %48, !dbg !11227

47:                                               ; preds = %33
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17.162, i32 0, i32 0), i32 noundef 69) #27, !dbg !11228
  br label %54, !dbg !11234

48:                                               ; preds = %33
  %49 = load i32, i32* %28, align 4, !dbg !11235
  %50 = load i16, i16* %17, align 2, !dbg !11236
  %51 = zext i16 %50 to i32, !dbg !11237
  %52 = add nsw i32 %49, %51, !dbg !11238
  %53 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11239
  store i32 %52, i32* %53, align 4, !dbg !11240
  br label %54, !dbg !11241

54:                                               ; preds = %48, %47, %32, %22
  %55 = phi i32 [ -5, %22 ], [ -5, %32 ], [ -5, %47 ], [ 0, %48 ], !dbg !11180
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11242
  ret i32 %55, !dbg !11242
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @get_unused_session() unnamed_addr #14 !dbg !11243 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11245, metadata !DIExpression()), !dbg !11246
  br label %1, !dbg !11247

1:                                                ; preds = %0, %8
  %2 = phi i1 [ true, %0 ], [ false, %8 ]
  %3 = phi i32 [ 0, %0 ], [ 1, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11245, metadata !DIExpression()), !dbg !11246
  %4 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %3, i32 0, !dbg !11249
  %5 = load i32, i32* %4, align 4, !dbg !11249
  %6 = icmp eq i32 %5, 0, !dbg !11253
  br i1 %6, label %7, label %8, !dbg !11254

7:                                                ; preds = %1
  store i32 1, i32* %4, align 4, !dbg !11255
  br label %9, !dbg !11257

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11245, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11246
  br i1 %2, label %1, label %9, !dbg !11247, !llvm.loop !11258

9:                                                ; preds = %8, %7
  %10 = phi i32 [ %3, %7 ], [ 2, %8 ]
  ret i32 %10, !dbg !11260
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !11261 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11263, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.value(metadata i8 %1, metadata !11264, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.value(metadata i32 %2, metadata !11265, metadata !DIExpression()), !dbg !11268
  %5 = bitcast i32* %4 to i8*, !dbg !11269
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11269
  call void @llvm.dbg.value(metadata i32* %4, metadata !11267, metadata !DIExpression(DW_OP_deref)), !dbg !11268
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !11270
  call void @llvm.dbg.value(metadata i32 %6, metadata !11266, metadata !DIExpression()), !dbg !11268
  %7 = icmp eq i32 %6, 0, !dbg !11271
  br i1 %7, label %8, label %31, !dbg !11273

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !11266, metadata !DIExpression()), !dbg !11268
  %9 = and i32 %2, 131072, !dbg !11274
  %10 = icmp eq i32 %9, 0, !dbg !11276
  br i1 %10, label %28, label %11, !dbg !11277

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !11278
  %13 = icmp eq i32 %12, 0, !dbg !11281
  br i1 %13, label %18, label %14, !dbg !11282

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !11283
  %16 = shl nuw i32 1, %15, !dbg !11283
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !11285
  br label %25, !dbg !11286

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !11287
  %20 = icmp eq i32 %19, 0, !dbg !11289
  %21 = zext i8 %1 to i32, !dbg !11268
  br i1 %20, label %25, label %22, !dbg !11290

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !11291
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !11293
  br label %25, !dbg !11294

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !11295
  %27 = load i32, i32* %4, align 4, !dbg !11296
  call void @llvm.dbg.value(metadata i32 %30, metadata !11267, metadata !DIExpression()), !dbg !11268
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !11297
  br label %31, !dbg !11298

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !11295
  %30 = load i32, i32* %4, align 4, !dbg !11296
  call void @llvm.dbg.value(metadata i32 %30, metadata !11267, metadata !DIExpression()), !dbg !11268
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !11297
  call void @llvm.dbg.value(metadata i32 0, metadata !11266, metadata !DIExpression()), !dbg !11268
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11299
  ret i32 %6, !dbg !11299
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #18 !dbg !11300 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11304, metadata !DIExpression()), !dbg !11309
  call void @llvm.dbg.value(metadata i32* %1, metadata !11305, metadata !DIExpression()), !dbg !11309
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11310
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11310
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11310
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11306, metadata !DIExpression()), !dbg !11309
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11311
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11311
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11311
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11308, metadata !DIExpression()), !dbg !11309
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !11312
  store i32 %9, i32* %1, align 4, !dbg !11313
  ret i32 0, !dbg !11314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !11315 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11317, metadata !DIExpression()), !dbg !11323
  call void @llvm.dbg.value(metadata i32 %1, metadata !11318, metadata !DIExpression()), !dbg !11323
  call void @llvm.dbg.value(metadata i32 %2, metadata !11319, metadata !DIExpression()), !dbg !11323
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11324
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !11324
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !11324
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !11320, metadata !DIExpression()), !dbg !11323
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !11325
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !11325
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !11325
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !11321, metadata !DIExpression()), !dbg !11323
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !11326
  call void @llvm.dbg.value(metadata i32 %10, metadata !11322, metadata !DIExpression()), !dbg !11323
  %11 = xor i32 %1, -1, !dbg !11327
  %12 = and i32 %10, %11, !dbg !11328
  %13 = and i32 %2, %1, !dbg !11329
  %14 = or i32 %12, %13, !dbg !11330
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !11331
  ret i32 0, !dbg !11332
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !11333 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11335, metadata !DIExpression()), !dbg !11339
  call void @llvm.dbg.value(metadata i32 %1, metadata !11336, metadata !DIExpression()), !dbg !11339
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11340
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11340
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11340
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11337, metadata !DIExpression()), !dbg !11339
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11341
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11341
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11341
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11338, metadata !DIExpression()), !dbg !11339
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !11342
  store volatile i32 %1, i32* %9, align 4, !dbg !11342
  ret i32 0, !dbg !11343
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !11344 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11346, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.value(metadata i32 %1, metadata !11347, metadata !DIExpression()), !dbg !11350
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11351
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11351
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11351
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11348, metadata !DIExpression()), !dbg !11350
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11352
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11352
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11352
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11349, metadata !DIExpression()), !dbg !11350
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !11353
  ret i32 0, !dbg !11354
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !11355 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11357, metadata !DIExpression()), !dbg !11361
  call void @llvm.dbg.value(metadata i32 %1, metadata !11358, metadata !DIExpression()), !dbg !11361
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11362
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11362
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11362
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11359, metadata !DIExpression()), !dbg !11361
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11363
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11363
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11363
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11360, metadata !DIExpression()), !dbg !11361
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !11364
  %10 = load volatile i32, i32* %9, align 4, !dbg !11364
  %11 = xor i32 %10, %1, !dbg !11364
  store volatile i32 %11, i32* %9, align 4, !dbg !11364
  ret i32 0, !dbg !11365
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11366 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11368, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i8 %1, metadata !11369, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i32 %2, metadata !11370, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i32 %3, metadata !11371, metadata !DIExpression()), !dbg !11378
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11379
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11379
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11379
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11372, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i8* undef, metadata !11373, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i32 0, metadata !11375, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.value(metadata i32 0, metadata !11376, metadata !DIExpression()), !dbg !11378
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !11380

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !11381
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !11385
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11386
  %12 = load i32, i32* %11, align 4, !dbg !11386
  %13 = icmp eq i32 %10, %12, !dbg !11387
  br i1 %13, label %14, label %29, !dbg !11388

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !11389
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !11391
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !11392
  br label %29, !dbg !11393

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11394
  %17 = load i8*, i8** %16, align 4, !dbg !11394
  call void @llvm.dbg.value(metadata i8* %17, metadata !11373, metadata !DIExpression()), !dbg !11378
  %18 = zext i8 %1 to i32, !dbg !11395
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !11397
  %20 = icmp eq i32 %19, 0, !dbg !11398
  br i1 %20, label %21, label %29, !dbg !11399

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11400
  %23 = load i32, i32* %22, align 4, !dbg !11400
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !11401
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !11402

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !11375, metadata !DIExpression()), !dbg !11378
  br label %27, !dbg !11403

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !11375, metadata !DIExpression()), !dbg !11378
  br label %27, !dbg !11405

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !11375, metadata !DIExpression()), !dbg !11378
  br label %27, !dbg !11406

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !11378
  call void @llvm.dbg.value(metadata i32 %28, metadata !11375, metadata !DIExpression()), !dbg !11378
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !11407
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !11408
  br label %29, !dbg !11408

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !11378
  call void @llvm.dbg.value(metadata i32 %30, metadata !11376, metadata !DIExpression()), !dbg !11378
  call void @llvm.dbg.label(metadata !11377), !dbg !11409
  ret i32 %30, !dbg !11410
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !11411 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11413, metadata !DIExpression()), !dbg !11417
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11414, metadata !DIExpression()), !dbg !11417
  call void @llvm.dbg.value(metadata i1 %2, metadata !11415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11417
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11418
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !11418
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !11418
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !11416, metadata !DIExpression()), !dbg !11417
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !11419
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !11420
  ret i32 %8, !dbg !11421
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !11422 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11428, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11429, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i1 %2, metadata !11430, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11431
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !11432
  br i1 %4, label %10, label %5, !dbg !11434

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11435
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !11438
  %8 = or i1 %7, %2, !dbg !11439
  %9 = select i1 %8, i32 0, i32 -22, !dbg !11439
  br i1 %2, label %11, label %13, !dbg !11439

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !11440

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11441
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !11444
  br label %13, !dbg !11445

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !11431
  ret i32 %14, !dbg !11446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11447 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11451, metadata !DIExpression()), !dbg !11452
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11453
  %3 = icmp eq %struct._snode* %2, null, !dbg !11453
  ret i1 %3, !dbg !11453
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !11454 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11458, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11459, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11460, metadata !DIExpression()), !dbg !11462
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11463
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11461, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11460, metadata !DIExpression()), !dbg !11462
  %4 = icmp eq %struct._snode* %3, null, !dbg !11465
  br i1 %4, label %15, label %5, !dbg !11463

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11461, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11460, metadata !DIExpression()), !dbg !11462
  %6 = icmp eq %struct._snode* %3, %1, !dbg !11467
  br i1 %6, label %9, label %11, !dbg !11470

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11461, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11460, metadata !DIExpression()), !dbg !11462
  %8 = icmp eq %struct._snode* %13, %1, !dbg !11467
  br i1 %8, label %9, label %11, !dbg !11470, !llvm.loop !11471

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !11472
  br label %15, !dbg !11472

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11461, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11460, metadata !DIExpression()), !dbg !11462
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !11465
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11461, metadata !DIExpression()), !dbg !11462
  %14 = icmp eq %struct._snode* %13, null, !dbg !11465
  br i1 %14, label %15, label %7, !dbg !11463, !llvm.loop !11471

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !11475 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11479, metadata !DIExpression()), !dbg !11481
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11480, metadata !DIExpression()), !dbg !11481
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11482
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !11482
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !11482
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11483
  %5 = icmp eq %struct._snode* %4, null, !dbg !11483
  br i1 %5, label %6, label %8, !dbg !11482

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11485
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !11485
  br label %8, !dbg !11485

8:                                                ; preds = %6, %2
  ret void, !dbg !11482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11487 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11491, metadata !DIExpression()), !dbg !11492
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11493
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11493
  ret %struct._snode* %3, !dbg !11494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11495 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11499, metadata !DIExpression()), !dbg !11501
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11500, metadata !DIExpression()), !dbg !11501
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11502
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11503
  ret void, !dbg !11504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11505 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11507, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11508, metadata !DIExpression()), !dbg !11509
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11510
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11511
  ret void, !dbg !11512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11513 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11515, metadata !DIExpression()), !dbg !11516
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11517
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11517
  ret %struct._snode* %3, !dbg !11518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11519 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11521, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11522, metadata !DIExpression()), !dbg !11523
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11524
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11525
  ret void, !dbg !11526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !11527 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11531, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11532, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !11533, metadata !DIExpression()), !dbg !11534
  %4 = icmp eq %struct._snode* %1, null, !dbg !11535
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !11537
  br i1 %4, label %6, label %11, !dbg !11538

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !11539
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11541
  %8 = icmp eq %struct._snode* %7, %2, !dbg !11541
  br i1 %8, label %9, label %15, !dbg !11539

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11543
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !11543
  br label %15, !dbg !11543

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !11545
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11547
  %13 = icmp eq %struct._snode* %12, %2, !dbg !11547
  br i1 %13, label %14, label %15, !dbg !11545

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !11549
  br label %15, !dbg !11549

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !11538
  ret void, !dbg !11538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !11551 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11555, metadata !DIExpression()), !dbg !11556
  %2 = icmp eq %struct._snode* %0, null, !dbg !11557
  br i1 %2, label %5, label %3, !dbg !11557

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !11557
  br label %5, !dbg !11557

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !11557
  ret %struct._snode* %6, !dbg !11557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11558 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11560, metadata !DIExpression()), !dbg !11561
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !11562
  ret %struct._snode* %2, !dbg !11562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11563 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11565, metadata !DIExpression()), !dbg !11566
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11567
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11567
  ret %struct._snode* %3, !dbg !11568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !11569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11571, metadata !DIExpression()), !dbg !11574
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !11575, !range !11576
  call void @llvm.dbg.value(metadata i32 %2, metadata !11572, metadata !DIExpression()), !dbg !11574
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !11577
  call void @llvm.dbg.value(metadata i32 %3, metadata !11573, metadata !DIExpression()), !dbg !11574
  ret i32 %3, !dbg !11578
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !11579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11581, metadata !DIExpression()), !dbg !11584
  call void @llvm.dbg.value(metadata i8* %1, metadata !11582, metadata !DIExpression()), !dbg !11584
  call void @llvm.dbg.value(metadata i8* %1, metadata !11583, metadata !DIExpression()), !dbg !11584
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11585
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !11585
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11586
  %6 = bitcast i8* %5 to %struct.device**, !dbg !11586
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !11586
  %8 = shl nuw i32 1, %0, !dbg !11587
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !11588
  ret void, !dbg !11589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11590 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !11594, metadata !DIExpression()), !dbg !11600
  call void @llvm.dbg.value(metadata i32 %1, metadata !11595, metadata !DIExpression()), !dbg !11600
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11596, metadata !DIExpression()), !dbg !11600
  %4 = bitcast i64* %3 to i8*, !dbg !11601
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11601
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !11598, metadata !DIExpression()), !dbg !11600
  store i64 4294967328, i64* %3, align 8, !dbg !11602
  call void @llvm.dbg.value(metadata i64* %3, metadata !11598, metadata !DIExpression(DW_OP_deref)), !dbg !11600
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !11603
  call void @llvm.dbg.value(metadata i32 %5, metadata !11599, metadata !DIExpression()), !dbg !11600
  %6 = icmp eq i32 %5, 0, !dbg !11604
  br i1 %6, label %7, label %8, !dbg !11606

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !11607
  br label %8, !dbg !11608

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11609
  ret void, !dbg !11609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !11610 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11612, metadata !DIExpression()), !dbg !11615
  call void @llvm.dbg.value(metadata i8* %0, metadata !11613, metadata !DIExpression()), !dbg !11615
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !11616
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !11614, metadata !DIExpression()), !dbg !11615
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !11617
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !11617
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !11618
  ret i32 %5, !dbg !11619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11622, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.value(metadata i32 %1, metadata !11623, metadata !DIExpression()), !dbg !11625
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !11626
  call void @llvm.dbg.value(metadata i32 %3, metadata !11624, metadata !DIExpression()), !dbg !11625
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !11627
  ret void, !dbg !11628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #3 !dbg !11629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11633, metadata !DIExpression()), !dbg !11634
  %2 = sdiv i32 %0, 4, !dbg !11635
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !11636
  %6 = add nsw i32 %5, 16, !dbg !11637
  %7 = shl i32 15, %6, !dbg !11638
  %8 = or i32 %7, %2, !dbg !11639
  ret i32 %8, !dbg !11640
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11646, metadata !DIExpression()), !dbg !11648
  call void @llvm.dbg.value(metadata i32 %1, metadata !11647, metadata !DIExpression()), !dbg !11648
  %3 = and i32 %1, 3, !dbg !11649
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !11649
  %5 = load volatile i32, i32* %4, align 4, !dbg !11649
  %6 = lshr i32 %1, 16, !dbg !11649
  %7 = xor i32 %6, -1, !dbg !11649
  %8 = and i32 %5, %7, !dbg !11649
  call void @llvm.dbg.value(metadata i32 %6, metadata !11650, metadata !DIExpression()) #25, !dbg !11654
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11656, !srcloc !11657
  call void @llvm.dbg.value(metadata i32 %9, metadata !11653, metadata !DIExpression()) #25, !dbg !11654
  call void @llvm.dbg.value(metadata i32 %9, metadata !11658, metadata !DIExpression()) #25, !dbg !11663
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !11665, !range !9395
  %11 = shl i32 %0, %10, !dbg !11649
  %12 = or i32 %11, %8, !dbg !11649
  store volatile i32 %12, i32* %4, align 4, !dbg !11649
  ret void, !dbg !11666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11667 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11671, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !11672, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata i32 %2, metadata !11673, metadata !DIExpression()), !dbg !11676
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11677
  %5 = icmp eq %struct._snode* %4, null, !dbg !11677
  br i1 %5, label %21, label %6, !dbg !11677

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !11679
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11675, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !11674, metadata !DIExpression()), !dbg !11676
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !11680
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !11680
  %11 = load i32, i32* %10, align 4, !dbg !11680
  %12 = and i32 %11, %2, !dbg !11684
  %13 = icmp eq i32 %12, 0, !dbg !11684
  br i1 %13, label %19, label %14, !dbg !11685

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !11674, metadata !DIExpression()), !dbg !11676
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !11686
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !11686
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !11686
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !11688
  br label %19, !dbg !11689

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11674, metadata !DIExpression()), !dbg !11676
  %20 = icmp eq %struct._snode* %8, null, !dbg !11690
  br i1 %20, label %21, label %6, !dbg !11690

21:                                               ; preds = %19, %3
  ret void, !dbg !11691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !11692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11694, metadata !DIExpression()), !dbg !11695
  %2 = and i32 %0, 3, !dbg !11696
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !11696
  %4 = load volatile i32, i32* %3, align 4, !dbg !11696
  %5 = lshr i32 %0, 16, !dbg !11696
  %6 = and i32 %4, %5, !dbg !11696
  call void @llvm.dbg.value(metadata i32 %5, metadata !11650, metadata !DIExpression()) #25, !dbg !11697
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !11699, !srcloc !11657
  call void @llvm.dbg.value(metadata i32 %7, metadata !11653, metadata !DIExpression()) #25, !dbg !11697
  call void @llvm.dbg.value(metadata i32 %7, metadata !11658, metadata !DIExpression()) #25, !dbg !11700
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11702, !range !9395
  %9 = lshr i32 %6, %8, !dbg !11703
  ret i32 %9, !dbg !11704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11705 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11710, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i32 %1, metadata !11711, metadata !DIExpression()), !dbg !11712
  %3 = shl i32 %1, 16, !dbg !11713
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !11713
  store volatile i32 %3, i32* %4, align 4, !dbg !11713
  ret void, !dbg !11714
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !11715 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11719, metadata !DIExpression()), !dbg !11720
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11721
  %3 = load volatile i32, i32* %2, align 4, !dbg !11721
  ret i32 %3, !dbg !11722
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11723 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11725, metadata !DIExpression()), !dbg !11727
  call void @llvm.dbg.value(metadata i32 %1, metadata !11726, metadata !DIExpression()), !dbg !11727
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11728
  store volatile i32 %1, i32* %3, align 4, !dbg !11728
  ret void, !dbg !11729
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !11730 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11732, metadata !DIExpression()), !dbg !11733
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !11734
  %3 = load volatile i32, i32* %2, align 4, !dbg !11734
  ret i32 %3, !dbg !11735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !11736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11740, metadata !DIExpression()), !dbg !11742
  call void @llvm.dbg.value(metadata i32* %1, metadata !11741, metadata !DIExpression()), !dbg !11742
  %3 = and i32 %0, 131072, !dbg !11743
  %4 = icmp eq i32 %3, 0, !dbg !11745
  br i1 %4, label %22, label %5, !dbg !11746

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !11747
  %6 = and i32 %0, 2, !dbg !11749
  %7 = icmp eq i32 %6, 0, !dbg !11751
  br i1 %7, label %11, label %8, !dbg !11752

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !11753
  %10 = icmp eq i32 %9, 0, !dbg !11753
  br i1 %10, label %33, label %11, !dbg !11756

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11757
  store i32 %12, i32* %1, align 4, !dbg !11757
  %13 = and i32 %0, 16, !dbg !11758
  %14 = icmp eq i32 %13, 0, !dbg !11760
  br i1 %14, label %17, label %15, !dbg !11761

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11762
  br label %31, !dbg !11764

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11765
  %19 = icmp eq i32 %18, 0, !dbg !11767
  br i1 %19, label %33, label %20, !dbg !11768

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11769
  br label %31, !dbg !11771

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11772
  %24 = icmp eq i32 %23, 0, !dbg !11774
  br i1 %24, label %31, label %25, !dbg !11775

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11776
  %27 = icmp eq i32 %26, 0, !dbg !11779
  br i1 %27, label %28, label %31, !dbg !11780

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11781
  br label %33, !dbg !11782

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !11742
  ret i32 %34, !dbg !11782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11783 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11787, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i32 %1, metadata !11788, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i32 %2, metadata !11789, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i32 %3, metadata !11790, metadata !DIExpression()), !dbg !11798
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11799
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11799
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11799
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11791, metadata !DIExpression()), !dbg !11798
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11800
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11800
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11800
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11792, metadata !DIExpression()), !dbg !11798
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !11801
  call void @llvm.dbg.value(metadata i32 %11, metadata !11793, metadata !DIExpression()), !dbg !11798
  %12 = and i32 %2, 48, !dbg !11802
  call void @llvm.dbg.value(metadata i32 %12, metadata !11794, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.value(metadata i32 %2, metadata !11795, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11798
  call void @llvm.dbg.value(metadata i32 %2, metadata !11796, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11798
  call void @llvm.dbg.value(metadata i32 %2, metadata !11797, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11798
  %13 = lshr i32 %2, 6, !dbg !11803
  %14 = and i32 %13, 1, !dbg !11803
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !11804
  %15 = lshr i32 %2, 7, !dbg !11805
  %16 = and i32 %15, 3, !dbg !11805
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !11806
  %17 = lshr i32 %2, 9, !dbg !11807
  %18 = and i32 %17, 3, !dbg !11807
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !11808
  %19 = icmp eq i32 %12, 32, !dbg !11809
  br i1 %19, label %20, label %24, !dbg !11811

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11812
  br i1 %21, label %22, label %23, !dbg !11815

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11816
  br label %24, !dbg !11818

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11819
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11821
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !11822
  ret void, !dbg !11823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #3 !dbg !11824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11826, metadata !DIExpression()), !dbg !11828
  %2 = shl nuw i32 1, %0, !dbg !11829
  call void @llvm.dbg.value(metadata i32 %2, metadata !11827, metadata !DIExpression()), !dbg !11828
  ret i32 %2, !dbg !11830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11831 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11835, metadata !DIExpression()), !dbg !11838
  call void @llvm.dbg.value(metadata i32 %1, metadata !11836, metadata !DIExpression()), !dbg !11838
  call void @llvm.dbg.value(metadata i32 %2, metadata !11837, metadata !DIExpression()), !dbg !11838
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11839
  %5 = load volatile i32, i32* %4, align 4, !dbg !11839
  %6 = xor i32 %1, -1, !dbg !11839
  %7 = and i32 %5, %6, !dbg !11839
  %8 = mul i32 %2, %1, !dbg !11839
  %9 = or i32 %7, %8, !dbg !11839
  store volatile i32 %9, i32* %4, align 4, !dbg !11839
  ret void, !dbg !11840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11841 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11843, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.value(metadata i32 %1, metadata !11844, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.value(metadata i32 %2, metadata !11845, metadata !DIExpression()), !dbg !11846
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11847
  %5 = load volatile i32, i32* %4, align 4, !dbg !11847
  call void @llvm.dbg.value(metadata i32 %1, metadata !11650, metadata !DIExpression()) #25, !dbg !11848
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11850, !srcloc !11657
  call void @llvm.dbg.value(metadata i32 %6, metadata !11653, metadata !DIExpression()) #25, !dbg !11848
  call void @llvm.dbg.value(metadata i32 %6, metadata !11658, metadata !DIExpression()) #25, !dbg !11851
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11853, !range !9395
  %8 = shl nuw nsw i32 %7, 1, !dbg !11847
  %9 = shl i32 3, %8, !dbg !11847
  %10 = xor i32 %9, -1, !dbg !11847
  %11 = and i32 %5, %10, !dbg !11847
  call void @llvm.dbg.value(metadata i32 %1, metadata !11650, metadata !DIExpression()) #25, !dbg !11854
  call void @llvm.dbg.value(metadata i32 %6, metadata !11653, metadata !DIExpression()) #25, !dbg !11854
  call void @llvm.dbg.value(metadata i32 %6, metadata !11658, metadata !DIExpression()) #25, !dbg !11856
  %12 = shl i32 %2, %8, !dbg !11847
  %13 = or i32 %11, %12, !dbg !11847
  store volatile i32 %13, i32* %4, align 4, !dbg !11847
  ret void, !dbg !11858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11859 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11861, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 %1, metadata !11862, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 %2, metadata !11863, metadata !DIExpression()), !dbg !11864
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11865
  %5 = load volatile i32, i32* %4, align 4, !dbg !11865
  call void @llvm.dbg.value(metadata i32 %1, metadata !11650, metadata !DIExpression()) #25, !dbg !11866
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11868, !srcloc !11657
  call void @llvm.dbg.value(metadata i32 %6, metadata !11653, metadata !DIExpression()) #25, !dbg !11866
  call void @llvm.dbg.value(metadata i32 %6, metadata !11658, metadata !DIExpression()) #25, !dbg !11869
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11871, !range !9395
  %8 = shl nuw nsw i32 %7, 1, !dbg !11865
  %9 = shl i32 3, %8, !dbg !11865
  %10 = xor i32 %9, -1, !dbg !11865
  %11 = and i32 %5, %10, !dbg !11865
  call void @llvm.dbg.value(metadata i32 %1, metadata !11650, metadata !DIExpression()) #25, !dbg !11872
  call void @llvm.dbg.value(metadata i32 %6, metadata !11653, metadata !DIExpression()) #25, !dbg !11872
  call void @llvm.dbg.value(metadata i32 %6, metadata !11658, metadata !DIExpression()) #25, !dbg !11874
  %12 = shl i32 %2, %8, !dbg !11865
  %13 = or i32 %11, %12, !dbg !11865
  store volatile i32 %13, i32* %4, align 4, !dbg !11865
  ret void, !dbg !11876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11877 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11879, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata i32 %1, metadata !11880, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata i32 %2, metadata !11881, metadata !DIExpression()), !dbg !11882
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11883
  %5 = load volatile i32, i32* %4, align 4, !dbg !11883
  call void @llvm.dbg.value(metadata i32 %1, metadata !11650, metadata !DIExpression()) #25, !dbg !11884
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11886, !srcloc !11657
  call void @llvm.dbg.value(metadata i32 %6, metadata !11653, metadata !DIExpression()) #25, !dbg !11884
  call void @llvm.dbg.value(metadata i32 %6, metadata !11658, metadata !DIExpression()) #25, !dbg !11887
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11889, !range !9395
  %8 = shl nuw nsw i32 %7, 2, !dbg !11883
  %9 = shl i32 15, %8, !dbg !11883
  %10 = xor i32 %9, -1, !dbg !11883
  %11 = and i32 %5, %10, !dbg !11883
  call void @llvm.dbg.value(metadata i32 %1, metadata !11650, metadata !DIExpression()) #25, !dbg !11890
  call void @llvm.dbg.value(metadata i32 %6, metadata !11653, metadata !DIExpression()) #25, !dbg !11890
  call void @llvm.dbg.value(metadata i32 %6, metadata !11658, metadata !DIExpression()) #25, !dbg !11892
  %12 = shl i32 %2, %8, !dbg !11883
  %13 = or i32 %11, %12, !dbg !11883
  store volatile i32 %13, i32* %4, align 4, !dbg !11883
  ret void, !dbg !11894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11895 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11897, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.value(metadata i32 %1, metadata !11898, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.value(metadata i32 %2, metadata !11899, metadata !DIExpression()), !dbg !11900
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11901
  %5 = load volatile i32, i32* %4, align 4, !dbg !11901
  %6 = lshr i32 %1, 8, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %6, metadata !11650, metadata !DIExpression()) #25, !dbg !11902
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11904, !srcloc !11657
  call void @llvm.dbg.value(metadata i32 %7, metadata !11653, metadata !DIExpression()) #25, !dbg !11902
  call void @llvm.dbg.value(metadata i32 %7, metadata !11658, metadata !DIExpression()) #25, !dbg !11905
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11907, !range !9395
  %9 = shl nuw nsw i32 %8, 2, !dbg !11901
  %10 = shl i32 15, %9, !dbg !11901
  %11 = xor i32 %10, -1, !dbg !11901
  %12 = and i32 %5, %11, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %6, metadata !11650, metadata !DIExpression()) #25, !dbg !11908
  call void @llvm.dbg.value(metadata i32 %7, metadata !11653, metadata !DIExpression()) #25, !dbg !11908
  call void @llvm.dbg.value(metadata i32 %7, metadata !11658, metadata !DIExpression()) #25, !dbg !11910
  %13 = shl i32 %2, %9, !dbg !11901
  %14 = or i32 %12, %13, !dbg !11901
  store volatile i32 %14, i32* %4, align 4, !dbg !11901
  ret void, !dbg !11912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11913 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11915, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.value(metadata i32 %1, metadata !11916, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.value(metadata i32 %2, metadata !11917, metadata !DIExpression()), !dbg !11918
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11919
  %5 = load volatile i32, i32* %4, align 4, !dbg !11919
  call void @llvm.dbg.value(metadata i32 %1, metadata !11650, metadata !DIExpression()) #25, !dbg !11920
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11922, !srcloc !11657
  call void @llvm.dbg.value(metadata i32 %6, metadata !11653, metadata !DIExpression()) #25, !dbg !11920
  call void @llvm.dbg.value(metadata i32 %6, metadata !11658, metadata !DIExpression()) #25, !dbg !11923
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11925, !range !9395
  %8 = shl nuw nsw i32 %7, 1, !dbg !11919
  %9 = shl i32 3, %8, !dbg !11919
  %10 = xor i32 %9, -1, !dbg !11919
  %11 = and i32 %5, %10, !dbg !11919
  call void @llvm.dbg.value(metadata i32 %1, metadata !11650, metadata !DIExpression()) #25, !dbg !11926
  call void @llvm.dbg.value(metadata i32 %6, metadata !11653, metadata !DIExpression()) #25, !dbg !11926
  call void @llvm.dbg.value(metadata i32 %6, metadata !11658, metadata !DIExpression()) #25, !dbg !11928
  %12 = shl i32 %2, %8, !dbg !11919
  %13 = or i32 %11, %12, !dbg !11919
  store volatile i32 %13, i32* %4, align 4, !dbg !11919
  ret void, !dbg !11930
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11931 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11933, metadata !DIExpression()), !dbg !11936
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11937
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11937
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11937
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11934, metadata !DIExpression()), !dbg !11936
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11938
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11939
  %6 = tail call fastcc zeroext i1 @device_is_ready.180() #26, !dbg !11940
  br i1 %6, label %7, label %11, !dbg !11942

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !11943
  call void @llvm.dbg.value(metadata i32 %8, metadata !11935, metadata !DIExpression()), !dbg !11936
  %9 = icmp slt i32 %8, 0, !dbg !11944
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11946
  br label %11, !dbg !11946

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11936
  ret i32 %12, !dbg !11947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.180() unnamed_addr #1 !dbg !11948 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11952, metadata !DIExpression()), !dbg !11953
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11954, !srcloc !11956
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.181() #26, !dbg !11957
  ret i1 %1, !dbg !11958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11959 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11963, metadata !DIExpression()), !dbg !11968
  call void @llvm.dbg.value(metadata i8 1, metadata !11964, metadata !DIExpression()), !dbg !11968
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !11965, metadata !DIExpression()), !dbg !11968
  call void @llvm.dbg.value(metadata i32 0, metadata !11966, metadata !DIExpression()), !dbg !11968
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11967, metadata !DIExpression()), !dbg !11968
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11969
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11969
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11969
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11965, metadata !DIExpression()), !dbg !11968
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11970
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11973
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !11974
  call void @llvm.dbg.value(metadata i32 %7, metadata !11966, metadata !DIExpression()), !dbg !11968
  call void @llvm.dbg.value(metadata i32 %7, metadata !11966, metadata !DIExpression()), !dbg !11968
  ret i32 %7, !dbg !11975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.181() unnamed_addr #1 !dbg !11976 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11978, metadata !DIExpression()), !dbg !11979
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !11980
  ret i1 %1, !dbg !11981
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11982 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11986, metadata !DIExpression()), !dbg !11994
  call void @llvm.dbg.value(metadata i32 %1, metadata !11987, metadata !DIExpression()), !dbg !11994
  call void @llvm.dbg.value(metadata i32 %2, metadata !11988, metadata !DIExpression()), !dbg !11994
  call void @llvm.dbg.value(metadata i32 %3, metadata !11989, metadata !DIExpression()), !dbg !11994
  call void @llvm.dbg.value(metadata i32 0, metadata !11990, metadata !DIExpression()), !dbg !11994
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !11995
  %5 = icmp eq i32 %3, 17, !dbg !11996
  br i1 %5, label %6, label %14, !dbg !11997

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11998
  call void @llvm.dbg.value(metadata i32 %7, metadata !11991, metadata !DIExpression()), !dbg !11999
  %8 = icmp eq i32 %7, 0, !dbg !12000
  %9 = shl nuw i32 1, %1, !dbg !12002
  br i1 %8, label %12, label %10, !dbg !12003

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !12004
  br label %14, !dbg !12006

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !12007
  br label %14, !dbg !12010

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !12011
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !12012 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12014, metadata !DIExpression()), !dbg !12018
  call void @llvm.dbg.value(metadata i8* %1, metadata !12015, metadata !DIExpression()), !dbg !12018
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12019
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12019
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12019
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12016, metadata !DIExpression()), !dbg !12018
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12020
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12020
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !12022
  %9 = icmp eq i32 %8, 0, !dbg !12022
  br i1 %9, label %12, label %10, !dbg !12023

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12024
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !12026
  br label %12, !dbg !12027

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12028
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12030
  %15 = icmp eq i32 %14, 0, !dbg !12030
  br i1 %15, label %19, label %16, !dbg !12031

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12032
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !12033
  store i8 %18, i8* %1, align 1, !dbg !12034
  br label %19, !dbg !12035

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !12018
  ret i32 %20, !dbg !12036
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !12037 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12039, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata i8 %1, metadata !12040, metadata !DIExpression()), !dbg !12043
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12044
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12044
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12044
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12041, metadata !DIExpression()), !dbg !12043
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !12045

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12046
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !12049
  %10 = icmp eq i32 %9, 0, !dbg !12049
  br i1 %10, label %18, label %11, !dbg !12050

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12051, !srcloc !12058
  call void @llvm.dbg.value(metadata i32 undef, metadata !12054, metadata !DIExpression()) #25, !dbg !12059
  call void @llvm.dbg.value(metadata i32 undef, metadata !12055, metadata !DIExpression()) #25, !dbg !12059
  call void @llvm.dbg.value(metadata i32 undef, metadata !12042, metadata !DIExpression()), !dbg !12043
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12060
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12062
  %15 = icmp eq i32 %14, 0, !dbg !12062
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !12051
  br i1 %15, label %17, label %19, !dbg !12063

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !12054, metadata !DIExpression()) #25, !dbg !12059
  call void @llvm.dbg.value(metadata i32 %16, metadata !12042, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata i32 undef, metadata !12064, metadata !DIExpression()) #25, !dbg !12067
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !12069, !srcloc !12070
  br label %18, !dbg !12071

18:                                               ; preds = %17, %7
  br label %7, !dbg !12046, !llvm.loop !12072

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !12051
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12074
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !12075
  call void @llvm.dbg.value(metadata i32 %20, metadata !12064, metadata !DIExpression()) #25, !dbg !12076
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !12078, !srcloc !12070
  ret void, !dbg !12079
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !12080 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12082, metadata !DIExpression()), !dbg !12085
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12086
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12086
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12086
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12083, metadata !DIExpression()), !dbg !12085
  call void @llvm.dbg.value(metadata i32 0, metadata !12084, metadata !DIExpression()), !dbg !12085
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12087
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12087
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !12089
  %8 = icmp ne i32 %7, 0, !dbg !12089
  %9 = zext i1 %8 to i32, !dbg !12090
  call void @llvm.dbg.value(metadata i32 %9, metadata !12084, metadata !DIExpression()), !dbg !12085
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12091
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !12093
  %12 = icmp eq i32 %11, 0, !dbg !12093
  %13 = or i32 %9, 2, !dbg !12094
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !12094
  call void @llvm.dbg.value(metadata i32 %14, metadata !12084, metadata !DIExpression()), !dbg !12085
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12095
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !12097
  %17 = icmp eq i32 %16, 0, !dbg !12097
  %18 = or i32 %14, 4, !dbg !12098
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !12098
  call void @llvm.dbg.value(metadata i32 %19, metadata !12084, metadata !DIExpression()), !dbg !12085
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12099
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !12101
  %22 = icmp eq i32 %21, 0, !dbg !12101
  %23 = or i32 %19, 8, !dbg !12102
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !12102
  call void @llvm.dbg.value(metadata i32 %24, metadata !12084, metadata !DIExpression()), !dbg !12085
  %25 = and i32 %24, 8, !dbg !12103
  %26 = icmp eq i32 %25, 0, !dbg !12103
  br i1 %26, label %29, label %27, !dbg !12105

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12106
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !12108
  br label %29, !dbg !12109

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !12110
  %31 = icmp eq i32 %30, 0, !dbg !12110
  br i1 %31, label %34, label %32, !dbg !12112

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12113
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !12115
  br label %34, !dbg !12116

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !12117
  %36 = icmp eq i32 %35, 0, !dbg !12117
  br i1 %36, label %39, label %37, !dbg !12119

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12120
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !12122
  br label %39, !dbg !12123

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !12124
  %41 = icmp eq i32 %40, 0, !dbg !12124
  br i1 %41, label %44, label %42, !dbg !12126

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12127
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !12129
  br label %44, !dbg !12130

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12131
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !12132
  ret i32 %24, !dbg !12133
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !12134 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12136, metadata !DIExpression()), !dbg !12145
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12137, metadata !DIExpression()), !dbg !12145
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12146
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12146
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12146
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12138, metadata !DIExpression()), !dbg !12145
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12147
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !12147
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !12147
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !12139, metadata !DIExpression()), !dbg !12145
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12148
  %10 = load i8, i8* %9, align 4, !dbg !12148
  %11 = zext i8 %10 to i32, !dbg !12149
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !12150
  call void @llvm.dbg.value(metadata i32 %12, metadata !12141, metadata !DIExpression()), !dbg !12145
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12151
  %14 = load i8, i8* %13, align 1, !dbg !12151
  %15 = zext i8 %14 to i32, !dbg !12152
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !12153
  call void @llvm.dbg.value(metadata i32 %16, metadata !12142, metadata !DIExpression()), !dbg !12145
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12154
  %18 = load i8, i8* %17, align 2, !dbg !12154
  %19 = zext i8 %18 to i32, !dbg !12155
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !12156
  call void @llvm.dbg.value(metadata i32 %20, metadata !12143, metadata !DIExpression()), !dbg !12145
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12157
  %22 = load i8, i8* %21, align 1, !dbg !12157
  %23 = zext i8 %22 to i32, !dbg !12158
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !12159
  call void @llvm.dbg.value(metadata i32 %24, metadata !12144, metadata !DIExpression()), !dbg !12145
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !12160

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !12162
  br i1 %26, label %69, label %27, !dbg !12164

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !12165

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !12166
  br i1 %29, label %65, label %30, !dbg !12166

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !12168
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !12145
  br i1 %31, label %38, label %34, !dbg !12170

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !12171
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !12171

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !12174
  br i1 %37, label %38, label %69, !dbg !12175

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12176
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !12177
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !12178
  %41 = icmp eq i32 %12, %40, !dbg !12180
  br i1 %41, label %43, label %42, !dbg !12181

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !12182
  br label %43, !dbg !12184

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !12185
  %45 = icmp eq i32 %16, %44, !dbg !12187
  br i1 %45, label %47, label %46, !dbg !12188

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !12189
  br label %47, !dbg !12191

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !12192
  %49 = icmp eq i32 %20, %48, !dbg !12194
  br i1 %49, label %51, label %50, !dbg !12195

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !12196
  br label %51, !dbg !12198

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !12199
  %53 = icmp eq i32 %24, %52, !dbg !12201
  br i1 %53, label %55, label %54, !dbg !12202

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !12203
  br label %55, !dbg !12205

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12206
  %57 = load i32, i32* %56, align 4, !dbg !12206
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !12208
  %59 = load i32, i32* %58, align 4, !dbg !12208
  %60 = icmp eq i32 %57, %59, !dbg !12209
  br i1 %60, label %63, label %61, !dbg !12210

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !12211
  %62 = load i32, i32* %56, align 4, !dbg !12213
  store i32 %62, i32* %58, align 4, !dbg !12214
  br label %63, !dbg !12215

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !12216
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !12217
  br label %69, !dbg !12218

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !12166
  %67 = and i8 %66, 1, !dbg !12166
  %68 = icmp eq i8 %67, 0, !dbg !12166
  br i1 %68, label %30, label %69, !dbg !12166

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !12145
  ret i32 %70, !dbg !12219
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !12220 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12222, metadata !DIExpression()), !dbg !12225
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12223, metadata !DIExpression()), !dbg !12225
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12226
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !12226
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !12226
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !12224, metadata !DIExpression()), !dbg !12225
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !12227
  %7 = load i32, i32* %6, align 4, !dbg !12227
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12228
  store i32 %7, i32* %8, align 4, !dbg !12229
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12230, !range !12231
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !12232
  %11 = trunc i32 %10 to i8, !dbg !12232
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12233
  store i8 %11, i8* %12, align 4, !dbg !12234
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !12235, !range !12236
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !12237
  %15 = trunc i32 %14 to i8, !dbg !12237
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12238
  store i8 %15, i8* %16, align 1, !dbg !12239
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !12240
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12241, !range !12231
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !12242
  %20 = trunc i32 %19 to i8, !dbg !12242
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12243
  store i8 %20, i8* %21, align 2, !dbg !12244
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !12245, !range !12246
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !12247
  %24 = trunc i32 %23 to i8, !dbg !12247
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12248
  store i8 %24, i8* %25, align 1, !dbg !12249
  ret i32 0, !dbg !12250
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !12251 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12255, metadata !DIExpression()), !dbg !12257
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12258
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12258
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12258
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12256, metadata !DIExpression()), !dbg !12257
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12259
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12259
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !12260
  ret i32 %7, !dbg !12261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #3 !dbg !12262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12266, metadata !DIExpression()), !dbg !12267
  %2 = icmp eq i32 %0, 1024, !dbg !12268
  %3 = select i1 %2, i32 2, i32 0, !dbg !12268
  %4 = icmp eq i32 %0, 1536, !dbg !12268
  %5 = select i1 %4, i32 1, i32 %3, !dbg !12268
  ret i32 %5, !dbg !12269
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !12270 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12272, metadata !DIExpression()), !dbg !12274
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12275
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12275
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12275
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12273, metadata !DIExpression()), !dbg !12274
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12276
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12276
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !12277
  ret i32 %7, !dbg !12278
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !12279 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12283, metadata !DIExpression()), !dbg !12284
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !12285
  %3 = icmp ult i32 %2, 4, !dbg !12285
  br i1 %3, label %4, label %7, !dbg !12285

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !12285
  %6 = load i32, i32* %5, align 4, !dbg !12285
  br label %7, !dbg !12285

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !12286
  ret i32 %8, !dbg !12288
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !12289 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12291, metadata !DIExpression()), !dbg !12293
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12294
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12294
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12294
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12292, metadata !DIExpression()), !dbg !12293
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12295
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12295
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !12296
  ret i32 %7, !dbg !12297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12302, metadata !DIExpression()), !dbg !12304
  call void @llvm.dbg.value(metadata i32 %1, metadata !12303, metadata !DIExpression()), !dbg !12304
  %3 = icmp eq i32 %0, 4096, !dbg !12305
  %4 = icmp eq i32 %1, 0, !dbg !12305
  %5 = select i1 %4, i32 4, i32 3, !dbg !12305
  %6 = select i1 %4, i32 3, i32 2, !dbg !12305
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !12305
  ret i32 %7, !dbg !12306
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !12307 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12309, metadata !DIExpression()), !dbg !12311
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12312
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12312
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12312
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12310, metadata !DIExpression()), !dbg !12311
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12313
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12313
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !12314
  ret i32 %7, !dbg !12315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12320, metadata !DIExpression()), !dbg !12321
  %2 = icmp eq i32 %0, 768, !dbg !12322
  %3 = zext i1 %2 to i32, !dbg !12321
  ret i32 %3, !dbg !12324
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12325 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12330, metadata !DIExpression()), !dbg !12331
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12332
  %3 = load volatile i32, i32* %2, align 4, !dbg !12332
  %4 = and i32 %3, 768, !dbg !12332
  ret i32 %4, !dbg !12333
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12334 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12336, metadata !DIExpression()), !dbg !12337
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12338
  %3 = load volatile i32, i32* %2, align 4, !dbg !12338
  %4 = and i32 %3, 4096, !dbg !12338
  ret i32 %4, !dbg !12339
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12340 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12342, metadata !DIExpression()), !dbg !12343
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12344
  %3 = load volatile i32, i32* %2, align 4, !dbg !12344
  %4 = and i32 %3, 12288, !dbg !12344
  ret i32 %4, !dbg !12345
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12346 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12348, metadata !DIExpression()), !dbg !12349
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12350
  %3 = load volatile i32, i32* %2, align 4, !dbg !12350
  %4 = and i32 %3, 1536, !dbg !12350
  ret i32 %4, !dbg !12351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #3 !dbg !12352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12356, metadata !DIExpression()), !dbg !12357
  %2 = icmp eq i32 %0, 2, !dbg !12358
  %3 = select i1 %2, i32 1024, i32 0, !dbg !12358
  %4 = icmp eq i32 %0, 1, !dbg !12358
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !12358
  ret i32 %5, !dbg !12359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #3 !dbg !12360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12364, metadata !DIExpression()), !dbg !12365
  %2 = icmp ult i32 %0, 3, !dbg !12366
  br i1 %2, label %3, label %6, !dbg !12366

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !12366
  %5 = load i32, i32* %4, align 4, !dbg !12366
  br label %6, !dbg !12366

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !12367
  ret i32 %7, !dbg !12369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12374, metadata !DIExpression()), !dbg !12376
  call void @llvm.dbg.value(metadata i32 %1, metadata !12375, metadata !DIExpression()), !dbg !12376
  %3 = icmp eq i32 %0, 4, !dbg !12377
  %4 = icmp eq i32 %1, 0, !dbg !12377
  %5 = select i1 %4, i32 0, i32 4096, !dbg !12377
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !12377
  ret i32 %6, !dbg !12378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12383, metadata !DIExpression()), !dbg !12384
  %2 = icmp eq i32 %0, 1, !dbg !12385
  %3 = select i1 %2, i32 768, i32 0, !dbg !12384
  ret i32 %3, !dbg !12387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12388 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12392, metadata !DIExpression()), !dbg !12393
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12394
  %3 = load volatile i32, i32* %2, align 4, !dbg !12394
  %4 = and i32 %3, -8193, !dbg !12394
  store volatile i32 %4, i32* %2, align 4, !dbg !12394
  ret void, !dbg !12395
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12396 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12400, metadata !DIExpression()), !dbg !12403
  call void @llvm.dbg.value(metadata i32 %1, metadata !12401, metadata !DIExpression()), !dbg !12403
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12404
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12404
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12404
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12402, metadata !DIExpression()), !dbg !12403
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12405
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12405
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12406
  ret void, !dbg !12407
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12410, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i32 %1, metadata !12411, metadata !DIExpression()), !dbg !12413
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12414
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12414
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12414
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12412, metadata !DIExpression()), !dbg !12413
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12415
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12415
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12416
  ret void, !dbg !12417
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12418 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12420, metadata !DIExpression()), !dbg !12423
  call void @llvm.dbg.value(metadata i32 %1, metadata !12421, metadata !DIExpression()), !dbg !12423
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12424
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12424
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12424
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12422, metadata !DIExpression()), !dbg !12423
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12425
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12425
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12426
  ret void, !dbg !12427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12428 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12430, metadata !DIExpression()), !dbg !12433
  call void @llvm.dbg.value(metadata i32 %1, metadata !12431, metadata !DIExpression()), !dbg !12433
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12434
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12434
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12434
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12432, metadata !DIExpression()), !dbg !12433
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12435
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12435
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12436
  ret void, !dbg !12437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !12438 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12440, metadata !DIExpression()), !dbg !12445
  call void @llvm.dbg.value(metadata i32 %1, metadata !12441, metadata !DIExpression()), !dbg !12445
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12446
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !12446
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !12446
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !12442, metadata !DIExpression()), !dbg !12445
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12447
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !12447
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !12447
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !12443, metadata !DIExpression()), !dbg !12445
  %10 = bitcast i32* %3 to i8*, !dbg !12448
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12448
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !12449
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !12449
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !12453
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !12453
  %15 = load i8*, i8** %14, align 4, !dbg !12453
  call void @llvm.dbg.value(metadata i32* %3, metadata !12444, metadata !DIExpression(DW_OP_deref)), !dbg !12445
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !12454
  %17 = icmp slt i32 %16, 0, !dbg !12455
  br i1 %17, label %18, label %21, !dbg !12456

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #26, !dbg !12457
  %20 = zext i8 %19 to i32, !dbg !12457
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.185, i32 0, i32 0), i32 noundef %20) #27, !dbg !12457
  br label %26, !dbg !12463

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !12464
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12464
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !12465
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12466
  %25 = load i32, i32* %3, align 4, !dbg !12467
  call void @llvm.dbg.value(metadata i32 %25, metadata !12444, metadata !DIExpression()), !dbg !12445
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !12468
  br label %26, !dbg !12469

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12469
  ret void, !dbg !12469
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12470 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12472, metadata !DIExpression()), !dbg !12473
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12474
  %3 = load volatile i32, i32* %2, align 4, !dbg !12474
  %4 = or i32 %3, 8192, !dbg !12474
  store volatile i32 %4, i32* %2, align 4, !dbg !12474
  ret void, !dbg !12475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !12476 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12478, metadata !DIExpression()), !dbg !12482
  call void @llvm.dbg.value(metadata i8* %1, metadata !12479, metadata !DIExpression()), !dbg !12482
  call void @llvm.dbg.value(metadata i32* %2, metadata !12480, metadata !DIExpression()), !dbg !12482
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12483
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !12483
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !12483
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !12481, metadata !DIExpression()), !dbg !12482
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !12484
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !12484
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !12486
  br i1 %9, label %12, label %10, !dbg !12487

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !12488
  br label %12, !dbg !12489

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !12482
  ret i32 %13, !dbg !12490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef %0) unnamed_addr #3 !dbg !12491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12493, metadata !DIExpression()), !dbg !12494
  %2 = icmp eq i32 %0, 2, !dbg !12495
  %3 = select i1 %2, i8 87, i8 63, !dbg !12495
  %4 = icmp eq i32 %0, 1, !dbg !12495
  %5 = select i1 %4, i8 69, i8 %3, !dbg !12495
  ret i8 %5, !dbg !12496
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12497 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12501, metadata !DIExpression()), !dbg !12503
  call void @llvm.dbg.value(metadata i32 0, metadata !12502, metadata !DIExpression()), !dbg !12503
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12504
  %3 = load volatile i32, i32* %2, align 4, !dbg !12504
  %4 = and i32 %3, -32769, !dbg !12504
  store volatile i32 %4, i32* %2, align 4, !dbg !12504
  ret void, !dbg !12505
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !12506 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12510, metadata !DIExpression()), !dbg !12514
  call void @llvm.dbg.value(metadata i32 %1, metadata !12511, metadata !DIExpression()), !dbg !12514
  call void @llvm.dbg.value(metadata i32 0, metadata !12512, metadata !DIExpression()), !dbg !12514
  call void @llvm.dbg.value(metadata i32 %2, metadata !12513, metadata !DIExpression()), !dbg !12514
  %4 = mul i32 %1, 25, !dbg !12515
  %5 = shl i32 %2, 2, !dbg !12515
  %6 = udiv i32 %4, %5, !dbg !12515
  %7 = udiv i32 %6, 100, !dbg !12515
  %8 = shl nuw nsw i32 %7, 4, !dbg !12515
  %9 = mul i32 %7, -100, !dbg !12515
  %10 = add i32 %9, %6, !dbg !12515
  %11 = shl i32 %10, 4, !dbg !12515
  %12 = add i32 %11, 50, !dbg !12515
  %13 = udiv i32 %12, 100, !dbg !12515
  %14 = and i32 %13, 240, !dbg !12515
  %15 = add nuw nsw i32 %14, %8, !dbg !12515
  %16 = and i32 %13, 15, !dbg !12515
  %17 = and i32 %15, 65520, !dbg !12518
  %18 = or i32 %17, %16, !dbg !12518
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12519
  store volatile i32 %18, i32* %19, align 4, !dbg !12520
  ret void, !dbg !12521
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12522 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12524, metadata !DIExpression()), !dbg !12526
  call void @llvm.dbg.value(metadata i32 %1, metadata !12525, metadata !DIExpression()), !dbg !12526
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12527
  %4 = load volatile i32, i32* %3, align 4, !dbg !12527
  %5 = and i32 %4, -769, !dbg !12527
  %6 = or i32 %5, %1, !dbg !12527
  store volatile i32 %6, i32* %3, align 4, !dbg !12527
  ret void, !dbg !12528
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12529 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12531, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.value(metadata i32 %1, metadata !12532, metadata !DIExpression()), !dbg !12533
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12534
  %4 = load volatile i32, i32* %3, align 4, !dbg !12534
  %5 = and i32 %4, -4097, !dbg !12534
  %6 = or i32 %5, %1, !dbg !12534
  store volatile i32 %6, i32* %3, align 4, !dbg !12534
  ret void, !dbg !12535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12536 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12538, metadata !DIExpression()), !dbg !12540
  call void @llvm.dbg.value(metadata i32 %1, metadata !12539, metadata !DIExpression()), !dbg !12540
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12541
  %4 = load volatile i32, i32* %3, align 4, !dbg !12541
  %5 = and i32 %4, -12289, !dbg !12541
  %6 = or i32 %5, %1, !dbg !12541
  store volatile i32 %6, i32* %3, align 4, !dbg !12541
  ret void, !dbg !12542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12543 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12545, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.value(metadata i32 %1, metadata !12546, metadata !DIExpression()), !dbg !12547
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12548
  %4 = load volatile i32, i32* %3, align 4, !dbg !12548
  %5 = and i32 %4, -1537, !dbg !12548
  %6 = or i32 %5, %1, !dbg !12548
  store volatile i32 %6, i32* %3, align 4, !dbg !12548
  ret void, !dbg !12549
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12550 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12552, metadata !DIExpression()), !dbg !12553
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12554
  %3 = load volatile i32, i32* %2, align 4, !dbg !12554
  %4 = lshr i32 %3, 3, !dbg !12555
  %5 = and i32 %4, 1, !dbg !12555
  ret i32 %5, !dbg !12556
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12557 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12559, metadata !DIExpression()), !dbg !12560
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12561
  %3 = load volatile i32, i32* %2, align 4, !dbg !12561
  %4 = and i32 %3, 1, !dbg !12561
  ret i32 %4, !dbg !12562
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12563 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12565, metadata !DIExpression()), !dbg !12566
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12567
  %3 = load volatile i32, i32* %2, align 4, !dbg !12567
  %4 = lshr i32 %3, 1, !dbg !12568
  %5 = and i32 %4, 1, !dbg !12568
  ret i32 %5, !dbg !12569
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12570 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12572, metadata !DIExpression()), !dbg !12573
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12574
  %3 = load volatile i32, i32* %2, align 4, !dbg !12574
  %4 = lshr i32 %3, 8, !dbg !12575
  %5 = and i32 %4, 1, !dbg !12575
  ret i32 %5, !dbg !12576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12577 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12579, metadata !DIExpression()), !dbg !12580
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12581
  store volatile i32 -257, i32* %2, align 4, !dbg !12581
  ret void, !dbg !12582
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12583 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12585, metadata !DIExpression()), !dbg !12587
  %3 = bitcast i32* %2 to i8*, !dbg !12588
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12588
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12586, metadata !DIExpression()), !dbg !12589
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12590
  %5 = load volatile i32, i32* %4, align 4, !dbg !12590
  store volatile i32 %5, i32* %2, align 4, !dbg !12591
  %6 = load volatile i32, i32* %2, align 4, !dbg !12592
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12593
  %8 = load volatile i32, i32* %7, align 4, !dbg !12593
  store volatile i32 %8, i32* %2, align 4, !dbg !12594
  %9 = load volatile i32, i32* %2, align 4, !dbg !12595
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12596
  ret void, !dbg !12596
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12597 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12599, metadata !DIExpression()), !dbg !12601
  %3 = bitcast i32* %2 to i8*, !dbg !12602
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12602
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12600, metadata !DIExpression()), !dbg !12603
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12604
  %5 = load volatile i32, i32* %4, align 4, !dbg !12604
  store volatile i32 %5, i32* %2, align 4, !dbg !12605
  %6 = load volatile i32, i32* %2, align 4, !dbg !12606
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12607
  %8 = load volatile i32, i32* %7, align 4, !dbg !12607
  store volatile i32 %8, i32* %2, align 4, !dbg !12608
  %9 = load volatile i32, i32* %2, align 4, !dbg !12609
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12610
  ret void, !dbg !12610
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12611 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12613, metadata !DIExpression()), !dbg !12615
  %3 = bitcast i32* %2 to i8*, !dbg !12616
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12616
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12614, metadata !DIExpression()), !dbg !12617
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12618
  %5 = load volatile i32, i32* %4, align 4, !dbg !12618
  store volatile i32 %5, i32* %2, align 4, !dbg !12619
  %6 = load volatile i32, i32* %2, align 4, !dbg !12620
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12621
  %8 = load volatile i32, i32* %7, align 4, !dbg !12621
  store volatile i32 %8, i32* %2, align 4, !dbg !12622
  %9 = load volatile i32, i32* %2, align 4, !dbg !12623
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12624
  ret void, !dbg !12624
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12625 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12627, metadata !DIExpression()), !dbg !12629
  %3 = bitcast i32* %2 to i8*, !dbg !12630
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12630
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12628, metadata !DIExpression()), !dbg !12631
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12632
  %5 = load volatile i32, i32* %4, align 4, !dbg !12632
  store volatile i32 %5, i32* %2, align 4, !dbg !12633
  %6 = load volatile i32, i32* %2, align 4, !dbg !12634
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12635
  %8 = load volatile i32, i32* %7, align 4, !dbg !12635
  store volatile i32 %8, i32* %2, align 4, !dbg !12636
  %9 = load volatile i32, i32* %2, align 4, !dbg !12637
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12638
  ret void, !dbg !12638
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12639 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12641, metadata !DIExpression()), !dbg !12642
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12643
  %3 = load volatile i32, i32* %2, align 4, !dbg !12643
  %4 = lshr i32 %3, 7, !dbg !12644
  %5 = and i32 %4, 1, !dbg !12644
  ret i32 %5, !dbg !12645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !12646 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12650, metadata !DIExpression()), !dbg !12652
  call void @llvm.dbg.value(metadata i8 %1, metadata !12651, metadata !DIExpression()), !dbg !12652
  %3 = zext i8 %1 to i32, !dbg !12653
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12654
  store volatile i32 %3, i32* %4, align 4, !dbg !12655
  ret void, !dbg !12656
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12657 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12659, metadata !DIExpression()), !dbg !12660
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12661
  %3 = load volatile i32, i32* %2, align 4, !dbg !12661
  %4 = lshr i32 %3, 5, !dbg !12662
  %5 = and i32 %4, 1, !dbg !12662
  ret i32 %5, !dbg !12663
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12664 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12668, metadata !DIExpression()), !dbg !12669
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12670
  %3 = load volatile i32, i32* %2, align 4, !dbg !12670
  %4 = trunc i32 %3 to i8, !dbg !12671
  ret i8 %4, !dbg !12672
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !12673 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12675, metadata !DIExpression()), !dbg !12681
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12682
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12682
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12682
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12676, metadata !DIExpression()), !dbg !12681
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12683
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !12683
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !12683
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !12677, metadata !DIExpression()), !dbg !12681
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !12684
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !12685
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !12685
  %10 = tail call fastcc zeroext i1 @device_is_ready.190(%struct.device* noundef %9) #26, !dbg !12687
  br i1 %10, label %14, label %11, !dbg !12688

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #26, !dbg !12689
  %13 = zext i8 %12 to i32, !dbg !12689
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.191, i32 0, i32 0), i32 noundef %13) #27, !dbg !12689
  br label %62, !dbg !12695

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !12696
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !12697
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !12697
  %18 = load i8*, i8** %17, align 4, !dbg !12697
  %19 = tail call fastcc i32 @clock_control_on.192(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !12698
  call void @llvm.dbg.value(metadata i32 %19, metadata !12680, metadata !DIExpression()), !dbg !12681
  %20 = icmp eq i32 %19, 0, !dbg !12699
  br i1 %20, label %24, label %21, !dbg !12701

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #26, !dbg !12702
  %23 = zext i8 %22 to i32, !dbg !12702
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.193, i32 0, i32 0), i32 noundef %23) #27, !dbg !12702
  br label %62, !dbg !12708

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !12709
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !12709
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !12710
  call void @llvm.dbg.value(metadata i32 %27, metadata !12680, metadata !DIExpression()), !dbg !12681
  %28 = icmp slt i32 %27, 0, !dbg !12711
  br i1 %28, label %62, label %29, !dbg !12713

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12714
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12714
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !12715
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12716
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !12717
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !12718
  %34 = load i32, i32* %33, align 4, !dbg !12718
  %35 = icmp ult i32 %34, 3, !dbg !12720
  br i1 %35, label %39, label %36, !dbg !12720

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 2) #26, !dbg !12721
  %38 = zext i8 %37 to i32, !dbg !12721
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6.194, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !12721
  call void @llvm.dbg.value(metadata i32 0, metadata !12678, metadata !DIExpression()), !dbg !12681
  call void @llvm.dbg.value(metadata i32 0, metadata !12679, metadata !DIExpression()), !dbg !12681
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !12720
  %41 = load i32, i32* %40, align 4, !dbg !12720
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.7, i32 0, i32 %34, !dbg !12720
  %43 = load i32, i32* %42, align 4, !dbg !12720
  br label %44, !dbg !12720

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !12730
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !12730
  call void @llvm.dbg.value(metadata i32 %46, metadata !12679, metadata !DIExpression()), !dbg !12681
  call void @llvm.dbg.value(metadata i32 %45, metadata !12678, metadata !DIExpression()), !dbg !12681
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12731
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !12732
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !12733
  %49 = load i8, i8* %48, align 4, !dbg !12733, !range !8600
  %50 = icmp eq i8 %49, 0, !dbg !12733
  br i1 %50, label %52, label %51, !dbg !12735

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !12736
  br label %52, !dbg !12738

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !12739
  %54 = load i32, i32* %53, align 4, !dbg !12739
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !12740
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !12741
  %56 = load i8, i8* %55, align 4, !dbg !12741, !range !8600
  %57 = icmp eq i8 %56, 0, !dbg !12741
  br i1 %57, label %60, label %58, !dbg !12743

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12744
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !12746
  br label %60, !dbg !12747

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12748
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !12749
  br label %62, !dbg !12750

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !12681
  ret i32 %63, !dbg !12751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !12752 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12756, metadata !DIExpression()), !dbg !12760
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12761
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12761
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12761
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12757, metadata !DIExpression()), !dbg !12760
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12758, metadata !DIExpression()), !dbg !12760
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12762
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !12763
  ret void, !dbg !12764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.190(%struct.device* noundef %0) unnamed_addr #1 !dbg !12765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12769, metadata !DIExpression()), !dbg !12770
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12771, !srcloc !12773
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.195(%struct.device* noundef %0) #26, !dbg !12774
  ret i1 %2, !dbg !12775
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.192(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12776 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12778, metadata !DIExpression()), !dbg !12781
  call void @llvm.dbg.value(metadata i8* %1, metadata !12779, metadata !DIExpression()), !dbg !12781
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12782
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12782
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12782
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12780, metadata !DIExpression()), !dbg !12781
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12783
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12783
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !12784
  ret i32 %8, !dbg !12785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12786 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12790, metadata !DIExpression()), !dbg !12794
  call void @llvm.dbg.value(metadata i8 0, metadata !12791, metadata !DIExpression()), !dbg !12794
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12795
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12795
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12793, metadata !DIExpression(DW_OP_deref)), !dbg !12794
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !12796
  call void @llvm.dbg.value(metadata i32 %4, metadata !12792, metadata !DIExpression()), !dbg !12794
  %5 = icmp slt i32 %4, 0, !dbg !12797
  br i1 %5, label %9, label %6, !dbg !12799

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12800
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12793, metadata !DIExpression()), !dbg !12794
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !12801
  br label %9, !dbg !12802

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12794
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12803
  ret i32 %10, !dbg !12803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12804 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12806, metadata !DIExpression()), !dbg !12808
  call void @llvm.dbg.value(metadata i32 12, metadata !12807, metadata !DIExpression()), !dbg !12808
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12809
  %3 = load volatile i32, i32* %2, align 4, !dbg !12809
  %4 = or i32 %3, 12, !dbg !12809
  store volatile i32 %4, i32* %2, align 4, !dbg !12809
  ret void, !dbg !12810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !12811 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12813, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i32 %1, metadata !12814, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i32 %2, metadata !12815, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i32 0, metadata !12816, metadata !DIExpression()), !dbg !12817
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12818
  %5 = load volatile i32, i32* %4, align 4, !dbg !12818
  %6 = and i32 %5, -5633, !dbg !12818
  %7 = or i32 %2, %1, !dbg !12818
  %8 = or i32 %7, %6, !dbg !12818
  store volatile i32 %8, i32* %4, align 4, !dbg !12818
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12819
  %10 = load volatile i32, i32* %9, align 4, !dbg !12819
  %11 = and i32 %10, -12289, !dbg !12819
  store volatile i32 %11, i32* %9, align 4, !dbg !12819
  ret void, !dbg !12820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12821 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12823, metadata !DIExpression()), !dbg !12824
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12825
  %3 = load volatile i32, i32* %2, align 4, !dbg !12825
  %4 = or i32 %3, 8, !dbg !12825
  store volatile i32 %4, i32* %2, align 4, !dbg !12825
  ret void, !dbg !12826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12827 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12831, metadata !DIExpression()), !dbg !12834
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12832, metadata !DIExpression()), !dbg !12834
  call void @llvm.dbg.value(metadata i32 0, metadata !12833, metadata !DIExpression()), !dbg !12834
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12835
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12835
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12836
  %5 = load i8, i8* %4, align 4, !dbg !12836
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !12837
  ret i32 %6, !dbg !12838
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.195(%struct.device* noundef %0) unnamed_addr #1 !dbg !12839 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12841, metadata !DIExpression()), !dbg !12842
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12843
  ret i1 %2, !dbg !12844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !12845 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12847, metadata !DIExpression()), !dbg !12848
  tail call fastcc void @__NVIC_SetPriority.197() #26, !dbg !12849
  store i32 3199, i32* @last_load, align 4, !dbg !12850
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12851
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12852
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12853
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12854
  %3 = or i32 %2, 7, !dbg !12854
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12854
  ret i32 0, !dbg !12855
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.197() unnamed_addr #16 !dbg !12856 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12858, metadata !DIExpression()), !dbg !12860
  call void @llvm.dbg.value(metadata i32 1, metadata !12859, metadata !DIExpression()), !dbg !12860
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12861
  ret void, !dbg !12864
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12865 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12867, metadata !DIExpression()), !dbg !12869
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !12870
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12871
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12872
  %5 = add i32 %4, %3, !dbg !12872
  store i32 %5, i32* @cycle_count, align 4, !dbg !12872
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12873
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12874
  %7 = sub i32 %5, %6, !dbg !12877
  %8 = udiv i32 %7, 3200, !dbg !12878
  call void @llvm.dbg.value(metadata i32 %8, metadata !12868, metadata !DIExpression()), !dbg !12869
  %9 = mul nuw i32 %8, 3200, !dbg !12879
  %10 = add i32 %9, %6, !dbg !12880
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12880
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !12881
  tail call void @z_arm_int_exit() #27, !dbg !12882
  ret void, !dbg !12883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !12884 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12889
  call void @llvm.dbg.value(metadata i32 %1, metadata !12886, metadata !DIExpression()), !dbg !12890
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12891
  call void @llvm.dbg.value(metadata i32 %2, metadata !12887, metadata !DIExpression()), !dbg !12890
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12892
  call void @llvm.dbg.value(metadata i32 %3, metadata !12888, metadata !DIExpression()), !dbg !12890
  %4 = and i32 %2, 65536, !dbg !12893
  %5 = icmp ne i32 %4, 0, !dbg !12893
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12895
  %8 = load i32, i32* @last_load, align 4, !dbg !12890
  br i1 %7, label %9, label %13, !dbg !12895

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12896
  %11 = add i32 %10, %8, !dbg !12896
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12896
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12898
  br label %13, !dbg !12899

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12900
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12901
  %16 = add i32 %14, %15, !dbg !12902
  ret i32 %16, !dbg !12903
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12908, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata i1 %1, metadata !12909, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12921
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12922
  br i1 %4, label %5, label %8, !dbg !12922

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12924
  %7 = and i32 %6, -2, !dbg !12924
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12924
  store i32 -16777216, i32* @last_load, align 4, !dbg !12926
  br label %54, !dbg !12927

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12928
  call void @llvm.dbg.value(metadata i32 %9, metadata !12913, metadata !DIExpression()), !dbg !12921
  br i1 %3, label %18, label %10, !dbg !12929

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12929
  call void @llvm.dbg.value(metadata i32 undef, metadata !12908, metadata !DIExpression()), !dbg !12921
  %12 = icmp slt i32 %11, 1, !dbg !12930
  br i1 %12, label %18, label %13, !dbg !12930

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !12930
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !12930
  %16 = mul nuw nsw i32 %15, 3200, !dbg !12930
  %17 = add nuw nsw i32 %16, 3199, !dbg !12930
  br label %18, !dbg !12930

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12908, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12931, metadata !DIExpression()) #25, !dbg !12938
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12940, !srcloc !12946
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12940
  call void @llvm.dbg.value(metadata i32 %21, metadata !12943, metadata !DIExpression()) #25, !dbg !12947
  call void @llvm.dbg.value(metadata i32 undef, metadata !12944, metadata !DIExpression()) #25, !dbg !12947
  call void @llvm.dbg.value(metadata i32 %21, metadata !12937, metadata !DIExpression()) #25, !dbg !12938
  call void @llvm.dbg.value(metadata i32 %21, metadata !12914, metadata !DIExpression()), !dbg !12921
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !12948
  call void @llvm.dbg.value(metadata i32 %22, metadata !12919, metadata !DIExpression()), !dbg !12921
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12949
  call void @llvm.dbg.value(metadata i32 %23, metadata !12911, metadata !DIExpression()), !dbg !12921
  %24 = load i32, i32* @cycle_count, align 4, !dbg !12950
  %25 = add i32 %24, %22, !dbg !12950
  store i32 %25, i32* @cycle_count, align 4, !dbg !12950
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12951
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !12952
  %27 = sub i32 %25, %26, !dbg !12953
  call void @llvm.dbg.value(metadata i32 %27, metadata !12920, metadata !DIExpression()), !dbg !12921
  %28 = icmp slt i32 %27, 0, !dbg !12954
  br i1 %28, label %38, label %29, !dbg !12956

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !12910, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata i32 undef, metadata !12910, metadata !DIExpression()), !dbg !12921
  %30 = add nuw i32 %19, %27, !dbg !12957
  %31 = urem i32 %30, 3200, !dbg !12959
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !12910, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12921
  %32 = sub nuw nsw i32 %19, %31, !dbg !12960
  call void @llvm.dbg.value(metadata i32 %32, metadata !12910, metadata !DIExpression()), !dbg !12921
  %33 = icmp ugt i32 %32, 1024, !dbg !12961
  br i1 %33, label %34, label %36, !dbg !12961

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !12910, metadata !DIExpression()), !dbg !12921
  %35 = icmp ugt i32 %32, 16771200, !dbg !12962
  br i1 %35, label %38, label %36, !dbg !12964

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16771200, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !12965
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12966
  call void @llvm.dbg.value(metadata i32 %40, metadata !12912, metadata !DIExpression()), !dbg !12921
  %41 = add nsw i32 %39, -1, !dbg !12967
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12968
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12969
  %42 = icmp ult i32 %23, %40, !dbg !12970
  br i1 %42, label %43, label %48, !dbg !12972

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12973
  %45 = add i32 %23, %9, !dbg !12975
  %46 = sub i32 %45, %40, !dbg !12976
  %47 = add i32 %46, %44, !dbg !12973
  br label %52, !dbg !12977

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12978
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12980
  %51 = add i32 %49, %50, !dbg !12980
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12981
  store i32 %53, i32* @cycle_count, align 4, !dbg !12981
  call void @llvm.dbg.value(metadata i32 %21, metadata !12982, metadata !DIExpression()) #25, !dbg !12988
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12987, metadata !DIExpression()) #25, !dbg !12988
  call void @llvm.dbg.value(metadata i32 %21, metadata !12990, metadata !DIExpression()) #25, !dbg !12993
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !12995, !srcloc !12996
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12997
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12998 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12931, metadata !DIExpression()) #25, !dbg !13002
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13004, !srcloc !12946
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13004
  call void @llvm.dbg.value(metadata i32 %2, metadata !12943, metadata !DIExpression()) #25, !dbg !13006
  call void @llvm.dbg.value(metadata i32 undef, metadata !12944, metadata !DIExpression()) #25, !dbg !13006
  call void @llvm.dbg.value(metadata i32 %2, metadata !12937, metadata !DIExpression()) #25, !dbg !13002
  call void @llvm.dbg.value(metadata i32 %2, metadata !13000, metadata !DIExpression()), !dbg !13007
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13008
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13009
  %5 = add i32 %4, %3, !dbg !13010
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !13011
  %7 = sub i32 %5, %6, !dbg !13012
  call void @llvm.dbg.value(metadata i32 %7, metadata !13001, metadata !DIExpression()), !dbg !13007
  call void @llvm.dbg.value(metadata i32 %2, metadata !12982, metadata !DIExpression()) #25, !dbg !13013
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12987, metadata !DIExpression()) #25, !dbg !13013
  call void @llvm.dbg.value(metadata i32 %2, metadata !12990, metadata !DIExpression()) #25, !dbg !13015
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13017, !srcloc !12996
  %8 = udiv i32 %7, 3200, !dbg !13018
  ret i32 %8, !dbg !13019
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !13020 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12931, metadata !DIExpression()) #25, !dbg !13024
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13026, !srcloc !12946
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13026
  call void @llvm.dbg.value(metadata i32 %2, metadata !12943, metadata !DIExpression()) #25, !dbg !13028
  call void @llvm.dbg.value(metadata i32 undef, metadata !12944, metadata !DIExpression()) #25, !dbg !13028
  call void @llvm.dbg.value(metadata i32 %2, metadata !12937, metadata !DIExpression()) #25, !dbg !13024
  call void @llvm.dbg.value(metadata i32 %2, metadata !13022, metadata !DIExpression()), !dbg !13029
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13030
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13031
  %5 = add i32 %4, %3, !dbg !13032
  call void @llvm.dbg.value(metadata i32 %5, metadata !13023, metadata !DIExpression()), !dbg !13029
  call void @llvm.dbg.value(metadata i32 %2, metadata !12982, metadata !DIExpression()) #25, !dbg !13033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12987, metadata !DIExpression()) #25, !dbg !13033
  call void @llvm.dbg.value(metadata i32 %2, metadata !12990, metadata !DIExpression()) #25, !dbg !13035
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13037, !srcloc !12996
  ret i32 %5, !dbg !13038
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !13039 {
  %1 = load i32, i32* @last_load, align 4, !dbg !13040
  %2 = icmp eq i32 %1, -16777216, !dbg !13042
  br i1 %2, label %3, label %6, !dbg !13043

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13044
  %5 = or i32 %4, 1, !dbg !13044
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13044
  br label %6, !dbg !13046

6:                                                ; preds = %3, %0
  ret void, !dbg !13047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !13048 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13049
  %2 = and i32 %1, -2, !dbg !13049
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13049
  ret void, !dbg !13050
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !13077, metadata !DIExpression()), !dbg !13080
  call void @llvm.dbg.value(metadata i8 %1, metadata !13078, metadata !DIExpression()), !dbg !13080
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !13079, metadata !DIExpression()), !dbg !13080
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !13081
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13081
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !13080
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13082
  %8 = load i8, i8* %6, align 4, !dbg !13083
  %9 = zext i8 %8 to i32, !dbg !13084
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !13084
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !13085
  br i1 %11, label %18, label %24, !dbg !13086

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !13080
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13082
  %14 = load i8, i8* %6, align 4, !dbg !13083
  %15 = zext i8 %14 to i32, !dbg !13084
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !13084
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !13085
  br i1 %17, label %18, label %24, !dbg !13086, !llvm.loop !13087

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !13089
  %21 = load i8, i8* %20, align 1, !dbg !13089
  %22 = icmp eq i8 %21, %1, !dbg !13092
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !13093
  br i1 %22, label %24, label %12, !dbg !13094

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !13080
  ret i32 %25, !dbg !13095
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13096 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !13107, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i8 %1, metadata !13108, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 %2, metadata !13109, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 0, metadata !13112, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 0, metadata !13113, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i8 0, metadata !13114, metadata !DIExpression()), !dbg !13124
  %4 = icmp eq i8 %1, 0, !dbg !13125
  br i1 %4, label %35, label %5, !dbg !13126

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !13125
  br label %9, !dbg !13126

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !13114, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata i32 %29, metadata !13112, metadata !DIExpression()), !dbg !13123
  %8 = icmp eq i32 %34, %6, !dbg !13125
  br i1 %8, label %35, label %9, !dbg !13126, !llvm.loop !13127

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13114, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata i32 %11, metadata !13112, metadata !DIExpression()), !dbg !13123
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !13129
  %13 = load i32, i32* %12, align 4, !dbg !13129
  call void @llvm.dbg.value(metadata i32 %13, metadata !13111, metadata !DIExpression()), !dbg !13123
  %14 = and i32 %13, 31, !dbg !13130
  %15 = icmp ult i32 %14, 16, !dbg !13131
  br i1 %15, label %16, label %20, !dbg !13132

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13133
  %18 = load i32, i32* %17, align 4, !dbg !13133
  %19 = or i32 %18, 32, !dbg !13135
  call void @llvm.dbg.value(metadata i32 %19, metadata !13112, metadata !DIExpression()), !dbg !13123
  br label %28, !dbg !13136

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !13137

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13138
  %23 = load i32, i32* %22, align 4, !dbg !13138
  call void @llvm.dbg.value(metadata i32 %23, metadata !13116, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !13139
  %24 = lshr i32 %23, 7, !dbg !13140
  %25 = and i32 %24, 16, !dbg !13140
  %26 = or i32 %25, %23, !dbg !13140
  call void @llvm.dbg.value(metadata i32 %26, metadata !13112, metadata !DIExpression()), !dbg !13123
  br label %28, !dbg !13141

27:                                               ; preds = %20
  br label %28, !dbg !13142

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !13123
  call void @llvm.dbg.value(metadata i32 %29, metadata !13112, metadata !DIExpression()), !dbg !13123
  %30 = lshr i32 %13, 5, !dbg !13142
  %31 = and i32 %30, 255, !dbg !13142
  call void @llvm.dbg.value(metadata i32 %31, metadata !13110, metadata !DIExpression()), !dbg !13123
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !13143
  call void @llvm.dbg.value(metadata i32 %32, metadata !13113, metadata !DIExpression()), !dbg !13123
  %33 = icmp slt i32 %32, 0, !dbg !13144
  %34 = add nuw nsw i32 %10, 1, !dbg !13146
  call void @llvm.dbg.value(metadata i32 %34, metadata !13114, metadata !DIExpression()), !dbg !13124
  br i1 %33, label %35, label %7, !dbg !13147

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !13148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !13149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13153, metadata !DIExpression()), !dbg !13157
  call void @llvm.dbg.value(metadata i32 %1, metadata !13154, metadata !DIExpression()), !dbg !13157
  call void @llvm.dbg.value(metadata i32 %2, metadata !13155, metadata !DIExpression()), !dbg !13157
  %4 = icmp ugt i32 %0, 175, !dbg !13158
  br i1 %4, label %17, label %5, !dbg !13160

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !13161
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !13162
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !13162
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13156, metadata !DIExpression()), !dbg !13157
  %9 = lshr i32 1888, %6, !dbg !13163
  %10 = and i32 %9, 1, !dbg !13163
  %11 = icmp eq i32 %10, 0, !dbg !13163
  br i1 %11, label %12, label %17, !dbg !13165

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.202(%struct.device* noundef %8) #26, !dbg !13166
  br i1 %13, label %14, label %17, !dbg !13167

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !13168
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #27, !dbg !13169
  br label %17, !dbg !13170

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !13157
  ret i32 %18, !dbg !13171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.202(%struct.device* noundef %0) unnamed_addr #1 !dbg !13172 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13176, metadata !DIExpression()), !dbg !13177
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13178, !srcloc !13180
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.203(%struct.device* noundef %0) #26, !dbg !13181
  ret i1 %2, !dbg !13182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.203(%struct.device* noundef %0) unnamed_addr #1 !dbg !13183 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13185, metadata !DIExpression()), !dbg !13186
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !13187
  ret i1 %2, !dbg !13188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !13189 {
  ret void, !dbg !13190
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #18 !dbg !13191 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13193, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata i32 0, metadata !13194, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata i32 0, metadata !13195, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata i32 0, metadata !13196, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata i32 0, metadata !13197, metadata !DIExpression()), !dbg !13198
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13199
  call void @llvm.dbg.value(metadata i32 %1, metadata !13193, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !13198
  %2 = lshr i32 %1, 2, !dbg !13200
  %3 = and i32 %2, 3, !dbg !13200
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !13200

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13201
  %6 = lshr i32 %5, 13, !dbg !13203
  %7 = and i32 %6, 7, !dbg !13203
  call void @llvm.dbg.value(metadata i32 %7, metadata !13197, metadata !DIExpression()), !dbg !13198
  %8 = shl nuw nsw i32 65536, %7, !dbg !13204
  br label %31, !dbg !13205

9:                                                ; preds = %0
  br label %31, !dbg !13206

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13207
  call void @llvm.dbg.value(metadata i32 %11, metadata !13194, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !13198
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13208
  call void @llvm.dbg.value(metadata i32 %12, metadata !13195, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !13198
  %13 = lshr i32 %11, 18, !dbg !13209
  %14 = and i32 %13, 15, !dbg !13209
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !13210
  %16 = load i8, i8* %15, align 1, !dbg !13210
  %17 = zext i8 %16 to i32, !dbg !13210
  call void @llvm.dbg.value(metadata i32 %17, metadata !13194, metadata !DIExpression()), !dbg !13198
  %18 = lshr i32 %12, 22, !dbg !13211
  %19 = and i32 %18, 3, !dbg !13211
  %20 = add nuw nsw i32 %19, 1, !dbg !13212
  call void @llvm.dbg.value(metadata i32 %20, metadata !13195, metadata !DIExpression()), !dbg !13198
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13213
  %22 = and i32 %21, 65536, !dbg !13214
  call void @llvm.dbg.value(metadata i32 %22, metadata !13196, metadata !DIExpression()), !dbg !13198
  %23 = icmp eq i32 %22, 0, !dbg !13215
  br i1 %23, label %24, label %27, !dbg !13217

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !13218
  %26 = udiv i32 %25, %20, !dbg !13220
  br label %31, !dbg !13221

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !13222
  %29 = udiv i32 %28, %20, !dbg !13224
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !13225
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13226
  %34 = lshr i32 %33, 4, !dbg !13227
  %35 = and i32 %34, 15, !dbg !13227
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !13228
  %37 = load i8, i8* %36, align 1, !dbg !13228
  %38 = zext i8 %37 to i32, !dbg !13228
  call void @llvm.dbg.value(metadata i32 %38, metadata !13193, metadata !DIExpression()), !dbg !13198
  %39 = lshr i32 %32, %38, !dbg !13229
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !13229
  ret void, !dbg !13230
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !13231 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13239
  %2 = and i32 %1, 16711935, !dbg !13239
  %3 = or i32 %2, 45056, !dbg !13239
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13239
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13240
  %5 = or i32 %4, 256, !dbg !13240
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13240
  %6 = tail call i32 @HAL_GetTick() #27, !dbg !13241
  call void @llvm.dbg.value(metadata i32 %6, metadata !13237, metadata !DIExpression()), !dbg !13242
  br label %7, !dbg !13243

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13244
  %9 = and i32 %8, 512, !dbg !13244
  %10 = icmp eq i32 %9, 0, !dbg !13245
  br i1 %10, label %11, label %15, !dbg !13243

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #27, !dbg !13246
  %13 = sub i32 %12, %6, !dbg !13249
  %14 = icmp ugt i32 %13, 2, !dbg !13250
  br i1 %14, label %47, label %7, !dbg !13251, !llvm.loop !13252

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13254
  %17 = and i32 %16, -4, !dbg !13254
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13254
  br label %18, !dbg !13255

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13256
  %20 = and i32 %19, 12, !dbg !13256
  %21 = icmp eq i32 %20, 0, !dbg !13257
  br i1 %21, label %26, label %22, !dbg !13255

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #27, !dbg !13258
  %24 = sub i32 %23, %6, !dbg !13261
  %25 = icmp ugt i32 %24, 5000, !dbg !13262
  br i1 %25, label %47, label %18, !dbg !13263, !llvm.loop !13264

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !13266
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !13267
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #27, !dbg !13268
  call void @llvm.dbg.value(metadata i32 %28, metadata !13238, metadata !DIExpression()), !dbg !13242
  %29 = icmp eq i32 %28, 0, !dbg !13269
  br i1 %29, label %30, label %47, !dbg !13271

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13272
  %32 = and i32 %31, -285278210, !dbg !13272
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13272
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13273
  %34 = and i32 %33, -262145, !dbg !13273
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13273
  %35 = tail call i32 @HAL_GetTick() #27, !dbg !13274
  call void @llvm.dbg.value(metadata i32 %35, metadata !13237, metadata !DIExpression()), !dbg !13242
  br label %36, !dbg !13275

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13276
  %38 = and i32 %37, 33554432, !dbg !13276
  %39 = icmp eq i32 %38, 0, !dbg !13277
  br i1 %39, label %44, label %40, !dbg !13275

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #27, !dbg !13278
  %42 = sub i32 %41, %35, !dbg !13281
  %43 = icmp ugt i32 %42, 2, !dbg !13282
  br i1 %43, label %47, label %36, !dbg !13283, !llvm.loop !13284

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13286
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13287
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13288
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13289
  %46 = or i32 %45, 16777216, !dbg !13289
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13289
  br label %47, !dbg !13290

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !13242
  ret i32 %48, !dbg !13291
}

; Function Attrs: optsize
declare !dbg !13292 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13294 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13297 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13323, metadata !DIExpression()), !dbg !13336
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13337
  br i1 %3, label %385, label %4, !dbg !13339

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13340
  %6 = and i32 %5, 12, !dbg !13340
  call void @llvm.dbg.value(metadata i32 %6, metadata !13326, metadata !DIExpression()), !dbg !13336
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13341
  %8 = and i32 %7, 65536, !dbg !13341
  call void @llvm.dbg.value(metadata i32 %8, metadata !13327, metadata !DIExpression()), !dbg !13336
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13342
  %10 = load i32, i32* %9, align 4, !dbg !13342
  %11 = and i32 %10, 1, !dbg !13344
  %12 = icmp eq i32 %11, 0, !dbg !13345
  br i1 %12, label %69, label %13, !dbg !13346

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !13347
  br i1 %14, label %19, label %15, !dbg !13350

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !13351
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !13352
  br i1 %18, label %19, label %27, !dbg !13352

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13353
  %21 = and i32 %20, 131072, !dbg !13353
  %22 = icmp eq i32 %21, 0, !dbg !13356
  br i1 %22, label %69, label %23, !dbg !13357

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13358
  %25 = load i32, i32* %24, align 4, !dbg !13358
  %26 = icmp eq i32 %25, 0, !dbg !13359
  br i1 %26, label %385, label %69, !dbg !13360

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13361
  %29 = load i32, i32* %28, align 4, !dbg !13361
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !13365

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13366
  %32 = or i32 %31, 65536, !dbg !13366
  br label %48, !dbg !13366

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13368
  %35 = and i32 %34, -65537, !dbg !13368
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13368
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13368
  %37 = and i32 %36, -262145, !dbg !13368
  br label %48, !dbg !13368

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13371
  %40 = or i32 %39, 262144, !dbg !13371
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13371
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13371
  %42 = or i32 %41, 65536, !dbg !13371
  br label %48, !dbg !13371

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13374
  %45 = and i32 %44, -65537, !dbg !13374
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13374
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13374
  %47 = and i32 %46, -262145, !dbg !13374
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13376
  %50 = load i32, i32* %28, align 4, !dbg !13377
  %51 = icmp eq i32 %50, 0, !dbg !13379
  %52 = tail call i32 @HAL_GetTick() #27, !dbg !13380
  call void @llvm.dbg.value(metadata i32 %52, metadata !13324, metadata !DIExpression()), !dbg !13336
  call void @llvm.dbg.value(metadata i32 %52, metadata !13324, metadata !DIExpression()), !dbg !13336
  br i1 %51, label %61, label %53, !dbg !13381

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13382
  %55 = and i32 %54, 131072, !dbg !13382
  %56 = icmp eq i32 %55, 0, !dbg !13384
  br i1 %56, label %57, label %69, !dbg !13385

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #27, !dbg !13386
  %59 = sub i32 %58, %52, !dbg !13389
  %60 = icmp ugt i32 %59, 100, !dbg !13390
  br i1 %60, label %385, label %53, !dbg !13391, !llvm.loop !13392

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13394
  %63 = and i32 %62, 131072, !dbg !13394
  %64 = icmp eq i32 %63, 0, !dbg !13396
  br i1 %64, label %69, label %65, !dbg !13397

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #27, !dbg !13398
  %67 = sub i32 %66, %52, !dbg !13401
  %68 = icmp ugt i32 %67, 100, !dbg !13402
  br i1 %68, label %385, label %61, !dbg !13403, !llvm.loop !13404

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !13406
  %71 = and i32 %70, 2, !dbg !13408
  %72 = icmp eq i32 %71, 0, !dbg !13409
  br i1 %72, label %118, label %73, !dbg !13410

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !13411
  br i1 %74, label %79, label %75, !dbg !13414

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !13415
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !13416
  br i1 %78, label %79, label %87, !dbg !13416

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13417
  %81 = and i32 %80, 2, !dbg !13417
  %82 = icmp eq i32 %81, 0, !dbg !13420
  br i1 %82, label %111, label %83, !dbg !13421

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13422
  %85 = load i32, i32* %84, align 4, !dbg !13422
  %86 = icmp eq i32 %85, 1, !dbg !13423
  br i1 %86, label %111, label %385, !dbg !13424

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13425
  %89 = load i32, i32* %88, align 4, !dbg !13425
  %90 = icmp eq i32 %89, 0, !dbg !13428
  br i1 %90, label %101, label %91, !dbg !13429

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13430
  %92 = tail call i32 @HAL_GetTick() #27, !dbg !13432
  call void @llvm.dbg.value(metadata i32 %92, metadata !13324, metadata !DIExpression()), !dbg !13336
  br label %93, !dbg !13433

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13434
  %95 = and i32 %94, 2, !dbg !13434
  %96 = icmp eq i32 %95, 0, !dbg !13435
  br i1 %96, label %97, label %111, !dbg !13433

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #27, !dbg !13436
  %99 = sub i32 %98, %92, !dbg !13439
  %100 = icmp ugt i32 %99, 2, !dbg !13440
  br i1 %100, label %385, label %93, !dbg !13441, !llvm.loop !13442

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13444
  %102 = tail call i32 @HAL_GetTick() #27, !dbg !13446
  call void @llvm.dbg.value(metadata i32 %102, metadata !13324, metadata !DIExpression()), !dbg !13336
  br label %103, !dbg !13447

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13448
  %105 = and i32 %104, 2, !dbg !13448
  %106 = icmp eq i32 %105, 0, !dbg !13449
  br i1 %106, label %118, label %107, !dbg !13447

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #27, !dbg !13450
  %109 = sub i32 %108, %102, !dbg !13453
  %110 = icmp ugt i32 %109, 2, !dbg !13454
  br i1 %110, label %385, label %103, !dbg !13455, !llvm.loop !13456

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13458
  %113 = and i32 %112, -7937, !dbg !13458
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13458
  %115 = load i32, i32* %114, align 4, !dbg !13458
  %116 = shl i32 %115, 8, !dbg !13458
  %117 = or i32 %116, %113, !dbg !13458
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13458
  br label %118, !dbg !13459

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !13459
  %120 = and i32 %119, 16, !dbg !13461
  %121 = icmp eq i32 %120, 0, !dbg !13462
  br i1 %121, label %215, label %122, !dbg !13463

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !13464
  br i1 %123, label %124, label %179, !dbg !13467

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13468
  %126 = and i32 %125, 512, !dbg !13468
  %127 = icmp eq i32 %126, 0, !dbg !13471
  br i1 %127, label %132, label %128, !dbg !13472

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !13473
  %130 = load i32, i32* %129, align 4, !dbg !13473
  %131 = icmp eq i32 %130, 0, !dbg !13474
  br i1 %131, label %385, label %132, !dbg !13475

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !13476
  %134 = load i32, i32* %133, align 4, !dbg !13476
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13479
  %136 = and i32 %135, 57344, !dbg !13479
  %137 = icmp ugt i32 %134, %136, !dbg !13480
  br i1 %137, label %138, label %152, !dbg !13481

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #26, !dbg !13482
  %140 = icmp eq i32 %139, 0, !dbg !13485
  br i1 %140, label %141, label %385, !dbg !13486

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13487
  %143 = and i32 %142, -57345, !dbg !13487
  %144 = load i32, i32* %133, align 4, !dbg !13487
  %145 = or i32 %143, %144, !dbg !13487
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13487
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13488
  %147 = and i32 %146, 16777215, !dbg !13488
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13488
  %149 = load i32, i32* %148, align 4, !dbg !13488
  %150 = shl i32 %149, 24, !dbg !13488
  %151 = or i32 %150, %147, !dbg !13488
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13488
  br label %165, !dbg !13489

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13490
  %154 = and i32 %153, -57345, !dbg !13490
  %155 = or i32 %154, %134, !dbg !13490
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13490
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13492
  %157 = and i32 %156, 16777215, !dbg !13492
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13492
  %159 = load i32, i32* %158, align 4, !dbg !13492
  %160 = shl i32 %159, 24, !dbg !13492
  %161 = or i32 %160, %157, !dbg !13492
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13492
  %162 = load i32, i32* %133, align 4, !dbg !13493
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #26, !dbg !13495
  %164 = icmp eq i32 %163, 0, !dbg !13496
  br i1 %164, label %165, label %385, !dbg !13497

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !13498
  %167 = lshr i32 %166, 13, !dbg !13499
  %168 = shl i32 65536, %167, !dbg !13500
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13501
  %170 = lshr i32 %169, 4, !dbg !13502
  %171 = and i32 %170, 15, !dbg !13502
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !13503
  %173 = load i8, i8* %172, align 1, !dbg !13503
  %174 = zext i8 %173 to i32, !dbg !13503
  %175 = lshr i32 %168, %174, !dbg !13504
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !13505
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !13506
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #27, !dbg !13507
  call void @llvm.dbg.value(metadata i32 %177, metadata !13325, metadata !DIExpression()), !dbg !13336
  %178 = icmp eq i32 %177, 0, !dbg !13508
  br i1 %178, label %215, label %385, !dbg !13510

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !13511
  %181 = load i32, i32* %180, align 4, !dbg !13511
  %182 = icmp eq i32 %181, 0, !dbg !13514
  br i1 %182, label %205, label %183, !dbg !13515

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !13516
  %184 = tail call i32 @HAL_GetTick() #27, !dbg !13518
  call void @llvm.dbg.value(metadata i32 %184, metadata !13324, metadata !DIExpression()), !dbg !13336
  br label %185, !dbg !13519

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13520
  %187 = and i32 %186, 512, !dbg !13520
  %188 = icmp eq i32 %187, 0, !dbg !13521
  br i1 %188, label %189, label %193, !dbg !13519

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #27, !dbg !13522
  %191 = sub i32 %190, %184, !dbg !13525
  %192 = icmp ugt i32 %191, 2, !dbg !13526
  br i1 %192, label %385, label %185, !dbg !13527, !llvm.loop !13528

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13530
  %195 = and i32 %194, -57345, !dbg !13530
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !13530
  %197 = load i32, i32* %196, align 4, !dbg !13530
  %198 = or i32 %195, %197, !dbg !13530
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13530
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13531
  %200 = and i32 %199, 16777215, !dbg !13531
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13531
  %202 = load i32, i32* %201, align 4, !dbg !13531
  %203 = shl i32 %202, 24, !dbg !13531
  %204 = or i32 %203, %200, !dbg !13531
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13531
  br label %215, !dbg !13532

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !13533
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !13535
  call void @llvm.dbg.value(metadata i32 %206, metadata !13324, metadata !DIExpression()), !dbg !13336
  br label %207, !dbg !13536

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13537
  %209 = and i32 %208, 512, !dbg !13537
  %210 = icmp eq i32 %209, 0, !dbg !13538
  br i1 %210, label %215, label %211, !dbg !13536

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #27, !dbg !13539
  %213 = sub i32 %212, %206, !dbg !13542
  %214 = icmp ugt i32 %213, 2, !dbg !13543
  br i1 %214, label %385, label %207, !dbg !13544, !llvm.loop !13545

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !13547
  %217 = and i32 %216, 8, !dbg !13549
  %218 = icmp eq i32 %217, 0, !dbg !13550
  br i1 %218, label %243, label %219, !dbg !13551

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13552
  %221 = load i32, i32* %220, align 4, !dbg !13552
  %222 = icmp eq i32 %221, 0, !dbg !13555
  br i1 %222, label %233, label %223, !dbg !13556

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !13557
  %224 = tail call i32 @HAL_GetTick() #27, !dbg !13559
  call void @llvm.dbg.value(metadata i32 %224, metadata !13324, metadata !DIExpression()), !dbg !13336
  br label %225, !dbg !13560

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13561
  %227 = and i32 %226, 2, !dbg !13561
  %228 = icmp eq i32 %227, 0, !dbg !13562
  br i1 %228, label %229, label %243, !dbg !13560

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #27, !dbg !13563
  %231 = sub i32 %230, %224, !dbg !13566
  %232 = icmp ugt i32 %231, 2, !dbg !13567
  br i1 %232, label %385, label %225, !dbg !13568, !llvm.loop !13569

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !13571
  %234 = tail call i32 @HAL_GetTick() #27, !dbg !13573
  call void @llvm.dbg.value(metadata i32 %234, metadata !13324, metadata !DIExpression()), !dbg !13336
  br label %235, !dbg !13574

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13575
  %237 = and i32 %236, 2, !dbg !13575
  %238 = icmp eq i32 %237, 0, !dbg !13576
  br i1 %238, label %243, label %239, !dbg !13574

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #27, !dbg !13577
  %241 = sub i32 %240, %234, !dbg !13580
  %242 = icmp ugt i32 %241, 2, !dbg !13581
  br i1 %242, label %385, label %235, !dbg !13582, !llvm.loop !13583

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !13585
  %245 = and i32 %244, 4, !dbg !13586
  %246 = icmp eq i32 %245, 0, !dbg !13587
  br i1 %246, label %320, label %247, !dbg !13588

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !13328, metadata !DIExpression()), !dbg !13589
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13590
  %249 = and i32 %248, 268435456, !dbg !13590
  %250 = icmp eq i32 %249, 0, !dbg !13590
  br i1 %250, label %251, label %258, !dbg !13591

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !13592
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !13592
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13332, metadata !DIExpression()), !dbg !13592
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13592
  %254 = or i32 %253, 268435456, !dbg !13592
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13592
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13592
  %256 = and i32 %255, 268435456, !dbg !13592
  store volatile i32 %256, i32* %2, align 4, !dbg !13592
  %257 = load volatile i32, i32* %2, align 4, !dbg !13592
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !13593
  call void @llvm.dbg.value(metadata i32 1, metadata !13328, metadata !DIExpression()), !dbg !13589
  br label %258, !dbg !13594

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !13328, metadata !DIExpression()), !dbg !13589
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13595
  %260 = and i32 %259, 256, !dbg !13595
  %261 = icmp eq i32 %260, 0, !dbg !13595
  br i1 %261, label %262, label %274, !dbg !13597

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13598
  %264 = or i32 %263, 256, !dbg !13598
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13598
  %265 = tail call i32 @HAL_GetTick() #27, !dbg !13600
  call void @llvm.dbg.value(metadata i32 %265, metadata !13324, metadata !DIExpression()), !dbg !13336
  br label %266, !dbg !13601

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13602
  %268 = and i32 %267, 256, !dbg !13602
  %269 = icmp eq i32 %268, 0, !dbg !13602
  br i1 %269, label %270, label %274, !dbg !13601

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #27, !dbg !13603
  %272 = sub i32 %271, %265, !dbg !13606
  %273 = icmp ugt i32 %272, 100, !dbg !13607
  br i1 %273, label %385, label %266, !dbg !13608, !llvm.loop !13609

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13611
  %276 = load i32, i32* %275, align 4, !dbg !13611
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !13614

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13615
  %279 = or i32 %278, 256, !dbg !13615
  br label %295, !dbg !13615

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13617
  %282 = and i32 %281, -257, !dbg !13617
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13617
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13617
  %284 = and i32 %283, -1025, !dbg !13617
  br label %295, !dbg !13617

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13620
  %287 = or i32 %286, 1024, !dbg !13620
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13620
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13620
  %289 = or i32 %288, 256, !dbg !13620
  br label %295, !dbg !13620

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13623
  %292 = and i32 %291, -257, !dbg !13623
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13623
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13623
  %294 = and i32 %293, -1025, !dbg !13623
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13625
  %297 = load i32, i32* %275, align 4, !dbg !13626
  %298 = icmp eq i32 %297, 0, !dbg !13628
  %299 = tail call i32 @HAL_GetTick() #27, !dbg !13629
  call void @llvm.dbg.value(metadata i32 %299, metadata !13324, metadata !DIExpression()), !dbg !13336
  call void @llvm.dbg.value(metadata i32 %299, metadata !13324, metadata !DIExpression()), !dbg !13336
  br i1 %298, label %308, label %300, !dbg !13630

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13631
  %302 = and i32 %301, 512, !dbg !13631
  %303 = icmp eq i32 %302, 0, !dbg !13633
  br i1 %303, label %304, label %316, !dbg !13634

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #27, !dbg !13635
  %306 = sub i32 %305, %299, !dbg !13638
  %307 = icmp ugt i32 %306, 5000, !dbg !13639
  br i1 %307, label %385, label %300, !dbg !13640, !llvm.loop !13641

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13643
  %310 = and i32 %309, 512, !dbg !13643
  %311 = icmp eq i32 %310, 0, !dbg !13645
  br i1 %311, label %316, label %312, !dbg !13646

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #27, !dbg !13647
  %314 = sub i32 %313, %299, !dbg !13650
  %315 = icmp ugt i32 %314, 5000, !dbg !13651
  br i1 %315, label %385, label %308, !dbg !13652, !llvm.loop !13653

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !13655

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13656
  %319 = and i32 %318, -268435457, !dbg !13656
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13656
  br label %320, !dbg !13659

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !13660
  %322 = load i32, i32* %321, align 4, !dbg !13660
  %323 = icmp eq i32 %322, 0, !dbg !13662
  br i1 %323, label %384, label %324, !dbg !13663

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !13664
  br i1 %325, label %366, label %326, !dbg !13667

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !13668
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13671
  %328 = tail call i32 @HAL_GetTick() #27, !dbg !13671
  call void @llvm.dbg.value(metadata i32 %328, metadata !13324, metadata !DIExpression()), !dbg !13336
  call void @llvm.dbg.value(metadata i32 %328, metadata !13324, metadata !DIExpression()), !dbg !13336
  br i1 %327, label %329, label %358, !dbg !13672

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13673
  %331 = and i32 %330, 33554432, !dbg !13673
  %332 = icmp eq i32 %331, 0, !dbg !13675
  br i1 %332, label %337, label %333, !dbg !13676

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #27, !dbg !13677
  %335 = sub i32 %334, %328, !dbg !13680
  %336 = icmp ugt i32 %335, 2, !dbg !13681
  br i1 %336, label %385, label %329, !dbg !13682, !llvm.loop !13683

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13685
  %339 = and i32 %338, -16580609, !dbg !13685
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !13685
  %341 = load i32, i32* %340, align 4, !dbg !13685
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !13685
  %343 = load i32, i32* %342, align 4, !dbg !13685
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !13685
  %345 = load i32, i32* %344, align 4, !dbg !13685
  %346 = or i32 %339, %341, !dbg !13685
  %347 = or i32 %346, %343, !dbg !13685
  %348 = or i32 %347, %345, !dbg !13685
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13685
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13686
  %349 = tail call i32 @HAL_GetTick() #27, !dbg !13687
  call void @llvm.dbg.value(metadata i32 %349, metadata !13324, metadata !DIExpression()), !dbg !13336
  br label %350, !dbg !13688

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13689
  %352 = and i32 %351, 33554432, !dbg !13689
  %353 = icmp eq i32 %352, 0, !dbg !13690
  br i1 %353, label %354, label %384, !dbg !13688

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #27, !dbg !13691
  %356 = sub i32 %355, %349, !dbg !13694
  %357 = icmp ugt i32 %356, 2, !dbg !13695
  br i1 %357, label %385, label %350, !dbg !13696, !llvm.loop !13697

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13699
  %360 = and i32 %359, 33554432, !dbg !13699
  %361 = icmp eq i32 %360, 0, !dbg !13701
  br i1 %361, label %384, label %362, !dbg !13702

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #27, !dbg !13703
  %364 = sub i32 %363, %328, !dbg !13706
  %365 = icmp ugt i32 %364, 2, !dbg !13707
  br i1 %365, label %385, label %358, !dbg !13708, !llvm.loop !13709

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !13711
  br i1 %367, label %385, label %368, !dbg !13714

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13715
  call void @llvm.dbg.value(metadata i32 %369, metadata !13327, metadata !DIExpression()), !dbg !13336
  %370 = and i32 %369, 65536, !dbg !13717
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !13719
  %372 = load i32, i32* %371, align 4, !dbg !13719
  %373 = icmp eq i32 %370, %372, !dbg !13720
  br i1 %373, label %374, label %385, !dbg !13721

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !13722
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !13723
  %377 = load i32, i32* %376, align 4, !dbg !13723
  %378 = icmp eq i32 %375, %377, !dbg !13724
  br i1 %378, label %379, label %385, !dbg !13725

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !13726
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !13727
  %382 = load i32, i32* %381, align 4, !dbg !13727
  %383 = icmp eq i32 %380, %382, !dbg !13728
  br i1 %383, label %384, label %385, !dbg !13729

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !13730

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !13336
  ret i32 %386, !dbg !13731
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #15 !dbg !13732 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13734, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata i32 0, metadata !13736, metadata !DIExpression()), !dbg !13743
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13744
  %4 = and i32 %3, 240, !dbg !13744
  %5 = icmp eq i32 %4, 0, !dbg !13745
  br i1 %5, label %6, label %31, !dbg !13746

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13747
  %8 = and i32 %7, 268435456, !dbg !13747
  %9 = icmp eq i32 %8, 0, !dbg !13747
  br i1 %9, label %12, label %10, !dbg !13748

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13749
  call void @llvm.dbg.value(metadata i32 %11, metadata !13735, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !13743
  br label %22, !dbg !13751

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !13752
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !13752
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13737, metadata !DIExpression()), !dbg !13752
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13752
  %15 = or i32 %14, 268435456, !dbg !13752
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13752
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13752
  %17 = and i32 %16, 268435456, !dbg !13752
  store volatile i32 %17, i32* %2, align 4, !dbg !13752
  %18 = load volatile i32, i32* %2, align 4, !dbg !13752
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !13753
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13754
  call void @llvm.dbg.value(metadata i32 %19, metadata !13735, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !13743
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13755
  %21 = and i32 %20, -268435457, !dbg !13755
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13755
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !13756
  call void @llvm.dbg.value(metadata i32 %24, metadata !13735, metadata !DIExpression()), !dbg !13743
  %25 = icmp eq i32 %24, 6144, !dbg !13757
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !13759
  call void @llvm.dbg.value(metadata i32 undef, metadata !13736, metadata !DIExpression()), !dbg !13743
  br i1 %27, label %28, label %31, !dbg !13760

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13762
  %30 = or i32 %29, 4, !dbg !13762
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13762
  br label %31, !dbg !13762

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13760
  %34 = and i32 %33, -2, !dbg !13760
  %35 = or i32 %34, %32, !dbg !13760
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13760
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13765
  %37 = and i32 %36, 1, !dbg !13765
  %38 = xor i32 %37, %32, !dbg !13743
  ret i32 %38, !dbg !13767
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13768 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13781, metadata !DIExpression()), !dbg !13785
  call void @llvm.dbg.value(metadata i32 %1, metadata !13782, metadata !DIExpression()), !dbg !13785
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !13786
  br i1 %3, label %136, label %4, !dbg !13788

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13789
  %6 = and i32 %5, 1, !dbg !13789
  %7 = icmp ult i32 %6, %1, !dbg !13791
  br i1 %7, label %8, label %20, !dbg !13792

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !13793
  br i1 %9, label %10, label %13, !dbg !13797

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13798
  %12 = or i32 %11, 4, !dbg !13798
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13798
  br label %13, !dbg !13798

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13797
  %15 = and i32 %14, -2, !dbg !13797
  %16 = or i32 %15, %1, !dbg !13797
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13797
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13800
  %18 = and i32 %17, 1, !dbg !13800
  %19 = icmp eq i32 %18, %1, !dbg !13802
  br i1 %19, label %20, label %136, !dbg !13803

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13804
  %22 = load i32, i32* %21, align 4, !dbg !13804
  %23 = and i32 %22, 2, !dbg !13806
  %24 = icmp eq i32 %23, 0, !dbg !13807
  br i1 %24, label %32, label %25, !dbg !13808

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13809
  %27 = and i32 %26, -241, !dbg !13809
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13809
  %29 = load i32, i32* %28, align 4, !dbg !13809
  %30 = or i32 %27, %29, !dbg !13809
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13809
  %31 = load i32, i32* %21, align 4, !dbg !13811
  br label %32, !dbg !13813

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !13811
  %34 = and i32 %33, 1, !dbg !13814
  %35 = icmp eq i32 %34, 0, !dbg !13815
  br i1 %35, label %93, label %36, !dbg !13816

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13817
  %38 = load i32, i32* %37, align 4, !dbg !13817
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !13820

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13821
  %41 = and i32 %40, 131072, !dbg !13821
  %42 = icmp eq i32 %41, 0, !dbg !13824
  br i1 %42, label %136, label %55, !dbg !13825

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13826
  %45 = and i32 %44, 33554432, !dbg !13826
  %46 = icmp eq i32 %45, 0, !dbg !13830
  br i1 %46, label %136, label %55, !dbg !13831

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13832
  %49 = and i32 %48, 2, !dbg !13832
  %50 = icmp eq i32 %49, 0, !dbg !13836
  br i1 %50, label %136, label %55, !dbg !13837

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13838
  %53 = and i32 %52, 512, !dbg !13838
  %54 = icmp eq i32 %53, 0, !dbg !13841
  br i1 %54, label %136, label %55, !dbg !13842

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13843
  %57 = and i32 %56, -4, !dbg !13843
  %58 = or i32 %57, %38, !dbg !13843
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13843
  %59 = tail call i32 @HAL_GetTick() #27, !dbg !13844
  call void @llvm.dbg.value(metadata i32 %59, metadata !13783, metadata !DIExpression()), !dbg !13785
  %60 = load i32, i32* %37, align 4, !dbg !13845
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !13847

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13848
  %63 = and i32 %62, 12, !dbg !13848
  %64 = icmp eq i32 %63, 8, !dbg !13850
  br i1 %64, label %93, label %65, !dbg !13851

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #27, !dbg !13852
  %67 = sub i32 %66, %59, !dbg !13855
  %68 = icmp ugt i32 %67, 5000, !dbg !13856
  br i1 %68, label %136, label %61, !dbg !13857, !llvm.loop !13858

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13860
  %71 = and i32 %70, 12, !dbg !13860
  %72 = icmp eq i32 %71, 12, !dbg !13863
  br i1 %72, label %93, label %73, !dbg !13864

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #27, !dbg !13865
  %75 = sub i32 %74, %59, !dbg !13868
  %76 = icmp ugt i32 %75, 5000, !dbg !13869
  br i1 %76, label %136, label %69, !dbg !13870, !llvm.loop !13871

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13873
  %79 = and i32 %78, 12, !dbg !13873
  %80 = icmp eq i32 %79, 4, !dbg !13876
  br i1 %80, label %93, label %81, !dbg !13877

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #27, !dbg !13878
  %83 = sub i32 %82, %59, !dbg !13881
  %84 = icmp ugt i32 %83, 5000, !dbg !13882
  br i1 %84, label %136, label %77, !dbg !13883, !llvm.loop !13884

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13886
  %87 = and i32 %86, 12, !dbg !13886
  %88 = icmp eq i32 %87, 0, !dbg !13888
  br i1 %88, label %93, label %89, !dbg !13889

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #27, !dbg !13890
  %91 = sub i32 %90, %59, !dbg !13893
  %92 = icmp ugt i32 %91, 5000, !dbg !13894
  br i1 %92, label %136, label %85, !dbg !13895, !llvm.loop !13896

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13898
  %95 = and i32 %94, 1, !dbg !13898
  %96 = icmp ugt i32 %95, %1, !dbg !13900
  br i1 %96, label %97, label %103, !dbg !13901

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13902
  %99 = and i32 %98, -2, !dbg !13902
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13902
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13905
  %101 = and i32 %100, 1, !dbg !13905
  %102 = icmp eq i32 %101, 0, !dbg !13907
  br i1 %102, label %103, label %136, !dbg !13908

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !13909
  %105 = and i32 %104, 4, !dbg !13911
  %106 = icmp eq i32 %105, 0, !dbg !13912
  br i1 %106, label %114, label %107, !dbg !13913

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13914
  %109 = and i32 %108, -1793, !dbg !13914
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13914
  %111 = load i32, i32* %110, align 4, !dbg !13914
  %112 = or i32 %109, %111, !dbg !13914
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13914
  %113 = load i32, i32* %21, align 4, !dbg !13916
  br label %114, !dbg !13918

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !13916
  %116 = and i32 %115, 8, !dbg !13919
  %117 = icmp eq i32 %116, 0, !dbg !13920
  br i1 %117, label %125, label %118, !dbg !13921

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13922
  %120 = and i32 %119, -14337, !dbg !13922
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13922
  %122 = load i32, i32* %121, align 4, !dbg !13922
  %123 = shl i32 %122, 3, !dbg !13922
  %124 = or i32 %123, %120, !dbg !13922
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13922
  br label %125, !dbg !13924

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !13925
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13926
  %128 = lshr i32 %127, 4, !dbg !13927
  %129 = and i32 %128, 15, !dbg !13927
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !13928
  %131 = load i8, i8* %130, align 1, !dbg !13928
  %132 = zext i8 %131 to i32, !dbg !13928
  %133 = lshr i32 %126, %132, !dbg !13929
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !13930
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !13931
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #27, !dbg !13932
  call void @llvm.dbg.value(metadata i32 %135, metadata !13784, metadata !DIExpression()), !dbg !13785
  br label %136, !dbg !13933

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !13785
  ret i32 %137, !dbg !13934
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #18 !dbg !13935 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13943
  call void @llvm.dbg.value(metadata i32 %1, metadata !13937, metadata !DIExpression()), !dbg !13944
  %2 = lshr i32 %1, 2, !dbg !13945
  %3 = and i32 %2, 3, !dbg !13945
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !13945

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !13942, metadata !DIExpression()), !dbg !13944
  br label %26, !dbg !13946

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !13949
  %7 = and i32 %6, 15, !dbg !13949
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !13951
  %9 = load i8, i8* %8, align 1, !dbg !13951
  call void @llvm.dbg.value(metadata i8 %9, metadata !13938, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13944
  %10 = lshr i32 %1, 22, !dbg !13952
  %11 = and i32 %10, 3, !dbg !13952
  %12 = add nuw nsw i32 %11, 1, !dbg !13953
  call void @llvm.dbg.value(metadata i32 %12, metadata !13939, metadata !DIExpression()), !dbg !13944
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13954
  %14 = and i32 %13, 65536, !dbg !13954
  %15 = icmp eq i32 %14, 0, !dbg !13956
  %16 = zext i8 %9 to i32, !dbg !13957
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !13957
  %18 = mul nuw i32 %17, %16, !dbg !13957
  %19 = udiv i32 %18, %12, !dbg !13958
  call void @llvm.dbg.value(metadata i32 %19, metadata !13940, metadata !DIExpression()), !dbg !13944
  call void @llvm.dbg.value(metadata i32 %19, metadata !13942, metadata !DIExpression()), !dbg !13944
  br label %26, !dbg !13959

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13960
  %23 = lshr i32 %22, 13, !dbg !13962
  %24 = and i32 %23, 7, !dbg !13962
  call void @llvm.dbg.value(metadata i32 %24, metadata !13941, metadata !DIExpression()), !dbg !13944
  %25 = shl nuw nsw i32 65536, %24, !dbg !13963
  call void @llvm.dbg.value(metadata i32 %25, metadata !13942, metadata !DIExpression()), !dbg !13944
  br label %26, !dbg !13964

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !13965
  call void @llvm.dbg.value(metadata i32 %27, metadata !13942, metadata !DIExpression()), !dbg !13944
  ret i32 %27, !dbg !13966
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13967 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13969, metadata !DIExpression()), !dbg !13984
  call void @llvm.dbg.value(metadata i32 %1, metadata !13970, metadata !DIExpression()), !dbg !13984
  call void @llvm.dbg.value(metadata i32 %2, metadata !13971, metadata !DIExpression()), !dbg !13984
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !13985
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #25, !dbg !13985
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !13972, metadata !DIExpression()), !dbg !13986
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13987
  store i32 2, i32* %7, align 4, !dbg !13988
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13989
  store i32 2, i32* %8, align 4, !dbg !13990
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13991
  store i32 0, i32* %9, align 4, !dbg !13992
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13993
  store i32 256, i32* %10, align 4, !dbg !13994
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13995
  store i32 0, i32* %11, align 4, !dbg !13996
  %12 = bitcast i32* %5 to i8*, !dbg !13997
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !13997
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13982, metadata !DIExpression()), !dbg !13997
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !13997
  %14 = or i32 %13, 1, !dbg !13997
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !13997
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !13997
  %16 = and i32 %15, 1, !dbg !13997
  store volatile i32 %16, i32* %5, align 4, !dbg !13997
  %17 = load volatile i32, i32* %5, align 4, !dbg !13997
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !13998
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !13999
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14000
  %19 = and i32 %18, -1996488705, !dbg !14000
  %20 = or i32 %2, %1, !dbg !14000
  %21 = or i32 %20, %19, !dbg !14000
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14000
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #25, !dbg !14001
  ret void, !dbg !14001
}

; Function Attrs: optsize
declare !dbg !14002 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !14006 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !14007
  ret void, !dbg !14008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !14009 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !14010
  ret void, !dbg !14011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !14012 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !14013
  ret i32 %1, !dbg !14014
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #18 !dbg !14015 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !14016
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14017
  %3 = lshr i32 %2, 8, !dbg !14018
  %4 = and i32 %3, 7, !dbg !14018
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !14019
  %6 = load i8, i8* %5, align 1, !dbg !14019
  %7 = zext i8 %6 to i32, !dbg !14019
  %8 = lshr i32 %1, %7, !dbg !14020
  ret i32 %8, !dbg !14021
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #18 !dbg !14022 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !14023
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14024
  %3 = lshr i32 %2, 11, !dbg !14025
  %4 = and i32 %3, 7, !dbg !14025
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !14026
  %6 = load i8, i8* %5, align 1, !dbg !14026
  %7 = zext i8 %6 to i32, !dbg !14026
  %8 = lshr i32 %1, %7, !dbg !14027
  ret i32 %8, !dbg !14028
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #18 !dbg !14029 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !14033, metadata !DIExpression()), !dbg !14034
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !14035
  store i32 31, i32* %2, align 4, !dbg !14036
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14037
  %4 = and i32 %3, 262144, !dbg !14039
  %5 = icmp eq i32 %4, 0, !dbg !14040
  br i1 %5, label %8, label %6, !dbg !14041

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14042
  store i32 5, i32* %7, align 4, !dbg !14044
  br label %15, !dbg !14045

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14046
  %10 = and i32 %9, 65536, !dbg !14048
  %11 = icmp eq i32 %10, 0, !dbg !14049
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14050
  br i1 %11, label %14, label %13, !dbg !14051

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !14052
  br label %15, !dbg !14054

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !14055
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14057
  %17 = and i32 %16, 1, !dbg !14059
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !14060
  store i32 %17, i32* %18, align 4, !dbg !14062
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14063
  %20 = lshr i32 %19, 8, !dbg !14064
  %21 = and i32 %20, 31, !dbg !14064
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !14065
  store i32 %21, i32* %22, align 4, !dbg !14066
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14067
  %24 = lshr i32 %23, 8, !dbg !14069
  %25 = and i32 %24, 1, !dbg !14069
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !14070
  store i32 %25, i32* %26, align 4, !dbg !14072
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14073
  %28 = lshr i32 %27, 24, !dbg !14074
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !14075
  store i32 %28, i32* %29, align 4, !dbg !14076
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14077
  %31 = and i32 %30, 57344, !dbg !14078
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !14079
  store i32 %31, i32* %32, align 4, !dbg !14080
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !14081
  %34 = and i32 %33, 1024, !dbg !14083
  %35 = icmp eq i32 %34, 0, !dbg !14084
  br i1 %35, label %38, label %36, !dbg !14085

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14086
  store i32 5, i32* %37, align 4, !dbg !14088
  br label %45, !dbg !14089

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !14090
  %40 = and i32 %39, 256, !dbg !14092
  %41 = icmp eq i32 %40, 0, !dbg !14093
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14094
  br i1 %41, label %44, label %43, !dbg !14095

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !14096
  br label %45, !dbg !14098

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !14099
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !14101
  %47 = and i32 %46, 1, !dbg !14103
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !14104
  store i32 %47, i32* %48, align 4, !dbg !14106
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14107
  %50 = and i32 %49, 16777216, !dbg !14109
  %51 = icmp eq i32 %50, 0, !dbg !14110
  %52 = select i1 %51, i32 1, i32 2, !dbg !14111
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !14112
  store i32 %52, i32* %53, align 4, !dbg !14114
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14115
  %55 = and i32 %54, 65536, !dbg !14116
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !14117
  store i32 %55, i32* %56, align 4, !dbg !14118
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14119
  %58 = and i32 %57, 3932160, !dbg !14120
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !14121
  store i32 %58, i32* %59, align 4, !dbg !14122
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14123
  %61 = and i32 %60, 12582912, !dbg !14124
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !14125
  store i32 %61, i32* %62, align 4, !dbg !14126
  ret void, !dbg !14127
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #18 !dbg !14128 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !14132, metadata !DIExpression()), !dbg !14134
  call void @llvm.dbg.value(metadata i32* %1, metadata !14133, metadata !DIExpression()), !dbg !14134
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !14135
  store i32 15, i32* %3, align 4, !dbg !14136
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14137
  %5 = and i32 %4, 3, !dbg !14138
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !14139
  store i32 %5, i32* %6, align 4, !dbg !14140
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14141
  %8 = and i32 %7, 240, !dbg !14142
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !14143
  store i32 %8, i32* %9, align 4, !dbg !14144
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14145
  %11 = and i32 %10, 1792, !dbg !14146
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !14147
  store i32 %11, i32* %12, align 4, !dbg !14148
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14149
  %14 = lshr i32 %13, 3, !dbg !14150
  %15 = and i32 %14, 1792, !dbg !14150
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !14151
  store i32 %15, i32* %16, align 4, !dbg !14152
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14153
  %18 = and i32 %17, 1, !dbg !14153
  store i32 %18, i32* %1, align 4, !dbg !14154
  ret void, !dbg !14155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !14156 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14157
  %2 = and i32 %1, 128, !dbg !14157
  %3 = icmp eq i32 %2, 0, !dbg !14157
  br i1 %3, label %5, label %4, !dbg !14159

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !14160
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !14162
  br label %5, !dbg !14163

5:                                                ; preds = %4, %0
  ret void, !dbg !14164
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !14165 {
  ret void, !dbg !14166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !14167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14170, metadata !DIExpression()), !dbg !14171
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !14172
  ret void, !dbg !14173
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !14174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14177, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata i32 1000, metadata !14178, metadata !DIExpression()), !dbg !14179
  %2 = udiv i32 %0, 1000, !dbg !14180
  %3 = add nsw i32 %2, -1, !dbg !14181
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !14182
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !14183
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14184
  ret void, !dbg !14185
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !14186 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14188, metadata !DIExpression()), !dbg !14191
  %3 = bitcast i32* %2 to i8*, !dbg !14192
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !14192
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14189, metadata !DIExpression()), !dbg !14193
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14194
  store volatile i32 %4, i32* %2, align 4, !dbg !14193
  call void @llvm.dbg.value(metadata i32 %0, metadata !14190, metadata !DIExpression()), !dbg !14191
  %5 = load volatile i32, i32* %2, align 4, !dbg !14195
  %6 = icmp eq i32 %0, -1, !dbg !14196
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14190, metadata !DIExpression()), !dbg !14191
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !14191
  call void @llvm.dbg.value(metadata i32 %8, metadata !14190, metadata !DIExpression()), !dbg !14191
  br label %9, !dbg !14198

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !14190, metadata !DIExpression()), !dbg !14191
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14199
  call void @llvm.dbg.value(metadata i32 undef, metadata !14190, metadata !DIExpression()), !dbg !14191
  %12 = shl i32 %11, 15, !dbg !14191
  %13 = ashr i32 %12, 31, !dbg !14191
  %14 = add i32 %13, %10, !dbg !14191
  call void @llvm.dbg.value(metadata i32 %14, metadata !14190, metadata !DIExpression()), !dbg !14191
  %15 = icmp eq i32 %14, 0, !dbg !14202
  br i1 %15, label %16, label %9, !dbg !14198

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !14203
  ret void, !dbg !14203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !14204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14206, metadata !DIExpression()), !dbg !14207
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !14208
  ret void, !dbg !14209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !14210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14215, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.value(metadata i32 0, metadata !14216, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.value(metadata i32 0, metadata !14217, metadata !DIExpression()), !dbg !14218
  %2 = add i32 %0, -32000001, !dbg !14219
  %3 = icmp ult i32 %2, -32000000, !dbg !14219
  br i1 %3, label %22, label %4, !dbg !14219

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14221
  %6 = icmp eq i32 %5, 2048, !dbg !14224
  br i1 %6, label %7, label %9, !dbg !14225

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !14226
  call void @llvm.dbg.value(metadata i32 undef, metadata !14217, metadata !DIExpression()), !dbg !14218
  br i1 %8, label %16, label %17, !dbg !14229

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14230
  %11 = icmp eq i32 %10, 4096, !dbg !14232
  br i1 %11, label %12, label %14, !dbg !14233

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !14234
  call void @llvm.dbg.value(metadata i32 undef, metadata !14217, metadata !DIExpression()), !dbg !14218
  br i1 %13, label %16, label %17, !dbg !14229

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !14237
  call void @llvm.dbg.value(metadata i32 undef, metadata !14217, metadata !DIExpression()), !dbg !14218
  br i1 %15, label %16, label %17, !dbg !14229

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #26, !dbg !14240
  br label %17, !dbg !14243

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #26, !dbg !14244
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !14245
  %20 = icmp ne i32 %19, %18, !dbg !14247
  %21 = zext i1 %20 to i32, !dbg !14248
  br label %22, !dbg !14248

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !14218
  call void @llvm.dbg.value(metadata i32 %23, metadata !14216, metadata !DIExpression()), !dbg !14218
  ret i32 %23, !dbg !14249
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #18 !dbg !14250 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14251
  %2 = and i32 %1, 6144, !dbg !14251
  ret i32 %2, !dbg !14252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #16 !dbg !14253 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14254
  %2 = or i32 %1, 4, !dbg !14254
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14254
  ret void, !dbg !14255
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !14256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14258, metadata !DIExpression()), !dbg !14259
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14260
  %3 = and i32 %2, -2, !dbg !14260
  %4 = or i32 %3, %0, !dbg !14260
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14260
  ret void, !dbg !14261
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #18 !dbg !14262 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14263
  %2 = and i32 %1, 1, !dbg !14263
  ret i32 %2, !dbg !14264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !14265 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !14282, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14283, metadata !DIExpression()), !dbg !14286
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14287
  %4 = icmp eq i32 %3, 0, !dbg !14289
  br i1 %4, label %5, label %19, !dbg !14290

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #26, !dbg !14291
  call void @llvm.dbg.value(metadata i32 %6, metadata !14285, metadata !DIExpression()), !dbg !14286
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.214() #26, !dbg !14293
  %8 = icmp eq i32 %7, 1, !dbg !14295
  br i1 %8, label %13, label %9, !dbg !14296

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.215() #26, !dbg !14297
  br label %10, !dbg !14299

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.214() #26, !dbg !14300
  %12 = icmp eq i32 %11, 1, !dbg !14301
  br i1 %12, label %13, label %10, !dbg !14299, !llvm.loop !14302

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !14304
  %15 = load i32, i32* %14, align 4, !dbg !14304
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !14305
  %17 = load i32, i32* %16, align 4, !dbg !14305
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.216(i32 noundef 0, i32 noundef %15, i32 noundef %17) #26, !dbg !14306
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !14307
  call void @llvm.dbg.value(metadata i32 %18, metadata !14284, metadata !DIExpression()), !dbg !14286
  br label %19, !dbg !14308

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !14309
  call void @llvm.dbg.value(metadata i32 %20, metadata !14284, metadata !DIExpression()), !dbg !14286
  ret i32 %20, !dbg !14310
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #18 !dbg !14311 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14315, metadata !DIExpression()), !dbg !14316
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.218() #26, !dbg !14317
  %2 = icmp ne i32 %1, 0, !dbg !14319
  %3 = zext i1 %2 to i32, !dbg !14320
  call void @llvm.dbg.value(metadata i32 %3, metadata !14315, metadata !DIExpression()), !dbg !14316
  ret i32 %3, !dbg !14321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #10 !dbg !14322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14326, metadata !DIExpression()), !dbg !14329
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !14327, metadata !DIExpression()), !dbg !14329
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !14330
  %4 = load i32, i32* %3, align 4, !dbg !14330
  %5 = lshr i32 %4, 18, !dbg !14331
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !14332
  %7 = load i8, i8* %6, align 1, !dbg !14332
  %8 = zext i8 %7 to i32, !dbg !14333
  %9 = mul i32 %8, %0, !dbg !14334
  call void @llvm.dbg.value(metadata i32 %9, metadata !14328, metadata !DIExpression()), !dbg !14329
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !14335
  %11 = load i32, i32* %10, align 4, !dbg !14335
  %12 = lshr i32 %11, 22, !dbg !14336
  %13 = add nuw nsw i32 %12, 1, !dbg !14337
  %14 = udiv i32 %9, %13, !dbg !14338
  call void @llvm.dbg.value(metadata i32 %14, metadata !14328, metadata !DIExpression()), !dbg !14329
  ret i32 %14, !dbg !14339
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.214() unnamed_addr #18 !dbg !14340 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14341
  %2 = lshr i32 %1, 1, !dbg !14342
  %3 = and i32 %2, 1, !dbg !14342
  ret i32 %3, !dbg !14343
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.215() unnamed_addr #16 !dbg !14344 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14345
  %2 = or i32 %1, 1, !dbg !14345
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14345
  ret void, !dbg !14346
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.216(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !14347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14349, metadata !DIExpression()), !dbg !14352
  call void @llvm.dbg.value(metadata i32 %1, metadata !14350, metadata !DIExpression()), !dbg !14352
  call void @llvm.dbg.value(metadata i32 %2, metadata !14351, metadata !DIExpression()), !dbg !14352
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14353
  %5 = and i32 %4, -16580609, !dbg !14353
  %6 = or i32 %1, %0, !dbg !14353
  %7 = or i32 %6, %2, !dbg !14353
  %8 = or i32 %7, %5, !dbg !14353
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14353
  ret void, !dbg !14354
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !14355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14359, metadata !DIExpression()), !dbg !14363
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14360, metadata !DIExpression()), !dbg !14363
  call void @llvm.dbg.value(metadata i32 0, metadata !14361, metadata !DIExpression()), !dbg !14363
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14364
  %4 = load i32, i32* %3, align 4, !dbg !14364
  %5 = lshr i32 %4, 4, !dbg !14364
  %6 = and i32 %5, 15, !dbg !14364
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !14364
  %8 = load i8, i8* %7, align 1, !dbg !14364
  %9 = zext i8 %8 to i32, !dbg !14364
  %10 = lshr i32 %0, %9, !dbg !14364
  call void @llvm.dbg.value(metadata i32 %10, metadata !14362, metadata !DIExpression()), !dbg !14363
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !14365
  %12 = icmp ult i32 %11, %10, !dbg !14367
  br i1 %12, label %13, label %16, !dbg !14368

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14369
  call void @llvm.dbg.value(metadata i32 %14, metadata !14361, metadata !DIExpression()), !dbg !14363
  %15 = icmp eq i32 %14, 0, !dbg !14371
  br i1 %15, label %16, label %30, !dbg !14373

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.217() #26, !dbg !14374
  br label %17, !dbg !14376

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.218() #26, !dbg !14377
  %19 = icmp eq i32 %18, 1, !dbg !14378
  br i1 %19, label %20, label %17, !dbg !14376, !llvm.loop !14379

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !14381
  tail call fastcc void @LL_RCC_SetAHBPrescaler.219(i32 noundef %21) #26, !dbg !14382
  tail call fastcc void @LL_RCC_SetSysClkSource.220() #26, !dbg !14383
  br label %22, !dbg !14384

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.221() #26, !dbg !14385
  %24 = icmp eq i32 %23, 12, !dbg !14386
  br i1 %24, label %25, label %22, !dbg !14384, !llvm.loop !14387

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14389
  %27 = load i32, i32* %26, align 4, !dbg !14389
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.222(i32 noundef %27) #26, !dbg !14390
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14391
  %29 = load i32, i32* %28, align 4, !dbg !14391
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.223(i32 noundef %29) #26, !dbg !14392
  br label %30, !dbg !14393

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !14394
  %33 = icmp ugt i32 %32, %10, !dbg !14396
  br i1 %33, label %34, label %36, !dbg !14397

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14398
  call void @llvm.dbg.value(metadata i32 %35, metadata !14361, metadata !DIExpression()), !dbg !14363
  br label %36, !dbg !14400

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !14363
  call void @llvm.dbg.value(metadata i32 %37, metadata !14361, metadata !DIExpression()), !dbg !14363
  %38 = icmp eq i32 %37, 0, !dbg !14401
  br i1 %38, label %39, label %40, !dbg !14403

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !14404
  br label %40, !dbg !14406

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !14407
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.217() unnamed_addr #16 !dbg !14408 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14409
  %2 = or i32 %1, 16777216, !dbg !14409
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14409
  ret void, !dbg !14410
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.218() unnamed_addr #18 !dbg !14411 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14412
  %2 = lshr i32 %1, 25, !dbg !14413
  %3 = and i32 %2, 1, !dbg !14413
  ret i32 %3, !dbg !14414
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.219(i32 noundef %0) unnamed_addr #16 !dbg !14415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14417, metadata !DIExpression()), !dbg !14418
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14419
  %3 = and i32 %2, -241, !dbg !14419
  %4 = or i32 %3, %0, !dbg !14419
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14419
  ret void, !dbg !14420
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.220() unnamed_addr #16 !dbg !14421 {
  call void @llvm.dbg.value(metadata i32 3, metadata !14423, metadata !DIExpression()), !dbg !14424
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14425
  %2 = or i32 %1, 3, !dbg !14425
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14425
  ret void, !dbg !14426
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.221() unnamed_addr #18 !dbg !14427 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14428
  %2 = and i32 %1, 12, !dbg !14428
  ret i32 %2, !dbg !14429
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.222(i32 noundef %0) unnamed_addr #16 !dbg !14430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14432, metadata !DIExpression()), !dbg !14433
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14434
  %3 = and i32 %2, -1793, !dbg !14434
  %4 = or i32 %3, %0, !dbg !14434
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14434
  ret void, !dbg !14435
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.223(i32 noundef %0) unnamed_addr #16 !dbg !14436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14438, metadata !DIExpression()), !dbg !14439
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14440
  %3 = and i32 %2, -14337, !dbg !14440
  %4 = or i32 %3, %0, !dbg !14440
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14440
  ret void, !dbg !14441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !14442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14446, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 %1, metadata !14447, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !14448, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14449, metadata !DIExpression()), !dbg !14452
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14453
  %6 = icmp eq i32 %5, 0, !dbg !14455
  br i1 %6, label %7, label %25, !dbg !14456

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #26, !dbg !14457
  call void @llvm.dbg.value(metadata i32 %8, metadata !14451, metadata !DIExpression()), !dbg !14452
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !14459
  %10 = icmp eq i32 %9, 1, !dbg !14461
  br i1 %10, label %19, label %11, !dbg !14462

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14463
  br i1 %12, label %13, label %14, !dbg !14466

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !14467
  br label %15, !dbg !14469

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !14470
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !14472
  br label %16, !dbg !14473

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !14474
  %18 = icmp eq i32 %17, 1, !dbg !14475
  br i1 %18, label %19, label %16, !dbg !14473, !llvm.loop !14476

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !14478
  %21 = load i32, i32* %20, align 4, !dbg !14478
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !14479
  %23 = load i32, i32* %22, align 4, !dbg !14479
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.216(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #26, !dbg !14480
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !14481
  call void @llvm.dbg.value(metadata i32 %24, metadata !14450, metadata !DIExpression()), !dbg !14452
  br label %25, !dbg !14482

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !14483
  call void @llvm.dbg.value(metadata i32 %26, metadata !14450, metadata !DIExpression()), !dbg !14452
  ret i32 %26, !dbg !14484
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #18 !dbg !14485 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14486
  %2 = lshr i32 %1, 17, !dbg !14487
  %3 = and i32 %2, 1, !dbg !14487
  ret i32 %3, !dbg !14488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !14489 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14490
  %2 = or i32 %1, 262144, !dbg !14490
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14490
  ret void, !dbg !14491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !14492 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14493
  %2 = and i32 %1, -262145, !dbg !14493
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14493
  ret void, !dbg !14494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !14495 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14496
  %2 = or i32 %1, 65536, !dbg !14496
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14496
  ret void, !dbg !14497
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !14498 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14501, metadata !DIExpression()), !dbg !14517
  call void @llvm.dbg.value(metadata i32 undef, metadata !14501, metadata !DIExpression()), !dbg !14517
  call void @llvm.dbg.value(metadata i32 undef, metadata !14501, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14517
  ret void, !dbg !14518
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14519 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14523, metadata !DIExpression()), !dbg !14525
  %2 = icmp eq i8* %0, null, !dbg !14526
  br i1 %2, label %29, label %3, !dbg !14528

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14529
  %5 = icmp eq i8 %4, 0, !dbg !14530
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14531
  br i1 %6, label %29, label %8, !dbg !14531

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14524, metadata !DIExpression()), !dbg !14525
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14532

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14524, metadata !DIExpression()), !dbg !14525
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !14534
  br i1 %10, label %11, label %15, !dbg !14539

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14540
  %13 = load i8*, i8** %12, align 4, !dbg !14540
  %14 = icmp eq i8* %13, %0, !dbg !14541
  br i1 %14, label %29, label %15, !dbg !14542

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14543
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14524, metadata !DIExpression()), !dbg !14525
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14544
  br i1 %17, label %7, label %8, !dbg !14545, !llvm.loop !14546

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14524, metadata !DIExpression()), !dbg !14525
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !14548
  br i1 %20, label %21, label %26, !dbg !14552

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14553
  %23 = load i8*, i8** %22, align 4, !dbg !14553
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !14554
  %25 = icmp eq i32 %24, 0, !dbg !14555
  br i1 %25, label %29, label %26, !dbg !14556

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14557
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14524, metadata !DIExpression()), !dbg !14525
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14558
  br i1 %28, label %29, label %18, !dbg !14532, !llvm.loop !14559

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14525
  ret %struct.device* %30, !dbg !14561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !14562 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14566, metadata !DIExpression()), !dbg !14567
  %2 = icmp eq %struct.device* %0, null, !dbg !14568
  br i1 %2, label %14, label %3, !dbg !14570

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14571
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14571
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14572
  %7 = load i8, i8* %6, align 1, !dbg !14572
  %8 = and i8 %7, 1, !dbg !14572
  %9 = icmp eq i8 %8, 0, !dbg !14572
  br i1 %9, label %14, label %10, !dbg !14573

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14574
  %12 = load i8, i8* %11, align 1, !dbg !14574
  %13 = icmp eq i8 %12, 0, !dbg !14575
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14567
  ret i1 %15, !dbg !14576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14577 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14582, metadata !DIExpression()), !dbg !14583
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14584
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14585
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14586 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14594, metadata !DIExpression()), !dbg !14599
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14595, metadata !DIExpression()), !dbg !14599
  call void @llvm.dbg.value(metadata i8* %2, metadata !14596, metadata !DIExpression()), !dbg !14599
  %5 = bitcast i32* %4 to i8*, !dbg !14600
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14600
  call void @llvm.dbg.value(metadata i32 0, metadata !14597, metadata !DIExpression()), !dbg !14599
  store i32 0, i32* %4, align 4, !dbg !14601
  call void @llvm.dbg.value(metadata i32* %4, metadata !14597, metadata !DIExpression(DW_OP_deref)), !dbg !14599
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14602
  call void @llvm.dbg.value(metadata i16* %6, metadata !14598, metadata !DIExpression()), !dbg !14599
  %7 = load i32, i32* %4, align 4, !dbg !14603
  call void @llvm.dbg.value(metadata i32 %7, metadata !14597, metadata !DIExpression()), !dbg !14599
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14604
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14605
  ret i32 %8, !dbg !14606
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14607 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14611, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.value(metadata i32* %1, metadata !14612, metadata !DIExpression()), !dbg !14617
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14618
  %4 = load i16*, i16** %3, align 4, !dbg !14618
  call void @llvm.dbg.value(metadata i16* %4, metadata !14613, metadata !DIExpression()), !dbg !14617
  %5 = icmp eq i16* %4, null, !dbg !14619
  br i1 %5, label %14, label %6, !dbg !14620

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14621
  call void @llvm.dbg.value(metadata i32 %7, metadata !14614, metadata !DIExpression()), !dbg !14621
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14622
  %9 = load i16, i16* %8, align 2, !dbg !14622
  %10 = add i16 %9, -32767, !dbg !14623
  %11 = icmp ult i16 %10, 2, !dbg !14623
  %12 = add i32 %7, 1, !dbg !14624
  call void @llvm.dbg.value(metadata i32 %12, metadata !14614, metadata !DIExpression()), !dbg !14621
  br i1 %11, label %13, label %6, !dbg !14623, !llvm.loop !14626

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14629
  br label %14, !dbg !14630

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14631
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14632 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14636, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i32 %1, metadata !14637, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14638, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i8* %3, metadata !14639, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i32 0, metadata !14640, metadata !DIExpression()), !dbg !14648
  %5 = icmp eq i32 %1, 0, !dbg !14649
  br i1 %5, label %16, label %8, !dbg !14650

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14640, metadata !DIExpression()), !dbg !14648
  %7 = icmp eq i32 %15, %1, !dbg !14649
  br i1 %7, label %16, label %8, !dbg !14650, !llvm.loop !14651

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14640, metadata !DIExpression()), !dbg !14648
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14653
  %11 = load i16, i16* %10, align 2, !dbg !14653
  call void @llvm.dbg.value(metadata i16 %11, metadata !14642, metadata !DIExpression()), !dbg !14654
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !14655
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14645, metadata !DIExpression()), !dbg !14654
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !14656
  call void @llvm.dbg.value(metadata i32 %13, metadata !14646, metadata !DIExpression()), !dbg !14654
  %14 = icmp slt i32 %13, 0, !dbg !14657
  %15 = add nuw i32 %9, 1, !dbg !14659
  call void @llvm.dbg.value(metadata i32 %15, metadata !14640, metadata !DIExpression()), !dbg !14648
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !14661 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14665, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14666, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14667, metadata !DIExpression()), !dbg !14668
  %2 = sext i16 %0 to i32, !dbg !14669
  %3 = icmp slt i16 %0, 1, !dbg !14671
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14672
  %6 = add nsw i32 %2, -1, !dbg !14672
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14672
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14672
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14666, metadata !DIExpression()), !dbg !14668
  ret %struct.device* %8, !dbg !14673
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14674 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14676, metadata !DIExpression()), !dbg !14681
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14677, metadata !DIExpression()), !dbg !14681
  call void @llvm.dbg.value(metadata i8* %2, metadata !14678, metadata !DIExpression()), !dbg !14681
  %5 = bitcast i32* %4 to i8*, !dbg !14682
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14682
  call void @llvm.dbg.value(metadata i32 0, metadata !14679, metadata !DIExpression()), !dbg !14681
  store i32 0, i32* %4, align 4, !dbg !14683
  call void @llvm.dbg.value(metadata i32* %4, metadata !14679, metadata !DIExpression(DW_OP_deref)), !dbg !14681
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14684
  call void @llvm.dbg.value(metadata i16* %6, metadata !14680, metadata !DIExpression()), !dbg !14681
  %7 = load i32, i32* %4, align 4, !dbg !14685
  call void @llvm.dbg.value(metadata i32 %7, metadata !14679, metadata !DIExpression()), !dbg !14681
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14686
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14687
  ret i32 %8, !dbg !14688
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14689 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14691, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32* %1, metadata !14692, metadata !DIExpression()), !dbg !14696
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14697
  %4 = load i16*, i16** %3, align 4, !dbg !14697
  call void @llvm.dbg.value(metadata i16* %4, metadata !14693, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 0, metadata !14694, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i32 0, metadata !14695, metadata !DIExpression()), !dbg !14696
  %5 = icmp eq i16* %4, null, !dbg !14698
  br i1 %5, label %22, label %6, !dbg !14700

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14694, metadata !DIExpression()), !dbg !14696
  call void @llvm.dbg.value(metadata i16* %8, metadata !14693, metadata !DIExpression()), !dbg !14696
  %9 = load i16, i16* %8, align 2, !dbg !14701
  %10 = icmp eq i16 %9, -32768, !dbg !14705
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()), !dbg !14696
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14706
  call void @llvm.dbg.value(metadata i16* %11, metadata !14693, metadata !DIExpression()), !dbg !14696
  %12 = zext i1 %10 to i32, !dbg !14707
  %13 = add i32 %7, %12, !dbg !14707
  call void @llvm.dbg.value(metadata i32 %13, metadata !14694, metadata !DIExpression()), !dbg !14696
  %14 = icmp eq i32 %13, 2, !dbg !14708
  br i1 %14, label %15, label %6, !dbg !14709

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14696
  call void @llvm.dbg.value(metadata i32 %16, metadata !14695, metadata !DIExpression()), !dbg !14696
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14710
  %18 = load i16, i16* %17, align 2, !dbg !14710
  %19 = icmp eq i16 %18, 32767, !dbg !14711
  %20 = add i32 %16, 1, !dbg !14712
  call void @llvm.dbg.value(metadata i32 %20, metadata !14695, metadata !DIExpression()), !dbg !14696
  br i1 %19, label %21, label %15, !dbg !14714, !llvm.loop !14715

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14717
  br label %22, !dbg !14718

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14719
  call void @llvm.dbg.value(metadata i16* %23, metadata !14693, metadata !DIExpression()), !dbg !14696
  ret i16* %23, !dbg !14720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !14721 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14724
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14725
  ret i32* %2, !dbg !14726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !14727 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14875, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14876, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14877, metadata !DIExpression()), !dbg !14878
  ret void, !dbg !14879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14884, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata i32 %1, metadata !14885, metadata !DIExpression()), !dbg !14886
  ret void, !dbg !14887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14888 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14892, metadata !DIExpression()), !dbg !14894
  call void @llvm.dbg.value(metadata i32 %1, metadata !14893, metadata !DIExpression()), !dbg !14894
  ret void, !dbg !14895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !14896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14900, metadata !DIExpression()), !dbg !14902
  call void @llvm.dbg.value(metadata i8* %1, metadata !14901, metadata !DIExpression()), !dbg !14902
  ret i32 -134, !dbg !14903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !14904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14908, metadata !DIExpression()), !dbg !14910
  call void @llvm.dbg.value(metadata i8* %1, metadata !14909, metadata !DIExpression()), !dbg !14910
  ret i32 -134, !dbg !14911
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !14912 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14915, metadata !DIExpression()), !dbg !14916
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14917, !srcloc !14923
  call void @llvm.dbg.value(metadata i32 undef, metadata !14920, metadata !DIExpression()) #25, !dbg !14924
  call void @llvm.dbg.value(metadata i32 undef, metadata !14921, metadata !DIExpression()) #25, !dbg !14924
  br label %3, !dbg !14925

3:                                                ; preds = %3, %1
  br label %3, !dbg !14926, !llvm.loop !14929
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14936, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14937, metadata !DIExpression()), !dbg !14938
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.230, i32 0, i32 0), i32 noundef 69) #27, !dbg !14939
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14944
  unreachable, !dbg !14944
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !14945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14947, metadata !DIExpression()), !dbg !14948
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14949
  unreachable, !dbg !14949
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14952, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14953, metadata !DIExpression()), !dbg !14956
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14957, !srcloc !14923
  call void @llvm.dbg.value(metadata i32 undef, metadata !14920, metadata !DIExpression()) #25, !dbg !14959
  call void @llvm.dbg.value(metadata i32 undef, metadata !14921, metadata !DIExpression()) #25, !dbg !14959
  call void @llvm.dbg.value(metadata i32 undef, metadata !14954, metadata !DIExpression()), !dbg !14956
  %4 = tail call fastcc %struct.k_thread* @k_current_get.233() #28, !dbg !14960
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14955, metadata !DIExpression()), !dbg !14956
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !14961
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.234, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !14961
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14966
  br i1 %6, label %15, label %7, !dbg !14968

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14969, metadata !DIExpression()), !dbg !14974
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14976
  %9 = load i32, i32* %8, align 4, !dbg !14976
  %10 = and i32 %9, 511, !dbg !14977
  %11 = icmp eq i32 %10, 0, !dbg !14978
  br i1 %11, label %13, label %12, !dbg !14979

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 69) #27, !dbg !14980
  br label %13, !dbg !14986

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !14987
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.236, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !14987
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !14992
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14969, metadata !DIExpression()), !dbg !14993
  br label %17, !dbg !14998

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !14987
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.236, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !14987
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !14992
  br label %17, !dbg !14999

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14957
  call void @llvm.dbg.value(metadata i32 %18, metadata !14920, metadata !DIExpression()) #25, !dbg !14959
  call void @llvm.dbg.value(metadata i32 %18, metadata !14954, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.value(metadata i32 undef, metadata !15000, metadata !DIExpression()) #25, !dbg !15003
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15005, !srcloc !15006
  tail call fastcc void @k_thread_abort.237(%struct.k_thread* noundef %4) #26, !dbg !15007
  ret void, !dbg !15010
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.233() unnamed_addr #13 !dbg !15011 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.245() #28, !dbg !15015
  ret %struct.k_thread* %1, !dbg !15016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !15017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15021, metadata !DIExpression()), !dbg !15022
  %2 = icmp ult i32 %0, 5, !dbg !15023
  br i1 %2, label %3, label %6, !dbg !15023

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !15023
  %5 = load i8*, i8** %4, align 4, !dbg !15023
  br label %6, !dbg !15023

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.239, i32 0, i32 0), %1 ], !dbg !15024
  ret i8* %7, !dbg !15026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15027 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15031, metadata !DIExpression()), !dbg !15033
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !15034
  br i1 %2, label %9, label %3, !dbg !15035

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !15036
  call void @llvm.dbg.value(metadata i8* %4, metadata !15032, metadata !DIExpression()), !dbg !15033
  %5 = icmp eq i8* %4, null, !dbg !15037
  br i1 %5, label %9, label %6, !dbg !15039

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !15040
  %8 = icmp eq i8 %7, 0, !dbg !15041
  br i1 %8, label %9, label %10, !dbg !15042

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.238, i32 0, i32 0), metadata !15032, metadata !DIExpression()), !dbg !15033
  br label %10, !dbg !15043

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.238, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !15033
  call void @llvm.dbg.value(metadata i8* %11, metadata !15032, metadata !DIExpression()), !dbg !15033
  ret i8* %11, !dbg !15045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.237(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15046 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15050, metadata !DIExpression()), !dbg !15051
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15052, !srcloc !15054
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !15055
  ret void, !dbg !15056
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.245() unnamed_addr #13 !dbg !15057 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15058, !srcloc !15060
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !15061
  ret %struct.k_thread* %1, !dbg !15062
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15063 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15067, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata i32 %1, metadata !15068, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata i32 %2, metadata !15069, metadata !DIExpression()), !dbg !15070
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !15071
  ret void, !dbg !15072
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15073 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15077, metadata !DIExpression()), !dbg !15080
  call void @llvm.dbg.value(metadata i8* %1, metadata !15078, metadata !DIExpression()), !dbg !15080
  call void @llvm.dbg.value(metadata i32 %2, metadata !15079, metadata !DIExpression()), !dbg !15080
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !15081
  ret void, !dbg !15082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !15083 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !15084
  ret void, !dbg !15085
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !15086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15088, metadata !DIExpression()), !dbg !15089
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !15090
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15091
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !15092
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !15093
  %4 = trunc i32 %0 to i8, !dbg !15094
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !15095
  store i8 %4, i8* %5, align 4, !dbg !15096
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !15097
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !15098
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !15099
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !15100
  store i8* %8, i8** %9, align 4, !dbg !15101
  ret void, !dbg !15102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !15103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15105, metadata !DIExpression()), !dbg !15111
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15112
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15106, metadata !DIExpression()), !dbg !15111
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !15113
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !15107, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata i8* null, metadata !15110, metadata !DIExpression()), !dbg !15111
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !15114
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !15115
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !15116
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !15117
  ret void, !dbg !15118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !15119 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15123, metadata !DIExpression()), !dbg !15124
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15125
  ret i8* %2, !dbg !15126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15127 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15132, metadata !DIExpression()), !dbg !15133
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15134
  %3 = load i8, i8* %2, align 1, !dbg !15135
  %4 = and i8 %3, -5, !dbg !15135
  store i8 %4, i8* %2, align 1, !dbg !15135
  ret void, !dbg !15136
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !15137 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !15140
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !15141
  %3 = ptrtoint i8* %2 to i32, !dbg !15150
  %4 = add i32 %3, 2048, !dbg !15151
  call void @llvm.dbg.value(metadata i32 %4, metadata !15145, metadata !DIExpression()) #25, !dbg !15152
  call void @llvm.dbg.value(metadata i32 %4, metadata !15153, metadata !DIExpression()) #25, !dbg !15156
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !15158, !srcloc !15159
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15160
  %6 = or i32 %5, 512, !dbg !15160
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15160
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -2, i32 noundef 255) #27, !dbg !15161
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -5, i32 noundef 0) #27, !dbg !15164
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -12, i32 noundef 0) #27, !dbg !15165
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -11, i32 noundef 0) #27, !dbg !15166
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -10, i32 noundef 0) #27, !dbg !15167
  tail call fastcc void @__NVIC_SetPriority.254(i32 noundef -4, i32 noundef 0) #27, !dbg !15168
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15169
  %8 = or i32 %7, 458752, !dbg !15169
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15169
  tail call void @z_arm_fault_init() #27, !dbg !15170
  tail call void @z_arm_cpu_idle_init() #27, !dbg !15171
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !15172
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !15175
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !15176
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !15177
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !15178
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !15178
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !15139, metadata !DIExpression()), !dbg !15179
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !15180
  call void @z_device_state_init() #27, !dbg !15181
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !15182
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !15183
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !15184
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !15185
  unreachable, !dbg !15185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2403, metadata !DIExpression()), !dbg !15186
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !15187
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !15187
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2404, metadata !DIExpression()), !dbg !15186
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2404, metadata !DIExpression()), !dbg !15186
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !15188
  br i1 %7, label %8, label %35, !dbg !15189

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2404, metadata !DIExpression()), !dbg !15186
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !15190
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !15190
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2414, metadata !DIExpression()), !dbg !15191
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !15192
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !15192
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !15193
  call void @llvm.dbg.value(metadata i32 %14, metadata !2418, metadata !DIExpression()), !dbg !15191
  %15 = icmp eq %struct.device* %11, null, !dbg !15194
  br i1 %15, label %32, label %16, !dbg !15196

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !15197
  br i1 %17, label %26, label %18, !dbg !15200

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !15201
  call void @llvm.dbg.value(metadata i32 %19, metadata !2418, metadata !DIExpression()), !dbg !15191
  %20 = icmp ult i32 %19, 255, !dbg !15203
  %21 = select i1 %20, i32 %19, i32 255, !dbg !15203
  call void @llvm.dbg.value(metadata i32 %21, metadata !2418, metadata !DIExpression()), !dbg !15191
  %22 = trunc i32 %21 to i8, !dbg !15204
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15205
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !15205
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !15206
  store i8 %22, i8* %25, align 1, !dbg !15207
  br label %26, !dbg !15208

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15209
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !15209
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !15210
  %30 = load i8, i8* %29, align 1, !dbg !15211
  %31 = or i8 %30, 1, !dbg !15211
  store i8 %31, i8* %29, align 1, !dbg !15211
  br label %32, !dbg !15212

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !15213
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2404, metadata !DIExpression()), !dbg !15186
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !15188
  br i1 %34, label %8, label %35, !dbg !15189, !llvm.loop !15214

35:                                               ; preds = %32, %1
  ret void, !dbg !15216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.254(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !15217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15219, metadata !DIExpression()), !dbg !15221
  call void @llvm.dbg.value(metadata i32 %1, metadata !15220, metadata !DIExpression()), !dbg !15221
  %3 = trunc i32 %1 to i8, !dbg !15222
  %4 = shl i8 %3, 4, !dbg !15222
  %5 = and i32 %0, 15, !dbg !15225
  %6 = add nsw i32 %5, -4, !dbg !15226
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !15227
  store volatile i8 %4, i8* %7, align 1, !dbg !15228
  ret void, !dbg !15229
}

; Function Attrs: optsize
declare !dbg !15230 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !15231 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15234, metadata !DIExpression()), !dbg !15235
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15236
  store i8 1, i8* %2, align 1, !dbg !15237
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15238
  store i8 1, i8* %3, align 4, !dbg !15239
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15240
  store i32 0, i32* %4, align 4, !dbg !15241
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15242
  store i32 0, i32* %5, align 4, !dbg !15243
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15244
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !15245
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15246
  ret void, !dbg !15247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !15248 {
  tail call void @z_sched_init() #27, !dbg !15253
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15254
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.255, i32 0, i32 0)) #27, !dbg !15255
  call void @llvm.dbg.value(metadata i8* %1, metadata !15252, metadata !DIExpression()), !dbg !15256
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !15257
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !15258
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !15259
  ret i8* %1, !dbg !15260
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !15261 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15265, metadata !DIExpression()), !dbg !15266
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !15267
  unreachable, !dbg !15268
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !15269 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15271, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i8* %1, metadata !15272, metadata !DIExpression()), !dbg !15274
  call void @llvm.dbg.value(metadata i8* %2, metadata !15273, metadata !DIExpression()), !dbg !15274
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !15275
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !15276
  tail call void @boot_banner() #27, !dbg !15277
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !15278
  tail call void @z_init_static_threads() #27, !dbg !15279
  tail call void @main() #27, !dbg !15280
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15281
  %5 = and i8 %4, -2, !dbg !15281
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15281
  ret void, !dbg !15282
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15283 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15293, metadata !DIExpression()), !dbg !15295
  call void @llvm.dbg.value(metadata i8* %1, metadata !15294, metadata !DIExpression()), !dbg !15295
  ret void, !dbg !15296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15297 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15299, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata i8* %1, metadata !15300, metadata !DIExpression()), !dbg !15301
  ret void, !dbg !15302
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !15303 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15304, !srcloc !15311
  call void @llvm.dbg.value(metadata i32 %1, metadata !15307, metadata !DIExpression()) #25, !dbg !15312
  %2 = icmp ne i32 %1, 0, !dbg !15313
  ret i1 %2, !dbg !15314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !15315 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15316
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15317
  %3 = load i8, i8* %2, align 4, !dbg !15318
  %4 = or i8 %3, 1, !dbg !15318
  store i8 %4, i8* %2, align 4, !dbg !15318
  ret void, !dbg !15319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !15320 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15321
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15322
  %3 = load i8, i8* %2, align 4, !dbg !15323
  %4 = and i8 %3, -2, !dbg !15323
  store i8 %4, i8* %2, align 4, !dbg !15323
  ret void, !dbg !15324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !15325 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15326
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15327
  %3 = load i8, i8* %2, align 4, !dbg !15327
  %4 = and i8 %3, 1, !dbg !15328
  %5 = icmp ne i8 %4, 0, !dbg !15329
  ret i1 %5, !dbg !15330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !15331 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15335, metadata !DIExpression()), !dbg !15337
  call void @llvm.dbg.value(metadata i8* %1, metadata !15336, metadata !DIExpression()), !dbg !15337
  ret i32 -88, !dbg !15338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15339 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15343, metadata !DIExpression()), !dbg !15344
  ret i8* null, !dbg !15345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #3 !dbg !15346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15350, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata i8* %1, metadata !15351, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata i32 %2, metadata !15352, metadata !DIExpression()), !dbg !15353
  ret i32 -88, !dbg !15354
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2427 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2543, metadata !DIExpression()), !dbg !15355
  call void @llvm.dbg.value(metadata i8* %1, metadata !2544, metadata !DIExpression()), !dbg !15355
  call void @llvm.dbg.value(metadata i32 %2, metadata !2545, metadata !DIExpression()), !dbg !15355
  call void @llvm.dbg.value(metadata i32 0, metadata !2546, metadata !DIExpression()), !dbg !15355
  call void @llvm.dbg.value(metadata i8 undef, metadata !2548, metadata !DIExpression()), !dbg !15355
  %4 = icmp eq i8* %1, null, !dbg !15356
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !15358
  br i1 %6, label %46, label %7, !dbg !15358

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15359
  %9 = load i8, i8* %8, align 1, !dbg !15359
  call void @llvm.dbg.value(metadata i8 %9, metadata !2548, metadata !DIExpression()), !dbg !15355
  %10 = add i32 %2, -1, !dbg !15360
  call void @llvm.dbg.value(metadata i32 %10, metadata !2545, metadata !DIExpression()), !dbg !15355
  call void @llvm.dbg.value(metadata i8 0, metadata !2549, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata i8 %9, metadata !2548, metadata !DIExpression()), !dbg !15355
  call void @llvm.dbg.value(metadata i32 0, metadata !2546, metadata !DIExpression()), !dbg !15355
  %11 = icmp eq i8 %9, 0, !dbg !15362
  br i1 %11, label %12, label %15, !dbg !15364

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !15365
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !15366
  store i8 0, i8* %14, align 1, !dbg !15367
  br label %46, !dbg !15368

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2549, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata i8 %17, metadata !2548, metadata !DIExpression()), !dbg !15355
  call void @llvm.dbg.value(metadata i32 %18, metadata !2546, metadata !DIExpression()), !dbg !15355
  %19 = zext i8 %17 to i32, !dbg !15369
  %20 = zext i8 %16 to i32, !dbg !15370
  %21 = shl nuw i32 1, %20, !dbg !15370
  call void @llvm.dbg.value(metadata i32 %21, metadata !2547, metadata !DIExpression()), !dbg !15355
  %22 = and i32 %21, %19, !dbg !15372
  %23 = icmp eq i32 %22, 0, !dbg !15374
  br i1 %23, label %42, label %24, !dbg !15375

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !15376
  %26 = sub i32 %10, %18, !dbg !15377
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !15378
  %28 = load i8*, i8** %27, align 4, !dbg !15378
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !15379
  %30 = load i32, i32* %29, align 4, !dbg !15379
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !15380
  %32 = add i32 %31, %18, !dbg !15381
  call void @llvm.dbg.value(metadata i32 %32, metadata !2546, metadata !DIExpression()), !dbg !15355
  %33 = trunc i32 %21 to i8, !dbg !15382
  %34 = xor i8 %33, -1, !dbg !15382
  %35 = and i8 %17, %34, !dbg !15382
  call void @llvm.dbg.value(metadata i8 %35, metadata !2548, metadata !DIExpression()), !dbg !15355
  %36 = icmp eq i8 %35, 0, !dbg !15383
  br i1 %36, label %12, label %37, !dbg !15385

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !15386
  %39 = sub i32 %10, %32, !dbg !15388
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.258, i32 0, i32 0), i32 noundef 1) #26, !dbg !15389
  %41 = add i32 %40, %32, !dbg !15390
  call void @llvm.dbg.value(metadata i32 %41, metadata !2546, metadata !DIExpression()), !dbg !15355
  br label %42, !dbg !15391

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !15355
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !15355
  call void @llvm.dbg.value(metadata i8 %44, metadata !2548, metadata !DIExpression()), !dbg !15355
  call void @llvm.dbg.value(metadata i32 %43, metadata !2546, metadata !DIExpression()), !dbg !15355
  %45 = add i8 %16, 1, !dbg !15392
  call void @llvm.dbg.value(metadata i8 %45, metadata !2549, metadata !DIExpression()), !dbg !15361
  br label %15, !dbg !15364

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.259, i32 0, i32 0), %3 ], !dbg !15355
  ret i8* %47, !dbg !15393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !15394 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15398, metadata !DIExpression()), !dbg !15403
  call void @llvm.dbg.value(metadata i32 %1, metadata !15399, metadata !DIExpression()), !dbg !15403
  call void @llvm.dbg.value(metadata i8* %2, metadata !15400, metadata !DIExpression()), !dbg !15403
  call void @llvm.dbg.value(metadata i32 %3, metadata !15401, metadata !DIExpression()), !dbg !15403
  %5 = icmp ult i32 %1, %3, !dbg !15404
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !15404
  call void @llvm.dbg.value(metadata i32 %6, metadata !15402, metadata !DIExpression()), !dbg !15403
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !15405
  ret i32 %6, !dbg !15406
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15407 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15411, metadata !DIExpression()), !dbg !15412
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !15413
  ret void, !dbg !15414
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !15415 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15424, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15425, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata i32 %2, metadata !15426, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15427, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata i8* %4, metadata !15428, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata i8* %5, metadata !15429, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata i8* %6, metadata !15430, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata i32 %7, metadata !15431, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata i32 %8, metadata !15432, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata i8* undef, metadata !15433, metadata !DIExpression()), !dbg !15435
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15436
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !15437
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15438
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !15439
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !15440
  call void @llvm.dbg.value(metadata i8* %13, metadata !15434, metadata !DIExpression()), !dbg !15435
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !15441
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15442
  store i8* null, i8** %14, align 4, !dbg !15443
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15444
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !15444
  br i1 %16, label %20, label %17, !dbg !15446

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !15447
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !15447
  br label %20, !dbg !15448

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !15435
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15449
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !15451
  ret i8* %13, !dbg !15452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !15453 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15458, metadata !DIExpression()), !dbg !15459
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15460
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !15461
  ret void, !dbg !15462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !15463 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15468, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 %1, metadata !15469, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 %2, metadata !15470, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.value(metadata i32 %3, metadata !15471, metadata !DIExpression()), !dbg !15472
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !15473
  store %union.anon* null, %union.anon** %5, align 8, !dbg !15474
  %6 = trunc i32 %3 to i8, !dbg !15475
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !15476
  store i8 %6, i8* %7, align 4, !dbg !15477
  %8 = trunc i32 %2 to i8, !dbg !15478
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !15479
  store i8 %8, i8* %9, align 1, !dbg !15480
  %10 = trunc i32 %1 to i8, !dbg !15481
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !15482
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !15482
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !15482
  store i8 %10, i8* %13, align 2, !dbg !15483
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !15484
  store i8 0, i8* %14, align 1, !dbg !15485
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !15486
  ret void, !dbg !15487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !15488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15492, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15493, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata i32 %2, metadata !15494, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata i32 0, metadata !15499, metadata !DIExpression()), !dbg !15500
  %4 = add i32 %2, 7, !dbg !15501
  %5 = and i32 %4, -8, !dbg !15501
  %6 = add i32 %5, 64, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %6, metadata !15495, metadata !DIExpression()), !dbg !15500
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.269(%struct.z_thread_stack_element* noundef %1) #26, !dbg !15503
  call void @llvm.dbg.value(metadata i8* %7, metadata !15498, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata i32 %5, metadata !15496, metadata !DIExpression()), !dbg !15500
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !15504
  call void @llvm.dbg.value(metadata i8* %8, metadata !15497, metadata !DIExpression()), !dbg !15500
  call void @llvm.dbg.value(metadata i32 0, metadata !15499, metadata !DIExpression()), !dbg !15500
  %9 = ptrtoint i8* %7 to i32, !dbg !15505
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15506
  store i32 %9, i32* %10, align 4, !dbg !15507
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15508
  store i32 %5, i32* %11, align 4, !dbg !15509
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15510
  store i32 0, i32* %12, align 4, !dbg !15511
  call void @llvm.dbg.value(metadata i8* %8, metadata !15497, metadata !DIExpression()), !dbg !15500
  ret i8* %8, !dbg !15512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.269(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !15513 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15517, metadata !DIExpression()), !dbg !15518
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15519
  ret i8* %2, !dbg !15520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15521 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15526, metadata !DIExpression()), !dbg !15527
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15528
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15529
  ret void, !dbg !15530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15531 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15533, metadata !DIExpression()), !dbg !15534
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15535
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !15536
  ret void, !dbg !15537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15538 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15542, metadata !DIExpression()), !dbg !15543
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15544
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15545
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15546
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15547
  ret void, !dbg !15548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15549 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15554, metadata !DIExpression()), !dbg !15555
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15556
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15557
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15558
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15559
  ret void, !dbg !15560
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15561 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !15578, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15569, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15570, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.value(metadata i32 %2, metadata !15571, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15572, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.value(metadata i8* %4, metadata !15573, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.value(metadata i8* %5, metadata !15574, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.value(metadata i8* %6, metadata !15575, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.value(metadata i32 %7, metadata !15576, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.value(metadata i32 %8, metadata !15577, metadata !DIExpression()), !dbg !15579
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !15580
  %13 = icmp eq i64 %11, -1, !dbg !15581
  br i1 %13, label %15, label %14, !dbg !15583

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !15584
  br label %15, !dbg !15586

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !15587
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15588 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15593, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15592, metadata !DIExpression()), !dbg !15594
  %4 = icmp eq i64 %3, 0, !dbg !15595
  br i1 %4, label %5, label %6, !dbg !15597

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15598
  br label %7, !dbg !15600

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15601
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15604 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15608, metadata !DIExpression()), !dbg !15609
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15610, !srcloc !15612
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15613
  ret void, !dbg !15614
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15615 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15618, metadata !DIExpression()), !dbg !15619
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15617, metadata !DIExpression()), !dbg !15619
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15620
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !15621
  ret void, !dbg !15622
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15623 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15625, metadata !DIExpression()), !dbg !15645
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !15646

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !15647
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15643, metadata !DIExpression()), !dbg !15648
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !15649

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15625, metadata !DIExpression()), !dbg !15645
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15650
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15650
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15653
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !15653
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15654
  %9 = load i32, i32* %8, align 4, !dbg !15654
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15655
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !15655
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15656
  %13 = load i8*, i8** %12, align 4, !dbg !15656
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15657
  %15 = load i8*, i8** %14, align 4, !dbg !15657
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15658
  %17 = load i8*, i8** %16, align 4, !dbg !15658
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15659
  %19 = load i32, i32* %18, align 4, !dbg !15659
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15660
  %21 = load i32, i32* %20, align 4, !dbg !15660
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !15661
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15662
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !15663
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !15664
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !15664
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15665
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !15625, metadata !DIExpression()), !dbg !15645
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15666
  br i1 %27, label %2, label %1, !dbg !15646, !llvm.loop !15668

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !15647
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15643, metadata !DIExpression()), !dbg !15648
  br label %29, !dbg !15649

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !15670
  ret void, !dbg !15671

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !15643, metadata !DIExpression()), !dbg !15648
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !15672
  %33 = load i32, i32* %32, align 4, !dbg !15672
  %34 = icmp eq i32 %33, -1, !dbg !15676
  br i1 %34, label %43, label %35, !dbg !15677

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !15678
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !15678
  %38 = icmp sgt i32 %33, 0, !dbg !15680
  %39 = select i1 %38, i32 %33, i32 0, !dbg !15680
  %40 = zext i32 %39 to i64, !dbg !15680
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !15680
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !15681
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !15681
  br label %43, !dbg !15682

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !15683
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !15643, metadata !DIExpression()), !dbg !15648
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15684
  br i1 %45, label %30, label %29, !dbg !15649, !llvm.loop !15686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !15688 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15693, metadata !DIExpression()), !dbg !15694
  call void @llvm.dbg.value(metadata i64 %0, metadata !15695, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i32 1000, metadata !15700, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i32 10000, metadata !15701, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i8 1, metadata !15702, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i8 0, metadata !15703, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i8 1, metadata !15704, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i8 0, metadata !15705, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i8 1, metadata !15706, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i8 0, metadata !15707, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i64 0, metadata !15708, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i64 0, metadata !15708, metadata !DIExpression()), !dbg !15712
  %2 = mul i64 %0, 10, !dbg !15714
  ret i64 %2, !dbg !15720
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !15721 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15723, metadata !DIExpression()), !dbg !15727
  call void @llvm.dbg.value(metadata i8* %1, metadata !15724, metadata !DIExpression()), !dbg !15727
  call void @llvm.dbg.value(metadata i8* %2, metadata !15725, metadata !DIExpression()), !dbg !15727
  call void @llvm.dbg.value(metadata i8* %3, metadata !15726, metadata !DIExpression()), !dbg !15727
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15728
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15729
  %7 = load i8, i8* %6, align 4, !dbg !15730
  %8 = or i8 %7, 4, !dbg !15730
  store i8 %8, i8* %6, align 4, !dbg !15730
  tail call void @z_thread_essential_clear() #26, !dbg !15731
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !15732
  unreachable, !dbg !15732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15733 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15737, metadata !DIExpression()), !dbg !15738
  ret i32 -134, !dbg !15739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !15740 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15744, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i32 %1, metadata !15745, metadata !DIExpression()), !dbg !15746
  ret i32 -134, !dbg !15747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #3 !dbg !15748 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15755, metadata !DIExpression()), !dbg !15757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !15756, metadata !DIExpression()), !dbg !15757
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15758
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !15760
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15757
  ret i32 %6, !dbg !15761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #3 !dbg !15762 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15766, metadata !DIExpression()), !dbg !15767
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !15768
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15767
  ret i32 %3, !dbg !15770
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15771 {
  tail call void @sys_clock_idle_exit() #27, !dbg !15773
  ret void, !dbg !15774
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !15775 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15777, metadata !DIExpression()), !dbg !15780
  call void @llvm.dbg.value(metadata i8* %1, metadata !15778, metadata !DIExpression()), !dbg !15780
  call void @llvm.dbg.value(metadata i8* %2, metadata !15779, metadata !DIExpression()), !dbg !15780
  br label %4, !dbg !15781

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15782, !srcloc !15789
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #25, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !15786, metadata !DIExpression()) #25, !dbg !15790
  tail call fastcc void @k_cpu_idle() #26, !dbg !15791
  br label %4, !dbg !15781, !llvm.loop !15792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15794 {
  tail call void @arch_cpu_idle() #27, !dbg !15795
  ret void, !dbg !15796
}

; Function Attrs: optsize
declare !dbg !15797 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15798 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15802, metadata !DIExpression()), !dbg !15806
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15803, metadata !DIExpression()), !dbg !15806
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15807
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15807
  %5 = load i8, i8* %4, align 2, !dbg !15807
  call void @llvm.dbg.value(metadata i8 %5, metadata !15804, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15806
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15808
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15808
  %8 = load i8, i8* %7, align 2, !dbg !15808
  call void @llvm.dbg.value(metadata i8 %8, metadata !15805, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15806
  %9 = icmp eq i8 %8, %5, !dbg !15809
  %10 = sext i8 %5 to i32, !dbg !15811
  %11 = sext i8 %8 to i32, !dbg !15811
  %12 = sub nsw i32 %11, %10, !dbg !15811
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15811
  ret i32 %13, !dbg !15812
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15813 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15817, metadata !DIExpression()), !dbg !15818
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15819
  %3 = icmp eq i32 %2, 0, !dbg !15821
  br i1 %3, label %8, label %4, !dbg !15822

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15823
  %6 = add i32 %5, %2, !dbg !15825
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15826
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15827
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15828
  br label %8, !dbg !15829

8:                                                ; preds = %4, %1
  ret void, !dbg !15830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !15831 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15835, metadata !DIExpression()), !dbg !15837
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15838
  call void @llvm.dbg.value(metadata i32 %1, metadata !15836, metadata !DIExpression()), !dbg !15837
  ret i32 %1, !dbg !15839
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15844, metadata !DIExpression()), !dbg !15853
  call void @llvm.dbg.value(metadata i32 %1, metadata !15845, metadata !DIExpression()), !dbg !15853
  call void @llvm.dbg.value(metadata i32 0, metadata !15846, metadata !DIExpression()), !dbg !15854
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !15862
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15864, !srcloc !15870
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15864
  call void @llvm.dbg.value(metadata i32 %4, metadata !15867, metadata !DIExpression()) #25, !dbg !15871
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !15871
  call void @llvm.dbg.value(metadata i32 %4, metadata !15861, metadata !DIExpression()) #25, !dbg !15862
  call void @llvm.dbg.value(metadata i32 %4, metadata !15852, metadata !DIExpression()), !dbg !15854
  call void @llvm.dbg.value(metadata i32 undef, metadata !15846, metadata !DIExpression()), !dbg !15854
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15872
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15875
  %6 = icmp sgt i32 %0, 0, !dbg !15876
  %7 = icmp sgt i32 %5, 2, !dbg !15878
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15878
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15878
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15879
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15880
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15881
  call void @llvm.dbg.value(metadata i32 %4, metadata !15882, metadata !DIExpression()) #25, !dbg !15888
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !15888
  call void @llvm.dbg.value(metadata i32 %4, metadata !15890, metadata !DIExpression()) #25, !dbg !15893
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15895, !srcloc !15896
  call void @llvm.dbg.value(metadata i32 1, metadata !15846, metadata !DIExpression()), !dbg !15854
  call void @llvm.dbg.value(metadata i32 undef, metadata !15846, metadata !DIExpression()), !dbg !15854
  ret void, !dbg !15897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !15898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15900, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i32 %0, metadata !15902, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15917
  call void @llvm.dbg.value(metadata i32 1000, metadata !15905, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i32 10000, metadata !15906, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i8 1, metadata !15907, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i1 true, metadata !15908, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15917
  call void @llvm.dbg.value(metadata i1 true, metadata !15909, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15917
  call void @llvm.dbg.value(metadata i8 0, metadata !15910, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i1 true, metadata !15911, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15917
  call void @llvm.dbg.value(metadata i1 false, metadata !15912, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15917
  call void @llvm.dbg.value(metadata i64 0, metadata !15913, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.value(metadata i64 0, metadata !15913, metadata !DIExpression()), !dbg !15917
  %2 = mul i32 %0, 10, !dbg !15919
  ret i32 %2, !dbg !15925
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15928, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !15931
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15933, !srcloc !15870
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15933
  call void @llvm.dbg.value(metadata i32 %3, metadata !15867, metadata !DIExpression()) #25, !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !15935
  call void @llvm.dbg.value(metadata i32 %3, metadata !15861, metadata !DIExpression()) #25, !dbg !15931
  call void @llvm.dbg.value(metadata i32 %3, metadata !15929, metadata !DIExpression()), !dbg !15930
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15936
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15938
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15939
  br i1 %6, label %7, label %8, !dbg !15940

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15941
  call void @llvm.dbg.value(metadata i32 %3, metadata !15882, metadata !DIExpression()) #25, !dbg !15943
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !15943
  call void @llvm.dbg.value(metadata i32 %3, metadata !15890, metadata !DIExpression()) #25, !dbg !15945
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15947, !srcloc !15896
  br label %24, !dbg !15948

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15949
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15950
  %10 = icmp eq i32 %9, 0, !dbg !15950
  br i1 %10, label %21, label %11, !dbg !15952

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15953
  br i1 %12, label %13, label %21, !dbg !15954

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15955
  %15 = icmp sgt i32 %14, %0, !dbg !15958
  br i1 %15, label %19, label %16, !dbg !15959

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15960
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15960
  call void @llvm.dbg.value(metadata i32 %18, metadata !15929, metadata !DIExpression()), !dbg !15930
  br label %22, !dbg !15962

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15963
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15963
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15965
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15930
  call void @llvm.dbg.value(metadata i32 %23, metadata !15929, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata i32 %23, metadata !15882, metadata !DIExpression()) #25, !dbg !15967
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !15967
  call void @llvm.dbg.value(metadata i32 %23, metadata !15890, metadata !DIExpression()) #25, !dbg !15969
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !15971, !srcloc !15896
  br label %24, !dbg !15972

24:                                               ; preds = %22, %7
  ret void, !dbg !15972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !15973 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15977, metadata !DIExpression()), !dbg !15979
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !15980
  %3 = icmp eq i32 %2, 0, !dbg !15980
  br i1 %3, label %16, label %4, !dbg !15981

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15982
  br i1 %5, label %16, label %6, !dbg !15983

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15984
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15984
  %9 = load i8, i8* %8, align 2, !dbg !15984
  %10 = sext i8 %9 to i32, !dbg !15985
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15986
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !15987
  br i1 %12, label %16, label %13, !dbg !15988

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !15989
  %15 = xor i1 %14, true, !dbg !15990
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15979
  call void @llvm.dbg.value(metadata i1 %17, metadata !15978, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15979
  ret i1 %17, !dbg !15991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15992 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15996, metadata !DIExpression()), !dbg !15998
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15999
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15997, metadata !DIExpression()), !dbg !15998
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !16000
  br i1 %3, label %5, label %4, !dbg !16002

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !16003
  br label %5, !dbg !16005

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15996, metadata !DIExpression()), !dbg !15998
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16006
  ret i32 %6, !dbg !16007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16008 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16010, metadata !DIExpression()), !dbg !16012
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16013
  %3 = load i8, i8* %2, align 1, !dbg !16013
  call void @llvm.dbg.value(metadata i8 %3, metadata !16011, metadata !DIExpression()), !dbg !16012
  %4 = and i8 %3, 31, !dbg !16014
  %5 = icmp ne i8 %4, 0, !dbg !16015
  ret i1 %5, !dbg !16016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16019, metadata !DIExpression()), !dbg !16020
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16021
  br i1 %2, label %3, label %7, !dbg !16023

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16024, metadata !DIExpression()) #25, !dbg !16027
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16030
  %5 = load i8, i8* %4, align 1, !dbg !16031
  %6 = and i8 %5, 127, !dbg !16031
  store i8 %6, i8* %4, align 1, !dbg !16031
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16032, metadata !DIExpression()) #25, !dbg !16035
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16039
  br label %7, !dbg !16040

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16041, metadata !DIExpression()) #25, !dbg !16044
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16046
  %9 = load i8, i8* %8, align 1, !dbg !16047
  %10 = or i8 %9, -128, !dbg !16047
  store i8 %10, i8* %8, align 1, !dbg !16047
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16048, metadata !DIExpression()) #25, !dbg !16051
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16055, metadata !DIExpression()) #25, !dbg !16063
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16061, metadata !DIExpression()) #25, !dbg !16063
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16065
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !16062, metadata !DIExpression()) #25, !dbg !16063
  %12 = icmp eq %struct._dnode* %11, null, !dbg !16067
  br i1 %12, label %23, label %13, !dbg !16065

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16062, metadata !DIExpression()) #25, !dbg !16063
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !16069
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !16062, metadata !DIExpression()) #25, !dbg !16063
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !16070
  %17 = icmp sgt i32 %16, 0, !dbg !16073
  br i1 %17, label %18, label %20, !dbg !16074

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16075
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !16077
  br label %25, !dbg !16078

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !16067
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16062, metadata !DIExpression()) #25, !dbg !16063
  %22 = icmp eq %struct._dnode* %21, null, !dbg !16067
  br i1 %22, label %23, label %13, !dbg !16065, !llvm.loop !16079

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16081
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !16082
  br label %25, !dbg !16083

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16084
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !16085
  %28 = zext i1 %27 to i32, !dbg !16085
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !16086
  ret void, !dbg !16087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16090, metadata !DIExpression()), !dbg !16091
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !16092
  ret i1 %2, !dbg !16093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !16094 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16096, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16097, metadata !DIExpression()), !dbg !16098
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16099
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !16100
  ret void, !dbg !16101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !16102 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16106, metadata !DIExpression()), !dbg !16107
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !16108
  br i1 %2, label %6, label %3, !dbg !16108

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16109
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16109
  br label %6, !dbg !16108

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16108
  ret %struct._dnode* %7, !dbg !16110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16111 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16115, metadata !DIExpression()), !dbg !16119
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16116, metadata !DIExpression()), !dbg !16119
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16120
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16120
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16117, metadata !DIExpression()), !dbg !16119
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16121
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16122
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16123
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16124
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16125
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16126
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16127
  ret void, !dbg !16128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16129 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16133, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16134, metadata !DIExpression()), !dbg !16135
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16136
  br i1 %3, label %6, label %4, !dbg !16137

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !16138
  br label %6, !dbg !16137

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16137
  ret %struct._dnode* %7, !dbg !16139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16140 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16144, metadata !DIExpression()), !dbg !16147
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16145, metadata !DIExpression()), !dbg !16147
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16148
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16148
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16146, metadata !DIExpression()), !dbg !16147
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16149
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16150
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16151
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16152
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16153
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16154
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16155
  ret void, !dbg !16156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16159, metadata !DIExpression()), !dbg !16161
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16162
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16169, metadata !DIExpression()) #25, !dbg !16171
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16172
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16173
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16173
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16160, metadata !DIExpression()), !dbg !16161
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16174, metadata !DIExpression()) #25, !dbg !16180
  call void @llvm.dbg.value(metadata i32 %0, metadata !16179, metadata !DIExpression()) #25, !dbg !16180
  %6 = icmp eq i32 %0, 0, !dbg !16183
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16185
  br i1 %6, label %8, label %15, !dbg !16186

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !16187
  br i1 %9, label %15, label %10, !dbg !16189

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !16190
  br i1 %11, label %15, label %12, !dbg !16192

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !16193
  %14 = icmp eq i32 %13, 0, !dbg !16193
  br i1 %14, label %18, label %15, !dbg !16195

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !16196
  br i1 %16, label %18, label %17, !dbg !16199

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16200
  br label %18, !dbg !16202

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !16185
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16185
  ret void, !dbg !16203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !16204 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16208, metadata !DIExpression()), !dbg !16211
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16209, metadata !DIExpression()), !dbg !16211
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !16212
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16210, metadata !DIExpression()), !dbg !16211
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16209, metadata !DIExpression()), !dbg !16211
  ret %struct.k_thread* %3, !dbg !16213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16214 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16216, metadata !DIExpression()), !dbg !16217
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16218
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !16219
  %4 = xor i1 %3, true, !dbg !16220
  ret i1 %4, !dbg !16221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16222 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16224, metadata !DIExpression()), !dbg !16225
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16226
  %3 = load i16, i16* %2, align 2, !dbg !16226
  %4 = icmp ult i16 %3, 128, !dbg !16227
  %5 = zext i1 %4 to i32, !dbg !16227
  ret i32 %5, !dbg !16228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16229 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16235, metadata !DIExpression()), !dbg !16236
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16237
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !16238
  %4 = xor i1 %3, true, !dbg !16239
  ret i1 %4, !dbg !16240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16241 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16247, metadata !DIExpression()), !dbg !16248
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16249
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16249
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16250
  ret i1 %4, !dbg !16251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16252 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16254, metadata !DIExpression()), !dbg !16256
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16255, metadata !DIExpression()), !dbg !16256
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16257
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16257
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16258
  br i1 %5, label %9, label %6, !dbg !16259

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16260
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16260
  br label %9, !dbg !16259

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16259
  ret %struct._dnode* %10, !dbg !16261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16262 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16266, metadata !DIExpression()), !dbg !16267
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16268
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16268
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16269
  ret i1 %4, !dbg !16270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16271 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16275, metadata !DIExpression()), !dbg !16278
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16279
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16279
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16276, metadata !DIExpression()), !dbg !16278
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16280
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16280
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16277, metadata !DIExpression()), !dbg !16278
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16281
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16282
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16283
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16284
  tail call fastcc void @sys_dnode_init.274(%struct._dnode* noundef %0) #26, !dbg !16285
  ret void, !dbg !16286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.274(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16287 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16289, metadata !DIExpression()), !dbg !16290
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16291
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16292
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16293
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16294
  ret void, !dbg !16295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16296 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16300, metadata !DIExpression()), !dbg !16302
  call void @llvm.dbg.value(metadata i32 128, metadata !16301, metadata !DIExpression()), !dbg !16302
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16303
  %3 = load i8, i8* %2, align 1, !dbg !16303
  %4 = icmp slt i8 %3, 0, !dbg !16304
  ret i1 %4, !dbg !16305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16310, metadata !DIExpression()), !dbg !16312
  call void @llvm.dbg.value(metadata i32 %1, metadata !16311, metadata !DIExpression()), !dbg !16312
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !16313
  ret i1 %3, !dbg !16314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !16315 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16317, metadata !DIExpression()), !dbg !16318
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16319
  ret i1 %2, !dbg !16320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16323, metadata !DIExpression()), !dbg !16325
  call void @llvm.dbg.value(metadata i32 %1, metadata !16324, metadata !DIExpression()), !dbg !16325
  %3 = icmp slt i32 %0, %1, !dbg !16326
  ret i1 %3, !dbg !16327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16328 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16330, metadata !DIExpression()), !dbg !16334
  call void @llvm.dbg.value(metadata i32 0, metadata !16331, metadata !DIExpression()), !dbg !16335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16336
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16338, !srcloc !15870
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16338
  call void @llvm.dbg.value(metadata i32 %3, metadata !15867, metadata !DIExpression()) #25, !dbg !16340
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16340
  call void @llvm.dbg.value(metadata i32 %3, metadata !15861, metadata !DIExpression()) #25, !dbg !16336
  call void @llvm.dbg.value(metadata i32 %3, metadata !16333, metadata !DIExpression()), !dbg !16335
  call void @llvm.dbg.value(metadata i32 undef, metadata !16331, metadata !DIExpression()), !dbg !16335
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16341
  call void @llvm.dbg.value(metadata i32 %3, metadata !15882, metadata !DIExpression()) #25, !dbg !16346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16346
  call void @llvm.dbg.value(metadata i32 %3, metadata !15890, metadata !DIExpression()) #25, !dbg !16348
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16350, !srcloc !15896
  call void @llvm.dbg.value(metadata i32 1, metadata !16331, metadata !DIExpression()), !dbg !16335
  call void @llvm.dbg.value(metadata i32 undef, metadata !16331, metadata !DIExpression()), !dbg !16335
  ret void, !dbg !16351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16352 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16354, metadata !DIExpression()), !dbg !16355
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16356
  br i1 %2, label %24, label %3, !dbg !16358

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16359
  br i1 %4, label %5, label %24, !dbg !16360

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16041, metadata !DIExpression()) #25, !dbg !16361
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16364
  %7 = load i8, i8* %6, align 1, !dbg !16365
  %8 = or i8 %7, -128, !dbg !16365
  store i8 %8, i8* %6, align 1, !dbg !16365
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16048, metadata !DIExpression()) #25, !dbg !16366
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16055, metadata !DIExpression()) #25, !dbg !16368
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16061, metadata !DIExpression()) #25, !dbg !16368
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16370
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !16062, metadata !DIExpression()) #25, !dbg !16368
  %10 = icmp eq %struct._dnode* %9, null, !dbg !16371
  br i1 %10, label %21, label %11, !dbg !16370

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16062, metadata !DIExpression()) #25, !dbg !16368
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !16372
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16062, metadata !DIExpression()) #25, !dbg !16368
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !16373
  %15 = icmp sgt i32 %14, 0, !dbg !16374
  br i1 %15, label %16, label %18, !dbg !16375

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16376
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !16377
  br label %23, !dbg !16378

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !16371
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !16062, metadata !DIExpression()) #25, !dbg !16368
  %20 = icmp eq %struct._dnode* %19, null, !dbg !16371
  br i1 %20, label %21, label %11, !dbg !16370, !llvm.loop !16379

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16381
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !16382
  br label %23, !dbg !16383

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16384
  br label %24, !dbg !16385

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !16386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16387 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16389, metadata !DIExpression()), !dbg !16390
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !16391
  br i1 %2, label %6, label %3, !dbg !16392

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !16393
  %5 = xor i1 %4, true, !dbg !16392
  br label %6, !dbg !16392

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16395 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16397, metadata !DIExpression()), !dbg !16401
  call void @llvm.dbg.value(metadata i32 0, metadata !16398, metadata !DIExpression()), !dbg !16402
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16403
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16405, !srcloc !15870
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16405
  call void @llvm.dbg.value(metadata i32 %3, metadata !15867, metadata !DIExpression()) #25, !dbg !16407
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16407
  call void @llvm.dbg.value(metadata i32 %3, metadata !15861, metadata !DIExpression()) #25, !dbg !16403
  call void @llvm.dbg.value(metadata i32 %3, metadata !16400, metadata !DIExpression()), !dbg !16402
  call void @llvm.dbg.value(metadata i32 undef, metadata !16398, metadata !DIExpression()), !dbg !16402
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !16408
  call void @llvm.dbg.value(metadata i32 %3, metadata !15882, metadata !DIExpression()) #25, !dbg !16411
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16411
  call void @llvm.dbg.value(metadata i32 %3, metadata !15890, metadata !DIExpression()) #25, !dbg !16413
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16415, !srcloc !15896
  call void @llvm.dbg.value(metadata i32 1, metadata !16398, metadata !DIExpression()), !dbg !16402
  call void @llvm.dbg.value(metadata i32 undef, metadata !16398, metadata !DIExpression()), !dbg !16402
  ret void, !dbg !16416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16417 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16419, metadata !DIExpression()), !dbg !16421
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16422
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16424, !srcloc !15870
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16424
  call void @llvm.dbg.value(metadata i32 %3, metadata !15867, metadata !DIExpression()) #25, !dbg !16426
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16426
  call void @llvm.dbg.value(metadata i32 %3, metadata !15861, metadata !DIExpression()) #25, !dbg !16422
  call void @llvm.dbg.value(metadata i32 %3, metadata !16420, metadata !DIExpression()), !dbg !16421
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !16427
  br i1 %4, label %5, label %6, !dbg !16429

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15882, metadata !DIExpression()) #25, !dbg !16430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16430
  call void @llvm.dbg.value(metadata i32 %3, metadata !15890, metadata !DIExpression()) #25, !dbg !16433
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16435, !srcloc !15896
  br label %8, !dbg !16436

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.279(%struct.k_thread* noundef %0) #26, !dbg !16437
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16438
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16439
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16439
  br label %8, !dbg !16440

8:                                                ; preds = %6, %5
  ret void, !dbg !16440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16441 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16443, metadata !DIExpression()), !dbg !16444
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16445
  %3 = load i8, i8* %2, align 1, !dbg !16445
  %4 = and i8 %3, 4, !dbg !16446
  %5 = icmp eq i8 %4, 0, !dbg !16447
  ret i1 %5, !dbg !16448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.279(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16449 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16451, metadata !DIExpression()), !dbg !16452
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16453
  %3 = load i8, i8* %2, align 1, !dbg !16454
  %4 = and i8 %3, -5, !dbg !16454
  store i8 %4, i8* %2, align 1, !dbg !16454
  ret void, !dbg !16455
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16456 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16459, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16458, metadata !DIExpression()), !dbg !16460
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16461
  br i1 %4, label %5, label %9, !dbg !16463

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16464
  br i1 %6, label %7, label %9, !dbg !16465

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16466, metadata !DIExpression()) #25, !dbg !16472
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16471, metadata !DIExpression()) #25, !dbg !16472
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16475
  br label %10, !dbg !16476

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15882, metadata !DIExpression()) #25, !dbg !16477
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16477
  call void @llvm.dbg.value(metadata i32 %3, metadata !15890, metadata !DIExpression()) #25, !dbg !16480
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16482, !srcloc !15896
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16488, metadata !DIExpression()), !dbg !16489
  call void @llvm.dbg.value(metadata i32 %0, metadata !16490, metadata !DIExpression()), !dbg !16495
  %2 = icmp eq i32 %0, 0, !dbg !16497
  br i1 %2, label %3, label %6, !dbg !16498

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16499, !srcloc !16506
  call void @llvm.dbg.value(metadata i32 %4, metadata !16502, metadata !DIExpression()) #25, !dbg !16507
  %5 = icmp eq i32 %4, 0, !dbg !16508
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16489
  ret i1 %7, !dbg !16509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !16510 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16513
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16512, metadata !DIExpression()), !dbg !16514
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16515
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16516
  ret i1 %3, !dbg !16517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16520, metadata !DIExpression()), !dbg !16522
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16523
  call void @llvm.dbg.value(metadata i32 %2, metadata !16521, metadata !DIExpression()), !dbg !16522
  ret i32 %2, !dbg !16524
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16527, metadata !DIExpression()), !dbg !16531
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16532
  call void @llvm.dbg.value(metadata i32 0, metadata !16528, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16534
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16536, !srcloc !15870
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16536
  call void @llvm.dbg.value(metadata i32 %4, metadata !15867, metadata !DIExpression()) #25, !dbg !16538
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16538
  call void @llvm.dbg.value(metadata i32 %4, metadata !15861, metadata !DIExpression()) #25, !dbg !16534
  call void @llvm.dbg.value(metadata i32 %4, metadata !16530, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !16528, metadata !DIExpression()), !dbg !16533
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16539
  br i1 %5, label %6, label %10, !dbg !16543

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16024, metadata !DIExpression()) #25, !dbg !16544
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16547
  %8 = load i8, i8* %7, align 1, !dbg !16548
  %9 = and i8 %8, 127, !dbg !16548
  store i8 %9, i8* %7, align 1, !dbg !16548
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16032, metadata !DIExpression()) #25, !dbg !16549
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16551
  br label %10, !dbg !16552

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16553
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16554
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16555
  %13 = zext i1 %12 to i32, !dbg !16555
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16556
  call void @llvm.dbg.value(metadata i32 %4, metadata !15882, metadata !DIExpression()) #25, !dbg !16557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16557
  call void @llvm.dbg.value(metadata i32 %4, metadata !15890, metadata !DIExpression()) #25, !dbg !16559
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16561, !srcloc !15896
  call void @llvm.dbg.value(metadata i32 1, metadata !16528, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !16528, metadata !DIExpression()), !dbg !16533
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16562
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16564
  br i1 %15, label %16, label %17, !dbg !16565

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16566
  br label %17, !dbg !16568

17:                                               ; preds = %16, %10
  ret void, !dbg !16569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16570 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16572, metadata !DIExpression()), !dbg !16573
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16574
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16575
  ret i32 %3, !dbg !16576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16577 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16579, metadata !DIExpression()), !dbg !16580
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16581
  %3 = load i8, i8* %2, align 1, !dbg !16582
  %4 = or i8 %3, 16, !dbg !16582
  store i8 %4, i8* %2, align 1, !dbg !16582
  ret void, !dbg !16583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16584 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16585, !srcloc !15870
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16585
  call void @llvm.dbg.value(metadata i32 %2, metadata !15867, metadata !DIExpression()) #25, !dbg !16587
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16587
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16588
  ret void, !dbg !16589
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16592, metadata !DIExpression()), !dbg !16593
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16594
  br i1 %2, label %3, label %5, !dbg !16596

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16597
  br label %6, !dbg !16599

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15890, metadata !DIExpression()) #25, !dbg !16600
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !16603, !srcloc !15896
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16604
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16605 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16607, metadata !DIExpression()), !dbg !16609
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16610
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16612, !srcloc !15870
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16612
  call void @llvm.dbg.value(metadata i32 %3, metadata !15867, metadata !DIExpression()) #25, !dbg !16614
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16614
  call void @llvm.dbg.value(metadata i32 %3, metadata !15861, metadata !DIExpression()) #25, !dbg !16610
  call void @llvm.dbg.value(metadata i32 %3, metadata !16608, metadata !DIExpression()), !dbg !16609
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16615
  br i1 %4, label %6, label %5, !dbg !16617

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15882, metadata !DIExpression()) #25, !dbg !16618
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16618
  call void @llvm.dbg.value(metadata i32 %3, metadata !15890, metadata !DIExpression()) #25, !dbg !16621
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16623, !srcloc !15896
  br label %8, !dbg !16624

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16625
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16626
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16627
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16627
  br label %8, !dbg !16628

8:                                                ; preds = %6, %5
  ret void, !dbg !16628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16629 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16631, metadata !DIExpression()), !dbg !16632
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16633
  %3 = load i8, i8* %2, align 1, !dbg !16633
  %4 = and i8 %3, 16, !dbg !16634
  %5 = icmp ne i8 %4, 0, !dbg !16635
  ret i1 %5, !dbg !16636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16637 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16639, metadata !DIExpression()), !dbg !16640
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16641
  %3 = load i8, i8* %2, align 1, !dbg !16642
  %4 = and i8 %3, -17, !dbg !16642
  store i8 %4, i8* %2, align 1, !dbg !16642
  ret void, !dbg !16643
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16644 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16654, metadata !DIExpression()), !dbg !16658
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16652, metadata !DIExpression()), !dbg !16658
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16653, metadata !DIExpression()), !dbg !16658
  call void @llvm.dbg.value(metadata i32 0, metadata !16655, metadata !DIExpression()), !dbg !16659
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16660
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16662, !srcloc !15870
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16662
  call void @llvm.dbg.value(metadata i32 %5, metadata !15867, metadata !DIExpression()) #25, !dbg !16664
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16664
  call void @llvm.dbg.value(metadata i32 %5, metadata !15861, metadata !DIExpression()) #25, !dbg !16660
  call void @llvm.dbg.value(metadata i32 %5, metadata !16657, metadata !DIExpression()), !dbg !16659
  call void @llvm.dbg.value(metadata i32 undef, metadata !16655, metadata !DIExpression()), !dbg !16659
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16665
  call void @llvm.dbg.value(metadata i32 %5, metadata !15882, metadata !DIExpression()) #25, !dbg !16668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16668
  call void @llvm.dbg.value(metadata i32 %5, metadata !15890, metadata !DIExpression()) #25, !dbg !16670
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !16672, !srcloc !15896
  call void @llvm.dbg.value(metadata i32 1, metadata !16655, metadata !DIExpression()), !dbg !16659
  call void @llvm.dbg.value(metadata i32 undef, metadata !16655, metadata !DIExpression()), !dbg !16659
  ret void, !dbg !16673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16674 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16678, metadata !DIExpression()), !dbg !16679
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16676, metadata !DIExpression()), !dbg !16679
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16677, metadata !DIExpression()), !dbg !16679
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !16680
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16681
  ret void, !dbg !16682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16683 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16687, metadata !DIExpression()), !dbg !16689
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16688, metadata !DIExpression()), !dbg !16689
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16690
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16691
  %3 = icmp eq %union.anon* %1, null, !dbg !16692
  br i1 %3, label %21, label %4, !dbg !16694

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16695
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16697
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16698
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16055, metadata !DIExpression()) #25, !dbg !16699
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16061, metadata !DIExpression()) #25, !dbg !16699
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #27, !dbg !16701
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16062, metadata !DIExpression()) #25, !dbg !16699
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16702
  br i1 %8, label %19, label %9, !dbg !16701

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16062, metadata !DIExpression()) #25, !dbg !16699
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16703
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !16062, metadata !DIExpression()) #25, !dbg !16699
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !16704
  %13 = icmp sgt i32 %12, 0, !dbg !16705
  br i1 %13, label %14, label %16, !dbg !16706

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16707
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !16708
  br label %21, !dbg !16709

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !16702
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16062, metadata !DIExpression()) #25, !dbg !16699
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16702
  br i1 %18, label %19, label %9, !dbg !16701, !llvm.loop !16710

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16712
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !16713
  br label %21, !dbg !16714

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16715
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16716 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16721, metadata !DIExpression()), !dbg !16722
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16720, metadata !DIExpression()), !dbg !16722
  %4 = icmp eq i64 %3, -1, !dbg !16723
  br i1 %4, label %6, label %5, !dbg !16725

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.280(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16726
  br label %6, !dbg !16728

6:                                                ; preds = %5, %2
  ret void, !dbg !16729
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.280(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16730 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16733, metadata !DIExpression()), !dbg !16734
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16732, metadata !DIExpression()), !dbg !16734
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16735
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16736
  ret void, !dbg !16737
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16738 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16740, metadata !DIExpression()), !dbg !16748
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16749
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16749
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16741, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata i32 0, metadata !16742, metadata !DIExpression()), !dbg !16750
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16751
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16753, !srcloc !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !15867, metadata !DIExpression()) #25, !dbg !16755
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16755
  call void @llvm.dbg.value(metadata i32 undef, metadata !15861, metadata !DIExpression()) #25, !dbg !16751
  call void @llvm.dbg.value(metadata i32 undef, metadata !16744, metadata !DIExpression()), !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !16742, metadata !DIExpression()), !dbg !16750
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16756
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16757
  %7 = load i8, i8* %6, align 1, !dbg !16757
  %8 = and i8 %7, 40, !dbg !16758
  %9 = icmp eq i8 %8, 0, !dbg !16758
  call void @llvm.dbg.value(metadata i1 %9, metadata !16745, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16759
  br i1 %9, label %10, label %17, !dbg !16760

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16761
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !16761
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !16761
  %14 = icmp eq %union.anon* %13, null, !dbg !16765
  br i1 %14, label %16, label %15, !dbg !16766

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16767
  br label %16, !dbg !16769

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.279(%struct.k_thread* noundef nonnull %3) #26, !dbg !16770
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16771
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16772
  br label %17, !dbg !16773

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16753
  call void @llvm.dbg.value(metadata i32 %18, metadata !15867, metadata !DIExpression()) #25, !dbg !16755
  call void @llvm.dbg.value(metadata i32 %18, metadata !15861, metadata !DIExpression()) #25, !dbg !16751
  call void @llvm.dbg.value(metadata i32 %18, metadata !16744, metadata !DIExpression()), !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !15882, metadata !DIExpression()) #25, !dbg !16774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16774
  call void @llvm.dbg.value(metadata i32 undef, metadata !15890, metadata !DIExpression()) #25, !dbg !16776
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16778, !srcloc !15896
  call void @llvm.dbg.value(metadata i32 1, metadata !16742, metadata !DIExpression()), !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !16742, metadata !DIExpression()), !dbg !16750
  ret void, !dbg !16779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16780 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16782, metadata !DIExpression()), !dbg !16783
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16784
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16785
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16786
  store %union.anon* null, %union.anon** %2, align 8, !dbg !16787
  ret void, !dbg !16788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16789 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16791, metadata !DIExpression()), !dbg !16792
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16793
  %3 = load i8, i8* %2, align 1, !dbg !16794
  %4 = and i8 %3, -3, !dbg !16794
  store i8 %4, i8* %2, align 1, !dbg !16794
  ret void, !dbg !16795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16796 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16798, metadata !DIExpression()), !dbg !16799
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16800
  br i1 %2, label %3, label %7, !dbg !16802

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16024, metadata !DIExpression()) #25, !dbg !16803
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16806
  %5 = load i8, i8* %4, align 1, !dbg !16807
  %6 = and i8 %5, 127, !dbg !16807
  store i8 %6, i8* %4, align 1, !dbg !16807
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16032, metadata !DIExpression()) #25, !dbg !16808
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16810
  br label %7, !dbg !16811

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16812
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16813
  %10 = zext i1 %9 to i32, !dbg !16813
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16814
  ret void, !dbg !16815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16816 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16818, metadata !DIExpression()), !dbg !16819
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16820
  %3 = load i8, i8* %2, align 1, !dbg !16821
  %4 = or i8 %3, 2, !dbg !16821
  store i8 %4, i8* %2, align 1, !dbg !16821
  ret void, !dbg !16822
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !16823 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16825, metadata !DIExpression()), !dbg !16829
  call void @llvm.dbg.value(metadata i32 0, metadata !16826, metadata !DIExpression()), !dbg !16830
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16831
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16833, !srcloc !15870
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16833
  call void @llvm.dbg.value(metadata i32 %3, metadata !15867, metadata !DIExpression()) #25, !dbg !16835
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16835
  call void @llvm.dbg.value(metadata i32 %3, metadata !15861, metadata !DIExpression()) #25, !dbg !16831
  call void @llvm.dbg.value(metadata i32 %3, metadata !16828, metadata !DIExpression()), !dbg !16830
  call void @llvm.dbg.value(metadata i32 undef, metadata !16826, metadata !DIExpression()), !dbg !16830
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16836
  call void @llvm.dbg.value(metadata i32 %3, metadata !15882, metadata !DIExpression()) #25, !dbg !16839
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16839
  call void @llvm.dbg.value(metadata i32 %3, metadata !15890, metadata !DIExpression()) #25, !dbg !16841
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16843, !srcloc !15896
  call void @llvm.dbg.value(metadata i32 1, metadata !16826, metadata !DIExpression()), !dbg !16830
  call void @llvm.dbg.value(metadata i32 undef, metadata !16826, metadata !DIExpression()), !dbg !16830
  ret void, !dbg !16844
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16845 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16851, metadata !DIExpression()), !dbg !16856
  call void @llvm.dbg.value(metadata i32 %0, metadata !16849, metadata !DIExpression()), !dbg !16856
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16850, metadata !DIExpression()), !dbg !16856
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16857
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16858
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16859
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16860
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16861
  call void @llvm.dbg.value(metadata i32 %6, metadata !16852, metadata !DIExpression()), !dbg !16856
  call void @llvm.dbg.value(metadata i32 0, metadata !16853, metadata !DIExpression()), !dbg !16862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16863
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16865, !srcloc !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !15867, metadata !DIExpression()) #25, !dbg !16867
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16867
  call void @llvm.dbg.value(metadata i32 undef, metadata !15861, metadata !DIExpression()) #25, !dbg !16863
  call void @llvm.dbg.value(metadata i32 undef, metadata !16855, metadata !DIExpression()), !dbg !16862
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()), !dbg !16862
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16868
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16872
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16873
  br i1 %10, label %11, label %12, !dbg !16874

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16875
  br label %12, !dbg !16877

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16865
  call void @llvm.dbg.value(metadata i32 %13, metadata !15867, metadata !DIExpression()) #25, !dbg !16867
  call void @llvm.dbg.value(metadata i32 %13, metadata !15861, metadata !DIExpression()) #25, !dbg !16863
  call void @llvm.dbg.value(metadata i32 %13, metadata !16855, metadata !DIExpression()), !dbg !16862
  call void @llvm.dbg.value(metadata i32 undef, metadata !15882, metadata !DIExpression()) #25, !dbg !16878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16878
  call void @llvm.dbg.value(metadata i32 undef, metadata !15890, metadata !DIExpression()) #25, !dbg !16880
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !16882, !srcloc !15896
  call void @llvm.dbg.value(metadata i32 1, metadata !16853, metadata !DIExpression()), !dbg !16862
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()), !dbg !16862
  ret i32 %6, !dbg !16883
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16884 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16889, metadata !DIExpression()), !dbg !16892
  call void @llvm.dbg.value(metadata i64 undef, metadata !16891, metadata !DIExpression()), !dbg !16892
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16888, metadata !DIExpression()), !dbg !16892
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16890, metadata !DIExpression()), !dbg !16892
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16893
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16894
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16895
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16897, !srcloc !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !15867, metadata !DIExpression()) #25, !dbg !16899
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16899
  call void @llvm.dbg.value(metadata i32 undef, metadata !15861, metadata !DIExpression()) #25, !dbg !16895
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16900
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16901
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16466, metadata !DIExpression()) #25, !dbg !16902
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16471, metadata !DIExpression()) #25, !dbg !16902
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !16904
  ret i32 %9, !dbg !16905
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16906 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16910, metadata !DIExpression()), !dbg !16915
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16911, metadata !DIExpression()), !dbg !16915
  call void @llvm.dbg.value(metadata i32 0, metadata !16912, metadata !DIExpression()), !dbg !16916
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16917
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16919, !srcloc !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !15867, metadata !DIExpression()) #25, !dbg !16921
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16921
  call void @llvm.dbg.value(metadata i32 undef, metadata !15861, metadata !DIExpression()) #25, !dbg !16917
  call void @llvm.dbg.value(metadata i32 undef, metadata !16914, metadata !DIExpression()), !dbg !16916
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16911, metadata !DIExpression()), !dbg !16915
  call void @llvm.dbg.value(metadata i32 undef, metadata !16912, metadata !DIExpression()), !dbg !16916
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16922
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16911, metadata !DIExpression()), !dbg !16915
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16925
  br i1 %5, label %7, label %6, !dbg !16927

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16928
  br label %7, !dbg !16930

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16919
  call void @llvm.dbg.value(metadata i32 %8, metadata !15867, metadata !DIExpression()) #25, !dbg !16921
  call void @llvm.dbg.value(metadata i32 %8, metadata !15861, metadata !DIExpression()) #25, !dbg !16917
  call void @llvm.dbg.value(metadata i32 %8, metadata !16914, metadata !DIExpression()), !dbg !16916
  call void @llvm.dbg.value(metadata i32 undef, metadata !15882, metadata !DIExpression()) #25, !dbg !16931
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16931
  call void @llvm.dbg.value(metadata i32 undef, metadata !15890, metadata !DIExpression()) #25, !dbg !16933
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16935, !srcloc !15896
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16911, metadata !DIExpression()), !dbg !16915
  call void @llvm.dbg.value(metadata i32 undef, metadata !16912, metadata !DIExpression()), !dbg !16916
  ret %struct.k_thread* %4, !dbg !16936
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16937 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16939, metadata !DIExpression()), !dbg !16944
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16940, metadata !DIExpression()), !dbg !16944
  call void @llvm.dbg.value(metadata i32 0, metadata !16941, metadata !DIExpression()), !dbg !16945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16946
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16948, !srcloc !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !15867, metadata !DIExpression()) #25, !dbg !16950
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16950
  call void @llvm.dbg.value(metadata i32 undef, metadata !15861, metadata !DIExpression()) #25, !dbg !16946
  call void @llvm.dbg.value(metadata i32 undef, metadata !16943, metadata !DIExpression()), !dbg !16945
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16940, metadata !DIExpression()), !dbg !16944
  call void @llvm.dbg.value(metadata i32 undef, metadata !16941, metadata !DIExpression()), !dbg !16945
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16951
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16940, metadata !DIExpression()), !dbg !16944
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16954
  br i1 %5, label %8, label %6, !dbg !16956

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16957
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16959
  br label %8, !dbg !16960

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16948
  call void @llvm.dbg.value(metadata i32 %9, metadata !15867, metadata !DIExpression()) #25, !dbg !16950
  call void @llvm.dbg.value(metadata i32 %9, metadata !15861, metadata !DIExpression()) #25, !dbg !16946
  call void @llvm.dbg.value(metadata i32 %9, metadata !16943, metadata !DIExpression()), !dbg !16945
  call void @llvm.dbg.value(metadata i32 undef, metadata !15882, metadata !DIExpression()) #25, !dbg !16961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16961
  call void @llvm.dbg.value(metadata i32 undef, metadata !15890, metadata !DIExpression()) #25, !dbg !16963
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16965, !srcloc !15896
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16940, metadata !DIExpression()), !dbg !16944
  call void @llvm.dbg.value(metadata i32 undef, metadata !16941, metadata !DIExpression()), !dbg !16945
  ret %struct.k_thread* %4, !dbg !16966
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16967 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16969, metadata !DIExpression()), !dbg !16970
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16825, metadata !DIExpression()) #25, !dbg !16971
  call void @llvm.dbg.value(metadata i32 0, metadata !16826, metadata !DIExpression()) #25, !dbg !16973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16974
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16976, !srcloc !15870
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16976
  call void @llvm.dbg.value(metadata i32 %3, metadata !15867, metadata !DIExpression()) #25, !dbg !16978
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !16978
  call void @llvm.dbg.value(metadata i32 %3, metadata !15861, metadata !DIExpression()) #25, !dbg !16974
  call void @llvm.dbg.value(metadata i32 %3, metadata !16828, metadata !DIExpression()) #25, !dbg !16973
  call void @llvm.dbg.value(metadata i32 undef, metadata !16826, metadata !DIExpression()) #25, !dbg !16973
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16979
  call void @llvm.dbg.value(metadata i32 %3, metadata !15882, metadata !DIExpression()) #25, !dbg !16980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !16980
  call void @llvm.dbg.value(metadata i32 %3, metadata !15890, metadata !DIExpression()) #25, !dbg !16982
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16984, !srcloc !15896
  call void @llvm.dbg.value(metadata i32 1, metadata !16826, metadata !DIExpression()) #25, !dbg !16973
  call void @llvm.dbg.value(metadata i32 undef, metadata !16826, metadata !DIExpression()) #25, !dbg !16973
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16985
  ret void, !dbg !16986
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16987 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16989, metadata !DIExpression()), !dbg !16995
  call void @llvm.dbg.value(metadata i32 %1, metadata !16990, metadata !DIExpression()), !dbg !16995
  call void @llvm.dbg.value(metadata i8 0, metadata !16991, metadata !DIExpression()), !dbg !16995
  call void @llvm.dbg.value(metadata i32 0, metadata !16992, metadata !DIExpression()), !dbg !16996
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !16997
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16999, !srcloc !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !15867, metadata !DIExpression()) #25, !dbg !17001
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !17001
  call void @llvm.dbg.value(metadata i32 undef, metadata !15861, metadata !DIExpression()) #25, !dbg !16997
  call void @llvm.dbg.value(metadata i32 undef, metadata !16994, metadata !DIExpression()), !dbg !16996
  call void @llvm.dbg.value(metadata i8 poison, metadata !16991, metadata !DIExpression()), !dbg !16995
  call void @llvm.dbg.value(metadata i32 undef, metadata !16992, metadata !DIExpression()), !dbg !16996
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !17002
  call void @llvm.dbg.value(metadata i1 %6, metadata !16991, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16995
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !17005

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16024, metadata !DIExpression()) #25, !dbg !17006
  %11 = load i8, i8* %4, align 1, !dbg !17012
  %12 = and i8 %11, 127, !dbg !17012
  store i8 %12, i8* %4, align 1, !dbg !17012
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16032, metadata !DIExpression()) #25, !dbg !17013
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17015
  store i8 %9, i8* %8, align 2, !dbg !17016
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16041, metadata !DIExpression()) #25, !dbg !17017
  %13 = load i8, i8* %4, align 1, !dbg !17019
  %14 = or i8 %13, -128, !dbg !17019
  store i8 %14, i8* %4, align 1, !dbg !17019
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16048, metadata !DIExpression()) #25, !dbg !17020
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16055, metadata !DIExpression()) #25, !dbg !17022
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16061, metadata !DIExpression()) #25, !dbg !17022
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17024
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16062, metadata !DIExpression()) #25, !dbg !17022
  %16 = icmp eq %struct._dnode* %15, null, !dbg !17025
  br i1 %16, label %26, label %17, !dbg !17024

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !16062, metadata !DIExpression()) #25, !dbg !17022
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !17026
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !16062, metadata !DIExpression()) #25, !dbg !17022
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !17027
  %21 = icmp sgt i32 %20, 0, !dbg !17028
  br i1 %21, label %22, label %23, !dbg !17029

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !17030
  br label %27, !dbg !17031

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !17025
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16062, metadata !DIExpression()) #25, !dbg !17022
  %25 = icmp eq %struct._dnode* %24, null, !dbg !17025
  br i1 %25, label %26, label %17, !dbg !17024, !llvm.loop !17032

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !17034
  br label %27, !dbg !17035

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17036
  br label %29, !dbg !17037

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !17038
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16999
  call void @llvm.dbg.value(metadata i32 %30, metadata !15867, metadata !DIExpression()) #25, !dbg !17001
  call void @llvm.dbg.value(metadata i32 %30, metadata !15861, metadata !DIExpression()) #25, !dbg !16997
  call void @llvm.dbg.value(metadata i32 %30, metadata !16994, metadata !DIExpression()), !dbg !16996
  call void @llvm.dbg.value(metadata i32 undef, metadata !15882, metadata !DIExpression()) #25, !dbg !17040
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !17040
  call void @llvm.dbg.value(metadata i32 undef, metadata !15890, metadata !DIExpression()) #25, !dbg !17042
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !17044, !srcloc !15896
  call void @llvm.dbg.value(metadata i8 poison, metadata !16991, metadata !DIExpression()), !dbg !16995
  call void @llvm.dbg.value(metadata i32 undef, metadata !16992, metadata !DIExpression()), !dbg !16996
  ret i1 %6, !dbg !17045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17046 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17050, metadata !DIExpression()), !dbg !17053
  call void @llvm.dbg.value(metadata i32 %1, metadata !17051, metadata !DIExpression()), !dbg !17053
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17054
  call void @llvm.dbg.value(metadata i1 %3, metadata !17052, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17053
  br i1 %3, label %4, label %12, !dbg !17055

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17057
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17058
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17058
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17058
  %9 = load i8, i8* %8, align 1, !dbg !17058
  %10 = icmp eq i8 %9, 0, !dbg !17059
  br i1 %10, label %11, label %12, !dbg !17060

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17061
  br label %12, !dbg !17063

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17064
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17065 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17067, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !17071
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17073, !srcloc !15870
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17073
  call void @llvm.dbg.value(metadata i32 %2, metadata !15867, metadata !DIExpression()) #25, !dbg !17075
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !17075
  call void @llvm.dbg.value(metadata i32 %2, metadata !15861, metadata !DIExpression()) #25, !dbg !17071
  call void @llvm.dbg.value(metadata i32 %2, metadata !17069, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata i32 undef, metadata !17067, metadata !DIExpression()), !dbg !17070
  tail call fastcc void @z_sched_lock() #26, !dbg !17076
  call void @llvm.dbg.value(metadata i32 %2, metadata !15882, metadata !DIExpression()) #25, !dbg !17079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !17079
  call void @llvm.dbg.value(metadata i32 %2, metadata !15890, metadata !DIExpression()) #25, !dbg !17081
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17083, !srcloc !15896
  call void @llvm.dbg.value(metadata i32 1, metadata !17067, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata i32 undef, metadata !17067, metadata !DIExpression()), !dbg !17070
  ret void, !dbg !17084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17085 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17086
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !17087
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !17087
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !17087
  %5 = load i8, i8* %4, align 1, !dbg !17088
  %6 = add i8 %5, -1, !dbg !17088
  store i8 %6, i8* %4, align 1, !dbg !17088
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17089, !srcloc !17091
  ret void, !dbg !17092
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !17093 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17095, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !17099
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17101, !srcloc !15870
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17101
  call void @llvm.dbg.value(metadata i32 %2, metadata !15867, metadata !DIExpression()) #25, !dbg !17103
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !17103
  call void @llvm.dbg.value(metadata i32 %2, metadata !15861, metadata !DIExpression()) #25, !dbg !17099
  call void @llvm.dbg.value(metadata i32 %2, metadata !17097, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !17095, metadata !DIExpression()), !dbg !17098
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17104
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !17107
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !17107
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !17107
  %7 = load i8, i8* %6, align 1, !dbg !17108
  %8 = add i8 %7, 1, !dbg !17108
  store i8 %8, i8* %6, align 1, !dbg !17108
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !17109
  call void @llvm.dbg.value(metadata i32 %2, metadata !15882, metadata !DIExpression()) #25, !dbg !17110
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !17110
  call void @llvm.dbg.value(metadata i32 %2, metadata !15890, metadata !DIExpression()) #25, !dbg !17112
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17114, !srcloc !15896
  call void @llvm.dbg.value(metadata i32 1, metadata !17095, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !17095, metadata !DIExpression()), !dbg !17098
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17115
  ret void, !dbg !17116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !17117 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17118
  ret %struct.k_thread* %1, !dbg !17119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !17120 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17124, metadata !DIExpression()), !dbg !17129
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17125, metadata !DIExpression()), !dbg !17129
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17130
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17126, metadata !DIExpression()), !dbg !17129
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17131
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17127, metadata !DIExpression()), !dbg !17129
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !17132
  call void @llvm.dbg.value(metadata i32 %5, metadata !17128, metadata !DIExpression()), !dbg !17129
  %6 = icmp sgt i32 %5, 0, !dbg !17133
  br i1 %6, label %17, label %7, !dbg !17135

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17136
  br i1 %8, label %17, label %9, !dbg !17138

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17139
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17139
  %12 = load i32, i32* %11, align 8, !dbg !17139
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17141
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17141
  %15 = load i32, i32* %14, align 8, !dbg !17141
  %16 = icmp ult i32 %12, %15, !dbg !17142
  br label %17, !dbg !17143

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17144
  ret i1 %18, !dbg !17145
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17146 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17163, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17164, metadata !DIExpression()), !dbg !17178
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17179
  %5 = load i32, i32* %4, align 4, !dbg !17180
  %6 = add nsw i32 %5, 1, !dbg !17180
  store i32 %6, i32* %4, align 4, !dbg !17180
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17181
  store i32 %5, i32* %7, align 8, !dbg !17182
  %8 = load i32, i32* %4, align 4, !dbg !17183
  %9 = icmp eq i32 %8, 0, !dbg !17184
  br i1 %9, label %10, label %32, !dbg !17185

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17186
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17186
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17166, metadata !DIExpression()), !dbg !17186
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17186
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17186
  %14 = load i32, i32* %13, align 4, !dbg !17186
  %15 = shl i32 %14, 2, !dbg !17186
  %16 = alloca i8, i32 %15, align 8, !dbg !17186
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17186
  store i8* %16, i8** %17, align 4, !dbg !17186
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17186
  %19 = alloca i8, i32 %14, align 8, !dbg !17186
  store i8* %19, i8** %18, align 4, !dbg !17186
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17186
  store i32 -1, i32* %20, align 4, !dbg !17186
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17187
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17175, metadata !DIExpression()), !dbg !17188
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17165, metadata !DIExpression()), !dbg !17178
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !17189
  br i1 %22, label %23, label %24, !dbg !17186

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17189
  br label %32, !dbg !17190

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !17165, metadata !DIExpression()), !dbg !17178
  %26 = load i32, i32* %4, align 4, !dbg !17191
  %27 = add nsw i32 %26, 1, !dbg !17191
  store i32 %27, i32* %4, align 4, !dbg !17191
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !17193
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !17193
  store i32 %26, i32* %29, align 8, !dbg !17194
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17187
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17175, metadata !DIExpression()), !dbg !17188
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17165, metadata !DIExpression()), !dbg !17178
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !17189
  br i1 %31, label %23, label %24, !dbg !17186, !llvm.loop !17195

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17197
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17198
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !17199
  ret void, !dbg !17200
}

; Function Attrs: optsize
declare !dbg !17201 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17206 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17209 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17211, metadata !DIExpression()), !dbg !17213
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17212, metadata !DIExpression()), !dbg !17213
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17214
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17215
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !17216
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17217
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !17217
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !17219
  br i1 %7, label %8, label %10, !dbg !17220

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17221
  store i32 0, i32* %9, align 4, !dbg !17223
  br label %10, !dbg !17224

10:                                               ; preds = %8, %2
  ret void, !dbg !17225
}

; Function Attrs: optsize
declare !dbg !17226 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17227 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17231, metadata !DIExpression()), !dbg !17234
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17232, metadata !DIExpression()), !dbg !17234
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17235
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !17236
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17233, metadata !DIExpression()), !dbg !17234
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17232, metadata !DIExpression()), !dbg !17234
  ret %struct.k_thread* %4, !dbg !17237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17238 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17242, metadata !DIExpression()), !dbg !17243
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17244
  ret %struct.rbnode* %2, !dbg !17245
}

; Function Attrs: optsize
declare !dbg !17246 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !17249 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17259, metadata !DIExpression()), !dbg !17263
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17264
  %3 = load i32, i32* %2, align 4, !dbg !17264
  %4 = icmp eq i32 %3, 0, !dbg !17266
  br i1 %4, label %10, label %5, !dbg !17267

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17260, metadata !DIExpression()), !dbg !17263
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17268, !range !9395
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17269
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17261, metadata !DIExpression()), !dbg !17263
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !17270
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17262, metadata !DIExpression()), !dbg !17263
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17260, metadata !DIExpression()), !dbg !17263
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17263
  ret %struct.k_thread* %11, !dbg !17271
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17272 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17276, metadata !DIExpression()), !dbg !17279
  call void @llvm.dbg.value(metadata i32 0, metadata !17277, metadata !DIExpression()), !dbg !17279
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17280
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17278, metadata !DIExpression()), !dbg !17279
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17281
  br i1 %3, label %8, label %4, !dbg !17282

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17283
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17285
  call void @llvm.dbg.value(metadata i32 1, metadata !17277, metadata !DIExpression()), !dbg !17279
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17280
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17278, metadata !DIExpression()), !dbg !17279
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17281
  br i1 %7, label %8, label %4, !dbg !17282, !llvm.loop !17286

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17279
  ret i32 %9, !dbg !17288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !17289 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17291, metadata !DIExpression()), !dbg !17292
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17293
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !17294
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17295
  ret %struct.k_thread* %4, !dbg !17296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !17297 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17306, metadata !DIExpression()), !dbg !17307
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17308
  tail call fastcc void @sys_dlist_init.287(%struct._dnode* noundef nonnull %2) #26, !dbg !17309
  ret void, !dbg !17310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.287(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17311 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17315, metadata !DIExpression()), !dbg !17316
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17317
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17318
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17319
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17320
  ret void, !dbg !17321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17322 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !17323
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !17324
  ret void, !dbg !17325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !17326 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17331, metadata !DIExpression()), !dbg !17332
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17333
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17333
  %4 = load i8, i8* %3, align 2, !dbg !17333
  %5 = sext i8 %4 to i32, !dbg !17334
  ret i32 %5, !dbg !17335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17336 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17340, metadata !DIExpression()), !dbg !17343
  call void @llvm.dbg.value(metadata i32 %1, metadata !17341, metadata !DIExpression()), !dbg !17343
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17342, metadata !DIExpression()), !dbg !17343
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17344
  ret void, !dbg !17345
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17346 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !17347
  br i1 %1, label %8, label %2, !dbg !17348

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17349
  br i1 %3, label %8, label %4, !dbg !17350

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17351
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !17352
  %7 = xor i1 %6, true, !dbg !17350
  br label %8, !dbg !17350

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !17354 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17355, !range !8600
  %2 = icmp eq i8 %1, 0, !dbg !17355
  ret i1 %2, !dbg !17356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17357 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !17360
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17362, !srcloc !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !15867, metadata !DIExpression()) #25, !dbg !17364
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !17364
  call void @llvm.dbg.value(metadata i32 undef, metadata !15861, metadata !DIExpression()) #25, !dbg !17360
  call void @llvm.dbg.value(metadata i32 undef, metadata !17359, metadata !DIExpression()), !dbg !17365
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17366
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16024, metadata !DIExpression()) #25, !dbg !17369
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !17371
  %4 = load i8, i8* %3, align 1, !dbg !17372
  %5 = and i8 %4, 127, !dbg !17372
  store i8 %5, i8* %3, align 1, !dbg !17372
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16032, metadata !DIExpression()) #25, !dbg !17373
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !17375
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17376
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16041, metadata !DIExpression()) #25, !dbg !17377
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !17379
  %8 = load i8, i8* %7, align 1, !dbg !17380
  %9 = or i8 %8, -128, !dbg !17380
  store i8 %9, i8* %7, align 1, !dbg !17380
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16048, metadata !DIExpression()) #25, !dbg !17381
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16055, metadata !DIExpression()) #25, !dbg !17383
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16061, metadata !DIExpression()) #25, !dbg !17383
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17385
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16062, metadata !DIExpression()) #25, !dbg !17383
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17386
  br i1 %11, label %22, label %12, !dbg !17385

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16062, metadata !DIExpression()) #25, !dbg !17383
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17387
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16062, metadata !DIExpression()) #25, !dbg !17383
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !17388
  %16 = icmp sgt i32 %15, 0, !dbg !17389
  br i1 %16, label %17, label %19, !dbg !17390

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17391
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !17392
  br label %24, !dbg !17393

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !17386
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16062, metadata !DIExpression()) #25, !dbg !17383
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17386
  br i1 %21, label %22, label %12, !dbg !17385, !llvm.loop !17394

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17396
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !17397
  br label %24, !dbg !17398

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !17362
  call void @llvm.dbg.value(metadata i32 %25, metadata !15867, metadata !DIExpression()) #25, !dbg !17364
  call void @llvm.dbg.value(metadata i32 %25, metadata !15861, metadata !DIExpression()) #25, !dbg !17360
  call void @llvm.dbg.value(metadata i32 %25, metadata !17359, metadata !DIExpression()), !dbg !17365
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17399
  call void @llvm.dbg.value(metadata i32 undef, metadata !16466, metadata !DIExpression()) #25, !dbg !17400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16471, metadata !DIExpression()) #25, !dbg !17400
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !17402
  ret void, !dbg !17403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17404 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17408, metadata !DIExpression()), !dbg !17411
  %3 = icmp eq i64 %2, -1, !dbg !17412
  br i1 %3, label %4, label %6, !dbg !17414

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17415
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !17417
  br label %11, !dbg !17418

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17409, metadata !DIExpression()), !dbg !17411
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !17419
  %8 = sext i32 %7 to i64, !dbg !17419
  call void @llvm.dbg.value(metadata i64 %8, metadata !17409, metadata !DIExpression()), !dbg !17411
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !17420
  %10 = trunc i64 %9 to i32, !dbg !17420
  call void @llvm.dbg.value(metadata i32 %10, metadata !17410, metadata !DIExpression()), !dbg !17411
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !17411
  ret i32 %12, !dbg !17421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17422 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17426, metadata !DIExpression()), !dbg !17427
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17428, !srcloc !17430
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !17431
  ret void, !dbg !17432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17433 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17437, metadata !DIExpression()), !dbg !17441
  %2 = icmp eq i64 %0, 0, !dbg !17442
  br i1 %2, label %3, label %4, !dbg !17444

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17445
  br label %29, !dbg !17447

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17439, metadata !DIExpression()), !dbg !17441
  %5 = icmp sgt i64 %0, -3, !dbg !17448
  br i1 %5, label %6, label %10, !dbg !17450

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17451
  %8 = trunc i64 %0 to i32, !dbg !17453
  %9 = add i32 %7, %8, !dbg !17453
  call void @llvm.dbg.value(metadata i32 %9, metadata !17438, metadata !DIExpression()), !dbg !17441
  br label %13, !dbg !17454

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17455
  %12 = sub i32 -2, %11, !dbg !17455
  call void @llvm.dbg.value(metadata i32 %12, metadata !17438, metadata !DIExpression()), !dbg !17441
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17457
  call void @llvm.dbg.value(metadata i32 %14, metadata !17438, metadata !DIExpression()), !dbg !17441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !17458
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17460, !srcloc !15870
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17460
  call void @llvm.dbg.value(metadata i32 %16, metadata !15867, metadata !DIExpression()) #25, !dbg !17462
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !17462
  call void @llvm.dbg.value(metadata i32 %16, metadata !15861, metadata !DIExpression()) #25, !dbg !17458
  call void @llvm.dbg.value(metadata i32 %16, metadata !17440, metadata !DIExpression()), !dbg !17441
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17463
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17464
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17465
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17466
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17467
  tail call fastcc void @z_add_thread_timeout.280(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17467
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17468
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17469
  call void @llvm.dbg.value(metadata i32 %16, metadata !16466, metadata !DIExpression()) #25, !dbg !17470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16471, metadata !DIExpression()) #25, !dbg !17470
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !17472
  %22 = zext i32 %14 to i64, !dbg !17473
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17474
  %24 = zext i32 %23 to i64, !dbg !17474
  %25 = sub nsw i64 %22, %24, !dbg !17475
  call void @llvm.dbg.value(metadata i64 %25, metadata !17437, metadata !DIExpression()), !dbg !17441
  %26 = icmp sgt i64 %25, 0, !dbg !17476
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17476
  %28 = trunc i64 %27 to i32, !dbg !17476
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17441
  ret i32 %30, !dbg !17477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !17478 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17480, metadata !DIExpression()), !dbg !17481
  call void @llvm.dbg.value(metadata i64 %0, metadata !15902, metadata !DIExpression()), !dbg !17482
  call void @llvm.dbg.value(metadata i32 10000, metadata !15905, metadata !DIExpression()), !dbg !17482
  call void @llvm.dbg.value(metadata i32 1000, metadata !15906, metadata !DIExpression()), !dbg !17482
  call void @llvm.dbg.value(metadata i8 1, metadata !15907, metadata !DIExpression()), !dbg !17482
  call void @llvm.dbg.value(metadata i1 false, metadata !15908, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17482
  call void @llvm.dbg.value(metadata i1 false, metadata !15909, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17482
  call void @llvm.dbg.value(metadata i8 0, metadata !15910, metadata !DIExpression()), !dbg !17482
  call void @llvm.dbg.value(metadata i1 false, metadata !15911, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17482
  call void @llvm.dbg.value(metadata i1 true, metadata !15912, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17482
  call void @llvm.dbg.value(metadata i64 0, metadata !15913, metadata !DIExpression()), !dbg !17482
  call void @llvm.dbg.value(metadata i64 0, metadata !15913, metadata !DIExpression()), !dbg !17482
  call void @llvm.dbg.value(metadata i64 %0, metadata !15902, metadata !DIExpression()), !dbg !17482
  %2 = udiv i64 %0, 10, !dbg !17484
  ret i64 %2, !dbg !17488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17489 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17490, !srcloc !17492
  tail call void @z_impl_k_yield() #26, !dbg !17493
  ret void, !dbg !17494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17499, metadata !DIExpression()), !dbg !17501
  %2 = sext i32 %0 to i64, !dbg !17502
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17503
  call void @llvm.dbg.value(metadata i64 %3, metadata !17500, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17501
  %4 = shl i64 %3, 32, !dbg !17504
  %5 = ashr exact i64 %4, 32, !dbg !17504
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17505
  call void @llvm.dbg.value(metadata i32 %6, metadata !17500, metadata !DIExpression()), !dbg !17501
  %7 = sext i32 %6 to i64, !dbg !17506
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17507
  %9 = trunc i64 %8 to i32, !dbg !17507
  ret i32 %9, !dbg !17508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !17509 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17511, metadata !DIExpression()), !dbg !17512
  call void @llvm.dbg.value(metadata i64 %0, metadata !15902, metadata !DIExpression()), !dbg !17513
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15905, metadata !DIExpression()), !dbg !17513
  call void @llvm.dbg.value(metadata i32 10000, metadata !15906, metadata !DIExpression()), !dbg !17513
  call void @llvm.dbg.value(metadata i8 1, metadata !15907, metadata !DIExpression()), !dbg !17513
  call void @llvm.dbg.value(metadata i1 false, metadata !15908, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17513
  call void @llvm.dbg.value(metadata i1 true, metadata !15909, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17513
  call void @llvm.dbg.value(metadata i8 0, metadata !15910, metadata !DIExpression()), !dbg !17513
  call void @llvm.dbg.value(metadata i1 false, metadata !15911, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17513
  call void @llvm.dbg.value(metadata i1 true, metadata !15912, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17513
  call void @llvm.dbg.value(metadata i64 0, metadata !15913, metadata !DIExpression()), !dbg !17513
  call void @llvm.dbg.value(metadata i64 0, metadata !15913, metadata !DIExpression()), !dbg !17513
  %2 = add i64 %0, 99, !dbg !17515
  call void @llvm.dbg.value(metadata i64 %2, metadata !15902, metadata !DIExpression()), !dbg !17513
  %3 = udiv i64 %2, 100, !dbg !17516
  ret i64 %3, !dbg !17517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !17518 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17520, metadata !DIExpression()), !dbg !17521
  call void @llvm.dbg.value(metadata i64 %0, metadata !15902, metadata !DIExpression()), !dbg !17522
  call void @llvm.dbg.value(metadata i32 10000, metadata !15905, metadata !DIExpression()), !dbg !17522
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15906, metadata !DIExpression()), !dbg !17522
  call void @llvm.dbg.value(metadata i8 1, metadata !15907, metadata !DIExpression()), !dbg !17522
  call void @llvm.dbg.value(metadata i1 false, metadata !15908, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17522
  call void @llvm.dbg.value(metadata i1 false, metadata !15909, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17522
  call void @llvm.dbg.value(metadata i8 0, metadata !15910, metadata !DIExpression()), !dbg !17522
  call void @llvm.dbg.value(metadata i1 true, metadata !15911, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17522
  call void @llvm.dbg.value(metadata i1 false, metadata !15912, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17522
  call void @llvm.dbg.value(metadata i64 0, metadata !15913, metadata !DIExpression()), !dbg !17522
  call void @llvm.dbg.value(metadata i64 0, metadata !15913, metadata !DIExpression()), !dbg !17522
  %2 = mul i64 %0, 100, !dbg !17524
  ret i64 %2, !dbg !17526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17527 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17529, metadata !DIExpression()), !dbg !17530
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17531
  br i1 %2, label %14, label %3, !dbg !17533

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17534
  %5 = icmp slt i32 %4, 0, !dbg !17536
  br i1 %5, label %6, label %10, !dbg !17537

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17538
  %8 = load i8, i8* %7, align 1, !dbg !17538
  %9 = icmp eq i8 %8, 16, !dbg !17541
  br i1 %9, label %10, label %14, !dbg !17542

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17543
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17544
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17545, !srcloc !16506
  call void @llvm.dbg.value(metadata i32 %11, metadata !16502, metadata !DIExpression()) #25, !dbg !17549
  %12 = icmp eq i32 %11, 0, !dbg !17550
  br i1 %12, label %13, label %14, !dbg !17551

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17552
  br label %14, !dbg !17554

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17556 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17558, metadata !DIExpression()), !dbg !17559
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17560
  %3 = load i8, i8* %2, align 1, !dbg !17560
  %4 = and i8 %3, 2, !dbg !17561
  %5 = icmp ne i8 %4, 0, !dbg !17562
  ret i1 %5, !dbg !17563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !17564 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17569
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17568, metadata !DIExpression()), !dbg !17570
  ret %struct.k_thread* %1, !dbg !17571
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17572 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17573, !srcloc !16506
  call void @llvm.dbg.value(metadata i32 %1, metadata !16502, metadata !DIExpression()) #25, !dbg !17576
  %2 = icmp eq i32 %1, 0, !dbg !17577
  br i1 %2, label %3, label %8, !dbg !17578

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17579
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17580
  %6 = icmp ne i32 %5, 0, !dbg !17578
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17581
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17582 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17584, metadata !DIExpression()), !dbg !17586
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !17587
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17589, !srcloc !15870
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17589
  call void @llvm.dbg.value(metadata i32 %3, metadata !15867, metadata !DIExpression()) #25, !dbg !17591
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !17591
  call void @llvm.dbg.value(metadata i32 %3, metadata !15861, metadata !DIExpression()) #25, !dbg !17587
  call void @llvm.dbg.value(metadata i32 %3, metadata !17585, metadata !DIExpression()), !dbg !17586
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17592
  %5 = load i8, i8* %4, align 4, !dbg !17592
  %6 = and i8 %5, 1, !dbg !17594
  %7 = icmp eq i8 %6, 0, !dbg !17595
  br i1 %7, label %9, label %8, !dbg !17596

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15882, metadata !DIExpression()) #25, !dbg !17597
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !17597
  call void @llvm.dbg.value(metadata i32 %3, metadata !15890, metadata !DIExpression()) #25, !dbg !17600
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17602, !srcloc !15896
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !17603, !srcloc !17605
  br label %24, !dbg !17606

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17607
  %11 = load i8, i8* %10, align 1, !dbg !17607
  %12 = and i8 %11, 8, !dbg !17609
  %13 = icmp eq i8 %12, 0, !dbg !17610
  br i1 %13, label %15, label %14, !dbg !17611

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15882, metadata !DIExpression()) #25, !dbg !17612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !17612
  call void @llvm.dbg.value(metadata i32 %3, metadata !15890, metadata !DIExpression()) #25, !dbg !17615
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17617, !srcloc !15896
  br label %24, !dbg !17618

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17619
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17620
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17622
  br i1 %17, label %18, label %23, !dbg !17623

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17624, !srcloc !16506
  call void @llvm.dbg.value(metadata i32 %19, metadata !16502, metadata !DIExpression()) #25, !dbg !17627
  %20 = icmp eq i32 %19, 0, !dbg !17628
  br i1 %20, label %21, label %23, !dbg !17629

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16466, metadata !DIExpression()) #25, !dbg !17630
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16471, metadata !DIExpression()) #25, !dbg !17630
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17633
  br label %23, !dbg !17634

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15882, metadata !DIExpression()) #25, !dbg !17635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !17635
  call void @llvm.dbg.value(metadata i32 %3, metadata !15890, metadata !DIExpression()) #25, !dbg !17637
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17639, !srcloc !15896
  br label %24, !dbg !17640

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17640
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17643, metadata !DIExpression()), !dbg !17644
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17645
  %3 = load i8, i8* %2, align 1, !dbg !17645
  %4 = and i8 %3, 8, !dbg !17647
  %5 = icmp eq i8 %4, 0, !dbg !17648
  br i1 %5, label %6, label %20, !dbg !17649

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17650
  %8 = or i8 %7, 8, !dbg !17650
  store i8 %8, i8* %2, align 1, !dbg !17650
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17652
  br i1 %9, label %10, label %12, !dbg !17654

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16024, metadata !DIExpression()) #25, !dbg !17655
  %11 = and i8 %8, 95, !dbg !17658
  store i8 %11, i8* %2, align 1, !dbg !17658
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16032, metadata !DIExpression()) #25, !dbg !17659
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17661
  br label %12, !dbg !17662

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17663
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !17663
  %15 = icmp eq %union.anon* %14, null, !dbg !17665
  br i1 %15, label %17, label %16, !dbg !17666

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17667
  br label %17, !dbg !17669

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17670
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17671
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !17672
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17673
  br label %20, !dbg !17674

20:                                               ; preds = %17, %1
  ret void, !dbg !17675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !17676 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17680, metadata !DIExpression()), !dbg !17682
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17683
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17681, metadata !DIExpression()), !dbg !17682
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17684
  br i1 %3, label %10, label %4, !dbg !17685

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17686
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17688
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17689, metadata !DIExpression()), !dbg !17695
  call void @llvm.dbg.value(metadata i32 0, metadata !17694, metadata !DIExpression()), !dbg !17695
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17697
  store i32 0, i32* %7, align 4, !dbg !17698
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17699
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17683
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17681, metadata !DIExpression()), !dbg !17682
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17684
  br i1 %9, label %10, label %4, !dbg !17685, !llvm.loop !17700

10:                                               ; preds = %4, %1
  ret void, !dbg !17702
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17703 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17708, metadata !DIExpression()), !dbg !17711
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17707, metadata !DIExpression()), !dbg !17711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !17712
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17714, !srcloc !15870
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17714
  call void @llvm.dbg.value(metadata i32 %4, metadata !15867, metadata !DIExpression()) #25, !dbg !17716
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !17716
  call void @llvm.dbg.value(metadata i32 %4, metadata !15861, metadata !DIExpression()) #25, !dbg !17712
  call void @llvm.dbg.value(metadata i32 %4, metadata !17709, metadata !DIExpression()), !dbg !17711
  call void @llvm.dbg.value(metadata i32 0, metadata !17710, metadata !DIExpression()), !dbg !17711
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17717
  %6 = load i8, i8* %5, align 1, !dbg !17717
  %7 = and i8 %6, 8, !dbg !17719
  %8 = icmp eq i8 %7, 0, !dbg !17720
  br i1 %8, label %9, label %24, !dbg !17721

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17708, metadata !DIExpression()), !dbg !17711
  %11 = icmp eq i64 %10, 0, !dbg !17722
  br i1 %11, label %24, label %12, !dbg !17724

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17725
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17727
  br i1 %14, label %24, label %15, !dbg !17728

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17729
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !17729
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17730
  %19 = icmp eq %union.anon* %17, %18, !dbg !17731
  br i1 %19, label %24, label %20, !dbg !17732

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17733
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !17735
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17736
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17737
  call void @llvm.dbg.value(metadata i32 %4, metadata !16466, metadata !DIExpression()) #25, !dbg !17738
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16471, metadata !DIExpression()) #25, !dbg !17738
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !17740
  call void @llvm.dbg.value(metadata i32 %23, metadata !17710, metadata !DIExpression()), !dbg !17711
  br label %26, !dbg !17741

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17742
  call void @llvm.dbg.value(metadata i32 %25, metadata !17710, metadata !DIExpression()), !dbg !17711
  call void @llvm.dbg.value(metadata i32 %4, metadata !15882, metadata !DIExpression()) #25, !dbg !17743
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !17743
  call void @llvm.dbg.value(metadata i32 %4, metadata !15890, metadata !DIExpression()) #25, !dbg !17745
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17747, !srcloc !15896
  br label %26, !dbg !17748

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17711
  ret i32 %27, !dbg !17749
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17750 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17754, metadata !DIExpression()), !dbg !17762
  call void @llvm.dbg.value(metadata i32 %1, metadata !17755, metadata !DIExpression()), !dbg !17762
  call void @llvm.dbg.value(metadata i8* %2, metadata !17756, metadata !DIExpression()), !dbg !17762
  call void @llvm.dbg.value(metadata i8 0, metadata !17758, metadata !DIExpression()), !dbg !17762
  call void @llvm.dbg.value(metadata i32 0, metadata !17759, metadata !DIExpression()), !dbg !17763
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15855, metadata !DIExpression()) #25, !dbg !17764
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17766, !srcloc !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !15867, metadata !DIExpression()) #25, !dbg !17768
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()) #25, !dbg !17768
  call void @llvm.dbg.value(metadata i32 undef, metadata !15861, metadata !DIExpression()) #25, !dbg !17764
  call void @llvm.dbg.value(metadata i32 undef, metadata !17761, metadata !DIExpression()), !dbg !17763
  call void @llvm.dbg.value(metadata i8 poison, metadata !17758, metadata !DIExpression()), !dbg !17762
  call void @llvm.dbg.value(metadata i32 undef, metadata !17759, metadata !DIExpression()), !dbg !17763
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17769
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17757, metadata !DIExpression()), !dbg !17762
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17772
  br i1 %7, label %12, label %8, !dbg !17774

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17775, metadata !DIExpression()), !dbg !17783
  call void @llvm.dbg.value(metadata i32 %1, metadata !17781, metadata !DIExpression()), !dbg !17783
  call void @llvm.dbg.value(metadata i8* %2, metadata !17782, metadata !DIExpression()), !dbg !17783
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17689, metadata !DIExpression()), !dbg !17786
  call void @llvm.dbg.value(metadata i32 %1, metadata !17694, metadata !DIExpression()), !dbg !17786
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17788
  store i32 %1, i32* %9, align 4, !dbg !17789
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17790
  store i8* %2, i8** %10, align 4, !dbg !17791
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17792
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17793
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17794
  call void @llvm.dbg.value(metadata i8 1, metadata !17758, metadata !DIExpression()), !dbg !17762
  br label %12, !dbg !17795

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17766
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17766
  call void @llvm.dbg.value(metadata i32 %14, metadata !15867, metadata !DIExpression()) #25, !dbg !17768
  call void @llvm.dbg.value(metadata i32 %14, metadata !15861, metadata !DIExpression()) #25, !dbg !17764
  call void @llvm.dbg.value(metadata i32 %14, metadata !17761, metadata !DIExpression()), !dbg !17763
  call void @llvm.dbg.value(metadata i8 poison, metadata !17758, metadata !DIExpression()), !dbg !17762
  call void @llvm.dbg.value(metadata i32 undef, metadata !15882, metadata !DIExpression()) #25, !dbg !17796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15887, metadata !DIExpression()) #25, !dbg !17796
  call void @llvm.dbg.value(metadata i32 undef, metadata !15890, metadata !DIExpression()) #25, !dbg !17798
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17800, !srcloc !15896
  call void @llvm.dbg.value(metadata i32 undef, metadata !17759, metadata !DIExpression()), !dbg !17763
  ret i1 %13, !dbg !17801
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17802 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17808, metadata !DIExpression()), !dbg !17813
  call void @llvm.dbg.value(metadata i64 undef, metadata !17810, metadata !DIExpression()), !dbg !17813
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17807, metadata !DIExpression()), !dbg !17813
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17809, metadata !DIExpression()), !dbg !17813
  call void @llvm.dbg.value(metadata i8** %4, metadata !17811, metadata !DIExpression()), !dbg !17813
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !17814
  call void @llvm.dbg.value(metadata i32 %6, metadata !17812, metadata !DIExpression()), !dbg !17813
  %7 = icmp eq i8** %4, null, !dbg !17815
  br i1 %7, label %12, label %8, !dbg !17817

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17818
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17820
  %11 = load i8*, i8** %10, align 4, !dbg !17820
  store i8* %11, i8** %4, align 4, !dbg !17821
  br label %12, !dbg !17822

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17823
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17824 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !17826
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !17827
  ret void, !dbg !17828
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17829 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17839, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17837, metadata !DIExpression()), !dbg !17856
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17838, metadata !DIExpression()), !dbg !17856
  %5 = icmp eq i64 %4, -1, !dbg !17857
  br i1 %5, label %55, label %6, !dbg !17859

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17860
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17861
  call void @llvm.dbg.value(metadata i32 0, metadata !17840, metadata !DIExpression()), !dbg !17862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17863, metadata !DIExpression()) #25, !dbg !17870
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17872, !srcloc !17878
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17872
  call void @llvm.dbg.value(metadata i32 %9, metadata !17875, metadata !DIExpression()) #25, !dbg !17879
  call void @llvm.dbg.value(metadata i32 undef, metadata !17876, metadata !DIExpression()) #25, !dbg !17879
  call void @llvm.dbg.value(metadata i32 %9, metadata !17869, metadata !DIExpression()) #25, !dbg !17870
  call void @llvm.dbg.value(metadata i32 %9, metadata !17846, metadata !DIExpression()), !dbg !17862
  call void @llvm.dbg.value(metadata i32 undef, metadata !17840, metadata !DIExpression()), !dbg !17862
  %10 = icmp slt i64 %4, -1, !dbg !17880
  br i1 %10, label %11, label %17, !dbg !17881

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17882
  %13 = add i64 %4, %12, !dbg !17883
  %14 = sub i64 -2, %13, !dbg !17883
  call void @llvm.dbg.value(metadata i64 %14, metadata !17850, metadata !DIExpression()), !dbg !17884
  %15 = icmp sgt i64 %14, 1, !dbg !17885
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17885
  br label %22, !dbg !17886

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17887
  %19 = tail call fastcc i32 @elapsed.298() #26, !dbg !17889
  %20 = sext i32 %19 to i64, !dbg !17889
  %21 = add nsw i64 %18, %20, !dbg !17890
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17891
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17892
  store i64 %23, i64* %24, align 8, !dbg !17893
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17894
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17847, metadata !DIExpression()), !dbg !17896
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17897
  br i1 %26, label %42, label %27, !dbg !17897

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17898
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17847, metadata !DIExpression()), !dbg !17896
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17902
  %31 = load i64, i64* %30, align 8, !dbg !17902
  %32 = icmp slt i64 %28, %31, !dbg !17903
  br i1 %32, label %33, label %38, !dbg !17904

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17902
  %35 = sub nsw i64 %31, %28, !dbg !17905
  store i64 %35, i64* %34, align 8, !dbg !17905
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17907
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17908
  tail call fastcc void @sys_dlist_insert.299(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17909
  br label %44, !dbg !17910

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17911
  store i64 %39, i64* %24, align 8, !dbg !17911
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17912
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17847, metadata !DIExpression()), !dbg !17896
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17897
  br i1 %41, label %42, label %27, !dbg !17897, !llvm.loop !17913

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17915
  tail call fastcc void @sys_dlist_append.300(%struct._dnode* noundef %43) #26, !dbg !17918
  br label %44, !dbg !17919

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17920
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17921
  br i1 %46, label %47, label %54, !dbg !17922

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17923
  call void @llvm.dbg.value(metadata i32 %48, metadata !17853, metadata !DIExpression()), !dbg !17924
  %49 = icmp ne i32 %48, 0, !dbg !17925
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17927
  br i1 %52, label %54, label %53, !dbg !17927

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !17928
  br label %54, !dbg !17930

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17931, metadata !DIExpression()) #25, !dbg !17937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17936, metadata !DIExpression()) #25, !dbg !17937
  call void @llvm.dbg.value(metadata i32 %9, metadata !17939, metadata !DIExpression()) #25, !dbg !17942
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17944, !srcloc !17945
  call void @llvm.dbg.value(metadata i32 undef, metadata !17840, metadata !DIExpression()), !dbg !17862
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17946
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.298() unnamed_addr #1 !dbg !17947 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17950
  %2 = icmp eq i32 %1, 0, !dbg !17951
  br i1 %2, label %3, label %5, !dbg !17950

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !17952
  br label %5, !dbg !17950

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17950
  ret i32 %6, !dbg !17953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !17954 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.303() #26, !dbg !17960
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17958, metadata !DIExpression()), !dbg !17961
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17962
  ret %struct._timeout* %2, !dbg !17963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.299(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !17964 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17968, metadata !DIExpression()), !dbg !17972
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17969, metadata !DIExpression()), !dbg !17972
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17973
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17973
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17970, metadata !DIExpression()), !dbg !17972
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17974
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17975
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17976
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17977
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17978
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17979
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17980
  ret void, !dbg !17981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !17982 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17986, metadata !DIExpression()), !dbg !17988
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17989
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.301(%struct._dnode* noundef %2) #26, !dbg !17990
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17987, metadata !DIExpression()), !dbg !17988
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17991
  ret %struct._timeout* %4, !dbg !17992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.300(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !17993 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17998, metadata !DIExpression()), !dbg !18001
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17999, metadata !DIExpression()), !dbg !18001
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18002
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !18000, metadata !DIExpression()), !dbg !18001
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18003
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !18004
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18005
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !18006
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !18007
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !18008
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18009
  ret void, !dbg !18010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !18011 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !18016
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !18013, metadata !DIExpression()), !dbg !18017
  %2 = tail call fastcc i32 @elapsed.298() #26, !dbg !18018
  call void @llvm.dbg.value(metadata i32 %2, metadata !18014, metadata !DIExpression()), !dbg !18017
  %3 = icmp eq %struct._timeout* %1, null, !dbg !18019
  br i1 %3, label %14, label %4, !dbg !18021

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !18022
  %6 = load i64, i64* %5, align 8, !dbg !18022
  %7 = sext i32 %2 to i64, !dbg !18023
  %8 = sub nsw i64 %6, %7, !dbg !18024
  %9 = icmp sgt i64 %8, 2147483647, !dbg !18025
  br i1 %9, label %14, label %10, !dbg !18026

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !18027
  %12 = select i1 %11, i64 %8, i64 0, !dbg !18027
  %13 = trunc i64 %12 to i32, !dbg !18027
  call void @llvm.dbg.value(metadata i32 %13, metadata !18015, metadata !DIExpression()), !dbg !18017
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !18029
  call void @llvm.dbg.value(metadata i32 %15, metadata !18015, metadata !DIExpression()), !dbg !18017
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !18030
  %17 = icmp ne i32 %16, 0, !dbg !18032
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !18033
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !18033
  call void @llvm.dbg.value(metadata i32 %20, metadata !18015, metadata !DIExpression()), !dbg !18017
  ret i32 %20, !dbg !18034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.301(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !18035 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18039, metadata !DIExpression()), !dbg !18041
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18040, metadata !DIExpression()), !dbg !18041
  %2 = icmp eq %struct._dnode* %0, null, !dbg !18042
  br i1 %2, label %5, label %3, !dbg !18043

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.302(%struct._dnode* noundef nonnull %0) #26, !dbg !18044
  br label %5, !dbg !18043

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !18043
  ret %struct._dnode* %6, !dbg !18045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.302(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !18046 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18048, metadata !DIExpression()), !dbg !18050
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18049, metadata !DIExpression()), !dbg !18050
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18051
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !18052
  br i1 %3, label %7, label %4, !dbg !18053

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18054
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !18054
  br label %7, !dbg !18053

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !18053
  ret %struct._dnode* %8, !dbg !18055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.303() unnamed_addr #10 !dbg !18056 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18060, metadata !DIExpression()), !dbg !18061
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.304() #26, !dbg !18062
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !18062
  ret %struct._dnode* %3, !dbg !18063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.304() unnamed_addr #10 !dbg !18064 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18068, metadata !DIExpression()), !dbg !18069
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !18070
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !18071
  ret i1 %2, !dbg !18072
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18073 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18077, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata i32 -22, metadata !18078, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata i32 0, metadata !18079, metadata !DIExpression()), !dbg !18083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17863, metadata !DIExpression()) #25, !dbg !18084
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18086, !srcloc !17878
  call void @llvm.dbg.value(metadata i32 undef, metadata !17875, metadata !DIExpression()) #25, !dbg !18088
  call void @llvm.dbg.value(metadata i32 undef, metadata !17876, metadata !DIExpression()) #25, !dbg !18088
  call void @llvm.dbg.value(metadata i32 undef, metadata !17869, metadata !DIExpression()) #25, !dbg !18084
  call void @llvm.dbg.value(metadata i32 undef, metadata !18081, metadata !DIExpression()), !dbg !18083
  call void @llvm.dbg.value(metadata i32 -22, metadata !18078, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata i32 undef, metadata !18079, metadata !DIExpression()), !dbg !18083
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !18078, metadata !DIExpression()), !dbg !18082
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.307(%struct._dnode* noundef %3) #26, !dbg !18089
  br i1 %4, label %5, label %6, !dbg !18093

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !18094
  call void @llvm.dbg.value(metadata i32 0, metadata !18078, metadata !DIExpression()), !dbg !18082
  br label %6, !dbg !18096

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !18082
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !18086
  call void @llvm.dbg.value(metadata i32 %8, metadata !17875, metadata !DIExpression()) #25, !dbg !18088
  call void @llvm.dbg.value(metadata i32 %8, metadata !17869, metadata !DIExpression()) #25, !dbg !18084
  call void @llvm.dbg.value(metadata i32 %8, metadata !18081, metadata !DIExpression()), !dbg !18083
  call void @llvm.dbg.value(metadata i32 %7, metadata !18078, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata i32 undef, metadata !17931, metadata !DIExpression()) #25, !dbg !18097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17936, metadata !DIExpression()) #25, !dbg !18097
  call void @llvm.dbg.value(metadata i32 undef, metadata !17939, metadata !DIExpression()) #25, !dbg !18099
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !18101, !srcloc !17945
  call void @llvm.dbg.value(metadata i32 undef, metadata !18079, metadata !DIExpression()), !dbg !18083
  ret i32 %7, !dbg !18102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.307(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18103 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18109, metadata !DIExpression()), !dbg !18110
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18111
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18111
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18112
  ret i1 %4, !dbg !18113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !18114 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18116, metadata !DIExpression()), !dbg !18117
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !18118
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18120
  br i1 %3, label %10, label %4, !dbg !18121

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18122
  %6 = load i64, i64* %5, align 8, !dbg !18122
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18124
  %8 = load i64, i64* %7, align 8, !dbg !18125
  %9 = add nsw i64 %8, %6, !dbg !18125
  store i64 %9, i64* %7, align 8, !dbg !18125
  br label %10, !dbg !18126

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18127
  tail call fastcc void @sys_dlist_remove.308(%struct._dnode* noundef %11) #26, !dbg !18128
  ret void, !dbg !18129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.308(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !18130 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18134, metadata !DIExpression()), !dbg !18137
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18138
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18138
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18135, metadata !DIExpression()), !dbg !18137
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18139
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18139
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18136, metadata !DIExpression()), !dbg !18137
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18140
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18141
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18142
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18143
  tail call fastcc void @sys_dnode_init.309(%struct._dnode* noundef %0) #26, !dbg !18144
  ret void, !dbg !18145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.309(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !18146 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18148, metadata !DIExpression()), !dbg !18149
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18150
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18151
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18152
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18153
  ret void, !dbg !18154
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18155 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18161, metadata !DIExpression()), !dbg !18166
  call void @llvm.dbg.value(metadata i64 0, metadata !18162, metadata !DIExpression()), !dbg !18166
  call void @llvm.dbg.value(metadata i32 0, metadata !18163, metadata !DIExpression()), !dbg !18167
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17863, metadata !DIExpression()) #25, !dbg !18168
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18170, !srcloc !17878
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18170
  call void @llvm.dbg.value(metadata i32 %3, metadata !17875, metadata !DIExpression()) #25, !dbg !18172
  call void @llvm.dbg.value(metadata i32 undef, metadata !17876, metadata !DIExpression()) #25, !dbg !18172
  call void @llvm.dbg.value(metadata i32 %3, metadata !17869, metadata !DIExpression()) #25, !dbg !18168
  call void @llvm.dbg.value(metadata i32 %3, metadata !18165, metadata !DIExpression()), !dbg !18167
  call void @llvm.dbg.value(metadata i64 0, metadata !18162, metadata !DIExpression()), !dbg !18166
  call void @llvm.dbg.value(metadata i32 undef, metadata !18163, metadata !DIExpression()), !dbg !18167
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18173
  call void @llvm.dbg.value(metadata i64 %4, metadata !18162, metadata !DIExpression()), !dbg !18166
  call void @llvm.dbg.value(metadata i32 %3, metadata !17931, metadata !DIExpression()) #25, !dbg !18176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17936, metadata !DIExpression()) #25, !dbg !18176
  call void @llvm.dbg.value(metadata i32 %3, metadata !17939, metadata !DIExpression()) #25, !dbg !18178
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18180, !srcloc !17945
  call void @llvm.dbg.value(metadata i32 undef, metadata !18163, metadata !DIExpression()), !dbg !18167
  ret i64 %4, !dbg !18181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18182 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18184, metadata !DIExpression()), !dbg !18188
  call void @llvm.dbg.value(metadata i64 0, metadata !18185, metadata !DIExpression()), !dbg !18188
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.310(%struct._timeout* noundef %0) #26, !dbg !18189
  br i1 %2, label %21, label %3, !dbg !18191

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !18192
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18186, metadata !DIExpression()), !dbg !18193
  call void @llvm.dbg.value(metadata i64 0, metadata !18185, metadata !DIExpression()), !dbg !18188
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18194
  br i1 %5, label %16, label %6, !dbg !18196

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18186, metadata !DIExpression()), !dbg !18193
  call void @llvm.dbg.value(metadata i64 %8, metadata !18185, metadata !DIExpression()), !dbg !18188
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18197
  %10 = load i64, i64* %9, align 8, !dbg !18197
  %11 = add nsw i64 %10, %8, !dbg !18199
  call void @llvm.dbg.value(metadata i64 %11, metadata !18185, metadata !DIExpression()), !dbg !18188
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18200
  br i1 %12, label %16, label %13, !dbg !18202

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !18203
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18186, metadata !DIExpression()), !dbg !18193
  call void @llvm.dbg.value(metadata i64 %11, metadata !18185, metadata !DIExpression()), !dbg !18188
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18194
  br i1 %15, label %16, label %6, !dbg !18196, !llvm.loop !18204

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18188
  call void @llvm.dbg.value(metadata i64 %17, metadata !18185, metadata !DIExpression()), !dbg !18188
  %18 = tail call fastcc i32 @elapsed.298() #26, !dbg !18206
  %19 = sext i32 %18 to i64, !dbg !18206
  %20 = sub nsw i64 %17, %19, !dbg !18207
  br label %21, !dbg !18208

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18188
  ret i64 %22, !dbg !18209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.310(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18210 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18214, metadata !DIExpression()), !dbg !18215
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18216
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.307(%struct._dnode* noundef %2) #26, !dbg !18217
  %4 = xor i1 %3, true, !dbg !18218
  ret i1 %4, !dbg !18219
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18220 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18222, metadata !DIExpression()), !dbg !18227
  call void @llvm.dbg.value(metadata i64 0, metadata !18223, metadata !DIExpression()), !dbg !18227
  call void @llvm.dbg.value(metadata i32 0, metadata !18224, metadata !DIExpression()), !dbg !18228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17863, metadata !DIExpression()) #25, !dbg !18229
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18231, !srcloc !17878
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18231
  call void @llvm.dbg.value(metadata i32 %3, metadata !17875, metadata !DIExpression()) #25, !dbg !18233
  call void @llvm.dbg.value(metadata i32 undef, metadata !17876, metadata !DIExpression()) #25, !dbg !18233
  call void @llvm.dbg.value(metadata i32 %3, metadata !17869, metadata !DIExpression()) #25, !dbg !18229
  call void @llvm.dbg.value(metadata i32 %3, metadata !18226, metadata !DIExpression()), !dbg !18228
  call void @llvm.dbg.value(metadata i64 0, metadata !18223, metadata !DIExpression()), !dbg !18227
  call void @llvm.dbg.value(metadata i32 undef, metadata !18224, metadata !DIExpression()), !dbg !18228
  %4 = load i64, i64* @curr_tick, align 8, !dbg !18234
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18237
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !18223, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18227
  call void @llvm.dbg.value(metadata i32 %3, metadata !17931, metadata !DIExpression()) #25, !dbg !18238
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17936, metadata !DIExpression()) #25, !dbg !18238
  call void @llvm.dbg.value(metadata i32 %3, metadata !17939, metadata !DIExpression()) #25, !dbg !18240
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18242, !srcloc !17945
  call void @llvm.dbg.value(metadata i32 undef, metadata !18224, metadata !DIExpression()), !dbg !18228
  %6 = add i64 %5, %4, !dbg !18243
  ret i64 %6, !dbg !18244
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18245 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18247, metadata !DIExpression()), !dbg !18251
  call void @llvm.dbg.value(metadata i32 0, metadata !18248, metadata !DIExpression()), !dbg !18252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17863, metadata !DIExpression()) #25, !dbg !18253
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18255, !srcloc !17878
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18255
  call void @llvm.dbg.value(metadata i32 %2, metadata !17875, metadata !DIExpression()) #25, !dbg !18257
  call void @llvm.dbg.value(metadata i32 undef, metadata !17876, metadata !DIExpression()) #25, !dbg !18257
  call void @llvm.dbg.value(metadata i32 %2, metadata !17869, metadata !DIExpression()) #25, !dbg !18253
  call void @llvm.dbg.value(metadata i32 %2, metadata !18250, metadata !DIExpression()), !dbg !18252
  call void @llvm.dbg.value(metadata i32 -1, metadata !18247, metadata !DIExpression()), !dbg !18251
  call void @llvm.dbg.value(metadata i32 undef, metadata !18248, metadata !DIExpression()), !dbg !18252
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !18258
  call void @llvm.dbg.value(metadata i32 %3, metadata !18247, metadata !DIExpression()), !dbg !18251
  call void @llvm.dbg.value(metadata i32 %2, metadata !17931, metadata !DIExpression()) #25, !dbg !18261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17936, metadata !DIExpression()) #25, !dbg !18261
  call void @llvm.dbg.value(metadata i32 %2, metadata !17939, metadata !DIExpression()) #25, !dbg !18263
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18265, !srcloc !17945
  call void @llvm.dbg.value(metadata i32 undef, metadata !18248, metadata !DIExpression()), !dbg !18252
  ret i32 %3, !dbg !18266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18269, metadata !DIExpression()), !dbg !18279
  call void @llvm.dbg.value(metadata i1 %1, metadata !18270, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18279
  call void @llvm.dbg.value(metadata i32 0, metadata !18271, metadata !DIExpression()), !dbg !18280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17863, metadata !DIExpression()) #25, !dbg !18281
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18283, !srcloc !17878
  call void @llvm.dbg.value(metadata i32 undef, metadata !17875, metadata !DIExpression()) #25, !dbg !18285
  call void @llvm.dbg.value(metadata i32 undef, metadata !17876, metadata !DIExpression()) #25, !dbg !18285
  call void @llvm.dbg.value(metadata i32 undef, metadata !17869, metadata !DIExpression()) #25, !dbg !18281
  call void @llvm.dbg.value(metadata i32 undef, metadata !18273, metadata !DIExpression()), !dbg !18280
  call void @llvm.dbg.value(metadata i32 undef, metadata !18271, metadata !DIExpression()), !dbg !18280
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !18286
  call void @llvm.dbg.value(metadata i32 %4, metadata !18274, metadata !DIExpression()), !dbg !18287
  call void @llvm.dbg.value(metadata i1 undef, metadata !18277, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18287
  %5 = icmp slt i32 %4, 2, !dbg !18288
  call void @llvm.dbg.value(metadata i1 %5, metadata !18278, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18287
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !18289
  call void @llvm.dbg.value(metadata i1 %6, metadata !18277, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18287
  br i1 %7, label %11, label %8, !dbg !18289

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !18291
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !18291
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !18293
  br label %11, !dbg !18294

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !18283
  call void @llvm.dbg.value(metadata i32 %12, metadata !17875, metadata !DIExpression()) #25, !dbg !18285
  call void @llvm.dbg.value(metadata i32 %12, metadata !17869, metadata !DIExpression()) #25, !dbg !18281
  call void @llvm.dbg.value(metadata i32 %12, metadata !18273, metadata !DIExpression()), !dbg !18280
  call void @llvm.dbg.value(metadata i32 undef, metadata !17931, metadata !DIExpression()) #25, !dbg !18295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17936, metadata !DIExpression()) #25, !dbg !18295
  call void @llvm.dbg.value(metadata i32 undef, metadata !17939, metadata !DIExpression()) #25, !dbg !18297
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !18299, !srcloc !17945
  call void @llvm.dbg.value(metadata i32 1, metadata !18271, metadata !DIExpression()), !dbg !18280
  call void @llvm.dbg.value(metadata i32 undef, metadata !18271, metadata !DIExpression()), !dbg !18280
  ret void, !dbg !18300
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18305, metadata !DIExpression()), !dbg !18310
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17863, metadata !DIExpression()) #25, !dbg !18312
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18314, !srcloc !17878
  call void @llvm.dbg.value(metadata i32 undef, metadata !17875, metadata !DIExpression()) #25, !dbg !18316
  call void @llvm.dbg.value(metadata i32 undef, metadata !17876, metadata !DIExpression()) #25, !dbg !18316
  call void @llvm.dbg.value(metadata i32 undef, metadata !17869, metadata !DIExpression()) #25, !dbg !18312
  call void @llvm.dbg.value(metadata i32 undef, metadata !18306, metadata !DIExpression()), !dbg !18310
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18310
  call void @llvm.dbg.value(metadata i32 undef, metadata !18306, metadata !DIExpression()), !dbg !18310
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !18317
  %4 = icmp eq %struct._timeout* %3, null, !dbg !18318
  br i1 %4, label %28, label %5, !dbg !18319

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !18320
  %10 = load i64, i64* %9, align 8, !dbg !18320
  %11 = sext i32 %8 to i64, !dbg !18321
  %12 = icmp sgt i64 %10, %11, !dbg !18322
  br i1 %12, label %26, label %13, !dbg !18323

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !18310
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !18307, metadata !DIExpression()), !dbg !18324
  %15 = trunc i64 %10 to i32, !dbg !18325
  call void @llvm.dbg.value(metadata i32 %15, metadata !18309, metadata !DIExpression()), !dbg !18324
  %16 = sext i32 %15 to i64, !dbg !18326
  %17 = load i64, i64* @curr_tick, align 8, !dbg !18327
  %18 = add i64 %17, %16, !dbg !18327
  store i64 %18, i64* @curr_tick, align 8, !dbg !18327
  store i64 0, i64* %9, align 8, !dbg !18328
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !18329
  call void @llvm.dbg.value(metadata i32 %14, metadata !17931, metadata !DIExpression()) #25, !dbg !18330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17936, metadata !DIExpression()) #25, !dbg !18330
  call void @llvm.dbg.value(metadata i32 %14, metadata !17939, metadata !DIExpression()) #25, !dbg !18332
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18334, !srcloc !17945
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !18335
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !18335
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !18336
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17863, metadata !DIExpression()) #25, !dbg !18337
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18339, !srcloc !17878
  call void @llvm.dbg.value(metadata i32 undef, metadata !17875, metadata !DIExpression()) #25, !dbg !18341
  call void @llvm.dbg.value(metadata i32 undef, metadata !17876, metadata !DIExpression()) #25, !dbg !18341
  call void @llvm.dbg.value(metadata i32 undef, metadata !17869, metadata !DIExpression()) #25, !dbg !18337
  call void @llvm.dbg.value(metadata i32 undef, metadata !18306, metadata !DIExpression()), !dbg !18310
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !18342
  %23 = sub nsw i32 %22, %15, !dbg !18342
  store i32 %23, i32* @announce_remaining, align 4, !dbg !18310
  call void @llvm.dbg.value(metadata i32 undef, metadata !18306, metadata !DIExpression()), !dbg !18310
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !18317
  %25 = icmp eq %struct._timeout* %24, null, !dbg !18318
  br i1 %25, label %28, label %5, !dbg !18319, !llvm.loop !18343

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !18345
  store i64 %27, i64* %9, align 8, !dbg !18345
  br label %32, !dbg !18348

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !18310
  %31 = sext i32 %30 to i64, !dbg !18349
  br label %32, !dbg !18349

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !18349
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !18310
  %36 = load i64, i64* @curr_tick, align 8, !dbg !18350
  %37 = add i64 %36, %33, !dbg !18350
  store i64 %37, i64* @curr_tick, align 8, !dbg !18350
  store i32 0, i32* @announce_remaining, align 4, !dbg !18351
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !18352
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !18353
  call void @llvm.dbg.value(metadata i32 %35, metadata !17931, metadata !DIExpression()) #25, !dbg !18354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17936, metadata !DIExpression()) #25, !dbg !18354
  call void @llvm.dbg.value(metadata i32 %35, metadata !17939, metadata !DIExpression()) #25, !dbg !18356
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !18358, !srcloc !17945
  ret void, !dbg !18359
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18360 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18364, metadata !DIExpression()), !dbg !18368
  call void @llvm.dbg.value(metadata i32 0, metadata !18365, metadata !DIExpression()), !dbg !18369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17863, metadata !DIExpression()) #25, !dbg !18370
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18372, !srcloc !17878
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18372
  call void @llvm.dbg.value(metadata i32 %2, metadata !17875, metadata !DIExpression()) #25, !dbg !18374
  call void @llvm.dbg.value(metadata i32 undef, metadata !17876, metadata !DIExpression()) #25, !dbg !18374
  call void @llvm.dbg.value(metadata i32 %2, metadata !17869, metadata !DIExpression()) #25, !dbg !18370
  call void @llvm.dbg.value(metadata i32 %2, metadata !18367, metadata !DIExpression()), !dbg !18369
  call void @llvm.dbg.value(metadata i64 0, metadata !18364, metadata !DIExpression()), !dbg !18368
  call void @llvm.dbg.value(metadata i32 undef, metadata !18365, metadata !DIExpression()), !dbg !18369
  %3 = load i64, i64* @curr_tick, align 8, !dbg !18375
  %4 = tail call fastcc i32 @elapsed.298() #26, !dbg !18378
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !18364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18368
  call void @llvm.dbg.value(metadata i32 %2, metadata !17931, metadata !DIExpression()) #25, !dbg !18379
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17936, metadata !DIExpression()) #25, !dbg !18379
  call void @llvm.dbg.value(metadata i32 %2, metadata !17939, metadata !DIExpression()) #25, !dbg !18381
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18383, !srcloc !17945
  call void @llvm.dbg.value(metadata i32 undef, metadata !18365, metadata !DIExpression()), !dbg !18369
  %5 = sext i32 %4 to i64, !dbg !18378
  %6 = add i64 %3, %5, !dbg !18384
  ret i64 %6, !dbg !18385
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18386 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18387
  %2 = trunc i64 %1 to i32, !dbg !18388
  ret i32 %2, !dbg !18389
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18390 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18391
  ret i64 %1, !dbg !18392
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18395, metadata !DIExpression()), !dbg !18402
  %2 = icmp eq i32 %0, 0, !dbg !18403
  br i1 %2, label %10, label %3, !dbg !18405

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18406
  call void @llvm.dbg.value(metadata i32 %4, metadata !18396, metadata !DIExpression()), !dbg !18402
  %5 = shl i32 %0, 5, !dbg !18407
  call void @llvm.dbg.value(metadata i32 %5, metadata !18397, metadata !DIExpression()), !dbg !18402
  br label %6, !dbg !18408

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18409
  call void @llvm.dbg.value(metadata i32 %7, metadata !18398, metadata !DIExpression()), !dbg !18410
  %8 = sub i32 %7, %4, !dbg !18411
  %9 = icmp ult i32 %8, %5, !dbg !18413
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18415 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !18416
  ret i32 %1, !dbg !18417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18418 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18420
  ret i32 %1, !dbg !18421
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18422 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18426, metadata !DIExpression()), !dbg !18428
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18429

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !18430
  br label %14, !dbg !18434

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18427, metadata !DIExpression()), !dbg !18428
  %6 = icmp slt i64 %2, -1, !dbg !18435
  br i1 %6, label %7, label %9, !dbg !18438

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18439
  br label %14, !dbg !18440

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18442
  %11 = icmp ugt i64 %2, 1, !dbg !18443
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18443
  %13 = add nsw i64 %10, %12, !dbg !18444
  br label %14, !dbg !18445

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18446
  ret i64 %15, !dbg !18447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18448 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.319, i32 0, i32 0)) #27, !dbg !18450
  ret void, !dbg !18451
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1018, !2, !2706, !27, !379, !403, !2708, !2710, !2744, !414, !471, !2746, !2749, !500, !520, !2751, !2759, !2767, !2783, !2794, !2840, !2842, !2870, !2898, !2941, !3013, !3058, !532, !688, !3086, !724, !734, !759, !867, !1050, !3091, !1168, !1234, !1416, !1683, !1923, !3112, !2036, !2123, !3114, !3185, !3234, !2157, !3237, !2164, !2532, !3255, !2554, !3257, !2669, !3260}
!llvm.ident = !{!3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262, !3262}
!llvm.module.flags = !{!3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !294, line: 18, type: !371, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !123, globals: !290, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!29 = !{!30, !39, !42, !46, !116}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_mode", file: !31, line: 44, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/crypto/cipher.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38}
!34 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_ECB", value: 1)
!35 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CBC", value: 2)
!36 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CTR", value: 3)
!37 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CCM", value: 4)
!38 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_GCM", value: 5)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_algo", file: !31, line: 29, baseType: !32, size: 32, elements: !40)
!40 = !{!41}
!41 = !DIEnumerator(name: "CRYPTO_CIPHER_ALGO_AES", value: 1)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_op", file: !31, line: 34, baseType: !32, size: 32, elements: !43)
!43 = !{!44, !45}
!44 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_DECRYPT", value: 0)
!45 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_ENCRYPT", value: 1)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !47, line: 27, baseType: !32, size: 32, elements: !48)
!47 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!48 = !{!49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115}
!49 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!50 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!51 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!52 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!53 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!54 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!55 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!56 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!57 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!58 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!59 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!60 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!61 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!62 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!63 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!64 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!65 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!104 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!105 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!106 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!107 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!108 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!109 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!110 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!111 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!112 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!113 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!114 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!115 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hash_algo", file: !117, line: 26, baseType: !32, size: 32, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/crypto/hash.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA224", value: 1)
!120 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA256", value: 2)
!121 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA384", value: 3)
!122 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA512", value: 4)
!123 = !{!124, !125, !126}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!125 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/crypto/crypto.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130, !161, !241, !245, !253, !278, !282}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !127, file: !128, line: 66, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!132 = !DISubroutineType(types: !133)
!133 = !{!125, !134}
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !143, !144, !145, !154, !155}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !136, file: !137, line: 380, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !136, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !136, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !136, file: !137, line: 386, baseType: !146, size: 32, offset: 96)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !148)
!148 = !{!149, !152}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !147, file: !137, line: 359, baseType: !150, size: 8)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !151)
!151 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !147, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!153 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !136, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !136, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !137, line: 43, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !160)
!160 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !127, file: !128, line: 69, baseType: !162, size: 32, offset: 32)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!163 = !DISubroutineType(types: !164)
!164 = !{!125, !134, !165, !39, !30, !42}
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !167)
!167 = !{!168, !212, !217, !218, !219, !220, !239, !240}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !166, file: !31, line: 116, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !170)
!170 = !{!171, !172}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !169, file: !31, line: 76, baseType: !30, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !169, file: !31, line: 78, baseType: !173, size: 32, offset: 32)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !169, file: !31, line: 78, size: 32, elements: !174)
!174 = !{!175, !190, !195, !197, !210}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !173, file: !31, line: 79, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DISubroutineType(types: !179)
!179 = !{!125, !165, !180}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !182)
!182 = !{!183, !185, !186, !187, !188, !189}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !181, file: !31, line: 183, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !181, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !181, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !181, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !181, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !181, file: !31, line: 208, baseType: !165, size: 32, offset: 160)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !173, file: !31, line: 80, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DISubroutineType(types: !194)
!194 = !{!125, !165, !180, !184}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !173, file: !31, line: 81, baseType: !196, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !192)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !173, file: !31, line: 82, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!125, !165, !202, !184}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !204)
!204 = !{!205, !206, !207, !209}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !203, file: !31, line: 219, baseType: !180, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !203, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !203, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !203, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !173, file: !31, line: 83, baseType: !211, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !199)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !166, file: !31, line: 126, baseType: !213, size: 32, offset: 64)
!213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 119, size: 32, elements: !214)
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !213, file: !31, line: 121, baseType: !184, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !213, file: !31, line: 125, baseType: !124, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !166, file: !31, line: 131, baseType: !134, size: 32, offset: 96)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !166, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !166, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !166, file: !31, line: 156, baseType: !221, size: 32, offset: 192)
!221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 152, size: 32, elements: !222)
!222 = !{!223, !230, !234}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !221, file: !31, line: 153, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !225)
!225 = !{!226, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !224, file: !31, line: 88, baseType: !227, size: 16)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !228)
!228 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !224, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !221, file: !31, line: 154, baseType: !231, size: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !232)
!232 = !{!233}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !231, file: !31, line: 96, baseType: !208, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !221, file: !31, line: 155, baseType: !235, size: 32)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !236)
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !235, file: !31, line: 100, baseType: !227, size: 16)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !235, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !166, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !166, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !127, file: !128, line: 74, baseType: !242, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 32)
!243 = !DISubroutineType(types: !244)
!244 = !{!125, !134, !165}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !127, file: !128, line: 77, baseType: !246, size: 32, offset: 96)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DISubroutineType(types: !248)
!248 = !{!125, !134, !249}
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !250)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 32)
!251 = !DISubroutineType(types: !252)
!252 = !{null, !180, !125}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !127, file: !128, line: 81, baseType: !254, size: 32, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = !DISubroutineType(types: !256)
!256 = !{!125, !134, !257, !116}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !259)
!259 = !{!260, !261, !262, !276, !277}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !258, file: !117, line: 51, baseType: !134, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !258, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !258, file: !117, line: 65, baseType: !263, size: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!125, !257, !267, !153}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !269)
!269 = !{!270, !271, !274, !275}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !268, file: !117, line: 91, baseType: !184, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !268, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !273, line: 214, baseType: !32)
!273 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !268, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !268, file: !117, line: 107, baseType: !257, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !258, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !258, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !127, file: !128, line: 84, baseType: !279, size: 32, offset: 160)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DISubroutineType(types: !281)
!281 = !{!125, !134, !257}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !127, file: !128, line: 86, baseType: !283, size: 32, offset: 192)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DISubroutineType(types: !285)
!285 = !{!125, !134, !286}
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !267, !125}
!290 = !{!25, !291, !314, !316, !318, !320, !324, !327, !329, !334, !339, !344, !349, !351, !356, !361, !366}
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(name: "iv", scope: !293, file: !294, line: 227, type: !311, isLocal: true, isDefinition: true)
!293 = distinct !DISubprogram(name: "cbc_mode", scope: !294, file: !294, line: 205, type: !295, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !297)
!294 = !DIFile(filename: "zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !DISubroutineType(types: !296)
!296 = !{null, !134}
!297 = !{!298, !299, !303, !307, !308, !309, !310}
!298 = !DILocalVariable(name: "dev", arg: 1, scope: !293, file: !294, line: 205, type: !134)
!299 = !DILocalVariable(name: "encrypted", scope: !293, file: !294, line: 207, type: !300)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 640, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 80)
!303 = !DILocalVariable(name: "decrypted", scope: !293, file: !294, line: 208, type: !304)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 512, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 64)
!307 = !DILocalVariable(name: "ini", scope: !293, file: !294, line: 209, type: !166)
!308 = !DILocalVariable(name: "encrypt", scope: !293, file: !294, line: 214, type: !181)
!309 = !DILocalVariable(name: "decrypt", scope: !293, file: !294, line: 220, type: !181)
!310 = !DILabel(scope: !293, name: "out", file: !294, line: 279)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 16)
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "cap_flags", scope: !27, file: !294, line: 48, type: !208, isLocal: false, isDefinition: true)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "key", scope: !27, file: !294, line: 34, type: !311, isLocal: true, isDefinition: true)
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "plaintext", scope: !27, file: !294, line: 39, type: !304, isLocal: true, isDefinition: true)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "cbc_ciphertext", scope: !27, file: !294, line: 195, type: !322, isLocal: true, isDefinition: true)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 640, elements: !301)
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "ctr_ciphertext", scope: !27, file: !294, line: 283, type: !326, isLocal: true, isDefinition: true)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 512, elements: !305)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "ccm_key", scope: !27, file: !294, line: 373, type: !311, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "ccm_data", scope: !27, file: !294, line: 384, type: !331, isLocal: true, isDefinition: true)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 184, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 23)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "ccm_hdr", scope: !27, file: !294, line: 381, type: !336, isLocal: true, isDefinition: true)
!336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !337)
!337 = !{!338}
!338 = !DISubrange(count: 8)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "ccm_nonce", scope: !27, file: !294, line: 377, type: !341, isLocal: true, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 104, elements: !342)
!342 = !{!343}
!343 = !DISubrange(count: 13)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "ccm_expected", scope: !27, file: !294, line: 388, type: !346, isLocal: true, isDefinition: true)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 248, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 31)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "gcm_key", scope: !27, file: !294, line: 485, type: !311, isLocal: true, isDefinition: true)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "gcm_data", scope: !27, file: !294, line: 496, type: !353, isLocal: true, isDefinition: true)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 336, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 42)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "gcm_hdr", scope: !27, file: !294, line: 492, type: !358, isLocal: true, isDefinition: true)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 160, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 20)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "gcm_nonce", scope: !27, file: !294, line: 489, type: !363, isLocal: true, isDefinition: true)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 96, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 12)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "gcm_expected", scope: !27, file: !294, line: 502, type: !368, isLocal: true, isDefinition: true)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 464, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 58)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !374)
!373 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !372, file: !373, line: 17, baseType: !140, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !372, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !379, file: !395, line: 18, type: !396, isLocal: false, isDefinition: true)
!379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !381, globals: !394, splitDebugInlining: false, nameTableKind: None)
!380 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!381 = !{!22, !124, !24, !382, !384, !386, !272, !125, !387, !388, !390, !392, !393, !184, !227, !140}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!383 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!394 = !{!377}
!395 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !398)
!398 = !{!399, !400}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !397, file: !373, line: 17, baseType: !140, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !397, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "_char_out", scope: !403, file: !408, line: 54, type: !409, isLocal: false, isDefinition: true)
!403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !407, splitDebugInlining: false, nameTableKind: None)
!404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!405 = !{!46}
!406 = !{!124, !125}
!407 = !{!401}
!408 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!410 = !DISubroutineType(types: !411)
!411 = !{!125, !125}
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !414, file: !444, line: 60, type: !445, isLocal: true, isDefinition: true, align: 32)
!414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !416, globals: !443, splitDebugInlining: false, nameTableKind: None)
!415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!416 = !{!417, !437}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 386, baseType: !420)
!419 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 370, size: 448, elements: !421)
!421 = !{!422, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !420, file: !419, line: 372, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !420, file: !419, line: 373, baseType: !423, size: 32, offset: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !420, file: !419, line: 374, baseType: !423, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !420, file: !419, line: 375, baseType: !423, size: 32, offset: 96)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !420, file: !419, line: 376, baseType: !423, size: 32, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !420, file: !419, line: 377, baseType: !423, size: 32, offset: 160)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !420, file: !419, line: 378, baseType: !423, size: 32, offset: 192)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !420, file: !419, line: 379, baseType: !423, size: 32, offset: 224)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !420, file: !419, line: 380, baseType: !423, size: 32, offset: 256)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !420, file: !419, line: 381, baseType: !423, size: 32, offset: 288)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !420, file: !419, line: 382, baseType: !423, size: 32, offset: 320)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !420, file: !419, line: 383, baseType: !423, size: 32, offset: 352)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !420, file: !419, line: 384, baseType: !423, size: 32, offset: 384)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !420, file: !419, line: 385, baseType: !423, size: 32, offset: 416)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 364, baseType: !439)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 360, size: 64, elements: !440)
!440 = !{!441, !442}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !439, file: !419, line: 362, baseType: !423, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !439, file: !419, line: 363, baseType: !423, size: 32, offset: 32)
!443 = !{!412}
!444 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !446)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !447, line: 51, size: 64, elements: !448)
!447 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!448 = !{!449, !468}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !446, file: !447, line: 60, baseType: !450, size: 32)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 32)
!451 = !DISubroutineType(types: !452)
!452 = !{!125, !453}
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !456)
!456 = !{!457, !458, !459, !460, !466, !467}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !455, file: !137, line: 380, baseType: !140, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !455, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !455, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !455, file: !137, line: 386, baseType: !461, size: 32, offset: 96)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !463)
!463 = !{!464, !465}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !462, file: !137, line: 359, baseType: !150, size: 8)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !462, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !455, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !455, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !446, file: !447, line: 65, baseType: !453, size: 32, offset: 32)
!469 = !DIGlobalVariableExpression(var: !470, expr: !DIExpression())
!470 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !471, file: !474, line: 71, type: !475, isLocal: true, isDefinition: true, align: 32)
!471 = distinct !DICompileUnit(language: DW_LANG_C99, file: !472, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !473, splitDebugInlining: false, nameTableKind: None)
!472 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!473 = !{!469}
!474 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !476)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !447, line: 51, size: 64, elements: !477)
!477 = !{!478, !497}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !476, file: !447, line: 60, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!480 = !DISubroutineType(types: !481)
!481 = !{!125, !482}
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 32)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !485)
!485 = !{!486, !487, !488, !489, !495, !496}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !484, file: !137, line: 380, baseType: !140, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !484, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !484, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !484, file: !137, line: 386, baseType: !490, size: 32, offset: 96)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 32)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !492)
!492 = !{!493, !494}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !491, file: !137, line: 359, baseType: !150, size: 8)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !491, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !484, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !484, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !476, file: !447, line: 65, baseType: !482, size: 32, offset: 32)
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "inv_sbox", scope: !500, file: !514, line: 37, type: !515, isLocal: true, isDefinition: true)
!500 = distinct !DICompileUnit(language: DW_LANG_C99, file: !501, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !502, globals: !513, splitDebugInlining: false, nameTableKind: None)
!501 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!502 = !{!184, !503, !504, !150}
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !505, line: 66, baseType: !506)
!505 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/aes.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 32)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !505, line: 64, size: 1408, elements: !508)
!508 = !{!509}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !507, file: !505, line: 65, baseType: !510, size: 1408)
!510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1408, elements: !511)
!511 = !{!512}
!512 = !DISubrange(count: 44)
!513 = !{!498}
!514 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 2048, elements: !516)
!516 = !{!517}
!517 = !DISubrange(count: 256)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "sbox", scope: !520, file: !529, line: 37, type: !515, isLocal: true, isDefinition: true)
!520 = distinct !DICompileUnit(language: DW_LANG_C99, file: !521, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !522, globals: !528, splitDebugInlining: false, nameTableKind: None)
!521 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!522 = !{!523, !503, !184, !150}
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !505, line: 66, baseType: !524)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 32)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !505, line: 64, size: 1408, elements: !526)
!526 = !{!527}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !525, file: !505, line: 65, baseType: !510, size: 1408)
!528 = !{!518}
!529 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !532, file: !539, line: 17, type: !681, isLocal: false, isDefinition: true)
!532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !534, globals: !535, splitDebugInlining: false, nameTableKind: None)
!533 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!534 = !{!272, !125, !208, !124}
!535 = !{!530, !536, !677}
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !538, file: !539, line: 198, type: !663, isLocal: true, isDefinition: true)
!538 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !539, file: !539, line: 175, type: !540, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !658)
!539 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!540 = !DISubroutineType(types: !541)
!541 = !{null, !542}
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !544, line: 245, size: 1024, elements: !545)
!544 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!545 = !{!546, !612, !625, !626, !627, !628, !634, !653}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !543, file: !544, line: 247, baseType: !547, size: 384)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !544, line: 57, size: 384, elements: !548)
!548 = !{!549, !577, !585, !586, !587, !598, !599, !600}
!549 = !DIDerivedType(tag: DW_TAG_member, scope: !547, file: !544, line: 60, baseType: !550, size: 64)
!550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !547, file: !544, line: 60, size: 64, elements: !551)
!551 = !{!552, !568}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !550, file: !544, line: 61, baseType: !553, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !554, line: 49, baseType: !555)
!554 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !554, line: 37, size: 64, elements: !556)
!556 = !{!557, !563}
!557 = !DIDerivedType(tag: DW_TAG_member, scope: !555, file: !554, line: 38, baseType: !558, size: 32)
!558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !555, file: !554, line: 38, size: 32, elements: !559)
!559 = !{!560, !562}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !558, file: !554, line: 39, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !558, file: !554, line: 40, baseType: !561, size: 32)
!563 = !DIDerivedType(tag: DW_TAG_member, scope: !555, file: !554, line: 42, baseType: !564, size: 32, offset: 32)
!564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !555, file: !554, line: 42, size: 32, elements: !565)
!565 = !{!566, !567}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !564, file: !554, line: 43, baseType: !561, size: 32)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !564, file: !554, line: 44, baseType: !561, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !550, file: !544, line: 62, baseType: !569, size: 64)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !570, line: 49, size: 64, elements: !571)
!570 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !569, file: !570, line: 50, baseType: !573, size: 64)
!573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 64, elements: !575)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 32)
!575 = !{!576}
!576 = !DISubrange(count: 2)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !547, file: !544, line: 68, baseType: !578, size: 32, offset: 64)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !580, line: 233, baseType: !581)
!580 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 231, size: 64, elements: !582)
!582 = !{!583}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !581, file: !580, line: 232, baseType: !584, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !554, line: 48, baseType: !555)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !547, file: !544, line: 71, baseType: !150, size: 8, offset: 96)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !547, file: !544, line: 74, baseType: !150, size: 8, offset: 104)
!587 = !DIDerivedType(tag: DW_TAG_member, scope: !547, file: !544, line: 90, baseType: !588, size: 16, offset: 112)
!588 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !547, file: !544, line: 90, size: 16, elements: !589)
!589 = !{!590, !597}
!590 = !DIDerivedType(tag: DW_TAG_member, scope: !588, file: !544, line: 91, baseType: !591, size: 16)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !588, file: !544, line: 91, size: 16, elements: !592)
!592 = !{!593, !596}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !591, file: !544, line: 96, baseType: !594, size: 8)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !595)
!595 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !591, file: !544, line: 97, baseType: !150, size: 8, offset: 8)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !588, file: !544, line: 100, baseType: !227, size: 16)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !547, file: !544, line: 107, baseType: !208, size: 32, offset: 128)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !547, file: !544, line: 127, baseType: !124, size: 32, offset: 160)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !547, file: !544, line: 131, baseType: !601, size: 192, offset: 192)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !580, line: 244, size: 192, elements: !602)
!602 = !{!603, !604, !610}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !601, file: !580, line: 245, baseType: !553, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !601, file: !580, line: 246, baseType: !605, size: 32, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !580, line: 242, baseType: !606)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 32)
!607 = !DISubroutineType(types: !608)
!608 = !{null, !609}
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !601, file: !580, line: 249, baseType: !611, size: 64, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !391)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !543, file: !544, line: 250, baseType: !613, size: 288, offset: 384)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !614, line: 25, size: 288, elements: !615)
!614 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!615 = !{!616, !617, !618, !619, !620, !621, !622, !623, !624}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !613, file: !614, line: 26, baseType: !208, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !613, file: !614, line: 27, baseType: !208, size: 32, offset: 32)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !613, file: !614, line: 28, baseType: !208, size: 32, offset: 64)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !613, file: !614, line: 29, baseType: !208, size: 32, offset: 96)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !613, file: !614, line: 30, baseType: !208, size: 32, offset: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !613, file: !614, line: 31, baseType: !208, size: 32, offset: 160)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !613, file: !614, line: 32, baseType: !208, size: 32, offset: 192)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !613, file: !614, line: 33, baseType: !208, size: 32, offset: 224)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !613, file: !614, line: 34, baseType: !208, size: 32, offset: 256)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !543, file: !544, line: 253, baseType: !124, size: 32, offset: 672)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !543, file: !544, line: 256, baseType: !579, size: 64, offset: 704)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !543, file: !544, line: 294, baseType: !125, size: 32, offset: 768)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !543, file: !544, line: 300, baseType: !629, size: 96, offset: 800)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !544, line: 149, size: 96, elements: !630)
!630 = !{!631, !632, !633}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !629, file: !544, line: 153, baseType: !22, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !629, file: !544, line: 162, baseType: !272, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !629, file: !544, line: 168, baseType: !272, size: 32, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !543, file: !544, line: 325, baseType: !635, size: 32, offset: 896)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !637, line: 5073, size: 160, elements: !638)
!637 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!638 = !{!639, !648, !649}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !636, file: !637, line: 5074, baseType: !640, size: 96)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !641, line: 56, size: 96, elements: !642)
!641 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!642 = !{!643, !646, !647}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !640, file: !641, line: 57, baseType: !644, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 32)
!645 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !641, line: 57, flags: DIFlagFwdDecl)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !640, file: !641, line: 58, baseType: !124, size: 32, offset: 32)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !640, file: !641, line: 59, baseType: !272, size: 32, offset: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !636, file: !637, line: 5075, baseType: !579, size: 64, offset: 96)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !636, file: !637, line: 5076, baseType: !650, offset: 160)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !651, line: 43, elements: !652)
!651 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!652 = !{}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !543, file: !544, line: 343, baseType: !654, size: 64, offset: 928)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !614, line: 60, size: 64, elements: !655)
!655 = !{!656, !657}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !654, file: !614, line: 63, baseType: !208, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !654, file: !614, line: 66, baseType: !208, size: 32, offset: 32)
!658 = !{!659, !660, !661, !662}
!659 = !DILocalVariable(name: "thread", arg: 1, scope: !538, file: !539, line: 175, type: !542)
!660 = !DILocalVariable(name: "region_num", scope: !538, file: !539, line: 200, type: !150)
!661 = !DILocalVariable(name: "guard_start", scope: !538, file: !539, line: 265, type: !22)
!662 = !DILocalVariable(name: "guard_size", scope: !538, file: !539, line: 266, type: !272)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !664, size: 96, elements: !675)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !665, line: 52, size: 96, elements: !666)
!665 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!666 = !{!667, !668, !669}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !664, file: !665, line: 53, baseType: !22, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !664, file: !665, line: 54, baseType: !272, size: 32, offset: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !664, file: !665, line: 55, baseType: !670, size: 32, offset: 64)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !671, line: 151, baseType: !672)
!671 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !671, line: 149, size: 32, elements: !673)
!673 = !{!674}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !672, file: !671, line: 150, baseType: !208, size: 32)
!675 = !{!676}
!676 = !DISubrange(count: 1)
!677 = !DIGlobalVariableExpression(var: !678, expr: !DIExpression())
!678 = distinct !DIGlobalVariable(name: "static_regions", scope: !532, file: !539, line: 62, type: !679, isLocal: true, isDefinition: true)
!679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !680, size: 96, elements: !675)
!680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !664)
!681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !682)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !683)
!683 = !{!684, !685}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !682, file: !373, line: 17, baseType: !140, size: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !682, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!686 = !DIGlobalVariableExpression(var: !687, expr: !DIExpression())
!687 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !688, file: !721, line: 39, type: !150, isLocal: true, isDefinition: true)
!688 = distinct !DICompileUnit(language: DW_LANG_C99, file: !689, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !690, globals: !720, splitDebugInlining: false, nameTableKind: None)
!689 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!690 = !{!691, !124, !125, !708, !150}
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 32)
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !693, line: 1168, baseType: !694)
!693 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 1155, size: 352, elements: !695)
!695 = !{!696, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !694, file: !693, line: 1157, baseType: !697, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !694, file: !693, line: 1158, baseType: !423, size: 32, offset: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !694, file: !693, line: 1159, baseType: !423, size: 32, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !694, file: !693, line: 1160, baseType: !423, size: 32, offset: 96)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !694, file: !693, line: 1161, baseType: !423, size: 32, offset: 128)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !694, file: !693, line: 1162, baseType: !423, size: 32, offset: 160)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !694, file: !693, line: 1163, baseType: !423, size: 32, offset: 192)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !694, file: !693, line: 1164, baseType: !423, size: 32, offset: 224)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !694, file: !693, line: 1165, baseType: !423, size: 32, offset: 256)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !694, file: !693, line: 1166, baseType: !423, size: 32, offset: 288)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !694, file: !693, line: 1167, baseType: !423, size: 32, offset: 320)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !711, line: 27, size: 96, elements: !712)
!711 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!712 = !{!713, !714, !715}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !710, file: !711, line: 29, baseType: !208, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !710, file: !711, line: 31, baseType: !140, size: 32, offset: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !710, file: !711, line: 37, baseType: !716, size: 32, offset: 64)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !671, line: 146, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !671, line: 141, size: 32, elements: !718)
!718 = !{!719}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !717, file: !671, line: 143, baseType: !208, size: 32)
!720 = !{!686}
!721 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !724, file: !731, line: 21, type: !409, isLocal: true, isDefinition: true)
!724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !725, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !726, globals: !730, splitDebugInlining: false, nameTableKind: None)
!725 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!726 = !{!727, !125, !124}
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !729, line: 22, baseType: !125)
!729 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!730 = !{!722}
!731 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !734, file: !739, line: 13, type: !756, isLocal: true, isDefinition: true)
!734 = distinct !DICompileUnit(language: DW_LANG_C99, file: !735, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !736, splitDebugInlining: false, nameTableKind: None)
!735 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!736 = !{!737, !732}
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "mpu_config", scope: !734, file: !739, line: 37, type: !740, isLocal: false, isDefinition: true)
!739 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !711, line: 41, size: 64, elements: !742)
!742 = !{!743, !744}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !741, file: !711, line: 43, baseType: !208, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !741, file: !711, line: 45, baseType: !745, size: 32, offset: 32)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !747)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !711, line: 27, size: 96, elements: !748)
!748 = !{!749, !750, !751}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !747, file: !711, line: 29, baseType: !208, size: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !747, file: !711, line: 31, baseType: !140, size: 32, offset: 32)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !747, file: !711, line: 37, baseType: !752, size: 32, offset: 64)
!752 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !671, line: 146, baseType: !753)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !671, line: 141, size: 32, elements: !754)
!754 = !{!755}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !753, file: !671, line: 143, baseType: !208, size: 32)
!756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !746, size: 192, elements: !575)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !759, file: !856, line: 36, type: !857, isLocal: true, isDefinition: true, align: 32)
!759 = distinct !DICompileUnit(language: DW_LANG_C99, file: !760, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !761, retainedTypes: !773, globals: !855, splitDebugInlining: false, nameTableKind: None)
!760 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!761 = !{!762, !768}
!762 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !763, line: 506, baseType: !32, size: 32, elements: !764)
!763 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!764 = !{!765, !766, !767}
!765 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!766 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!767 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!768 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !763, line: 512, baseType: !32, size: 32, elements: !769)
!769 = !{!770, !771, !772}
!770 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!771 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!772 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!773 = !{!774, !844, !849, !809, !768, !762, !854, !124}
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 32)
!775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !763, line: 523, size: 288, elements: !777)
!777 = !{!778, !799, !805, !810, !814, !815, !816, !820, !840}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !776, file: !763, line: 524, baseType: !779, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 32)
!780 = !DISubroutineType(types: !781)
!781 = !{!125, !782, !797, !798}
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 32)
!783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !784)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !785)
!785 = !{!786, !787, !788, !789, !795, !796}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !784, file: !137, line: 380, baseType: !140, size: 32)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !784, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !784, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !784, file: !137, line: 386, baseType: !790, size: 32, offset: 96)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !792)
!792 = !{!793, !794}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !791, file: !137, line: 359, baseType: !150, size: 8)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !791, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !784, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !784, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !763, line: 237, baseType: !150)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !763, line: 257, baseType: !208)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !776, file: !763, line: 530, baseType: !800, size: 32, offset: 32)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 32)
!801 = !DISubroutineType(types: !802)
!802 = !{!125, !782, !803}
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !763, line: 229, baseType: !208)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !776, file: !763, line: 532, baseType: !806, size: 32, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 32)
!807 = !DISubroutineType(types: !808)
!808 = !{!125, !782, !809, !804}
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !763, line: 216, baseType: !208)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !776, file: !763, line: 535, baseType: !811, size: 32, offset: 96)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 32)
!812 = !DISubroutineType(types: !813)
!813 = !{!125, !782, !809}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !776, file: !763, line: 537, baseType: !811, size: 32, offset: 128)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !776, file: !763, line: 539, baseType: !811, size: 32, offset: 160)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !776, file: !763, line: 541, baseType: !817, size: 32, offset: 192)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!818 = !DISubroutineType(types: !819)
!819 = !{!125, !782, !797, !762, !768}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !776, file: !763, line: 544, baseType: !821, size: 32, offset: 224)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 32)
!822 = !DISubroutineType(types: !823)
!823 = !{!125, !782, !824, !153}
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 32)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !763, line: 478, size: 96, elements: !826)
!826 = !{!827, !834, !839}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !825, file: !763, line: 482, baseType: !828, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !829, line: 33, baseType: !830)
!829 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !829, line: 29, size: 32, elements: !831)
!831 = !{!832}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !830, file: !829, line: 30, baseType: !833, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !825, file: !763, line: 485, baseType: !835, size: 32, offset: 32)
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !763, line: 464, baseType: !836)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 32)
!837 = !DISubroutineType(types: !838)
!838 = !{null, !782, !824, !809}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !825, file: !763, line: 493, baseType: !809, size: 32, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !776, file: !763, line: 547, baseType: !841, size: 32, offset: 256)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DISubroutineType(types: !843)
!843 = !{!208, !782}
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !846)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !763, line: 428, size: 32, elements: !847)
!847 = !{!848}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !846, file: !763, line: 434, baseType: !809, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !851)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !763, line: 441, size: 32, elements: !852)
!852 = !{!853}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !851, file: !763, line: 447, baseType: !809, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 32)
!855 = !{!757}
!856 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !447, line: 51, size: 64, elements: !859)
!859 = !{!860, !864}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !858, file: !447, line: 60, baseType: !861, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!862 = !DISubroutineType(types: !863)
!863 = !{!125, !782}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !858, file: !447, line: 65, baseType: !782, size: 32, offset: 32)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !867, file: !939, line: 48, type: !1013, isLocal: true, isDefinition: true)
!867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !869, retainedTypes: !925, globals: !936, splitDebugInlining: false, nameTableKind: None)
!868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!869 = !{!46, !870}
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !419, line: 69, baseType: !125, size: 32, elements: !871)
!871 = !{!872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924}
!872 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!873 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!874 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!875 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!876 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!877 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!878 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!879 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!880 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!881 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!882 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!883 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!884 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!885 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!886 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!887 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!888 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!889 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!890 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!891 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!892 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!893 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!894 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!895 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!896 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!897 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!898 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!899 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!900 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!901 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!902 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!903 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!904 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!905 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!906 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!907 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!908 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!909 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!910 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!911 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!912 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!913 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!914 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!915 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!916 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!917 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!918 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!919 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!920 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!921 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!922 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!923 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!924 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!925 = !{!272, !125, !124, !926}
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !419, line: 270, baseType: !928)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 262, size: 192, elements: !929)
!929 = !{!930, !931, !932, !933, !934, !935}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !928, file: !419, line: 264, baseType: !423, size: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !928, file: !419, line: 265, baseType: !423, size: 32, offset: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !928, file: !419, line: 266, baseType: !423, size: 32, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !928, file: !419, line: 267, baseType: !423, size: 32, offset: 96)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !928, file: !419, line: 268, baseType: !423, size: 32, offset: 128)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !928, file: !419, line: 269, baseType: !423, size: 32, offset: 160)
!936 = !{!937, !943, !959, !970, !985, !865, !987, !1001, !1003, !1005, !1007, !1009, !1011}
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !867, file: !939, line: 424, type: !940, isLocal: false, isDefinition: true, align: 16)
!939 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !941)
!941 = !{!942}
!942 = !DISubrange(count: 4)
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !867, file: !939, line: 424, type: !945, isLocal: false, isDefinition: true, align: 32)
!945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !946)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !947)
!947 = !{!948, !949, !950, !951, !957, !958}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !946, file: !137, line: 380, baseType: !140, size: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !946, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !946, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !946, file: !137, line: 386, baseType: !952, size: 32, offset: 96)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !954)
!954 = !{!955, !956}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !953, file: !137, line: 359, baseType: !150, size: 8)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !953, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !946, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !946, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !867, file: !939, line: 424, type: !961, isLocal: true, isDefinition: true, align: 32)
!961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !962)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !447, line: 51, size: 64, elements: !963)
!963 = !{!964, !969}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !962, file: !447, line: 60, baseType: !965, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DISubroutineType(types: !967)
!967 = !{!125, !968}
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !962, file: !447, line: 65, baseType: !968, size: 32, offset: 32)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(name: "exti_data", scope: !867, file: !939, line: 423, type: !972, isLocal: true, isDefinition: true)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !939, line: 107, size: 1024, elements: !973)
!973 = !{!974}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !972, file: !939, line: 109, baseType: !975, size: 1024)
!975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !976, size: 1024, elements: !312)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !939, line: 101, size: 64, elements: !977)
!977 = !{!978, !984}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !976, file: !939, line: 102, baseType: !979, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !980, line: 63, baseType: !981)
!980 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DISubroutineType(types: !983)
!983 = !{null, !125, !124}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !976, file: !939, line: 103, baseType: !124, size: 32, offset: 32)
!985 = !DIGlobalVariableExpression(var: !986, expr: !DIExpression())
!986 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !867, file: !939, line: 424, type: !953, isLocal: true, isDefinition: true, align: 8)
!987 = !DIGlobalVariableExpression(var: !988, expr: !DIExpression())
!988 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !989, file: !939, line: 493, type: !994, isLocal: true, isDefinition: true, align: 32)
!989 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !939, file: !939, line: 460, type: !990, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !992)
!990 = !DISubroutineType(types: !991)
!991 = !{null, !968}
!992 = !{!993}
!993 = !DILocalVariable(name: "dev", arg: 1, scope: !989, file: !939, line: 460, type: !968)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !995)
!995 = !{!996, !998, !999, !1000}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !994, file: !10, line: 55, baseType: !997, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !125)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !994, file: !10, line: 57, baseType: !997, size: 32, offset: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !994, file: !10, line: 59, baseType: !124, size: 32, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !994, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !989, file: !939, line: 497, type: !994, isLocal: true, isDefinition: true, align: 32)
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !989, file: !939, line: 507, type: !994, isLocal: true, isDefinition: true, align: 32)
!1005 = !DIGlobalVariableExpression(var: !1006, expr: !DIExpression())
!1006 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !989, file: !939, line: 512, type: !994, isLocal: true, isDefinition: true, align: 32)
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !989, file: !939, line: 516, type: !994, isLocal: true, isDefinition: true, align: 32)
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !989, file: !939, line: 523, type: !994, isLocal: true, isDefinition: true, align: 32)
!1011 = !DIGlobalVariableExpression(var: !1012, expr: !DIExpression())
!1012 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !989, file: !939, line: 527, type: !994, isLocal: true, isDefinition: true, align: 32)
!1013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1014, size: 512, elements: !312)
!1014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !419, line: 127, baseType: !870)
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !1018, file: !1023, line: 21, type: !1045, isLocal: false, isDefinition: true, align: 16)
!1018 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1019, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1020, splitDebugInlining: false, nameTableKind: None)
!1019 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!1020 = !{!1021, !1016, !1027, !1029, !1031, !1033, !1035, !1037, !1039, !1041, !1043}
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1018, file: !1023, line: 16, type: !1024, isLocal: false, isDefinition: true, align: 16)
!1023 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!1024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 176, elements: !1025)
!1025 = !{!1026}
!1026 = !DISubrange(count: 11)
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1018, file: !1023, line: 28, type: !940, isLocal: false, isDefinition: true, align: 16)
!1029 = !DIGlobalVariableExpression(var: !1030, expr: !DIExpression())
!1030 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1018, file: !1023, line: 35, type: !940, isLocal: false, isDefinition: true, align: 16)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1018, file: !1023, line: 42, type: !940, isLocal: false, isDefinition: true, align: 16)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1018, file: !1023, line: 49, type: !940, isLocal: false, isDefinition: true, align: 16)
!1035 = !DIGlobalVariableExpression(var: !1036, expr: !DIExpression())
!1036 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1018, file: !1023, line: 56, type: !940, isLocal: false, isDefinition: true, align: 16)
!1037 = !DIGlobalVariableExpression(var: !1038, expr: !DIExpression())
!1038 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1018, file: !1023, line: 63, type: !940, isLocal: false, isDefinition: true, align: 16)
!1039 = !DIGlobalVariableExpression(var: !1040, expr: !DIExpression())
!1040 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1018, file: !1023, line: 70, type: !940, isLocal: false, isDefinition: true, align: 16)
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1018, file: !1023, line: 77, type: !940, isLocal: false, isDefinition: true, align: 16)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !1018, file: !1023, line: 82, type: !1045, isLocal: false, isDefinition: true, align: 16)
!1045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 48, elements: !1046)
!1046 = !{!1047}
!1047 = !DISubrange(count: 3)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1050, file: !1094, line: 398, type: !1127, isLocal: true, isDefinition: true)
!1050 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1051, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1052, retainedTypes: !1065, globals: !1091, splitDebugInlining: false, nameTableKind: None)
!1051 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!1052 = !{!1053, !46, !1058}
!1053 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1054, line: 190, baseType: !32, size: 32, elements: !1055)
!1054 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1055 = !{!1056, !1057}
!1056 = !DIEnumerator(name: "SUCCESS", value: 0)
!1057 = !DIEnumerator(name: "ERROR", value: 1)
!1058 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1059, line: 44, baseType: !32, size: 32, elements: !1060)
!1059 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1060 = !{!1061, !1062, !1063, !1064}
!1061 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1062 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1063 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1064 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1065 = !{!124, !125, !208, !1066, !1084, !1090}
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 386, baseType: !1068)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 370, size: 448, elements: !1069)
!1069 = !{!1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1068, file: !419, line: 372, baseType: !423, size: 32)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1068, file: !419, line: 373, baseType: !423, size: 32, offset: 32)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1068, file: !419, line: 374, baseType: !423, size: 32, offset: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1068, file: !419, line: 375, baseType: !423, size: 32, offset: 96)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1068, file: !419, line: 376, baseType: !423, size: 32, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1068, file: !419, line: 377, baseType: !423, size: 32, offset: 160)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1068, file: !419, line: 378, baseType: !423, size: 32, offset: 192)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1068, file: !419, line: 379, baseType: !423, size: 32, offset: 224)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1068, file: !419, line: 380, baseType: !423, size: 32, offset: 256)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1068, file: !419, line: 381, baseType: !423, size: 32, offset: 288)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1068, file: !419, line: 382, baseType: !423, size: 32, offset: 320)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1068, file: !419, line: 383, baseType: !423, size: 32, offset: 352)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1068, file: !419, line: 384, baseType: !423, size: 32, offset: 384)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1068, file: !419, line: 385, baseType: !423, size: 32, offset: 416)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1086, line: 343, size: 64, elements: !1087)
!1086 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1087 = !{!1088, !1089}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1085, file: !1086, line: 344, baseType: !208, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1085, file: !1086, line: 345, baseType: !208, size: 32, offset: 32)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1091 = !{!1092, !1098, !1114, !1125, !1048}
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1050, file: !1094, line: 752, type: !1095, isLocal: false, isDefinition: true, align: 16)
!1094 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 512, elements: !1096)
!1096 = !{!1097}
!1097 = !DISubrange(count: 32)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !1050, file: !1094, line: 752, type: !1100, isLocal: false, isDefinition: true, align: 32)
!1100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1102)
!1102 = !{!1103, !1104, !1105, !1106, !1112, !1113}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1101, file: !137, line: 380, baseType: !140, size: 32)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1101, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1101, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1101, file: !137, line: 386, baseType: !1107, size: 32, offset: 96)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1109)
!1109 = !{!1110, !1111}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1108, file: !137, line: 359, baseType: !150, size: 8)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1108, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1101, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1101, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !1050, file: !1094, line: 752, type: !1116, isLocal: true, isDefinition: true, align: 32)
!1116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !447, line: 51, size: 64, elements: !1118)
!1118 = !{!1119, !1124}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1117, file: !447, line: 60, baseType: !1120, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!125, !1123}
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1117, file: !447, line: 65, baseType: !1123, size: 32, offset: 32)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !1050, file: !1094, line: 752, type: !1108, isLocal: true, isDefinition: true, align: 8)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1059, line: 100, size: 224, elements: !1128)
!1128 = !{!1129, !1135, !1136, !1145, !1150, !1155, !1161}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1127, file: !1059, line: 101, baseType: !1130, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1059, line: 76, baseType: !1131)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 32)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!125, !1123, !1134}
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1059, line: 56, baseType: !124)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1127, file: !1059, line: 102, baseType: !1130, size: 32, offset: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1127, file: !1059, line: 103, baseType: !1137, size: 32, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1059, line: 83, baseType: !1138)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!125, !1123, !1134, !1141, !124}
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1059, line: 72, baseType: !1142)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{null, !1123, !1134, !124}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1127, file: !1059, line: 104, baseType: !1146, size: 32, offset: 96)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1059, line: 79, baseType: !1147)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!125, !1123, !1134, !1090}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1127, file: !1059, line: 105, baseType: !1151, size: 32, offset: 128)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1059, line: 88, baseType: !1152)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!1153 = !DISubroutineType(types: !1154)
!1154 = !{!1058, !1123, !1134}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1127, file: !1059, line: 106, baseType: !1156, size: 32, offset: 160)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1059, line: 92, baseType: !1157)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!125, !1123, !1134, !1160}
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1059, line: 64, baseType: !124)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1127, file: !1059, line: 107, baseType: !1162, size: 32, offset: 192)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1059, line: 96, baseType: !1163)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!125, !1123, !1134, !124}
!1166 = !DIGlobalVariableExpression(var: !1167, expr: !DIExpression())
!1167 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1168, file: !1225, line: 603, type: !1227, isLocal: true, isDefinition: true, align: 32)
!1168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !1170, globals: !1222, splitDebugInlining: false, nameTableKind: None)
!1169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!1170 = !{!124, !125, !1171}
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1174, line: 336, size: 160, elements: !1175)
!1174 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1175 = !{!1176, !1196, !1200, !1204, !1217}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1173, file: !1174, line: 365, baseType: !1177, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!125, !1180, !1195}
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187, !1193, !1194}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1182, file: !137, line: 380, baseType: !140, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1182, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1182, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1182, file: !137, line: 386, baseType: !1188, size: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1190)
!1190 = !{!1191, !1192}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1189, file: !137, line: 359, baseType: !150, size: 8)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1189, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1182, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1182, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1173, file: !1174, line: 366, baseType: !1197, size: 32, offset: 32)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 32)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{null, !1180, !151}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1173, file: !1174, line: 374, baseType: !1201, size: 32, offset: 64)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!125, !1180}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1173, file: !1174, line: 377, baseType: !1205, size: 32, offset: 96)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!125, !1180, !1208}
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1210)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1174, line: 122, size: 64, elements: !1211)
!1211 = !{!1212, !1213, !1214, !1215, !1216}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1210, file: !1174, line: 123, baseType: !208, size: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1210, file: !1174, line: 124, baseType: !150, size: 8, offset: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1210, file: !1174, line: 125, baseType: !150, size: 8, offset: 40)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1210, file: !1174, line: 126, baseType: !150, size: 8, offset: 48)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1210, file: !1174, line: 127, baseType: !150, size: 8, offset: 56)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1173, file: !1174, line: 379, baseType: !1218, size: 32, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!125, !1180, !1221}
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1222 = !{!1166, !1223}
!1223 = !DIGlobalVariableExpression(var: !1224, expr: !DIExpression())
!1224 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1168, file: !1225, line: 38, type: !1226, isLocal: true, isDefinition: true)
!1225 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1180)
!1227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !447, line: 51, size: 64, elements: !1229)
!1229 = !{!1230, !1231}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1228, file: !447, line: 60, baseType: !1201, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1228, file: !447, line: 65, baseType: !1180, size: 32, offset: 32)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "log_const_tinycrypt", scope: !1234, file: !1240, line: 22, type: !1409, isLocal: false, isDefinition: true)
!1234 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1235, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1236, globals: !1237, splitDebugInlining: false, nameTableKind: None)
!1235 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!1236 = !{!30, !39, !42, !116}
!1237 = !{!1232, !1238, !1241, !1257, !1268, !1270, !1398}
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !1234, file: !1240, line: 324, type: !1045, isLocal: false, isDefinition: true, align: 16)
!1240 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__device_crypto_tinycrypt", scope: !1234, file: !1240, line: 324, type: !1243, isLocal: true, isDefinition: true, align: 32)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1245)
!1245 = !{!1246, !1247, !1248, !1249, !1255, !1256}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1244, file: !137, line: 380, baseType: !140, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1244, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1244, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1244, file: !137, line: 386, baseType: !1250, size: 32, offset: 96)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1252)
!1252 = !{!1253, !1254}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1251, file: !137, line: 359, baseType: !150, size: 8)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1251, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1244, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1244, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1257 = !DIGlobalVariableExpression(var: !1258, expr: !DIExpression())
!1258 = distinct !DIGlobalVariable(name: "__init___device_crypto_tinycrypt", scope: !1234, file: !1240, line: 324, type: !1259, isLocal: true, isDefinition: true, align: 32)
!1259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1260)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !447, line: 51, size: 64, elements: !1261)
!1261 = !{!1262, !1267}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1260, file: !447, line: 60, baseType: !1263, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!125, !1266}
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1260, file: !447, line: 65, baseType: !1266, size: 32, offset: 32)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "__devstate_crypto_tinycrypt", scope: !1234, file: !1240, line: 324, type: !1251, isLocal: true, isDefinition: true, align: 8)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "crypto_enc_funcs", scope: !1234, file: !1240, line: 317, type: !1272, isLocal: true, isDefinition: true)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !1273)
!1273 = !{!1274, !1275, !1351, !1355, !1363, !1386, !1390}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !1272, file: !128, line: 66, baseType: !1263, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !1272, file: !128, line: 69, baseType: !1276, size: 32, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!125, !1266, !1279, !39, !30, !42}
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !1281)
!1281 = !{!1282, !1324, !1329, !1330, !1331, !1332, !1349, !1350}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1280, file: !31, line: 116, baseType: !1283, size: 64)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !1284)
!1284 = !{!1285, !1286}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !1283, file: !31, line: 76, baseType: !30, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, scope: !1283, file: !31, line: 78, baseType: !1287, size: 32, offset: 32)
!1287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1283, file: !31, line: 78, size: 32, elements: !1288)
!1288 = !{!1289, !1303, !1308, !1310, !1322}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !1287, file: !31, line: 79, baseType: !1290, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!125, !1279, !1294}
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 32)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !1296)
!1296 = !{!1297, !1298, !1299, !1300, !1301, !1302}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1295, file: !31, line: 183, baseType: !184, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1295, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1295, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !1295, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !1295, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1295, file: !31, line: 208, baseType: !1279, size: 32, offset: 160)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !1287, file: !31, line: 80, baseType: !1304, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !1305)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!125, !1279, !1294, !184}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !1287, file: !31, line: 81, baseType: !1309, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !1305)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !1287, file: !31, line: 82, baseType: !1311, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !1312)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 32)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!125, !1279, !1315, !184}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !1317)
!1317 = !{!1318, !1319, !1320, !1321}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !1316, file: !31, line: 219, baseType: !1294, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !1316, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !1316, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1316, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !1287, file: !31, line: 83, baseType: !1323, size: 32)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !1312)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1280, file: !31, line: 126, baseType: !1325, size: 32, offset: 64)
!1325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1280, file: !31, line: 119, size: 32, elements: !1326)
!1326 = !{!1327, !1328}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !1325, file: !31, line: 121, baseType: !184, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1325, file: !31, line: 125, baseType: !124, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1280, file: !31, line: 131, baseType: !1266, size: 32, offset: 96)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1280, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !1280, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !1280, file: !31, line: 156, baseType: !1333, size: 32, offset: 192)
!1333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1280, file: !31, line: 152, size: 32, elements: !1334)
!1334 = !{!1335, !1340, !1344}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !1333, file: !31, line: 153, baseType: !1336, size: 32)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !1337)
!1337 = !{!1338, !1339}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1336, file: !31, line: 88, baseType: !227, size: 16)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1336, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !1333, file: !31, line: 154, baseType: !1341, size: 32)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !1342)
!1342 = !{!1343}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !1341, file: !31, line: 96, baseType: !208, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !1333, file: !31, line: 155, baseType: !1345, size: 32)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !1346)
!1346 = !{!1347, !1348}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1345, file: !31, line: 100, baseType: !227, size: 16)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1345, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1280, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1280, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !1272, file: !128, line: 74, baseType: !1352, size: 32, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 32)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!125, !1266, !1279}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !1272, file: !128, line: 77, baseType: !1356, size: 32, offset: 96)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 32)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!125, !1266, !1359}
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !1360)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 32)
!1361 = !DISubroutineType(types: !1362)
!1362 = !{null, !1294, !125}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !1272, file: !128, line: 81, baseType: !1364, size: 32, offset: 128)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 32)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{!125, !1266, !1367, !116}
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 32)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !1369)
!1369 = !{!1370, !1371, !1372, !1384, !1385}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1368, file: !117, line: 51, baseType: !1266, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1368, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !1368, file: !117, line: 65, baseType: !1373, size: 32, offset: 64)
!1373 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !1374)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!1375 = !DISubroutineType(types: !1376)
!1376 = !{!125, !1367, !1377, !153}
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !1379)
!1379 = !{!1380, !1381, !1382, !1383}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1378, file: !117, line: 91, baseType: !184, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1378, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1378, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1378, file: !117, line: 107, baseType: !1367, size: 32, offset: 96)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !1368, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1368, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !1272, file: !128, line: 84, baseType: !1387, size: 32, offset: 160)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!125, !1266, !1367}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !1272, file: !128, line: 86, baseType: !1391, size: 32, offset: 192)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 32)
!1392 = !DISubroutineType(types: !1393)
!1393 = !{!125, !1266, !1394}
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{null, !1377, !125}
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "tc_driver_state", scope: !1234, file: !1240, line: 26, type: !1400, isLocal: true, isDefinition: true)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1401, size: 2880, elements: !575)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_shim_drv_state", file: !1402, line: 22, size: 1440, elements: !1403)
!1402 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1403 = !{!1404, !1405}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "in_use", scope: !1401, file: !1402, line: 23, baseType: !125, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "session_key", scope: !1401, file: !1402, line: 24, baseType: !1406, size: 1408, offset: 32)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !505, line: 64, size: 1408, elements: !1407)
!1407 = !{!1408}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1406, file: !505, line: 65, baseType: !510, size: 1408)
!1409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1410)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1411)
!1411 = !{!1412, !1413}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1410, file: !373, line: 17, baseType: !140, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1410, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1416, file: !1566, line: 762, type: !1662, isLocal: true, isDefinition: true)
!1416 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1417, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1418, retainedTypes: !1425, globals: !1563, splitDebugInlining: false, nameTableKind: None)
!1417 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!1418 = !{!46, !762, !768, !1419, !1058}
!1419 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !980, line: 43, baseType: !32, size: 32, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424}
!1421 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1422 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1423 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1424 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1425 = !{!124, !125, !1426, !1490, !1495, !809, !768, !762, !1500, !1501, !208, !1515, !1471, !393, !1523, !1524}
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1428)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !763, line: 523, size: 288, elements: !1429)
!1429 = !{!1430, !1449, !1453, !1457, !1461, !1462, !1463, !1467, !1486}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1428, file: !763, line: 524, baseType: !1431, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 32)
!1432 = !DISubroutineType(types: !1433)
!1433 = !{!125, !1434, !797, !798}
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1436)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1437)
!1437 = !{!1438, !1439, !1440, !1441, !1447, !1448}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1436, file: !137, line: 380, baseType: !140, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1436, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1436, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1436, file: !137, line: 386, baseType: !1442, size: 32, offset: 96)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 32)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1444)
!1444 = !{!1445, !1446}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1443, file: !137, line: 359, baseType: !150, size: 8)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1443, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1436, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1436, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1428, file: !763, line: 530, baseType: !1450, size: 32, offset: 32)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 32)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!125, !1434, !803}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1428, file: !763, line: 532, baseType: !1454, size: 32, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 32)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!125, !1434, !809, !804}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1428, file: !763, line: 535, baseType: !1458, size: 32, offset: 96)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!125, !1434, !809}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1428, file: !763, line: 537, baseType: !1458, size: 32, offset: 128)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1428, file: !763, line: 539, baseType: !1458, size: 32, offset: 160)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1428, file: !763, line: 541, baseType: !1464, size: 32, offset: 192)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 32)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!125, !1434, !797, !762, !768}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1428, file: !763, line: 544, baseType: !1468, size: 32, offset: 224)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!125, !1434, !1471, !153}
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !763, line: 478, size: 96, elements: !1473)
!1473 = !{!1474, !1480, !1485}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1472, file: !763, line: 482, baseType: !1475, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !829, line: 33, baseType: !1476)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !829, line: 29, size: 32, elements: !1477)
!1477 = !{!1478}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1476, file: !829, line: 30, baseType: !1479, size: 32)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1472, file: !763, line: 485, baseType: !1481, size: 32, offset: 32)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !763, line: 464, baseType: !1482)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{null, !1434, !1471, !809}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1472, file: !763, line: 493, baseType: !809, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1428, file: !763, line: 547, baseType: !1487, size: 32, offset: 256)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!208, !1434}
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1492)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !763, line: 428, size: 32, elements: !1493)
!1493 = !{!1494}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1492, file: !763, line: 434, baseType: !809, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !763, line: 441, size: 32, elements: !1498)
!1498 = !{!1499}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1497, file: !763, line: 447, baseType: !809, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 314, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 303, size: 320, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1503, file: !419, line: 305, baseType: !423, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1503, file: !419, line: 306, baseType: !423, size: 32, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1503, file: !419, line: 307, baseType: !423, size: 32, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1503, file: !419, line: 308, baseType: !423, size: 32, offset: 96)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1503, file: !419, line: 309, baseType: !423, size: 32, offset: 128)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1503, file: !419, line: 310, baseType: !423, size: 32, offset: 160)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1503, file: !419, line: 311, baseType: !423, size: 32, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1503, file: !419, line: 312, baseType: !423, size: 32, offset: 224)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1503, file: !419, line: 313, baseType: !1514, size: 64, offset: 256)
!1514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 64, elements: !575)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !419, line: 325, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 320, size: 192, elements: !1518)
!1518 = !{!1519, !1520, !1521}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1517, file: !419, line: 322, baseType: !423, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1517, file: !419, line: 323, baseType: !423, size: 32, offset: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1517, file: !419, line: 324, baseType: !1522, size: 128, offset: 64)
!1522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 128, elements: !941)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1526)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1059, line: 100, size: 224, elements: !1527)
!1527 = !{!1528, !1533, !1534, !1543, !1548, !1553, !1558}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1526, file: !1059, line: 101, baseType: !1529, size: 32)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1059, line: 76, baseType: !1530)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!125, !1434, !1134}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1526, file: !1059, line: 102, baseType: !1529, size: 32, offset: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1526, file: !1059, line: 103, baseType: !1535, size: 32, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1059, line: 83, baseType: !1536)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!125, !1434, !1134, !1539, !124}
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1059, line: 72, baseType: !1540)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{null, !1434, !1134, !124}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1526, file: !1059, line: 104, baseType: !1544, size: 32, offset: 96)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1059, line: 79, baseType: !1545)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!125, !1434, !1134, !1090}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1526, file: !1059, line: 105, baseType: !1549, size: 32, offset: 128)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1059, line: 88, baseType: !1550)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!1058, !1434, !1134}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1526, file: !1059, line: 106, baseType: !1554, size: 32, offset: 160)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1059, line: 92, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{!125, !1434, !1134, !1160}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1526, file: !1059, line: 107, baseType: !1559, size: 32, offset: 192)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1059, line: 96, baseType: !1560)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!125, !1434, !1134, !124}
!1563 = !{!1564, !1568, !1570, !1580, !1585, !1587, !1589, !1594, !1596, !1598, !1603, !1605, !1607, !1609, !1611, !1613, !1618, !1620, !1622, !1636, !1638, !1640, !1642, !1644, !1646, !1648, !1650, !1652, !1654, !1656, !1414, !1658, !1660, !1673, !1675, !1677, !1679}
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1416, file: !1566, line: 762, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1566 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 128, elements: !337)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1416, file: !1566, line: 762, type: !1435, isLocal: false, isDefinition: true, align: 32)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1416, file: !1566, line: 762, type: !1572, isLocal: true, isDefinition: true, align: 32)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !447, line: 51, size: 64, elements: !1574)
!1574 = !{!1575, !1579}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1573, file: !447, line: 60, baseType: !1576, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!125, !1434}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1573, file: !447, line: 65, baseType: !1434, size: 32, offset: 32)
!1580 = !DIGlobalVariableExpression(var: !1581, expr: !DIExpression())
!1581 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1416, file: !1566, line: 766, type: !1582, isLocal: false, isDefinition: true, align: 16)
!1582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 144, elements: !1583)
!1583 = !{!1584}
!1584 = !DISubrange(count: 9)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1416, file: !1566, line: 766, type: !1435, isLocal: false, isDefinition: true, align: 32)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1416, file: !1566, line: 766, type: !1572, isLocal: true, isDefinition: true, align: 32)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1416, file: !1566, line: 770, type: !1591, isLocal: false, isDefinition: true, align: 16)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 96, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 6)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1416, file: !1566, line: 770, type: !1435, isLocal: false, isDefinition: true, align: 32)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1416, file: !1566, line: 770, type: !1572, isLocal: true, isDefinition: true, align: 32)
!1598 = !DIGlobalVariableExpression(var: !1599, expr: !DIExpression())
!1599 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1416, file: !1566, line: 774, type: !1600, isLocal: false, isDefinition: true, align: 16)
!1600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 80, elements: !1601)
!1601 = !{!1602}
!1602 = !DISubrange(count: 5)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1416, file: !1566, line: 774, type: !1435, isLocal: false, isDefinition: true, align: 32)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1416, file: !1566, line: 774, type: !1572, isLocal: true, isDefinition: true, align: 32)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1416, file: !1566, line: 778, type: !1600, isLocal: false, isDefinition: true, align: 16)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1416, file: !1566, line: 778, type: !1435, isLocal: false, isDefinition: true, align: 32)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1416, file: !1566, line: 778, type: !1572, isLocal: true, isDefinition: true, align: 32)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1416, file: !1566, line: 790, type: !1615, isLocal: false, isDefinition: true, align: 16)
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 112, elements: !1616)
!1616 = !{!1617}
!1617 = !DISubrange(count: 7)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1416, file: !1566, line: 790, type: !1435, isLocal: false, isDefinition: true, align: 32)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1416, file: !1566, line: 790, type: !1572, isLocal: true, isDefinition: true, align: 32)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1416, file: !1566, line: 762, type: !1624, isLocal: true, isDefinition: true)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1625, line: 237, size: 128, elements: !1626)
!1625 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1626 = !{!1627, !1628, !1629}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1624, file: !1625, line: 239, baseType: !1497, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1624, file: !1625, line: 241, baseType: !1434, size: 32, offset: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1624, file: !1625, line: 243, baseType: !1630, size: 64, offset: 64)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !829, line: 40, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !829, line: 35, size: 64, elements: !1632)
!1632 = !{!1633, !1635}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1631, file: !829, line: 36, baseType: !1634, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 32)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1631, file: !829, line: 37, baseType: !1634, size: 32, offset: 32)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1416, file: !1566, line: 762, type: !1443, isLocal: true, isDefinition: true, align: 8)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1416, file: !1566, line: 766, type: !1624, isLocal: true, isDefinition: true)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1416, file: !1566, line: 766, type: !1443, isLocal: true, isDefinition: true, align: 8)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1416, file: !1566, line: 770, type: !1624, isLocal: true, isDefinition: true)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1416, file: !1566, line: 770, type: !1443, isLocal: true, isDefinition: true, align: 8)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1416, file: !1566, line: 774, type: !1624, isLocal: true, isDefinition: true)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1416, file: !1566, line: 774, type: !1443, isLocal: true, isDefinition: true, align: 8)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1416, file: !1566, line: 778, type: !1624, isLocal: true, isDefinition: true)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1416, file: !1566, line: 778, type: !1443, isLocal: true, isDefinition: true, align: 8)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1416, file: !1566, line: 790, type: !1624, isLocal: true, isDefinition: true)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1416, file: !1566, line: 790, type: !1443, isLocal: true, isDefinition: true, align: 8)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1416, file: !1566, line: 656, type: !1427, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1416, file: !1566, line: 766, type: !1662, isLocal: true, isDefinition: true)
!1662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1663)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1625, line: 224, size: 160, elements: !1664)
!1664 = !{!1665, !1666, !1667, !1668}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1663, file: !1625, line: 226, baseType: !1492, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1663, file: !1625, line: 228, baseType: !1090, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1663, file: !1625, line: 230, baseType: !125, size: 32, offset: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1663, file: !1625, line: 231, baseType: !1669, size: 64, offset: 96)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1086, line: 343, size: 64, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1669, file: !1086, line: 344, baseType: !208, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1669, file: !1086, line: 345, baseType: !208, size: 32, offset: 32)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1416, file: !1566, line: 770, type: !1662, isLocal: true, isDefinition: true)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1416, file: !1566, line: 774, type: !1662, isLocal: true, isDefinition: true)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1416, file: !1566, line: 778, type: !1662, isLocal: true, isDefinition: true)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1416, file: !1566, line: 790, type: !1662, isLocal: true, isDefinition: true)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1683, file: !1821, line: 44, type: !1916, isLocal: false, isDefinition: true)
!1683 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1684, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1685, retainedTypes: !1718, globals: !1818, splitDebugInlining: false, nameTableKind: None)
!1684 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!1685 = !{!46, !1686, !1693, !1700, !1707, !1713, !1058}
!1686 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1174, line: 47, baseType: !32, size: 32, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691, !1692}
!1688 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1689 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1690 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1691 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1692 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1693 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1174, line: 75, baseType: !32, size: 32, elements: !1694)
!1694 = !{!1695, !1696, !1697, !1698, !1699}
!1695 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1696 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1697 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1698 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1699 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1700 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1174, line: 92, baseType: !32, size: 32, elements: !1701)
!1701 = !{!1702, !1703, !1704, !1705, !1706}
!1702 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1703 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1704 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1705 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1706 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1707 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1174, line: 84, baseType: !32, size: 32, elements: !1708)
!1708 = !{!1709, !1710, !1711, !1712}
!1709 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1710 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1711 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1712 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1713 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1174, line: 107, baseType: !32, size: 32, elements: !1714)
!1714 = !{!1715, !1716, !1717}
!1715 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1716 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1717 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1718 = !{!124, !125, !1719, !151, !150, !1768, !208, !1134, !1779, !227}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1721)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1174, line: 336, size: 160, elements: !1722)
!1722 = !{!1723, !1742, !1746, !1750, !1763}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1721, file: !1174, line: 365, baseType: !1724, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{!125, !1727, !1195}
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 32)
!1728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1729)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1730)
!1730 = !{!1731, !1732, !1733, !1734, !1740, !1741}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1729, file: !137, line: 380, baseType: !140, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1729, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1729, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1729, file: !137, line: 386, baseType: !1735, size: 32, offset: 96)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1737)
!1737 = !{!1738, !1739}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1736, file: !137, line: 359, baseType: !150, size: 8)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1736, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1729, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1729, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1721, file: !1174, line: 366, baseType: !1743, size: 32, offset: 32)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{null, !1727, !151}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1721, file: !1174, line: 374, baseType: !1747, size: 32, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!1748 = !DISubroutineType(types: !1749)
!1749 = !{!125, !1727}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1721, file: !1174, line: 377, baseType: !1751, size: 32, offset: 96)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 32)
!1752 = !DISubroutineType(types: !1753)
!1753 = !{!125, !1727, !1754}
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1174, line: 122, size: 64, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1761, !1762}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1756, file: !1174, line: 123, baseType: !208, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1756, file: !1174, line: 124, baseType: !150, size: 8, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1756, file: !1174, line: 125, baseType: !150, size: 8, offset: 40)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1756, file: !1174, line: 126, baseType: !150, size: 8, offset: 48)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1756, file: !1174, line: 127, baseType: !150, size: 8, offset: 56)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1721, file: !1174, line: 379, baseType: !1764, size: 32, offset: 128)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{!125, !1727, !1767}
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !419, line: 505, baseType: !1770)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 496, size: 224, elements: !1771)
!1771 = !{!1772, !1773, !1774, !1775, !1776, !1777, !1778}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1770, file: !419, line: 498, baseType: !423, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1770, file: !419, line: 499, baseType: !423, size: 32, offset: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1770, file: !419, line: 500, baseType: !423, size: 32, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1770, file: !419, line: 501, baseType: !423, size: 32, offset: 96)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1770, file: !419, line: 502, baseType: !423, size: 32, offset: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1770, file: !419, line: 503, baseType: !423, size: 32, offset: 160)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1770, file: !419, line: 504, baseType: !423, size: 32, offset: 192)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1781)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1059, line: 100, size: 224, elements: !1782)
!1782 = !{!1783, !1788, !1789, !1798, !1803, !1808, !1813}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1781, file: !1059, line: 101, baseType: !1784, size: 32)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1059, line: 76, baseType: !1785)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{!125, !1727, !1134}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1781, file: !1059, line: 102, baseType: !1784, size: 32, offset: 32)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1781, file: !1059, line: 103, baseType: !1790, size: 32, offset: 64)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1059, line: 83, baseType: !1791)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{!125, !1727, !1134, !1794, !124}
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1059, line: 72, baseType: !1795)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 32)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{null, !1727, !1134, !124}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1781, file: !1059, line: 104, baseType: !1799, size: 32, offset: 96)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1059, line: 79, baseType: !1800)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!125, !1727, !1134, !1090}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1781, file: !1059, line: 105, baseType: !1804, size: 32, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1059, line: 88, baseType: !1805)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{!1058, !1727, !1134}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1781, file: !1059, line: 106, baseType: !1809, size: 32, offset: 160)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1059, line: 92, baseType: !1810)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{!125, !1727, !1134, !1160}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1781, file: !1059, line: 107, baseType: !1814, size: 32, offset: 192)
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1059, line: 96, baseType: !1815)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!125, !1727, !1134, !124}
!1818 = !{!1681, !1819, !1822, !1824, !1831, !1833, !1835, !1837, !1839, !1841, !1885, !1888, !1890, !1893, !1896, !1898, !1904, !1906, !1908, !1910, !1912, !1914}
!1819 = !DIGlobalVariableExpression(var: !1820, expr: !DIExpression())
!1820 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1683, file: !1821, line: 1914, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1821 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1683, file: !1821, line: 1914, type: !1728, isLocal: false, isDefinition: true, align: 32)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1683, file: !1821, line: 1914, type: !1826, isLocal: true, isDefinition: true, align: 32)
!1826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1827)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !447, line: 51, size: 64, elements: !1828)
!1828 = !{!1829, !1830}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1827, file: !447, line: 60, baseType: !1747, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1827, file: !447, line: 65, baseType: !1727, size: 32, offset: 32)
!1831 = !DIGlobalVariableExpression(var: !1832, expr: !DIExpression())
!1832 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1683, file: !1821, line: 1914, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1683, file: !1821, line: 1914, type: !1728, isLocal: false, isDefinition: true, align: 32)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1683, file: !1821, line: 1914, type: !1826, isLocal: true, isDefinition: true, align: 32)
!1837 = !DIGlobalVariableExpression(var: !1838, expr: !DIExpression())
!1838 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1683, file: !1821, line: 1914, type: !1736, isLocal: true, isDefinition: true, align: 8)
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1683, file: !1821, line: 1914, type: !1736, isLocal: true, isDefinition: true, align: 8)
!1841 = !DIGlobalVariableExpression(var: !1842, expr: !DIExpression())
!1842 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1683, file: !1821, line: 1914, type: !1843, isLocal: true, isDefinition: true)
!1843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1844)
!1844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1845, line: 22, size: 224, elements: !1846)
!1845 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1846 = !{!1847, !1848, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1844, file: !1845, line: 24, baseType: !1768, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1844, file: !1845, line: 26, baseType: !1849, size: 32, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1086, line: 343, size: 64, elements: !1852)
!1852 = !{!1853, !1854}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1851, file: !1086, line: 344, baseType: !208, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1851, file: !1086, line: 345, baseType: !208, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1844, file: !1845, line: 28, baseType: !272, size: 32, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1844, file: !1845, line: 30, baseType: !153, size: 8, offset: 96)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1844, file: !1845, line: 32, baseType: !125, size: 32, offset: 128)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1844, file: !1845, line: 34, baseType: !153, size: 8, offset: 160)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1844, file: !1845, line: 36, baseType: !153, size: 8, offset: 168)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1844, file: !1845, line: 38, baseType: !153, size: 8, offset: 176)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1844, file: !1845, line: 40, baseType: !153, size: 8, offset: 184)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1844, file: !1845, line: 41, baseType: !1863, size: 32, offset: 192)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1865)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1866, line: 60, size: 64, elements: !1867)
!1866 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1867 = !{!1868, !1884}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1865, file: !1866, line: 69, baseType: !1869, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1871)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1866, line: 50, size: 64, elements: !1872)
!1872 = !{!1873, !1882, !1883}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1871, file: !1866, line: 52, baseType: !1874, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1876)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1877, line: 37, baseType: !1878)
!1877 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1877, line: 32, size: 64, elements: !1879)
!1879 = !{!1880, !1881}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1878, file: !1877, line: 34, baseType: !208, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1878, file: !1877, line: 36, baseType: !208, size: 32, offset: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1871, file: !1866, line: 54, baseType: !150, size: 8, offset: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1871, file: !1866, line: 56, baseType: !150, size: 8, offset: 40)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1865, file: !1866, line: 71, baseType: !150, size: 8, offset: 32)
!1885 = !DIGlobalVariableExpression(var: !1886, expr: !DIExpression())
!1886 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1683, file: !1821, line: 1914, type: !1887, isLocal: true, isDefinition: true)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1850, size: 64, elements: !675)
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression())
!1889 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1683, file: !1821, line: 1914, type: !1864, isLocal: true, isDefinition: true)
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1683, file: !1821, line: 1914, type: !1892, isLocal: true, isDefinition: true)
!1892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1870, size: 64, elements: !675)
!1893 = !DIGlobalVariableExpression(var: !1894, expr: !DIExpression())
!1894 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1683, file: !1821, line: 1914, type: !1895, isLocal: true, isDefinition: true)
!1895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1875, size: 128, elements: !575)
!1896 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression())
!1897 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1683, file: !1821, line: 1539, type: !1720, isLocal: true, isDefinition: true)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1683, file: !1821, line: 1914, type: !1900, isLocal: true, isDefinition: true)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1845, line: 74, size: 64, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1900, file: !1845, line: 76, baseType: !208, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1900, file: !1845, line: 78, baseType: !1727, size: 32, offset: 32)
!1904 = !DIGlobalVariableExpression(var: !1905, expr: !DIExpression())
!1905 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1683, file: !1821, line: 1914, type: !1843, isLocal: true, isDefinition: true)
!1906 = !DIGlobalVariableExpression(var: !1907, expr: !DIExpression())
!1907 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1683, file: !1821, line: 1914, type: !1887, isLocal: true, isDefinition: true)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1683, file: !1821, line: 1914, type: !1864, isLocal: true, isDefinition: true)
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1683, file: !1821, line: 1914, type: !1892, isLocal: true, isDefinition: true)
!1912 = !DIGlobalVariableExpression(var: !1913, expr: !DIExpression())
!1913 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1683, file: !1821, line: 1914, type: !1895, isLocal: true, isDefinition: true)
!1914 = !DIGlobalVariableExpression(var: !1915, expr: !DIExpression())
!1915 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1683, file: !1821, line: 1914, type: !1900, isLocal: true, isDefinition: true)
!1916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1917)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1918)
!1918 = !{!1919, !1920}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1917, file: !373, line: 17, baseType: !140, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1917, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1921 = !DIGlobalVariableExpression(var: !1922, expr: !DIExpression())
!1922 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1923, file: !2001, line: 65, type: !423, isLocal: true, isDefinition: true)
!1923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1925, retainedTypes: !1926, globals: !1998, splitDebugInlining: false, nameTableKind: None)
!1924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!1925 = !{!870}
!1926 = !{!1927, !1929, !997, !150, !208, !1937, !1968}
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1928, line: 46, baseType: !611)
!1928 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 32)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !693, line: 712, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 706, size: 128, elements: !1932)
!1932 = !{!1933, !1934, !1935, !1936}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1931, file: !693, line: 708, baseType: !423, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1931, file: !693, line: 709, baseType: !423, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1931, file: !693, line: 710, baseType: !423, size: 32, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1931, file: !693, line: 711, baseType: !697, size: 32, offset: 96)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !693, line: 360, baseType: !1939)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 345, size: 28704, elements: !1940)
!1940 = !{!1941, !1943, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1958, !1963, !1967}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1939, file: !693, line: 347, baseType: !1942, size: 256)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 256, elements: !337)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1939, file: !693, line: 348, baseType: !1944, size: 768, offset: 256)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 768, elements: !1945)
!1945 = !{!1946}
!1946 = !DISubrange(count: 24)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1939, file: !693, line: 349, baseType: !1942, size: 256, offset: 1024)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1939, file: !693, line: 350, baseType: !1944, size: 768, offset: 1280)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1939, file: !693, line: 351, baseType: !1942, size: 256, offset: 2048)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1939, file: !693, line: 352, baseType: !1944, size: 768, offset: 2304)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1939, file: !693, line: 353, baseType: !1942, size: 256, offset: 3072)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1939, file: !693, line: 354, baseType: !1944, size: 768, offset: 3328)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1939, file: !693, line: 355, baseType: !1942, size: 256, offset: 4096)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1939, file: !693, line: 356, baseType: !1955, size: 1792, offset: 4352)
!1955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 1792, elements: !1956)
!1956 = !{!1957}
!1957 = !DISubrange(count: 56)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1939, file: !693, line: 357, baseType: !1959, size: 1920, offset: 6144)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1960, size: 1920, elements: !1961)
!1960 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !150)
!1961 = !{!1962}
!1962 = !DISubrange(count: 240)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1939, file: !693, line: 358, baseType: !1964, size: 20608, offset: 8064)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 20608, elements: !1965)
!1965 = !{!1966}
!1966 = !DISubrange(count: 644)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1939, file: !693, line: 359, baseType: !423, size: 32, offset: 28672)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !693, line: 402, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 379, size: 1120, elements: !1971)
!1971 = !{!1972, !1973, !1974, !1975, !1976, !1977, !1978, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1989, !1990, !1991, !1993, !1995, !1997}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1970, file: !693, line: 381, baseType: !697, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1970, file: !693, line: 382, baseType: !423, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1970, file: !693, line: 383, baseType: !423, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1970, file: !693, line: 384, baseType: !423, size: 32, offset: 96)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1970, file: !693, line: 385, baseType: !423, size: 32, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1970, file: !693, line: 386, baseType: !423, size: 32, offset: 160)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1970, file: !693, line: 387, baseType: !1979, size: 96, offset: 192)
!1979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1960, size: 96, elements: !364)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1970, file: !693, line: 388, baseType: !423, size: 32, offset: 288)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1970, file: !693, line: 389, baseType: !423, size: 32, offset: 320)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1970, file: !693, line: 390, baseType: !423, size: 32, offset: 352)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1970, file: !693, line: 391, baseType: !423, size: 32, offset: 384)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1970, file: !693, line: 392, baseType: !423, size: 32, offset: 416)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1970, file: !693, line: 393, baseType: !423, size: 32, offset: 448)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1970, file: !693, line: 394, baseType: !423, size: 32, offset: 480)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1970, file: !693, line: 395, baseType: !1988, size: 64, offset: 512)
!1988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !697, size: 64, elements: !575)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1970, file: !693, line: 396, baseType: !697, size: 32, offset: 576)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1970, file: !693, line: 397, baseType: !697, size: 32, offset: 608)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1970, file: !693, line: 398, baseType: !1992, size: 128, offset: 640)
!1992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !697, size: 128, elements: !941)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1970, file: !693, line: 399, baseType: !1994, size: 160, offset: 768)
!1994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !697, size: 160, elements: !1601)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1970, file: !693, line: 400, baseType: !1996, size: 160, offset: 928)
!1996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 160, elements: !1601)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1970, file: !693, line: 401, baseType: !423, size: 32, offset: 1088)
!1998 = !{!1999, !2025, !2028, !2030, !2032, !1921}
!1999 = !DIGlobalVariableExpression(var: !2000, expr: !DIExpression())
!2000 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1923, file: !2001, line: 285, type: !2002, isLocal: true, isDefinition: true, align: 32)
!2001 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2003)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !447, line: 51, size: 64, elements: !2004)
!2004 = !{!2005, !2024}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2003, file: !447, line: 60, baseType: !2006, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!125, !2009}
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2011)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2012)
!2012 = !{!2013, !2014, !2015, !2016, !2022, !2023}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2011, file: !137, line: 380, baseType: !140, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2011, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2011, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2011, file: !137, line: 386, baseType: !2017, size: 32, offset: 96)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2019)
!2019 = !{!2020, !2021}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2018, file: !137, line: 359, baseType: !150, size: 8)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2018, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2011, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2011, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2003, file: !447, line: 65, baseType: !2009, size: 32, offset: 32)
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "lock", scope: !1923, file: !2001, line: 34, type: !2027, isLocal: true, isDefinition: true)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !651, line: 43, elements: !652)
!2028 = !DIGlobalVariableExpression(var: !2029, expr: !DIExpression())
!2029 = distinct !DIGlobalVariable(name: "last_load", scope: !1923, file: !2001, line: 36, type: !208, isLocal: true, isDefinition: true)
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1923, file: !2001, line: 48, type: !208, isLocal: true, isDefinition: true)
!2032 = !DIGlobalVariableExpression(var: !2033, expr: !DIExpression())
!2033 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1923, file: !2001, line: 54, type: !208, isLocal: true, isDefinition: true)
!2034 = !DIGlobalVariableExpression(var: !2035, expr: !DIExpression())
!2035 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2036, file: !2117, line: 22, type: !2119, isLocal: true, isDefinition: true)
!2036 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2037, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !761, retainedTypes: !2038, globals: !2114, splitDebugInlining: false, nameTableKind: None)
!2037 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2038 = !{!2039, !2103, !2108, !809, !768, !762, !2113, !124}
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2041)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !763, line: 523, size: 288, elements: !2042)
!2042 = !{!2043, !2062, !2066, !2070, !2074, !2075, !2076, !2080, !2099}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2041, file: !763, line: 524, baseType: !2044, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!125, !2047, !797, !798}
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2049)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2050)
!2050 = !{!2051, !2052, !2053, !2054, !2060, !2061}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2049, file: !137, line: 380, baseType: !140, size: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2049, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2049, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2049, file: !137, line: 386, baseType: !2055, size: 32, offset: 96)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 32)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2057)
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2056, file: !137, line: 359, baseType: !150, size: 8)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2056, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2049, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2049, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2041, file: !763, line: 530, baseType: !2063, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 32)
!2064 = !DISubroutineType(types: !2065)
!2065 = !{!125, !2047, !803}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2041, file: !763, line: 532, baseType: !2067, size: 32, offset: 64)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!125, !2047, !809, !804}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2041, file: !763, line: 535, baseType: !2071, size: 32, offset: 96)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{!125, !2047, !809}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2041, file: !763, line: 537, baseType: !2071, size: 32, offset: 128)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2041, file: !763, line: 539, baseType: !2071, size: 32, offset: 160)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2041, file: !763, line: 541, baseType: !2077, size: 32, offset: 192)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 32)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{!125, !2047, !797, !762, !768}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2041, file: !763, line: 544, baseType: !2081, size: 32, offset: 224)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{!125, !2047, !2084, !153}
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 32)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !763, line: 478, size: 96, elements: !2086)
!2086 = !{!2087, !2093, !2098}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2085, file: !763, line: 482, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !829, line: 33, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !829, line: 29, size: 32, elements: !2090)
!2090 = !{!2091}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2089, file: !829, line: 30, baseType: !2092, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2085, file: !763, line: 485, baseType: !2094, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !763, line: 464, baseType: !2095)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 32)
!2096 = !DISubroutineType(types: !2097)
!2097 = !{null, !2047, !2084, !809}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2085, file: !763, line: 493, baseType: !809, size: 32, offset: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2041, file: !763, line: 547, baseType: !2100, size: 32, offset: 256)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 32)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!208, !2047}
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !763, line: 428, size: 32, elements: !2106)
!2106 = !{!2107}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2105, file: !763, line: 434, baseType: !809, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !763, line: 441, size: 32, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2110, file: !763, line: 447, baseType: !809, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!2114 = !{!2115, !2034}
!2115 = !DIGlobalVariableExpression(var: !2116, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2116 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2036, file: !2117, line: 37, type: !2118, isLocal: true, isDefinition: true)
!2117 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!2119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2120, size: 352, elements: !1025)
!2120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2047)
!2121 = !DIGlobalVariableExpression(var: !2122, expr: !DIExpression())
!2122 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2123, file: !2147, line: 129, type: !2154, isLocal: false, isDefinition: true)
!2123 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2124, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2125, globals: !2144, splitDebugInlining: false, nameTableKind: None)
!2124 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2125 = !{!2126}
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 386, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 370, size: 448, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2128, file: !419, line: 372, baseType: !423, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2128, file: !419, line: 373, baseType: !423, size: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2128, file: !419, line: 374, baseType: !423, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2128, file: !419, line: 375, baseType: !423, size: 32, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2128, file: !419, line: 376, baseType: !423, size: 32, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2128, file: !419, line: 377, baseType: !423, size: 32, offset: 160)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2128, file: !419, line: 378, baseType: !423, size: 32, offset: 192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2128, file: !419, line: 379, baseType: !423, size: 32, offset: 224)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2128, file: !419, line: 380, baseType: !423, size: 32, offset: 256)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2128, file: !419, line: 381, baseType: !423, size: 32, offset: 288)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2128, file: !419, line: 382, baseType: !423, size: 32, offset: 320)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2128, file: !419, line: 383, baseType: !423, size: 32, offset: 352)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2128, file: !419, line: 384, baseType: !423, size: 32, offset: 384)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2128, file: !419, line: 385, baseType: !423, size: 32, offset: 416)
!2144 = !{!2145, !2148, !2151, !2121}
!2145 = !DIGlobalVariableExpression(var: !2146, expr: !DIExpression())
!2146 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2123, file: !2147, line: 126, type: !208, isLocal: false, isDefinition: true)
!2147 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !2123, file: !2147, line: 127, type: !2150, isLocal: false, isDefinition: true)
!2150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 72, elements: !1583)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2123, file: !2147, line: 128, type: !2153, isLocal: false, isDefinition: true)
!2153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 128, elements: !312)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 64, elements: !337)
!2155 = !DIGlobalVariableExpression(var: !2156, expr: !DIExpression())
!2156 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2157, file: !2160, line: 23, type: !2161, isLocal: false, isDefinition: true)
!2157 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2158, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !2159, splitDebugInlining: false, nameTableKind: None)
!2158 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2159 = !{!2155}
!2160 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2164, file: !2168, line: 37, type: !2420, isLocal: false, isDefinition: true)
!2164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2165, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2166, retainedTypes: !2175, globals: !2248, splitDebugInlining: false, nameTableKind: None)
!2165 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2166 = !{!2167, !46, !870}
!2167 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2168, line: 63, baseType: !32, size: 32, elements: !2169)
!2168 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2169 = !{!2170, !2171, !2172, !2173, !2174}
!2170 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2171 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2172 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2173 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2174 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2175 = !{!272, !124, !125, !2176, !393, !208, !2206, !997, !150, !2231}
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2179, line: 51, size: 64, elements: !2180)
!2179 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2180 = !{!2181, !2201}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2178, file: !2179, line: 52, baseType: !2182, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2179, line: 38, baseType: !2183)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2184 = !DISubroutineType(types: !2185)
!2185 = !{!125, !2186, !184, !227}
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2188)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2189)
!2189 = !{!2190, !2191, !2192, !2193, !2199, !2200}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2188, file: !137, line: 380, baseType: !140, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2188, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2188, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2188, file: !137, line: 386, baseType: !2194, size: 32, offset: 96)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2196)
!2196 = !{!2197, !2198}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2195, file: !137, line: 359, baseType: !150, size: 8)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2195, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2188, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2188, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2178, file: !2179, line: 53, baseType: !2202, size: 32, offset: 32)
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2179, line: 47, baseType: !2203)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{!125, !2186, !184, !227, !208}
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !693, line: 402, baseType: !2208)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 379, size: 1120, elements: !2209)
!2209 = !{!2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2208, file: !693, line: 381, baseType: !697, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2208, file: !693, line: 382, baseType: !423, size: 32, offset: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2208, file: !693, line: 383, baseType: !423, size: 32, offset: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2208, file: !693, line: 384, baseType: !423, size: 32, offset: 96)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2208, file: !693, line: 385, baseType: !423, size: 32, offset: 128)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2208, file: !693, line: 386, baseType: !423, size: 32, offset: 160)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2208, file: !693, line: 387, baseType: !1979, size: 96, offset: 192)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2208, file: !693, line: 388, baseType: !423, size: 32, offset: 288)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2208, file: !693, line: 389, baseType: !423, size: 32, offset: 320)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2208, file: !693, line: 390, baseType: !423, size: 32, offset: 352)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2208, file: !693, line: 391, baseType: !423, size: 32, offset: 384)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2208, file: !693, line: 392, baseType: !423, size: 32, offset: 416)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2208, file: !693, line: 393, baseType: !423, size: 32, offset: 448)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2208, file: !693, line: 394, baseType: !423, size: 32, offset: 480)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2208, file: !693, line: 395, baseType: !1988, size: 64, offset: 512)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2208, file: !693, line: 396, baseType: !697, size: 32, offset: 576)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2208, file: !693, line: 397, baseType: !697, size: 32, offset: 608)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2208, file: !693, line: 398, baseType: !1992, size: 128, offset: 640)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2208, file: !693, line: 399, baseType: !1994, size: 160, offset: 768)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2208, file: !693, line: 400, baseType: !1996, size: 160, offset: 928)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2208, file: !693, line: 401, baseType: !423, size: 32, offset: 1088)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !693, line: 360, baseType: !2233)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 345, size: 28704, elements: !2234)
!2234 = !{!2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2233, file: !693, line: 347, baseType: !1942, size: 256)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2233, file: !693, line: 348, baseType: !1944, size: 768, offset: 256)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2233, file: !693, line: 349, baseType: !1942, size: 256, offset: 1024)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2233, file: !693, line: 350, baseType: !1944, size: 768, offset: 1280)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2233, file: !693, line: 351, baseType: !1942, size: 256, offset: 2048)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2233, file: !693, line: 352, baseType: !1944, size: 768, offset: 2304)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2233, file: !693, line: 353, baseType: !1942, size: 256, offset: 3072)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2233, file: !693, line: 354, baseType: !1944, size: 768, offset: 3328)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2233, file: !693, line: 355, baseType: !1942, size: 256, offset: 4096)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2233, file: !693, line: 356, baseType: !1955, size: 1792, offset: 4352)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2233, file: !693, line: 357, baseType: !1959, size: 1920, offset: 6144)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2233, file: !693, line: 358, baseType: !1964, size: 20608, offset: 8064)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2233, file: !693, line: 359, baseType: !423, size: 32, offset: 28672)
!2248 = !{!2162, !2249, !2371, !2380, !2382, !2385, !2390, !2392, !2397}
!2249 = !DIGlobalVariableExpression(var: !2250, expr: !DIExpression())
!2250 = distinct !DIGlobalVariable(name: "_kernel", scope: !2164, file: !2168, line: 40, type: !2251, isLocal: false, isDefinition: true)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !580, line: 158, size: 288, elements: !2252)
!2252 = !{!2253, !2366}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2251, file: !580, line: 159, baseType: !2254, size: 192)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2255, size: 192, elements: !675)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !580, line: 100, size: 192, elements: !2256)
!2256 = !{!2257, !2258, !2259, !2360, !2361, !2362, !2363}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2255, file: !580, line: 102, baseType: !208, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2255, file: !580, line: 105, baseType: !393, size: 32, offset: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2255, file: !580, line: 108, baseType: !2260, size: 32, offset: 64)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !544, line: 245, size: 1024, elements: !2262)
!2262 = !{!2263, !2321, !2333, !2334, !2335, !2336, !2342, !2355}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2261, file: !544, line: 247, baseType: !2264, size: 384)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !544, line: 57, size: 384, elements: !2265)
!2265 = !{!2266, !2290, !2297, !2298, !2299, !2308, !2309, !2310}
!2266 = !DIDerivedType(tag: DW_TAG_member, scope: !2264, file: !544, line: 60, baseType: !2267, size: 64)
!2267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2264, file: !544, line: 60, size: 64, elements: !2268)
!2268 = !{!2269, !2284}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2267, file: !544, line: 61, baseType: !2270, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !554, line: 49, baseType: !2271)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !554, line: 37, size: 64, elements: !2272)
!2272 = !{!2273, !2279}
!2273 = !DIDerivedType(tag: DW_TAG_member, scope: !2271, file: !554, line: 38, baseType: !2274, size: 32)
!2274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2271, file: !554, line: 38, size: 32, elements: !2275)
!2275 = !{!2276, !2278}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2274, file: !554, line: 39, baseType: !2277, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2274, file: !554, line: 40, baseType: !2277, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, scope: !2271, file: !554, line: 42, baseType: !2280, size: 32, offset: 32)
!2280 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2271, file: !554, line: 42, size: 32, elements: !2281)
!2281 = !{!2282, !2283}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2280, file: !554, line: 43, baseType: !2277, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2280, file: !554, line: 44, baseType: !2277, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2267, file: !544, line: 62, baseType: !2285, size: 64)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !570, line: 49, size: 64, elements: !2286)
!2286 = !{!2287}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2285, file: !570, line: 50, baseType: !2288, size: 64)
!2288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2289, size: 64, elements: !575)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2264, file: !544, line: 68, baseType: !2291, size: 32, offset: 64)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !580, line: 233, baseType: !2293)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 231, size: 64, elements: !2294)
!2294 = !{!2295}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2293, file: !580, line: 232, baseType: !2296, size: 64)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !554, line: 48, baseType: !2271)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2264, file: !544, line: 71, baseType: !150, size: 8, offset: 96)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2264, file: !544, line: 74, baseType: !150, size: 8, offset: 104)
!2299 = !DIDerivedType(tag: DW_TAG_member, scope: !2264, file: !544, line: 90, baseType: !2300, size: 16, offset: 112)
!2300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2264, file: !544, line: 90, size: 16, elements: !2301)
!2301 = !{!2302, !2307}
!2302 = !DIDerivedType(tag: DW_TAG_member, scope: !2300, file: !544, line: 91, baseType: !2303, size: 16)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2300, file: !544, line: 91, size: 16, elements: !2304)
!2304 = !{!2305, !2306}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2303, file: !544, line: 96, baseType: !594, size: 8)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2303, file: !544, line: 97, baseType: !150, size: 8, offset: 8)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2300, file: !544, line: 100, baseType: !227, size: 16)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2264, file: !544, line: 107, baseType: !208, size: 32, offset: 128)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2264, file: !544, line: 127, baseType: !124, size: 32, offset: 160)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2264, file: !544, line: 131, baseType: !2311, size: 192, offset: 192)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !580, line: 244, size: 192, elements: !2312)
!2312 = !{!2313, !2314, !2320}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2311, file: !580, line: 245, baseType: !2270, size: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2311, file: !580, line: 246, baseType: !2315, size: 32, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !580, line: 242, baseType: !2316)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 32)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{null, !2319}
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2311, file: !580, line: 249, baseType: !611, size: 64, offset: 128)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2261, file: !544, line: 250, baseType: !2322, size: 288, offset: 384)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !614, line: 25, size: 288, elements: !2323)
!2323 = !{!2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2322, file: !614, line: 26, baseType: !208, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2322, file: !614, line: 27, baseType: !208, size: 32, offset: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2322, file: !614, line: 28, baseType: !208, size: 32, offset: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2322, file: !614, line: 29, baseType: !208, size: 32, offset: 96)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2322, file: !614, line: 30, baseType: !208, size: 32, offset: 128)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2322, file: !614, line: 31, baseType: !208, size: 32, offset: 160)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2322, file: !614, line: 32, baseType: !208, size: 32, offset: 192)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2322, file: !614, line: 33, baseType: !208, size: 32, offset: 224)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2322, file: !614, line: 34, baseType: !208, size: 32, offset: 256)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2261, file: !544, line: 253, baseType: !124, size: 32, offset: 672)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2261, file: !544, line: 256, baseType: !2292, size: 64, offset: 704)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2261, file: !544, line: 294, baseType: !125, size: 32, offset: 768)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2261, file: !544, line: 300, baseType: !2337, size: 96, offset: 800)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !544, line: 149, size: 96, elements: !2338)
!2338 = !{!2339, !2340, !2341}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2337, file: !544, line: 153, baseType: !22, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2337, file: !544, line: 162, baseType: !272, size: 32, offset: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2337, file: !544, line: 168, baseType: !272, size: 32, offset: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2261, file: !544, line: 325, baseType: !2343, size: 32, offset: 896)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !637, line: 5073, size: 160, elements: !2345)
!2345 = !{!2346, !2352, !2353}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2344, file: !637, line: 5074, baseType: !2347, size: 96)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !641, line: 56, size: 96, elements: !2348)
!2348 = !{!2349, !2350, !2351}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2347, file: !641, line: 57, baseType: !644, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2347, file: !641, line: 58, baseType: !124, size: 32, offset: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2347, file: !641, line: 59, baseType: !272, size: 32, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2344, file: !637, line: 5075, baseType: !2292, size: 64, offset: 96)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2344, file: !637, line: 5076, baseType: !2354, offset: 160)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !651, line: 43, elements: !652)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2261, file: !544, line: 343, baseType: !2356, size: 64, offset: 928)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !614, line: 60, size: 64, elements: !2357)
!2357 = !{!2358, !2359}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2356, file: !614, line: 63, baseType: !208, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2356, file: !614, line: 66, baseType: !208, size: 32, offset: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2255, file: !580, line: 111, baseType: !2260, size: 32, offset: 96)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2255, file: !580, line: 124, baseType: !125, size: 32, offset: 128)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2255, file: !580, line: 127, baseType: !150, size: 8, offset: 160)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2255, file: !580, line: 153, baseType: !2364, offset: 168)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2365, line: 33, elements: !652)
!2365 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2251, file: !580, line: 170, baseType: !2367, size: 96, offset: 192)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !580, line: 83, size: 96, elements: !2368)
!2368 = !{!2369, !2370}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2367, file: !580, line: 86, baseType: !2260, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2367, file: !580, line: 90, baseType: !2296, size: 64, offset: 32)
!2371 = !DIGlobalVariableExpression(var: !2372, expr: !DIExpression())
!2372 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2164, file: !2168, line: 43, type: !2373, isLocal: false, isDefinition: true, align: 512)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2374, size: 8704, elements: !2378)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2375, line: 47, size: 8, elements: !2376)
!2375 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2376 = !{!2377}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2374, file: !2375, line: 48, baseType: !142, size: 8)
!2378 = !{!2379}
!2379 = !DISubrange(count: 1088)
!2380 = !DIGlobalVariableExpression(var: !2381, expr: !DIExpression())
!2381 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2164, file: !2168, line: 44, type: !2261, isLocal: false, isDefinition: true)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2164, file: !2168, line: 48, type: !2384, isLocal: false, isDefinition: true)
!2384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2261, size: 1024, elements: !675)
!2385 = !DIGlobalVariableExpression(var: !2386, expr: !DIExpression())
!2386 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2164, file: !2168, line: 86, type: !2387, isLocal: false, isDefinition: true, align: 512)
!2387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2374, size: 16896, elements: !2388)
!2388 = !{!676, !2389}
!2389 = !DISubrange(count: 2112)
!2390 = !DIGlobalVariableExpression(var: !2391, expr: !DIExpression())
!2391 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2164, file: !2168, line: 217, type: !153, isLocal: false, isDefinition: true)
!2392 = !DIGlobalVariableExpression(var: !2393, expr: !DIExpression())
!2393 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2164, file: !2168, line: 50, type: !2394, isLocal: true, isDefinition: true, align: 512)
!2394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2374, size: 2560, elements: !2395)
!2395 = !{!676, !2396}
!2396 = !DISubrange(count: 320)
!2397 = !DIGlobalVariableExpression(var: !2398, expr: !DIExpression())
!2398 = distinct !DIGlobalVariable(name: "levels", scope: !2399, file: !2168, line: 232, type: !2419, isLocal: true, isDefinition: true)
!2399 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2168, file: !2168, line: 230, type: !2400, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !2402)
!2400 = !DISubroutineType(types: !2401)
!2401 = !{null, !2167}
!2402 = !{!2403, !2404, !2414, !2418}
!2403 = !DILocalVariable(name: "level", arg: 1, scope: !2399, file: !2168, line: 230, type: !2167)
!2404 = !DILocalVariable(name: "entry", scope: !2399, file: !2168, line: 244, type: !2405)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2407)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !447, line: 51, size: 64, elements: !2408)
!2408 = !{!2409, !2413}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2407, file: !447, line: 60, baseType: !2410, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 32)
!2411 = !DISubroutineType(types: !2412)
!2412 = !{!125, !2186}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2407, file: !447, line: 65, baseType: !2186, size: 32, offset: 32)
!2414 = !DILocalVariable(name: "dev", scope: !2415, file: !2168, line: 247, type: !2186)
!2415 = distinct !DILexicalBlock(scope: !2416, file: !2168, line: 246, column: 64)
!2416 = distinct !DILexicalBlock(scope: !2417, file: !2168, line: 246, column: 2)
!2417 = distinct !DILexicalBlock(scope: !2399, file: !2168, line: 246, column: 2)
!2418 = !DILocalVariable(name: "rc", scope: !2415, file: !2168, line: 248, type: !125)
!2419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2405, size: 192, elements: !1592)
!2420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2421)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !2422)
!2422 = !{!2423, !2424}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2421, file: !373, line: 17, baseType: !140, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2421, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!2425 = !DIGlobalVariableExpression(var: !2426, expr: !DIExpression())
!2426 = distinct !DIGlobalVariable(name: "states_str", scope: !2427, file: !2428, line: 276, type: !2551, isLocal: true, isDefinition: true)
!2427 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2428, file: !2428, line: 271, type: !2429, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !2542)
!2428 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2429 = !DISubroutineType(types: !2430)
!2430 = !{!140, !2431, !393, !272}
!2431 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !544, line: 347, baseType: !2432)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 32)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !544, line: 245, size: 1024, elements: !2434)
!2434 = !{!2435, !2493, !2505, !2506, !2507, !2508, !2514, !2527}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2433, file: !544, line: 247, baseType: !2436, size: 384)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !544, line: 57, size: 384, elements: !2437)
!2437 = !{!2438, !2462, !2469, !2470, !2471, !2480, !2481, !2482}
!2438 = !DIDerivedType(tag: DW_TAG_member, scope: !2436, file: !544, line: 60, baseType: !2439, size: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2436, file: !544, line: 60, size: 64, elements: !2440)
!2440 = !{!2441, !2456}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2439, file: !544, line: 61, baseType: !2442, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !554, line: 49, baseType: !2443)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !554, line: 37, size: 64, elements: !2444)
!2444 = !{!2445, !2451}
!2445 = !DIDerivedType(tag: DW_TAG_member, scope: !2443, file: !554, line: 38, baseType: !2446, size: 32)
!2446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2443, file: !554, line: 38, size: 32, elements: !2447)
!2447 = !{!2448, !2450}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2446, file: !554, line: 39, baseType: !2449, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2446, file: !554, line: 40, baseType: !2449, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, scope: !2443, file: !554, line: 42, baseType: !2452, size: 32, offset: 32)
!2452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2443, file: !554, line: 42, size: 32, elements: !2453)
!2453 = !{!2454, !2455}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2452, file: !554, line: 43, baseType: !2449, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2452, file: !554, line: 44, baseType: !2449, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2439, file: !544, line: 62, baseType: !2457, size: 64)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !570, line: 49, size: 64, elements: !2458)
!2458 = !{!2459}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2457, file: !570, line: 50, baseType: !2460, size: 64)
!2460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2461, size: 64, elements: !575)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2436, file: !544, line: 68, baseType: !2463, size: 32, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !580, line: 233, baseType: !2465)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 231, size: 64, elements: !2466)
!2466 = !{!2467}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2465, file: !580, line: 232, baseType: !2468, size: 64)
!2468 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !554, line: 48, baseType: !2443)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2436, file: !544, line: 71, baseType: !150, size: 8, offset: 96)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2436, file: !544, line: 74, baseType: !150, size: 8, offset: 104)
!2471 = !DIDerivedType(tag: DW_TAG_member, scope: !2436, file: !544, line: 90, baseType: !2472, size: 16, offset: 112)
!2472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2436, file: !544, line: 90, size: 16, elements: !2473)
!2473 = !{!2474, !2479}
!2474 = !DIDerivedType(tag: DW_TAG_member, scope: !2472, file: !544, line: 91, baseType: !2475, size: 16)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2472, file: !544, line: 91, size: 16, elements: !2476)
!2476 = !{!2477, !2478}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2475, file: !544, line: 96, baseType: !594, size: 8)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2475, file: !544, line: 97, baseType: !150, size: 8, offset: 8)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2472, file: !544, line: 100, baseType: !227, size: 16)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2436, file: !544, line: 107, baseType: !208, size: 32, offset: 128)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2436, file: !544, line: 127, baseType: !124, size: 32, offset: 160)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2436, file: !544, line: 131, baseType: !2483, size: 192, offset: 192)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !580, line: 244, size: 192, elements: !2484)
!2484 = !{!2485, !2486, !2492}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2483, file: !580, line: 245, baseType: !2442, size: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2483, file: !580, line: 246, baseType: !2487, size: 32, offset: 64)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !580, line: 242, baseType: !2488)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 32)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{null, !2491}
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2483, file: !580, line: 249, baseType: !611, size: 64, offset: 128)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2433, file: !544, line: 250, baseType: !2494, size: 288, offset: 384)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !614, line: 25, size: 288, elements: !2495)
!2495 = !{!2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2494, file: !614, line: 26, baseType: !208, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2494, file: !614, line: 27, baseType: !208, size: 32, offset: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2494, file: !614, line: 28, baseType: !208, size: 32, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2494, file: !614, line: 29, baseType: !208, size: 32, offset: 96)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2494, file: !614, line: 30, baseType: !208, size: 32, offset: 128)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2494, file: !614, line: 31, baseType: !208, size: 32, offset: 160)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2494, file: !614, line: 32, baseType: !208, size: 32, offset: 192)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2494, file: !614, line: 33, baseType: !208, size: 32, offset: 224)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2494, file: !614, line: 34, baseType: !208, size: 32, offset: 256)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2433, file: !544, line: 253, baseType: !124, size: 32, offset: 672)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2433, file: !544, line: 256, baseType: !2464, size: 64, offset: 704)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2433, file: !544, line: 294, baseType: !125, size: 32, offset: 768)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2433, file: !544, line: 300, baseType: !2509, size: 96, offset: 800)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !544, line: 149, size: 96, elements: !2510)
!2510 = !{!2511, !2512, !2513}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2509, file: !544, line: 153, baseType: !22, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2509, file: !544, line: 162, baseType: !272, size: 32, offset: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2509, file: !544, line: 168, baseType: !272, size: 32, offset: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2433, file: !544, line: 325, baseType: !2515, size: 32, offset: 896)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !637, line: 5073, size: 160, elements: !2517)
!2517 = !{!2518, !2524, !2525}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2516, file: !637, line: 5074, baseType: !2519, size: 96)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !641, line: 56, size: 96, elements: !2520)
!2520 = !{!2521, !2522, !2523}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2519, file: !641, line: 57, baseType: !644, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2519, file: !641, line: 58, baseType: !124, size: 32, offset: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2519, file: !641, line: 59, baseType: !272, size: 32, offset: 64)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2516, file: !637, line: 5075, baseType: !2464, size: 64, offset: 96)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2516, file: !637, line: 5076, baseType: !2526, offset: 160)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !651, line: 43, elements: !652)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2433, file: !544, line: 343, baseType: !2528, size: 64, offset: 928)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !614, line: 60, size: 64, elements: !2529)
!2529 = !{!2530, !2531}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2528, file: !614, line: 63, baseType: !208, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2528, file: !614, line: 66, baseType: !208, size: 32, offset: 32)
!2532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2534, globals: !2538, splitDebugInlining: false, nameTableKind: None)
!2533 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2534 = !{!124, !140, !1927, !150, !125, !2535, !24, !272, !393, !22, !208, !2536}
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !2537)
!2537 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2538 = !{!2425, !2539}
!2539 = !DIGlobalVariableExpression(var: !2540, expr: !DIExpression())
!2540 = distinct !DIGlobalVariable(name: "states_sz", scope: !2427, file: !2428, line: 279, type: !2541, isLocal: true, isDefinition: true)
!2541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2118, size: 256, elements: !337)
!2542 = !{!2543, !2544, !2545, !2546, !2547, !2548, !2549}
!2543 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2427, file: !2428, line: 271, type: !2431)
!2544 = !DILocalVariable(name: "buf", arg: 2, scope: !2427, file: !2428, line: 271, type: !393)
!2545 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2427, file: !2428, line: 271, type: !272)
!2546 = !DILocalVariable(name: "off", scope: !2427, file: !2428, line: 273, type: !272)
!2547 = !DILocalVariable(name: "bit", scope: !2427, file: !2428, line: 274, type: !150)
!2548 = !DILocalVariable(name: "thread_state", scope: !2427, file: !2428, line: 275, type: !150)
!2549 = !DILocalVariable(name: "index", scope: !2550, file: !2428, line: 293, type: !150)
!2550 = distinct !DILexicalBlock(scope: !2427, file: !2428, line: 293, column: 2)
!2551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 256, elements: !337)
!2552 = !DIGlobalVariableExpression(var: !2553, expr: !DIExpression())
!2553 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2554, file: !2662, line: 56, type: !2651, isLocal: false, isDefinition: true)
!2554 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2555, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2556, globals: !2659, splitDebugInlining: false, nameTableKind: None)
!2555 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2556 = !{!2557, !393, !124, !2657, !184, !1927, !997, !125, !208, !2536, !2658}
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 32)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !544, line: 245, size: 1024, elements: !2559)
!2559 = !{!2560, !2618, !2630, !2631, !2632, !2633, !2639, !2652}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2558, file: !544, line: 247, baseType: !2561, size: 384)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !544, line: 57, size: 384, elements: !2562)
!2562 = !{!2563, !2587, !2594, !2595, !2596, !2605, !2606, !2607}
!2563 = !DIDerivedType(tag: DW_TAG_member, scope: !2561, file: !544, line: 60, baseType: !2564, size: 64)
!2564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2561, file: !544, line: 60, size: 64, elements: !2565)
!2565 = !{!2566, !2581}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2564, file: !544, line: 61, baseType: !2567, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !554, line: 49, baseType: !2568)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !554, line: 37, size: 64, elements: !2569)
!2569 = !{!2570, !2576}
!2570 = !DIDerivedType(tag: DW_TAG_member, scope: !2568, file: !554, line: 38, baseType: !2571, size: 32)
!2571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2568, file: !554, line: 38, size: 32, elements: !2572)
!2572 = !{!2573, !2575}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2571, file: !554, line: 39, baseType: !2574, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2571, file: !554, line: 40, baseType: !2574, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, scope: !2568, file: !554, line: 42, baseType: !2577, size: 32, offset: 32)
!2577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2568, file: !554, line: 42, size: 32, elements: !2578)
!2578 = !{!2579, !2580}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2577, file: !554, line: 43, baseType: !2574, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2577, file: !554, line: 44, baseType: !2574, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2564, file: !544, line: 62, baseType: !2582, size: 64)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !570, line: 49, size: 64, elements: !2583)
!2583 = !{!2584}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2582, file: !570, line: 50, baseType: !2585, size: 64)
!2585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2586, size: 64, elements: !575)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2561, file: !544, line: 68, baseType: !2588, size: 32, offset: 64)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !580, line: 233, baseType: !2590)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 231, size: 64, elements: !2591)
!2591 = !{!2592}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2590, file: !580, line: 232, baseType: !2593, size: 64)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !554, line: 48, baseType: !2568)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2561, file: !544, line: 71, baseType: !150, size: 8, offset: 96)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2561, file: !544, line: 74, baseType: !150, size: 8, offset: 104)
!2596 = !DIDerivedType(tag: DW_TAG_member, scope: !2561, file: !544, line: 90, baseType: !2597, size: 16, offset: 112)
!2597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2561, file: !544, line: 90, size: 16, elements: !2598)
!2598 = !{!2599, !2604}
!2599 = !DIDerivedType(tag: DW_TAG_member, scope: !2597, file: !544, line: 91, baseType: !2600, size: 16)
!2600 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2597, file: !544, line: 91, size: 16, elements: !2601)
!2601 = !{!2602, !2603}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2600, file: !544, line: 96, baseType: !594, size: 8)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2600, file: !544, line: 97, baseType: !150, size: 8, offset: 8)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2597, file: !544, line: 100, baseType: !227, size: 16)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2561, file: !544, line: 107, baseType: !208, size: 32, offset: 128)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2561, file: !544, line: 127, baseType: !124, size: 32, offset: 160)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2561, file: !544, line: 131, baseType: !2608, size: 192, offset: 192)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !580, line: 244, size: 192, elements: !2609)
!2609 = !{!2610, !2611, !2617}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2608, file: !580, line: 245, baseType: !2567, size: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2608, file: !580, line: 246, baseType: !2612, size: 32, offset: 64)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !580, line: 242, baseType: !2613)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 32)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{null, !2616}
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2608, file: !580, line: 249, baseType: !611, size: 64, offset: 128)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2558, file: !544, line: 250, baseType: !2619, size: 288, offset: 384)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !614, line: 25, size: 288, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2619, file: !614, line: 26, baseType: !208, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2619, file: !614, line: 27, baseType: !208, size: 32, offset: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2619, file: !614, line: 28, baseType: !208, size: 32, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2619, file: !614, line: 29, baseType: !208, size: 32, offset: 96)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2619, file: !614, line: 30, baseType: !208, size: 32, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2619, file: !614, line: 31, baseType: !208, size: 32, offset: 160)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2619, file: !614, line: 32, baseType: !208, size: 32, offset: 192)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2619, file: !614, line: 33, baseType: !208, size: 32, offset: 224)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2619, file: !614, line: 34, baseType: !208, size: 32, offset: 256)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2558, file: !544, line: 253, baseType: !124, size: 32, offset: 672)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2558, file: !544, line: 256, baseType: !2589, size: 64, offset: 704)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2558, file: !544, line: 294, baseType: !125, size: 32, offset: 768)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2558, file: !544, line: 300, baseType: !2634, size: 96, offset: 800)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !544, line: 149, size: 96, elements: !2635)
!2635 = !{!2636, !2637, !2638}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2634, file: !544, line: 153, baseType: !22, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2634, file: !544, line: 162, baseType: !272, size: 32, offset: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2634, file: !544, line: 168, baseType: !272, size: 32, offset: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2558, file: !544, line: 325, baseType: !2640, size: 32, offset: 896)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 32)
!2641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !637, line: 5073, size: 160, elements: !2642)
!2642 = !{!2643, !2649, !2650}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2641, file: !637, line: 5074, baseType: !2644, size: 96)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !641, line: 56, size: 96, elements: !2645)
!2645 = !{!2646, !2647, !2648}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2644, file: !641, line: 57, baseType: !644, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2644, file: !641, line: 58, baseType: !124, size: 32, offset: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2644, file: !641, line: 59, baseType: !272, size: 32, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2641, file: !637, line: 5075, baseType: !2589, size: 64, offset: 96)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2641, file: !637, line: 5076, baseType: !2651, offset: 160)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !651, line: 43, elements: !652)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2558, file: !544, line: 343, baseType: !2653, size: 64, offset: 928)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !614, line: 60, size: 64, elements: !2654)
!2654 = !{!2655, !2656}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2653, file: !614, line: 63, baseType: !208, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2653, file: !614, line: 66, baseType: !208, size: 32, offset: 32)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 32)
!2659 = !{!2552, !2660, !2663, !2665}
!2660 = !DIGlobalVariableExpression(var: !2661, expr: !DIExpression())
!2661 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2554, file: !2662, line: 404, type: !125, isLocal: true, isDefinition: true)
!2662 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2663 = !DIGlobalVariableExpression(var: !2664, expr: !DIExpression())
!2664 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2554, file: !2662, line: 405, type: !125, isLocal: true, isDefinition: true)
!2665 = !DIGlobalVariableExpression(var: !2666, expr: !DIExpression())
!2666 = distinct !DIGlobalVariable(name: "pending_current", scope: !2554, file: !2662, line: 425, type: !2557, isLocal: true, isDefinition: true)
!2667 = !DIGlobalVariableExpression(var: !2668, expr: !DIExpression())
!2668 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2669, file: !2699, line: 15, type: !2536, isLocal: true, isDefinition: true)
!2669 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2670, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2671, globals: !2696, splitDebugInlining: false, nameTableKind: None)
!2670 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2671 = !{!1927, !124, !997, !208, !2536, !125, !2672, !393, !611}
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !580, line: 244, size: 192, elements: !2674)
!2674 = !{!2675, !2690, !2695}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2673, file: !580, line: 245, baseType: !2676, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !554, line: 49, baseType: !2677)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !554, line: 37, size: 64, elements: !2678)
!2678 = !{!2679, !2685}
!2679 = !DIDerivedType(tag: DW_TAG_member, scope: !2677, file: !554, line: 38, baseType: !2680, size: 32)
!2680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2677, file: !554, line: 38, size: 32, elements: !2681)
!2681 = !{!2682, !2684}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2680, file: !554, line: 39, baseType: !2683, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2680, file: !554, line: 40, baseType: !2683, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_member, scope: !2677, file: !554, line: 42, baseType: !2686, size: 32, offset: 32)
!2686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2677, file: !554, line: 42, size: 32, elements: !2687)
!2687 = !{!2688, !2689}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2686, file: !554, line: 43, baseType: !2683, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2686, file: !554, line: 44, baseType: !2683, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2673, file: !580, line: 246, baseType: !2691, size: 32, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !580, line: 242, baseType: !2692)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 32)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{null, !2672}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2673, file: !580, line: 249, baseType: !611, size: 64, offset: 128)
!2696 = !{!2667, !2697, !2701, !2703}
!2697 = !DIGlobalVariableExpression(var: !2698, expr: !DIExpression())
!2698 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2669, file: !2699, line: 19, type: !2700, isLocal: true, isDefinition: true)
!2699 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !651, line: 43, elements: !652)
!2701 = !DIGlobalVariableExpression(var: !2702, expr: !DIExpression())
!2702 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2669, file: !2699, line: 25, type: !125, isLocal: true, isDefinition: true)
!2703 = !DIGlobalVariableExpression(var: !2704, expr: !DIExpression())
!2704 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2669, file: !2699, line: 17, type: !2705, isLocal: true, isDefinition: true)
!2705 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !554, line: 48, baseType: !2677)
!2706 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2707, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2707 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2708 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2709, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2709 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2712, retainedTypes: !2732, splitDebugInlining: false, nameTableKind: None)
!2711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2712 = !{!2713, !2721}
!2713 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2714, line: 69, baseType: !32, size: 32, elements: !2715)
!2714 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2715 = !{!2716, !2717, !2718, !2719, !2720}
!2716 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2717 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2718 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2719 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2720 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2714, line: 56, baseType: !32, size: 32, elements: !2722)
!2722 = !{!2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731}
!2723 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2724 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2725 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2726 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2727 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2728 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2729 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2730 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2731 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2732 = !{!125, !2713, !2721, !2733, !595, !160, !2735, !2736, !151, !228, !140, !272, !124, !22, !32, !387, !2738, !2739, !389, !388, !391, !390, !2734, !2740, !2741, !2742, !2743}
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2714, line: 31, baseType: !2734)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !391)
!2735 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !273, line: 329, baseType: !32)
!2736 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2714, line: 32, baseType: !2737)
!2737 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !2537)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !273, line: 145, baseType: !125)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 32)
!2744 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2745, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2745 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2747, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2748, splitDebugInlining: false, nameTableKind: None)
!2747 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2748 = !{!140, !151, !125, !32}
!2749 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2750, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2750 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2751 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2752, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2753, splitDebugInlining: false, nameTableKind: None)
!2752 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2753 = !{!184, !503, !2754}
!2754 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !505, line: 66, baseType: !2755)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 32)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !505, line: 64, size: 1408, elements: !2757)
!2757 = !{!2758}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2756, file: !505, line: 65, baseType: !510, size: 1408)
!2759 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2760, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2761, splitDebugInlining: false, nameTableKind: None)
!2760 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2761 = !{!184, !2762, !150}
!2762 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !505, line: 66, baseType: !2763)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 32)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !505, line: 64, size: 1408, elements: !2765)
!2765 = !{!2766}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2764, file: !505, line: 65, baseType: !510, size: 1408)
!2767 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2768, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2769, splitDebugInlining: false, nameTableKind: None)
!2768 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2769 = !{!2770, !2776, !184, !150, !227}
!2770 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCCcmMode_t", file: !2771, line: 95, baseType: !2772)
!2771 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/ccm_mode.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 32)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2771, line: 91, size: 96, elements: !2774)
!2774 = !{!2775, !2781, !2782}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !2773, file: !2771, line: 92, baseType: !2776, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !505, line: 66, baseType: !2777)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 32)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !505, line: 64, size: 1408, elements: !2779)
!2779 = !{!2780}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2778, file: !505, line: 65, baseType: !510, size: 1408)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !2773, file: !2771, line: 93, baseType: !184, size: 32, offset: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !2773, file: !2771, line: 94, baseType: !32, size: 32, offset: 64)
!2783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2785, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2784 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2785 = !{!2786, !46}
!2786 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2787, line: 27, baseType: !32, size: 32, elements: !2788)
!2787 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2788 = !{!2789, !2790, !2791, !2792, !2793}
!2789 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2790 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2791 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2792 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2793 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2795, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2796, retainedTypes: !2797, splitDebugInlining: false, nameTableKind: None)
!2795 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2796 = !{!870, !2786, !46}
!2797 = !{!1015, !2798, !124, !125, !997, !208, !150, !2815}
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !693, line: 360, baseType: !2800)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 345, size: 28704, elements: !2801)
!2801 = !{!2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2800, file: !693, line: 347, baseType: !1942, size: 256)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2800, file: !693, line: 348, baseType: !1944, size: 768, offset: 256)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2800, file: !693, line: 349, baseType: !1942, size: 256, offset: 1024)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2800, file: !693, line: 350, baseType: !1944, size: 768, offset: 1280)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2800, file: !693, line: 351, baseType: !1942, size: 256, offset: 2048)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2800, file: !693, line: 352, baseType: !1944, size: 768, offset: 2304)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2800, file: !693, line: 353, baseType: !1942, size: 256, offset: 3072)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2800, file: !693, line: 354, baseType: !1944, size: 768, offset: 3328)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2800, file: !693, line: 355, baseType: !1942, size: 256, offset: 4096)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2800, file: !693, line: 356, baseType: !1955, size: 1792, offset: 4352)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2800, file: !693, line: 357, baseType: !1959, size: 1920, offset: 6144)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2800, file: !693, line: 358, baseType: !1964, size: 20608, offset: 8064)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2800, file: !693, line: 359, baseType: !423, size: 32, offset: 28672)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !693, line: 402, baseType: !2817)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 379, size: 1120, elements: !2818)
!2818 = !{!2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2817, file: !693, line: 381, baseType: !697, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2817, file: !693, line: 382, baseType: !423, size: 32, offset: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2817, file: !693, line: 383, baseType: !423, size: 32, offset: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2817, file: !693, line: 384, baseType: !423, size: 32, offset: 96)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2817, file: !693, line: 385, baseType: !423, size: 32, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2817, file: !693, line: 386, baseType: !423, size: 32, offset: 160)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2817, file: !693, line: 387, baseType: !1979, size: 96, offset: 192)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2817, file: !693, line: 388, baseType: !423, size: 32, offset: 288)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2817, file: !693, line: 389, baseType: !423, size: 32, offset: 320)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2817, file: !693, line: 390, baseType: !423, size: 32, offset: 352)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2817, file: !693, line: 391, baseType: !423, size: 32, offset: 384)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2817, file: !693, line: 392, baseType: !423, size: 32, offset: 416)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2817, file: !693, line: 393, baseType: !423, size: 32, offset: 448)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2817, file: !693, line: 394, baseType: !423, size: 32, offset: 480)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2817, file: !693, line: 395, baseType: !1988, size: 64, offset: 512)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2817, file: !693, line: 396, baseType: !697, size: 32, offset: 576)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2817, file: !693, line: 397, baseType: !697, size: 32, offset: 608)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2817, file: !693, line: 398, baseType: !1992, size: 128, offset: 640)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2817, file: !693, line: 399, baseType: !1994, size: 160, offset: 768)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2817, file: !693, line: 400, baseType: !1996, size: 160, offset: 928)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2817, file: !693, line: 401, baseType: !423, size: 32, offset: 1088)
!2840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2841, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2841 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2842 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2843, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2844, splitDebugInlining: false, nameTableKind: None)
!2843 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2844 = !{!124, !125, !22, !2845}
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !693, line: 402, baseType: !2847)
!2847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 379, size: 1120, elements: !2848)
!2848 = !{!2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2847, file: !693, line: 381, baseType: !697, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2847, file: !693, line: 382, baseType: !423, size: 32, offset: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2847, file: !693, line: 383, baseType: !423, size: 32, offset: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2847, file: !693, line: 384, baseType: !423, size: 32, offset: 96)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2847, file: !693, line: 385, baseType: !423, size: 32, offset: 128)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2847, file: !693, line: 386, baseType: !423, size: 32, offset: 160)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2847, file: !693, line: 387, baseType: !1979, size: 96, offset: 192)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2847, file: !693, line: 388, baseType: !423, size: 32, offset: 288)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2847, file: !693, line: 389, baseType: !423, size: 32, offset: 320)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2847, file: !693, line: 390, baseType: !423, size: 32, offset: 352)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2847, file: !693, line: 391, baseType: !423, size: 32, offset: 384)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2847, file: !693, line: 392, baseType: !423, size: 32, offset: 416)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2847, file: !693, line: 393, baseType: !423, size: 32, offset: 448)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2847, file: !693, line: 394, baseType: !423, size: 32, offset: 480)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2847, file: !693, line: 395, baseType: !1988, size: 64, offset: 512)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2847, file: !693, line: 396, baseType: !697, size: 32, offset: 576)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2847, file: !693, line: 397, baseType: !697, size: 32, offset: 608)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2847, file: !693, line: 398, baseType: !1992, size: 128, offset: 640)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2847, file: !693, line: 399, baseType: !1994, size: 160, offset: 768)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2847, file: !693, line: 400, baseType: !1996, size: 160, offset: 928)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2847, file: !693, line: 401, baseType: !423, size: 32, offset: 1088)
!2870 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2871, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2872, splitDebugInlining: false, nameTableKind: None)
!2871 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2872 = !{!2873, !124, !125}
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !693, line: 402, baseType: !2875)
!2875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 379, size: 1120, elements: !2876)
!2876 = !{!2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2875, file: !693, line: 381, baseType: !697, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2875, file: !693, line: 382, baseType: !423, size: 32, offset: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2875, file: !693, line: 383, baseType: !423, size: 32, offset: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2875, file: !693, line: 384, baseType: !423, size: 32, offset: 96)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2875, file: !693, line: 385, baseType: !423, size: 32, offset: 128)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2875, file: !693, line: 386, baseType: !423, size: 32, offset: 160)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2875, file: !693, line: 387, baseType: !1979, size: 96, offset: 192)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2875, file: !693, line: 388, baseType: !423, size: 32, offset: 288)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2875, file: !693, line: 389, baseType: !423, size: 32, offset: 320)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2875, file: !693, line: 390, baseType: !423, size: 32, offset: 352)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2875, file: !693, line: 391, baseType: !423, size: 32, offset: 384)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2875, file: !693, line: 392, baseType: !423, size: 32, offset: 416)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2875, file: !693, line: 393, baseType: !423, size: 32, offset: 448)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2875, file: !693, line: 394, baseType: !423, size: 32, offset: 480)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2875, file: !693, line: 395, baseType: !1988, size: 64, offset: 512)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2875, file: !693, line: 396, baseType: !697, size: 32, offset: 576)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2875, file: !693, line: 397, baseType: !697, size: 32, offset: 608)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2875, file: !693, line: 398, baseType: !1992, size: 128, offset: 640)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2875, file: !693, line: 399, baseType: !1994, size: 160, offset: 768)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2875, file: !693, line: 400, baseType: !1996, size: 160, offset: 928)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2875, file: !693, line: 401, baseType: !423, size: 32, offset: 1088)
!2898 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2899, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2900, splitDebugInlining: false, nameTableKind: None)
!2899 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2900 = !{!2901, !208, !124, !125}
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 32)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2903, line: 98, size: 256, elements: !2904)
!2903 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2904 = !{!2905, !2910, !2915, !2920, !2925, !2930, !2935, !2940}
!2905 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2903, line: 99, baseType: !2906, size: 32)
!2906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2903, line: 99, size: 32, elements: !2907)
!2907 = !{!2908, !2909}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2906, file: !2903, line: 99, baseType: !208, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2906, file: !2903, line: 99, baseType: !208, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2903, line: 100, baseType: !2911, size: 32, offset: 32)
!2911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2903, line: 100, size: 32, elements: !2912)
!2912 = !{!2913, !2914}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2911, file: !2903, line: 100, baseType: !208, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2911, file: !2903, line: 100, baseType: !208, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2903, line: 101, baseType: !2916, size: 32, offset: 64)
!2916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2903, line: 101, size: 32, elements: !2917)
!2917 = !{!2918, !2919}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2916, file: !2903, line: 101, baseType: !208, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2916, file: !2903, line: 101, baseType: !208, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2903, line: 102, baseType: !2921, size: 32, offset: 96)
!2921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2903, line: 102, size: 32, elements: !2922)
!2922 = !{!2923, !2924}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2921, file: !2903, line: 102, baseType: !208, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2921, file: !2903, line: 102, baseType: !208, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2903, line: 103, baseType: !2926, size: 32, offset: 128)
!2926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2903, line: 103, size: 32, elements: !2927)
!2927 = !{!2928, !2929}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2926, file: !2903, line: 103, baseType: !208, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2926, file: !2903, line: 103, baseType: !208, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2903, line: 104, baseType: !2931, size: 32, offset: 160)
!2931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2903, line: 104, size: 32, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2931, file: !2903, line: 104, baseType: !208, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2931, file: !2903, line: 104, baseType: !208, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !2903, line: 105, baseType: !2936, size: 32, offset: 192)
!2936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !2903, line: 105, size: 32, elements: !2937)
!2937 = !{!2938, !2939}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2936, file: !2903, line: 105, baseType: !208, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2936, file: !2903, line: 105, baseType: !208, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2902, file: !2903, line: 106, baseType: !208, size: 32, offset: 224)
!2941 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2942, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2785, retainedTypes: !2943, splitDebugInlining: false, nameTableKind: None)
!2942 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!2943 = !{!2944, !124, !125, !2969, !3012, !208}
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !693, line: 402, baseType: !2946)
!2946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 379, size: 1120, elements: !2947)
!2947 = !{!2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2946, file: !693, line: 381, baseType: !697, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2946, file: !693, line: 382, baseType: !423, size: 32, offset: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2946, file: !693, line: 383, baseType: !423, size: 32, offset: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2946, file: !693, line: 384, baseType: !423, size: 32, offset: 96)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2946, file: !693, line: 385, baseType: !423, size: 32, offset: 128)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2946, file: !693, line: 386, baseType: !423, size: 32, offset: 160)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2946, file: !693, line: 387, baseType: !1979, size: 96, offset: 192)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2946, file: !693, line: 388, baseType: !423, size: 32, offset: 288)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2946, file: !693, line: 389, baseType: !423, size: 32, offset: 320)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2946, file: !693, line: 390, baseType: !423, size: 32, offset: 352)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2946, file: !693, line: 391, baseType: !423, size: 32, offset: 384)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2946, file: !693, line: 392, baseType: !423, size: 32, offset: 416)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2946, file: !693, line: 393, baseType: !423, size: 32, offset: 448)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2946, file: !693, line: 394, baseType: !423, size: 32, offset: 480)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2946, file: !693, line: 395, baseType: !1988, size: 64, offset: 512)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2946, file: !693, line: 396, baseType: !697, size: 32, offset: 576)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2946, file: !693, line: 397, baseType: !697, size: 32, offset: 608)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2946, file: !693, line: 398, baseType: !1992, size: 128, offset: 640)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2946, file: !693, line: 399, baseType: !1994, size: 160, offset: 768)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2946, file: !693, line: 400, baseType: !1996, size: 160, offset: 928)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2946, file: !693, line: 401, baseType: !423, size: 32, offset: 1088)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2903, line: 141, baseType: !2971)
!2971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2903, line: 97, size: 256, elements: !2972)
!2972 = !{!2973}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2971, file: !2903, line: 107, baseType: !2974, size: 256)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2903, line: 98, size: 256, elements: !2975)
!2975 = !{!2976, !2981, !2986, !2991, !2996, !3001, !3006, !3011}
!2976 = !DIDerivedType(tag: DW_TAG_member, scope: !2974, file: !2903, line: 99, baseType: !2977, size: 32)
!2977 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2974, file: !2903, line: 99, size: 32, elements: !2978)
!2978 = !{!2979, !2980}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2977, file: !2903, line: 99, baseType: !208, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2977, file: !2903, line: 99, baseType: !208, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, scope: !2974, file: !2903, line: 100, baseType: !2982, size: 32, offset: 32)
!2982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2974, file: !2903, line: 100, size: 32, elements: !2983)
!2983 = !{!2984, !2985}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2982, file: !2903, line: 100, baseType: !208, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2982, file: !2903, line: 100, baseType: !208, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, scope: !2974, file: !2903, line: 101, baseType: !2987, size: 32, offset: 64)
!2987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2974, file: !2903, line: 101, size: 32, elements: !2988)
!2988 = !{!2989, !2990}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2987, file: !2903, line: 101, baseType: !208, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2987, file: !2903, line: 101, baseType: !208, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, scope: !2974, file: !2903, line: 102, baseType: !2992, size: 32, offset: 96)
!2992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2974, file: !2903, line: 102, size: 32, elements: !2993)
!2993 = !{!2994, !2995}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2992, file: !2903, line: 102, baseType: !208, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2992, file: !2903, line: 102, baseType: !208, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, scope: !2974, file: !2903, line: 103, baseType: !2997, size: 32, offset: 128)
!2997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2974, file: !2903, line: 103, size: 32, elements: !2998)
!2998 = !{!2999, !3000}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2997, file: !2903, line: 103, baseType: !208, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2997, file: !2903, line: 103, baseType: !208, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, scope: !2974, file: !2903, line: 104, baseType: !3002, size: 32, offset: 160)
!3002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2974, file: !2903, line: 104, size: 32, elements: !3003)
!3003 = !{!3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3002, file: !2903, line: 104, baseType: !208, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3002, file: !2903, line: 104, baseType: !208, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, scope: !2974, file: !2903, line: 105, baseType: !3007, size: 32, offset: 192)
!3007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2974, file: !2903, line: 105, size: 32, elements: !3008)
!3008 = !{!3009, !3010}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3007, file: !2903, line: 105, baseType: !208, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3007, file: !2903, line: 105, baseType: !208, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2974, file: !2903, line: 106, baseType: !208, size: 32, offset: 224)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!3013 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3014, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1925, retainedTypes: !3015, splitDebugInlining: false, nameTableKind: None)
!3014 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!3015 = !{!1015, !997, !150, !208, !3016, !3033}
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !693, line: 360, baseType: !3018)
!3018 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 345, size: 28704, elements: !3019)
!3019 = !{!3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3018, file: !693, line: 347, baseType: !1942, size: 256)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3018, file: !693, line: 348, baseType: !1944, size: 768, offset: 256)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3018, file: !693, line: 349, baseType: !1942, size: 256, offset: 1024)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3018, file: !693, line: 350, baseType: !1944, size: 768, offset: 1280)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3018, file: !693, line: 351, baseType: !1942, size: 256, offset: 2048)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3018, file: !693, line: 352, baseType: !1944, size: 768, offset: 2304)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3018, file: !693, line: 353, baseType: !1942, size: 256, offset: 3072)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3018, file: !693, line: 354, baseType: !1944, size: 768, offset: 3328)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3018, file: !693, line: 355, baseType: !1942, size: 256, offset: 4096)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3018, file: !693, line: 356, baseType: !1955, size: 1792, offset: 4352)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3018, file: !693, line: 357, baseType: !1959, size: 1920, offset: 6144)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3018, file: !693, line: 358, baseType: !1964, size: 20608, offset: 8064)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3018, file: !693, line: 359, baseType: !423, size: 32, offset: 28672)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 32)
!3034 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !693, line: 402, baseType: !3035)
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 379, size: 1120, elements: !3036)
!3036 = !{!3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3035, file: !693, line: 381, baseType: !697, size: 32)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3035, file: !693, line: 382, baseType: !423, size: 32, offset: 32)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3035, file: !693, line: 383, baseType: !423, size: 32, offset: 64)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3035, file: !693, line: 384, baseType: !423, size: 32, offset: 96)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3035, file: !693, line: 385, baseType: !423, size: 32, offset: 128)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3035, file: !693, line: 386, baseType: !423, size: 32, offset: 160)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3035, file: !693, line: 387, baseType: !1979, size: 96, offset: 192)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3035, file: !693, line: 388, baseType: !423, size: 32, offset: 288)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3035, file: !693, line: 389, baseType: !423, size: 32, offset: 320)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3035, file: !693, line: 390, baseType: !423, size: 32, offset: 352)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3035, file: !693, line: 391, baseType: !423, size: 32, offset: 384)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3035, file: !693, line: 392, baseType: !423, size: 32, offset: 416)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3035, file: !693, line: 393, baseType: !423, size: 32, offset: 448)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3035, file: !693, line: 394, baseType: !423, size: 32, offset: 480)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3035, file: !693, line: 395, baseType: !1988, size: 64, offset: 512)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3035, file: !693, line: 396, baseType: !697, size: 32, offset: 576)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3035, file: !693, line: 397, baseType: !697, size: 32, offset: 608)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3035, file: !693, line: 398, baseType: !1992, size: 128, offset: 640)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3035, file: !693, line: 399, baseType: !1994, size: 160, offset: 768)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3035, file: !693, line: 400, baseType: !1996, size: 160, offset: 928)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3035, file: !693, line: 401, baseType: !423, size: 32, offset: 1088)
!3058 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3059, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3060, splitDebugInlining: false, nameTableKind: None)
!3059 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!3060 = !{!3061, !124, !125}
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 32)
!3062 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !693, line: 402, baseType: !3063)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 379, size: 1120, elements: !3064)
!3064 = !{!3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3063, file: !693, line: 381, baseType: !697, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3063, file: !693, line: 382, baseType: !423, size: 32, offset: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3063, file: !693, line: 383, baseType: !423, size: 32, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3063, file: !693, line: 384, baseType: !423, size: 32, offset: 96)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3063, file: !693, line: 385, baseType: !423, size: 32, offset: 128)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3063, file: !693, line: 386, baseType: !423, size: 32, offset: 160)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3063, file: !693, line: 387, baseType: !1979, size: 96, offset: 192)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3063, file: !693, line: 388, baseType: !423, size: 32, offset: 288)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3063, file: !693, line: 389, baseType: !423, size: 32, offset: 320)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3063, file: !693, line: 390, baseType: !423, size: 32, offset: 352)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3063, file: !693, line: 391, baseType: !423, size: 32, offset: 384)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3063, file: !693, line: 392, baseType: !423, size: 32, offset: 416)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3063, file: !693, line: 393, baseType: !423, size: 32, offset: 448)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3063, file: !693, line: 394, baseType: !423, size: 32, offset: 480)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3063, file: !693, line: 395, baseType: !1988, size: 64, offset: 512)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3063, file: !693, line: 396, baseType: !697, size: 32, offset: 576)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3063, file: !693, line: 397, baseType: !697, size: 32, offset: 608)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3063, file: !693, line: 398, baseType: !1992, size: 128, offset: 640)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3063, file: !693, line: 399, baseType: !1994, size: 160, offset: 768)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3063, file: !693, line: 400, baseType: !1996, size: 160, offset: 928)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3063, file: !693, line: 401, baseType: !423, size: 32, offset: 1088)
!3086 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3087, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3088, splitDebugInlining: false, nameTableKind: None)
!3087 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!3088 = !{!142, !393, !272, !1195, !3089, !151, !124}
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 32)
!3090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!3091 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3092, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3093, splitDebugInlining: false, nameTableKind: None)
!3092 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!3093 = !{!3094}
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 32)
!3095 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 386, baseType: !3096)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 370, size: 448, elements: !3097)
!3097 = !{!3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3096, file: !419, line: 372, baseType: !423, size: 32)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3096, file: !419, line: 373, baseType: !423, size: 32, offset: 32)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3096, file: !419, line: 374, baseType: !423, size: 32, offset: 64)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3096, file: !419, line: 375, baseType: !423, size: 32, offset: 96)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3096, file: !419, line: 376, baseType: !423, size: 32, offset: 128)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3096, file: !419, line: 377, baseType: !423, size: 32, offset: 160)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3096, file: !419, line: 378, baseType: !423, size: 32, offset: 192)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3096, file: !419, line: 379, baseType: !423, size: 32, offset: 224)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3096, file: !419, line: 380, baseType: !423, size: 32, offset: 256)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3096, file: !419, line: 381, baseType: !423, size: 32, offset: 288)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3096, file: !419, line: 382, baseType: !423, size: 32, offset: 320)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3096, file: !419, line: 383, baseType: !423, size: 32, offset: 352)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3096, file: !419, line: 384, baseType: !423, size: 32, offset: 384)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3096, file: !419, line: 385, baseType: !423, size: 32, offset: 416)
!3112 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3113, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3113 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!3114 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3115, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3116, retainedTypes: !3132, splitDebugInlining: false, nameTableKind: None)
!3115 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!3116 = !{!3117, !3124, !3128}
!3117 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3118, line: 39, baseType: !32, size: 32, elements: !3119)
!3118 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3119 = !{!3120, !3121, !3122, !3123}
!3120 = !DIEnumerator(name: "HAL_OK", value: 0)
!3121 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3122 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3123 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3124 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1054, line: 183, baseType: !32, size: 32, elements: !3125)
!3125 = !{!3126, !3127}
!3126 = !DIEnumerator(name: "DISABLE", value: 0)
!3127 = !DIEnumerator(name: "ENABLE", value: 1)
!3128 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1054, line: 177, baseType: !32, size: 32, elements: !3129)
!3129 = !{!3130, !3131}
!3130 = !DIEnumerator(name: "RESET", value: 0)
!3131 = !DIEnumerator(name: "SET", value: 1)
!3132 = !{!3133, !124, !208, !150, !3151, !3152, !3158, !227, !3171, !2536, !3184}
!3133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 32)
!3134 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 386, baseType: !3135)
!3135 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 370, size: 448, elements: !3136)
!3136 = !{!3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3135, file: !419, line: 372, baseType: !423, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3135, file: !419, line: 373, baseType: !423, size: 32, offset: 32)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3135, file: !419, line: 374, baseType: !423, size: 32, offset: 64)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3135, file: !419, line: 375, baseType: !423, size: 32, offset: 96)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3135, file: !419, line: 376, baseType: !423, size: 32, offset: 128)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3135, file: !419, line: 377, baseType: !423, size: 32, offset: 160)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3135, file: !419, line: 378, baseType: !423, size: 32, offset: 192)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3135, file: !419, line: 379, baseType: !423, size: 32, offset: 224)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3135, file: !419, line: 380, baseType: !423, size: 32, offset: 256)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3135, file: !419, line: 381, baseType: !423, size: 32, offset: 288)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3135, file: !419, line: 382, baseType: !423, size: 32, offset: 320)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3135, file: !419, line: 383, baseType: !423, size: 32, offset: 352)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3135, file: !419, line: 384, baseType: !423, size: 32, offset: 384)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3135, file: !419, line: 385, baseType: !423, size: 32, offset: 416)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 32)
!3153 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 364, baseType: !3154)
!3154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 360, size: 64, elements: !3155)
!3155 = !{!3156, !3157}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3154, file: !419, line: 362, baseType: !423, size: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3154, file: !419, line: 363, baseType: !423, size: 32, offset: 32)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 32)
!3159 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 286, baseType: !3160)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 275, size: 288, elements: !3161)
!3161 = !{!3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3160, file: !419, line: 277, baseType: !423, size: 32)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3160, file: !419, line: 278, baseType: !423, size: 32, offset: 32)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3160, file: !419, line: 279, baseType: !423, size: 32, offset: 64)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3160, file: !419, line: 280, baseType: !423, size: 32, offset: 96)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3160, file: !419, line: 281, baseType: !423, size: 32, offset: 128)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3160, file: !419, line: 282, baseType: !423, size: 32, offset: 160)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3160, file: !419, line: 283, baseType: !423, size: 32, offset: 192)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3160, file: !419, line: 284, baseType: !423, size: 32, offset: 224)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3160, file: !419, line: 285, baseType: !423, size: 32, offset: 256)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 314, baseType: !3173)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 303, size: 320, elements: !3174)
!3174 = !{!3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3173, file: !419, line: 305, baseType: !423, size: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3173, file: !419, line: 306, baseType: !423, size: 32, offset: 32)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3173, file: !419, line: 307, baseType: !423, size: 32, offset: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3173, file: !419, line: 308, baseType: !423, size: 32, offset: 96)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3173, file: !419, line: 309, baseType: !423, size: 32, offset: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3173, file: !419, line: 310, baseType: !423, size: 32, offset: 160)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3173, file: !419, line: 311, baseType: !423, size: 32, offset: 192)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3173, file: !419, line: 312, baseType: !423, size: 32, offset: 224)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3173, file: !419, line: 313, baseType: !1514, size: 64, offset: 256)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 32)
!3185 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3186, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3187, retainedTypes: !3188, splitDebugInlining: false, nameTableKind: None)
!3186 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!3187 = !{!1053}
!3188 = !{!3189, !208, !3197, !3203, !3216}
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 32)
!3190 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !693, line: 712, baseType: !3191)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 706, size: 128, elements: !3192)
!3192 = !{!3193, !3194, !3195, !3196}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3191, file: !693, line: 708, baseType: !423, size: 32)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3191, file: !693, line: 709, baseType: !423, size: 32, offset: 32)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3191, file: !693, line: 710, baseType: !423, size: 32, offset: 64)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3191, file: !693, line: 711, baseType: !697, size: 32, offset: 96)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3198 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 364, baseType: !3199)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 360, size: 64, elements: !3200)
!3200 = !{!3201, !3202}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3199, file: !419, line: 362, baseType: !423, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3199, file: !419, line: 363, baseType: !423, size: 32, offset: 32)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 32)
!3204 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 286, baseType: !3205)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 275, size: 288, elements: !3206)
!3206 = !{!3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3205, file: !419, line: 277, baseType: !423, size: 32)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3205, file: !419, line: 278, baseType: !423, size: 32, offset: 32)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3205, file: !419, line: 279, baseType: !423, size: 32, offset: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3205, file: !419, line: 280, baseType: !423, size: 32, offset: 96)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3205, file: !419, line: 281, baseType: !423, size: 32, offset: 128)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3205, file: !419, line: 282, baseType: !423, size: 32, offset: 160)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3205, file: !419, line: 283, baseType: !423, size: 32, offset: 192)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3205, file: !419, line: 284, baseType: !423, size: 32, offset: 224)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3205, file: !419, line: 285, baseType: !423, size: 32, offset: 256)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 386, baseType: !3218)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 370, size: 448, elements: !3219)
!3219 = !{!3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3218, file: !419, line: 372, baseType: !423, size: 32)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3218, file: !419, line: 373, baseType: !423, size: 32, offset: 32)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3218, file: !419, line: 374, baseType: !423, size: 32, offset: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3218, file: !419, line: 375, baseType: !423, size: 32, offset: 96)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3218, file: !419, line: 376, baseType: !423, size: 32, offset: 128)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3218, file: !419, line: 377, baseType: !423, size: 32, offset: 160)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3218, file: !419, line: 378, baseType: !423, size: 32, offset: 192)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3218, file: !419, line: 379, baseType: !423, size: 32, offset: 224)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3218, file: !419, line: 380, baseType: !423, size: 32, offset: 256)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3218, file: !419, line: 381, baseType: !423, size: 32, offset: 288)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3218, file: !419, line: 382, baseType: !423, size: 32, offset: 320)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3218, file: !419, line: 383, baseType: !423, size: 32, offset: 352)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3218, file: !419, line: 384, baseType: !423, size: 32, offset: 384)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3218, file: !419, line: 385, baseType: !423, size: 32, offset: 416)
!3234 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3235, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3236, splitDebugInlining: false, nameTableKind: None)
!3235 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!3236 = !{!124, !272}
!3237 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3238, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3239, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3238 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!3239 = !{!3240, !3247, !46}
!3240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3241, line: 14, baseType: !32, size: 32, elements: !3242)
!3241 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3242 = !{!3243, !3244, !3245, !3246}
!3243 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3244 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3245 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3246 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3247 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3241, line: 42, baseType: !32, size: 32, elements: !3248)
!3248 = !{!3249, !3250, !3251, !3252, !3253, !3254}
!3249 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3250 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3251 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3252 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3253 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3254 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3255 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3256, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3256 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!3257 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3258, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3259, splitDebugInlining: false, nameTableKind: None)
!3258 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!3259 = !{!22, !124, !125}
!3260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!3262 = !{!"Ubuntu clang version 14.0.6"}
!3263 = !{i32 7, !"Dwarf Version", i32 4}
!3264 = !{i32 2, !"Debug Info Version", i32 3}
!3265 = !{i32 1, !"wchar_size", i32 4}
!3266 = !{i32 1, !"min_enum_size", i32 4}
!3267 = !{i32 1, !"branch-target-enforcement", i32 0}
!3268 = !{i32 1, !"sign-return-address", i32 0}
!3269 = !{i32 1, !"sign-return-address-all", i32 0}
!3270 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3271 = !{i32 7, !"frame-pointer", i32 2}
!3272 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3273, file: !3273, line: 26, type: !3274, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !652)
!3273 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3274 = !DISubroutineType(types: !3275)
!3275 = !{null}
!3276 = !DILocation(line: 28, column: 1, scope: !3272)
!3277 = !{i64 2152484762, i64 2152484782, i64 2152484845}
!3278 = !DILocation(line: 29, column: 1, scope: !3272)
!3279 = !{i64 2152485177, i64 2152485197, i64 2152485260}
!3280 = !DILocation(line: 30, column: 1, scope: !3272)
!3281 = !{i64 2152489657, i64 2152489677, i64 2152489740}
!3282 = !DILocation(line: 31, column: 1, scope: !3272)
!3283 = !{i64 2152490076, i64 2152490096, i64 2152490159}
!3284 = !DILocation(line: 33, column: 1, scope: !3272)
!3285 = !{i64 2152490368, i64 2152490388, i64 2152490451}
!3286 = !DILocation(line: 35, column: 1, scope: !3272)
!3287 = !{i64 2152490693, i64 2152490713, i64 2152490776}
!3288 = !DILocation(line: 50, column: 1, scope: !3272)
!3289 = !{i64 2152491120, i64 2152491140, i64 2152491203}
!3290 = !DILocation(line: 54, column: 1, scope: !3272)
!3291 = !{i64 2152491559, i64 2152491579, i64 2152491642}
!3292 = !DILocation(line: 61, column: 1, scope: !3272)
!3293 = !{i64 2152491876, i64 2152491896, i64 2152491959}
!3294 = !DILocation(line: 63, column: 1, scope: !3272)
!3295 = !{i64 2152492256, i64 2152492276, i64 2152492339}
!3296 = !DILocation(line: 64, column: 1, scope: !3272)
!3297 = !{i64 2152492778, i64 2152492798, i64 2152492861}
!3298 = !DILocation(line: 65, column: 1, scope: !3272)
!3299 = !{i64 2152493276, i64 2152493296, i64 2152493359}
!3300 = !DILocation(line: 66, column: 1, scope: !3272)
!3301 = !{i64 2152493758, i64 2152493778, i64 2152493841}
!3302 = !DILocation(line: 67, column: 1, scope: !3272)
!3303 = !{i64 2152494265, i64 2152494285, i64 2152494348}
!3304 = !DILocation(line: 68, column: 1, scope: !3272)
!3305 = !{i64 2152494753, i64 2152494773, i64 2152494836}
!3306 = !DILocation(line: 70, column: 1, scope: !3272)
!3307 = !{i64 2152495221, i64 2152495241, i64 2152495304}
!3308 = !DILocation(line: 71, column: 1, scope: !3272)
!3309 = !{i64 2152495663, i64 2152495683, i64 2152495746}
!3310 = !DILocation(line: 72, column: 1, scope: !3272)
!3311 = !{i64 2152496121, i64 2152496141, i64 2152496204}
!3312 = !DILocation(line: 79, column: 1, scope: !3272)
!3313 = !{i64 2152496575, i64 2152496595, i64 2152496658}
!3314 = !DILocation(line: 80, column: 1, scope: !3272)
!3315 = !{i64 2152497086, i64 2152497106, i64 2152497169}
!3316 = !DILocation(line: 82, column: 1, scope: !3272)
!3317 = !{i64 2152497577, i64 2152497597, i64 2152497660}
!3318 = !DILocation(line: 97, column: 1, scope: !3272)
!3319 = !{i64 2152497914, i64 2152497934, i64 2152497997}
!3320 = !DILocation(line: 99, column: 1, scope: !3272)
!3321 = !{i64 2152498132, i64 2152498152, i64 2152498215}
!3322 = !DILocation(line: 102, column: 1, scope: !3272)
!3323 = !{i64 2152498389, i64 2152498409, i64 2152498472}
!3324 = !DILocation(line: 105, column: 1, scope: !3272)
!3325 = !{i64 2152498629, i64 2152498649, i64 2152498712}
!3326 = !DILocation(line: 115, column: 1, scope: !3272)
!3327 = !{i64 2152498968, i64 2152498988, i64 2152499051}
!3328 = !DILocation(line: 118, column: 1, scope: !3272)
!3329 = !{i64 2152503373, i64 2152503393, i64 2152503456}
!3330 = !DILocation(line: 32, column: 1, scope: !3331)
!3331 = !DILexicalBlockFile(scope: !3272, file: !3332, discriminator: 0)
!3332 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3333 = !{i64 2152503729, i64 2152503749, i64 2152503812}
!3334 = !DILocation(line: 33, column: 1, scope: !3331)
!3335 = !{i64 2152504241, i64 2152504261, i64 2152504324}
!3336 = !DILocation(line: 53, column: 1, scope: !3331)
!3337 = !{i64 2152504749, i64 2152504769, i64 2152504832}
!3338 = !DILocation(line: 54, column: 1, scope: !3331)
!3339 = !{i64 2152505167, i64 2152505187, i64 2152505250}
!3340 = !DILocation(line: 55, column: 1, scope: !3331)
!3341 = !{i64 2152505585, i64 2152505605, i64 2152505668}
!3342 = !DILocation(line: 56, column: 1, scope: !3331)
!3343 = !{i64 2152506003, i64 2152506023, i64 2152506086}
!3344 = !DILocation(line: 57, column: 1, scope: !3331)
!3345 = !{i64 2152506421, i64 2152506441, i64 2152506504}
!3346 = !DILocation(line: 58, column: 1, scope: !3331)
!3347 = !{i64 2152506839, i64 2152506859, i64 2152506922}
!3348 = !DILocation(line: 59, column: 1, scope: !3331)
!3349 = !{i64 2152507257, i64 2152507277, i64 2152507340}
!3350 = !DILocation(line: 60, column: 1, scope: !3331)
!3351 = !{i64 2152507681, i64 2152507701, i64 2152507764}
!3352 = !DILocation(line: 61, column: 1, scope: !3331)
!3353 = !{i64 2152507998, i64 2152508018, i64 2152508081}
!3354 = !DILocation(line: 70, column: 1, scope: !3331)
!3355 = !{i64 2152508227, i64 2152508247, i64 2152508310}
!3356 = !DILocation(line: 72, column: 1, scope: !3331)
!3357 = !{i64 2152508559, i64 2152508579, i64 2152508642}
!3358 = !DILocation(line: 73, column: 1, scope: !3331)
!3359 = !{i64 2152509009, i64 2152509029, i64 2152509092}
!3360 = !DILocation(line: 74, column: 1, scope: !3331)
!3361 = !{i64 2152509459, i64 2152509479, i64 2152509542}
!3362 = !DILocation(line: 75, column: 1, scope: !3331)
!3363 = !{i64 2152509909, i64 2152509929, i64 2152509992}
!3364 = !DILocation(line: 76, column: 1, scope: !3331)
!3365 = !{i64 2152510359, i64 2152510379, i64 2152510442}
!3366 = !DILocation(line: 77, column: 1, scope: !3331)
!3367 = !{i64 2152510809, i64 2152510829, i64 2152510892}
!3368 = !DILocation(line: 78, column: 1, scope: !3331)
!3369 = !{i64 2152511259, i64 2152511279, i64 2152511342}
!3370 = !DILocation(line: 79, column: 1, scope: !3331)
!3371 = !{i64 2152511709, i64 2152511729, i64 2152511792}
!3372 = !DILocation(line: 80, column: 1, scope: !3331)
!3373 = !{i64 2152512162, i64 2152512182, i64 2152512245}
!3374 = !DILocation(line: 84, column: 1, scope: !3331)
!3375 = !{i64 2152516555, i64 2152516575, i64 2152516638}
!3376 = !DILocation(line: 91, column: 1, scope: !3331)
!3377 = !{i64 2152516952, i64 2152516972, i64 2152517035}
!3378 = !DILocation(line: 93, column: 1, scope: !3331)
!3379 = !{i64 2152517319, i64 2152517339, i64 2152517402}
!3380 = !DILocation(line: 106, column: 1, scope: !3331)
!3381 = !{i64 2152517589, i64 2152517609, i64 2152517672}
!3382 = !DILocation(line: 11, column: 1, scope: !3383)
!3383 = !DILexicalBlockFile(scope: !3272, file: !3384, discriminator: 0)
!3384 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3385 = distinct !DISubprogram(name: "validate_hw_compatibility", scope: !294, file: !294, line: 80, type: !132, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3386)
!3386 = !{!3387, !3388}
!3387 = !DILocalVariable(name: "dev", arg: 1, scope: !3385, file: !294, line: 80, type: !134)
!3388 = !DILocalVariable(name: "flags", scope: !3385, file: !294, line: 82, type: !208)
!3389 = !DILocation(line: 0, scope: !3385)
!3390 = !DILocation(line: 84, column: 10, scope: !3385)
!3391 = !DILocation(line: 85, column: 13, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3385, file: !294, line: 85, column: 6)
!3393 = !DILocation(line: 85, column: 28, scope: !3392)
!3394 = !DILocation(line: 85, column: 6, scope: !3385)
!3395 = !DILocation(line: 86, column: 3, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !294, line: 86, column: 3)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !294, line: 86, column: 3)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !294, line: 86, column: 3)
!3399 = distinct !DILexicalBlock(scope: !3400, file: !294, line: 86, column: 3)
!3400 = distinct !DILexicalBlock(scope: !3392, file: !294, line: 85, column: 35)
!3401 = !DILocation(line: 88, column: 3, scope: !3400)
!3402 = !DILocation(line: 91, column: 13, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3385, file: !294, line: 91, column: 6)
!3404 = !DILocation(line: 91, column: 29, scope: !3403)
!3405 = !DILocation(line: 91, column: 6, scope: !3385)
!3406 = !DILocation(line: 92, column: 3, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !294, line: 92, column: 3)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !294, line: 92, column: 3)
!3409 = distinct !DILexicalBlock(scope: !3410, file: !294, line: 92, column: 3)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !294, line: 92, column: 3)
!3411 = distinct !DILexicalBlock(scope: !3403, file: !294, line: 91, column: 36)
!3412 = !DILocation(line: 94, column: 3, scope: !3411)
!3413 = !DILocation(line: 97, column: 13, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3385, file: !294, line: 97, column: 6)
!3415 = !DILocation(line: 97, column: 37, scope: !3414)
!3416 = !DILocation(line: 97, column: 6, scope: !3385)
!3417 = !DILocation(line: 98, column: 3, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3419, file: !294, line: 98, column: 3)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !294, line: 98, column: 3)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !294, line: 98, column: 3)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !294, line: 98, column: 3)
!3422 = distinct !DILexicalBlock(scope: !3414, file: !294, line: 97, column: 44)
!3423 = !DILocation(line: 100, column: 3, scope: !3422)
!3424 = !DILocation(line: 103, column: 12, scope: !3385)
!3425 = !DILocation(line: 105, column: 2, scope: !3385)
!3426 = !DILocation(line: 107, column: 1, scope: !3385)
!3427 = distinct !DISubprogram(name: "crypto_query_hwcaps", scope: !128, file: !128, line: 108, type: !132, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3428)
!3428 = !{!3429, !3430, !3431}
!3429 = !DILocalVariable(name: "dev", arg: 1, scope: !3427, file: !128, line: 108, type: !134)
!3430 = !DILocalVariable(name: "api", scope: !3427, file: !128, line: 110, type: !126)
!3431 = !DILocalVariable(name: "tmp", scope: !3427, file: !128, line: 111, type: !125)
!3432 = !DILocation(line: 0, scope: !3427)
!3433 = !DILocation(line: 113, column: 42, scope: !3427)
!3434 = !DILocation(line: 115, column: 13, scope: !3427)
!3435 = !DILocation(line: 115, column: 8, scope: !3427)
!3436 = !DILocation(line: 125, column: 2, scope: !3427)
!3437 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3438, file: !3438, line: 175, type: !3439, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3441)
!3438 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3439 = !DISubroutineType(types: !3440)
!3440 = !{!142, !125}
!3441 = !{!3442}
!3442 = !DILocalVariable(name: "level", arg: 1, scope: !3437, file: !3438, line: 175, type: !125)
!3443 = !DILocation(line: 0, scope: !3437)
!3444 = !DILocation(line: 177, column: 2, scope: !3437)
!3445 = !DILocation(line: 189, column: 1, scope: !3437)
!3446 = distinct !DISubprogram(name: "ecb_mode", scope: !294, file: !294, line: 109, type: !295, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3447)
!3447 = !{!3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457}
!3448 = !DILocalVariable(name: "dev", arg: 1, scope: !3446, file: !294, line: 109, type: !134)
!3449 = !DILocalVariable(name: "ecb_key", scope: !3446, file: !294, line: 112, type: !311)
!3450 = !DILocalVariable(name: "ecb_plaintext", scope: !3446, file: !294, line: 116, type: !311)
!3451 = !DILocalVariable(name: "ecb_ciphertext", scope: !3446, file: !294, line: 120, type: !2153)
!3452 = !DILocalVariable(name: "encrypted", scope: !3446, file: !294, line: 125, type: !311)
!3453 = !DILocalVariable(name: "decrypted", scope: !3446, file: !294, line: 126, type: !311)
!3454 = !DILocalVariable(name: "ini", scope: !3446, file: !294, line: 127, type: !166)
!3455 = !DILocalVariable(name: "encrypt", scope: !3446, file: !294, line: 132, type: !181)
!3456 = !DILocalVariable(name: "decrypt", scope: !3446, file: !294, line: 138, type: !181)
!3457 = !DILabel(scope: !3446, name: "out", file: !294, line: 191)
!3458 = !DILocation(line: 0, scope: !3446)
!3459 = !DILocation(line: 112, column: 2, scope: !3446)
!3460 = !DILocation(line: 112, column: 10, scope: !3446)
!3461 = !DILocation(line: 116, column: 2, scope: !3446)
!3462 = !DILocation(line: 116, column: 10, scope: !3446)
!3463 = !DILocation(line: 120, column: 2, scope: !3446)
!3464 = !DILocation(line: 120, column: 16, scope: !3446)
!3465 = !DILocation(line: 125, column: 2, scope: !3446)
!3466 = !DILocation(line: 125, column: 10, scope: !3446)
!3467 = !DILocation(line: 126, column: 2, scope: !3446)
!3468 = !DILocation(line: 126, column: 10, scope: !3446)
!3469 = !DILocation(line: 127, column: 2, scope: !3446)
!3470 = !DILocation(line: 127, column: 20, scope: !3446)
!3471 = !DILocation(line: 129, column: 7, scope: !3446)
!3472 = !DILocation(line: 127, column: 26, scope: !3446)
!3473 = !DILocation(line: 130, column: 12, scope: !3446)
!3474 = !DILocation(line: 132, column: 2, scope: !3446)
!3475 = !DILocation(line: 132, column: 20, scope: !3446)
!3476 = !DILocation(line: 132, column: 30, scope: !3446)
!3477 = !DILocation(line: 138, column: 2, scope: !3446)
!3478 = !DILocation(line: 138, column: 20, scope: !3446)
!3479 = !DILocation(line: 138, column: 30, scope: !3446)
!3480 = !DILocation(line: 145, column: 6, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3446, file: !294, line: 145, column: 6)
!3482 = !DILocation(line: 145, column: 6, scope: !3446)
!3483 = !DILocation(line: 151, column: 6, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3446, file: !294, line: 151, column: 6)
!3485 = !DILocation(line: 151, column: 6, scope: !3446)
!3486 = !DILocation(line: 152, column: 3, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !294, line: 152, column: 3)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !294, line: 152, column: 3)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !294, line: 152, column: 3)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !294, line: 152, column: 3)
!3491 = distinct !DILexicalBlock(scope: !3484, file: !294, line: 151, column: 39)
!3492 = !DILocation(line: 153, column: 3, scope: !3491)
!3493 = !DILocation(line: 156, column: 2, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !294, line: 156, column: 2)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !294, line: 156, column: 2)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !294, line: 156, column: 2)
!3497 = distinct !DILexicalBlock(scope: !3446, file: !294, line: 156, column: 2)
!3498 = !DILocation(line: 158, column: 21, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3446, file: !294, line: 158, column: 6)
!3500 = !DILocation(line: 158, column: 6, scope: !3499)
!3501 = !DILocation(line: 158, column: 6, scope: !3446)
!3502 = !DILocation(line: 159, column: 3, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !294, line: 159, column: 3)
!3504 = distinct !DILexicalBlock(scope: !3505, file: !294, line: 159, column: 3)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !294, line: 159, column: 3)
!3506 = distinct !DILexicalBlock(scope: !3507, file: !294, line: 159, column: 3)
!3507 = distinct !DILexicalBlock(scope: !3499, file: !294, line: 158, column: 71)
!3508 = !DILocation(line: 161, column: 51, scope: !3507)
!3509 = !DILocation(line: 161, column: 3, scope: !3507)
!3510 = !DILocation(line: 163, column: 3, scope: !3507)
!3511 = !DILocation(line: 166, column: 2, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !294, line: 166, column: 2)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !294, line: 166, column: 2)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !294, line: 166, column: 2)
!3515 = distinct !DILexicalBlock(scope: !3446, file: !294, line: 166, column: 2)
!3516 = !DILocation(line: 167, column: 2, scope: !3446)
!3517 = !DILocation(line: 169, column: 6, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3446, file: !294, line: 169, column: 6)
!3519 = !DILocation(line: 169, column: 6, scope: !3446)
!3520 = !DILocation(line: 175, column: 6, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3446, file: !294, line: 175, column: 6)
!3522 = !DILocation(line: 175, column: 6, scope: !3446)
!3523 = !DILocation(line: 176, column: 3, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !294, line: 176, column: 3)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !294, line: 176, column: 3)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !294, line: 176, column: 3)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !294, line: 176, column: 3)
!3528 = distinct !DILexicalBlock(scope: !3521, file: !294, line: 175, column: 39)
!3529 = !DILocation(line: 177, column: 3, scope: !3528)
!3530 = !DILocation(line: 180, column: 2, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !294, line: 180, column: 2)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !294, line: 180, column: 2)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !294, line: 180, column: 2)
!3534 = distinct !DILexicalBlock(scope: !3446, file: !294, line: 180, column: 2)
!3535 = !DILocation(line: 182, column: 21, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3446, file: !294, line: 182, column: 6)
!3537 = !DILocation(line: 182, column: 6, scope: !3536)
!3538 = !DILocation(line: 182, column: 6, scope: !3446)
!3539 = !DILocation(line: 183, column: 3, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3541, file: !294, line: 183, column: 3)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !294, line: 183, column: 3)
!3542 = distinct !DILexicalBlock(scope: !3543, file: !294, line: 183, column: 3)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !294, line: 183, column: 3)
!3544 = distinct !DILexicalBlock(scope: !3536, file: !294, line: 182, column: 69)
!3545 = !DILocation(line: 185, column: 50, scope: !3544)
!3546 = !DILocation(line: 185, column: 3, scope: !3544)
!3547 = !DILocation(line: 187, column: 3, scope: !3544)
!3548 = !DILocation(line: 190, column: 2, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3550, file: !294, line: 190, column: 2)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !294, line: 190, column: 2)
!3551 = distinct !DILexicalBlock(scope: !3552, file: !294, line: 190, column: 2)
!3552 = distinct !DILexicalBlock(scope: !3446, file: !294, line: 190, column: 2)
!3553 = !DILocation(line: 190, column: 2, scope: !3552)
!3554 = !DILocation(line: 191, column: 1, scope: !3446)
!3555 = !DILocation(line: 192, column: 2, scope: !3446)
!3556 = !DILocation(line: 193, column: 1, scope: !3446)
!3557 = distinct !DISubprogram(name: "cipher_begin_session", scope: !128, file: !128, line: 159, type: !163, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3558)
!3558 = !{!3559, !3560, !3561, !3562, !3563, !3564, !3565}
!3559 = !DILocalVariable(name: "dev", arg: 1, scope: !3557, file: !128, line: 159, type: !134)
!3560 = !DILocalVariable(name: "ctx", arg: 2, scope: !3557, file: !128, line: 160, type: !165)
!3561 = !DILocalVariable(name: "algo", arg: 3, scope: !3557, file: !128, line: 161, type: !39)
!3562 = !DILocalVariable(name: "mode", arg: 4, scope: !3557, file: !128, line: 162, type: !30)
!3563 = !DILocalVariable(name: "optype", arg: 5, scope: !3557, file: !128, line: 163, type: !42)
!3564 = !DILocalVariable(name: "api", scope: !3557, file: !128, line: 165, type: !126)
!3565 = !DILocalVariable(name: "flags", scope: !3557, file: !128, line: 166, type: !208)
!3566 = !DILocation(line: 0, scope: !3557)
!3567 = !DILocation(line: 168, column: 42, scope: !3557)
!3568 = !DILocation(line: 169, column: 7, scope: !3557)
!3569 = !DILocation(line: 169, column: 14, scope: !3557)
!3570 = !DILocation(line: 170, column: 11, scope: !3557)
!3571 = !DILocation(line: 170, column: 23, scope: !3557)
!3572 = !DILocation(line: 187, column: 14, scope: !3557)
!3573 = !DILocation(line: 187, column: 9, scope: !3557)
!3574 = !DILocation(line: 187, column: 2, scope: !3557)
!3575 = distinct !DISubprogram(name: "cipher_block_op", scope: !128, file: !128, line: 249, type: !178, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3576)
!3576 = !{!3577, !3578}
!3577 = !DILocalVariable(name: "ctx", arg: 1, scope: !3575, file: !128, line: 249, type: !165)
!3578 = !DILocalVariable(name: "pkt", arg: 2, scope: !3575, file: !128, line: 250, type: !180)
!3579 = !DILocation(line: 0, scope: !3575)
!3580 = !DILocation(line: 255, column: 7, scope: !3575)
!3581 = !DILocation(line: 255, column: 11, scope: !3575)
!3582 = !DILocation(line: 256, column: 18, scope: !3575)
!3583 = !DILocation(line: 256, column: 9, scope: !3575)
!3584 = !DILocation(line: 256, column: 2, scope: !3575)
!3585 = distinct !DISubprogram(name: "print_buffer_comparison", scope: !294, file: !294, line: 50, type: !3586, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3588)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{null, !503, !184, !272}
!3588 = !{!3589, !3590, !3591, !3592, !3593}
!3589 = !DILocalVariable(name: "wanted_result", arg: 1, scope: !3585, file: !294, line: 50, type: !503)
!3590 = !DILocalVariable(name: "result", arg: 2, scope: !3585, file: !294, line: 51, type: !184)
!3591 = !DILocalVariable(name: "length", arg: 3, scope: !3585, file: !294, line: 51, type: !272)
!3592 = !DILocalVariable(name: "i", scope: !3585, file: !294, line: 53, type: !125)
!3593 = !DILocalVariable(name: "j", scope: !3585, file: !294, line: 53, type: !125)
!3594 = !DILocation(line: 0, scope: !3585)
!3595 = !DILocation(line: 55, column: 2, scope: !3585)
!3596 = !DILocation(line: 57, column: 23, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !294, line: 57, column: 2)
!3598 = distinct !DILexicalBlock(scope: !3585, file: !294, line: 57, column: 2)
!3599 = !DILocation(line: 57, column: 2, scope: !3598)
!3600 = !DILocation(line: 66, column: 2, scope: !3585)
!3601 = !DILocation(line: 68, column: 2, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3585, file: !294, line: 68, column: 2)
!3603 = !DILocation(line: 58, column: 21, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3597, file: !294, line: 57, column: 43)
!3605 = !DILocation(line: 58, column: 3, scope: !3604)
!3606 = !DILocation(line: 60, column: 9, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3604, file: !294, line: 60, column: 7)
!3608 = !DILocation(line: 60, column: 7, scope: !3604)
!3609 = !DILocation(line: 61, column: 4, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3607, file: !294, line: 60, column: 16)
!3611 = !DILocation(line: 63, column: 3, scope: !3610)
!3612 = !DILocation(line: 0, scope: !3598)
!3613 = !DILocation(line: 57, column: 34, scope: !3597)
!3614 = !DILocation(line: 57, column: 39, scope: !3597)
!3615 = distinct !{!3615, !3599, !3616}
!3616 = !DILocation(line: 64, column: 2, scope: !3598)
!3617 = !DILocation(line: 69, column: 21, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !294, line: 68, column: 43)
!3619 = distinct !DILexicalBlock(scope: !3602, file: !294, line: 68, column: 2)
!3620 = !DILocation(line: 69, column: 3, scope: !3618)
!3621 = !DILocation(line: 71, column: 9, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3618, file: !294, line: 71, column: 7)
!3623 = !DILocation(line: 71, column: 7, scope: !3618)
!3624 = !DILocation(line: 72, column: 4, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3622, file: !294, line: 71, column: 16)
!3626 = !DILocation(line: 74, column: 3, scope: !3625)
!3627 = !DILocation(line: 0, scope: !3602)
!3628 = !DILocation(line: 68, column: 34, scope: !3619)
!3629 = !DILocation(line: 68, column: 39, scope: !3619)
!3630 = !DILocation(line: 68, column: 23, scope: !3619)
!3631 = distinct !{!3631, !3601, !3632}
!3632 = !DILocation(line: 75, column: 2, scope: !3602)
!3633 = !DILocation(line: 77, column: 2, scope: !3585)
!3634 = !DILocation(line: 78, column: 1, scope: !3585)
!3635 = distinct !DISubprogram(name: "cipher_free_session", scope: !128, file: !128, line: 201, type: !243, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3636)
!3636 = !{!3637, !3638, !3639}
!3637 = !DILocalVariable(name: "dev", arg: 1, scope: !3635, file: !128, line: 201, type: !134)
!3638 = !DILocalVariable(name: "ctx", arg: 2, scope: !3635, file: !128, line: 202, type: !165)
!3639 = !DILocalVariable(name: "api", scope: !3635, file: !128, line: 204, type: !126)
!3640 = !DILocation(line: 0, scope: !3635)
!3641 = !DILocation(line: 206, column: 42, scope: !3635)
!3642 = !DILocation(line: 208, column: 14, scope: !3635)
!3643 = !DILocation(line: 208, column: 9, scope: !3635)
!3644 = !DILocation(line: 208, column: 2, scope: !3635)
!3645 = !DILocation(line: 0, scope: !293)
!3646 = !DILocation(line: 207, column: 2, scope: !293)
!3647 = !DILocation(line: 207, column: 10, scope: !293)
!3648 = !DILocation(line: 208, column: 2, scope: !293)
!3649 = !DILocation(line: 208, column: 10, scope: !293)
!3650 = !DILocation(line: 209, column: 2, scope: !293)
!3651 = !DILocation(line: 209, column: 20, scope: !293)
!3652 = !DILocation(line: 211, column: 7, scope: !293)
!3653 = !DILocation(line: 209, column: 26, scope: !293)
!3654 = !DILocation(line: 212, column: 12, scope: !293)
!3655 = !DILocation(line: 214, column: 2, scope: !293)
!3656 = !DILocation(line: 214, column: 20, scope: !293)
!3657 = !DILocation(line: 214, column: 30, scope: !293)
!3658 = !DILocation(line: 220, column: 2, scope: !293)
!3659 = !DILocation(line: 220, column: 20, scope: !293)
!3660 = !DILocation(line: 220, column: 30, scope: !293)
!3661 = !DILocation(line: 232, column: 6, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !293, file: !294, line: 232, column: 6)
!3663 = !DILocation(line: 232, column: 6, scope: !293)
!3664 = !DILocation(line: 238, column: 6, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !293, file: !294, line: 238, column: 6)
!3666 = !DILocation(line: 238, column: 6, scope: !293)
!3667 = !DILocation(line: 239, column: 3, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !294, line: 239, column: 3)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !294, line: 239, column: 3)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !294, line: 239, column: 3)
!3671 = distinct !DILexicalBlock(scope: !3672, file: !294, line: 239, column: 3)
!3672 = distinct !DILexicalBlock(scope: !3665, file: !294, line: 238, column: 41)
!3673 = !DILocation(line: 240, column: 3, scope: !3672)
!3674 = !DILocation(line: 243, column: 2, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !294, line: 243, column: 2)
!3676 = distinct !DILexicalBlock(scope: !3677, file: !294, line: 243, column: 2)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !294, line: 243, column: 2)
!3678 = distinct !DILexicalBlock(scope: !293, file: !294, line: 243, column: 2)
!3679 = !DILocation(line: 245, column: 21, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !293, file: !294, line: 245, column: 6)
!3681 = !DILocation(line: 245, column: 6, scope: !3680)
!3682 = !DILocation(line: 245, column: 6, scope: !293)
!3683 = !DILocation(line: 246, column: 3, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3685, file: !294, line: 246, column: 3)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !294, line: 246, column: 3)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !294, line: 246, column: 3)
!3687 = distinct !DILexicalBlock(scope: !3688, file: !294, line: 246, column: 3)
!3688 = distinct !DILexicalBlock(scope: !3680, file: !294, line: 245, column: 71)
!3689 = !DILocation(line: 248, column: 51, scope: !3688)
!3690 = !DILocation(line: 248, column: 3, scope: !3688)
!3691 = !DILocation(line: 250, column: 3, scope: !3688)
!3692 = !DILocation(line: 253, column: 2, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !294, line: 253, column: 2)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !294, line: 253, column: 2)
!3695 = distinct !DILexicalBlock(scope: !3696, file: !294, line: 253, column: 2)
!3696 = distinct !DILexicalBlock(scope: !293, file: !294, line: 253, column: 2)
!3697 = !DILocation(line: 254, column: 2, scope: !293)
!3698 = !DILocation(line: 256, column: 6, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !293, file: !294, line: 256, column: 6)
!3700 = !DILocation(line: 256, column: 6, scope: !293)
!3701 = !DILocation(line: 263, column: 6, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !293, file: !294, line: 263, column: 6)
!3703 = !DILocation(line: 263, column: 6, scope: !293)
!3704 = !DILocation(line: 264, column: 3, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3706, file: !294, line: 264, column: 3)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !294, line: 264, column: 3)
!3707 = distinct !DILexicalBlock(scope: !3708, file: !294, line: 264, column: 3)
!3708 = distinct !DILexicalBlock(scope: !3709, file: !294, line: 264, column: 3)
!3709 = distinct !DILexicalBlock(scope: !3702, file: !294, line: 263, column: 48)
!3710 = !DILocation(line: 265, column: 3, scope: !3709)
!3711 = !DILocation(line: 268, column: 2, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3713, file: !294, line: 268, column: 2)
!3713 = distinct !DILexicalBlock(scope: !3714, file: !294, line: 268, column: 2)
!3714 = distinct !DILexicalBlock(scope: !3715, file: !294, line: 268, column: 2)
!3715 = distinct !DILexicalBlock(scope: !293, file: !294, line: 268, column: 2)
!3716 = !DILocation(line: 270, column: 21, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !293, file: !294, line: 270, column: 6)
!3718 = !DILocation(line: 270, column: 6, scope: !3717)
!3719 = !DILocation(line: 270, column: 6, scope: !293)
!3720 = !DILocation(line: 271, column: 3, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !294, line: 271, column: 3)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !294, line: 271, column: 3)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !294, line: 271, column: 3)
!3724 = distinct !DILexicalBlock(scope: !3725, file: !294, line: 271, column: 3)
!3725 = distinct !DILexicalBlock(scope: !3717, file: !294, line: 270, column: 61)
!3726 = !DILocation(line: 273, column: 46, scope: !3725)
!3727 = !DILocation(line: 273, column: 3, scope: !3725)
!3728 = !DILocation(line: 275, column: 3, scope: !3725)
!3729 = !DILocation(line: 278, column: 2, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !294, line: 278, column: 2)
!3731 = distinct !DILexicalBlock(scope: !3732, file: !294, line: 278, column: 2)
!3732 = distinct !DILexicalBlock(scope: !3733, file: !294, line: 278, column: 2)
!3733 = distinct !DILexicalBlock(scope: !293, file: !294, line: 278, column: 2)
!3734 = !DILocation(line: 278, column: 2, scope: !3733)
!3735 = !DILocation(line: 279, column: 1, scope: !293)
!3736 = !DILocation(line: 280, column: 2, scope: !293)
!3737 = !DILocation(line: 281, column: 1, scope: !293)
!3738 = distinct !DISubprogram(name: "cipher_cbc_op", scope: !128, file: !128, line: 270, type: !193, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3739)
!3739 = !{!3740, !3741, !3742}
!3740 = !DILocalVariable(name: "ctx", arg: 1, scope: !3738, file: !128, line: 270, type: !165)
!3741 = !DILocalVariable(name: "pkt", arg: 2, scope: !3738, file: !128, line: 271, type: !180)
!3742 = !DILocalVariable(name: "iv", arg: 3, scope: !3738, file: !128, line: 271, type: !184)
!3743 = !DILocation(line: 0, scope: !3738)
!3744 = !DILocation(line: 276, column: 7, scope: !3738)
!3745 = !DILocation(line: 276, column: 11, scope: !3738)
!3746 = !DILocation(line: 277, column: 18, scope: !3738)
!3747 = !DILocation(line: 277, column: 9, scope: !3738)
!3748 = !DILocation(line: 277, column: 2, scope: !3738)
!3749 = distinct !DISubprogram(name: "ctr_mode", scope: !294, file: !294, line: 294, type: !295, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3750)
!3750 = !{!3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758}
!3751 = !DILocalVariable(name: "dev", arg: 1, scope: !3749, file: !294, line: 294, type: !134)
!3752 = !DILocalVariable(name: "encrypted", scope: !3749, file: !294, line: 296, type: !304)
!3753 = !DILocalVariable(name: "decrypted", scope: !3749, file: !294, line: 297, type: !304)
!3754 = !DILocalVariable(name: "ini", scope: !3749, file: !294, line: 298, type: !166)
!3755 = !DILocalVariable(name: "encrypt", scope: !3749, file: !294, line: 305, type: !181)
!3756 = !DILocalVariable(name: "decrypt", scope: !3749, file: !294, line: 311, type: !181)
!3757 = !DILocalVariable(name: "iv", scope: !3749, file: !294, line: 317, type: !363)
!3758 = !DILabel(scope: !3749, name: "out", file: !294, line: 368)
!3759 = !DILocation(line: 0, scope: !3749)
!3760 = !DILocation(line: 296, column: 2, scope: !3749)
!3761 = !DILocation(line: 296, column: 10, scope: !3749)
!3762 = !DILocation(line: 297, column: 2, scope: !3749)
!3763 = !DILocation(line: 297, column: 10, scope: !3749)
!3764 = !DILocation(line: 298, column: 2, scope: !3749)
!3765 = !DILocation(line: 298, column: 20, scope: !3749)
!3766 = !DILocation(line: 298, column: 26, scope: !3749)
!3767 = !DILocation(line: 300, column: 7, scope: !3749)
!3768 = !DILocation(line: 303, column: 24, scope: !3749)
!3769 = !DILocation(line: 301, column: 12, scope: !3749)
!3770 = !DILocation(line: 305, column: 2, scope: !3749)
!3771 = !DILocation(line: 305, column: 20, scope: !3749)
!3772 = !DILocation(line: 305, column: 30, scope: !3749)
!3773 = !DILocation(line: 311, column: 2, scope: !3749)
!3774 = !DILocation(line: 311, column: 20, scope: !3749)
!3775 = !DILocation(line: 311, column: 30, scope: !3749)
!3776 = !DILocation(line: 317, column: 2, scope: !3749)
!3777 = !DILocation(line: 317, column: 10, scope: !3749)
!3778 = !DILocation(line: 322, column: 6, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3749, file: !294, line: 322, column: 6)
!3780 = !DILocation(line: 322, column: 6, scope: !3749)
!3781 = !DILocation(line: 328, column: 6, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3749, file: !294, line: 328, column: 6)
!3783 = !DILocation(line: 328, column: 6, scope: !3749)
!3784 = !DILocation(line: 329, column: 3, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !294, line: 329, column: 3)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !294, line: 329, column: 3)
!3787 = distinct !DILexicalBlock(scope: !3788, file: !294, line: 329, column: 3)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !294, line: 329, column: 3)
!3789 = distinct !DILexicalBlock(scope: !3782, file: !294, line: 328, column: 41)
!3790 = !DILocation(line: 330, column: 3, scope: !3789)
!3791 = !DILocation(line: 333, column: 2, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !294, line: 333, column: 2)
!3793 = distinct !DILexicalBlock(scope: !3794, file: !294, line: 333, column: 2)
!3794 = distinct !DILexicalBlock(scope: !3795, file: !294, line: 333, column: 2)
!3795 = distinct !DILexicalBlock(scope: !3749, file: !294, line: 333, column: 2)
!3796 = !DILocation(line: 335, column: 21, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3749, file: !294, line: 335, column: 6)
!3798 = !DILocation(line: 335, column: 6, scope: !3797)
!3799 = !DILocation(line: 335, column: 6, scope: !3749)
!3800 = !DILocation(line: 336, column: 3, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3802, file: !294, line: 336, column: 3)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !294, line: 336, column: 3)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !294, line: 336, column: 3)
!3804 = distinct !DILexicalBlock(scope: !3805, file: !294, line: 336, column: 3)
!3805 = distinct !DILexicalBlock(scope: !3797, file: !294, line: 335, column: 71)
!3806 = !DILocation(line: 338, column: 51, scope: !3805)
!3807 = !DILocation(line: 338, column: 3, scope: !3805)
!3808 = !DILocation(line: 340, column: 3, scope: !3805)
!3809 = !DILocation(line: 343, column: 2, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !294, line: 343, column: 2)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !294, line: 343, column: 2)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !294, line: 343, column: 2)
!3813 = distinct !DILexicalBlock(scope: !3749, file: !294, line: 343, column: 2)
!3814 = !DILocation(line: 344, column: 2, scope: !3749)
!3815 = !DILocation(line: 346, column: 6, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3749, file: !294, line: 346, column: 6)
!3817 = !DILocation(line: 346, column: 6, scope: !3749)
!3818 = !DILocation(line: 352, column: 6, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3749, file: !294, line: 352, column: 6)
!3820 = !DILocation(line: 352, column: 6, scope: !3749)
!3821 = !DILocation(line: 353, column: 3, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3823, file: !294, line: 353, column: 3)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !294, line: 353, column: 3)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !294, line: 353, column: 3)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !294, line: 353, column: 3)
!3826 = distinct !DILexicalBlock(scope: !3819, file: !294, line: 352, column: 41)
!3827 = !DILocation(line: 354, column: 3, scope: !3826)
!3828 = !DILocation(line: 357, column: 2, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3830, file: !294, line: 357, column: 2)
!3830 = distinct !DILexicalBlock(scope: !3831, file: !294, line: 357, column: 2)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !294, line: 357, column: 2)
!3832 = distinct !DILexicalBlock(scope: !3749, file: !294, line: 357, column: 2)
!3833 = !DILocation(line: 359, column: 21, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3749, file: !294, line: 359, column: 6)
!3835 = !DILocation(line: 359, column: 6, scope: !3834)
!3836 = !DILocation(line: 359, column: 6, scope: !3749)
!3837 = !DILocation(line: 360, column: 3, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !294, line: 360, column: 3)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !294, line: 360, column: 3)
!3840 = distinct !DILexicalBlock(scope: !3841, file: !294, line: 360, column: 3)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !294, line: 360, column: 3)
!3842 = distinct !DILexicalBlock(scope: !3834, file: !294, line: 359, column: 61)
!3843 = !DILocation(line: 363, column: 14, scope: !3842)
!3844 = !DILocation(line: 362, column: 3, scope: !3842)
!3845 = !DILocation(line: 364, column: 3, scope: !3842)
!3846 = !DILocation(line: 367, column: 2, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !294, line: 367, column: 2)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !294, line: 367, column: 2)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !294, line: 367, column: 2)
!3850 = distinct !DILexicalBlock(scope: !3749, file: !294, line: 367, column: 2)
!3851 = !DILocation(line: 367, column: 2, scope: !3850)
!3852 = !DILocation(line: 368, column: 1, scope: !3749)
!3853 = !DILocation(line: 369, column: 2, scope: !3749)
!3854 = !DILocation(line: 370, column: 1, scope: !3749)
!3855 = distinct !DISubprogram(name: "cipher_ctr_op", scope: !128, file: !128, line: 297, type: !193, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3856)
!3856 = !{!3857, !3858, !3859}
!3857 = !DILocalVariable(name: "ctx", arg: 1, scope: !3855, file: !128, line: 297, type: !165)
!3858 = !DILocalVariable(name: "pkt", arg: 2, scope: !3855, file: !128, line: 298, type: !180)
!3859 = !DILocalVariable(name: "iv", arg: 3, scope: !3855, file: !128, line: 298, type: !184)
!3860 = !DILocation(line: 0, scope: !3855)
!3861 = !DILocation(line: 303, column: 7, scope: !3855)
!3862 = !DILocation(line: 303, column: 11, scope: !3855)
!3863 = !DILocation(line: 304, column: 18, scope: !3855)
!3864 = !DILocation(line: 304, column: 9, scope: !3855)
!3865 = !DILocation(line: 304, column: 2, scope: !3855)
!3866 = distinct !DISubprogram(name: "ccm_mode", scope: !294, file: !294, line: 394, type: !295, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3867)
!3867 = !{!3868, !3869, !3873, !3877, !3878, !3879, !3880, !3881}
!3868 = !DILocalVariable(name: "dev", arg: 1, scope: !3866, file: !294, line: 394, type: !134)
!3869 = !DILocalVariable(name: "encrypted", scope: !3866, file: !294, line: 396, type: !3870)
!3870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 400, elements: !3871)
!3871 = !{!3872}
!3872 = !DISubrange(count: 50)
!3873 = !DILocalVariable(name: "decrypted", scope: !3866, file: !294, line: 397, type: !3874)
!3874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 200, elements: !3875)
!3875 = !{!3876}
!3876 = !DISubrange(count: 25)
!3877 = !DILocalVariable(name: "ini", scope: !3866, file: !294, line: 398, type: !166)
!3878 = !DILocalVariable(name: "encrypt", scope: !3866, file: !294, line: 407, type: !181)
!3879 = !DILocalVariable(name: "ccm_op", scope: !3866, file: !294, line: 413, type: !203)
!3880 = !DILocalVariable(name: "decrypt", scope: !3866, file: !294, line: 425, type: !181)
!3881 = !DILabel(scope: !3866, name: "out", file: !294, line: 480)
!3882 = !DILocation(line: 0, scope: !3866)
!3883 = !DILocation(line: 396, column: 2, scope: !3866)
!3884 = !DILocation(line: 396, column: 10, scope: !3866)
!3885 = !DILocation(line: 397, column: 2, scope: !3866)
!3886 = !DILocation(line: 397, column: 10, scope: !3866)
!3887 = !DILocation(line: 398, column: 2, scope: !3866)
!3888 = !DILocation(line: 398, column: 20, scope: !3866)
!3889 = !DILocation(line: 398, column: 26, scope: !3866)
!3890 = !DILocation(line: 400, column: 7, scope: !3866)
!3891 = !DILocation(line: 401, column: 15, scope: !3866)
!3892 = !DILocation(line: 401, column: 27, scope: !3866)
!3893 = !DILocation(line: 405, column: 12, scope: !3866)
!3894 = !DILocation(line: 407, column: 2, scope: !3866)
!3895 = !DILocation(line: 407, column: 20, scope: !3866)
!3896 = !DILocation(line: 407, column: 30, scope: !3866)
!3897 = !DILocation(line: 413, column: 2, scope: !3866)
!3898 = !DILocation(line: 413, column: 25, scope: !3866)
!3899 = !DILocation(line: 413, column: 34, scope: !3866)
!3900 = !DILocation(line: 423, column: 20, scope: !3866)
!3901 = !DILocation(line: 425, column: 2, scope: !3866)
!3902 = !DILocation(line: 425, column: 20, scope: !3866)
!3903 = !DILocation(line: 425, column: 30, scope: !3866)
!3904 = !DILocation(line: 432, column: 6, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3866, file: !294, line: 432, column: 6)
!3906 = !DILocation(line: 432, column: 6, scope: !3866)
!3907 = !DILocation(line: 438, column: 13, scope: !3866)
!3908 = !DILocation(line: 439, column: 6, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3866, file: !294, line: 439, column: 6)
!3910 = !DILocation(line: 439, column: 6, scope: !3866)
!3911 = !DILocation(line: 440, column: 3, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !294, line: 440, column: 3)
!3913 = distinct !DILexicalBlock(scope: !3914, file: !294, line: 440, column: 3)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !294, line: 440, column: 3)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !294, line: 440, column: 3)
!3916 = distinct !DILexicalBlock(scope: !3909, file: !294, line: 439, column: 47)
!3917 = !DILocation(line: 441, column: 3, scope: !3916)
!3918 = !DILocation(line: 444, column: 2, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !294, line: 444, column: 2)
!3920 = distinct !DILexicalBlock(scope: !3921, file: !294, line: 444, column: 2)
!3921 = distinct !DILexicalBlock(scope: !3922, file: !294, line: 444, column: 2)
!3922 = distinct !DILexicalBlock(scope: !3866, file: !294, line: 444, column: 2)
!3923 = !DILocation(line: 446, column: 21, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3866, file: !294, line: 446, column: 6)
!3925 = !DILocation(line: 446, column: 6, scope: !3924)
!3926 = !DILocation(line: 446, column: 6, scope: !3866)
!3927 = !DILocation(line: 447, column: 3, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !294, line: 447, column: 3)
!3929 = distinct !DILexicalBlock(scope: !3930, file: !294, line: 447, column: 3)
!3930 = distinct !DILexicalBlock(scope: !3931, file: !294, line: 447, column: 3)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !294, line: 447, column: 3)
!3932 = distinct !DILexicalBlock(scope: !3924, file: !294, line: 446, column: 67)
!3933 = !DILocation(line: 450, column: 14, scope: !3932)
!3934 = !DILocation(line: 449, column: 3, scope: !3932)
!3935 = !DILocation(line: 451, column: 3, scope: !3932)
!3936 = !DILocation(line: 454, column: 2, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !294, line: 454, column: 2)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !294, line: 454, column: 2)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !294, line: 454, column: 2)
!3940 = distinct !DILexicalBlock(scope: !3866, file: !294, line: 454, column: 2)
!3941 = !DILocation(line: 455, column: 2, scope: !3866)
!3942 = !DILocation(line: 457, column: 6, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3866, file: !294, line: 457, column: 6)
!3944 = !DILocation(line: 457, column: 6, scope: !3866)
!3945 = !DILocation(line: 463, column: 13, scope: !3866)
!3946 = !DILocation(line: 464, column: 6, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3866, file: !294, line: 464, column: 6)
!3948 = !DILocation(line: 464, column: 6, scope: !3866)
!3949 = !DILocation(line: 465, column: 3, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3951, file: !294, line: 465, column: 3)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !294, line: 465, column: 3)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !294, line: 465, column: 3)
!3953 = distinct !DILexicalBlock(scope: !3954, file: !294, line: 465, column: 3)
!3954 = distinct !DILexicalBlock(scope: !3947, file: !294, line: 464, column: 47)
!3955 = !DILocation(line: 466, column: 3, scope: !3954)
!3956 = !DILocation(line: 469, column: 2, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !294, line: 469, column: 2)
!3958 = distinct !DILexicalBlock(scope: !3959, file: !294, line: 469, column: 2)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !294, line: 469, column: 2)
!3960 = distinct !DILexicalBlock(scope: !3866, file: !294, line: 469, column: 2)
!3961 = !DILocation(line: 471, column: 21, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3866, file: !294, line: 471, column: 6)
!3963 = !DILocation(line: 471, column: 6, scope: !3962)
!3964 = !DILocation(line: 471, column: 6, scope: !3866)
!3965 = !DILocation(line: 472, column: 3, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !294, line: 472, column: 3)
!3967 = distinct !DILexicalBlock(scope: !3968, file: !294, line: 472, column: 3)
!3968 = distinct !DILexicalBlock(scope: !3969, file: !294, line: 472, column: 3)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !294, line: 472, column: 3)
!3970 = distinct !DILexicalBlock(scope: !3962, file: !294, line: 471, column: 59)
!3971 = !DILocation(line: 475, column: 14, scope: !3970)
!3972 = !DILocation(line: 474, column: 3, scope: !3970)
!3973 = !DILocation(line: 476, column: 3, scope: !3970)
!3974 = !DILocation(line: 479, column: 2, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !294, line: 479, column: 2)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !294, line: 479, column: 2)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !294, line: 479, column: 2)
!3978 = distinct !DILexicalBlock(scope: !3866, file: !294, line: 479, column: 2)
!3979 = !DILocation(line: 479, column: 2, scope: !3978)
!3980 = !DILocation(line: 480, column: 1, scope: !3866)
!3981 = !DILocation(line: 481, column: 2, scope: !3866)
!3982 = !DILocation(line: 482, column: 1, scope: !3866)
!3983 = distinct !DISubprogram(name: "cipher_ccm_op", scope: !128, file: !128, line: 319, type: !200, scopeLine: 321, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3984)
!3984 = !{!3985, !3986, !3987}
!3985 = !DILocalVariable(name: "ctx", arg: 1, scope: !3983, file: !128, line: 319, type: !165)
!3986 = !DILocalVariable(name: "pkt", arg: 2, scope: !3983, file: !128, line: 320, type: !202)
!3987 = !DILocalVariable(name: "nonce", arg: 3, scope: !3983, file: !128, line: 320, type: !184)
!3988 = !DILocation(line: 0, scope: !3983)
!3989 = !DILocation(line: 325, column: 7, scope: !3983)
!3990 = !DILocation(line: 325, column: 12, scope: !3983)
!3991 = !DILocation(line: 325, column: 16, scope: !3983)
!3992 = !DILocation(line: 326, column: 18, scope: !3983)
!3993 = !DILocation(line: 326, column: 9, scope: !3983)
!3994 = !DILocation(line: 326, column: 2, scope: !3983)
!3995 = distinct !DISubprogram(name: "gcm_mode", scope: !294, file: !294, line: 511, type: !295, scopeLine: 512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3996)
!3996 = !{!3997, !3998, !4002, !4004, !4005, !4006, !4007, !4008}
!3997 = !DILocalVariable(name: "dev", arg: 1, scope: !3995, file: !294, line: 511, type: !134)
!3998 = !DILocalVariable(name: "encrypted", scope: !3995, file: !294, line: 513, type: !3999)
!3999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 480, elements: !4000)
!4000 = !{!4001}
!4001 = !DISubrange(count: 60)
!4002 = !DILocalVariable(name: "decrypted", scope: !3995, file: !294, line: 514, type: !4003)
!4003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 352, elements: !511)
!4004 = !DILocalVariable(name: "ini", scope: !3995, file: !294, line: 515, type: !166)
!4005 = !DILocalVariable(name: "encrypt", scope: !3995, file: !294, line: 524, type: !181)
!4006 = !DILocalVariable(name: "gcm_op", scope: !3995, file: !294, line: 530, type: !203)
!4007 = !DILocalVariable(name: "decrypt", scope: !3995, file: !294, line: 542, type: !181)
!4008 = !DILabel(scope: !3995, name: "out", file: !294, line: 597)
!4009 = !DILocation(line: 0, scope: !3995)
!4010 = !DILocation(line: 513, column: 2, scope: !3995)
!4011 = !DILocation(line: 513, column: 10, scope: !3995)
!4012 = !DILocation(line: 514, column: 2, scope: !3995)
!4013 = !DILocation(line: 514, column: 10, scope: !3995)
!4014 = !DILocation(line: 515, column: 2, scope: !3995)
!4015 = !DILocation(line: 515, column: 20, scope: !3995)
!4016 = !DILocation(line: 515, column: 26, scope: !3995)
!4017 = !DILocation(line: 517, column: 7, scope: !3995)
!4018 = !DILocation(line: 518, column: 15, scope: !3995)
!4019 = !DILocation(line: 518, column: 27, scope: !3995)
!4020 = !DILocation(line: 522, column: 12, scope: !3995)
!4021 = !DILocation(line: 524, column: 2, scope: !3995)
!4022 = !DILocation(line: 524, column: 20, scope: !3995)
!4023 = !DILocation(line: 524, column: 30, scope: !3995)
!4024 = !DILocation(line: 530, column: 2, scope: !3995)
!4025 = !DILocation(line: 530, column: 25, scope: !3995)
!4026 = !DILocation(line: 530, column: 34, scope: !3995)
!4027 = !DILocation(line: 540, column: 20, scope: !3995)
!4028 = !DILocation(line: 542, column: 2, scope: !3995)
!4029 = !DILocation(line: 542, column: 20, scope: !3995)
!4030 = !DILocation(line: 542, column: 30, scope: !3995)
!4031 = !DILocation(line: 549, column: 6, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !3995, file: !294, line: 549, column: 6)
!4033 = !DILocation(line: 549, column: 6, scope: !3995)
!4034 = !DILocation(line: 555, column: 13, scope: !3995)
!4035 = !DILocation(line: 556, column: 6, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !3995, file: !294, line: 556, column: 6)
!4037 = !DILocation(line: 556, column: 6, scope: !3995)
!4038 = !DILocation(line: 557, column: 3, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !294, line: 557, column: 3)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !294, line: 557, column: 3)
!4041 = distinct !DILexicalBlock(scope: !4042, file: !294, line: 557, column: 3)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !294, line: 557, column: 3)
!4043 = distinct !DILexicalBlock(scope: !4036, file: !294, line: 556, column: 47)
!4044 = !DILocation(line: 558, column: 3, scope: !4043)
!4045 = !DILocation(line: 561, column: 2, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !294, line: 561, column: 2)
!4047 = distinct !DILexicalBlock(scope: !4048, file: !294, line: 561, column: 2)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !294, line: 561, column: 2)
!4049 = distinct !DILexicalBlock(scope: !3995, file: !294, line: 561, column: 2)
!4050 = !DILocation(line: 563, column: 21, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !3995, file: !294, line: 563, column: 6)
!4052 = !DILocation(line: 563, column: 6, scope: !4051)
!4053 = !DILocation(line: 563, column: 6, scope: !3995)
!4054 = !DILocation(line: 564, column: 3, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !294, line: 564, column: 3)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !294, line: 564, column: 3)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !294, line: 564, column: 3)
!4058 = distinct !DILexicalBlock(scope: !4059, file: !294, line: 564, column: 3)
!4059 = distinct !DILexicalBlock(scope: !4051, file: !294, line: 563, column: 67)
!4060 = !DILocation(line: 567, column: 14, scope: !4059)
!4061 = !DILocation(line: 566, column: 3, scope: !4059)
!4062 = !DILocation(line: 568, column: 3, scope: !4059)
!4063 = !DILocation(line: 571, column: 2, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4065, file: !294, line: 571, column: 2)
!4065 = distinct !DILexicalBlock(scope: !4066, file: !294, line: 571, column: 2)
!4066 = distinct !DILexicalBlock(scope: !4067, file: !294, line: 571, column: 2)
!4067 = distinct !DILexicalBlock(scope: !3995, file: !294, line: 571, column: 2)
!4068 = !DILocation(line: 572, column: 2, scope: !3995)
!4069 = !DILocation(line: 574, column: 6, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !3995, file: !294, line: 574, column: 6)
!4071 = !DILocation(line: 574, column: 6, scope: !3995)
!4072 = !DILocation(line: 580, column: 13, scope: !3995)
!4073 = !DILocation(line: 581, column: 6, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !3995, file: !294, line: 581, column: 6)
!4075 = !DILocation(line: 581, column: 6, scope: !3995)
!4076 = !DILocation(line: 582, column: 3, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !294, line: 582, column: 3)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !294, line: 582, column: 3)
!4079 = distinct !DILexicalBlock(scope: !4080, file: !294, line: 582, column: 3)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !294, line: 582, column: 3)
!4081 = distinct !DILexicalBlock(scope: !4074, file: !294, line: 581, column: 47)
!4082 = !DILocation(line: 583, column: 3, scope: !4081)
!4083 = !DILocation(line: 586, column: 2, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !294, line: 586, column: 2)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !294, line: 586, column: 2)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !294, line: 586, column: 2)
!4087 = distinct !DILexicalBlock(scope: !3995, file: !294, line: 586, column: 2)
!4088 = !DILocation(line: 588, column: 21, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !3995, file: !294, line: 588, column: 6)
!4090 = !DILocation(line: 588, column: 6, scope: !4089)
!4091 = !DILocation(line: 588, column: 6, scope: !3995)
!4092 = !DILocation(line: 589, column: 3, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !294, line: 589, column: 3)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !294, line: 589, column: 3)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !294, line: 589, column: 3)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !294, line: 589, column: 3)
!4097 = distinct !DILexicalBlock(scope: !4089, file: !294, line: 588, column: 59)
!4098 = !DILocation(line: 592, column: 14, scope: !4097)
!4099 = !DILocation(line: 591, column: 3, scope: !4097)
!4100 = !DILocation(line: 593, column: 3, scope: !4097)
!4101 = !DILocation(line: 596, column: 2, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4103, file: !294, line: 596, column: 2)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !294, line: 596, column: 2)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !294, line: 596, column: 2)
!4105 = distinct !DILexicalBlock(scope: !3995, file: !294, line: 596, column: 2)
!4106 = !DILocation(line: 596, column: 2, scope: !4105)
!4107 = !DILocation(line: 597, column: 1, scope: !3995)
!4108 = !DILocation(line: 598, column: 2, scope: !3995)
!4109 = !DILocation(line: 599, column: 1, scope: !3995)
!4110 = distinct !DISubprogram(name: "cipher_gcm_op", scope: !128, file: !128, line: 341, type: !200, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4111)
!4111 = !{!4112, !4113, !4114}
!4112 = !DILocalVariable(name: "ctx", arg: 1, scope: !4110, file: !128, line: 341, type: !165)
!4113 = !DILocalVariable(name: "pkt", arg: 2, scope: !4110, file: !128, line: 342, type: !202)
!4114 = !DILocalVariable(name: "nonce", arg: 3, scope: !4110, file: !128, line: 342, type: !184)
!4115 = !DILocation(line: 0, scope: !4110)
!4116 = !DILocation(line: 347, column: 7, scope: !4110)
!4117 = !DILocation(line: 347, column: 12, scope: !4110)
!4118 = !DILocation(line: 347, column: 16, scope: !4110)
!4119 = !DILocation(line: 348, column: 18, scope: !4110)
!4120 = !DILocation(line: 348, column: 9, scope: !4110)
!4121 = !DILocation(line: 348, column: 2, scope: !4110)
!4122 = distinct !DISubprogram(name: "main", scope: !294, file: !294, line: 606, type: !3274, scopeLine: 607, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4123)
!4123 = !{!4124, !4125, !4133}
!4124 = !DILocalVariable(name: "dev", scope: !4122, file: !294, line: 609, type: !134)
!4125 = !DILocalVariable(name: "modes", scope: !4122, file: !294, line: 623, type: !4126)
!4126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4127, size: 384, elements: !1592)
!4127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4128)
!4128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_test", file: !294, line: 601, size: 64, elements: !4129)
!4129 = !{!4130, !4131}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4128, file: !294, line: 602, baseType: !140, size: 32)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "mode_func", scope: !4128, file: !294, line: 603, baseType: !4132, size: 32, offset: 32)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!4133 = !DILocalVariable(name: "i", scope: !4122, file: !294, line: 631, type: !125)
!4134 = !DILocation(line: 609, column: 29, scope: !4122)
!4135 = !DILocation(line: 0, scope: !4122)
!4136 = !DILocation(line: 611, column: 7, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4122, file: !294, line: 611, column: 6)
!4138 = !DILocation(line: 611, column: 6, scope: !4122)
!4139 = !DILocation(line: 612, column: 3, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4141, file: !294, line: 612, column: 3)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !294, line: 612, column: 3)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !294, line: 612, column: 3)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !294, line: 612, column: 3)
!4144 = distinct !DILexicalBlock(scope: !4137, file: !294, line: 611, column: 12)
!4145 = !DILocation(line: 613, column: 3, scope: !4144)
!4146 = !DILocation(line: 623, column: 25, scope: !4122)
!4147 = !DILocation(line: 633, column: 6, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4122, file: !294, line: 633, column: 6)
!4149 = !DILocation(line: 633, column: 6, scope: !4122)
!4150 = !DILocation(line: 634, column: 3, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4152, file: !294, line: 634, column: 3)
!4152 = distinct !DILexicalBlock(scope: !4153, file: !294, line: 634, column: 3)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !294, line: 634, column: 3)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !294, line: 634, column: 3)
!4155 = distinct !DILexicalBlock(scope: !4148, file: !294, line: 633, column: 38)
!4156 = !DILocation(line: 635, column: 3, scope: !4155)
!4157 = !DILocation(line: 638, column: 2, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !294, line: 638, column: 2)
!4159 = distinct !DILexicalBlock(scope: !4160, file: !294, line: 638, column: 2)
!4160 = distinct !DILexicalBlock(scope: !4161, file: !294, line: 638, column: 2)
!4161 = distinct !DILexicalBlock(scope: !4122, file: !294, line: 638, column: 2)
!4162 = !DILocation(line: 640, column: 2, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4122, file: !294, line: 640, column: 2)
!4164 = !DILocation(line: 640, column: 23, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4163, file: !294, line: 640, column: 2)
!4166 = !DILocation(line: 641, column: 3, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !294, line: 641, column: 3)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !294, line: 641, column: 3)
!4169 = distinct !DILexicalBlock(scope: !4170, file: !294, line: 641, column: 3)
!4170 = distinct !DILexicalBlock(scope: !4171, file: !294, line: 641, column: 3)
!4171 = distinct !DILexicalBlock(scope: !4165, file: !294, line: 640, column: 34)
!4172 = !DILocation(line: 642, column: 12, scope: !4171)
!4173 = !DILocation(line: 642, column: 3, scope: !4171)
!4174 = !DILocation(line: 640, column: 30, scope: !4165)
!4175 = distinct !{!4175, !4162, !4176}
!4176 = !DILocation(line: 643, column: 2, scope: !4163)
!4177 = !DILocation(line: 644, column: 1, scope: !4122)
!4178 = distinct !DISubprogram(name: "device_get_binding", scope: !4179, file: !4179, line: 24, type: !4180, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4182)
!4179 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!134, !140}
!4182 = !{!4183}
!4183 = !DILocalVariable(name: "name", arg: 1, scope: !4178, file: !4179, line: 24, type: !140)
!4184 = !DILocation(line: 0, scope: !4178)
!4185 = !DILocation(line: 32, column: 2, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4178, file: !4179, line: 32, column: 2)
!4187 = !{i64 2148817658}
!4188 = !DILocation(line: 33, column: 9, scope: !4178)
!4189 = !DILocation(line: 33, column: 2, scope: !4178)
!4190 = distinct !DISubprogram(name: "cbvprintf_package", scope: !395, file: !395, line: 233, type: !4191, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4200)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!125, !124, !272, !208, !140, !4193}
!4193 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4194, line: 99, baseType: !4195)
!4194 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4195 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4194, line: 40, baseType: !4196)
!4196 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !395, baseType: !4197)
!4197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4198)
!4198 = !{!4199}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4197, file: !395, line: 18, baseType: !124, size: 32)
!4200 = !{!4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4235, !4244, !4247, !4248, !4251, !4254, !4257, !4260, !4266}
!4201 = !DILocalVariable(name: "packaged", arg: 1, scope: !4190, file: !395, line: 233, type: !124)
!4202 = !DILocalVariable(name: "len", arg: 2, scope: !4190, file: !395, line: 233, type: !272)
!4203 = !DILocalVariable(name: "flags", arg: 3, scope: !4190, file: !395, line: 233, type: !208)
!4204 = !DILocalVariable(name: "fmt", arg: 4, scope: !4190, file: !395, line: 234, type: !140)
!4205 = !DILocalVariable(name: "ap", arg: 5, scope: !4190, file: !395, line: 234, type: !4193)
!4206 = !DILocalVariable(name: "buf0", scope: !4190, file: !395, line: 247, type: !184)
!4207 = !DILocalVariable(name: "buf", scope: !4190, file: !395, line: 248, type: !184)
!4208 = !DILocalVariable(name: "size", scope: !4190, file: !395, line: 249, type: !32)
!4209 = !DILocalVariable(name: "align", scope: !4190, file: !395, line: 250, type: !32)
!4210 = !DILocalVariable(name: "str_ptr_pos", scope: !4190, file: !395, line: 251, type: !311)
!4211 = !DILocalVariable(name: "str_ptr_arg", scope: !4190, file: !395, line: 252, type: !311)
!4212 = !DILocalVariable(name: "s_idx", scope: !4190, file: !395, line: 253, type: !32)
!4213 = !DILocalVariable(name: "s_rw_cnt", scope: !4190, file: !395, line: 254, type: !32)
!4214 = !DILocalVariable(name: "s_ro_cnt", scope: !4190, file: !395, line: 255, type: !32)
!4215 = !DILocalVariable(name: "arg_idx", scope: !4190, file: !395, line: 256, type: !125)
!4216 = !DILocalVariable(name: "i", scope: !4190, file: !395, line: 257, type: !32)
!4217 = !DILocalVariable(name: "s", scope: !4190, file: !395, line: 258, type: !140)
!4218 = !DILocalVariable(name: "parsing", scope: !4190, file: !395, line: 259, type: !153)
!4219 = !DILocalVariable(name: "rws_pos_en", scope: !4190, file: !395, line: 263, type: !153)
!4220 = !DILocalVariable(name: "fros_cnt", scope: !4190, file: !395, line: 268, type: !125)
!4221 = !DILocalVariable(name: "is_str_arg", scope: !4190, file: !395, line: 269, type: !153)
!4222 = !DILocalVariable(name: "pkg_hdr", scope: !4190, file: !395, line: 270, type: !4223)
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 32)
!4224 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4225, line: 78, size: 32, elements: !4226)
!4225 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4226 = !{!4227, !4234}
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4224, file: !4225, line: 80, baseType: !4228, size: 32)
!4228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4225, line: 45, size: 32, elements: !4229)
!4229 = !{!4230, !4231, !4232, !4233}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4228, file: !4225, line: 47, baseType: !150, size: 8)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4228, file: !4225, line: 50, baseType: !150, size: 8, offset: 8)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4228, file: !4225, line: 53, baseType: !150, size: 8, offset: 16)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4228, file: !4225, line: 56, baseType: !150, size: 8, offset: 24)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4224, file: !4225, line: 82, baseType: !124, size: 32)
!4235 = !DILocalVariable(name: "v", scope: !4236, file: !395, line: 567, type: !4240)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !395, line: 562, column: 14)
!4237 = distinct !DILexicalBlock(scope: !4238, file: !395, line: 481, column: 18)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !395, line: 466, column: 3)
!4239 = distinct !DILexicalBlock(scope: !4190, file: !395, line: 343, column: 15)
!4240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4190, file: !395, line: 567, size: 64, elements: !4241)
!4241 = !{!4242, !4243}
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4240, file: !395, line: 567, baseType: !385, size: 64)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4240, file: !395, line: 567, baseType: !383, size: 64)
!4244 = !DILocalVariable(name: "is_ro", scope: !4245, file: !395, line: 620, type: !153)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !395, line: 613, column: 19)
!4246 = distinct !DILexicalBlock(scope: !4239, file: !395, line: 613, column: 7)
!4247 = !DILocalVariable(name: "do_ro", scope: !4245, file: !395, line: 621, type: !153)
!4248 = !DILocalVariable(name: "s_ptr_idx", scope: !4249, file: !395, line: 626, type: !208)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !395, line: 625, column: 11)
!4250 = distinct !DILexicalBlock(scope: !4245, file: !395, line: 623, column: 8)
!4251 = !DILocalVariable(name: "v", scope: !4252, file: !395, line: 684, type: !125)
!4252 = distinct !DILexicalBlock(scope: !4253, file: !395, line: 683, column: 35)
!4253 = distinct !DILexicalBlock(scope: !4246, file: !395, line: 683, column: 14)
!4254 = !DILocalVariable(name: "v", scope: !4255, file: !395, line: 691, type: !389)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !395, line: 690, column: 36)
!4256 = distinct !DILexicalBlock(scope: !4253, file: !395, line: 690, column: 14)
!4257 = !DILocalVariable(name: "v", scope: !4258, file: !395, line: 698, type: !391)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !395, line: 697, column: 41)
!4259 = distinct !DILexicalBlock(scope: !4256, file: !395, line: 697, column: 14)
!4260 = !DILocalVariable(name: "pos", scope: !4261, file: !395, line: 762, type: !150)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !395, line: 757, column: 31)
!4262 = distinct !DILexicalBlock(scope: !4263, file: !395, line: 757, column: 3)
!4263 = distinct !DILexicalBlock(scope: !4264, file: !395, line: 757, column: 3)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !395, line: 756, column: 16)
!4265 = distinct !DILexicalBlock(scope: !4190, file: !395, line: 756, column: 6)
!4266 = !DILabel(scope: !4245, name: "process_string", file: !395, line: 615)
!4267 = !DILocation(line: 0, scope: !4190)
!4268 = !DILocation(line: 251, column: 2, scope: !4190)
!4269 = !DILocation(line: 251, column: 10, scope: !4190)
!4270 = !DILocation(line: 252, column: 2, scope: !4190)
!4271 = !DILocation(line: 252, column: 10, scope: !4190)
!4272 = !DILocation(line: 263, column: 29, scope: !4190)
!4273 = !DILocation(line: 263, column: 21, scope: !4190)
!4274 = !DILocation(line: 268, column: 21, scope: !4190)
!4275 = !DILocation(line: 268, column: 19, scope: !4190)
!4276 = !DILocation(line: 273, column: 6, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4190, file: !395, line: 273, column: 6)
!4278 = !DILocation(line: 273, column: 26, scope: !4277)
!4279 = !DILocation(line: 273, column: 6, scope: !4190)
!4280 = !DILocation(line: 297, column: 6, scope: !4190)
!4281 = !DILocation(line: 305, column: 11, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4190, file: !395, line: 305, column: 6)
!4283 = !DILocation(line: 305, column: 6, scope: !4190)
!4284 = !DILocation(line: 327, column: 19, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4190, file: !395, line: 327, column: 6)
!4286 = !DILocation(line: 327, column: 22, scope: !4285)
!4287 = !DILocation(line: 327, column: 33, scope: !4285)
!4288 = !DILocation(line: 327, column: 50, scope: !4285)
!4289 = !DILocation(line: 327, column: 6, scope: !4190)
!4290 = !DILocation(line: 338, column: 9, scope: !4190)
!4291 = !DILocation(line: 341, column: 2, scope: !4190)
!4292 = !DILocation(line: 472, column: 8, scope: !4238)
!4293 = !DILocation(line: 473, column: 14, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !395, line: 473, column: 9)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !395, line: 472, column: 18)
!4296 = distinct !DILexicalBlock(scope: !4238, file: !395, line: 472, column: 8)
!4297 = !DILocation(line: 473, column: 9, scope: !4295)
!4298 = !DILocation(line: 479, column: 5, scope: !4295)
!4299 = !DILocation(line: 468, column: 9, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4238, file: !395, line: 468, column: 8)
!4301 = !DILocation(line: 468, column: 8, scope: !4300)
!4302 = !DILocation(line: 468, column: 15, scope: !4300)
!4303 = !DILocation(line: 468, column: 8, scope: !4238)
!4304 = distinct !{!4304, !4305, !4306}
!4305 = !DILocation(line: 343, column: 2, scope: !4190)
!4306 = !DILocation(line: 712, column: 2, scope: !4190)
!4307 = !DILocation(line: 481, column: 4, scope: !4238)
!4308 = !DILocation(line: 484, column: 12, scope: !4237)
!4309 = !DILocation(line: 485, column: 5, scope: !4237)
!4310 = !DILocation(line: 505, column: 5, scope: !4237)
!4311 = !DILocation(line: 518, column: 5, scope: !4237)
!4312 = !DILocation(line: 523, column: 5, scope: !4237)
!4313 = !DILocation(line: 532, column: 9, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4237, file: !395, line: 532, column: 9)
!4315 = !DILocation(line: 532, column: 17, scope: !4314)
!4316 = !DILocation(line: 532, column: 9, scope: !4237)
!4317 = !DILocation(line: 533, column: 10, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !395, line: 533, column: 10)
!4319 = distinct !DILexicalBlock(scope: !4314, file: !395, line: 532, column: 25)
!4320 = !DILocation(line: 533, column: 18, scope: !4318)
!4321 = !DILocation(line: 0, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4236, file: !395, line: 569, column: 9)
!4323 = !DILocation(line: 0, scope: !4236)
!4324 = !DILocation(line: 579, column: 20, scope: !4236)
!4325 = !DILocation(line: 579, column: 11, scope: !4236)
!4326 = !DILocation(line: 580, column: 9, scope: !4236)
!4327 = !DILocation(line: 582, column: 21, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !395, line: 582, column: 10)
!4329 = distinct !DILexicalBlock(scope: !4330, file: !395, line: 580, column: 23)
!4330 = distinct !DILexicalBlock(scope: !4236, file: !395, line: 580, column: 9)
!4331 = !DILocation(line: 582, column: 28, scope: !4328)
!4332 = !DILocation(line: 582, column: 10, scope: !4329)
!4333 = !DILocation(line: 0, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !395, line: 587, column: 17)
!4335 = distinct !DILexicalBlock(scope: !4329, file: !395, line: 585, column: 10)
!4336 = !DILocation(line: 593, column: 9, scope: !4236)
!4337 = !DILocation(line: 600, column: 5, scope: !4237)
!4338 = !DILocation(line: 605, column: 18, scope: !4239)
!4339 = !DILocation(line: 605, column: 9, scope: !4239)
!4340 = !DILocation(line: 608, column: 20, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4239, file: !395, line: 608, column: 7)
!4342 = !DILocation(line: 608, column: 23, scope: !4341)
!4343 = !DILocation(line: 608, column: 34, scope: !4341)
!4344 = !DILocation(line: 608, column: 41, scope: !4341)
!4345 = !DILocation(line: 608, column: 7, scope: !4239)
!4346 = !DILocation(line: 613, column: 7, scope: !4239)
!4347 = !DILocation(line: 614, column: 8, scope: !4245)
!4348 = !DILocation(line: 614, column: 4, scope: !4245)
!4349 = !DILocation(line: 255, column: 15, scope: !4190)
!4350 = !DILocation(line: 256, column: 6, scope: !4190)
!4351 = !DILocation(line: 254, column: 15, scope: !4190)
!4352 = !DILocation(line: 253, column: 15, scope: !4190)
!4353 = !DILocation(line: 320, column: 7, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4282, file: !395, line: 305, column: 20)
!4355 = !DILocation(line: 615, column: 1, scope: !4245)
!4356 = !DILocation(line: 616, column: 8, scope: !4245)
!4357 = !DILocation(line: 617, column: 5, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4359, file: !395, line: 616, column: 22)
!4359 = distinct !DILexicalBlock(scope: !4245, file: !395, line: 616, column: 8)
!4360 = !DILocation(line: 617, column: 25, scope: !4358)
!4361 = !DILocation(line: 618, column: 4, scope: !4358)
!4362 = !DILocation(line: 620, column: 26, scope: !4245)
!4363 = !DILocation(line: 620, column: 29, scope: !4245)
!4364 = !DILocation(line: 620, column: 17, scope: !4245)
!4365 = !DILocation(line: 620, column: 43, scope: !4245)
!4366 = !DILocation(line: 0, scope: !4245)
!4367 = !DILocation(line: 623, column: 14, scope: !4250)
!4368 = !DILocation(line: 626, column: 26, scope: !4249)
!4369 = !DILocation(line: 626, column: 37, scope: !4249)
!4370 = !DILocation(line: 0, scope: !4249)
!4371 = !DILocation(line: 634, column: 15, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4249, file: !395, line: 634, column: 9)
!4373 = !DILocation(line: 644, column: 9, scope: !4249)
!4374 = !DILocation(line: 649, column: 27, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !395, line: 644, column: 23)
!4376 = distinct !DILexicalBlock(scope: !4249, file: !395, line: 644, column: 9)
!4377 = !DILocation(line: 649, column: 6, scope: !4375)
!4378 = !DILocation(line: 649, column: 25, scope: !4375)
!4379 = !DILocation(line: 650, column: 27, scope: !4375)
!4380 = !DILocation(line: 650, column: 6, scope: !4375)
!4381 = !DILocation(line: 650, column: 25, scope: !4375)
!4382 = !DILocation(line: 651, column: 10, scope: !4375)
!4383 = !DILocation(line: 653, column: 26, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4385, file: !395, line: 651, column: 17)
!4385 = distinct !DILexicalBlock(scope: !4375, file: !395, line: 651, column: 10)
!4386 = !DILocation(line: 654, column: 15, scope: !4384)
!4387 = !DILocation(line: 655, column: 6, scope: !4384)
!4388 = !DILocation(line: 656, column: 15, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4385, file: !395, line: 655, column: 13)
!4390 = !DILocation(line: 658, column: 16, scope: !4376)
!4391 = !DILocation(line: 663, column: 10, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4393, file: !395, line: 658, column: 23)
!4393 = distinct !DILexicalBlock(scope: !4376, file: !395, line: 658, column: 16)
!4394 = !DILocation(line: 664, column: 5, scope: !4392)
!4395 = !DILocation(line: 664, column: 16, scope: !4393)
!4396 = !DILocation(line: 669, column: 10, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4398, file: !395, line: 664, column: 28)
!4398 = distinct !DILexicalBlock(scope: !4393, file: !395, line: 664, column: 16)
!4399 = !DILocation(line: 670, column: 5, scope: !4397)
!4400 = !DILocation(line: 675, column: 13, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4398, file: !395, line: 670, column: 12)
!4402 = !DILocation(line: 675, column: 27, scope: !4401)
!4403 = !DILocation(line: 675, column: 10, scope: !4401)
!4404 = !DILocation(line: 678, column: 10, scope: !4249)
!4405 = !DILocation(line: 680, column: 8, scope: !4245)
!4406 = !DILocation(line: 683, column: 14, scope: !4246)
!4407 = !DILocation(line: 684, column: 12, scope: !4252)
!4408 = !DILocation(line: 0, scope: !4252)
!4409 = !DILocation(line: 686, column: 8, scope: !4252)
!4410 = !DILocation(line: 687, column: 5, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4412, file: !395, line: 686, column: 22)
!4412 = distinct !DILexicalBlock(scope: !4252, file: !395, line: 686, column: 8)
!4413 = !DILocation(line: 687, column: 17, scope: !4411)
!4414 = !DILocation(line: 688, column: 4, scope: !4411)
!4415 = !DILocation(line: 698, column: 18, scope: !4258)
!4416 = !DILocation(line: 0, scope: !4258)
!4417 = !DILocation(line: 700, column: 8, scope: !4258)
!4418 = !DILocation(line: 704, column: 6, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4420, file: !395, line: 703, column: 12)
!4420 = distinct !DILexicalBlock(scope: !4421, file: !395, line: 701, column: 9)
!4421 = distinct !DILexicalBlock(scope: !4422, file: !395, line: 700, column: 22)
!4422 = distinct !DILexicalBlock(scope: !4258, file: !395, line: 700, column: 8)
!4423 = !DILocation(line: 704, column: 24, scope: !4419)
!4424 = !DILocation(line: 706, column: 4, scope: !4421)
!4425 = !DILocation(line: 0, scope: !4253)
!4426 = !DILocation(line: 0, scope: !4239)
!4427 = !DILocation(line: 720, column: 6, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4190, file: !395, line: 720, column: 6)
!4429 = !DILocation(line: 720, column: 17, scope: !4428)
!4430 = !DILocation(line: 720, column: 31, scope: !4428)
!4431 = !DILocation(line: 720, column: 6, scope: !4190)
!4432 = !DILocation(line: 729, column: 6, scope: !4190)
!4433 = !DILocation(line: 730, column: 21, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !395, line: 729, column: 20)
!4435 = distinct !DILexicalBlock(scope: !4190, file: !395, line: 729, column: 6)
!4436 = !DILocation(line: 730, column: 27, scope: !4434)
!4437 = !DILocation(line: 730, column: 3, scope: !4434)
!4438 = !DILocation(line: 737, column: 22, scope: !4190)
!4439 = !DILocation(line: 737, column: 20, scope: !4190)
!4440 = !DILocation(line: 0, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4190, file: !395, line: 739, column: 6)
!4442 = !DILocation(line: 745, column: 17, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4441, file: !395, line: 743, column: 9)
!4444 = !DILocation(line: 745, column: 25, scope: !4443)
!4445 = !DILocation(line: 746, column: 17, scope: !4443)
!4446 = !DILocation(line: 746, column: 28, scope: !4443)
!4447 = !DILocation(line: 749, column: 29, scope: !4190)
!4448 = !DILocation(line: 749, column: 16, scope: !4190)
!4449 = !DILocation(line: 749, column: 27, scope: !4190)
!4450 = !DILocation(line: 756, column: 6, scope: !4265)
!4451 = !DILocation(line: 756, column: 6, scope: !4190)
!4452 = !DILocation(line: 757, column: 3, scope: !4263)
!4453 = !DILocation(line: 758, column: 10, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4261, file: !395, line: 758, column: 8)
!4455 = !DILocation(line: 758, column: 25, scope: !4454)
!4456 = !DILocation(line: 758, column: 8, scope: !4261)
!4457 = !DILocation(line: 0, scope: !4261)
!4458 = !DILocation(line: 765, column: 8, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4261, file: !395, line: 765, column: 8)
!4460 = !DILocation(line: 765, column: 19, scope: !4459)
!4461 = !DILocation(line: 765, column: 23, scope: !4459)
!4462 = !DILocation(line: 765, column: 8, scope: !4261)
!4463 = !DILocation(line: 762, column: 33, scope: !4261)
!4464 = !DILocation(line: 769, column: 8, scope: !4261)
!4465 = !DILocation(line: 769, column: 11, scope: !4261)
!4466 = !DILocation(line: 757, column: 27, scope: !4262)
!4467 = !DILocation(line: 757, column: 17, scope: !4262)
!4468 = distinct !{!4468, !4452, !4469}
!4469 = !DILocation(line: 770, column: 3, scope: !4263)
!4470 = !DILocation(line: 774, column: 16, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !395, line: 774, column: 2)
!4472 = distinct !DILexicalBlock(scope: !4190, file: !395, line: 774, column: 2)
!4473 = !DILocation(line: 774, column: 2, scope: !4472)
!4474 = !DILocation(line: 776, column: 16, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !395, line: 776, column: 7)
!4476 = distinct !DILexicalBlock(scope: !4471, file: !395, line: 774, column: 30)
!4477 = !DILocation(line: 776, column: 19, scope: !4475)
!4478 = !DILocation(line: 776, column: 34, scope: !4475)
!4479 = !DILocation(line: 776, column: 7, scope: !4476)
!4480 = !DILocation(line: 780, column: 7, scope: !4476)
!4481 = !DILocation(line: 782, column: 13, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !395, line: 780, column: 19)
!4483 = distinct !DILexicalBlock(scope: !4476, file: !395, line: 780, column: 7)
!4484 = !DILocation(line: 782, column: 8, scope: !4482)
!4485 = !DILocation(line: 782, column: 11, scope: !4482)
!4486 = !DILocation(line: 783, column: 3, scope: !4482)
!4487 = !DILocation(line: 785, column: 26, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4483, file: !395, line: 783, column: 10)
!4489 = !DILocation(line: 785, column: 41, scope: !4488)
!4490 = !DILocation(line: 785, column: 24, scope: !4488)
!4491 = !DILocation(line: 785, column: 8, scope: !4488)
!4492 = !DILocation(line: 787, column: 52, scope: !4488)
!4493 = !DILocation(line: 789, column: 11, scope: !4488)
!4494 = !DILocation(line: 789, column: 21, scope: !4488)
!4495 = !DILocation(line: 0, scope: !4483)
!4496 = !DILocation(line: 793, column: 7, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4476, file: !395, line: 793, column: 7)
!4498 = !DILocation(line: 793, column: 18, scope: !4497)
!4499 = !DILocation(line: 793, column: 22, scope: !4497)
!4500 = !DILocation(line: 793, column: 29, scope: !4497)
!4501 = !DILocation(line: 793, column: 7, scope: !4476)
!4502 = !DILocation(line: 797, column: 12, scope: !4476)
!4503 = !DILocation(line: 797, column: 7, scope: !4476)
!4504 = !DILocation(line: 797, column: 10, scope: !4476)
!4505 = !DILocation(line: 799, column: 3, scope: !4476)
!4506 = !DILocation(line: 800, column: 7, scope: !4476)
!4507 = !DILocation(line: 801, column: 2, scope: !4476)
!4508 = !DILocation(line: 338, column: 4, scope: !4190)
!4509 = !DILocation(line: 774, column: 26, scope: !4471)
!4510 = distinct !{!4510, !4473, !4511}
!4511 = !DILocation(line: 801, column: 2, scope: !4472)
!4512 = !DILocation(line: 808, column: 9, scope: !4190)
!4513 = !DILocation(line: 808, column: 2, scope: !4190)
!4514 = !DILocation(line: 813, column: 1, scope: !4190)
!4515 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !395, file: !395, line: 33, type: !4516, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4518)
!4516 = !DISubroutineType(types: !4517)
!4517 = !{!153, !140}
!4518 = !{!4519}
!4519 = !DILocalVariable(name: "addr", arg: 1, scope: !4515, file: !395, line: 33, type: !140)
!4520 = !DILocation(line: 0, scope: !4515)
!4521 = !DILocation(line: 41, column: 9, scope: !4515)
!4522 = !DILocation(line: 41, column: 2, scope: !4515)
!4523 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4524, file: !4524, line: 24, type: !4525, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4527)
!4524 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4525 = !DISubroutineType(types: !4526)
!4526 = !{!153, !13}
!4527 = !{!4528}
!4528 = !DILocalVariable(name: "addr", arg: 1, scope: !4523, file: !4524, line: 24, type: !13)
!4529 = !DILocation(line: 0, scope: !4523)
!4530 = !DILocation(line: 49, column: 30, scope: !4523)
!4531 = !DILocation(line: 49, column: 57, scope: !4523)
!4532 = !DILocation(line: 49, column: 2, scope: !4523)
!4533 = distinct !DISubprogram(name: "cbprintf_package", scope: !395, file: !395, line: 815, type: !4534, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4536)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{!125, !124, !272, !208, !140, null}
!4536 = !{!4537, !4538, !4539, !4540, !4541, !4542}
!4537 = !DILocalVariable(name: "packaged", arg: 1, scope: !4533, file: !395, line: 815, type: !124)
!4538 = !DILocalVariable(name: "len", arg: 2, scope: !4533, file: !395, line: 815, type: !272)
!4539 = !DILocalVariable(name: "flags", arg: 3, scope: !4533, file: !395, line: 815, type: !208)
!4540 = !DILocalVariable(name: "format", arg: 4, scope: !4533, file: !395, line: 816, type: !140)
!4541 = !DILocalVariable(name: "ap", scope: !4533, file: !395, line: 818, type: !4193)
!4542 = !DILocalVariable(name: "ret", scope: !4533, file: !395, line: 819, type: !125)
!4543 = !DILocation(line: 0, scope: !4533)
!4544 = !DILocation(line: 818, column: 2, scope: !4533)
!4545 = !DILocation(line: 818, column: 10, scope: !4533)
!4546 = !DILocation(line: 821, column: 2, scope: !4533)
!4547 = !DILocation(line: 822, column: 8, scope: !4533)
!4548 = !DILocation(line: 823, column: 2, scope: !4533)
!4549 = !DILocation(line: 825, column: 1, scope: !4533)
!4550 = !DILocation(line: 824, column: 2, scope: !4533)
!4551 = distinct !DISubprogram(name: "cbpprintf_external", scope: !395, file: !395, line: 827, type: !4552, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4562)
!4552 = !DISubroutineType(types: !4553)
!4553 = !{!125, !4554, !4558, !124, !124}
!4554 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4225, line: 297, baseType: !4555)
!4555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4556, size: 32)
!4556 = !DISubroutineType(types: !4557)
!4557 = !{!125, null}
!4558 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4225, line: 328, baseType: !4559)
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4560, size: 32)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!125, !4554, !124, !140, !4193}
!4562 = !{!4563, !4564, !4565, !4566, !4567, !4568, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581}
!4563 = !DILocalVariable(name: "out", arg: 1, scope: !4551, file: !395, line: 827, type: !4554)
!4564 = !DILocalVariable(name: "formatter", arg: 2, scope: !4551, file: !395, line: 828, type: !4558)
!4565 = !DILocalVariable(name: "ctx", arg: 3, scope: !4551, file: !395, line: 829, type: !124)
!4566 = !DILocalVariable(name: "packaged", arg: 4, scope: !4551, file: !395, line: 829, type: !124)
!4567 = !DILocalVariable(name: "buf", scope: !4551, file: !395, line: 831, type: !184)
!4568 = !DILocalVariable(name: "hdr", scope: !4551, file: !395, line: 832, type: !4569)
!4569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4570, size: 32)
!4570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4225, line: 96, size: 64, elements: !4571)
!4571 = !{!4572, !4573}
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4570, file: !4225, line: 98, baseType: !4224, size: 32)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4570, file: !4225, line: 101, baseType: !393, size: 32, offset: 32)
!4574 = !DILocalVariable(name: "s", scope: !4551, file: !395, line: 833, type: !393)
!4575 = !DILocalVariable(name: "ps", scope: !4551, file: !395, line: 833, type: !392)
!4576 = !DILocalVariable(name: "i", scope: !4551, file: !395, line: 834, type: !32)
!4577 = !DILocalVariable(name: "args_size", scope: !4551, file: !395, line: 834, type: !32)
!4578 = !DILocalVariable(name: "s_nbr", scope: !4551, file: !395, line: 834, type: !32)
!4579 = !DILocalVariable(name: "ros_nbr", scope: !4551, file: !395, line: 834, type: !32)
!4580 = !DILocalVariable(name: "rws_nbr", scope: !4551, file: !395, line: 834, type: !32)
!4581 = !DILocalVariable(name: "s_idx", scope: !4551, file: !395, line: 834, type: !32)
!4582 = !DILocation(line: 0, scope: !4551)
!4583 = !DILocation(line: 836, column: 10, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4551, file: !395, line: 836, column: 6)
!4585 = !DILocation(line: 836, column: 6, scope: !4551)
!4586 = !DILocation(line: 842, column: 28, scope: !4551)
!4587 = !DILocation(line: 842, column: 14, scope: !4551)
!4588 = !DILocation(line: 852, column: 16, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !395, line: 852, column: 2)
!4590 = distinct !DILexicalBlock(scope: !4551, file: !395, line: 852, column: 2)
!4591 = !DILocation(line: 852, column: 2, scope: !4590)
!4592 = !DILocation(line: 841, column: 28, scope: !4551)
!4593 = !DILocation(line: 841, column: 14, scope: !4551)
!4594 = !DILocation(line: 841, column: 32, scope: !4551)
!4595 = !DILocation(line: 847, column: 19, scope: !4551)
!4596 = !DILocation(line: 843, column: 28, scope: !4551)
!4597 = !DILocation(line: 843, column: 14, scope: !4551)
!4598 = !DILocation(line: 847, column: 31, scope: !4551)
!4599 = !DILocation(line: 844, column: 28, scope: !4551)
!4600 = !DILocation(line: 844, column: 14, scope: !4551)
!4601 = !DILocation(line: 847, column: 45, scope: !4551)
!4602 = !DILocation(line: 847, column: 41, scope: !4551)
!4603 = !DILocation(line: 854, column: 24, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4589, file: !395, line: 852, column: 30)
!4605 = !DILocation(line: 854, column: 11, scope: !4604)
!4606 = !DILocation(line: 855, column: 30, scope: !4604)
!4607 = !DILocation(line: 855, column: 22, scope: !4604)
!4608 = !DILocation(line: 855, column: 8, scope: !4604)
!4609 = !DILocation(line: 857, column: 7, scope: !4604)
!4610 = !DILocation(line: 859, column: 8, scope: !4604)
!4611 = !DILocation(line: 859, column: 18, scope: !4604)
!4612 = !DILocation(line: 859, column: 5, scope: !4604)
!4613 = !DILocation(line: 852, column: 26, scope: !4589)
!4614 = distinct !{!4614, !4591, !4615}
!4615 = !DILocation(line: 860, column: 2, scope: !4590)
!4616 = !DILocation(line: 863, column: 6, scope: !4551)
!4617 = !DILocation(line: 866, column: 56, scope: !4551)
!4618 = !DILocation(line: 866, column: 9, scope: !4551)
!4619 = !DILocation(line: 866, column: 2, scope: !4551)
!4620 = !DILocation(line: 867, column: 1, scope: !4551)
!4621 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !395, file: !395, line: 179, type: !4622, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4624)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{!125, !4554, !4558, !124, !140, !124}
!4624 = !{!4625, !4626, !4627, !4628, !4629, !4630}
!4625 = !DILocalVariable(name: "out", arg: 1, scope: !4621, file: !395, line: 179, type: !4554)
!4626 = !DILocalVariable(name: "formatter", arg: 2, scope: !4621, file: !395, line: 180, type: !4558)
!4627 = !DILocalVariable(name: "ctx", arg: 3, scope: !4621, file: !395, line: 181, type: !124)
!4628 = !DILocalVariable(name: "fmt", arg: 4, scope: !4621, file: !395, line: 182, type: !140)
!4629 = !DILocalVariable(name: "buf", arg: 5, scope: !4621, file: !395, line: 182, type: !124)
!4630 = !DILocalVariable(name: "u", scope: !4621, file: !395, line: 187, type: !4631)
!4631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4621, file: !395, line: 184, size: 32, elements: !4632)
!4632 = !{!4633, !4634}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4631, file: !395, line: 185, baseType: !4193, size: 32)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4631, file: !395, line: 186, baseType: !124, size: 32)
!4635 = !DILocation(line: 0, scope: !4621)
!4636 = !DILocation(line: 191, column: 9, scope: !4621)
!4637 = !DILocation(line: 191, column: 2, scope: !4621)
!4638 = distinct !DISubprogram(name: "is_ptr", scope: !395, file: !395, line: 881, type: !4639, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4641)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!153, !140, !125}
!4641 = !{!4642, !4643, !4644, !4645, !4646}
!4642 = !DILocalVariable(name: "fmt", arg: 1, scope: !4638, file: !395, line: 881, type: !140)
!4643 = !DILocalVariable(name: "n", arg: 2, scope: !4638, file: !395, line: 881, type: !125)
!4644 = !DILocalVariable(name: "c", scope: !4638, file: !395, line: 883, type: !142)
!4645 = !DILocalVariable(name: "mod", scope: !4638, file: !395, line: 884, type: !153)
!4646 = !DILocalVariable(name: "cnt", scope: !4638, file: !395, line: 885, type: !125)
!4647 = !DILocation(line: 0, scope: !4638)
!4648 = !DILocation(line: 887, column: 14, scope: !4638)
!4649 = !DILocation(line: 887, column: 22, scope: !4638)
!4650 = !DILocation(line: 887, column: 2, scope: !4638)
!4651 = !DILocation(line: 887, column: 18, scope: !4638)
!4652 = !DILocation(line: 888, column: 7, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4638, file: !395, line: 887, column: 31)
!4654 = !DILocation(line: 889, column: 12, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !395, line: 889, column: 8)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !395, line: 888, column: 12)
!4657 = distinct !DILexicalBlock(scope: !4653, file: !395, line: 888, column: 7)
!4658 = !DILocation(line: 889, column: 8, scope: !4656)
!4659 = !DILocation(line: 890, column: 11, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !395, line: 890, column: 9)
!4661 = distinct !DILexicalBlock(scope: !4655, file: !395, line: 889, column: 18)
!4662 = !DILocation(line: 890, column: 9, scope: !4661)
!4663 = !DILocation(line: 892, column: 16, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4660, file: !395, line: 892, column: 16)
!4665 = !DILocation(line: 892, column: 16, scope: !4660)
!4666 = !DILocation(line: 895, column: 15, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4655, file: !395, line: 895, column: 15)
!4668 = !DILocation(line: 895, column: 15, scope: !4655)
!4669 = !DILocation(line: 900, column: 9, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4653, file: !395, line: 900, column: 7)
!4671 = !DILocation(line: 900, column: 7, scope: !4653)
!4672 = distinct !{!4672, !4650, !4673}
!4673 = !DILocation(line: 903, column: 2, scope: !4638)
!4674 = !DILocation(line: 906, column: 1, scope: !4638)
!4675 = distinct !DISubprogram(name: "is_fmt_spec", scope: !395, file: !395, line: 873, type: !4676, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4678)
!4676 = !DISubroutineType(types: !4677)
!4677 = !{!153, !142}
!4678 = !{!4679}
!4679 = !DILocalVariable(name: "c", arg: 1, scope: !4675, file: !395, line: 873, type: !142)
!4680 = !DILocation(line: 0, scope: !4675)
!4681 = !DILocation(line: 875, column: 19, scope: !4675)
!4682 = !DILocation(line: 875, column: 2, scope: !4675)
!4683 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !395, file: !395, line: 908, type: !4684, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4690)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!125, !124, !272, !4686, !124, !208, !3012, !272}
!4686 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4225, line: 308, baseType: !4687)
!4687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4688, size: 32)
!4688 = !DISubroutineType(types: !4689)
!4689 = !{!125, !13, !272, !124}
!4690 = !{!4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4708, !4709, !4710, !4711, !4712, !4718, !4721, !4722, !4723, !4725, !4728, !4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4741, !4744, !4745, !4746, !4747, !4748, !4749, !4751, !4754, !4755, !4756}
!4691 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4683, file: !395, line: 908, type: !124)
!4692 = !DILocalVariable(name: "in_len", arg: 2, scope: !4683, file: !395, line: 909, type: !272)
!4693 = !DILocalVariable(name: "cb", arg: 3, scope: !4683, file: !395, line: 910, type: !4686)
!4694 = !DILocalVariable(name: "ctx", arg: 4, scope: !4683, file: !395, line: 911, type: !124)
!4695 = !DILocalVariable(name: "flags", arg: 5, scope: !4683, file: !395, line: 912, type: !208)
!4696 = !DILocalVariable(name: "strl", arg: 6, scope: !4683, file: !395, line: 913, type: !3012)
!4697 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4683, file: !395, line: 914, type: !272)
!4698 = !DILocalVariable(name: "buf", scope: !4683, file: !395, line: 918, type: !184)
!4699 = !DILocalVariable(name: "buf32", scope: !4683, file: !395, line: 919, type: !1090)
!4700 = !DILocalVariable(name: "args_size", scope: !4683, file: !395, line: 920, type: !32)
!4701 = !DILocalVariable(name: "ros_nbr", scope: !4683, file: !395, line: 920, type: !32)
!4702 = !DILocalVariable(name: "rws_nbr", scope: !4683, file: !395, line: 920, type: !32)
!4703 = !DILocalVariable(name: "fmt_present", scope: !4683, file: !395, line: 921, type: !153)
!4704 = !DILocalVariable(name: "rw_cpy", scope: !4683, file: !395, line: 922, type: !153)
!4705 = !DILocalVariable(name: "ro_cpy", scope: !4683, file: !395, line: 923, type: !153)
!4706 = !DILocalVariable(name: "in_desc", scope: !4683, file: !395, line: 924, type: !4707)
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 32)
!4708 = !DILocalVariable(name: "out_len", scope: !4683, file: !395, line: 960, type: !125)
!4709 = !DILocalVariable(name: "fmt", scope: !4683, file: !395, line: 965, type: !140)
!4710 = !DILocalVariable(name: "str_pos", scope: !4683, file: !395, line: 966, type: !184)
!4711 = !DILocalVariable(name: "strl_cnt", scope: !4683, file: !395, line: 967, type: !272)
!4712 = !DILocalVariable(name: "i", scope: !4713, file: !395, line: 973, type: !125)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !395, line: 973, column: 4)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !395, line: 972, column: 15)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !395, line: 972, column: 7)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !395, line: 970, column: 18)
!4717 = distinct !DILexicalBlock(scope: !4683, file: !395, line: 970, column: 6)
!4718 = !DILocalVariable(name: "str", scope: !4719, file: !395, line: 974, type: !140)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !395, line: 973, column: 38)
!4720 = distinct !DILexicalBlock(scope: !4713, file: !395, line: 973, column: 4)
!4721 = !DILocalVariable(name: "len", scope: !4719, file: !395, line: 975, type: !125)
!4722 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4716, file: !395, line: 990, type: !153)
!4723 = !DILocalVariable(name: "i", scope: !4724, file: !395, line: 995, type: !125)
!4724 = distinct !DILexicalBlock(scope: !4716, file: !395, line: 995, column: 3)
!4725 = !DILocalVariable(name: "arg_idx", scope: !4726, file: !395, line: 996, type: !150)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !395, line: 995, column: 37)
!4727 = distinct !DILexicalBlock(scope: !4724, file: !395, line: 995, column: 3)
!4728 = !DILocalVariable(name: "arg_pos", scope: !4726, file: !395, line: 997, type: !150)
!4729 = !DILocalVariable(name: "str", scope: !4726, file: !395, line: 998, type: !140)
!4730 = !DILocalVariable(name: "is_ro", scope: !4726, file: !395, line: 999, type: !153)
!4731 = !DILocalVariable(name: "len", scope: !4726, file: !395, line: 1000, type: !125)
!4732 = !DILocalVariable(name: "out_desc", scope: !4683, file: !395, line: 1038, type: !4228)
!4733 = !DILocalVariable(name: "cpy_str_pos", scope: !4683, file: !395, line: 1040, type: !311)
!4734 = !DILocalVariable(name: "keep_str_pos", scope: !4683, file: !395, line: 1042, type: !311)
!4735 = !DILocalVariable(name: "scpy_cnt", scope: !4683, file: !395, line: 1043, type: !150)
!4736 = !DILocalVariable(name: "keep_cnt", scope: !4683, file: !395, line: 1044, type: !150)
!4737 = !DILocalVariable(name: "dst", scope: !4683, file: !395, line: 1045, type: !184)
!4738 = !DILocalVariable(name: "rv", scope: !4683, file: !395, line: 1046, type: !125)
!4739 = !DILocalVariable(name: "i", scope: !4740, file: !395, line: 1074, type: !125)
!4740 = distinct !DILexicalBlock(scope: !4683, file: !395, line: 1074, column: 2)
!4741 = !DILocalVariable(name: "arg_idx", scope: !4742, file: !395, line: 1075, type: !150)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !395, line: 1074, column: 36)
!4743 = distinct !DILexicalBlock(scope: !4740, file: !395, line: 1074, column: 2)
!4744 = !DILocalVariable(name: "arg_pos", scope: !4742, file: !395, line: 1076, type: !150)
!4745 = !DILocalVariable(name: "str", scope: !4742, file: !395, line: 1077, type: !140)
!4746 = !DILocalVariable(name: "is_ro", scope: !4742, file: !395, line: 1078, type: !153)
!4747 = !DILocalVariable(name: "in_desc_backup", scope: !4683, file: !395, line: 1114, type: !4228)
!4748 = !DILocalVariable(name: "strs_len", scope: !4683, file: !395, line: 1134, type: !272)
!4749 = !DILocalVariable(name: "i", scope: !4750, file: !395, line: 1143, type: !125)
!4750 = distinct !DILexicalBlock(scope: !4683, file: !395, line: 1143, column: 2)
!4751 = !DILocalVariable(name: "loc", scope: !4752, file: !395, line: 1144, type: !150)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !395, line: 1143, column: 37)
!4753 = distinct !DILexicalBlock(scope: !4750, file: !395, line: 1143, column: 2)
!4754 = !DILocalVariable(name: "str", scope: !4752, file: !395, line: 1145, type: !140)
!4755 = !DILocalVariable(name: "str_len", scope: !4752, file: !395, line: 1146, type: !227)
!4756 = !DILabel(scope: !4757, name: "calculate_string_length", file: !395, line: 1021)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !395, line: 1020, column: 56)
!4758 = distinct !DILexicalBlock(scope: !4759, file: !395, line: 1020, column: 15)
!4759 = distinct !DILexicalBlock(scope: !4726, file: !395, line: 1014, column: 8)
!4760 = !DILocation(line: 0, scope: !4683)
!4761 = !DILocation(line: 919, column: 20, scope: !4683)
!4762 = !DILocation(line: 921, column: 27, scope: !4683)
!4763 = !DILocation(line: 921, column: 21, scope: !4683)
!4764 = !DILocation(line: 926, column: 18, scope: !4683)
!4765 = !DILocation(line: 926, column: 11, scope: !4683)
!4766 = !DILocation(line: 926, column: 34, scope: !4683)
!4767 = !DILocation(line: 931, column: 21, scope: !4683)
!4768 = !DILocation(line: 931, column: 12, scope: !4683)
!4769 = !DILocation(line: 932, column: 11, scope: !4683)
!4770 = !DILocation(line: 932, column: 19, scope: !4683)
!4771 = !DILocation(line: 938, column: 21, scope: !4683)
!4772 = !DILocation(line: 938, column: 12, scope: !4683)
!4773 = !DILocation(line: 939, column: 19, scope: !4683)
!4774 = !DILocation(line: 939, column: 23, scope: !4683)
!4775 = !DILocation(line: 946, column: 14, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4683, file: !395, line: 946, column: 6)
!4777 = !DILocation(line: 947, column: 7, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4779, file: !395, line: 947, column: 7)
!4779 = distinct !DILexicalBlock(scope: !4776, file: !395, line: 946, column: 26)
!4780 = !DILocation(line: 947, column: 7, scope: !4779)
!4781 = !DILocation(line: 948, column: 4, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4778, file: !395, line: 947, column: 11)
!4783 = !DILocation(line: 949, column: 3, scope: !4782)
!4784 = !DILocation(line: 958, column: 23, scope: !4683)
!4785 = !DILocation(line: 958, column: 14, scope: !4683)
!4786 = !DILocation(line: 958, column: 27, scope: !4683)
!4787 = !DILocation(line: 965, column: 41, scope: !4683)
!4788 = !DILocation(line: 965, column: 20, scope: !4683)
!4789 = !DILocation(line: 966, column: 22, scope: !4683)
!4790 = !DILocation(line: 970, column: 9, scope: !4717)
!4791 = !DILocation(line: 970, column: 6, scope: !4683)
!4792 = !DILocation(line: 972, column: 7, scope: !4716)
!4793 = !DILocation(line: 0, scope: !4713)
!4794 = !DILocation(line: 973, column: 4, scope: !4713)
!4795 = !DILocation(line: 974, column: 46, scope: !4719)
!4796 = !DILocation(line: 974, column: 40, scope: !4719)
!4797 = !DILocation(line: 974, column: 23, scope: !4719)
!4798 = !DILocation(line: 0, scope: !4719)
!4799 = !DILocation(line: 975, column: 15, scope: !4719)
!4800 = !DILocation(line: 978, column: 14, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4719, file: !395, line: 978, column: 9)
!4802 = !DILocation(line: 979, column: 25, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4801, file: !395, line: 978, column: 38)
!4804 = !DILocation(line: 979, column: 19, scope: !4803)
!4805 = !DILocation(line: 979, column: 6, scope: !4803)
!4806 = !DILocation(line: 979, column: 23, scope: !4803)
!4807 = !DILocation(line: 980, column: 5, scope: !4803)
!4808 = !DILocation(line: 981, column: 13, scope: !4719)
!4809 = !DILocation(line: 982, column: 12, scope: !4719)
!4810 = !DILocation(line: 973, column: 34, scope: !4720)
!4811 = !DILocation(line: 973, column: 22, scope: !4720)
!4812 = distinct !{!4812, !4794, !4813}
!4813 = !DILocation(line: 983, column: 4, scope: !4713)
!4814 = !DILocation(line: 985, column: 16, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4816, file: !395, line: 985, column: 8)
!4816 = distinct !DILexicalBlock(scope: !4715, file: !395, line: 984, column: 10)
!4817 = !DILocation(line: 967, column: 9, scope: !4683)
!4818 = !DILocation(line: 971, column: 11, scope: !4716)
!4819 = !DILocation(line: 0, scope: !4716)
!4820 = !DILocation(line: 0, scope: !4724)
!4821 = !DILocation(line: 995, column: 21, scope: !4727)
!4822 = !DILocation(line: 995, column: 3, scope: !4724)
!4823 = !DILocation(line: 990, column: 34, scope: !4716)
!4824 = !DILocation(line: 990, column: 26, scope: !4716)
!4825 = !DILocation(line: 996, column: 30, scope: !4726)
!4826 = !DILocation(line: 0, scope: !4726)
!4827 = !DILocation(line: 997, column: 30, scope: !4726)
!4828 = !DILocation(line: 997, column: 22, scope: !4726)
!4829 = !DILocation(line: 998, column: 39, scope: !4726)
!4830 = !DILocation(line: 998, column: 22, scope: !4726)
!4831 = !DILocation(line: 999, column: 17, scope: !4726)
!4832 = !DILocation(line: 1002, column: 20, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4726, file: !395, line: 1002, column: 8)
!4834 = !DILocation(line: 996, column: 22, scope: !4726)
!4835 = !DILocation(line: 1002, column: 35, scope: !4833)
!4836 = !DILocation(line: 1002, column: 23, scope: !4833)
!4837 = !DILocation(line: 1002, column: 8, scope: !4726)
!4838 = !DILocation(line: 1003, column: 5, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4840, file: !395, line: 1003, column: 5)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !395, line: 1003, column: 5)
!4841 = distinct !DILexicalBlock(scope: !4842, file: !395, line: 1003, column: 5)
!4842 = distinct !DILexicalBlock(scope: !4843, file: !395, line: 1003, column: 5)
!4843 = distinct !DILexicalBlock(scope: !4833, file: !395, line: 1002, column: 45)
!4844 = !DILocation(line: 1010, column: 13, scope: !4843)
!4845 = !DILocation(line: 1011, column: 5, scope: !4843)
!4846 = !DILocation(line: 1014, column: 8, scope: !4726)
!4847 = !DILocation(line: 1015, column: 9, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4759, file: !395, line: 1014, column: 15)
!4849 = !DILocation(line: 1018, column: 14, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4851, file: !395, line: 1017, column: 12)
!4851 = distinct !DILexicalBlock(scope: !4848, file: !395, line: 1015, column: 9)
!4852 = !DILocation(line: 1020, column: 4, scope: !4848)
!4853 = !DILocation(line: 1020, column: 15, scope: !4759)
!4854 = !DILocation(line: 1021, column: 1, scope: !4757)
!4855 = !DILocation(line: 1022, column: 11, scope: !4757)
!4856 = !DILocation(line: 1025, column: 14, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4757, file: !395, line: 1025, column: 9)
!4858 = !DILocation(line: 1026, column: 25, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4857, file: !395, line: 1025, column: 38)
!4860 = !DILocation(line: 1026, column: 19, scope: !4859)
!4861 = !DILocation(line: 1026, column: 6, scope: !4859)
!4862 = !DILocation(line: 1026, column: 23, scope: !4859)
!4863 = !DILocation(line: 1027, column: 5, scope: !4859)
!4864 = !DILocation(line: 1031, column: 21, scope: !4757)
!4865 = !DILocation(line: 1031, column: 13, scope: !4757)
!4866 = !DILocation(line: 1032, column: 4, scope: !4757)
!4867 = !DILocation(line: 995, column: 33, scope: !4727)
!4868 = distinct !{!4868, !4822, !4869}
!4869 = !DILocation(line: 1033, column: 3, scope: !4724)
!4870 = !DILocation(line: 1040, column: 10, scope: !4683)
!4871 = !DILocation(line: 1042, column: 10, scope: !4683)
!4872 = !DILocation(line: 1052, column: 6, scope: !4683)
!4873 = !DILocation(line: 1055, column: 9, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4875, file: !395, line: 1052, column: 14)
!4875 = distinct !DILexicalBlock(scope: !4683, file: !395, line: 1052, column: 6)
!4876 = !DILocation(line: 1056, column: 2, scope: !4874)
!4877 = !DILocation(line: 1056, column: 21, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4875, file: !395, line: 1056, column: 13)
!4879 = !DILocation(line: 1066, column: 3, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4881, file: !395, line: 1065, column: 11)
!4881 = distinct !DILexicalBlock(scope: !4683, file: !395, line: 1065, column: 6)
!4882 = !DILocation(line: 1067, column: 2, scope: !4880)
!4883 = !DILocation(line: 1068, column: 10, scope: !4683)
!4884 = !DILocation(line: 0, scope: !4740)
!4885 = !DILocation(line: 1074, column: 20, scope: !4743)
!4886 = !DILocation(line: 1074, column: 2, scope: !4740)
!4887 = !DILocation(line: 1110, column: 24, scope: !4683)
!4888 = !DILocation(line: 1053, column: 12, scope: !4874)
!4889 = !DILocation(line: 1054, column: 12, scope: !4874)
!4890 = !DILocation(line: 1108, column: 30, scope: !4683)
!4891 = !DILocation(line: 1108, column: 40, scope: !4683)
!4892 = !DILocation(line: 1108, column: 38, scope: !4683)
!4893 = !DILocation(line: 1109, column: 31, scope: !4683)
!4894 = !DILocation(line: 1109, column: 24, scope: !4683)
!4895 = !DILocation(line: 1110, column: 31, scope: !4683)
!4896 = !DILocation(line: 1114, column: 31, scope: !4683)
!4897 = !DILocation(line: 1114, column: 48, scope: !4683)
!4898 = !DILocation(line: 1115, column: 13, scope: !4683)
!4899 = !DILocation(line: 1118, column: 7, scope: !4683)
!4900 = !DILocation(line: 1119, column: 9, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4683, file: !395, line: 1119, column: 6)
!4902 = !DILocation(line: 1119, column: 6, scope: !4683)
!4903 = !DILocation(line: 1075, column: 29, scope: !4742)
!4904 = !DILocation(line: 1075, column: 21, scope: !4742)
!4905 = !DILocation(line: 0, scope: !4742)
!4906 = !DILocation(line: 1076, column: 29, scope: !4742)
!4907 = !DILocation(line: 1076, column: 21, scope: !4742)
!4908 = !DILocation(line: 1077, column: 38, scope: !4742)
!4909 = !DILocation(line: 1077, column: 21, scope: !4742)
!4910 = !DILocation(line: 1078, column: 16, scope: !4742)
!4911 = !DILocation(line: 1080, column: 19, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4742, file: !395, line: 1080, column: 7)
!4913 = !DILocation(line: 1080, column: 34, scope: !4912)
!4914 = !DILocation(line: 1080, column: 22, scope: !4912)
!4915 = !DILocation(line: 1080, column: 7, scope: !4742)
!4916 = !DILocation(line: 1084, column: 7, scope: !4742)
!4917 = !DILocation(line: 1085, column: 8, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !395, line: 1084, column: 14)
!4919 = distinct !DILexicalBlock(scope: !4742, file: !395, line: 1084, column: 7)
!4920 = !DILocation(line: 1087, column: 25, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4922, file: !395, line: 1085, column: 49)
!4922 = distinct !DILexicalBlock(scope: !4918, file: !395, line: 1085, column: 8)
!4923 = !DILocation(line: 1088, column: 4, scope: !4921)
!4924 = !DILocation(line: 1088, column: 15, scope: !4922)
!4925 = !DILocation(line: 1090, column: 26, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !395, line: 1088, column: 61)
!4927 = distinct !DILexicalBlock(scope: !4922, file: !395, line: 1088, column: 15)
!4928 = !DILocation(line: 1091, column: 4, scope: !4926)
!4929 = !DILocation(line: 1095, column: 8, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4919, file: !395, line: 1094, column: 10)
!4931 = !DILocation(line: 1097, column: 25, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !395, line: 1095, column: 49)
!4933 = distinct !DILexicalBlock(scope: !4930, file: !395, line: 1095, column: 8)
!4934 = !DILocation(line: 1098, column: 4, scope: !4932)
!4935 = !DILocation(line: 1100, column: 26, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4933, file: !395, line: 1098, column: 11)
!4937 = !DILocation(line: 1100, column: 5, scope: !4936)
!4938 = !DILocation(line: 1100, column: 30, scope: !4936)
!4939 = !DILocation(line: 1101, column: 26, scope: !4936)
!4940 = !DILocation(line: 0, scope: !4919)
!4941 = !DILocation(line: 1074, column: 32, scope: !4743)
!4942 = distinct !{!4942, !4886, !4943}
!4943 = !DILocation(line: 1104, column: 2, scope: !4740)
!4944 = !DILocation(line: 1124, column: 13, scope: !4683)
!4945 = !DILocation(line: 1127, column: 10, scope: !4683)
!4946 = !DILocation(line: 1127, column: 7, scope: !4683)
!4947 = !DILocation(line: 1128, column: 9, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4683, file: !395, line: 1128, column: 6)
!4949 = !DILocation(line: 1128, column: 6, scope: !4683)
!4950 = !DILocation(line: 1134, column: 27, scope: !4683)
!4951 = !DILocation(line: 1136, column: 7, scope: !4683)
!4952 = !DILocation(line: 1137, column: 9, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4683, file: !395, line: 1137, column: 6)
!4954 = !DILocation(line: 1137, column: 6, scope: !4683)
!4955 = !DILocation(line: 1131, column: 10, scope: !4683)
!4956 = !DILocation(line: 1140, column: 10, scope: !4683)
!4957 = !DILocation(line: 0, scope: !4750)
!4958 = !DILocation(line: 1143, column: 20, scope: !4753)
!4959 = !DILocation(line: 1143, column: 2, scope: !4750)
!4960 = !DILocation(line: 1144, column: 3, scope: !4752)
!4961 = !DILocation(line: 1144, column: 17, scope: !4752)
!4962 = !DILocation(line: 0, scope: !4752)
!4963 = !DILocation(line: 1144, column: 11, scope: !4752)
!4964 = !DILocation(line: 1145, column: 38, scope: !4752)
!4965 = !DILocation(line: 1145, column: 21, scope: !4752)
!4966 = !DILocation(line: 1146, column: 22, scope: !4752)
!4967 = !DILocation(line: 1146, column: 29, scope: !4752)
!4968 = !DILocation(line: 1148, column: 8, scope: !4752)
!4969 = !DILocation(line: 1149, column: 10, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4752, file: !395, line: 1149, column: 7)
!4971 = !DILocation(line: 1149, column: 7, scope: !4752)
!4972 = !DILocation(line: 1154, column: 8, scope: !4752)
!4973 = !DILocation(line: 1155, column: 10, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4752, file: !395, line: 1155, column: 7)
!4975 = !DILocation(line: 1155, column: 7, scope: !4752)
!4976 = !DILocation(line: 1159, column: 2, scope: !4753)
!4977 = !DILocation(line: 1152, column: 11, scope: !4752)
!4978 = !DILocation(line: 1158, column: 11, scope: !4752)
!4979 = !DILocation(line: 1143, column: 33, scope: !4753)
!4980 = distinct !{!4980, !4959, !4981}
!4981 = !DILocation(line: 1159, column: 2, scope: !4750)
!4982 = !DILocation(line: 1162, column: 8, scope: !4683)
!4983 = !DILocation(line: 1164, column: 2, scope: !4683)
!4984 = !DILocation(line: 1165, column: 1, scope: !4683)
!4985 = distinct !DISubprogram(name: "get_package_len", scope: !395, file: !395, line: 196, type: !4986, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4988)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{!272, !124}
!4988 = !{!4989, !4990, !4991, !4992, !4993, !4994, !4995}
!4989 = !DILocalVariable(name: "packaged", arg: 1, scope: !4985, file: !395, line: 196, type: !124)
!4990 = !DILocalVariable(name: "buf", scope: !4985, file: !395, line: 200, type: !184)
!4991 = !DILocalVariable(name: "start", scope: !4985, file: !395, line: 201, type: !184)
!4992 = !DILocalVariable(name: "args_size", scope: !4985, file: !395, line: 202, type: !32)
!4993 = !DILocalVariable(name: "s_nbr", scope: !4985, file: !395, line: 202, type: !32)
!4994 = !DILocalVariable(name: "ros_nbr", scope: !4985, file: !395, line: 202, type: !32)
!4995 = !DILocalVariable(name: "i", scope: !4996, file: !395, line: 215, type: !125)
!4996 = distinct !DILexicalBlock(scope: !4985, file: !395, line: 215, column: 2)
!4997 = !DILocation(line: 0, scope: !4985)
!4998 = !DILocation(line: 204, column: 14, scope: !4985)
!4999 = !DILocation(line: 204, column: 21, scope: !4985)
!5000 = !DILocation(line: 205, column: 14, scope: !4985)
!5001 = !DILocation(line: 206, column: 14, scope: !4985)
!5002 = !DILocation(line: 209, column: 6, scope: !4985)
!5003 = !DILocation(line: 212, column: 6, scope: !4985)
!5004 = !DILocation(line: 0, scope: !4996)
!5005 = !DILocation(line: 215, column: 20, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4996, file: !395, line: 215, column: 2)
!5007 = !DILocation(line: 215, column: 2, scope: !4996)
!5008 = !DILocation(line: 220, column: 33, scope: !4985)
!5009 = !DILocation(line: 220, column: 2, scope: !4985)
!5010 = !DILocation(line: 216, column: 6, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5006, file: !395, line: 215, column: 34)
!5012 = !DILocation(line: 217, column: 10, scope: !5011)
!5013 = !DILocation(line: 217, column: 36, scope: !5011)
!5014 = !DILocation(line: 217, column: 7, scope: !5011)
!5015 = !DILocation(line: 215, column: 30, scope: !5006)
!5016 = distinct !{!5016, !5007, !5017}
!5017 = !DILocation(line: 218, column: 2, scope: !4996)
!5018 = distinct !DISubprogram(name: "append_string", scope: !395, file: !395, line: 223, type: !5019, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5021)
!5019 = !DISubroutineType(types: !5020)
!5020 = !{!125, !4686, !124, !140, !227}
!5021 = !{!5022, !5023, !5024, !5025}
!5022 = !DILocalVariable(name: "cb", arg: 1, scope: !5018, file: !395, line: 223, type: !4686)
!5023 = !DILocalVariable(name: "ctx", arg: 2, scope: !5018, file: !395, line: 223, type: !124)
!5024 = !DILocalVariable(name: "str", arg: 3, scope: !5018, file: !395, line: 223, type: !140)
!5025 = !DILocalVariable(name: "strl", arg: 4, scope: !5018, file: !395, line: 223, type: !227)
!5026 = !DILocation(line: 0, scope: !5018)
!5027 = !DILocation(line: 225, column: 9, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5018, file: !395, line: 225, column: 6)
!5029 = !DILocation(line: 225, column: 6, scope: !5018)
!5030 = !DILocation(line: 226, column: 14, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5028, file: !395, line: 225, column: 18)
!5032 = !DILocation(line: 226, column: 12, scope: !5031)
!5033 = !DILocation(line: 226, column: 3, scope: !5031)
!5034 = !DILocation(line: 229, column: 14, scope: !5018)
!5035 = !DILocation(line: 229, column: 9, scope: !5018)
!5036 = !DILocation(line: 229, column: 27, scope: !5018)
!5037 = !DILocation(line: 229, column: 39, scope: !5018)
!5038 = !DILocation(line: 230, column: 17, scope: !5018)
!5039 = !DILocation(line: 230, column: 9, scope: !5018)
!5040 = !DILocation(line: 230, column: 2, scope: !5018)
!5041 = !DILocation(line: 231, column: 1, scope: !5018)
!5042 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !408, file: !408, line: 45, type: !410, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5043)
!5043 = !{!5044}
!5044 = !DILocalVariable(name: "c", arg: 1, scope: !5042, file: !408, line: 45, type: !125)
!5045 = !DILocation(line: 0, scope: !5042)
!5046 = !DILocation(line: 50, column: 2, scope: !5042)
!5047 = distinct !DISubprogram(name: "__printk_hook_install", scope: !408, file: !408, line: 63, type: !5048, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5050)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{null, !409}
!5050 = !{!5051}
!5051 = !DILocalVariable(name: "fn", arg: 1, scope: !5047, file: !408, line: 63, type: !409)
!5052 = !DILocation(line: 0, scope: !5047)
!5053 = !DILocation(line: 65, column: 12, scope: !5047)
!5054 = !DILocation(line: 66, column: 1, scope: !5047)
!5055 = distinct !DISubprogram(name: "__printk_get_hook", scope: !408, file: !408, line: 76, type: !5056, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !652)
!5056 = !DISubroutineType(types: !5057)
!5057 = !{!124}
!5058 = !DILocation(line: 78, column: 9, scope: !5055)
!5059 = !DILocation(line: 78, column: 2, scope: !5055)
!5060 = distinct !DISubprogram(name: "vprintk", scope: !408, file: !408, line: 113, type: !5061, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5069)
!5061 = !DISubroutineType(types: !5062)
!5062 = !{null, !140, !5063}
!5063 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4194, line: 99, baseType: !5064)
!5064 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4194, line: 40, baseType: !5065)
!5065 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !408, baseType: !5066)
!5066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5067)
!5067 = !{!5068}
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5066, file: !408, line: 79, baseType: !124, size: 32)
!5069 = !{!5070, !5071, !5072}
!5070 = !DILocalVariable(name: "fmt", arg: 1, scope: !5060, file: !408, line: 113, type: !140)
!5071 = !DILocalVariable(name: "ap", arg: 2, scope: !5060, file: !408, line: 113, type: !5063)
!5072 = !DILocalVariable(name: "ctx", scope: !5073, file: !408, line: 121, type: !5075)
!5073 = distinct !DILexicalBlock(scope: !5074, file: !408, line: 120, column: 27)
!5074 = distinct !DILexicalBlock(scope: !5060, file: !408, line: 120, column: 6)
!5075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !408, line: 81, size: 32, elements: !5076)
!5076 = !{!5077, !5078}
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5075, file: !408, line: 85, baseType: !32, size: 32)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5075, file: !408, line: 86, baseType: !5079, offset: 32)
!5079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, elements: !5080)
!5080 = !{!5081}
!5081 = !DISubrange(count: 0)
!5082 = !DILocation(line: 0, scope: !5060)
!5083 = !DILocation(line: 148, column: 3, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5074, file: !408, line: 138, column: 9)
!5085 = !DILocation(line: 155, column: 1, scope: !5060)
!5086 = distinct !DISubprogram(name: "char_out", scope: !408, file: !408, line: 107, type: !5087, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5089)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!125, !125, !124}
!5089 = !{!5090, !5091}
!5090 = !DILocalVariable(name: "c", arg: 1, scope: !5086, file: !408, line: 107, type: !125)
!5091 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5086, file: !408, line: 107, type: !124)
!5092 = !DILocation(line: 0, scope: !5086)
!5093 = !DILocation(line: 110, column: 9, scope: !5086)
!5094 = !DILocation(line: 110, column: 2, scope: !5086)
!5095 = distinct !DISubprogram(name: "cbvprintf", scope: !4225, file: !4225, line: 739, type: !5096, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5098)
!5096 = !DISubroutineType(types: !5097)
!5097 = !{!125, !4554, !124, !140, !5063}
!5098 = !{!5099, !5100, !5101, !5102}
!5099 = !DILocalVariable(name: "out", arg: 1, scope: !5095, file: !4225, line: 739, type: !4554)
!5100 = !DILocalVariable(name: "ctx", arg: 2, scope: !5095, file: !4225, line: 739, type: !124)
!5101 = !DILocalVariable(name: "format", arg: 3, scope: !5095, file: !4225, line: 739, type: !140)
!5102 = !DILocalVariable(name: "ap", arg: 4, scope: !5095, file: !4225, line: 739, type: !5063)
!5103 = !DILocation(line: 0, scope: !5095)
!5104 = !DILocation(line: 741, column: 9, scope: !5095)
!5105 = !DILocation(line: 741, column: 2, scope: !5095)
!5106 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !408, file: !408, line: 157, type: !5107, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5109)
!5107 = !DISubroutineType(types: !5108)
!5108 = !{null, !393, !272}
!5109 = !{!5110, !5111, !5112}
!5110 = !DILocalVariable(name: "c", arg: 1, scope: !5106, file: !408, line: 157, type: !393)
!5111 = !DILocalVariable(name: "n", arg: 2, scope: !5106, file: !408, line: 157, type: !272)
!5112 = !DILocalVariable(name: "i", scope: !5106, file: !408, line: 159, type: !272)
!5113 = !DILocation(line: 0, scope: !5106)
!5114 = !DILocation(line: 164, column: 16, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5116, file: !408, line: 164, column: 2)
!5116 = distinct !DILexicalBlock(scope: !5106, file: !408, line: 164, column: 2)
!5117 = !DILocation(line: 164, column: 2, scope: !5116)
!5118 = !DILocation(line: 165, column: 3, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5115, file: !408, line: 164, column: 26)
!5120 = !DILocation(line: 165, column: 13, scope: !5119)
!5121 = !DILocation(line: 164, column: 22, scope: !5115)
!5122 = distinct !{!5122, !5117, !5123}
!5123 = !DILocation(line: 166, column: 2, scope: !5116)
!5124 = !DILocation(line: 171, column: 1, scope: !5106)
!5125 = distinct !DISubprogram(name: "printk", scope: !408, file: !408, line: 203, type: !5126, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5128)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{null, !140, null}
!5128 = !{!5129, !5130}
!5129 = !DILocalVariable(name: "fmt", arg: 1, scope: !5125, file: !408, line: 203, type: !140)
!5130 = !DILocalVariable(name: "ap", scope: !5125, file: !408, line: 205, type: !5063)
!5131 = !DILocation(line: 0, scope: !5125)
!5132 = !DILocation(line: 205, column: 2, scope: !5125)
!5133 = !DILocation(line: 205, column: 10, scope: !5125)
!5134 = !DILocation(line: 207, column: 2, scope: !5125)
!5135 = !DILocation(line: 209, column: 2, scope: !5125)
!5136 = !DILocation(line: 211, column: 2, scope: !5125)
!5137 = !DILocation(line: 212, column: 1, scope: !5125)
!5138 = distinct !DISubprogram(name: "snprintk", scope: !408, file: !408, line: 239, type: !5139, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5141)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{!125, !393, !272, !140, null}
!5141 = !{!5142, !5143, !5144, !5145, !5146}
!5142 = !DILocalVariable(name: "str", arg: 1, scope: !5138, file: !408, line: 239, type: !393)
!5143 = !DILocalVariable(name: "size", arg: 2, scope: !5138, file: !408, line: 239, type: !272)
!5144 = !DILocalVariable(name: "fmt", arg: 3, scope: !5138, file: !408, line: 239, type: !140)
!5145 = !DILocalVariable(name: "ap", scope: !5138, file: !408, line: 241, type: !5063)
!5146 = !DILocalVariable(name: "ret", scope: !5138, file: !408, line: 242, type: !125)
!5147 = !DILocation(line: 0, scope: !5138)
!5148 = !DILocation(line: 241, column: 2, scope: !5138)
!5149 = !DILocation(line: 241, column: 10, scope: !5138)
!5150 = !DILocation(line: 244, column: 2, scope: !5138)
!5151 = !DILocation(line: 245, column: 8, scope: !5138)
!5152 = !DILocation(line: 246, column: 2, scope: !5138)
!5153 = !DILocation(line: 249, column: 1, scope: !5138)
!5154 = !DILocation(line: 248, column: 2, scope: !5138)
!5155 = distinct !DISubprogram(name: "vsnprintk", scope: !408, file: !408, line: 251, type: !5156, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5158)
!5156 = !DISubroutineType(types: !5157)
!5157 = !{!125, !393, !272, !140, !5063}
!5158 = !{!5159, !5160, !5161, !5162, !5163}
!5159 = !DILocalVariable(name: "str", arg: 1, scope: !5155, file: !408, line: 251, type: !393)
!5160 = !DILocalVariable(name: "size", arg: 2, scope: !5155, file: !408, line: 251, type: !272)
!5161 = !DILocalVariable(name: "fmt", arg: 3, scope: !5155, file: !408, line: 251, type: !140)
!5162 = !DILocalVariable(name: "ap", arg: 4, scope: !5155, file: !408, line: 251, type: !5063)
!5163 = !DILocalVariable(name: "ctx", scope: !5155, file: !408, line: 253, type: !5164)
!5164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !408, line: 217, size: 96, elements: !5165)
!5165 = !{!5166, !5167, !5168}
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5164, file: !408, line: 218, baseType: !393, size: 32)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5164, file: !408, line: 219, baseType: !125, size: 32, offset: 32)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5164, file: !408, line: 220, baseType: !125, size: 32, offset: 64)
!5169 = !DILocation(line: 0, scope: !5155)
!5170 = !DILocation(line: 253, column: 2, scope: !5155)
!5171 = !DILocation(line: 253, column: 21, scope: !5155)
!5172 = !DILocation(line: 253, column: 27, scope: !5155)
!5173 = !DILocation(line: 255, column: 2, scope: !5155)
!5174 = !DILocation(line: 257, column: 10, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5155, file: !408, line: 257, column: 6)
!5176 = !DILocation(line: 257, column: 22, scope: !5175)
!5177 = !DILocation(line: 257, column: 16, scope: !5175)
!5178 = !DILocation(line: 257, column: 6, scope: !5155)
!5179 = !DILocation(line: 258, column: 3, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5175, file: !408, line: 257, column: 27)
!5181 = !DILocation(line: 258, column: 18, scope: !5180)
!5182 = !DILocation(line: 259, column: 2, scope: !5180)
!5183 = !DILocation(line: 262, column: 1, scope: !5155)
!5184 = !DILocation(line: 261, column: 2, scope: !5155)
!5185 = distinct !DISubprogram(name: "str_out", scope: !408, file: !408, line: 223, type: !5186, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5189)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{!125, !125, !5188}
!5188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5164, size: 32)
!5189 = !{!5190, !5191}
!5190 = !DILocalVariable(name: "c", arg: 1, scope: !5185, file: !408, line: 223, type: !125)
!5191 = !DILocalVariable(name: "ctx", arg: 2, scope: !5185, file: !408, line: 223, type: !5188)
!5192 = !DILocation(line: 0, scope: !5185)
!5193 = !DILocation(line: 225, column: 11, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5185, file: !408, line: 225, column: 6)
!5195 = !DILocation(line: 225, column: 15, scope: !5194)
!5196 = !DILocation(line: 0, scope: !5194)
!5197 = !DILocation(line: 225, column: 23, scope: !5194)
!5198 = !DILocation(line: 225, column: 45, scope: !5194)
!5199 = !DILocation(line: 225, column: 37, scope: !5194)
!5200 = !DILocation(line: 225, column: 6, scope: !5185)
!5201 = !DILocation(line: 226, column: 8, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5194, file: !408, line: 225, column: 50)
!5203 = !DILocation(line: 226, column: 13, scope: !5202)
!5204 = !DILocation(line: 227, column: 3, scope: !5202)
!5205 = !DILocation(line: 230, column: 29, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5185, file: !408, line: 230, column: 6)
!5207 = !DILocation(line: 230, column: 17, scope: !5206)
!5208 = !DILocation(line: 230, column: 6, scope: !5185)
!5209 = !DILocation(line: 231, column: 22, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5206, file: !408, line: 230, column: 34)
!5211 = !DILocation(line: 231, column: 3, scope: !5210)
!5212 = !DILocation(line: 231, column: 26, scope: !5210)
!5213 = !DILocation(line: 232, column: 2, scope: !5210)
!5214 = !DILocation(line: 233, column: 28, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5206, file: !408, line: 232, column: 9)
!5216 = !DILocation(line: 233, column: 22, scope: !5215)
!5217 = !DILocation(line: 233, column: 3, scope: !5215)
!5218 = !DILocation(line: 233, column: 26, scope: !5215)
!5219 = !DILocation(line: 237, column: 1, scope: !5185)
!5220 = distinct !DISubprogram(name: "z_thread_entry", scope: !5221, file: !5221, line: 30, type: !5222, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !5229)
!5221 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5222 = !DISubroutineType(types: !5223)
!5223 = !{null, !5224, !124, !124, !124}
!5224 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5225, line: 46, baseType: !5226)
!5225 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5227, size: 32)
!5227 = !DISubroutineType(types: !5228)
!5228 = !{null, !124, !124, !124}
!5229 = !{!5230, !5231, !5232, !5233}
!5230 = !DILocalVariable(name: "entry", arg: 1, scope: !5220, file: !5221, line: 30, type: !5224)
!5231 = !DILocalVariable(name: "p1", arg: 2, scope: !5220, file: !5221, line: 31, type: !124)
!5232 = !DILocalVariable(name: "p2", arg: 3, scope: !5220, file: !5221, line: 31, type: !124)
!5233 = !DILocalVariable(name: "p3", arg: 4, scope: !5220, file: !5221, line: 31, type: !124)
!5234 = !DILocation(line: 0, scope: !5220)
!5235 = !DILocation(line: 36, column: 2, scope: !5220)
!5236 = !DILocation(line: 38, column: 17, scope: !5220)
!5237 = !DILocation(line: 38, column: 2, scope: !5220)
!5238 = !DILocation(line: 45, column: 2, scope: !5220)
!5239 = distinct !DISubprogram(name: "k_current_get", scope: !637, file: !637, line: 530, type: !5240, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !652)
!5240 = !DISubroutineType(types: !5241)
!5241 = !{!5242}
!5242 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !544, line: 347, baseType: !5243)
!5243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5244, size: 32)
!5244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !544, line: 245, size: 1024, elements: !5245)
!5245 = !{!5246, !5304, !5316, !5317, !5318, !5319, !5325, !5338}
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5244, file: !544, line: 247, baseType: !5247, size: 384)
!5247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !544, line: 57, size: 384, elements: !5248)
!5248 = !{!5249, !5273, !5280, !5281, !5282, !5291, !5292, !5293}
!5249 = !DIDerivedType(tag: DW_TAG_member, scope: !5247, file: !544, line: 60, baseType: !5250, size: 64)
!5250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5247, file: !544, line: 60, size: 64, elements: !5251)
!5251 = !{!5252, !5267}
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5250, file: !544, line: 61, baseType: !5253, size: 64)
!5253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !554, line: 49, baseType: !5254)
!5254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !554, line: 37, size: 64, elements: !5255)
!5255 = !{!5256, !5262}
!5256 = !DIDerivedType(tag: DW_TAG_member, scope: !5254, file: !554, line: 38, baseType: !5257, size: 32)
!5257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5254, file: !554, line: 38, size: 32, elements: !5258)
!5258 = !{!5259, !5261}
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5257, file: !554, line: 39, baseType: !5260, size: 32)
!5260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5254, size: 32)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5257, file: !554, line: 40, baseType: !5260, size: 32)
!5262 = !DIDerivedType(tag: DW_TAG_member, scope: !5254, file: !554, line: 42, baseType: !5263, size: 32, offset: 32)
!5263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5254, file: !554, line: 42, size: 32, elements: !5264)
!5264 = !{!5265, !5266}
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5263, file: !554, line: 43, baseType: !5260, size: 32)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5263, file: !554, line: 44, baseType: !5260, size: 32)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5250, file: !544, line: 62, baseType: !5268, size: 64)
!5268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !570, line: 49, size: 64, elements: !5269)
!5269 = !{!5270}
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5268, file: !570, line: 50, baseType: !5271, size: 64)
!5271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5272, size: 64, elements: !575)
!5272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5268, size: 32)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5247, file: !544, line: 68, baseType: !5274, size: 32, offset: 64)
!5274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5275, size: 32)
!5275 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !580, line: 233, baseType: !5276)
!5276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 231, size: 64, elements: !5277)
!5277 = !{!5278}
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5276, file: !580, line: 232, baseType: !5279, size: 64)
!5279 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !554, line: 48, baseType: !5254)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5247, file: !544, line: 71, baseType: !150, size: 8, offset: 96)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5247, file: !544, line: 74, baseType: !150, size: 8, offset: 104)
!5282 = !DIDerivedType(tag: DW_TAG_member, scope: !5247, file: !544, line: 90, baseType: !5283, size: 16, offset: 112)
!5283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5247, file: !544, line: 90, size: 16, elements: !5284)
!5284 = !{!5285, !5290}
!5285 = !DIDerivedType(tag: DW_TAG_member, scope: !5283, file: !544, line: 91, baseType: !5286, size: 16)
!5286 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5283, file: !544, line: 91, size: 16, elements: !5287)
!5287 = !{!5288, !5289}
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5286, file: !544, line: 96, baseType: !594, size: 8)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5286, file: !544, line: 97, baseType: !150, size: 8, offset: 8)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5283, file: !544, line: 100, baseType: !227, size: 16)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5247, file: !544, line: 107, baseType: !208, size: 32, offset: 128)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5247, file: !544, line: 127, baseType: !124, size: 32, offset: 160)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5247, file: !544, line: 131, baseType: !5294, size: 192, offset: 192)
!5294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !580, line: 244, size: 192, elements: !5295)
!5295 = !{!5296, !5297, !5303}
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5294, file: !580, line: 245, baseType: !5253, size: 64)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5294, file: !580, line: 246, baseType: !5298, size: 32, offset: 64)
!5298 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !580, line: 242, baseType: !5299)
!5299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5300, size: 32)
!5300 = !DISubroutineType(types: !5301)
!5301 = !{null, !5302}
!5302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5294, size: 32)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5294, file: !580, line: 249, baseType: !611, size: 64, offset: 128)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5244, file: !544, line: 250, baseType: !5305, size: 288, offset: 384)
!5305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !614, line: 25, size: 288, elements: !5306)
!5306 = !{!5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314, !5315}
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5305, file: !614, line: 26, baseType: !208, size: 32)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5305, file: !614, line: 27, baseType: !208, size: 32, offset: 32)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5305, file: !614, line: 28, baseType: !208, size: 32, offset: 64)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5305, file: !614, line: 29, baseType: !208, size: 32, offset: 96)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5305, file: !614, line: 30, baseType: !208, size: 32, offset: 128)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5305, file: !614, line: 31, baseType: !208, size: 32, offset: 160)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5305, file: !614, line: 32, baseType: !208, size: 32, offset: 192)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5305, file: !614, line: 33, baseType: !208, size: 32, offset: 224)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5305, file: !614, line: 34, baseType: !208, size: 32, offset: 256)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5244, file: !544, line: 253, baseType: !124, size: 32, offset: 672)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5244, file: !544, line: 256, baseType: !5275, size: 64, offset: 704)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5244, file: !544, line: 294, baseType: !125, size: 32, offset: 768)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5244, file: !544, line: 300, baseType: !5320, size: 96, offset: 800)
!5320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !544, line: 149, size: 96, elements: !5321)
!5321 = !{!5322, !5323, !5324}
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5320, file: !544, line: 153, baseType: !22, size: 32)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5320, file: !544, line: 162, baseType: !272, size: 32, offset: 32)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5320, file: !544, line: 168, baseType: !272, size: 32, offset: 64)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5244, file: !544, line: 325, baseType: !5326, size: 32, offset: 896)
!5326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5327, size: 32)
!5327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !637, line: 5073, size: 160, elements: !5328)
!5328 = !{!5329, !5335, !5336}
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5327, file: !637, line: 5074, baseType: !5330, size: 96)
!5330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !641, line: 56, size: 96, elements: !5331)
!5331 = !{!5332, !5333, !5334}
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5330, file: !641, line: 57, baseType: !644, size: 32)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5330, file: !641, line: 58, baseType: !124, size: 32, offset: 32)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5330, file: !641, line: 59, baseType: !272, size: 32, offset: 64)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5327, file: !637, line: 5075, baseType: !5275, size: 64, offset: 96)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5327, file: !637, line: 5076, baseType: !5337, offset: 160)
!5337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !651, line: 43, elements: !652)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5244, file: !544, line: 343, baseType: !5339, size: 64, offset: 928)
!5339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !614, line: 60, size: 64, elements: !5340)
!5340 = !{!5341, !5342}
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5339, file: !614, line: 63, baseType: !208, size: 32)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5339, file: !614, line: 66, baseType: !208, size: 32, offset: 32)
!5343 = !DILocation(line: 535, column: 9, scope: !5239)
!5344 = !DILocation(line: 535, column: 2, scope: !5239)
!5345 = distinct !DISubprogram(name: "k_thread_abort", scope: !5346, file: !5346, line: 188, type: !5347, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !5349)
!5346 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!5347 = !DISubroutineType(types: !5348)
!5348 = !{null, !5242}
!5349 = !{!5350}
!5350 = !DILocalVariable(name: "thread", arg: 1, scope: !5345, file: !5346, line: 188, type: !5242)
!5351 = !DILocation(line: 0, scope: !5345)
!5352 = !DILocation(line: 197, column: 2, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5345, file: !5346, line: 197, column: 2)
!5354 = !{i64 2152214078}
!5355 = !DILocation(line: 198, column: 2, scope: !5345)
!5356 = !DILocation(line: 199, column: 1, scope: !5345)
!5357 = distinct !DISubprogram(name: "z_current_get", scope: !5346, file: !5346, line: 173, type: !5240, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !652)
!5358 = !DILocation(line: 180, column: 2, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5357, file: !5346, line: 180, column: 2)
!5360 = !{i64 2152214010}
!5361 = !DILocation(line: 181, column: 9, scope: !5357)
!5362 = !DILocation(line: 181, column: 2, scope: !5357)
!5363 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2714, file: !2714, line: 1338, type: !5364, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !5372)
!5364 = !DISubroutineType(types: !5365)
!5365 = !{!125, !4554, !124, !140, !5366, !208}
!5366 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4194, line: 99, baseType: !5367)
!5367 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4194, line: 40, baseType: !5368)
!5368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2714, baseType: !5369)
!5369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5370)
!5370 = !{!5371}
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5369, file: !2714, baseType: !124, size: 32)
!5372 = !{!5373, !5374, !5375, !5376, !5377, !5378, !5382, !5383, !5384, !5386, !5391, !5434, !5437, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5449, !5450, !5451, !5455, !5458, !5460, !5463, !5464, !5465, !5470, !5476, !5479, !5483, !5489, !5493, !5496, !5498, !5501}
!5373 = !DILocalVariable(name: "out", arg: 1, scope: !5363, file: !2714, line: 1338, type: !4554)
!5374 = !DILocalVariable(name: "ctx", arg: 2, scope: !5363, file: !2714, line: 1338, type: !124)
!5375 = !DILocalVariable(name: "fp", arg: 3, scope: !5363, file: !2714, line: 1338, type: !140)
!5376 = !DILocalVariable(name: "ap", arg: 4, scope: !5363, file: !2714, line: 1339, type: !5366)
!5377 = !DILocalVariable(name: "flags", arg: 5, scope: !5363, file: !2714, line: 1339, type: !208)
!5378 = !DILocalVariable(name: "buf", scope: !5363, file: !2714, line: 1341, type: !5379)
!5379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 176, elements: !5380)
!5380 = !{!5381}
!5381 = !DISubrange(count: 22)
!5382 = !DILocalVariable(name: "count", scope: !5363, file: !2714, line: 1342, type: !272)
!5383 = !DILocalVariable(name: "sint", scope: !5363, file: !2714, line: 1343, type: !2733)
!5384 = !DILocalVariable(name: "tagged_ap", scope: !5363, file: !2714, line: 1345, type: !5385)
!5385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!5386 = !DILocalVariable(name: "rc", scope: !5387, file: !2714, line: 1377, type: !125)
!5387 = distinct !DILexicalBlock(scope: !5388, file: !2714, line: 1377, column: 4)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !2714, line: 1376, column: 19)
!5389 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1376, column: 7)
!5390 = distinct !DILexicalBlock(scope: !5363, file: !2714, line: 1375, column: 19)
!5391 = !DILocalVariable(name: "state", scope: !5390, file: !2714, line: 1395, type: !5392)
!5392 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5363, file: !2714, line: 1392, size: 192, elements: !5393)
!5393 = !{!5394, !5402}
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5392, file: !2714, line: 1393, baseType: !5395, size: 64)
!5395 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2714, line: 166, size: 64, elements: !5396)
!5396 = !{!5397, !5398, !5399, !5400, !5401}
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5395, file: !2714, line: 168, baseType: !2733, size: 64)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5395, file: !2714, line: 171, baseType: !2736, size: 64)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5395, file: !2714, line: 174, baseType: !385, size: 64)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5395, file: !2714, line: 177, baseType: !383, size: 64)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5395, file: !2714, line: 180, baseType: !124, size: 32)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5392, file: !2714, line: 1394, baseType: !5403, size: 96, offset: 64)
!5403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2714, line: 189, size: 96, elements: !5404)
!5404 = !{!5405, !5406, !5407, !5408, !5409, !5410, !5411, !5412, !5413, !5414, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5423, !5424, !5429}
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5403, file: !2714, line: 191, baseType: !153, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5403, file: !2714, line: 194, baseType: !153, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5403, file: !2714, line: 197, baseType: !153, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5403, file: !2714, line: 200, baseType: !153, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5403, file: !2714, line: 203, baseType: !153, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5403, file: !2714, line: 206, baseType: !153, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5403, file: !2714, line: 209, baseType: !153, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5403, file: !2714, line: 212, baseType: !153, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5403, file: !2714, line: 219, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5403, file: !2714, line: 222, baseType: !153, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5403, file: !2714, line: 229, baseType: !153, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5403, file: !2714, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5403, file: !2714, line: 238, baseType: !153, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5403, file: !2714, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5403, file: !2714, line: 244, baseType: !153, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5403, file: !2714, line: 247, baseType: !153, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5403, file: !2714, line: 252, baseType: !153, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5403, file: !2714, line: 257, baseType: !153, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5403, file: !2714, line: 260, baseType: !151, size: 8, offset: 24)
!5424 = !DIDerivedType(tag: DW_TAG_member, scope: !5403, file: !2714, line: 262, baseType: !5425, size: 32, offset: 32)
!5425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5403, file: !2714, line: 262, size: 32, elements: !5426)
!5426 = !{!5427, !5428}
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5425, file: !2714, line: 267, baseType: !125, size: 32)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5425, file: !2714, line: 289, baseType: !125, size: 32)
!5429 = !DIDerivedType(tag: DW_TAG_member, scope: !5403, file: !2714, line: 292, baseType: !5430, size: 32, offset: 64)
!5430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5403, file: !2714, line: 292, size: 32, elements: !5431)
!5431 = !{!5432, !5433}
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5430, file: !2714, line: 297, baseType: !125, size: 32)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5430, file: !2714, line: 306, baseType: !125, size: 32)
!5434 = !DILocalVariable(name: "conv", scope: !5390, file: !2714, line: 1400, type: !5435)
!5435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5436)
!5436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 32)
!5437 = !DILocalVariable(name: "value", scope: !5390, file: !2714, line: 1401, type: !5438)
!5438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5439)
!5439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5395, size: 32)
!5440 = !DILocalVariable(name: "sp", scope: !5390, file: !2714, line: 1402, type: !140)
!5441 = !DILocalVariable(name: "width", scope: !5390, file: !2714, line: 1403, type: !125)
!5442 = !DILocalVariable(name: "precision", scope: !5390, file: !2714, line: 1404, type: !125)
!5443 = !DILocalVariable(name: "bps", scope: !5390, file: !2714, line: 1405, type: !140)
!5444 = !DILocalVariable(name: "bpe", scope: !5390, file: !2714, line: 1406, type: !140)
!5445 = !DILocalVariable(name: "sign", scope: !5390, file: !2714, line: 1407, type: !142)
!5446 = !DILocalVariable(name: "arg", scope: !5447, file: !2714, line: 1432, type: !125)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !2714, line: 1431, column: 24)
!5448 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1431, column: 7)
!5449 = !DILocalVariable(name: "specifier_cat", scope: !5390, file: !2714, line: 1468, type: !2713)
!5450 = !DILocalVariable(name: "length_mod", scope: !5390, file: !2714, line: 1470, type: !2721)
!5451 = !DILocalVariable(name: "rc", scope: !5452, file: !2714, line: 1575, type: !125)
!5452 = distinct !DILexicalBlock(scope: !5453, file: !2714, line: 1575, column: 4)
!5453 = distinct !DILexicalBlock(scope: !5454, file: !2714, line: 1574, column: 43)
!5454 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1574, column: 7)
!5455 = !DILocalVariable(name: "rc", scope: !5456, file: !2714, line: 1584, type: !125)
!5456 = distinct !DILexicalBlock(scope: !5457, file: !2714, line: 1584, column: 4)
!5457 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1582, column: 28)
!5458 = !DILocalVariable(name: "len", scope: !5459, file: !2714, line: 1589, type: !272)
!5459 = distinct !DILexicalBlock(scope: !5457, file: !2714, line: 1586, column: 13)
!5460 = !DILocalVariable(name: "len", scope: !5461, file: !2714, line: 1641, type: !272)
!5461 = distinct !DILexicalBlock(scope: !5462, file: !2714, line: 1640, column: 24)
!5462 = distinct !DILexicalBlock(scope: !5457, file: !2714, line: 1640, column: 8)
!5463 = !DILocalVariable(name: "nj_len", scope: !5390, file: !2714, line: 1722, type: !272)
!5464 = !DILocalVariable(name: "pad_len", scope: !5390, file: !2714, line: 1723, type: !125)
!5465 = !DILocalVariable(name: "pad", scope: !5466, file: !2714, line: 1751, type: !142)
!5466 = distinct !DILexicalBlock(scope: !5467, file: !2714, line: 1750, column: 26)
!5467 = distinct !DILexicalBlock(scope: !5468, file: !2714, line: 1750, column: 8)
!5468 = distinct !DILexicalBlock(scope: !5469, file: !2714, line: 1747, column: 18)
!5469 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1747, column: 7)
!5470 = !DILocalVariable(name: "rc", scope: !5471, file: !2714, line: 1758, type: !125)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !2714, line: 1758, column: 7)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !2714, line: 1757, column: 21)
!5473 = distinct !DILexicalBlock(scope: !5474, file: !2714, line: 1757, column: 10)
!5474 = distinct !DILexicalBlock(scope: !5475, file: !2714, line: 1756, column: 26)
!5475 = distinct !DILexicalBlock(scope: !5466, file: !2714, line: 1756, column: 9)
!5476 = !DILocalVariable(name: "rc", scope: !5477, file: !2714, line: 1765, type: !125)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !2714, line: 1765, column: 6)
!5478 = distinct !DILexicalBlock(scope: !5466, file: !2714, line: 1764, column: 25)
!5479 = !DILocalVariable(name: "rc", scope: !5480, file: !2714, line: 1774, type: !125)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !2714, line: 1774, column: 4)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !2714, line: 1773, column: 18)
!5482 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1773, column: 7)
!5483 = !DILocalVariable(name: "rc", scope: !5484, file: !2714, line: 1819, type: !125)
!5484 = distinct !DILexicalBlock(scope: !5485, file: !2714, line: 1819, column: 5)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !2714, line: 1818, column: 44)
!5486 = distinct !DILexicalBlock(scope: !5487, file: !2714, line: 1818, column: 8)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !2714, line: 1817, column: 10)
!5488 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1777, column: 7)
!5489 = !DILocalVariable(name: "rc", scope: !5490, file: !2714, line: 1823, type: !125)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !2714, line: 1823, column: 5)
!5491 = distinct !DILexicalBlock(scope: !5492, file: !2714, line: 1822, column: 26)
!5492 = distinct !DILexicalBlock(scope: !5487, file: !2714, line: 1822, column: 8)
!5493 = !DILocalVariable(name: "rc", scope: !5494, file: !2714, line: 1828, type: !125)
!5494 = distinct !DILexicalBlock(scope: !5495, file: !2714, line: 1828, column: 5)
!5495 = distinct !DILexicalBlock(scope: !5487, file: !2714, line: 1827, column: 26)
!5496 = !DILocalVariable(name: "rc", scope: !5497, file: !2714, line: 1831, type: !125)
!5497 = distinct !DILexicalBlock(scope: !5487, file: !2714, line: 1831, column: 4)
!5498 = !DILocalVariable(name: "rc", scope: !5499, file: !2714, line: 1836, type: !125)
!5499 = distinct !DILexicalBlock(scope: !5500, file: !2714, line: 1836, column: 4)
!5500 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1835, column: 21)
!5501 = !DILabel(scope: !5457, name: "prec_int_pad0", file: !2714, line: 1634)
!5502 = !DILocation(line: 0, scope: !5363)
!5503 = !DILocation(line: 1341, column: 2, scope: !5363)
!5504 = !DILocation(line: 1341, column: 7, scope: !5363)
!5505 = !DILocation(line: 1375, column: 2, scope: !5363)
!5506 = !DILocation(line: 1342, column: 9, scope: !5363)
!5507 = !DILocation(line: 1375, column: 9, scope: !5363)
!5508 = !DILocation(line: 1377, column: 4, scope: !5387)
!5509 = !DILocation(line: 0, scope: !5387)
!5510 = !DILocation(line: 1377, column: 4, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5387, file: !2714, line: 1377, column: 4)
!5512 = distinct !{!5512, !5505, !5513}
!5513 = !DILocation(line: 1839, column: 2, scope: !5363)
!5514 = !DILocation(line: 1392, column: 3, scope: !5390)
!5515 = !DILocation(line: 1395, column: 5, scope: !5390)
!5516 = !DILocation(line: 0, scope: !5390)
!5517 = !DILocation(line: 1409, column: 8, scope: !5390)
!5518 = !DILocation(line: 1414, column: 13, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1414, column: 7)
!5520 = !DILocation(line: 1414, column: 7, scope: !5390)
!5521 = !DILocation(line: 1415, column: 12, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5519, file: !2714, line: 1414, column: 25)
!5523 = !DILocation(line: 1417, column: 14, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5522, file: !2714, line: 1417, column: 8)
!5525 = !DILocation(line: 1417, column: 8, scope: !5522)
!5526 = !DILocation(line: 1418, column: 21, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5524, file: !2714, line: 1417, column: 19)
!5528 = !DILocation(line: 1419, column: 13, scope: !5527)
!5529 = !DILocation(line: 1420, column: 4, scope: !5527)
!5530 = !DILocation(line: 1421, column: 20, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5519, file: !2714, line: 1421, column: 14)
!5532 = !DILocation(line: 1421, column: 14, scope: !5519)
!5533 = !DILocation(line: 1431, column: 13, scope: !5448)
!5534 = !DILocation(line: 1431, column: 7, scope: !5390)
!5535 = !DILocation(line: 1432, column: 14, scope: !5447)
!5536 = !DILocation(line: 0, scope: !5447)
!5537 = !DILocation(line: 1434, column: 12, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5447, file: !2714, line: 1434, column: 8)
!5539 = !DILocation(line: 1434, column: 8, scope: !5447)
!5540 = !DILocation(line: 1435, column: 24, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5538, file: !2714, line: 1434, column: 17)
!5542 = !DILocation(line: 1436, column: 4, scope: !5541)
!5543 = !DILocation(line: 1439, column: 20, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5448, file: !2714, line: 1439, column: 14)
!5545 = !DILocation(line: 1439, column: 14, scope: !5448)
!5546 = !DILocation(line: 1469, column: 37, scope: !5390)
!5547 = !DILocation(line: 1448, column: 20, scope: !5390)
!5548 = !DILocation(line: 1449, column: 22, scope: !5390)
!5549 = !DILocation(line: 1471, column: 34, scope: !5390)
!5550 = !DILocation(line: 1478, column: 7, scope: !5390)
!5551 = !DILocation(line: 1479, column: 4, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5553, file: !2714, line: 1478, column: 40)
!5553 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1478, column: 7)
!5554 = !DILocation(line: 1484, column: 19, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5552, file: !2714, line: 1479, column: 24)
!5556 = !DILocation(line: 1484, column: 17, scope: !5555)
!5557 = !DILocation(line: 1485, column: 5, scope: !5555)
!5558 = !DILocation(line: 1492, column: 20, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5560, file: !2714, line: 1491, column: 12)
!5560 = distinct !DILexicalBlock(scope: !5555, file: !2714, line: 1487, column: 9)
!5561 = !DILocation(line: 1492, column: 18, scope: !5559)
!5562 = !DILocation(line: 1494, column: 5, scope: !5555)
!5563 = !DILocation(line: 1497, column: 23, scope: !5555)
!5564 = !DILocation(line: 1496, column: 17, scope: !5555)
!5565 = !DILocation(line: 1498, column: 5, scope: !5555)
!5566 = !DILocation(line: 1501, column: 23, scope: !5555)
!5567 = !DILocation(line: 1500, column: 17, scope: !5555)
!5568 = !DILocation(line: 1502, column: 5, scope: !5555)
!5569 = !DILocation(line: 1513, column: 23, scope: !5555)
!5570 = !DILocation(line: 1513, column: 6, scope: !5555)
!5571 = !DILocation(line: 1512, column: 17, scope: !5555)
!5572 = !DILocation(line: 1514, column: 5, scope: !5555)
!5573 = !DILocation(line: 0, scope: !5555)
!5574 = !DILocation(line: 1516, column: 8, scope: !5552)
!5575 = !DILocation(line: 1517, column: 19, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5577, file: !2714, line: 1516, column: 33)
!5577 = distinct !DILexicalBlock(scope: !5552, file: !2714, line: 1516, column: 8)
!5578 = !DILocation(line: 1517, column: 17, scope: !5576)
!5579 = !DILocation(line: 1518, column: 4, scope: !5576)
!5580 = !DILocation(line: 1519, column: 19, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5582, file: !2714, line: 1518, column: 39)
!5582 = distinct !DILexicalBlock(scope: !5577, file: !2714, line: 1518, column: 15)
!5583 = !DILocation(line: 1519, column: 17, scope: !5581)
!5584 = !DILocation(line: 1520, column: 4, scope: !5581)
!5585 = !DILocation(line: 1522, column: 4, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5587, file: !2714, line: 1521, column: 47)
!5587 = distinct !DILexicalBlock(scope: !5553, file: !2714, line: 1521, column: 14)
!5588 = !DILocation(line: 1527, column: 19, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5586, file: !2714, line: 1522, column: 24)
!5590 = !DILocation(line: 1527, column: 17, scope: !5589)
!5591 = !DILocation(line: 1528, column: 5, scope: !5589)
!5592 = !DILocation(line: 0, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5589, file: !2714, line: 1530, column: 9)
!5594 = !DILocation(line: 1540, column: 23, scope: !5589)
!5595 = !DILocation(line: 1539, column: 17, scope: !5589)
!5596 = !DILocation(line: 1542, column: 5, scope: !5589)
!5597 = !DILocation(line: 1545, column: 23, scope: !5589)
!5598 = !DILocation(line: 1544, column: 17, scope: !5589)
!5599 = !DILocation(line: 1547, column: 5, scope: !5589)
!5600 = !DILocation(line: 1551, column: 23, scope: !5589)
!5601 = !DILocation(line: 1551, column: 6, scope: !5589)
!5602 = !DILocation(line: 1550, column: 17, scope: !5589)
!5603 = !DILocation(line: 1552, column: 5, scope: !5589)
!5604 = !DILocation(line: 0, scope: !5589)
!5605 = !DILocation(line: 1554, column: 8, scope: !5586)
!5606 = !DILocation(line: 1555, column: 19, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !2714, line: 1554, column: 33)
!5608 = distinct !DILexicalBlock(scope: !5586, file: !2714, line: 1554, column: 8)
!5609 = !DILocation(line: 1555, column: 17, scope: !5607)
!5610 = !DILocation(line: 1556, column: 4, scope: !5607)
!5611 = !DILocation(line: 1557, column: 19, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5613, file: !2714, line: 1556, column: 39)
!5613 = distinct !DILexicalBlock(scope: !5608, file: !2714, line: 1556, column: 15)
!5614 = !DILocation(line: 1557, column: 17, scope: !5612)
!5615 = !DILocation(line: 1558, column: 4, scope: !5612)
!5616 = !DILocation(line: 0, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5618, file: !2714, line: 1560, column: 8)
!5618 = distinct !DILexicalBlock(scope: !5619, file: !2714, line: 1559, column: 45)
!5619 = distinct !DILexicalBlock(scope: !5587, file: !2714, line: 1559, column: 14)
!5620 = !DILocation(line: 1566, column: 17, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5622, file: !2714, line: 1565, column: 46)
!5622 = distinct !DILexicalBlock(scope: !5619, file: !2714, line: 1565, column: 14)
!5623 = !DILocation(line: 1566, column: 15, scope: !5621)
!5624 = !DILocation(line: 1567, column: 3, scope: !5621)
!5625 = !DILocation(line: 1574, column: 21, scope: !5454)
!5626 = !DILocation(line: 1575, column: 4, scope: !5452)
!5627 = !DILocation(line: 0, scope: !5452)
!5628 = !DILocation(line: 1575, column: 4, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5452, file: !2714, line: 1575, column: 4)
!5630 = !DILocation(line: 1582, column: 17, scope: !5390)
!5631 = !DILocation(line: 1582, column: 3, scope: !5390)
!5632 = !DILocation(line: 1584, column: 4, scope: !5456)
!5633 = !DILocation(line: 0, scope: !5456)
!5634 = !DILocation(line: 1584, column: 4, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5456, file: !2714, line: 1584, column: 4)
!5636 = !DILocation(line: 1587, column: 31, scope: !5459)
!5637 = !DILocation(line: 1591, column: 18, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5459, file: !2714, line: 1591, column: 8)
!5639 = !DILocation(line: 1591, column: 8, scope: !5459)
!5640 = !DILocation(line: 1592, column: 11, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5638, file: !2714, line: 1591, column: 24)
!5642 = !DILocation(line: 0, scope: !5459)
!5643 = !DILocation(line: 1593, column: 4, scope: !5641)
!5644 = !DILocation(line: 1594, column: 11, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5638, file: !2714, line: 1593, column: 11)
!5646 = !DILocation(line: 1604, column: 51, scope: !5457)
!5647 = !DILocation(line: 1604, column: 13, scope: !5457)
!5648 = !DILocation(line: 1604, column: 11, scope: !5457)
!5649 = !DILocation(line: 1606, column: 4, scope: !5457)
!5650 = !DILocation(line: 1609, column: 14, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5457, file: !2714, line: 1609, column: 8)
!5652 = !DILocation(line: 1609, column: 8, scope: !5457)
!5653 = !DILocation(line: 1619, column: 18, scope: !5457)
!5654 = !DILocation(line: 1620, column: 13, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5457, file: !2714, line: 1620, column: 8)
!5656 = !DILocation(line: 1620, column: 8, scope: !5457)
!5657 = !DILocation(line: 1622, column: 36, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5655, file: !2714, line: 1620, column: 18)
!5659 = !DILocation(line: 1622, column: 17, scope: !5658)
!5660 = !DILocation(line: 1623, column: 4, scope: !5658)
!5661 = !DILocation(line: 1632, column: 29, scope: !5457)
!5662 = !DILocation(line: 1632, column: 10, scope: !5457)
!5663 = !DILocation(line: 1632, column: 4, scope: !5457)
!5664 = !DILocation(line: 1407, column: 8, scope: !5390)
!5665 = !DILocation(line: 0, scope: !5457)
!5666 = !DILocation(line: 1634, column: 3, scope: !5457)
!5667 = !DILocation(line: 1640, column: 18, scope: !5462)
!5668 = !DILocation(line: 1640, column: 8, scope: !5457)
!5669 = !DILocation(line: 1729, column: 13, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1729, column: 7)
!5671 = !DILocation(line: 1641, column: 22, scope: !5461)
!5672 = !DILocation(line: 0, scope: !5461)
!5673 = !DILocation(line: 1646, column: 21, scope: !5461)
!5674 = !DILocation(line: 1649, column: 13, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5461, file: !2714, line: 1649, column: 9)
!5676 = !DILocation(line: 1649, column: 9, scope: !5461)
!5677 = !DILocation(line: 1650, column: 35, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5675, file: !2714, line: 1649, column: 34)
!5679 = !DILocation(line: 1650, column: 23, scope: !5678)
!5680 = !DILocation(line: 1651, column: 5, scope: !5678)
!5681 = !DILocation(line: 1660, column: 15, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5457, file: !2714, line: 1660, column: 8)
!5683 = !DILocation(line: 1660, column: 19, scope: !5682)
!5684 = !DILocation(line: 1660, column: 8, scope: !5457)
!5685 = !DILocation(line: 1661, column: 23, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5682, file: !2714, line: 1660, column: 28)
!5687 = !DILocation(line: 1661, column: 11, scope: !5686)
!5688 = !DILocation(line: 1665, column: 22, scope: !5686)
!5689 = !DILocation(line: 1666, column: 21, scope: !5686)
!5690 = !DILocation(line: 1668, column: 5, scope: !5686)
!5691 = !DILocation(line: 1677, column: 30, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5693, file: !2714, line: 1676, column: 49)
!5693 = distinct !DILexicalBlock(scope: !5457, file: !2714, line: 1676, column: 8)
!5694 = !DILocation(line: 1677, column: 5, scope: !5692)
!5695 = !DILocation(line: 1680, column: 4, scope: !5457)
!5696 = !DILocation(line: 0, scope: !5638)
!5697 = !DILocation(line: 1597, column: 14, scope: !5459)
!5698 = !DILocation(line: 1699, column: 11, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1699, column: 7)
!5700 = !DILocation(line: 1699, column: 7, scope: !5390)
!5701 = !DILocation(line: 1725, column: 7, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1725, column: 7)
!5703 = !DILocation(line: 1725, column: 12, scope: !5702)
!5704 = !DILocation(line: 1747, column: 13, scope: !5469)
!5705 = !DILocation(line: 1747, column: 7, scope: !5390)
!5706 = !DILocation(line: 1722, column: 24, scope: !5390)
!5707 = !DILocation(line: 1725, column: 7, scope: !5390)
!5708 = !DILocation(line: 1729, column: 7, scope: !5390)
!5709 = !DILocation(line: 1736, column: 13, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5390, file: !2714, line: 1736, column: 7)
!5711 = !DILocation(line: 1735, column: 19, scope: !5390)
!5712 = !DILocation(line: 1736, column: 7, scope: !5390)
!5713 = !DILocation(line: 1748, column: 10, scope: !5468)
!5714 = !DILocation(line: 1750, column: 15, scope: !5467)
!5715 = !DILocation(line: 1750, column: 8, scope: !5468)
!5716 = !DILocation(line: 0, scope: !5466)
!5717 = !DILocation(line: 1756, column: 15, scope: !5475)
!5718 = !DILocation(line: 1756, column: 9, scope: !5466)
!5719 = !DILocation(line: 1758, column: 7, scope: !5471)
!5720 = !DILocation(line: 0, scope: !5471)
!5721 = !DILocation(line: 1758, column: 7, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5471, file: !2714, line: 1758, column: 7)
!5723 = !DILocation(line: 1764, column: 5, scope: !5466)
!5724 = !DILocation(line: 0, scope: !5468)
!5725 = !DILocation(line: 1764, column: 20, scope: !5466)
!5726 = !DILocation(line: 1764, column: 17, scope: !5466)
!5727 = !DILocation(line: 1765, column: 6, scope: !5477)
!5728 = !DILocation(line: 0, scope: !5477)
!5729 = !DILocation(line: 1765, column: 6, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5477, file: !2714, line: 1765, column: 6)
!5731 = distinct !{!5731, !5723, !5732}
!5732 = !DILocation(line: 1766, column: 5, scope: !5466)
!5733 = !DILocation(line: 1773, column: 12, scope: !5482)
!5734 = !DILocation(line: 1773, column: 7, scope: !5390)
!5735 = !DILocation(line: 1773, column: 7, scope: !5482)
!5736 = !DILocation(line: 1774, column: 4, scope: !5480)
!5737 = !DILocation(line: 0, scope: !5480)
!5738 = !DILocation(line: 1774, column: 4, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5480, file: !2714, line: 1774, column: 4)
!5740 = !DILocation(line: 1818, column: 8, scope: !5486)
!5741 = !DILocation(line: 1818, column: 27, scope: !5486)
!5742 = !DILocation(line: 1818, column: 25, scope: !5486)
!5743 = !DILocation(line: 1818, column: 8, scope: !5487)
!5744 = !DILocation(line: 1819, column: 5, scope: !5484)
!5745 = !DILocation(line: 0, scope: !5484)
!5746 = !DILocation(line: 1819, column: 5, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5484, file: !2714, line: 1819, column: 5)
!5748 = !DILocation(line: 1822, column: 14, scope: !5492)
!5749 = !DILocation(line: 1822, column: 8, scope: !5487)
!5750 = !DILocation(line: 1823, column: 5, scope: !5490)
!5751 = !DILocation(line: 0, scope: !5490)
!5752 = !DILocation(line: 1823, column: 5, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5490, file: !2714, line: 1823, column: 5)
!5754 = !DILocation(line: 1826, column: 20, scope: !5487)
!5755 = !DILocation(line: 1827, column: 4, scope: !5487)
!5756 = !DILocation(line: 0, scope: !5487)
!5757 = !DILocation(line: 1827, column: 21, scope: !5487)
!5758 = !DILocation(line: 1827, column: 18, scope: !5487)
!5759 = !DILocation(line: 1828, column: 5, scope: !5494)
!5760 = !DILocation(line: 0, scope: !5494)
!5761 = !DILocation(line: 1828, column: 5, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5494, file: !2714, line: 1828, column: 5)
!5763 = distinct !{!5763, !5755, !5764}
!5764 = !DILocation(line: 1829, column: 4, scope: !5487)
!5765 = !DILocation(line: 1831, column: 4, scope: !5497)
!5766 = !DILocation(line: 0, scope: !5497)
!5767 = !DILocation(line: 1831, column: 4, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5497, file: !2714, line: 1831, column: 4)
!5769 = !DILocation(line: 1835, column: 16, scope: !5390)
!5770 = !DILocation(line: 1835, column: 3, scope: !5390)
!5771 = !DILocation(line: 1836, column: 4, scope: !5499)
!5772 = !DILocation(line: 0, scope: !5499)
!5773 = !DILocation(line: 1836, column: 4, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5499, file: !2714, line: 1836, column: 4)
!5775 = !DILocation(line: 1837, column: 4, scope: !5500)
!5776 = distinct !{!5776, !5770, !5777}
!5777 = !DILocation(line: 1838, column: 3, scope: !5390)
!5778 = !DILocation(line: 1844, column: 1, scope: !5363)
!5779 = distinct !DISubprogram(name: "extract_conversion", scope: !2714, file: !2714, line: 642, type: !5780, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !5782)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{!140, !5436, !140}
!5782 = !{!5783, !5784}
!5783 = !DILocalVariable(name: "conv", arg: 1, scope: !5779, file: !2714, line: 642, type: !5436)
!5784 = !DILocalVariable(name: "sp", arg: 2, scope: !5779, file: !2714, line: 643, type: !140)
!5785 = !DILocation(line: 0, scope: !5779)
!5786 = !DILocation(line: 645, column: 10, scope: !5779)
!5787 = !DILocation(line: 653, column: 2, scope: !5779)
!5788 = !DILocation(line: 654, column: 6, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5779, file: !2714, line: 654, column: 6)
!5790 = !DILocation(line: 654, column: 10, scope: !5789)
!5791 = !DILocation(line: 654, column: 6, scope: !5779)
!5792 = !DILocation(line: 655, column: 24, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5789, file: !2714, line: 654, column: 18)
!5794 = !DILocation(line: 655, column: 19, scope: !5793)
!5795 = !DILocation(line: 656, column: 3, scope: !5793)
!5796 = !DILocation(line: 659, column: 7, scope: !5779)
!5797 = !DILocation(line: 660, column: 7, scope: !5779)
!5798 = !DILocation(line: 661, column: 7, scope: !5779)
!5799 = !DILocation(line: 662, column: 7, scope: !5779)
!5800 = !DILocation(line: 663, column: 7, scope: !5779)
!5801 = !DILocation(line: 665, column: 2, scope: !5779)
!5802 = !DILocation(line: 666, column: 1, scope: !5779)
!5803 = distinct !DISubprogram(name: "outs", scope: !2714, file: !2714, line: 1319, type: !5804, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !5806)
!5804 = !DISubroutineType(types: !5805)
!5805 = !{!125, !4554, !124, !140, !140}
!5806 = !{!5807, !5808, !5809, !5810, !5811, !5812}
!5807 = !DILocalVariable(name: "out", arg: 1, scope: !5803, file: !2714, line: 1319, type: !4554)
!5808 = !DILocalVariable(name: "ctx", arg: 2, scope: !5803, file: !2714, line: 1320, type: !124)
!5809 = !DILocalVariable(name: "sp", arg: 3, scope: !5803, file: !2714, line: 1321, type: !140)
!5810 = !DILocalVariable(name: "ep", arg: 4, scope: !5803, file: !2714, line: 1322, type: !140)
!5811 = !DILocalVariable(name: "count", scope: !5803, file: !2714, line: 1324, type: !272)
!5812 = !DILocalVariable(name: "rc", scope: !5813, file: !2714, line: 1327, type: !125)
!5813 = distinct !DILexicalBlock(scope: !5803, file: !2714, line: 1326, column: 45)
!5814 = !DILocation(line: 0, scope: !5803)
!5815 = !DILocation(line: 1326, column: 2, scope: !5803)
!5816 = !DILocation(line: 1324, column: 9, scope: !5803)
!5817 = !DILocation(line: 1326, column: 13, scope: !5803)
!5818 = !DILocation(line: 1326, column: 19, scope: !5803)
!5819 = !DILocation(line: 1327, column: 21, scope: !5813)
!5820 = !DILocation(line: 1326, column: 36, scope: !5803)
!5821 = !DILocation(line: 1326, column: 39, scope: !5803)
!5822 = !DILocation(line: 1327, column: 24, scope: !5813)
!5823 = !DILocation(line: 1327, column: 16, scope: !5813)
!5824 = !DILocation(line: 1327, column: 12, scope: !5813)
!5825 = !DILocation(line: 0, scope: !5813)
!5826 = !DILocation(line: 1329, column: 10, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5813, file: !2714, line: 1329, column: 7)
!5828 = !DILocation(line: 1329, column: 7, scope: !5813)
!5829 = distinct !{!5829, !5815, !5830}
!5830 = !DILocation(line: 1333, column: 2, scope: !5803)
!5831 = !DILocation(line: 1336, column: 1, scope: !5803)
!5832 = distinct !DISubprogram(name: "encode_uint", scope: !2714, file: !2714, line: 788, type: !5833, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !5835)
!5833 = !DISubroutineType(types: !5834)
!5834 = !{!393, !2736, !5436, !393, !140}
!5835 = !{!5836, !5837, !5838, !5839, !5840, !5841, !5843, !5844}
!5836 = !DILocalVariable(name: "value", arg: 1, scope: !5832, file: !2714, line: 788, type: !2736)
!5837 = !DILocalVariable(name: "conv", arg: 2, scope: !5832, file: !2714, line: 789, type: !5436)
!5838 = !DILocalVariable(name: "bps", arg: 3, scope: !5832, file: !2714, line: 790, type: !393)
!5839 = !DILocalVariable(name: "bpe", arg: 4, scope: !5832, file: !2714, line: 791, type: !140)
!5840 = !DILocalVariable(name: "upcase", scope: !5832, file: !2714, line: 793, type: !153)
!5841 = !DILocalVariable(name: "radix", scope: !5832, file: !2714, line: 794, type: !5842)
!5842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5843 = !DILocalVariable(name: "bp", scope: !5832, file: !2714, line: 795, type: !393)
!5844 = !DILocalVariable(name: "lsv", scope: !5845, file: !2714, line: 798, type: !32)
!5845 = distinct !DILexicalBlock(scope: !5832, file: !2714, line: 797, column: 5)
!5846 = !DILocation(line: 0, scope: !5832)
!5847 = !DILocation(line: 793, column: 35, scope: !5832)
!5848 = !DILocation(line: 793, column: 24, scope: !5832)
!5849 = !DILocation(line: 793, column: 16, scope: !5832)
!5850 = !DILocation(line: 794, column: 29, scope: !5832)
!5851 = !DILocation(line: 795, column: 24, scope: !5832)
!5852 = !DILocation(line: 795, column: 17, scope: !5832)
!5853 = !DILocation(line: 797, column: 2, scope: !5832)
!5854 = !DILocation(line: 802, column: 9, scope: !5845)
!5855 = !DILocation(line: 798, column: 22, scope: !5845)
!5856 = !DILocation(line: 0, scope: !5845)
!5857 = !DILocation(line: 800, column: 16, scope: !5845)
!5858 = !DILocation(line: 800, column: 11, scope: !5845)
!5859 = !DILocation(line: 800, column: 4, scope: !5845)
!5860 = !DILocation(line: 800, column: 9, scope: !5845)
!5861 = !DILocation(line: 803, column: 18, scope: !5832)
!5862 = !DILocation(line: 803, column: 24, scope: !5832)
!5863 = !DILocation(line: 803, column: 2, scope: !5845)
!5864 = distinct !{!5864, !5853, !5865}
!5865 = !DILocation(line: 803, column: 37, scope: !5832)
!5866 = !DILocation(line: 808, column: 12, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5832, file: !2714, line: 808, column: 6)
!5868 = !DILocation(line: 808, column: 6, scope: !5832)
!5869 = !DILocation(line: 809, column: 7, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5867, file: !2714, line: 808, column: 23)
!5871 = !DILocation(line: 813, column: 3, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5873, file: !2714, line: 811, column: 27)
!5873 = distinct !DILexicalBlock(scope: !5874, file: !2714, line: 811, column: 14)
!5874 = distinct !DILexicalBlock(scope: !5870, file: !2714, line: 809, column: 7)
!5875 = !DILocation(line: 0, scope: !5874)
!5876 = !DILocation(line: 818, column: 2, scope: !5832)
!5877 = distinct !DISubprogram(name: "store_count", scope: !2714, file: !2714, line: 1280, type: !5878, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !5882)
!5878 = !DISubroutineType(types: !5879)
!5879 = !{null, !5880, !124, !125}
!5880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5881, size: 32)
!5881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5403)
!5882 = !{!5883, !5884, !5885}
!5883 = !DILocalVariable(name: "conv", arg: 1, scope: !5877, file: !2714, line: 1280, type: !5880)
!5884 = !DILocalVariable(name: "dp", arg: 2, scope: !5877, file: !2714, line: 1281, type: !124)
!5885 = !DILocalVariable(name: "count", arg: 3, scope: !5877, file: !2714, line: 1282, type: !125)
!5886 = !DILocation(line: 0, scope: !5877)
!5887 = !DILocation(line: 1284, column: 38, scope: !5877)
!5888 = !DILocation(line: 1284, column: 2, scope: !5877)
!5889 = !DILocation(line: 1286, column: 4, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5877, file: !2714, line: 1284, column: 50)
!5891 = !DILocation(line: 1286, column: 14, scope: !5890)
!5892 = !DILocation(line: 1287, column: 3, scope: !5890)
!5893 = !DILocation(line: 1289, column: 24, scope: !5890)
!5894 = !DILocation(line: 1289, column: 22, scope: !5890)
!5895 = !DILocation(line: 1290, column: 3, scope: !5890)
!5896 = !DILocation(line: 1292, column: 18, scope: !5890)
!5897 = !DILocation(line: 1292, column: 4, scope: !5890)
!5898 = !DILocation(line: 1292, column: 16, scope: !5890)
!5899 = !DILocation(line: 1293, column: 3, scope: !5890)
!5900 = !DILocation(line: 1295, column: 4, scope: !5890)
!5901 = !DILocation(line: 1295, column: 15, scope: !5890)
!5902 = !DILocation(line: 1296, column: 3, scope: !5890)
!5903 = !DILocation(line: 1298, column: 22, scope: !5890)
!5904 = !DILocation(line: 1298, column: 4, scope: !5890)
!5905 = !DILocation(line: 1298, column: 20, scope: !5890)
!5906 = !DILocation(line: 1299, column: 3, scope: !5890)
!5907 = !DILocation(line: 1301, column: 21, scope: !5890)
!5908 = !DILocation(line: 1301, column: 4, scope: !5890)
!5909 = !DILocation(line: 1301, column: 19, scope: !5890)
!5910 = !DILocation(line: 1302, column: 3, scope: !5890)
!5911 = !DILocation(line: 1304, column: 4, scope: !5890)
!5912 = !DILocation(line: 1304, column: 17, scope: !5890)
!5913 = !DILocation(line: 1305, column: 3, scope: !5890)
!5914 = !DILocation(line: 1307, column: 4, scope: !5890)
!5915 = !DILocation(line: 1307, column: 20, scope: !5890)
!5916 = !DILocation(line: 1308, column: 3, scope: !5890)
!5917 = !DILocation(line: 1316, column: 1, scope: !5877)
!5918 = distinct !DISubprogram(name: "isupper", scope: !5919, file: !5919, line: 16, type: !410, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !5920)
!5919 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5920 = !{!5921}
!5921 = !DILocalVariable(name: "a", arg: 1, scope: !5918, file: !5919, line: 16, type: !125)
!5922 = !DILocation(line: 0, scope: !5918)
!5923 = !DILocation(line: 18, column: 29, scope: !5918)
!5924 = !DILocation(line: 18, column: 45, scope: !5918)
!5925 = !DILocation(line: 18, column: 2, scope: !5918)
!5926 = distinct !DISubprogram(name: "conversion_radix", scope: !2714, file: !2714, line: 761, type: !5927, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !5929)
!5927 = !DISubroutineType(types: !5928)
!5928 = !{!272, !142}
!5929 = !{!5930}
!5930 = !DILocalVariable(name: "specifier", arg: 1, scope: !5926, file: !2714, line: 761, type: !142)
!5931 = !DILocation(line: 0, scope: !5926)
!5932 = !DILocation(line: 763, column: 2, scope: !5926)
!5933 = !DILocation(line: 770, column: 3, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5926, file: !2714, line: 763, column: 21)
!5935 = !DILocation(line: 774, column: 3, scope: !5934)
!5936 = !DILocation(line: 0, scope: !5934)
!5937 = !DILocation(line: 776, column: 1, scope: !5926)
!5938 = distinct !DISubprogram(name: "extract_flags", scope: !2714, file: !2714, line: 339, type: !5780, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !5939)
!5939 = !{!5940, !5941, !5942}
!5940 = !DILocalVariable(name: "conv", arg: 1, scope: !5938, file: !2714, line: 339, type: !5436)
!5941 = !DILocalVariable(name: "sp", arg: 2, scope: !5938, file: !2714, line: 340, type: !140)
!5942 = !DILocalVariable(name: "loop", scope: !5938, file: !2714, line: 342, type: !153)
!5943 = !DILocation(line: 0, scope: !5938)
!5944 = !DILocation(line: 344, column: 2, scope: !5938)
!5945 = !DILocation(line: 345, column: 11, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5938, file: !2714, line: 344, column: 5)
!5947 = !DILocation(line: 345, column: 3, scope: !5946)
!5948 = !DILocation(line: 351, column: 4, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5946, file: !2714, line: 345, column: 16)
!5950 = !DILocation(line: 354, column: 4, scope: !5949)
!5951 = !DILocation(line: 357, column: 4, scope: !5949)
!5952 = !DILocation(line: 360, column: 4, scope: !5949)
!5953 = !DILocation(line: 0, scope: !5949)
!5954 = !DILocation(line: 370, column: 12, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5938, file: !2714, line: 370, column: 6)
!5956 = !DILocation(line: 370, column: 22, scope: !5955)
!5957 = !DILocation(line: 371, column: 19, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5955, file: !2714, line: 370, column: 42)
!5959 = !DILocation(line: 372, column: 2, scope: !5958)
!5960 = !DILocation(line: 376, column: 2, scope: !5938)
!5961 = distinct !DISubprogram(name: "extract_width", scope: !2714, file: !2714, line: 388, type: !5780, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !5962)
!5962 = !{!5963, !5964, !5965, !5966}
!5963 = !DILocalVariable(name: "conv", arg: 1, scope: !5961, file: !2714, line: 388, type: !5436)
!5964 = !DILocalVariable(name: "sp", arg: 2, scope: !5961, file: !2714, line: 389, type: !140)
!5965 = !DILocalVariable(name: "wp", scope: !5961, file: !2714, line: 398, type: !140)
!5966 = !DILocalVariable(name: "width", scope: !5961, file: !2714, line: 399, type: !272)
!5967 = !DILocation(line: 0, scope: !5961)
!5968 = !DILocation(line: 391, column: 8, scope: !5961)
!5969 = !DILocation(line: 391, column: 22, scope: !5961)
!5970 = !DILocation(line: 393, column: 6, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5961, file: !2714, line: 393, column: 6)
!5972 = !DILocation(line: 393, column: 10, scope: !5971)
!5973 = !DILocation(line: 393, column: 6, scope: !5961)
!5974 = !DILocation(line: 394, column: 20, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5971, file: !2714, line: 393, column: 18)
!5976 = !DILocation(line: 395, column: 10, scope: !5975)
!5977 = !DILocation(line: 395, column: 3, scope: !5975)
!5978 = !DILocation(line: 399, column: 17, scope: !5961)
!5979 = !DILocation(line: 401, column: 6, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5961, file: !2714, line: 401, column: 6)
!5981 = !DILocation(line: 401, column: 9, scope: !5980)
!5982 = !DILocation(line: 401, column: 6, scope: !5961)
!5983 = !DILocation(line: 402, column: 23, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5980, file: !2714, line: 401, column: 16)
!5985 = !DILocation(line: 403, column: 9, scope: !5984)
!5986 = !DILocation(line: 403, column: 21, scope: !5984)
!5987 = !DILocation(line: 405, column: 11, scope: !5984)
!5988 = !DILocation(line: 404, column: 21, scope: !5984)
!5989 = !DILocation(line: 406, column: 2, scope: !5984)
!5990 = !DILocation(line: 409, column: 1, scope: !5961)
!5991 = distinct !DISubprogram(name: "extract_prec", scope: !2714, file: !2714, line: 420, type: !5780, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !5992)
!5992 = !{!5993, !5994, !5995}
!5993 = !DILocalVariable(name: "conv", arg: 1, scope: !5991, file: !2714, line: 420, type: !5436)
!5994 = !DILocalVariable(name: "sp", arg: 2, scope: !5991, file: !2714, line: 421, type: !140)
!5995 = !DILocalVariable(name: "prec", scope: !5991, file: !2714, line: 435, type: !272)
!5996 = !DILocation(line: 0, scope: !5991)
!5997 = !DILocation(line: 423, column: 24, scope: !5991)
!5998 = !DILocation(line: 423, column: 28, scope: !5991)
!5999 = !DILocation(line: 423, column: 8, scope: !5991)
!6000 = !DILocation(line: 423, column: 21, scope: !5991)
!6001 = !DILocation(line: 425, column: 6, scope: !5991)
!6002 = !DILocation(line: 428, column: 2, scope: !5991)
!6003 = !DILocation(line: 430, column: 6, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5991, file: !2714, line: 430, column: 6)
!6005 = !DILocation(line: 430, column: 10, scope: !6004)
!6006 = !DILocation(line: 430, column: 6, scope: !5991)
!6007 = !DILocation(line: 431, column: 19, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6004, file: !2714, line: 430, column: 18)
!6009 = !DILocation(line: 432, column: 10, scope: !6008)
!6010 = !DILocation(line: 432, column: 3, scope: !6008)
!6011 = !DILocation(line: 435, column: 16, scope: !5991)
!6012 = !DILocation(line: 437, column: 8, scope: !5991)
!6013 = !DILocation(line: 437, column: 19, scope: !5991)
!6014 = !DILocation(line: 439, column: 10, scope: !5991)
!6015 = !DILocation(line: 438, column: 20, scope: !5991)
!6016 = !DILocation(line: 441, column: 9, scope: !5991)
!6017 = !DILocation(line: 442, column: 1, scope: !5991)
!6018 = distinct !DISubprogram(name: "extract_length", scope: !2714, file: !2714, line: 453, type: !5780, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6019)
!6019 = !{!6020, !6021}
!6020 = !DILocalVariable(name: "conv", arg: 1, scope: !6018, file: !2714, line: 453, type: !5436)
!6021 = !DILocalVariable(name: "sp", arg: 2, scope: !6018, file: !2714, line: 454, type: !140)
!6022 = !DILocation(line: 0, scope: !6018)
!6023 = !DILocation(line: 456, column: 10, scope: !6018)
!6024 = !DILocation(line: 456, column: 2, scope: !6018)
!6025 = !DILocation(line: 458, column: 8, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6027, file: !2714, line: 458, column: 7)
!6027 = distinct !DILexicalBlock(scope: !6018, file: !2714, line: 456, column: 15)
!6028 = !DILocation(line: 458, column: 7, scope: !6026)
!6029 = !DILocation(line: 458, column: 13, scope: !6026)
!6030 = !DILocation(line: 0, scope: !6026)
!6031 = !DILocation(line: 458, column: 7, scope: !6027)
!6032 = !DILocation(line: 459, column: 21, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6026, file: !2714, line: 458, column: 21)
!6034 = !DILocation(line: 460, column: 4, scope: !6033)
!6035 = !DILocation(line: 461, column: 3, scope: !6033)
!6036 = !DILocation(line: 462, column: 21, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6026, file: !2714, line: 461, column: 10)
!6038 = !DILocation(line: 466, column: 8, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6027, file: !2714, line: 466, column: 7)
!6040 = !DILocation(line: 466, column: 7, scope: !6039)
!6041 = !DILocation(line: 466, column: 13, scope: !6039)
!6042 = !DILocation(line: 0, scope: !6039)
!6043 = !DILocation(line: 466, column: 7, scope: !6027)
!6044 = !DILocation(line: 467, column: 21, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6039, file: !2714, line: 466, column: 21)
!6046 = !DILocation(line: 468, column: 4, scope: !6045)
!6047 = !DILocation(line: 469, column: 3, scope: !6045)
!6048 = !DILocation(line: 470, column: 21, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6039, file: !2714, line: 469, column: 10)
!6050 = !DILocation(line: 474, column: 9, scope: !6027)
!6051 = !DILocation(line: 474, column: 20, scope: !6027)
!6052 = !DILocation(line: 475, column: 3, scope: !6027)
!6053 = !DILocation(line: 476, column: 3, scope: !6027)
!6054 = !DILocation(line: 478, column: 9, scope: !6027)
!6055 = !DILocation(line: 478, column: 20, scope: !6027)
!6056 = !DILocation(line: 479, column: 3, scope: !6027)
!6057 = !DILocation(line: 480, column: 3, scope: !6027)
!6058 = !DILocation(line: 482, column: 9, scope: !6027)
!6059 = !DILocation(line: 482, column: 20, scope: !6027)
!6060 = !DILocation(line: 483, column: 3, scope: !6027)
!6061 = !DILocation(line: 484, column: 3, scope: !6027)
!6062 = !DILocation(line: 486, column: 9, scope: !6027)
!6063 = !DILocation(line: 486, column: 20, scope: !6027)
!6064 = !DILocation(line: 487, column: 3, scope: !6027)
!6065 = !DILocation(line: 492, column: 21, scope: !6027)
!6066 = !DILocation(line: 493, column: 3, scope: !6027)
!6067 = !DILocation(line: 495, column: 9, scope: !6027)
!6068 = !DILocation(line: 495, column: 20, scope: !6027)
!6069 = !DILocation(line: 496, column: 3, scope: !6027)
!6070 = !DILocation(line: 498, column: 2, scope: !6018)
!6071 = distinct !DISubprogram(name: "extract_specifier", scope: !2714, file: !2714, line: 513, type: !5780, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6072)
!6072 = !{!6073, !6074, !6075, !6076}
!6073 = !DILocalVariable(name: "conv", arg: 1, scope: !6071, file: !2714, line: 513, type: !5436)
!6074 = !DILocalVariable(name: "sp", arg: 2, scope: !6071, file: !2714, line: 514, type: !140)
!6075 = !DILocalVariable(name: "unsupported", scope: !6071, file: !2714, line: 516, type: !153)
!6076 = !DILabel(scope: !6077, name: "int_conv", file: !2714, line: 526)
!6077 = distinct !DILexicalBlock(scope: !6071, file: !2714, line: 520, column: 27)
!6078 = !DILocation(line: 0, scope: !6071)
!6079 = !DILocation(line: 518, column: 20, scope: !6071)
!6080 = !DILocation(line: 518, column: 8, scope: !6071)
!6081 = !DILocation(line: 518, column: 18, scope: !6071)
!6082 = !DILocation(line: 520, column: 2, scope: !6071)
!6083 = !DILocation(line: 525, column: 3, scope: !6077)
!6084 = !DILocation(line: 0, scope: !6077)
!6085 = !DILocation(line: 526, column: 1, scope: !6077)
!6086 = !DILocation(line: 528, column: 24, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6077, file: !2714, line: 528, column: 7)
!6088 = !DILocation(line: 528, column: 7, scope: !6077)
!6089 = !DILocation(line: 535, column: 23, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6077, file: !2714, line: 535, column: 7)
!6091 = !DILocation(line: 535, column: 7, scope: !6077)
!6092 = !DILocation(line: 536, column: 36, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6090, file: !2714, line: 535, column: 31)
!6094 = !DILocation(line: 537, column: 3, scope: !6093)
!6095 = !DILocation(line: 570, column: 9, scope: !6077)
!6096 = !DILocation(line: 570, column: 23, scope: !6077)
!6097 = !DILocation(line: 575, column: 4, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6099, file: !2714, line: 573, column: 48)
!6099 = distinct !DILexicalBlock(scope: !6077, file: !2714, line: 573, column: 7)
!6100 = !DILocation(line: 603, column: 9, scope: !6077)
!6101 = !DILocation(line: 603, column: 23, scope: !6077)
!6102 = !DILocation(line: 605, column: 24, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6077, file: !2714, line: 605, column: 7)
!6104 = !DILocation(line: 605, column: 7, scope: !6077)
!6105 = !DILocation(line: 612, column: 9, scope: !6077)
!6106 = !DILocation(line: 612, column: 23, scope: !6077)
!6107 = !DILocation(line: 619, column: 24, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6077, file: !2714, line: 619, column: 7)
!6109 = !DILocation(line: 619, column: 7, scope: !6077)
!6110 = !DILocation(line: 625, column: 9, scope: !6077)
!6111 = !DILocation(line: 625, column: 17, scope: !6077)
!6112 = !DILocation(line: 626, column: 3, scope: !6077)
!6113 = !DILocation(line: 629, column: 20, scope: !6071)
!6114 = !DILocation(line: 629, column: 8, scope: !6071)
!6115 = !DILocation(line: 518, column: 23, scope: !6071)
!6116 = !DILocation(line: 631, column: 2, scope: !6071)
!6117 = distinct !DISubprogram(name: "extract_decimal", scope: !2714, file: !2714, line: 318, type: !6118, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6120)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{!272, !386}
!6120 = !{!6121, !6122, !6123}
!6121 = !DILocalVariable(name: "str", arg: 1, scope: !6117, file: !2714, line: 318, type: !386)
!6122 = !DILocalVariable(name: "sp", scope: !6117, file: !2714, line: 320, type: !140)
!6123 = !DILocalVariable(name: "val", scope: !6117, file: !2714, line: 321, type: !272)
!6124 = !DILocation(line: 0, scope: !6117)
!6125 = !DILocation(line: 320, column: 19, scope: !6117)
!6126 = !DILocation(line: 323, column: 37, scope: !6117)
!6127 = !DILocation(line: 323, column: 17, scope: !6117)
!6128 = !DILocation(line: 323, column: 9, scope: !6117)
!6129 = !DILocation(line: 323, column: 2, scope: !6117)
!6130 = !DILocation(line: 324, column: 13, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6117, file: !2714, line: 323, column: 43)
!6132 = !DILocation(line: 324, column: 24, scope: !6131)
!6133 = !DILocation(line: 324, column: 19, scope: !6131)
!6134 = !DILocation(line: 324, column: 27, scope: !6131)
!6135 = distinct !{!6135, !6129, !6136}
!6136 = !DILocation(line: 325, column: 2, scope: !6117)
!6137 = !DILocation(line: 326, column: 7, scope: !6117)
!6138 = !DILocation(line: 327, column: 2, scope: !6117)
!6139 = distinct !DISubprogram(name: "isdigit", scope: !5919, file: !5919, line: 43, type: !410, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6140)
!6140 = !{!6141}
!6141 = !DILocalVariable(name: "a", arg: 1, scope: !6139, file: !5919, line: 43, type: !125)
!6142 = !DILocation(line: 0, scope: !6139)
!6143 = !DILocation(line: 45, column: 29, scope: !6139)
!6144 = !DILocation(line: 45, column: 45, scope: !6139)
!6145 = !DILocation(line: 45, column: 2, scope: !6139)
!6146 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6147, file: !6147, line: 9, type: !3274, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !652)
!6147 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!6148 = !DILocation(line: 11, column: 1, scope: !6146)
!6149 = !{i64 2147564912, i64 2147564955, i64 2147564995}
!6150 = !DILocation(line: 12, column: 1, scope: !6146)
!6151 = !{i64 2147569139, i64 2147569182, i64 2147569222}
!6152 = !DILocation(line: 13, column: 1, scope: !6146)
!6153 = !{i64 2147569348, i64 2147569391, i64 2147569431}
!6154 = !DILocation(line: 14, column: 1, scope: !6146)
!6155 = !{i64 2147569517, i64 2147569560, i64 2147569600}
!6156 = !DILocation(line: 15, column: 1, scope: !6146)
!6157 = !{i64 2147569680, i64 2147569723, i64 2147569763}
!6158 = !DILocation(line: 16, column: 1, scope: !6146)
!6159 = !{i64 2147569864, i64 2147569907, i64 2147569947}
!6160 = !DILocation(line: 17, column: 1, scope: !6146)
!6161 = !{i64 2147570043, i64 2147570086, i64 2147570126}
!6162 = !DILocation(line: 18, column: 1, scope: !6146)
!6163 = !{i64 2147570285, i64 2147570328, i64 2147570368}
!6164 = !DILocation(line: 19, column: 1, scope: !6146)
!6165 = !{i64 2147570520, i64 2147570563, i64 2147570603}
!6166 = !DILocation(line: 20, column: 1, scope: !6146)
!6167 = !{i64 2147570706, i64 2147570749, i64 2147570789}
!6168 = !DILocation(line: 21, column: 1, scope: !6146)
!6169 = !{i64 2147570922, i64 2147570965, i64 2147571005}
!6170 = !DILocation(line: 22, column: 1, scope: !6146)
!6171 = !{i64 2147571125, i64 2147571168, i64 2147571208}
!6172 = !DILocation(line: 23, column: 1, scope: !6146)
!6173 = !{i64 2147571328, i64 2147571371, i64 2147571411}
!6174 = !DILocation(line: 24, column: 1, scope: !6146)
!6175 = !{i64 2147571503, i64 2147571546, i64 2147571586}
!6176 = !DILocation(line: 25, column: 1, scope: !6146)
!6177 = !{i64 2147571711, i64 2147571754, i64 2147571794}
!6178 = !DILocation(line: 26, column: 1, scope: !6146)
!6179 = !{i64 2147571915, i64 2147571958, i64 2147571998}
!6180 = !DILocation(line: 27, column: 1, scope: !6146)
!6181 = !{i64 2147572108, i64 2147572151, i64 2147572191}
!6182 = !DILocation(line: 28, column: 1, scope: !6146)
!6183 = !{i64 2147572310, i64 2147572353, i64 2147572393}
!6184 = !DILocation(line: 29, column: 1, scope: !6146)
!6185 = !{i64 2147572509, i64 2147572552, i64 2147572592}
!6186 = !DILocation(line: 30, column: 1, scope: !6146)
!6187 = !{i64 2147572736, i64 2147572779, i64 2147572819}
!6188 = !DILocation(line: 31, column: 1, scope: !6146)
!6189 = !{i64 2147572938, i64 2147572981, i64 2147573021}
!6190 = !DILocation(line: 32, column: 1, scope: !6146)
!6191 = !{i64 2147573153, i64 2147573196, i64 2147573236}
!6192 = !DILocation(line: 33, column: 1, scope: !6146)
!6193 = !{i64 2147573334, i64 2147573377, i64 2147573417}
!6194 = !DILocation(line: 34, column: 1, scope: !6146)
!6195 = !{i64 2147573506, i64 2147573549, i64 2147573589}
!6196 = !DILocation(line: 35, column: 1, scope: !6146)
!6197 = !{i64 2147573708, i64 2147573751, i64 2147573791}
!6198 = !DILocation(line: 36, column: 1, scope: !6146)
!6199 = !{i64 2147573934, i64 2147573977, i64 2147574017}
!6200 = !DILocation(line: 37, column: 1, scope: !6146)
!6201 = !{i64 2147574133, i64 2147574176, i64 2147574216}
!6202 = !DILocation(line: 38, column: 1, scope: !6146)
!6203 = !{i64 2147574308, i64 2147574351, i64 2147574391}
!6204 = !DILocation(line: 39, column: 1, scope: !6146)
!6205 = !{i64 2147574561, i64 2147574604, i64 2147574644}
!6206 = !DILocation(line: 40, column: 1, scope: !6146)
!6207 = !{i64 2147574799, i64 2147574842, i64 2147574882}
!6208 = !DILocation(line: 41, column: 1, scope: !6146)
!6209 = !{i64 2147575034, i64 2147575077, i64 2147575117}
!6210 = !DILocation(line: 42, column: 1, scope: !6146)
!6211 = !{i64 2147575266, i64 2147575309, i64 2147575349}
!6212 = !DILocation(line: 43, column: 1, scope: !6146)
!6213 = !{i64 2147575492, i64 2147575535, i64 2147575575}
!6214 = !DILocation(line: 44, column: 1, scope: !6146)
!6215 = !{i64 2147575751, i64 2147575794, i64 2147575834}
!6216 = !DILocation(line: 45, column: 1, scope: !6146)
!6217 = !{i64 2147575977, i64 2147576020, i64 2147576060}
!6218 = !DILocation(line: 46, column: 1, scope: !6146)
!6219 = !{i64 2147576218, i64 2147576261, i64 2147576301}
!6220 = !DILocation(line: 47, column: 1, scope: !6146)
!6221 = !{i64 2147576462, i64 2147576505, i64 2147576545}
!6222 = !DILocation(line: 48, column: 1, scope: !6146)
!6223 = !{i64 2147576703, i64 2147576746, i64 2147576786}
!6224 = !DILocation(line: 49, column: 1, scope: !6146)
!6225 = !{i64 2147576938, i64 2147576981, i64 2147577021}
!6226 = !DILocation(line: 50, column: 1, scope: !6146)
!6227 = !{i64 2147577164, i64 2147577207, i64 2147577247}
!6228 = !DILocation(line: 51, column: 1, scope: !6146)
!6229 = !{i64 2147577390, i64 2147577433, i64 2147577473}
!6230 = !DILocation(line: 52, column: 1, scope: !6146)
!6231 = !{i64 2147577634, i64 2147577677, i64 2147577717}
!6232 = !DILocation(line: 53, column: 1, scope: !6146)
!6233 = !{i64 2147577872, i64 2147577915, i64 2147577955}
!6234 = !DILocation(line: 54, column: 1, scope: !6146)
!6235 = !{i64 2147582207, i64 2147582250, i64 2147582290}
!6236 = !DILocation(line: 55, column: 1, scope: !6146)
!6237 = !{i64 2147582445, i64 2147582488, i64 2147582528}
!6238 = !DILocation(line: 56, column: 1, scope: !6146)
!6239 = !{i64 2147582689, i64 2147582732, i64 2147582772}
!6240 = !DILocation(line: 57, column: 1, scope: !6146)
!6241 = !{i64 2147582939, i64 2147582982, i64 2147583022}
!6242 = !DILocation(line: 58, column: 1, scope: !6146)
!6243 = !{i64 2147583186, i64 2147583229, i64 2147583269}
!6244 = !DILocation(line: 59, column: 1, scope: !6146)
!6245 = !{i64 2147583421, i64 2147583464, i64 2147583504}
!6246 = !DILocation(line: 60, column: 1, scope: !6146)
!6247 = !{i64 2147583656, i64 2147583699, i64 2147583739}
!6248 = !DILocation(line: 61, column: 1, scope: !6146)
!6249 = !{i64 2147583891, i64 2147583934, i64 2147583974}
!6250 = !DILocation(line: 62, column: 1, scope: !6146)
!6251 = !{i64 2147584129, i64 2147584172, i64 2147584212}
!6252 = !DILocation(line: 63, column: 1, scope: !6146)
!6253 = !{i64 2147584370, i64 2147584413, i64 2147584453}
!6254 = !DILocation(line: 64, column: 1, scope: !6146)
!6255 = !{i64 2147584629, i64 2147584672, i64 2147584712}
!6256 = !DILocation(line: 65, column: 1, scope: !6146)
!6257 = !{i64 2147584909, i64 2147584952, i64 2147584992}
!6258 = !DILocation(line: 66, column: 1, scope: !6146)
!6259 = !{i64 2147585138, i64 2147585181, i64 2147585221}
!6260 = !DILocation(line: 67, column: 1, scope: !6146)
!6261 = !{i64 2147585346, i64 2147585389, i64 2147585429}
!6262 = !DILocation(line: 68, column: 1, scope: !6146)
!6263 = !{i64 2147585557, i64 2147585600, i64 2147585640}
!6264 = !DILocation(line: 69, column: 1, scope: !6146)
!6265 = !{i64 2147585792, i64 2147585835, i64 2147585875}
!6266 = !DILocation(line: 70, column: 1, scope: !6146)
!6267 = !{i64 2147586021, i64 2147586064, i64 2147586104}
!6268 = !DILocation(line: 71, column: 1, scope: !6146)
!6269 = !{i64 2147586238, i64 2147586281, i64 2147586321}
!6270 = !DILocation(line: 72, column: 1, scope: !6146)
!6271 = !{i64 2147586467, i64 2147586510, i64 2147586550}
!6272 = !DILocation(line: 73, column: 1, scope: !6146)
!6273 = !{i64 2147586705, i64 2147586748, i64 2147586788}
!6274 = !DILocation(line: 74, column: 1, scope: !6146)
!6275 = !{i64 2147586937, i64 2147586980, i64 2147587020}
!6276 = !DILocation(line: 75, column: 1, scope: !6146)
!6277 = !{i64 2147587163, i64 2147587206, i64 2147587246}
!6278 = !DILocation(line: 76, column: 1, scope: !6146)
!6279 = !{i64 2147587380, i64 2147587423, i64 2147587463}
!6280 = !DILocation(line: 77, column: 1, scope: !6146)
!6281 = !{i64 2147587612, i64 2147587655, i64 2147587695}
!6282 = !DILocation(line: 78, column: 1, scope: !6146)
!6283 = !{i64 2147587838, i64 2147587881, i64 2147587921}
!6284 = !DILocation(line: 79, column: 1, scope: !6146)
!6285 = !{i64 2147588052, i64 2147588095, i64 2147588135}
!6286 = !DILocation(line: 80, column: 1, scope: !6146)
!6287 = !{i64 2147588272, i64 2147588315, i64 2147588355}
!6288 = !DILocation(line: 81, column: 1, scope: !6146)
!6289 = !{i64 2147588504, i64 2147588547, i64 2147588587}
!6290 = !DILocation(line: 82, column: 1, scope: !6146)
!6291 = !{i64 2147588712, i64 2147588755, i64 2147588795}
!6292 = !DILocation(line: 83, column: 1, scope: !6146)
!6293 = !{i64 2147588917, i64 2147588960, i64 2147589000}
!6294 = !DILocation(line: 84, column: 1, scope: !6146)
!6295 = !{i64 2147589134, i64 2147589177, i64 2147589217}
!6296 = !DILocation(line: 85, column: 1, scope: !6146)
!6297 = !{i64 2147589348, i64 2147589391, i64 2147589431}
!6298 = !DILocation(line: 86, column: 1, scope: !6146)
!6299 = !{i64 2147589574, i64 2147589617, i64 2147589657}
!6300 = !DILocation(line: 87, column: 1, scope: !6146)
!6301 = !{i64 2147589794, i64 2147589837, i64 2147589877}
!6302 = !DILocation(line: 88, column: 1, scope: !6146)
!6303 = !{i64 2147589999, i64 2147590042, i64 2147590082}
!6304 = !DILocation(line: 89, column: 1, scope: !6146)
!6305 = !{i64 2147594292, i64 2147594335, i64 2147594375}
!6306 = !DILocation(line: 90, column: 1, scope: !6146)
!6307 = !{i64 2147594527, i64 2147594570, i64 2147594610}
!6308 = !DILocation(line: 91, column: 1, scope: !6146)
!6309 = !{i64 2147594777, i64 2147594820, i64 2147594860}
!6310 = !DILocation(line: 92, column: 1, scope: !6146)
!6311 = !{i64 2147595027, i64 2147595070, i64 2147595110}
!6312 = !DILocation(line: 93, column: 1, scope: !6146)
!6313 = !{i64 2147595265, i64 2147595308, i64 2147595348}
!6314 = !DILocation(line: 94, column: 1, scope: !6146)
!6315 = !{i64 2147595476, i64 2147595519, i64 2147595559}
!6316 = !DILocation(line: 95, column: 1, scope: !6146)
!6317 = !{i64 2147595693, i64 2147595736, i64 2147595776}
!6318 = !DILocation(line: 96, column: 1, scope: !6146)
!6319 = !{i64 2147595889, i64 2147595932, i64 2147595972}
!6320 = !DILocation(line: 97, column: 1, scope: !6146)
!6321 = !{i64 2147596091, i64 2147596134, i64 2147596174}
!6322 = !DILocation(line: 98, column: 1, scope: !6146)
!6323 = !{i64 2147596284, i64 2147596327, i64 2147596367}
!6324 = !DILocation(line: 99, column: 1, scope: !6146)
!6325 = !{i64 2147596492, i64 2147596535, i64 2147596575}
!6326 = !DILocation(line: 100, column: 1, scope: !6146)
!6327 = !{i64 2147596685, i64 2147596728, i64 2147596768}
!6328 = !DILocation(line: 101, column: 1, scope: !6146)
!6329 = !{i64 2147596890, i64 2147596933, i64 2147596973}
!6330 = !DILocation(line: 102, column: 1, scope: !6146)
!6331 = !{i64 2147597095, i64 2147597138, i64 2147597178}
!6332 = !DILocation(line: 103, column: 1, scope: !6146)
!6333 = !{i64 2147597300, i64 2147597343, i64 2147597383}
!6334 = !DILocation(line: 104, column: 1, scope: !6146)
!6335 = !{i64 2147597508, i64 2147597551, i64 2147597591}
!6336 = !DILocation(line: 105, column: 1, scope: !6146)
!6337 = !{i64 2147597704, i64 2147597747, i64 2147597787}
!6338 = !DILocation(line: 106, column: 1, scope: !6146)
!6339 = !{i64 2147597909, i64 2147597952, i64 2147597992}
!6340 = !DILocation(line: 107, column: 1, scope: !6146)
!6341 = !{i64 2147598120, i64 2147598163, i64 2147598203}
!6342 = !DILocation(line: 108, column: 1, scope: !6146)
!6343 = !{i64 2147598319, i64 2147598362, i64 2147598402}
!6344 = !DILocation(line: 109, column: 1, scope: !6146)
!6345 = !{i64 2147598494, i64 2147598537, i64 2147598577}
!6346 = !DILocation(line: 110, column: 1, scope: !6146)
!6347 = !{i64 2147598678, i64 2147598721, i64 2147598761}
!6348 = !DILocation(line: 111, column: 1, scope: !6146)
!6349 = !{i64 2147598880, i64 2147598923, i64 2147598963}
!6350 = !DILocation(line: 112, column: 1, scope: !6146)
!6351 = !{i64 2147599082, i64 2147599125, i64 2147599165}
!6352 = !DILocation(line: 113, column: 1, scope: !6146)
!6353 = !{i64 2147599287, i64 2147599330, i64 2147599370}
!6354 = !DILocation(line: 114, column: 1, scope: !6146)
!6355 = !{i64 2147599480, i64 2147599523, i64 2147599563}
!6356 = !DILocation(line: 115, column: 1, scope: !6146)
!6357 = !{i64 2147599646, i64 2147599689, i64 2147599729}
!6358 = !DILocation(line: 116, column: 1, scope: !6146)
!6359 = !{i64 2147599830, i64 2147599873, i64 2147599913}
!6360 = !DILocation(line: 117, column: 1, scope: !6146)
!6361 = !{i64 2147600020, i64 2147600063, i64 2147600103}
!6362 = !DILocation(line: 118, column: 1, scope: !6146)
!6363 = !{i64 2147600204, i64 2147600247, i64 2147600287}
!6364 = !DILocation(line: 119, column: 1, scope: !6146)
!6365 = !{i64 2147600418, i64 2147600461, i64 2147600501}
!6366 = !DILocation(line: 120, column: 1, scope: !6146)
!6367 = !{i64 2147600629, i64 2147600672, i64 2147600712}
!6368 = !DILocation(line: 121, column: 1, scope: !6146)
!6369 = !{i64 2147600852, i64 2147600895, i64 2147600935}
!6370 = !DILocation(line: 122, column: 1, scope: !6146)
!6371 = !{i64 2147601036, i64 2147601079, i64 2147601119}
!6372 = !DILocation(line: 123, column: 1, scope: !6146)
!6373 = !{i64 2147601250, i64 2147601293, i64 2147601333}
!6374 = !DILocation(line: 124, column: 1, scope: !6146)
!6375 = !{i64 2147601416, i64 2147601459, i64 2147601499}
!6376 = !DILocation(line: 125, column: 1, scope: !6146)
!6377 = !{i64 2147601597, i64 2147601640, i64 2147601680}
!6378 = !DILocation(line: 126, column: 1, scope: !6146)
!6379 = !{i64 2147601790, i64 2147601833, i64 2147601873}
!6380 = !DILocation(line: 127, column: 1, scope: !6146)
!6381 = !{i64 2147602016, i64 2147602059, i64 2147602099}
!6382 = !DILocation(line: 128, column: 1, scope: !6146)
!6383 = !{i64 2147602230, i64 2147602273, i64 2147602313}
!6384 = !DILocation(line: 129, column: 1, scope: !6146)
!6385 = !{i64 2147602456, i64 2147602499, i64 2147602539}
!6386 = !DILocation(line: 130, column: 1, scope: !6146)
!6387 = !{i64 2147602673, i64 2147602716, i64 2147602756}
!6388 = !DILocation(line: 131, column: 1, scope: !6146)
!6389 = !{i64 2147602950, i64 2147602993, i64 2147603033}
!6390 = !DILocation(line: 132, column: 1, scope: !6146)
!6391 = !{i64 2147603176, i64 2147603219, i64 2147603259}
!6392 = !DILocation(line: 133, column: 1, scope: !6146)
!6393 = !{i64 2147603372, i64 2147603415, i64 2147603455}
!6394 = !DILocation(line: 134, column: 1, scope: !6146)
!6395 = !{i64 2147607698, i64 2147607741, i64 2147607781}
!6396 = !DILocation(line: 135, column: 1, scope: !6146)
!6397 = !{i64 2147607912, i64 2147607955, i64 2147607995}
!6398 = !DILocation(line: 136, column: 1, scope: !6146)
!6399 = !{i64 2147608087, i64 2147608130, i64 2147608170}
!6400 = !DILocation(line: 137, column: 1, scope: !6146)
!6401 = !{i64 2147608341, i64 2147608384, i64 2147608424}
!6402 = !DILocation(line: 138, column: 1, scope: !6146)
!6403 = !{i64 2147608540, i64 2147608583, i64 2147608623}
!6404 = !DILocation(line: 139, column: 1, scope: !6146)
!6405 = !{i64 2147608782, i64 2147608825, i64 2147608865}
!6406 = !DILocation(line: 140, column: 1, scope: !6146)
!6407 = !{i64 2147608945, i64 2147608988, i64 2147609028}
!6408 = !DILocation(line: 141, column: 1, scope: !6146)
!6409 = !{i64 2147609132, i64 2147609175, i64 2147609215}
!6410 = !DILocation(line: 142, column: 1, scope: !6146)
!6411 = !{i64 2147609340, i64 2147609383, i64 2147609423}
!6412 = !DILocation(line: 143, column: 1, scope: !6146)
!6413 = !{i64 2147609536, i64 2147609579, i64 2147609619}
!6414 = !DILocation(line: 144, column: 1, scope: !6146)
!6415 = !{i64 2147609729, i64 2147609772, i64 2147609812}
!6416 = !DILocation(line: 145, column: 1, scope: !6146)
!6417 = !{i64 2147609911, i64 2147609954, i64 2147609994}
!6418 = !DILocation(line: 146, column: 1, scope: !6146)
!6419 = !{i64 2147610125, i64 2147610168, i64 2147610208}
!6420 = !DILocation(line: 147, column: 1, scope: !6146)
!6421 = !{i64 2147610336, i64 2147610379, i64 2147610419}
!6422 = !DILocation(line: 148, column: 1, scope: !6146)
!6423 = !{i64 2147610556, i64 2147610599, i64 2147610639}
!6424 = !DILocation(line: 149, column: 1, scope: !6146)
!6425 = !{i64 2147610763, i64 2147610806, i64 2147610846}
!6426 = !DILocation(line: 150, column: 1, scope: !6146)
!6427 = !{i64 2147611036, i64 2147611079, i64 2147611119}
!6428 = !DILocation(line: 151, column: 1, scope: !6146)
!6429 = !{i64 2147611284, i64 2147611327, i64 2147611367}
!6430 = !DILocation(line: 152, column: 1, scope: !6146)
!6431 = !{i64 2147611483, i64 2147611526, i64 2147611566}
!6432 = !DILocation(line: 153, column: 1, scope: !6146)
!6433 = !{i64 2147611718, i64 2147611761, i64 2147611801}
!6434 = !DILocation(line: 154, column: 1, scope: !6146)
!6435 = !{i64 2147611968, i64 2147612011, i64 2147612051}
!6436 = !DILocation(line: 155, column: 1, scope: !6146)
!6437 = !{i64 2147612170, i64 2147612213, i64 2147612253}
!6438 = !DILocation(line: 156, column: 1, scope: !6146)
!6439 = !{i64 2147612393, i64 2147612436, i64 2147612476}
!6440 = !DILocation(line: 157, column: 1, scope: !6146)
!6441 = !{i64 2147612607, i64 2147612650, i64 2147612690}
!6442 = !DILocation(line: 158, column: 1, scope: !6146)
!6443 = !{i64 2147612851, i64 2147612894, i64 2147612934}
!6444 = !DILocation(line: 159, column: 1, scope: !6146)
!6445 = !{i64 2147613080, i64 2147613123, i64 2147613163}
!6446 = !DILocation(line: 160, column: 1, scope: !6146)
!6447 = !{i64 2147613309, i64 2147613352, i64 2147613392}
!6448 = !DILocation(line: 161, column: 1, scope: !6146)
!6449 = !{i64 2147613517, i64 2147613560, i64 2147613600}
!6450 = !DILocation(line: 162, column: 1, scope: !6146)
!6451 = !{i64 2147613755, i64 2147613798, i64 2147613838}
!6452 = !DILocation(line: 163, column: 1, scope: !6146)
!6453 = !{i64 2147613981, i64 2147614024, i64 2147614064}
!6454 = !DILocation(line: 164, column: 1, scope: !6146)
!6455 = !{i64 2147614240, i64 2147614283, i64 2147614323}
!6456 = !DILocation(line: 165, column: 1, scope: !6146)
!6457 = !{i64 2147614460, i64 2147614503, i64 2147614543}
!6458 = !DILocation(line: 166, column: 1, scope: !6146)
!6459 = !{i64 2147614692, i64 2147614735, i64 2147614775}
!6460 = !DILocation(line: 167, column: 1, scope: !6146)
!6461 = !{i64 2147614933, i64 2147614976, i64 2147615016}
!6462 = !DILocation(line: 168, column: 1, scope: !6146)
!6463 = !{i64 2147615174, i64 2147615217, i64 2147615257}
!6464 = !DILocation(line: 169, column: 1, scope: !6146)
!6465 = !{i64 2147615397, i64 2147615440, i64 2147615480}
!6466 = !DILocation(line: 170, column: 1, scope: !6146)
!6467 = !{i64 2147615614, i64 2147615657, i64 2147615697}
!6468 = !DILocation(line: 171, column: 1, scope: !6146)
!6469 = !{i64 2147615855, i64 2147615898, i64 2147615938}
!6470 = !DILocation(line: 172, column: 1, scope: !6146)
!6471 = !{i64 2147620103, i64 2147620146, i64 2147620186}
!6472 = !DILocation(line: 173, column: 1, scope: !6146)
!6473 = !{i64 2147620266, i64 2147620309, i64 2147620349}
!6474 = !DILocation(line: 174, column: 1, scope: !6146)
!6475 = !{i64 2147620471, i64 2147620514, i64 2147620554}
!6476 = !DILocation(line: 175, column: 1, scope: !6146)
!6477 = !{i64 2147620664, i64 2147620707, i64 2147620747}
!6478 = !DILocation(line: 176, column: 1, scope: !6146)
!6479 = !{i64 2147620923, i64 2147620966, i64 2147621006}
!6480 = !DILocation(line: 177, column: 1, scope: !6146)
!6481 = !{i64 2147621146, i64 2147621189, i64 2147621229}
!6482 = !DILocation(line: 178, column: 1, scope: !6146)
!6483 = !{i64 2147621375, i64 2147621418, i64 2147621458}
!6484 = !DILocation(line: 179, column: 1, scope: !6146)
!6485 = !{i64 2147621589, i64 2147621632, i64 2147621672}
!6486 = !DILocation(line: 180, column: 1, scope: !6146)
!6487 = !{i64 2147621791, i64 2147621834, i64 2147621874}
!6488 = !DILocation(line: 181, column: 1, scope: !6146)
!6489 = !{i64 2147621987, i64 2147622030, i64 2147622070}
!6490 = !DILocation(line: 182, column: 1, scope: !6146)
!6491 = !{i64 2147622199, i64 2147622242, i64 2147622282}
!6492 = !DILocation(line: 183, column: 1, scope: !6146)
!6493 = !{i64 2147622420, i64 2147622463, i64 2147622503}
!6494 = !DILocation(line: 184, column: 1, scope: !6146)
!6495 = !{i64 2147622634, i64 2147622677, i64 2147622717}
!6496 = !DILocation(line: 185, column: 1, scope: !6146)
!6497 = !{i64 2147622824, i64 2147622867, i64 2147622907}
!6498 = !DILocation(line: 186, column: 1, scope: !6146)
!6499 = !{i64 2147623023, i64 2147623066, i64 2147623106}
!6500 = !DILocation(line: 187, column: 1, scope: !6146)
!6501 = !{i64 2147623228, i64 2147623271, i64 2147623311}
!6502 = !DILocation(line: 188, column: 1, scope: !6146)
!6503 = !{i64 2147623448, i64 2147623491, i64 2147623531}
!6504 = !DILocation(line: 189, column: 1, scope: !6146)
!6505 = !{i64 2147623649, i64 2147623692, i64 2147623732}
!6506 = !DILocation(line: 190, column: 1, scope: !6146)
!6507 = !{i64 2147623848, i64 2147623891, i64 2147623931}
!6508 = !DILocation(line: 191, column: 1, scope: !6146)
!6509 = !{i64 2147624053, i64 2147624096, i64 2147624136}
!6510 = !DILocation(line: 192, column: 1, scope: !6146)
!6511 = !{i64 2147624222, i64 2147624265, i64 2147624305}
!6512 = !DILocation(line: 193, column: 1, scope: !6146)
!6513 = !{i64 2147624406, i64 2147624449, i64 2147624489}
!6514 = !DILocation(line: 194, column: 1, scope: !6146)
!6515 = !{i64 2147624590, i64 2147624633, i64 2147624673}
!6516 = !DILocation(line: 195, column: 1, scope: !6146)
!6517 = !{i64 2147624777, i64 2147624820, i64 2147624860}
!6518 = !DILocation(line: 196, column: 1, scope: !6146)
!6519 = !{i64 2147624961, i64 2147625004, i64 2147625044}
!6520 = !DILocation(line: 197, column: 1, scope: !6146)
!6521 = !{i64 2147625199, i64 2147625242, i64 2147625282}
!6522 = !DILocation(line: 198, column: 1, scope: !6146)
!6523 = !{i64 2147625429, i64 2147625472, i64 2147625512}
!6524 = !DILocation(line: 199, column: 1, scope: !6146)
!6525 = !{i64 2147625658, i64 2147625701, i64 2147625741}
!6526 = !DILocation(line: 200, column: 1, scope: !6146)
!6527 = !{i64 2147625845, i64 2147625888, i64 2147625928}
!6528 = !DILocation(line: 201, column: 1, scope: !6146)
!6529 = !{i64 2147626041, i64 2147626084, i64 2147626124}
!6530 = !DILocation(line: 202, column: 1, scope: !6146)
!6531 = !{i64 2147626249, i64 2147626292, i64 2147626332}
!6532 = !DILocation(line: 203, column: 1, scope: !6146)
!6533 = !{i64 2147626461, i64 2147626504, i64 2147626544}
!6534 = !DILocation(line: 204, column: 1, scope: !6146)
!6535 = !{i64 2147626660, i64 2147626703, i64 2147626743}
!6536 = !DILocation(line: 205, column: 1, scope: !6146)
!6537 = !{i64 2147626898, i64 2147626941, i64 2147626981}
!6538 = !DILocation(line: 206, column: 1, scope: !6146)
!6539 = !{i64 2147627094, i64 2147627137, i64 2147627177}
!6540 = !DILocation(line: 207, column: 1, scope: !6146)
!6541 = !{i64 2147627296, i64 2147627339, i64 2147627379}
!6542 = !DILocation(line: 208, column: 1, scope: !6146)
!6543 = !{i64 2147627489, i64 2147627532, i64 2147627572}
!6544 = !DILocation(line: 209, column: 1, scope: !6146)
!6545 = !{i64 2147627723, i64 2147627766, i64 2147627806}
!6546 = !DILocation(line: 210, column: 1, scope: !6146)
!6547 = !{i64 2147627886, i64 2147627929, i64 2147627969}
!6548 = !DILocation(line: 211, column: 1, scope: !6146)
!6549 = !{i64 2147628125, i64 2147628168, i64 2147628208}
!6550 = !DILocation(line: 212, column: 1, scope: !6146)
!6551 = !{i64 2147628364, i64 2147628407, i64 2147628447}
!6552 = !DILocation(line: 213, column: 1, scope: !6146)
!6553 = !{i64 2147628600, i64 2147628643, i64 2147628683}
!6554 = !DILocation(line: 214, column: 1, scope: !6146)
!6555 = !{i64 2147628830, i64 2147628873, i64 2147628913}
!6556 = !DILocation(line: 215, column: 1, scope: !6146)
!6557 = !{i64 2147629017, i64 2147629060, i64 2147629100}
!6558 = !DILocation(line: 216, column: 1, scope: !6146)
!6559 = !{i64 2147629216, i64 2147629259, i64 2147629299}
!6560 = !DILocation(line: 217, column: 1, scope: !6146)
!6561 = !{i64 2147633548, i64 2147633591, i64 2147633631}
!6562 = !DILocation(line: 218, column: 1, scope: !6146)
!6563 = !{i64 2147633723, i64 2147633766, i64 2147633806}
!6564 = !DILocation(line: 219, column: 1, scope: !6146)
!6565 = !{i64 2147633957, i64 2147634000, i64 2147634040}
!6566 = !DILocation(line: 220, column: 1, scope: !6146)
!6567 = !{i64 2147634165, i64 2147634208, i64 2147634248}
!6568 = !DILocation(line: 221, column: 1, scope: !6146)
!6569 = !{i64 2147634383, i64 2147634426, i64 2147634466}
!6570 = !DILocation(line: 222, column: 1, scope: !6146)
!6571 = !{i64 2147634573, i64 2147634616, i64 2147634656}
!6572 = !DILocation(line: 223, column: 1, scope: !6146)
!6573 = !{i64 2147634805, i64 2147634848, i64 2147634888}
!6574 = !DILocation(line: 224, column: 1, scope: !6146)
!6575 = !{i64 2147635025, i64 2147635068, i64 2147635108}
!6576 = !DILocation(line: 225, column: 1, scope: !6146)
!6577 = !{i64 2147635221, i64 2147635264, i64 2147635304}
!6578 = !DILocation(line: 226, column: 1, scope: !6146)
!6579 = !{i64 2147635427, i64 2147635470, i64 2147635510}
!6580 = !DILocation(line: 227, column: 1, scope: !6146)
!6581 = !{i64 2147635632, i64 2147635675, i64 2147635715}
!6582 = !DILocation(line: 228, column: 1, scope: !6146)
!6583 = !{i64 2147635858, i64 2147635901, i64 2147635941}
!6584 = !DILocation(line: 229, column: 1, scope: !6146)
!6585 = !{i64 2147636066, i64 2147636109, i64 2147636149}
!6586 = !DILocation(line: 230, column: 1, scope: !6146)
!6587 = !{i64 2147636262, i64 2147636305, i64 2147636345}
!6588 = !DILocation(line: 231, column: 1, scope: !6146)
!6589 = !{i64 2147636494, i64 2147636537, i64 2147636577}
!6590 = !DILocation(line: 232, column: 1, scope: !6146)
!6591 = !{i64 2147636678, i64 2147636721, i64 2147636761}
!6592 = !DILocation(line: 233, column: 1, scope: !6146)
!6593 = !{i64 2147636887, i64 2147636930, i64 2147636970}
!6594 = !DILocation(line: 234, column: 1, scope: !6146)
!6595 = !{i64 2147637095, i64 2147637138, i64 2147637178}
!6596 = !DILocation(line: 235, column: 1, scope: !6146)
!6597 = !{i64 2147637291, i64 2147637334, i64 2147637374}
!6598 = !DILocation(line: 236, column: 1, scope: !6146)
!6599 = !{i64 2147637475, i64 2147637518, i64 2147637558}
!6600 = !DILocation(line: 237, column: 1, scope: !6146)
!6601 = !{i64 2147637701, i64 2147637744, i64 2147637784}
!6602 = !DILocation(line: 238, column: 1, scope: !6146)
!6603 = !{i64 2147637927, i64 2147637970, i64 2147638010}
!6604 = !DILocation(line: 239, column: 1, scope: !6146)
!6605 = !{i64 2147638153, i64 2147638196, i64 2147638236}
!6606 = !DILocation(line: 240, column: 1, scope: !6146)
!6607 = !{i64 2147638379, i64 2147638422, i64 2147638462}
!6608 = !DILocation(line: 241, column: 1, scope: !6146)
!6609 = !{i64 2147638605, i64 2147638648, i64 2147638688}
!6610 = !DILocation(line: 242, column: 1, scope: !6146)
!6611 = !{i64 2147638837, i64 2147638880, i64 2147638920}
!6612 = !DILocation(line: 243, column: 1, scope: !6146)
!6613 = !{i64 2147639075, i64 2147639118, i64 2147639158}
!6614 = !DILocation(line: 244, column: 1, scope: !6146)
!6615 = !{i64 2147639307, i64 2147639350, i64 2147639390}
!6616 = !DILocation(line: 245, column: 1, scope: !6146)
!6617 = !{i64 2147639509, i64 2147639552, i64 2147639592}
!6618 = !DILocation(line: 246, column: 1, scope: !6146)
!6619 = !{i64 2147639759, i64 2147639802, i64 2147639842}
!6620 = !DILocation(line: 247, column: 1, scope: !6146)
!6621 = !{i64 2147639997, i64 2147640040, i64 2147640080}
!6622 = !DILocation(line: 248, column: 1, scope: !6146)
!6623 = !{i64 2147640205, i64 2147640248, i64 2147640288}
!6624 = !DILocation(line: 249, column: 1, scope: !6146)
!6625 = !{i64 2147640401, i64 2147640444, i64 2147640484}
!6626 = !DILocation(line: 250, column: 1, scope: !6146)
!6627 = !{i64 2147640585, i64 2147640628, i64 2147640668}
!6628 = !DILocation(line: 251, column: 1, scope: !6146)
!6629 = !{i64 2147640802, i64 2147640845, i64 2147640885}
!6630 = !DILocation(line: 252, column: 1, scope: !6146)
!6631 = !{i64 2147641007, i64 2147641050, i64 2147641090}
!6632 = !DILocation(line: 253, column: 1, scope: !6146)
!6633 = !{i64 2147641242, i64 2147641285, i64 2147641325}
!6634 = !DILocation(line: 254, column: 1, scope: !6146)
!6635 = !{i64 2147641465, i64 2147641508, i64 2147641548}
!6636 = !DILocation(line: 255, column: 1, scope: !6146)
!6637 = !{i64 2147641688, i64 2147641731, i64 2147641771}
!6638 = !DILocation(line: 256, column: 1, scope: !6146)
!6639 = !{i64 2147641926, i64 2147641969, i64 2147642009}
!6640 = !DILocation(line: 257, column: 1, scope: !6146)
!6641 = !{i64 2147646225, i64 2147646268, i64 2147646308}
!6642 = !DILocation(line: 258, column: 1, scope: !6146)
!6643 = !{i64 2147646397, i64 2147646440, i64 2147646480}
!6644 = !DILocation(line: 259, column: 1, scope: !6146)
!6645 = !{i64 2147646612, i64 2147646655, i64 2147646695}
!6646 = !DILocation(line: 260, column: 1, scope: !6146)
!6647 = !{i64 2147646826, i64 2147646869, i64 2147646909}
!6648 = !DILocation(line: 261, column: 1, scope: !6146)
!6649 = !{i64 2147647028, i64 2147647071, i64 2147647111}
!6650 = !DILocation(line: 262, column: 1, scope: !6146)
!6651 = !{i64 2147647245, i64 2147647288, i64 2147647328}
!6652 = !DILocation(line: 263, column: 1, scope: !6146)
!6653 = !{i64 2147647498, i64 2147647541, i64 2147647581}
!6654 = !DILocation(line: 264, column: 1, scope: !6146)
!6655 = !{i64 2147647742, i64 2147647785, i64 2147647825}
!6656 = !DILocation(line: 265, column: 1, scope: !6146)
!6657 = !{i64 2147647959, i64 2147648002, i64 2147648042}
!6658 = !DILocation(line: 266, column: 1, scope: !6146)
!6659 = !{i64 2147648164, i64 2147648207, i64 2147648247}
!6660 = !DILocation(line: 267, column: 1, scope: !6146)
!6661 = !{i64 2147648357, i64 2147648400, i64 2147648440}
!6662 = !DILocation(line: 268, column: 1, scope: !6146)
!6663 = !{i64 2147648610, i64 2147648653, i64 2147648693}
!6664 = !DILocation(line: 269, column: 1, scope: !6146)
!6665 = !{i64 2147648818, i64 2147648861, i64 2147648901}
!6666 = !DILocation(line: 270, column: 1, scope: !6146)
!6667 = !{i64 2147649014, i64 2147649057, i64 2147649097}
!6668 = !DILocation(line: 271, column: 1, scope: !6146)
!6669 = !{i64 2147649228, i64 2147649271, i64 2147649311}
!6670 = !DILocation(line: 272, column: 1, scope: !6146)
!6671 = !{i64 2147649436, i64 2147649479, i64 2147649519}
!6672 = !DILocation(line: 273, column: 1, scope: !6146)
!6673 = !{i64 2147649626, i64 2147649669, i64 2147649709}
!6674 = !DILocation(line: 274, column: 1, scope: !6146)
!6675 = !{i64 2147649840, i64 2147649883, i64 2147649923}
!6676 = !DILocation(line: 275, column: 1, scope: !6146)
!6677 = !{i64 2147650102, i64 2147650145, i64 2147650185}
!6678 = !DILocation(line: 276, column: 1, scope: !6146)
!6679 = !{i64 2147650313, i64 2147650356, i64 2147650396}
!6680 = !DILocation(line: 277, column: 1, scope: !6146)
!6681 = !{i64 2147650557, i64 2147650600, i64 2147650640}
!6682 = !DILocation(line: 278, column: 1, scope: !6146)
!6683 = !{i64 2147650768, i64 2147650811, i64 2147650851}
!6684 = !DILocation(line: 279, column: 1, scope: !6146)
!6685 = !{i64 2147650997, i64 2147651040, i64 2147651080}
!6686 = !DILocation(line: 280, column: 1, scope: !6146)
!6687 = !{i64 2147651262, i64 2147651305, i64 2147651345}
!6688 = !DILocation(line: 281, column: 1, scope: !6146)
!6689 = !{i64 2147651467, i64 2147651510, i64 2147651550}
!6690 = !DILocation(line: 282, column: 1, scope: !6146)
!6691 = !{i64 2147651663, i64 2147651706, i64 2147651746}
!6692 = !DILocation(line: 283, column: 1, scope: !6146)
!6693 = !{i64 2147651886, i64 2147651929, i64 2147651969}
!6694 = !DILocation(line: 284, column: 1, scope: !6146)
!6695 = !{i64 2147652049, i64 2147652092, i64 2147652132}
!6696 = !DILocation(line: 285, column: 1, scope: !6146)
!6697 = !{i64 2147652254, i64 2147652297, i64 2147652337}
!6698 = !DILocation(line: 286, column: 1, scope: !6146)
!6699 = !{i64 2147652474, i64 2147652517, i64 2147652557}
!6700 = !DILocation(line: 287, column: 1, scope: !6146)
!6701 = !{i64 2147652688, i64 2147652731, i64 2147652771}
!6702 = !DILocation(line: 288, column: 1, scope: !6146)
!6703 = !{i64 2147652932, i64 2147652975, i64 2147653015}
!6704 = !DILocation(line: 289, column: 1, scope: !6146)
!6705 = !{i64 2147653164, i64 2147653207, i64 2147653247}
!6706 = !DILocation(line: 290, column: 1, scope: !6146)
!6707 = !{i64 2147653378, i64 2147653421, i64 2147653461}
!6708 = !DILocation(line: 291, column: 1, scope: !6146)
!6709 = !{i64 2147653589, i64 2147653632, i64 2147653672}
!6710 = !DILocation(line: 292, column: 1, scope: !6146)
!6711 = !{i64 2147653782, i64 2147653825, i64 2147653865}
!6712 = !DILocation(line: 293, column: 1, scope: !6146)
!6713 = !{i64 2147653981, i64 2147654024, i64 2147654064}
!6714 = !DILocation(line: 294, column: 1, scope: !6146)
!6715 = !{i64 2147654153, i64 2147654196, i64 2147654236}
!6716 = !DILocation(line: 295, column: 1, scope: !6146)
!6717 = !{i64 2147654346, i64 2147654389, i64 2147654429}
!6718 = !DILocation(line: 296, column: 1, scope: !6146)
!6719 = !{i64 2147654542, i64 2147654585, i64 2147654625}
!6720 = !DILocation(line: 297, column: 1, scope: !6146)
!6721 = !{i64 2147654705, i64 2147654748, i64 2147654788}
!6722 = !DILocation(line: 298, column: 1, scope: !6146)
!6723 = !{i64 2147654907, i64 2147654950, i64 2147654990}
!6724 = !DILocation(line: 299, column: 1, scope: !6146)
!6725 = !{i64 2147659173, i64 2147659216, i64 2147659256}
!6726 = !DILocation(line: 300, column: 1, scope: !6146)
!6727 = !{i64 2147659381, i64 2147659424, i64 2147659464}
!6728 = !DILocation(line: 301, column: 1, scope: !6146)
!6729 = !{i64 2147659574, i64 2147659617, i64 2147659657}
!6730 = !DILocation(line: 302, column: 1, scope: !6146)
!6731 = !{i64 2147659761, i64 2147659804, i64 2147659844}
!6732 = !DILocation(line: 303, column: 1, scope: !6146)
!6733 = !{i64 2147659988, i64 2147660031, i64 2147660071}
!6734 = !DILocation(line: 304, column: 1, scope: !6146)
!6735 = !{i64 2147660205, i64 2147660248, i64 2147660288}
!6736 = !DILocation(line: 305, column: 1, scope: !6146)
!6737 = !{i64 2147660497, i64 2147660540, i64 2147660580}
!6738 = !DILocation(line: 306, column: 1, scope: !6146)
!6739 = !{i64 2147660729, i64 2147660772, i64 2147660812}
!6740 = !DILocation(line: 307, column: 1, scope: !6146)
!6741 = !{i64 2147660946, i64 2147660989, i64 2147661029}
!6742 = !DILocation(line: 308, column: 1, scope: !6146)
!6743 = !{i64 2147661153, i64 2147661196, i64 2147661236}
!6744 = !DILocation(line: 309, column: 1, scope: !6146)
!6745 = !{i64 2147661354, i64 2147661397, i64 2147661437}
!6746 = !DILocation(line: 310, column: 1, scope: !6146)
!6747 = !{i64 2147661586, i64 2147661629, i64 2147661669}
!6748 = !DILocation(line: 311, column: 1, scope: !6146)
!6749 = !{i64 2147661794, i64 2147661837, i64 2147661877}
!6750 = !DILocation(line: 312, column: 1, scope: !6146)
!6751 = !{i64 2147661984, i64 2147662027, i64 2147662067}
!6752 = !DILocation(line: 313, column: 1, scope: !6146)
!6753 = !{i64 2147662210, i64 2147662253, i64 2147662293}
!6754 = !DILocation(line: 314, column: 1, scope: !6146)
!6755 = !{i64 2147662399, i64 2147662442, i64 2147662482}
!6756 = !DILocation(line: 315, column: 1, scope: !6146)
!6757 = !{i64 2147662670, i64 2147662713, i64 2147662753}
!6758 = !DILocation(line: 316, column: 1, scope: !6146)
!6759 = !{i64 2147662890, i64 2147662933, i64 2147662973}
!6760 = !DILocation(line: 317, column: 1, scope: !6146)
!6761 = !{i64 2147663143, i64 2147663186, i64 2147663226}
!6762 = !DILocation(line: 318, column: 1, scope: !6146)
!6763 = !{i64 2147663351, i64 2147663394, i64 2147663434}
!6764 = !DILocation(line: 319, column: 1, scope: !6146)
!6765 = !{i64 2147663583, i64 2147663626, i64 2147663666}
!6766 = !DILocation(line: 320, column: 1, scope: !6146)
!6767 = !{i64 2147663794, i64 2147663837, i64 2147663877}
!6768 = !DILocation(line: 321, column: 1, scope: !6146)
!6769 = !{i64 2147663984, i64 2147664027, i64 2147664067}
!6770 = !DILocation(line: 322, column: 1, scope: !6146)
!6771 = !{i64 2147664198, i64 2147664241, i64 2147664281}
!6772 = !DILocation(line: 323, column: 1, scope: !6146)
!6773 = !{i64 2147664397, i64 2147664440, i64 2147664480}
!6774 = !DILocation(line: 324, column: 1, scope: !6146)
!6775 = !{i64 2147664584, i64 2147664627, i64 2147664667}
!6776 = !DILocation(line: 325, column: 1, scope: !6146)
!6777 = !{i64 2147664792, i64 2147664835, i64 2147664875}
!6778 = !DILocation(line: 326, column: 1, scope: !6146)
!6779 = !{i64 2147665021, i64 2147665064, i64 2147665104}
!6780 = !DILocation(line: 327, column: 1, scope: !6146)
!6781 = !{i64 2147665223, i64 2147665266, i64 2147665306}
!6782 = !DILocation(line: 328, column: 1, scope: !6146)
!6783 = !{i64 2147665422, i64 2147665465, i64 2147665505}
!6784 = !DILocation(line: 329, column: 1, scope: !6146)
!6785 = !{i64 2147665612, i64 2147665655, i64 2147665695}
!6786 = !DILocation(line: 330, column: 1, scope: !6146)
!6787 = !{i64 2147665829, i64 2147665872, i64 2147665912}
!6788 = !DILocation(line: 332, column: 1, scope: !6146)
!6789 = distinct !DISubprogram(name: "stm32l1_init", scope: !444, file: !444, line: 31, type: !451, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6790)
!6790 = !{!6791, !6792}
!6791 = !DILocalVariable(name: "arg", arg: 1, scope: !6789, file: !444, line: 31, type: !453)
!6792 = !DILocalVariable(name: "key", scope: !6789, file: !444, line: 33, type: !208)
!6793 = !DILocation(line: 0, scope: !6789)
!6794 = !DILocation(line: 55, column: 2, scope: !6795, inlinedAt: !6802)
!6795 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6796, file: !6796, line: 42, type: !6797, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6799)
!6796 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6797 = !DISubroutineType(types: !6798)
!6798 = !{!32}
!6799 = !{!6800, !6801}
!6800 = !DILocalVariable(name: "key", scope: !6795, file: !6796, line: 44, type: !32)
!6801 = !DILocalVariable(name: "tmp", scope: !6795, file: !6796, line: 53, type: !32)
!6802 = distinct !DILocation(line: 37, column: 8, scope: !6789)
!6803 = !{i64 1524994}
!6804 = !DILocation(line: 0, scope: !6795, inlinedAt: !6802)
!6805 = !DILocalVariable(name: "key", arg: 1, scope: !6806, file: !6796, line: 84, type: !32)
!6806 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6796, file: !6796, line: 84, type: !6807, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6809)
!6807 = !DISubroutineType(types: !6808)
!6808 = !{null, !32}
!6809 = !{!6805}
!6810 = !DILocation(line: 0, scope: !6806, inlinedAt: !6811)
!6811 = distinct !DILocation(line: 44, column: 2, scope: !6789)
!6812 = !DILocation(line: 95, column: 2, scope: !6806, inlinedAt: !6811)
!6813 = !{i64 1525811}
!6814 = !DILocation(line: 48, column: 18, scope: !6789)
!6815 = !DILocation(line: 54, column: 2, scope: !6789)
!6816 = !DILocation(line: 55, column: 2, scope: !6789)
!6817 = !DILocation(line: 57, column: 2, scope: !6789)
!6818 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !6819, file: !6819, line: 531, type: !6820, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6822)
!6819 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6820 = !DISubroutineType(types: !6821)
!6821 = !{null, !208}
!6822 = !{!6823, !6824}
!6823 = !DILocalVariable(name: "Periphs", arg: 1, scope: !6818, file: !6819, line: 531, type: !208)
!6824 = !DILocalVariable(name: "tmpreg", scope: !6818, file: !6819, line: 533, type: !423)
!6825 = !DILocation(line: 0, scope: !6818)
!6826 = !DILocation(line: 533, column: 3, scope: !6818)
!6827 = !DILocation(line: 533, column: 17, scope: !6818)
!6828 = !DILocation(line: 534, column: 3, scope: !6818)
!6829 = !DILocation(line: 536, column: 12, scope: !6818)
!6830 = !DILocation(line: 536, column: 10, scope: !6818)
!6831 = !DILocation(line: 537, column: 9, scope: !6818)
!6832 = !DILocation(line: 538, column: 1, scope: !6818)
!6833 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !6834, file: !6834, line: 272, type: !6820, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6835)
!6834 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6835 = !{!6836}
!6836 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !6833, file: !6834, line: 272, type: !208)
!6837 = !DILocation(line: 0, scope: !6833)
!6838 = !DILocation(line: 274, column: 3, scope: !6833)
!6839 = !DILocation(line: 275, column: 1, scope: !6833)
!6840 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !474, file: !474, line: 26, type: !480, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !6841)
!6841 = !{!6842}
!6842 = !DILocalVariable(name: "dev", arg: 1, scope: !6840, file: !474, line: 26, type: !482)
!6843 = !DILocation(line: 0, scope: !6840)
!6844 = !DILocation(line: 68, column: 2, scope: !6840)
!6845 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6846, file: !6846, line: 14, type: !5126, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !6847)
!6846 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6847 = !{!6848, !6849}
!6848 = !DILocalVariable(name: "fmt", arg: 1, scope: !6845, file: !6846, line: 14, type: !140)
!6849 = !DILocalVariable(name: "ap", scope: !6845, file: !6846, line: 16, type: !6850)
!6850 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4194, line: 99, baseType: !6851)
!6851 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4194, line: 40, baseType: !6852)
!6852 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6846, baseType: !6853)
!6853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6854)
!6854 = !{!6855}
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6853, file: !6846, line: 16, baseType: !124, size: 32)
!6856 = !DILocation(line: 0, scope: !6845)
!6857 = !DILocation(line: 16, column: 2, scope: !6845)
!6858 = !DILocation(line: 16, column: 10, scope: !6845)
!6859 = !DILocation(line: 18, column: 2, scope: !6845)
!6860 = !DILocation(line: 19, column: 2, scope: !6845)
!6861 = !DILocation(line: 20, column: 2, scope: !6845)
!6862 = !DILocation(line: 21, column: 1, scope: !6845)
!6863 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6846, file: !6846, line: 23, type: !6864, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !6866)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{null, !140, !6850}
!6866 = !{!6867, !6868}
!6867 = !DILocalVariable(name: "fmt", arg: 1, scope: !6863, file: !6846, line: 23, type: !140)
!6868 = !DILocalVariable(name: "ap", arg: 2, scope: !6863, file: !6846, line: 23, type: !6850)
!6869 = !DILocation(line: 0, scope: !6863)
!6870 = !DILocation(line: 25, column: 2, scope: !6863)
!6871 = !DILocation(line: 26, column: 1, scope: !6863)
!6872 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6846, file: !6846, line: 52, type: !6873, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !6875)
!6873 = !DISubroutineType(types: !6874)
!6874 = !{null, !125, !13, !272}
!6875 = !{!6876, !6877, !6878, !6879}
!6876 = !DILocalVariable(name: "level", arg: 1, scope: !6872, file: !6846, line: 52, type: !125)
!6877 = !DILocalVariable(name: "data", arg: 2, scope: !6872, file: !6846, line: 52, type: !13)
!6878 = !DILocalVariable(name: "size", arg: 3, scope: !6872, file: !6846, line: 52, type: !272)
!6879 = !DILocalVariable(name: "data_buffer", scope: !6872, file: !6846, line: 54, type: !140)
!6880 = !DILocation(line: 0, scope: !6872)
!6881 = !DILocation(line: 55, column: 14, scope: !6872)
!6882 = !DILocation(line: 55, column: 2, scope: !6872)
!6883 = !DILocation(line: 56, column: 3, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6872, file: !6846, line: 55, column: 20)
!6885 = !DILocation(line: 57, column: 3, scope: !6884)
!6886 = !DILocation(line: 59, column: 7, scope: !6884)
!6887 = distinct !{!6887, !6882, !6888}
!6888 = !DILocation(line: 65, column: 2, scope: !6872)
!6889 = !DILocation(line: 66, column: 1, scope: !6872)
!6890 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3438, file: !3438, line: 175, type: !3439, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !6891)
!6891 = !{!6892}
!6892 = !DILocalVariable(name: "level", arg: 1, scope: !6890, file: !3438, line: 175, type: !125)
!6893 = !DILocation(line: 0, scope: !6890)
!6894 = !DILocation(line: 177, column: 2, scope: !6890)
!6895 = !DILocation(line: 189, column: 1, scope: !6890)
!6896 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6846, file: !6846, line: 28, type: !6897, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !6899)
!6897 = !DISubroutineType(types: !6898)
!6898 = !{null, !140, !272}
!6899 = !{!6900, !6901, !6902, !6904, !6906}
!6900 = !DILocalVariable(name: "data", arg: 1, scope: !6896, file: !6846, line: 28, type: !140)
!6901 = !DILocalVariable(name: "length", arg: 2, scope: !6896, file: !6846, line: 28, type: !272)
!6902 = !DILocalVariable(name: "i", scope: !6903, file: !6846, line: 30, type: !272)
!6903 = distinct !DILexicalBlock(scope: !6896, file: !6846, line: 30, column: 2)
!6904 = !DILocalVariable(name: "i", scope: !6905, file: !6846, line: 40, type: !272)
!6905 = distinct !DILexicalBlock(scope: !6896, file: !6846, line: 40, column: 2)
!6906 = !DILocalVariable(name: "c", scope: !6907, file: !6846, line: 42, type: !151)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !6846, line: 41, column: 19)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !6846, line: 41, column: 7)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !6846, line: 40, column: 54)
!6910 = distinct !DILexicalBlock(scope: !6905, file: !6846, line: 40, column: 2)
!6911 = !DILocation(line: 0, scope: !6896)
!6912 = !DILocation(line: 0, scope: !6903)
!6913 = !DILocation(line: 30, column: 2, scope: !6903)
!6914 = !DILocation(line: 38, column: 2, scope: !6896)
!6915 = !DILocation(line: 0, scope: !6905)
!6916 = !DILocation(line: 40, column: 2, scope: !6905)
!6917 = !DILocation(line: 31, column: 9, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6919, file: !6846, line: 31, column: 7)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !6846, line: 30, column: 54)
!6920 = distinct !DILexicalBlock(scope: !6903, file: !6846, line: 30, column: 2)
!6921 = !DILocation(line: 31, column: 7, scope: !6919)
!6922 = !DILocation(line: 32, column: 35, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6918, file: !6846, line: 31, column: 19)
!6924 = !DILocation(line: 32, column: 20, scope: !6923)
!6925 = !DILocation(line: 32, column: 4, scope: !6923)
!6926 = !DILocation(line: 33, column: 3, scope: !6923)
!6927 = !DILocation(line: 34, column: 4, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6918, file: !6846, line: 33, column: 10)
!6929 = !DILocation(line: 30, column: 50, scope: !6920)
!6930 = !DILocation(line: 30, column: 24, scope: !6920)
!6931 = distinct !{!6931, !6913, !6932}
!6932 = !DILocation(line: 36, column: 2, scope: !6903)
!6933 = !DILocation(line: 49, column: 2, scope: !6896)
!6934 = !DILocation(line: 50, column: 1, scope: !6896)
!6935 = !DILocation(line: 41, column: 9, scope: !6908)
!6936 = !DILocation(line: 41, column: 7, scope: !6909)
!6937 = !DILocation(line: 42, column: 22, scope: !6907)
!6938 = !DILocation(line: 0, scope: !6907)
!6939 = !DILocation(line: 44, column: 25, scope: !6907)
!6940 = !DILocation(line: 44, column: 17, scope: !6907)
!6941 = !DILocation(line: 44, column: 33, scope: !6907)
!6942 = !DILocation(line: 44, column: 4, scope: !6907)
!6943 = !DILocation(line: 45, column: 3, scope: !6907)
!6944 = !DILocation(line: 46, column: 4, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6908, file: !6846, line: 45, column: 10)
!6946 = !DILocation(line: 40, column: 50, scope: !6910)
!6947 = !DILocation(line: 40, column: 24, scope: !6910)
!6948 = distinct !{!6948, !6916, !6949}
!6949 = !DILocation(line: 48, column: 2, scope: !6905)
!6950 = distinct !DISubprogram(name: "isprint", scope: !5919, file: !5919, line: 37, type: !410, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !6951)
!6951 = !{!6952}
!6952 = !DILocalVariable(name: "c", arg: 1, scope: !6950, file: !5919, line: 37, type: !125)
!6953 = !DILocation(line: 0, scope: !6950)
!6954 = !DILocation(line: 39, column: 38, scope: !6950)
!6955 = !DILocation(line: 39, column: 2, scope: !6950)
!6956 = distinct !DISubprogram(name: "_copy", scope: !6957, file: !6957, line: 40, type: !6958, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !6960)
!6957 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6958 = !DISubroutineType(types: !6959)
!6959 = !{!32, !184, !32, !503, !32}
!6960 = !{!6961, !6962, !6963, !6964}
!6961 = !DILocalVariable(name: "to", arg: 1, scope: !6956, file: !6957, line: 40, type: !184)
!6962 = !DILocalVariable(name: "to_len", arg: 2, scope: !6956, file: !6957, line: 40, type: !32)
!6963 = !DILocalVariable(name: "from", arg: 3, scope: !6956, file: !6957, line: 41, type: !503)
!6964 = !DILocalVariable(name: "from_len", arg: 4, scope: !6956, file: !6957, line: 41, type: !32)
!6965 = !DILocation(line: 0, scope: !6956)
!6966 = !DILocation(line: 43, column: 15, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6956, file: !6957, line: 43, column: 6)
!6968 = !DILocation(line: 43, column: 6, scope: !6956)
!6969 = !DILocation(line: 44, column: 9, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6967, file: !6957, line: 43, column: 26)
!6971 = !DILocation(line: 45, column: 3, scope: !6970)
!6972 = !DILocation(line: 0, scope: !6967)
!6973 = !DILocation(line: 49, column: 1, scope: !6956)
!6974 = distinct !DISubprogram(name: "_set", scope: !6957, file: !6957, line: 51, type: !6975, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !6977)
!6975 = !DISubroutineType(types: !6976)
!6976 = !{null, !124, !150, !32}
!6977 = !{!6978, !6979, !6980}
!6978 = !DILocalVariable(name: "to", arg: 1, scope: !6974, file: !6957, line: 51, type: !124)
!6979 = !DILocalVariable(name: "val", arg: 2, scope: !6974, file: !6957, line: 51, type: !150)
!6980 = !DILocalVariable(name: "len", arg: 3, scope: !6974, file: !6957, line: 51, type: !32)
!6981 = !DILocation(line: 0, scope: !6974)
!6982 = !DILocation(line: 53, column: 19, scope: !6974)
!6983 = !DILocation(line: 53, column: 8, scope: !6974)
!6984 = !DILocation(line: 54, column: 1, scope: !6974)
!6985 = distinct !DISubprogram(name: "_double_byte", scope: !6957, file: !6957, line: 59, type: !6986, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !6988)
!6986 = !DISubroutineType(types: !6987)
!6987 = !{!150, !150}
!6988 = !{!6989}
!6989 = !DILocalVariable(name: "a", arg: 1, scope: !6985, file: !6957, line: 59, type: !150)
!6990 = !DILocation(line: 0, scope: !6985)
!6991 = !DILocation(line: 61, column: 12, scope: !6985)
!6992 = !DILocation(line: 61, column: 27, scope: !6985)
!6993 = !DILocation(line: 61, column: 17, scope: !6985)
!6994 = !DILocation(line: 61, column: 2, scope: !6985)
!6995 = distinct !DISubprogram(name: "_compare", scope: !6957, file: !6957, line: 64, type: !6996, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !6998)
!6996 = !DISubroutineType(types: !6997)
!6997 = !{!125, !503, !503, !272}
!6998 = !{!6999, !7000, !7001, !7002, !7003, !7004, !7005}
!6999 = !DILocalVariable(name: "a", arg: 1, scope: !6995, file: !6957, line: 64, type: !503)
!7000 = !DILocalVariable(name: "b", arg: 2, scope: !6995, file: !6957, line: 64, type: !503)
!7001 = !DILocalVariable(name: "size", arg: 3, scope: !6995, file: !6957, line: 64, type: !272)
!7002 = !DILocalVariable(name: "tempa", scope: !6995, file: !6957, line: 66, type: !503)
!7003 = !DILocalVariable(name: "tempb", scope: !6995, file: !6957, line: 67, type: !503)
!7004 = !DILocalVariable(name: "result", scope: !6995, file: !6957, line: 68, type: !150)
!7005 = !DILocalVariable(name: "i", scope: !7006, file: !6957, line: 70, type: !32)
!7006 = distinct !DILexicalBlock(scope: !6995, file: !6957, line: 70, column: 2)
!7007 = !DILocation(line: 0, scope: !6995)
!7008 = !DILocation(line: 0, scope: !7006)
!7009 = !DILocation(line: 70, column: 29, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7006, file: !6957, line: 70, column: 2)
!7011 = !DILocation(line: 70, column: 2, scope: !7006)
!7012 = !DILocation(line: 73, column: 2, scope: !6995)
!7013 = !DILocation(line: 71, column: 13, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7010, file: !6957, line: 70, column: 42)
!7015 = !DILocation(line: 71, column: 24, scope: !7014)
!7016 = !DILocation(line: 71, column: 22, scope: !7014)
!7017 = !DILocation(line: 71, column: 10, scope: !7014)
!7018 = !DILocation(line: 70, column: 38, scope: !7010)
!7019 = distinct !{!7019, !7011, !7020}
!7020 = !DILocation(line: 72, column: 2, scope: !7006)
!7021 = distinct !DISubprogram(name: "tc_aes128_set_decrypt_key", scope: !514, file: !514, line: 62, type: !7022, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !500, retainedNodes: !7024)
!7022 = !DISubroutineType(types: !7023)
!7023 = !{!125, !504, !503}
!7024 = !{!7025, !7026}
!7025 = !DILocalVariable(name: "s", arg: 1, scope: !7021, file: !514, line: 62, type: !504)
!7026 = !DILocalVariable(name: "k", arg: 2, scope: !7021, file: !514, line: 62, type: !503)
!7027 = !DILocation(line: 0, scope: !7021)
!7028 = !DILocation(line: 64, column: 9, scope: !7021)
!7029 = !DILocation(line: 64, column: 2, scope: !7021)
!7030 = distinct !DISubprogram(name: "tc_aes_decrypt", scope: !514, file: !514, line: 129, type: !7031, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !500, retainedNodes: !7034)
!7031 = !DISubroutineType(types: !7032)
!7032 = !{!125, !184, !503, !7033}
!7033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !504)
!7034 = !{!7035, !7036, !7037, !7038, !7039}
!7035 = !DILocalVariable(name: "out", arg: 1, scope: !7030, file: !514, line: 129, type: !184)
!7036 = !DILocalVariable(name: "in", arg: 2, scope: !7030, file: !514, line: 129, type: !503)
!7037 = !DILocalVariable(name: "s", arg: 3, scope: !7030, file: !514, line: 129, type: !7033)
!7038 = !DILocalVariable(name: "state", scope: !7030, file: !514, line: 131, type: !311)
!7039 = !DILocalVariable(name: "i", scope: !7030, file: !514, line: 132, type: !32)
!7040 = !DILocation(line: 0, scope: !7030)
!7041 = !DILocation(line: 131, column: 2, scope: !7030)
!7042 = !DILocation(line: 131, column: 10, scope: !7030)
!7043 = !DILocation(line: 134, column: 10, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7030, file: !514, line: 134, column: 6)
!7045 = !DILocation(line: 134, column: 6, scope: !7030)
!7046 = !DILocation(line: 142, column: 8, scope: !7030)
!7047 = !DILocation(line: 144, column: 32, scope: !7030)
!7048 = !DILocation(line: 144, column: 2, scope: !7030)
!7049 = !DILocation(line: 146, column: 2, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7030, file: !514, line: 146, column: 2)
!7051 = !DILocation(line: 147, column: 3, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7053, file: !514, line: 146, column: 31)
!7053 = distinct !DILexicalBlock(scope: !7050, file: !514, line: 146, column: 2)
!7054 = !DILocation(line: 148, column: 3, scope: !7052)
!7055 = !DILocation(line: 149, column: 37, scope: !7052)
!7056 = !DILocation(line: 149, column: 33, scope: !7052)
!7057 = !DILocation(line: 149, column: 3, scope: !7052)
!7058 = !DILocation(line: 150, column: 3, scope: !7052)
!7059 = !DILocation(line: 146, column: 26, scope: !7053)
!7060 = !DILocation(line: 146, column: 21, scope: !7053)
!7061 = distinct !{!7061, !7049, !7062}
!7062 = !DILocation(line: 151, column: 2, scope: !7050)
!7063 = !DILocation(line: 144, column: 23, scope: !7030)
!7064 = !DILocation(line: 153, column: 2, scope: !7030)
!7065 = !DILocation(line: 154, column: 2, scope: !7030)
!7066 = !DILocation(line: 155, column: 2, scope: !7030)
!7067 = !DILocation(line: 157, column: 8, scope: !7030)
!7068 = !DILocation(line: 160, column: 2, scope: !7030)
!7069 = !DILocation(line: 163, column: 2, scope: !7030)
!7070 = !DILocation(line: 164, column: 1, scope: !7030)
!7071 = distinct !DISubprogram(name: "add_round_key", scope: !514, file: !514, line: 92, type: !7072, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !500, retainedNodes: !7075)
!7072 = !DISubroutineType(types: !7073)
!7073 = !{null, !184, !7074}
!7074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5842, size: 32)
!7075 = !{!7076, !7077}
!7076 = !DILocalVariable(name: "s", arg: 1, scope: !7071, file: !514, line: 92, type: !184)
!7077 = !DILocalVariable(name: "k", arg: 2, scope: !7071, file: !514, line: 92, type: !7074)
!7078 = !DILocation(line: 0, scope: !7071)
!7079 = !DILocation(line: 94, column: 20, scope: !7071)
!7080 = !DILocation(line: 94, column: 25, scope: !7071)
!7081 = !DILocation(line: 94, column: 7, scope: !7071)
!7082 = !DILocation(line: 94, column: 51, scope: !7071)
!7083 = !DILocation(line: 94, column: 56, scope: !7071)
!7084 = !DILocation(line: 94, column: 33, scope: !7071)
!7085 = !DILocation(line: 94, column: 38, scope: !7071)
!7086 = !DILocation(line: 95, column: 20, scope: !7071)
!7087 = !DILocation(line: 95, column: 25, scope: !7071)
!7088 = !DILocation(line: 95, column: 2, scope: !7071)
!7089 = !DILocation(line: 95, column: 7, scope: !7071)
!7090 = !DILocation(line: 95, column: 50, scope: !7071)
!7091 = !DILocation(line: 95, column: 32, scope: !7071)
!7092 = !DILocation(line: 95, column: 37, scope: !7071)
!7093 = !DILocation(line: 96, column: 20, scope: !7071)
!7094 = !DILocation(line: 96, column: 25, scope: !7071)
!7095 = !DILocation(line: 96, column: 2, scope: !7071)
!7096 = !DILocation(line: 96, column: 7, scope: !7071)
!7097 = !DILocation(line: 96, column: 51, scope: !7071)
!7098 = !DILocation(line: 96, column: 56, scope: !7071)
!7099 = !DILocation(line: 96, column: 33, scope: !7071)
!7100 = !DILocation(line: 96, column: 38, scope: !7071)
!7101 = !DILocation(line: 97, column: 20, scope: !7071)
!7102 = !DILocation(line: 97, column: 25, scope: !7071)
!7103 = !DILocation(line: 97, column: 2, scope: !7071)
!7104 = !DILocation(line: 97, column: 7, scope: !7071)
!7105 = !DILocation(line: 97, column: 50, scope: !7071)
!7106 = !DILocation(line: 97, column: 32, scope: !7071)
!7107 = !DILocation(line: 97, column: 37, scope: !7071)
!7108 = !DILocation(line: 98, column: 20, scope: !7071)
!7109 = !DILocation(line: 98, column: 25, scope: !7071)
!7110 = !DILocation(line: 98, column: 2, scope: !7071)
!7111 = !DILocation(line: 98, column: 7, scope: !7071)
!7112 = !DILocation(line: 98, column: 51, scope: !7071)
!7113 = !DILocation(line: 98, column: 56, scope: !7071)
!7114 = !DILocation(line: 98, column: 33, scope: !7071)
!7115 = !DILocation(line: 98, column: 38, scope: !7071)
!7116 = !DILocation(line: 99, column: 21, scope: !7071)
!7117 = !DILocation(line: 99, column: 26, scope: !7071)
!7118 = !DILocation(line: 99, column: 2, scope: !7071)
!7119 = !DILocation(line: 99, column: 8, scope: !7071)
!7120 = !DILocation(line: 99, column: 52, scope: !7071)
!7121 = !DILocation(line: 99, column: 33, scope: !7071)
!7122 = !DILocation(line: 99, column: 39, scope: !7071)
!7123 = !DILocation(line: 100, column: 21, scope: !7071)
!7124 = !DILocation(line: 100, column: 26, scope: !7071)
!7125 = !DILocation(line: 100, column: 2, scope: !7071)
!7126 = !DILocation(line: 100, column: 8, scope: !7071)
!7127 = !DILocation(line: 100, column: 53, scope: !7071)
!7128 = !DILocation(line: 100, column: 58, scope: !7071)
!7129 = !DILocation(line: 100, column: 34, scope: !7071)
!7130 = !DILocation(line: 100, column: 40, scope: !7071)
!7131 = !DILocation(line: 101, column: 21, scope: !7071)
!7132 = !DILocation(line: 101, column: 26, scope: !7071)
!7133 = !DILocation(line: 101, column: 2, scope: !7071)
!7134 = !DILocation(line: 101, column: 8, scope: !7071)
!7135 = !DILocation(line: 101, column: 52, scope: !7071)
!7136 = !DILocation(line: 101, column: 33, scope: !7071)
!7137 = !DILocation(line: 101, column: 39, scope: !7071)
!7138 = !DILocation(line: 102, column: 1, scope: !7071)
!7139 = distinct !DISubprogram(name: "inv_shift_rows", scope: !514, file: !514, line: 118, type: !7140, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !500, retainedNodes: !7142)
!7140 = !DISubroutineType(types: !7141)
!7141 = !{null, !184}
!7142 = !{!7143, !7144}
!7143 = !DILocalVariable(name: "s", arg: 1, scope: !7139, file: !514, line: 118, type: !184)
!7144 = !DILocalVariable(name: "t", scope: !7139, file: !514, line: 120, type: !311)
!7145 = !DILocation(line: 0, scope: !7139)
!7146 = !DILocation(line: 120, column: 2, scope: !7139)
!7147 = !DILocation(line: 120, column: 10, scope: !7139)
!7148 = !DILocation(line: 122, column: 10, scope: !7139)
!7149 = !DILocation(line: 122, column: 8, scope: !7139)
!7150 = !DILocation(line: 122, column: 23, scope: !7139)
!7151 = !DILocation(line: 122, column: 16, scope: !7139)
!7152 = !DILocation(line: 122, column: 21, scope: !7139)
!7153 = !DILocation(line: 122, column: 37, scope: !7139)
!7154 = !DILocation(line: 122, column: 30, scope: !7139)
!7155 = !DILocation(line: 122, column: 35, scope: !7139)
!7156 = !DILocation(line: 122, column: 51, scope: !7139)
!7157 = !DILocation(line: 122, column: 44, scope: !7139)
!7158 = !DILocation(line: 122, column: 49, scope: !7139)
!7159 = !DILocation(line: 123, column: 10, scope: !7139)
!7160 = !DILocation(line: 123, column: 2, scope: !7139)
!7161 = !DILocation(line: 123, column: 8, scope: !7139)
!7162 = !DILocation(line: 123, column: 23, scope: !7139)
!7163 = !DILocation(line: 123, column: 16, scope: !7139)
!7164 = !DILocation(line: 123, column: 21, scope: !7139)
!7165 = !DILocation(line: 123, column: 36, scope: !7139)
!7166 = !DILocation(line: 123, column: 29, scope: !7139)
!7167 = !DILocation(line: 123, column: 34, scope: !7139)
!7168 = !DILocation(line: 123, column: 50, scope: !7139)
!7169 = !DILocation(line: 123, column: 43, scope: !7139)
!7170 = !DILocation(line: 123, column: 48, scope: !7139)
!7171 = !DILocation(line: 124, column: 10, scope: !7139)
!7172 = !DILocation(line: 124, column: 2, scope: !7139)
!7173 = !DILocation(line: 124, column: 8, scope: !7139)
!7174 = !DILocation(line: 124, column: 23, scope: !7139)
!7175 = !DILocation(line: 124, column: 16, scope: !7139)
!7176 = !DILocation(line: 124, column: 21, scope: !7139)
!7177 = !DILocation(line: 124, column: 37, scope: !7139)
!7178 = !DILocation(line: 124, column: 29, scope: !7139)
!7179 = !DILocation(line: 124, column: 35, scope: !7139)
!7180 = !DILocation(line: 124, column: 51, scope: !7139)
!7181 = !DILocation(line: 124, column: 43, scope: !7139)
!7182 = !DILocation(line: 124, column: 49, scope: !7139)
!7183 = !DILocation(line: 125, column: 10, scope: !7139)
!7184 = !DILocation(line: 125, column: 2, scope: !7139)
!7185 = !DILocation(line: 125, column: 8, scope: !7139)
!7186 = !DILocation(line: 125, column: 25, scope: !7139)
!7187 = !DILocation(line: 125, column: 17, scope: !7139)
!7188 = !DILocation(line: 125, column: 23, scope: !7139)
!7189 = !DILocation(line: 125, column: 39, scope: !7139)
!7190 = !DILocation(line: 125, column: 31, scope: !7139)
!7191 = !DILocation(line: 125, column: 37, scope: !7139)
!7192 = !DILocation(line: 125, column: 53, scope: !7139)
!7193 = !DILocation(line: 125, column: 45, scope: !7139)
!7194 = !DILocation(line: 125, column: 51, scope: !7139)
!7195 = !DILocation(line: 126, column: 8, scope: !7139)
!7196 = !DILocation(line: 127, column: 1, scope: !7139)
!7197 = distinct !DISubprogram(name: "inv_sub_bytes", scope: !514, file: !514, line: 104, type: !7140, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !500, retainedNodes: !7198)
!7198 = !{!7199, !7200}
!7199 = !DILocalVariable(name: "s", arg: 1, scope: !7197, file: !514, line: 104, type: !184)
!7200 = !DILocalVariable(name: "i", scope: !7197, file: !514, line: 106, type: !32)
!7201 = !DILocation(line: 0, scope: !7197)
!7202 = !DILocation(line: 108, column: 2, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7197, file: !514, line: 108, column: 2)
!7204 = !DILocation(line: 109, column: 19, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !514, line: 108, column: 32)
!7206 = distinct !DILexicalBlock(scope: !7203, file: !514, line: 108, column: 2)
!7207 = !DILocation(line: 109, column: 10, scope: !7205)
!7208 = !DILocation(line: 109, column: 8, scope: !7205)
!7209 = !DILocation(line: 108, column: 27, scope: !7206)
!7210 = !DILocation(line: 108, column: 16, scope: !7206)
!7211 = distinct !{!7211, !7202, !7212}
!7212 = !DILocation(line: 110, column: 2, scope: !7203)
!7213 = !DILocation(line: 111, column: 1, scope: !7197)
!7214 = distinct !DISubprogram(name: "inv_mix_columns", scope: !514, file: !514, line: 81, type: !7140, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !500, retainedNodes: !7215)
!7215 = !{!7216, !7217}
!7216 = !DILocalVariable(name: "s", arg: 1, scope: !7214, file: !514, line: 81, type: !184)
!7217 = !DILocalVariable(name: "t", scope: !7214, file: !514, line: 83, type: !311)
!7218 = !DILocation(line: 0, scope: !7214)
!7219 = !DILocation(line: 83, column: 2, scope: !7214)
!7220 = !DILocation(line: 83, column: 10, scope: !7214)
!7221 = !DILocation(line: 85, column: 2, scope: !7214)
!7222 = !DILocation(line: 86, column: 19, scope: !7214)
!7223 = !DILocation(line: 86, column: 27, scope: !7214)
!7224 = !DILocation(line: 86, column: 2, scope: !7214)
!7225 = !DILocation(line: 87, column: 19, scope: !7214)
!7226 = !DILocation(line: 87, column: 29, scope: !7214)
!7227 = !DILocation(line: 87, column: 2, scope: !7214)
!7228 = !DILocation(line: 88, column: 19, scope: !7214)
!7229 = !DILocation(line: 88, column: 29, scope: !7214)
!7230 = !DILocation(line: 88, column: 2, scope: !7214)
!7231 = !DILocation(line: 89, column: 8, scope: !7214)
!7232 = !DILocation(line: 90, column: 1, scope: !7214)
!7233 = distinct !DISubprogram(name: "mult_row_column", scope: !514, file: !514, line: 73, type: !7234, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !500, retainedNodes: !7236)
!7234 = !DISubroutineType(types: !7235)
!7235 = !{null, !184, !503}
!7236 = !{!7237, !7238}
!7237 = !DILocalVariable(name: "out", arg: 1, scope: !7233, file: !514, line: 73, type: !184)
!7238 = !DILocalVariable(name: "in", arg: 2, scope: !7233, file: !514, line: 73, type: !503)
!7239 = !DILocation(line: 0, scope: !7233)
!7240 = !DILocation(line: 75, column: 11, scope: !7233)
!7241 = !DILocation(line: 75, column: 26, scope: !7233)
!7242 = !DILocation(line: 75, column: 41, scope: !7233)
!7243 = !DILocation(line: 75, column: 56, scope: !7233)
!7244 = !DILocation(line: 75, column: 24, scope: !7233)
!7245 = !DILocation(line: 75, column: 39, scope: !7233)
!7246 = !DILocation(line: 75, column: 54, scope: !7233)
!7247 = !DILocation(line: 75, column: 9, scope: !7233)
!7248 = !DILocation(line: 76, column: 11, scope: !7233)
!7249 = !DILocation(line: 76, column: 26, scope: !7233)
!7250 = !DILocation(line: 76, column: 41, scope: !7233)
!7251 = !DILocation(line: 76, column: 56, scope: !7233)
!7252 = !DILocation(line: 76, column: 24, scope: !7233)
!7253 = !DILocation(line: 76, column: 39, scope: !7233)
!7254 = !DILocation(line: 76, column: 54, scope: !7233)
!7255 = !DILocation(line: 76, column: 2, scope: !7233)
!7256 = !DILocation(line: 76, column: 9, scope: !7233)
!7257 = !DILocation(line: 77, column: 11, scope: !7233)
!7258 = !DILocation(line: 77, column: 26, scope: !7233)
!7259 = !DILocation(line: 77, column: 41, scope: !7233)
!7260 = !DILocation(line: 77, column: 56, scope: !7233)
!7261 = !DILocation(line: 77, column: 24, scope: !7233)
!7262 = !DILocation(line: 77, column: 39, scope: !7233)
!7263 = !DILocation(line: 77, column: 54, scope: !7233)
!7264 = !DILocation(line: 77, column: 2, scope: !7233)
!7265 = !DILocation(line: 77, column: 9, scope: !7233)
!7266 = !DILocation(line: 78, column: 11, scope: !7233)
!7267 = !DILocation(line: 78, column: 26, scope: !7233)
!7268 = !DILocation(line: 78, column: 41, scope: !7233)
!7269 = !DILocation(line: 78, column: 56, scope: !7233)
!7270 = !DILocation(line: 78, column: 24, scope: !7233)
!7271 = !DILocation(line: 78, column: 39, scope: !7233)
!7272 = !DILocation(line: 78, column: 54, scope: !7233)
!7273 = !DILocation(line: 78, column: 2, scope: !7233)
!7274 = !DILocation(line: 78, column: 9, scope: !7233)
!7275 = !DILocation(line: 79, column: 1, scope: !7233)
!7276 = distinct !DISubprogram(name: "tc_aes128_set_encrypt_key", scope: !529, file: !529, line: 70, type: !7277, scopeLine: 71, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !520, retainedNodes: !7279)
!7277 = !DISubroutineType(types: !7278)
!7278 = !{!125, !523, !503}
!7279 = !{!7280, !7281, !7282, !7284, !7285}
!7280 = !DILocalVariable(name: "s", arg: 1, scope: !7276, file: !529, line: 70, type: !523)
!7281 = !DILocalVariable(name: "k", arg: 2, scope: !7276, file: !529, line: 70, type: !503)
!7282 = !DILocalVariable(name: "rconst", scope: !7276, file: !529, line: 72, type: !7283)
!7283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5842, size: 352, elements: !1025)
!7284 = !DILocalVariable(name: "i", scope: !7276, file: !529, line: 76, type: !32)
!7285 = !DILocalVariable(name: "t", scope: !7276, file: !529, line: 77, type: !32)
!7286 = !DILocation(line: 0, scope: !7276)
!7287 = !DILocation(line: 72, column: 21, scope: !7276)
!7288 = !DILocation(line: 79, column: 8, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7276, file: !529, line: 79, column: 6)
!7290 = !DILocation(line: 79, column: 6, scope: !7276)
!7291 = !DILocation(line: 91, column: 7, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !529, line: 90, column: 35)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !529, line: 90, column: 2)
!7294 = distinct !DILexicalBlock(scope: !7276, file: !529, line: 90, column: 2)
!7295 = !DILocation(line: 90, column: 2, scope: !7294)
!7296 = !DILocation(line: 86, column: 22, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7298, file: !529, line: 85, column: 27)
!7298 = distinct !DILexicalBlock(scope: !7299, file: !529, line: 85, column: 2)
!7299 = distinct !DILexicalBlock(scope: !7276, file: !529, line: 85, column: 2)
!7300 = !DILocation(line: 86, column: 18, scope: !7297)
!7301 = !DILocation(line: 86, column: 25, scope: !7297)
!7302 = !DILocation(line: 86, column: 40, scope: !7297)
!7303 = !DILocation(line: 86, column: 34, scope: !7297)
!7304 = !DILocation(line: 86, column: 43, scope: !7297)
!7305 = !DILocation(line: 86, column: 31, scope: !7297)
!7306 = !DILocation(line: 87, column: 17, scope: !7297)
!7307 = !DILocation(line: 87, column: 11, scope: !7297)
!7308 = !DILocation(line: 87, column: 20, scope: !7297)
!7309 = !DILocation(line: 86, column: 49, scope: !7297)
!7310 = !DILocation(line: 87, column: 34, scope: !7297)
!7311 = !DILocation(line: 87, column: 28, scope: !7297)
!7312 = !DILocation(line: 87, column: 27, scope: !7297)
!7313 = !DILocation(line: 87, column: 25, scope: !7297)
!7314 = !DILocation(line: 86, column: 3, scope: !7297)
!7315 = !DILocation(line: 86, column: 15, scope: !7297)
!7316 = !DILocation(line: 85, column: 22, scope: !7298)
!7317 = !DILocation(line: 85, column: 16, scope: !7298)
!7318 = !DILocation(line: 85, column: 2, scope: !7299)
!7319 = distinct !{!7319, !7318, !7320}
!7320 = !DILocation(line: 88, column: 2, scope: !7299)
!7321 = !DILocation(line: 92, column: 10, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7292, file: !529, line: 92, column: 7)
!7323 = !DILocation(line: 92, column: 16, scope: !7322)
!7324 = !DILocation(line: 92, column: 7, scope: !7292)
!7325 = !DILocation(line: 93, column: 8, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7322, file: !529, line: 92, column: 22)
!7327 = !DILocation(line: 93, column: 38, scope: !7326)
!7328 = !DILocation(line: 93, column: 30, scope: !7326)
!7329 = !DILocation(line: 93, column: 28, scope: !7326)
!7330 = !DILocation(line: 94, column: 3, scope: !7326)
!7331 = !DILocation(line: 0, scope: !7292)
!7332 = !DILocation(line: 95, column: 27, scope: !7292)
!7333 = !DILocation(line: 95, column: 17, scope: !7292)
!7334 = !DILocation(line: 95, column: 32, scope: !7292)
!7335 = !DILocation(line: 95, column: 3, scope: !7292)
!7336 = !DILocation(line: 95, column: 15, scope: !7292)
!7337 = !DILocation(line: 90, column: 30, scope: !7293)
!7338 = !DILocation(line: 90, column: 11, scope: !7293)
!7339 = distinct !{!7339, !7295, !7340}
!7340 = !DILocation(line: 96, column: 2, scope: !7294)
!7341 = !DILocation(line: 99, column: 1, scope: !7276)
!7342 = distinct !DISubprogram(name: "rotword", scope: !529, file: !529, line: 62, type: !7343, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !520, retainedNodes: !7345)
!7343 = !DISubroutineType(types: !7344)
!7344 = !{!32, !32}
!7345 = !{!7346}
!7346 = !DILocalVariable(name: "a", arg: 1, scope: !7342, file: !529, line: 62, type: !32)
!7347 = !DILocation(line: 0, scope: !7342)
!7348 = !DILocation(line: 64, column: 21, scope: !7342)
!7349 = !DILocation(line: 64, column: 2, scope: !7342)
!7350 = distinct !DISubprogram(name: "tc_aes_encrypt", scope: !529, file: !529, line: 158, type: !7351, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !520, retainedNodes: !7354)
!7351 = !DISubroutineType(types: !7352)
!7352 = !{!125, !184, !503, !7353}
!7353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !523)
!7354 = !{!7355, !7356, !7357, !7358, !7359}
!7355 = !DILocalVariable(name: "out", arg: 1, scope: !7350, file: !529, line: 158, type: !184)
!7356 = !DILocalVariable(name: "in", arg: 2, scope: !7350, file: !529, line: 158, type: !503)
!7357 = !DILocalVariable(name: "s", arg: 3, scope: !7350, file: !529, line: 158, type: !7353)
!7358 = !DILocalVariable(name: "state", scope: !7350, file: !529, line: 160, type: !311)
!7359 = !DILocalVariable(name: "i", scope: !7350, file: !529, line: 161, type: !32)
!7360 = !DILocation(line: 0, scope: !7350)
!7361 = !DILocation(line: 160, column: 2, scope: !7350)
!7362 = !DILocation(line: 160, column: 10, scope: !7350)
!7363 = !DILocation(line: 163, column: 10, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7350, file: !529, line: 163, column: 6)
!7365 = !DILocation(line: 163, column: 6, scope: !7350)
!7366 = !DILocation(line: 171, column: 8, scope: !7350)
!7367 = !DILocation(line: 172, column: 23, scope: !7350)
!7368 = !DILocation(line: 172, column: 2, scope: !7350)
!7369 = !DILocation(line: 174, column: 2, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7350, file: !529, line: 174, column: 2)
!7371 = !DILocation(line: 175, column: 3, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7373, file: !529, line: 174, column: 33)
!7373 = distinct !DILexicalBlock(scope: !7370, file: !529, line: 174, column: 2)
!7374 = !DILocation(line: 176, column: 3, scope: !7372)
!7375 = !DILocation(line: 177, column: 3, scope: !7372)
!7376 = !DILocation(line: 178, column: 40, scope: !7372)
!7377 = !DILocation(line: 178, column: 37, scope: !7372)
!7378 = !DILocation(line: 178, column: 33, scope: !7372)
!7379 = !DILocation(line: 178, column: 3, scope: !7372)
!7380 = !DILocation(line: 174, column: 16, scope: !7373)
!7381 = distinct !{!7381, !7369, !7382}
!7382 = !DILocation(line: 179, column: 2, scope: !7370)
!7383 = !DILocation(line: 181, column: 2, scope: !7350)
!7384 = !DILocation(line: 182, column: 2, scope: !7350)
!7385 = !DILocation(line: 183, column: 32, scope: !7350)
!7386 = !DILocation(line: 183, column: 2, scope: !7350)
!7387 = !DILocation(line: 185, column: 8, scope: !7350)
!7388 = !DILocation(line: 188, column: 2, scope: !7350)
!7389 = !DILocation(line: 190, column: 2, scope: !7350)
!7390 = !DILocation(line: 191, column: 1, scope: !7350)
!7391 = distinct !DISubprogram(name: "add_round_key", scope: !529, file: !529, line: 101, type: !7072, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !520, retainedNodes: !7392)
!7392 = !{!7393, !7394}
!7393 = !DILocalVariable(name: "s", arg: 1, scope: !7391, file: !529, line: 101, type: !184)
!7394 = !DILocalVariable(name: "k", arg: 2, scope: !7391, file: !529, line: 101, type: !7074)
!7395 = !DILocation(line: 0, scope: !7391)
!7396 = !DILocation(line: 103, column: 20, scope: !7391)
!7397 = !DILocation(line: 103, column: 25, scope: !7391)
!7398 = !DILocation(line: 103, column: 7, scope: !7391)
!7399 = !DILocation(line: 103, column: 51, scope: !7391)
!7400 = !DILocation(line: 103, column: 56, scope: !7391)
!7401 = !DILocation(line: 103, column: 33, scope: !7391)
!7402 = !DILocation(line: 103, column: 38, scope: !7391)
!7403 = !DILocation(line: 104, column: 20, scope: !7391)
!7404 = !DILocation(line: 104, column: 25, scope: !7391)
!7405 = !DILocation(line: 104, column: 2, scope: !7391)
!7406 = !DILocation(line: 104, column: 7, scope: !7391)
!7407 = !DILocation(line: 104, column: 50, scope: !7391)
!7408 = !DILocation(line: 104, column: 32, scope: !7391)
!7409 = !DILocation(line: 104, column: 37, scope: !7391)
!7410 = !DILocation(line: 105, column: 20, scope: !7391)
!7411 = !DILocation(line: 105, column: 25, scope: !7391)
!7412 = !DILocation(line: 105, column: 2, scope: !7391)
!7413 = !DILocation(line: 105, column: 7, scope: !7391)
!7414 = !DILocation(line: 105, column: 51, scope: !7391)
!7415 = !DILocation(line: 105, column: 56, scope: !7391)
!7416 = !DILocation(line: 105, column: 33, scope: !7391)
!7417 = !DILocation(line: 105, column: 38, scope: !7391)
!7418 = !DILocation(line: 106, column: 20, scope: !7391)
!7419 = !DILocation(line: 106, column: 25, scope: !7391)
!7420 = !DILocation(line: 106, column: 2, scope: !7391)
!7421 = !DILocation(line: 106, column: 7, scope: !7391)
!7422 = !DILocation(line: 106, column: 50, scope: !7391)
!7423 = !DILocation(line: 106, column: 32, scope: !7391)
!7424 = !DILocation(line: 106, column: 37, scope: !7391)
!7425 = !DILocation(line: 107, column: 20, scope: !7391)
!7426 = !DILocation(line: 107, column: 25, scope: !7391)
!7427 = !DILocation(line: 107, column: 2, scope: !7391)
!7428 = !DILocation(line: 107, column: 7, scope: !7391)
!7429 = !DILocation(line: 107, column: 51, scope: !7391)
!7430 = !DILocation(line: 107, column: 56, scope: !7391)
!7431 = !DILocation(line: 107, column: 33, scope: !7391)
!7432 = !DILocation(line: 107, column: 38, scope: !7391)
!7433 = !DILocation(line: 108, column: 21, scope: !7391)
!7434 = !DILocation(line: 108, column: 26, scope: !7391)
!7435 = !DILocation(line: 108, column: 2, scope: !7391)
!7436 = !DILocation(line: 108, column: 8, scope: !7391)
!7437 = !DILocation(line: 108, column: 52, scope: !7391)
!7438 = !DILocation(line: 108, column: 33, scope: !7391)
!7439 = !DILocation(line: 108, column: 39, scope: !7391)
!7440 = !DILocation(line: 109, column: 21, scope: !7391)
!7441 = !DILocation(line: 109, column: 26, scope: !7391)
!7442 = !DILocation(line: 109, column: 2, scope: !7391)
!7443 = !DILocation(line: 109, column: 8, scope: !7391)
!7444 = !DILocation(line: 109, column: 53, scope: !7391)
!7445 = !DILocation(line: 109, column: 58, scope: !7391)
!7446 = !DILocation(line: 109, column: 34, scope: !7391)
!7447 = !DILocation(line: 109, column: 40, scope: !7391)
!7448 = !DILocation(line: 110, column: 21, scope: !7391)
!7449 = !DILocation(line: 110, column: 26, scope: !7391)
!7450 = !DILocation(line: 110, column: 2, scope: !7391)
!7451 = !DILocation(line: 110, column: 8, scope: !7391)
!7452 = !DILocation(line: 110, column: 52, scope: !7391)
!7453 = !DILocation(line: 110, column: 33, scope: !7391)
!7454 = !DILocation(line: 110, column: 39, scope: !7391)
!7455 = !DILocation(line: 111, column: 1, scope: !7391)
!7456 = distinct !DISubprogram(name: "sub_bytes", scope: !529, file: !529, line: 113, type: !7140, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !520, retainedNodes: !7457)
!7457 = !{!7458, !7459}
!7458 = !DILocalVariable(name: "s", arg: 1, scope: !7456, file: !529, line: 113, type: !184)
!7459 = !DILocalVariable(name: "i", scope: !7456, file: !529, line: 115, type: !32)
!7460 = !DILocation(line: 0, scope: !7456)
!7461 = !DILocation(line: 117, column: 2, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7456, file: !529, line: 117, column: 2)
!7463 = !DILocation(line: 118, column: 15, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7465, file: !529, line: 117, column: 34)
!7465 = distinct !DILexicalBlock(scope: !7462, file: !529, line: 117, column: 2)
!7466 = !DILocation(line: 118, column: 10, scope: !7464)
!7467 = !DILocation(line: 118, column: 8, scope: !7464)
!7468 = !DILocation(line: 117, column: 29, scope: !7465)
!7469 = !DILocation(line: 117, column: 16, scope: !7465)
!7470 = distinct !{!7470, !7461, !7471}
!7471 = !DILocation(line: 119, column: 2, scope: !7462)
!7472 = !DILocation(line: 120, column: 1, scope: !7456)
!7473 = distinct !DISubprogram(name: "shift_rows", scope: !529, file: !529, line: 147, type: !7140, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !520, retainedNodes: !7474)
!7474 = !{!7475, !7476}
!7475 = !DILocalVariable(name: "s", arg: 1, scope: !7473, file: !529, line: 147, type: !184)
!7476 = !DILocalVariable(name: "t", scope: !7473, file: !529, line: 149, type: !311)
!7477 = !DILocation(line: 0, scope: !7473)
!7478 = !DILocation(line: 149, column: 2, scope: !7473)
!7479 = !DILocation(line: 149, column: 10, scope: !7473)
!7480 = !DILocation(line: 151, column: 10, scope: !7473)
!7481 = !DILocation(line: 151, column: 8, scope: !7473)
!7482 = !DILocation(line: 151, column: 23, scope: !7473)
!7483 = !DILocation(line: 151, column: 16, scope: !7473)
!7484 = !DILocation(line: 151, column: 21, scope: !7473)
!7485 = !DILocation(line: 151, column: 36, scope: !7473)
!7486 = !DILocation(line: 151, column: 29, scope: !7473)
!7487 = !DILocation(line: 151, column: 34, scope: !7473)
!7488 = !DILocation(line: 151, column: 50, scope: !7473)
!7489 = !DILocation(line: 151, column: 43, scope: !7473)
!7490 = !DILocation(line: 151, column: 48, scope: !7473)
!7491 = !DILocation(line: 152, column: 10, scope: !7473)
!7492 = !DILocation(line: 152, column: 2, scope: !7473)
!7493 = !DILocation(line: 152, column: 8, scope: !7473)
!7494 = !DILocation(line: 152, column: 23, scope: !7473)
!7495 = !DILocation(line: 152, column: 16, scope: !7473)
!7496 = !DILocation(line: 152, column: 21, scope: !7473)
!7497 = !DILocation(line: 152, column: 36, scope: !7473)
!7498 = !DILocation(line: 152, column: 29, scope: !7473)
!7499 = !DILocation(line: 152, column: 34, scope: !7473)
!7500 = !DILocation(line: 152, column: 50, scope: !7473)
!7501 = !DILocation(line: 152, column: 43, scope: !7473)
!7502 = !DILocation(line: 152, column: 48, scope: !7473)
!7503 = !DILocation(line: 153, column: 10, scope: !7473)
!7504 = !DILocation(line: 153, column: 2, scope: !7473)
!7505 = !DILocation(line: 153, column: 8, scope: !7473)
!7506 = !DILocation(line: 153, column: 23, scope: !7473)
!7507 = !DILocation(line: 153, column: 16, scope: !7473)
!7508 = !DILocation(line: 153, column: 21, scope: !7473)
!7509 = !DILocation(line: 153, column: 38, scope: !7473)
!7510 = !DILocation(line: 153, column: 30, scope: !7473)
!7511 = !DILocation(line: 153, column: 36, scope: !7473)
!7512 = !DILocation(line: 153, column: 52, scope: !7473)
!7513 = !DILocation(line: 153, column: 44, scope: !7473)
!7514 = !DILocation(line: 153, column: 50, scope: !7473)
!7515 = !DILocation(line: 154, column: 10, scope: !7473)
!7516 = !DILocation(line: 154, column: 2, scope: !7473)
!7517 = !DILocation(line: 154, column: 8, scope: !7473)
!7518 = !DILocation(line: 154, column: 25, scope: !7473)
!7519 = !DILocation(line: 154, column: 17, scope: !7473)
!7520 = !DILocation(line: 154, column: 23, scope: !7473)
!7521 = !DILocation(line: 154, column: 39, scope: !7473)
!7522 = !DILocation(line: 154, column: 31, scope: !7473)
!7523 = !DILocation(line: 154, column: 37, scope: !7473)
!7524 = !DILocation(line: 154, column: 53, scope: !7473)
!7525 = !DILocation(line: 154, column: 45, scope: !7473)
!7526 = !DILocation(line: 154, column: 51, scope: !7473)
!7527 = !DILocation(line: 155, column: 9, scope: !7473)
!7528 = !DILocation(line: 156, column: 1, scope: !7473)
!7529 = distinct !DISubprogram(name: "mix_columns", scope: !529, file: !529, line: 132, type: !7140, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !520, retainedNodes: !7530)
!7530 = !{!7531, !7532}
!7531 = !DILocalVariable(name: "s", arg: 1, scope: !7529, file: !529, line: 132, type: !184)
!7532 = !DILocalVariable(name: "t", scope: !7529, file: !529, line: 134, type: !311)
!7533 = !DILocation(line: 0, scope: !7529)
!7534 = !DILocation(line: 134, column: 2, scope: !7529)
!7535 = !DILocation(line: 134, column: 10, scope: !7529)
!7536 = !DILocation(line: 136, column: 2, scope: !7529)
!7537 = !DILocation(line: 137, column: 19, scope: !7529)
!7538 = !DILocation(line: 137, column: 27, scope: !7529)
!7539 = !DILocation(line: 137, column: 2, scope: !7529)
!7540 = !DILocation(line: 138, column: 19, scope: !7529)
!7541 = !DILocation(line: 138, column: 32, scope: !7529)
!7542 = !DILocation(line: 138, column: 2, scope: !7529)
!7543 = !DILocation(line: 139, column: 19, scope: !7529)
!7544 = !DILocation(line: 139, column: 32, scope: !7529)
!7545 = !DILocation(line: 139, column: 2, scope: !7529)
!7546 = !DILocation(line: 140, column: 9, scope: !7529)
!7547 = !DILocation(line: 141, column: 1, scope: !7529)
!7548 = distinct !DISubprogram(name: "mult_row_column", scope: !529, file: !529, line: 124, type: !7234, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !520, retainedNodes: !7549)
!7549 = !{!7550, !7551}
!7550 = !DILocalVariable(name: "out", arg: 1, scope: !7548, file: !529, line: 124, type: !184)
!7551 = !DILocalVariable(name: "in", arg: 2, scope: !7548, file: !529, line: 124, type: !503)
!7552 = !DILocation(line: 0, scope: !7548)
!7553 = !DILocation(line: 126, column: 24, scope: !7548)
!7554 = !DILocation(line: 126, column: 11, scope: !7548)
!7555 = !DILocation(line: 126, column: 33, scope: !7548)
!7556 = !DILocation(line: 126, column: 49, scope: !7548)
!7557 = !DILocation(line: 126, column: 57, scope: !7548)
!7558 = !DILocation(line: 126, column: 31, scope: !7548)
!7559 = !DILocation(line: 126, column: 47, scope: !7548)
!7560 = !DILocation(line: 126, column: 55, scope: !7548)
!7561 = !DILocation(line: 126, column: 9, scope: !7548)
!7562 = !DILocation(line: 127, column: 11, scope: !7548)
!7563 = !DILocation(line: 127, column: 32, scope: !7548)
!7564 = !DILocation(line: 127, column: 19, scope: !7548)
!7565 = !DILocation(line: 127, column: 41, scope: !7548)
!7566 = !DILocation(line: 127, column: 57, scope: !7548)
!7567 = !DILocation(line: 127, column: 17, scope: !7548)
!7568 = !DILocation(line: 127, column: 39, scope: !7548)
!7569 = !DILocation(line: 127, column: 55, scope: !7548)
!7570 = !DILocation(line: 127, column: 2, scope: !7548)
!7571 = !DILocation(line: 127, column: 9, scope: !7548)
!7572 = !DILocation(line: 128, column: 11, scope: !7548)
!7573 = !DILocation(line: 128, column: 19, scope: !7548)
!7574 = !DILocation(line: 128, column: 40, scope: !7548)
!7575 = !DILocation(line: 128, column: 27, scope: !7548)
!7576 = !DILocation(line: 128, column: 49, scope: !7548)
!7577 = !DILocation(line: 128, column: 17, scope: !7548)
!7578 = !DILocation(line: 128, column: 25, scope: !7548)
!7579 = !DILocation(line: 128, column: 47, scope: !7548)
!7580 = !DILocation(line: 128, column: 2, scope: !7548)
!7581 = !DILocation(line: 128, column: 9, scope: !7548)
!7582 = !DILocation(line: 129, column: 11, scope: !7548)
!7583 = !DILocation(line: 129, column: 27, scope: !7548)
!7584 = !DILocation(line: 129, column: 25, scope: !7548)
!7585 = !DILocation(line: 129, column: 35, scope: !7548)
!7586 = !DILocation(line: 129, column: 33, scope: !7548)
!7587 = !DILocation(line: 129, column: 56, scope: !7548)
!7588 = !DILocation(line: 129, column: 43, scope: !7548)
!7589 = !DILocation(line: 129, column: 41, scope: !7548)
!7590 = !DILocation(line: 129, column: 2, scope: !7548)
!7591 = !DILocation(line: 129, column: 9, scope: !7548)
!7592 = !DILocation(line: 130, column: 1, scope: !7548)
!7593 = distinct !DISubprogram(name: "tc_cbc_mode_encrypt", scope: !7594, file: !7594, line: 37, type: !7595, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !7598)
!7594 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7595 = !DISubroutineType(types: !7596)
!7596 = !{!125, !184, !32, !503, !32, !503, !7597}
!7597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2754)
!7598 = !{!7599, !7600, !7601, !7602, !7603, !7604, !7605, !7606, !7607}
!7599 = !DILocalVariable(name: "out", arg: 1, scope: !7593, file: !7594, line: 37, type: !184)
!7600 = !DILocalVariable(name: "outlen", arg: 2, scope: !7593, file: !7594, line: 37, type: !32)
!7601 = !DILocalVariable(name: "in", arg: 3, scope: !7593, file: !7594, line: 37, type: !503)
!7602 = !DILocalVariable(name: "inlen", arg: 4, scope: !7593, file: !7594, line: 38, type: !32)
!7603 = !DILocalVariable(name: "iv", arg: 5, scope: !7593, file: !7594, line: 38, type: !503)
!7604 = !DILocalVariable(name: "sched", arg: 6, scope: !7593, file: !7594, line: 39, type: !7597)
!7605 = !DILocalVariable(name: "buffer", scope: !7593, file: !7594, line: 42, type: !311)
!7606 = !DILocalVariable(name: "n", scope: !7593, file: !7594, line: 43, type: !32)
!7607 = !DILocalVariable(name: "m", scope: !7593, file: !7594, line: 43, type: !32)
!7608 = !DILocation(line: 0, scope: !7593)
!7609 = !DILocation(line: 42, column: 2, scope: !7593)
!7610 = !DILocation(line: 42, column: 10, scope: !7593)
!7611 = !DILocation(line: 46, column: 10, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7593, file: !7594, line: 46, column: 6)
!7613 = !DILocation(line: 46, column: 27, scope: !7612)
!7614 = !DILocation(line: 58, column: 8, scope: !7593)
!7615 = !DILocation(line: 60, column: 8, scope: !7593)
!7616 = !DILocation(line: 63, column: 2, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7593, file: !7594, line: 63, column: 2)
!7618 = !DILocation(line: 61, column: 6, scope: !7593)
!7619 = !DILocation(line: 64, column: 21, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7621, file: !7594, line: 63, column: 34)
!7621 = distinct !DILexicalBlock(scope: !7617, file: !7594, line: 63, column: 2)
!7622 = !DILocation(line: 64, column: 18, scope: !7620)
!7623 = !DILocation(line: 64, column: 11, scope: !7620)
!7624 = !DILocation(line: 64, column: 3, scope: !7620)
!7625 = !DILocation(line: 64, column: 15, scope: !7620)
!7626 = !DILocation(line: 65, column: 9, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7620, file: !7594, line: 65, column: 7)
!7628 = !DILocation(line: 65, column: 7, scope: !7620)
!7629 = !DILocation(line: 66, column: 10, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7627, file: !7594, line: 65, column: 31)
!7631 = !DILocation(line: 67, column: 10, scope: !7630)
!7632 = !DILocation(line: 69, column: 8, scope: !7630)
!7633 = !DILocation(line: 71, column: 3, scope: !7630)
!7634 = !DILocation(line: 0, scope: !7620)
!7635 = !DILocation(line: 63, column: 29, scope: !7621)
!7636 = !DILocation(line: 63, column: 20, scope: !7621)
!7637 = distinct !{!7637, !7616, !7638}
!7638 = !DILocation(line: 72, column: 2, scope: !7617)
!7639 = !DILocation(line: 75, column: 1, scope: !7593)
!7640 = distinct !DISubprogram(name: "tc_cbc_mode_decrypt", scope: !7594, file: !7594, line: 77, type: !7595, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !7641)
!7641 = !{!7642, !7643, !7644, !7645, !7646, !7647, !7648, !7649, !7650, !7651}
!7642 = !DILocalVariable(name: "out", arg: 1, scope: !7640, file: !7594, line: 77, type: !184)
!7643 = !DILocalVariable(name: "outlen", arg: 2, scope: !7640, file: !7594, line: 77, type: !32)
!7644 = !DILocalVariable(name: "in", arg: 3, scope: !7640, file: !7594, line: 77, type: !503)
!7645 = !DILocalVariable(name: "inlen", arg: 4, scope: !7640, file: !7594, line: 78, type: !32)
!7646 = !DILocalVariable(name: "iv", arg: 5, scope: !7640, file: !7594, line: 78, type: !503)
!7647 = !DILocalVariable(name: "sched", arg: 6, scope: !7640, file: !7594, line: 79, type: !7597)
!7648 = !DILocalVariable(name: "buffer", scope: !7640, file: !7594, line: 82, type: !311)
!7649 = !DILocalVariable(name: "p", scope: !7640, file: !7594, line: 83, type: !503)
!7650 = !DILocalVariable(name: "n", scope: !7640, file: !7594, line: 84, type: !32)
!7651 = !DILocalVariable(name: "m", scope: !7640, file: !7594, line: 84, type: !32)
!7652 = !DILocation(line: 0, scope: !7640)
!7653 = !DILocation(line: 82, column: 2, scope: !7640)
!7654 = !DILocation(line: 82, column: 10, scope: !7640)
!7655 = !DILocation(line: 87, column: 10, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7640, file: !7594, line: 87, column: 6)
!7657 = !DILocation(line: 87, column: 27, scope: !7656)
!7658 = !DILocation(line: 105, column: 10, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7660, file: !7594, line: 105, column: 7)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !7594, line: 104, column: 35)
!7661 = distinct !DILexicalBlock(scope: !7662, file: !7594, line: 104, column: 2)
!7662 = distinct !DILexicalBlock(scope: !7640, file: !7594, line: 104, column: 2)
!7663 = !DILocation(line: 105, column: 31, scope: !7659)
!7664 = !DILocation(line: 105, column: 7, scope: !7660)
!7665 = !DILocation(line: 106, column: 10, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7659, file: !7594, line: 105, column: 37)
!7667 = !DILocation(line: 107, column: 7, scope: !7666)
!7668 = !DILocation(line: 109, column: 3, scope: !7666)
!7669 = !DILocation(line: 0, scope: !7662)
!7670 = !DILocation(line: 110, column: 20, scope: !7660)
!7671 = !DILocation(line: 110, column: 12, scope: !7660)
!7672 = !DILocation(line: 110, column: 28, scope: !7660)
!7673 = !DILocation(line: 110, column: 26, scope: !7660)
!7674 = !DILocation(line: 110, column: 24, scope: !7660)
!7675 = !DILocation(line: 110, column: 7, scope: !7660)
!7676 = !DILocation(line: 110, column: 10, scope: !7660)
!7677 = !DILocation(line: 104, column: 30, scope: !7661)
!7678 = !DILocation(line: 104, column: 20, scope: !7661)
!7679 = !DILocation(line: 104, column: 2, scope: !7662)
!7680 = distinct !{!7680, !7679, !7681}
!7681 = !DILocation(line: 111, column: 2, scope: !7662)
!7682 = !DILocation(line: 114, column: 1, scope: !7640)
!7683 = distinct !DISubprogram(name: "tc_ctr_mode", scope: !7684, file: !7684, line: 37, type: !7685, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2759, retainedNodes: !7688)
!7684 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7685 = !DISubroutineType(types: !7686)
!7686 = !{!125, !184, !32, !503, !32, !184, !7687}
!7687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2762)
!7688 = !{!7689, !7690, !7691, !7692, !7693, !7694, !7695, !7696, !7697, !7698}
!7689 = !DILocalVariable(name: "out", arg: 1, scope: !7683, file: !7684, line: 37, type: !184)
!7690 = !DILocalVariable(name: "outlen", arg: 2, scope: !7683, file: !7684, line: 37, type: !32)
!7691 = !DILocalVariable(name: "in", arg: 3, scope: !7683, file: !7684, line: 37, type: !503)
!7692 = !DILocalVariable(name: "inlen", arg: 4, scope: !7683, file: !7684, line: 38, type: !32)
!7693 = !DILocalVariable(name: "ctr", arg: 5, scope: !7683, file: !7684, line: 38, type: !184)
!7694 = !DILocalVariable(name: "sched", arg: 6, scope: !7683, file: !7684, line: 38, type: !7687)
!7695 = !DILocalVariable(name: "buffer", scope: !7683, file: !7684, line: 41, type: !311)
!7696 = !DILocalVariable(name: "nonce", scope: !7683, file: !7684, line: 42, type: !311)
!7697 = !DILocalVariable(name: "block_num", scope: !7683, file: !7684, line: 43, type: !32)
!7698 = !DILocalVariable(name: "i", scope: !7683, file: !7684, line: 44, type: !32)
!7699 = !DILocation(line: 0, scope: !7683)
!7700 = !DILocation(line: 41, column: 2, scope: !7683)
!7701 = !DILocation(line: 41, column: 10, scope: !7683)
!7702 = !DILocation(line: 42, column: 2, scope: !7683)
!7703 = !DILocation(line: 42, column: 10, scope: !7683)
!7704 = !DILocation(line: 47, column: 10, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7683, file: !7684, line: 47, column: 6)
!7706 = !DILocation(line: 47, column: 27, scope: !7705)
!7707 = !DILocation(line: 58, column: 8, scope: !7683)
!7708 = !DILocation(line: 61, column: 15, scope: !7683)
!7709 = !DILocation(line: 61, column: 35, scope: !7683)
!7710 = !DILocation(line: 62, column: 8, scope: !7683)
!7711 = !DILocation(line: 62, column: 27, scope: !7683)
!7712 = !DILocation(line: 61, column: 45, scope: !7683)
!7713 = !DILocation(line: 61, column: 25, scope: !7683)
!7714 = !DILocation(line: 61, column: 32, scope: !7683)
!7715 = !DILocation(line: 62, column: 18, scope: !7683)
!7716 = !DILocation(line: 61, column: 52, scope: !7683)
!7717 = !DILocation(line: 62, column: 26, scope: !7683)
!7718 = !DILocation(line: 62, column: 24, scope: !7683)
!7719 = !DILocation(line: 63, column: 2, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7683, file: !7684, line: 63, column: 2)
!7721 = !DILocation(line: 64, column: 10, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7723, file: !7684, line: 64, column: 7)
!7723 = distinct !DILexicalBlock(scope: !7724, file: !7684, line: 63, column: 30)
!7724 = distinct !DILexicalBlock(scope: !7720, file: !7684, line: 63, column: 2)
!7725 = !DILocation(line: 64, column: 33, scope: !7722)
!7726 = !DILocation(line: 64, column: 7, scope: !7723)
!7727 = !DILocation(line: 66, column: 8, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7729, file: !7684, line: 66, column: 8)
!7729 = distinct !DILexicalBlock(scope: !7722, file: !7684, line: 64, column: 39)
!7730 = !DILocation(line: 66, column: 8, scope: !7729)
!7731 = !DILocation(line: 67, column: 14, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7728, file: !7684, line: 66, column: 46)
!7733 = !DILocation(line: 68, column: 37, scope: !7732)
!7734 = !DILocation(line: 68, column: 17, scope: !7732)
!7735 = !DILocation(line: 68, column: 15, scope: !7732)
!7736 = !DILocation(line: 69, column: 37, scope: !7732)
!7737 = !DILocation(line: 69, column: 17, scope: !7732)
!7738 = !DILocation(line: 69, column: 15, scope: !7732)
!7739 = !DILocation(line: 70, column: 37, scope: !7732)
!7740 = !DILocation(line: 70, column: 17, scope: !7732)
!7741 = !DILocation(line: 70, column: 15, scope: !7732)
!7742 = !DILocation(line: 71, column: 17, scope: !7732)
!7743 = !DILocation(line: 71, column: 15, scope: !7732)
!7744 = !DILocation(line: 75, column: 3, scope: !7729)
!7745 = !DILocation(line: 77, column: 12, scope: !7723)
!7746 = !DILocation(line: 77, column: 47, scope: !7723)
!7747 = !DILocation(line: 77, column: 44, scope: !7723)
!7748 = !DILocation(line: 77, column: 42, scope: !7723)
!7749 = !DILocation(line: 77, column: 7, scope: !7723)
!7750 = !DILocation(line: 77, column: 10, scope: !7723)
!7751 = !DILocation(line: 63, column: 25, scope: !7724)
!7752 = !DILocation(line: 63, column: 16, scope: !7724)
!7753 = distinct !{!7753, !7719, !7754}
!7754 = !DILocation(line: 78, column: 2, scope: !7720)
!7755 = !DILocation(line: 81, column: 2, scope: !7683)
!7756 = !DILocation(line: 81, column: 10, scope: !7683)
!7757 = !DILocation(line: 81, column: 23, scope: !7683)
!7758 = !DILocation(line: 81, column: 31, scope: !7683)
!7759 = !DILocation(line: 82, column: 2, scope: !7683)
!7760 = !DILocation(line: 82, column: 10, scope: !7683)
!7761 = !DILocation(line: 82, column: 23, scope: !7683)
!7762 = !DILocation(line: 82, column: 31, scope: !7683)
!7763 = !DILocation(line: 84, column: 2, scope: !7683)
!7764 = !DILocation(line: 85, column: 1, scope: !7683)
!7765 = distinct !DISubprogram(name: "tc_ccm_config", scope: !7766, file: !7766, line: 39, type: !7767, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !7769)
!7766 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7767 = !DISubroutineType(types: !7768)
!7768 = !{!125, !2770, !2776, !184, !32, !32}
!7769 = !{!7770, !7771, !7772, !7773, !7774}
!7770 = !DILocalVariable(name: "c", arg: 1, scope: !7765, file: !7766, line: 39, type: !2770)
!7771 = !DILocalVariable(name: "sched", arg: 2, scope: !7765, file: !7766, line: 39, type: !2776)
!7772 = !DILocalVariable(name: "nonce", arg: 3, scope: !7765, file: !7766, line: 39, type: !184)
!7773 = !DILocalVariable(name: "nlen", arg: 4, scope: !7765, file: !7766, line: 40, type: !32)
!7774 = !DILocalVariable(name: "mlen", arg: 5, scope: !7765, file: !7766, line: 40, type: !32)
!7775 = !DILocation(line: 0, scope: !7765)
!7776 = !DILocation(line: 44, column: 8, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7765, file: !7766, line: 44, column: 6)
!7778 = !DILocation(line: 44, column: 27, scope: !7777)
!7779 = !DILocation(line: 50, column: 24, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !7766, line: 50, column: 13)
!7781 = distinct !DILexicalBlock(scope: !7777, file: !7766, line: 48, column: 13)
!7782 = !DILocation(line: 54, column: 5, scope: !7765)
!7783 = !DILocation(line: 54, column: 10, scope: !7765)
!7784 = !DILocation(line: 55, column: 5, scope: !7765)
!7785 = !DILocation(line: 55, column: 11, scope: !7765)
!7786 = !DILocation(line: 56, column: 5, scope: !7765)
!7787 = !DILocation(line: 56, column: 11, scope: !7765)
!7788 = !DILocation(line: 58, column: 2, scope: !7765)
!7789 = !DILocation(line: 59, column: 1, scope: !7765)
!7790 = distinct !DISubprogram(name: "tc_ccm_generation_encryption", scope: !7766, file: !7766, line: 137, type: !7791, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !7793)
!7791 = !DISubroutineType(types: !7792)
!7792 = !{!125, !184, !32, !503, !32, !503, !32, !2770}
!7793 = !{!7794, !7795, !7796, !7797, !7798, !7799, !7800, !7801, !7802, !7803}
!7794 = !DILocalVariable(name: "out", arg: 1, scope: !7790, file: !7766, line: 137, type: !184)
!7795 = !DILocalVariable(name: "olen", arg: 2, scope: !7790, file: !7766, line: 137, type: !32)
!7796 = !DILocalVariable(name: "associated_data", arg: 3, scope: !7790, file: !7766, line: 138, type: !503)
!7797 = !DILocalVariable(name: "alen", arg: 4, scope: !7790, file: !7766, line: 139, type: !32)
!7798 = !DILocalVariable(name: "payload", arg: 5, scope: !7790, file: !7766, line: 139, type: !503)
!7799 = !DILocalVariable(name: "plen", arg: 6, scope: !7790, file: !7766, line: 140, type: !32)
!7800 = !DILocalVariable(name: "c", arg: 7, scope: !7790, file: !7766, line: 140, type: !2770)
!7801 = !DILocalVariable(name: "b", scope: !7790, file: !7766, line: 154, type: !311)
!7802 = !DILocalVariable(name: "tag", scope: !7790, file: !7766, line: 155, type: !311)
!7803 = !DILocalVariable(name: "i", scope: !7790, file: !7766, line: 156, type: !32)
!7804 = !DILocation(line: 0, scope: !7790)
!7805 = !DILocation(line: 144, column: 11, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7790, file: !7766, line: 144, column: 6)
!7807 = !DILocation(line: 144, column: 29, scope: !7806)
!7808 = !DILocation(line: 146, column: 10, scope: !7806)
!7809 = !DILocation(line: 146, column: 15, scope: !7806)
!7810 = !DILocation(line: 147, column: 10, scope: !7806)
!7811 = !DILocation(line: 147, column: 15, scope: !7806)
!7812 = !DILocation(line: 150, column: 22, scope: !7806)
!7813 = !DILocation(line: 150, column: 17, scope: !7806)
!7814 = !DILocation(line: 150, column: 9, scope: !7806)
!7815 = !DILocation(line: 144, column: 6, scope: !7790)
!7816 = !DILocation(line: 154, column: 2, scope: !7790)
!7817 = !DILocation(line: 154, column: 10, scope: !7790)
!7818 = !DILocation(line: 155, column: 2, scope: !7790)
!7819 = !DILocation(line: 155, column: 10, scope: !7790)
!7820 = !DILocation(line: 161, column: 10, scope: !7790)
!7821 = !DILocation(line: 161, column: 53, scope: !7790)
!7822 = !DILocation(line: 161, column: 31, scope: !7790)
!7823 = !DILocation(line: 161, column: 9, scope: !7790)
!7824 = !DILocation(line: 161, column: 7, scope: !7790)
!7825 = !DILocation(line: 162, column: 2, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7790, file: !7766, line: 162, column: 2)
!7827 = !DILocation(line: 163, column: 21, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !7766, line: 162, column: 28)
!7829 = distinct !DILexicalBlock(scope: !7826, file: !7766, line: 162, column: 2)
!7830 = !DILocation(line: 163, column: 10, scope: !7828)
!7831 = !DILocation(line: 163, column: 3, scope: !7828)
!7832 = !DILocation(line: 163, column: 8, scope: !7828)
!7833 = !DILocation(line: 162, column: 23, scope: !7829)
!7834 = !DILocation(line: 162, column: 16, scope: !7829)
!7835 = distinct !{!7835, !7825, !7836}
!7836 = !DILocation(line: 164, column: 2, scope: !7826)
!7837 = !DILocation(line: 165, column: 25, scope: !7790)
!7838 = !DILocation(line: 165, column: 10, scope: !7790)
!7839 = !DILocation(line: 165, column: 2, scope: !7790)
!7840 = !DILocation(line: 165, column: 8, scope: !7790)
!7841 = !DILocation(line: 166, column: 10, scope: !7790)
!7842 = !DILocation(line: 166, column: 2, scope: !7790)
!7843 = !DILocation(line: 166, column: 8, scope: !7790)
!7844 = !DILocation(line: 169, column: 35, scope: !7790)
!7845 = !DILocation(line: 169, column: 9, scope: !7790)
!7846 = !DILocation(line: 170, column: 6, scope: !7790)
!7847 = !DILocation(line: 171, column: 49, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7849, file: !7766, line: 170, column: 16)
!7849 = distinct !DILexicalBlock(scope: !7790, file: !7766, line: 170, column: 6)
!7850 = !DILocation(line: 171, column: 3, scope: !7848)
!7851 = !DILocation(line: 172, column: 2, scope: !7848)
!7852 = !DILocation(line: 173, column: 6, scope: !7790)
!7853 = !DILocation(line: 174, column: 41, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7855, file: !7766, line: 173, column: 16)
!7855 = distinct !DILexicalBlock(scope: !7790, file: !7766, line: 173, column: 6)
!7856 = !DILocation(line: 174, column: 3, scope: !7854)
!7857 = !DILocation(line: 175, column: 2, scope: !7854)
!7858 = !DILocation(line: 180, column: 7, scope: !7790)
!7859 = !DILocation(line: 181, column: 16, scope: !7790)
!7860 = !DILocation(line: 181, column: 8, scope: !7790)
!7861 = !DILocation(line: 184, column: 47, scope: !7790)
!7862 = !DILocation(line: 184, column: 2, scope: !7790)
!7863 = !DILocation(line: 186, column: 16, scope: !7790)
!7864 = !DILocation(line: 186, column: 8, scope: !7790)
!7865 = !DILocation(line: 189, column: 33, scope: !7790)
!7866 = !DILocation(line: 189, column: 9, scope: !7790)
!7867 = !DILocation(line: 191, column: 21, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7869, file: !7766, line: 191, column: 2)
!7869 = distinct !DILexicalBlock(scope: !7790, file: !7766, line: 191, column: 2)
!7870 = !DILocation(line: 191, column: 16, scope: !7868)
!7871 = !DILocation(line: 191, column: 2, scope: !7869)
!7872 = !DILocation(line: 190, column: 6, scope: !7790)
!7873 = !DILocation(line: 192, column: 12, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7868, file: !7766, line: 191, column: 32)
!7875 = !DILocation(line: 192, column: 21, scope: !7874)
!7876 = !DILocation(line: 192, column: 19, scope: !7874)
!7877 = !DILocation(line: 192, column: 7, scope: !7874)
!7878 = !DILocation(line: 192, column: 10, scope: !7874)
!7879 = !DILocation(line: 191, column: 27, scope: !7868)
!7880 = distinct !{!7880, !7871, !7881}
!7881 = !DILocation(line: 193, column: 2, scope: !7869)
!7882 = !DILocation(line: 196, column: 1, scope: !7790)
!7883 = distinct !DISubprogram(name: "ccm_cbc_mac", scope: !7766, file: !7766, line: 64, type: !7884, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !7886)
!7884 = !DISubroutineType(types: !7885)
!7885 = !{null, !184, !503, !32, !32, !2776}
!7886 = !{!7887, !7888, !7889, !7890, !7891, !7892}
!7887 = !DILocalVariable(name: "T", arg: 1, scope: !7883, file: !7766, line: 64, type: !184)
!7888 = !DILocalVariable(name: "data", arg: 2, scope: !7883, file: !7766, line: 64, type: !503)
!7889 = !DILocalVariable(name: "dlen", arg: 3, scope: !7883, file: !7766, line: 64, type: !32)
!7890 = !DILocalVariable(name: "flag", arg: 4, scope: !7883, file: !7766, line: 65, type: !32)
!7891 = !DILocalVariable(name: "sched", arg: 5, scope: !7883, file: !7766, line: 65, type: !2776)
!7892 = !DILocalVariable(name: "i", scope: !7883, file: !7766, line: 68, type: !32)
!7893 = !DILocation(line: 0, scope: !7883)
!7894 = !DILocation(line: 70, column: 11, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7883, file: !7766, line: 70, column: 6)
!7896 = !DILocation(line: 70, column: 6, scope: !7883)
!7897 = !DILocation(line: 71, column: 26, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7895, file: !7766, line: 70, column: 16)
!7899 = !DILocation(line: 71, column: 8, scope: !7898)
!7900 = !DILocation(line: 72, column: 3, scope: !7898)
!7901 = !DILocation(line: 72, column: 8, scope: !7898)
!7902 = !DILocation(line: 73, column: 8, scope: !7898)
!7903 = !DILocation(line: 74, column: 2, scope: !7898)
!7904 = !DILocation(line: 0, scope: !7895)
!7905 = !DILocation(line: 78, column: 11, scope: !7883)
!7906 = !DILocation(line: 78, column: 2, scope: !7883)
!7907 = !DILocation(line: 79, column: 30, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7883, file: !7766, line: 78, column: 19)
!7909 = !DILocation(line: 79, column: 25, scope: !7908)
!7910 = !DILocation(line: 79, column: 6, scope: !7908)
!7911 = !DILocation(line: 79, column: 9, scope: !7908)
!7912 = !DILocation(line: 79, column: 3, scope: !7908)
!7913 = !DILocation(line: 79, column: 22, scope: !7908)
!7914 = !DILocation(line: 80, column: 11, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7908, file: !7766, line: 80, column: 7)
!7916 = !DILocation(line: 80, column: 24, scope: !7915)
!7917 = !DILocation(line: 80, column: 30, scope: !7915)
!7918 = !DILocation(line: 81, column: 11, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7915, file: !7766, line: 80, column: 44)
!7920 = !DILocation(line: 82, column: 3, scope: !7919)
!7921 = distinct !{!7921, !7906, !7922}
!7922 = !DILocation(line: 83, column: 2, scope: !7883)
!7923 = !DILocation(line: 84, column: 1, scope: !7883)
!7924 = distinct !DISubprogram(name: "ccm_ctr_mode", scope: !7766, file: !7766, line: 93, type: !7925, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !7928)
!7925 = !DISubroutineType(types: !7926)
!7926 = !{!125, !184, !32, !503, !32, !184, !7927}
!7927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2776)
!7928 = !{!7929, !7930, !7931, !7932, !7933, !7934, !7935, !7936, !7937, !7938}
!7929 = !DILocalVariable(name: "out", arg: 1, scope: !7924, file: !7766, line: 93, type: !184)
!7930 = !DILocalVariable(name: "outlen", arg: 2, scope: !7924, file: !7766, line: 93, type: !32)
!7931 = !DILocalVariable(name: "in", arg: 3, scope: !7924, file: !7766, line: 93, type: !503)
!7932 = !DILocalVariable(name: "inlen", arg: 4, scope: !7924, file: !7766, line: 94, type: !32)
!7933 = !DILocalVariable(name: "ctr", arg: 5, scope: !7924, file: !7766, line: 94, type: !184)
!7934 = !DILocalVariable(name: "sched", arg: 6, scope: !7924, file: !7766, line: 94, type: !7927)
!7935 = !DILocalVariable(name: "buffer", scope: !7924, file: !7766, line: 97, type: !311)
!7936 = !DILocalVariable(name: "nonce", scope: !7924, file: !7766, line: 98, type: !311)
!7937 = !DILocalVariable(name: "block_num", scope: !7924, file: !7766, line: 99, type: !227)
!7938 = !DILocalVariable(name: "i", scope: !7924, file: !7766, line: 100, type: !32)
!7939 = !DILocation(line: 0, scope: !7924)
!7940 = !DILocation(line: 97, column: 2, scope: !7924)
!7941 = !DILocation(line: 97, column: 10, scope: !7924)
!7942 = !DILocation(line: 98, column: 2, scope: !7924)
!7943 = !DILocation(line: 98, column: 10, scope: !7924)
!7944 = !DILocation(line: 103, column: 10, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7924, file: !7766, line: 103, column: 6)
!7946 = !DILocation(line: 103, column: 27, scope: !7945)
!7947 = !DILocation(line: 114, column: 9, scope: !7924)
!7948 = !DILocation(line: 117, column: 27, scope: !7924)
!7949 = !DILocation(line: 117, column: 44, scope: !7924)
!7950 = !DILocation(line: 117, column: 37, scope: !7924)
!7951 = !DILocation(line: 117, column: 43, scope: !7924)
!7952 = !DILocation(line: 117, column: 42, scope: !7924)
!7953 = !DILocation(line: 118, column: 2, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7924, file: !7766, line: 118, column: 2)
!7955 = !DILocation(line: 119, column: 10, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7957, file: !7766, line: 119, column: 7)
!7957 = distinct !DILexicalBlock(scope: !7958, file: !7766, line: 118, column: 30)
!7958 = distinct !DILexicalBlock(scope: !7954, file: !7766, line: 118, column: 2)
!7959 = !DILocation(line: 119, column: 33, scope: !7956)
!7960 = !DILocation(line: 119, column: 7, scope: !7957)
!7961 = !DILocation(line: 120, column: 13, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7956, file: !7766, line: 119, column: 39)
!7963 = !DILocation(line: 121, column: 36, scope: !7962)
!7964 = !DILocation(line: 121, column: 16, scope: !7962)
!7965 = !DILocation(line: 121, column: 14, scope: !7962)
!7966 = !DILocation(line: 122, column: 16, scope: !7962)
!7967 = !DILocation(line: 122, column: 14, scope: !7962)
!7968 = !DILocation(line: 123, column: 9, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7962, file: !7766, line: 123, column: 8)
!7970 = !DILocation(line: 123, column: 8, scope: !7962)
!7971 = !DILocation(line: 128, column: 12, scope: !7957)
!7972 = !DILocation(line: 128, column: 49, scope: !7957)
!7973 = !DILocation(line: 128, column: 46, scope: !7957)
!7974 = !DILocation(line: 128, column: 44, scope: !7957)
!7975 = !DILocation(line: 128, column: 7, scope: !7957)
!7976 = !DILocation(line: 128, column: 10, scope: !7957)
!7977 = !DILocation(line: 118, column: 25, scope: !7958)
!7978 = !DILocation(line: 118, column: 16, scope: !7958)
!7979 = distinct !{!7979, !7953, !7980}
!7980 = !DILocation(line: 129, column: 2, scope: !7954)
!7981 = !DILocation(line: 132, column: 12, scope: !7924)
!7982 = !DILocation(line: 132, column: 33, scope: !7924)
!7983 = !DILocation(line: 132, column: 2, scope: !7924)
!7984 = !DILocation(line: 132, column: 10, scope: !7924)
!7985 = !DILocation(line: 132, column: 23, scope: !7924)
!7986 = !DILocation(line: 132, column: 31, scope: !7924)
!7987 = !DILocation(line: 134, column: 2, scope: !7924)
!7988 = !DILocation(line: 135, column: 1, scope: !7924)
!7989 = distinct !DISubprogram(name: "tc_ccm_decryption_verification", scope: !7766, file: !7766, line: 198, type: !7791, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2767, retainedNodes: !7990)
!7990 = !{!7991, !7992, !7993, !7994, !7995, !7996, !7997, !7998, !7999, !8000}
!7991 = !DILocalVariable(name: "out", arg: 1, scope: !7989, file: !7766, line: 198, type: !184)
!7992 = !DILocalVariable(name: "olen", arg: 2, scope: !7989, file: !7766, line: 198, type: !32)
!7993 = !DILocalVariable(name: "associated_data", arg: 3, scope: !7989, file: !7766, line: 199, type: !503)
!7994 = !DILocalVariable(name: "alen", arg: 4, scope: !7989, file: !7766, line: 200, type: !32)
!7995 = !DILocalVariable(name: "payload", arg: 5, scope: !7989, file: !7766, line: 200, type: !503)
!7996 = !DILocalVariable(name: "plen", arg: 6, scope: !7989, file: !7766, line: 201, type: !32)
!7997 = !DILocalVariable(name: "c", arg: 7, scope: !7989, file: !7766, line: 201, type: !2770)
!7998 = !DILocalVariable(name: "b", scope: !7989, file: !7766, line: 215, type: !311)
!7999 = !DILocalVariable(name: "tag", scope: !7989, file: !7766, line: 216, type: !311)
!8000 = !DILocalVariable(name: "i", scope: !7989, file: !7766, line: 217, type: !32)
!8001 = !DILocation(line: 0, scope: !7989)
!8002 = !DILocation(line: 205, column: 11, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7989, file: !7766, line: 205, column: 6)
!8004 = !DILocation(line: 205, column: 29, scope: !8003)
!8005 = !DILocation(line: 207, column: 13, scope: !8003)
!8006 = !DILocation(line: 207, column: 18, scope: !8003)
!8007 = !DILocation(line: 208, column: 13, scope: !8003)
!8008 = !DILocation(line: 208, column: 18, scope: !8003)
!8009 = !DILocation(line: 211, column: 24, scope: !8003)
!8010 = !DILocation(line: 211, column: 19, scope: !8003)
!8011 = !DILocation(line: 211, column: 12, scope: !8003)
!8012 = !DILocation(line: 205, column: 6, scope: !7989)
!8013 = !DILocation(line: 215, column: 2, scope: !7989)
!8014 = !DILocation(line: 215, column: 10, scope: !7989)
!8015 = !DILocation(line: 216, column: 2, scope: !7989)
!8016 = !DILocation(line: 216, column: 10, scope: !7989)
!8017 = !DILocation(line: 222, column: 7, scope: !7989)
!8018 = !DILocation(line: 223, column: 2, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !7989, file: !7766, line: 223, column: 2)
!8020 = !DILocation(line: 224, column: 21, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8022, file: !7766, line: 223, column: 27)
!8022 = distinct !DILexicalBlock(scope: !8019, file: !7766, line: 223, column: 2)
!8023 = !DILocation(line: 224, column: 10, scope: !8021)
!8024 = !DILocation(line: 224, column: 3, scope: !8021)
!8025 = !DILocation(line: 224, column: 8, scope: !8021)
!8026 = !DILocation(line: 223, column: 22, scope: !8022)
!8027 = !DILocation(line: 223, column: 16, scope: !8022)
!8028 = distinct !{!8028, !8018, !8029}
!8029 = !DILocation(line: 225, column: 2, scope: !8019)
!8030 = !DILocation(line: 226, column: 10, scope: !7989)
!8031 = !DILocation(line: 226, column: 16, scope: !7989)
!8032 = !DILocation(line: 226, column: 2, scope: !7989)
!8033 = !DILocation(line: 226, column: 8, scope: !7989)
!8034 = !DILocation(line: 229, column: 67, scope: !7989)
!8035 = !DILocation(line: 229, column: 2, scope: !7989)
!8036 = !DILocation(line: 231, column: 16, scope: !7989)
!8037 = !DILocation(line: 231, column: 8, scope: !7989)
!8038 = !DILocation(line: 234, column: 33, scope: !7989)
!8039 = !DILocation(line: 234, column: 9, scope: !7989)
!8040 = !DILocation(line: 235, column: 16, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !7766, line: 235, column: 2)
!8042 = distinct !DILexicalBlock(scope: !7989, file: !7766, line: 235, column: 2)
!8043 = !DILocation(line: 235, column: 2, scope: !8042)
!8044 = !DILocation(line: 236, column: 39, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8041, file: !7766, line: 235, column: 32)
!8046 = !DILocation(line: 236, column: 12, scope: !8045)
!8047 = !DILocation(line: 236, column: 46, scope: !8045)
!8048 = !DILocation(line: 236, column: 44, scope: !8045)
!8049 = !DILocation(line: 236, column: 3, scope: !8045)
!8050 = !DILocation(line: 236, column: 10, scope: !8045)
!8051 = !DILocation(line: 235, column: 27, scope: !8041)
!8052 = distinct !{!8052, !8043, !8053}
!8053 = !DILocation(line: 237, column: 2, scope: !8042)
!8054 = !DILocation(line: 242, column: 10, scope: !7989)
!8055 = !DILocation(line: 242, column: 51, scope: !7989)
!8056 = !DILocation(line: 242, column: 30, scope: !7989)
!8057 = !DILocation(line: 242, column: 9, scope: !7989)
!8058 = !DILocation(line: 242, column: 7, scope: !7989)
!8059 = !DILocation(line: 243, column: 2, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !7989, file: !7766, line: 243, column: 2)
!8061 = !DILocation(line: 244, column: 21, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !7766, line: 243, column: 27)
!8063 = distinct !DILexicalBlock(scope: !8060, file: !7766, line: 243, column: 2)
!8064 = !DILocation(line: 244, column: 10, scope: !8062)
!8065 = !DILocation(line: 244, column: 3, scope: !8062)
!8066 = !DILocation(line: 244, column: 8, scope: !8062)
!8067 = !DILocation(line: 243, column: 22, scope: !8063)
!8068 = !DILocation(line: 243, column: 16, scope: !8063)
!8069 = distinct !{!8069, !8059, !8070}
!8070 = !DILocation(line: 245, column: 2, scope: !8060)
!8071 = !DILocation(line: 246, column: 26, scope: !7989)
!8072 = !DILocation(line: 246, column: 37, scope: !7989)
!8073 = !DILocation(line: 246, column: 10, scope: !7989)
!8074 = !DILocation(line: 246, column: 8, scope: !7989)
!8075 = !DILocation(line: 247, column: 10, scope: !7989)
!8076 = !DILocation(line: 247, column: 8, scope: !7989)
!8077 = !DILocation(line: 250, column: 33, scope: !7989)
!8078 = !DILocation(line: 250, column: 9, scope: !7989)
!8079 = !DILocation(line: 251, column: 6, scope: !7989)
!8080 = !DILocation(line: 252, column: 47, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8082, file: !7766, line: 251, column: 16)
!8082 = distinct !DILexicalBlock(scope: !7989, file: !7766, line: 251, column: 6)
!8083 = !DILocation(line: 252, column: 3, scope: !8081)
!8084 = !DILocation(line: 253, column: 2, scope: !8081)
!8085 = !DILocation(line: 254, column: 6, scope: !7989)
!8086 = !DILocation(line: 255, column: 33, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !7766, line: 254, column: 16)
!8088 = distinct !DILexicalBlock(scope: !7989, file: !7766, line: 254, column: 6)
!8089 = !DILocation(line: 255, column: 28, scope: !8087)
!8090 = !DILocation(line: 255, column: 45, scope: !8087)
!8091 = !DILocation(line: 255, column: 3, scope: !8087)
!8092 = !DILocation(line: 256, column: 2, scope: !8087)
!8093 = !DILocation(line: 259, column: 26, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !7989, file: !7766, line: 259, column: 6)
!8095 = !DILocation(line: 259, column: 6, scope: !8094)
!8096 = !DILocation(line: 259, column: 32, scope: !8094)
!8097 = !DILocation(line: 259, column: 6, scope: !7989)
!8098 = !DILocation(line: 263, column: 26, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8094, file: !7766, line: 261, column: 11)
!8100 = !DILocation(line: 263, column: 21, scope: !8099)
!8101 = !DILocation(line: 263, column: 3, scope: !8099)
!8102 = !DILocation(line: 264, column: 3, scope: !8099)
!8103 = !DILocation(line: 0, scope: !8094)
!8104 = !DILocation(line: 266, column: 1, scope: !7989)
!8105 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !8106, file: !8106, line: 57, type: !8107, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !8153)
!8106 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8107 = !DISubroutineType(types: !8108)
!8108 = !{null, !32, !8109}
!8109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8110, size: 32)
!8110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8111)
!8111 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2903, line: 141, baseType: !8112)
!8112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2903, line: 97, size: 256, elements: !8113)
!8113 = !{!8114}
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !8112, file: !2903, line: 107, baseType: !8115, size: 256)
!8115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2903, line: 98, size: 256, elements: !8116)
!8116 = !{!8117, !8122, !8127, !8132, !8137, !8142, !8147, !8152}
!8117 = !DIDerivedType(tag: DW_TAG_member, scope: !8115, file: !2903, line: 99, baseType: !8118, size: 32)
!8118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8115, file: !2903, line: 99, size: 32, elements: !8119)
!8119 = !{!8120, !8121}
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !8118, file: !2903, line: 99, baseType: !208, size: 32)
!8121 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !8118, file: !2903, line: 99, baseType: !208, size: 32)
!8122 = !DIDerivedType(tag: DW_TAG_member, scope: !8115, file: !2903, line: 100, baseType: !8123, size: 32, offset: 32)
!8123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8115, file: !2903, line: 100, size: 32, elements: !8124)
!8124 = !{!8125, !8126}
!8125 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !8123, file: !2903, line: 100, baseType: !208, size: 32)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !8123, file: !2903, line: 100, baseType: !208, size: 32)
!8127 = !DIDerivedType(tag: DW_TAG_member, scope: !8115, file: !2903, line: 101, baseType: !8128, size: 32, offset: 64)
!8128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8115, file: !2903, line: 101, size: 32, elements: !8129)
!8129 = !{!8130, !8131}
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !8128, file: !2903, line: 101, baseType: !208, size: 32)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !8128, file: !2903, line: 101, baseType: !208, size: 32)
!8132 = !DIDerivedType(tag: DW_TAG_member, scope: !8115, file: !2903, line: 102, baseType: !8133, size: 32, offset: 96)
!8133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8115, file: !2903, line: 102, size: 32, elements: !8134)
!8134 = !{!8135, !8136}
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !8133, file: !2903, line: 102, baseType: !208, size: 32)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !8133, file: !2903, line: 102, baseType: !208, size: 32)
!8137 = !DIDerivedType(tag: DW_TAG_member, scope: !8115, file: !2903, line: 103, baseType: !8138, size: 32, offset: 128)
!8138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8115, file: !2903, line: 103, size: 32, elements: !8139)
!8139 = !{!8140, !8141}
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8138, file: !2903, line: 103, baseType: !208, size: 32)
!8141 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8138, file: !2903, line: 103, baseType: !208, size: 32)
!8142 = !DIDerivedType(tag: DW_TAG_member, scope: !8115, file: !2903, line: 104, baseType: !8143, size: 32, offset: 160)
!8143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8115, file: !2903, line: 104, size: 32, elements: !8144)
!8144 = !{!8145, !8146}
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !8143, file: !2903, line: 104, baseType: !208, size: 32)
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8143, file: !2903, line: 104, baseType: !208, size: 32)
!8147 = !DIDerivedType(tag: DW_TAG_member, scope: !8115, file: !2903, line: 105, baseType: !8148, size: 32, offset: 192)
!8148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8115, file: !2903, line: 105, size: 32, elements: !8149)
!8149 = !{!8150, !8151}
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !8148, file: !2903, line: 105, baseType: !208, size: 32)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8148, file: !2903, line: 105, baseType: !208, size: 32)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !8115, file: !2903, line: 106, baseType: !208, size: 32, offset: 224)
!8153 = !{!8154, !8155}
!8154 = !DILocalVariable(name: "reason", arg: 1, scope: !8105, file: !8106, line: 57, type: !32)
!8155 = !DILocalVariable(name: "esf", arg: 2, scope: !8105, file: !8106, line: 57, type: !8109)
!8156 = !DILocation(line: 0, scope: !8105)
!8157 = !DILocation(line: 60, column: 10, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8105, file: !8106, line: 60, column: 6)
!8159 = !DILocation(line: 60, column: 6, scope: !8105)
!8160 = !DILocation(line: 61, column: 3, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8158, file: !8106, line: 60, column: 19)
!8162 = !DILocation(line: 62, column: 2, scope: !8161)
!8163 = !DILocation(line: 63, column: 2, scope: !8105)
!8164 = !DILocation(line: 64, column: 1, scope: !8105)
!8165 = distinct !DISubprogram(name: "esf_dump", scope: !8106, file: !8106, line: 20, type: !8166, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !8168)
!8166 = !DISubroutineType(types: !8167)
!8167 = !{null, !8109}
!8168 = !{!8169}
!8169 = !DILocalVariable(name: "esf", arg: 1, scope: !8165, file: !8106, line: 20, type: !8109)
!8170 = !DILocation(line: 0, scope: !8165)
!8171 = !DILocation(line: 22, column: 2, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8173, file: !8106, line: 22, column: 2)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !8106, line: 22, column: 2)
!8174 = distinct !DILexicalBlock(scope: !8175, file: !8106, line: 22, column: 2)
!8175 = distinct !DILexicalBlock(scope: !8165, file: !8106, line: 22, column: 2)
!8176 = !DILocation(line: 24, column: 2, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8178, file: !8106, line: 24, column: 2)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !8106, line: 24, column: 2)
!8179 = distinct !DILexicalBlock(scope: !8180, file: !8106, line: 24, column: 2)
!8180 = distinct !DILexicalBlock(scope: !8165, file: !8106, line: 24, column: 2)
!8181 = !DILocation(line: 26, column: 2, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8183, file: !8106, line: 26, column: 2)
!8183 = distinct !DILexicalBlock(scope: !8184, file: !8106, line: 26, column: 2)
!8184 = distinct !DILexicalBlock(scope: !8185, file: !8106, line: 26, column: 2)
!8185 = distinct !DILexicalBlock(scope: !8165, file: !8106, line: 26, column: 2)
!8186 = !DILocation(line: 53, column: 2, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !8106, line: 53, column: 2)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !8106, line: 53, column: 2)
!8189 = distinct !DILexicalBlock(scope: !8190, file: !8106, line: 53, column: 2)
!8190 = distinct !DILexicalBlock(scope: !8165, file: !8106, line: 53, column: 2)
!8191 = !DILocation(line: 55, column: 1, scope: !8165)
!8192 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !8106, file: !8106, line: 82, type: !8193, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !8208)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{null, !8109, !8195}
!8195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8196, size: 32)
!8196 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !614, line: 37, baseType: !8197)
!8197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !614, line: 25, size: 288, elements: !8198)
!8198 = !{!8199, !8200, !8201, !8202, !8203, !8204, !8205, !8206, !8207}
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8197, file: !614, line: 26, baseType: !208, size: 32)
!8200 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8197, file: !614, line: 27, baseType: !208, size: 32, offset: 32)
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8197, file: !614, line: 28, baseType: !208, size: 32, offset: 64)
!8202 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8197, file: !614, line: 29, baseType: !208, size: 32, offset: 96)
!8203 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8197, file: !614, line: 30, baseType: !208, size: 32, offset: 128)
!8204 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8197, file: !614, line: 31, baseType: !208, size: 32, offset: 160)
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8197, file: !614, line: 32, baseType: !208, size: 32, offset: 192)
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8197, file: !614, line: 33, baseType: !208, size: 32, offset: 224)
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8197, file: !614, line: 34, baseType: !208, size: 32, offset: 256)
!8208 = !{!8209, !8210, !8211}
!8209 = !DILocalVariable(name: "esf", arg: 1, scope: !8192, file: !8106, line: 82, type: !8109)
!8210 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !8192, file: !8106, line: 82, type: !8195)
!8211 = !DILocalVariable(name: "reason", scope: !8192, file: !8106, line: 88, type: !32)
!8212 = !DILocation(line: 0, scope: !8192)
!8213 = !DILocation(line: 88, column: 35, scope: !8192)
!8214 = !DILocation(line: 108, column: 2, scope: !8192)
!8215 = !DILocation(line: 131, column: 1, scope: !8192)
!8216 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !8106, file: !8106, line: 133, type: !8217, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !8219)
!8217 = !DISubroutineType(types: !8218)
!8218 = !{null, !124}
!8219 = !{!8220, !8221, !8222}
!8220 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !8216, file: !8106, line: 133, type: !124)
!8221 = !DILocalVariable(name: "ssf_contents", scope: !8216, file: !8106, line: 135, type: !1090)
!8222 = !DILocalVariable(name: "oops_esf", scope: !8216, file: !8106, line: 136, type: !8111)
!8223 = !DILocation(line: 0, scope: !8216)
!8224 = !DILocation(line: 136, column: 2, scope: !8216)
!8225 = !DILocation(line: 136, column: 15, scope: !8216)
!8226 = !DILocation(line: 139, column: 22, scope: !8216)
!8227 = !DILocation(line: 139, column: 17, scope: !8216)
!8228 = !DILocation(line: 139, column: 20, scope: !8216)
!8229 = !DILocation(line: 141, column: 2, scope: !8216)
!8230 = !DILocation(line: 142, column: 2, scope: !8216)
!8231 = distinct !DISubprogram(name: "arch_irq_enable", scope: !8232, file: !8232, line: 40, type: !6807, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !8233)
!8232 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8233 = !{!8234}
!8234 = !DILocalVariable(name: "irq", arg: 1, scope: !8231, file: !8232, line: 40, type: !32)
!8235 = !DILocation(line: 0, scope: !8231)
!8236 = !DILocation(line: 42, column: 2, scope: !8231)
!8237 = !DILocation(line: 43, column: 1, scope: !8231)
!8238 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !693, file: !693, line: 1508, type: !8239, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !8241)
!8239 = !DISubroutineType(types: !8240)
!8240 = !{null, !1015}
!8241 = !{!8242}
!8242 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8238, file: !693, line: 1508, type: !1015)
!8243 = !DILocation(line: 0, scope: !8238)
!8244 = !DILocation(line: 1510, column: 23, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8238, file: !693, line: 1510, column: 7)
!8246 = !DILocation(line: 1510, column: 7, scope: !8238)
!8247 = !DILocation(line: 1512, column: 5, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8245, file: !693, line: 1511, column: 3)
!8249 = !{i64 2149970791}
!8250 = !DILocation(line: 1513, column: 81, scope: !8248)
!8251 = !DILocation(line: 1513, column: 60, scope: !8248)
!8252 = !DILocation(line: 1513, column: 34, scope: !8248)
!8253 = !DILocation(line: 1513, column: 5, scope: !8248)
!8254 = !DILocation(line: 1513, column: 43, scope: !8248)
!8255 = !DILocation(line: 1514, column: 5, scope: !8248)
!8256 = !{i64 2149970905}
!8257 = !DILocation(line: 1515, column: 3, scope: !8248)
!8258 = !DILocation(line: 1516, column: 1, scope: !8238)
!8259 = distinct !DISubprogram(name: "arch_irq_disable", scope: !8232, file: !8232, line: 45, type: !6807, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !8260)
!8260 = !{!8261}
!8261 = !DILocalVariable(name: "irq", arg: 1, scope: !8259, file: !8232, line: 45, type: !32)
!8262 = !DILocation(line: 0, scope: !8259)
!8263 = !DILocation(line: 47, column: 2, scope: !8259)
!8264 = !DILocation(line: 48, column: 1, scope: !8259)
!8265 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !693, file: !693, line: 1546, type: !8239, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !8266)
!8266 = !{!8267}
!8267 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8265, file: !693, line: 1546, type: !1015)
!8268 = !DILocation(line: 0, scope: !8265)
!8269 = !DILocation(line: 1548, column: 23, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8265, file: !693, line: 1548, column: 7)
!8271 = !DILocation(line: 1548, column: 7, scope: !8265)
!8272 = !DILocation(line: 1550, column: 81, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8270, file: !693, line: 1549, column: 3)
!8274 = !DILocation(line: 1550, column: 60, scope: !8273)
!8275 = !DILocation(line: 1550, column: 34, scope: !8273)
!8276 = !DILocation(line: 1550, column: 5, scope: !8273)
!8277 = !DILocation(line: 1550, column: 43, scope: !8273)
!8278 = !DILocation(line: 271, column: 3, scope: !8279, inlinedAt: !8281)
!8279 = distinct !DISubprogram(name: "__DSB", scope: !8280, file: !8280, line: 269, type: !3274, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !652)
!8280 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8281 = distinct !DILocation(line: 1551, column: 5, scope: !8273)
!8282 = !{i64 2428293}
!8283 = !DILocation(line: 260, column: 3, scope: !8284, inlinedAt: !8285)
!8284 = distinct !DISubprogram(name: "__ISB", scope: !8280, file: !8280, line: 258, type: !3274, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !652)
!8285 = distinct !DILocation(line: 1552, column: 5, scope: !8273)
!8286 = !{i64 2428010}
!8287 = !DILocation(line: 1553, column: 3, scope: !8273)
!8288 = !DILocation(line: 1554, column: 1, scope: !8265)
!8289 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !8232, file: !8232, line: 50, type: !8290, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !8292)
!8290 = !DISubroutineType(types: !8291)
!8291 = !{!125, !32}
!8292 = !{!8293}
!8293 = !DILocalVariable(name: "irq", arg: 1, scope: !8289, file: !8232, line: 50, type: !32)
!8294 = !DILocation(line: 0, scope: !8289)
!8295 = !DILocation(line: 52, column: 20, scope: !8289)
!8296 = !DILocation(line: 52, column: 9, scope: !8289)
!8297 = !DILocation(line: 52, column: 41, scope: !8289)
!8298 = !DILocation(line: 52, column: 39, scope: !8289)
!8299 = !DILocation(line: 52, column: 2, scope: !8289)
!8300 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !8232, file: !8232, line: 64, type: !8301, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !8303)
!8301 = !DISubroutineType(types: !8302)
!8302 = !{null, !32, !32, !208}
!8303 = !{!8304, !8305, !8306}
!8304 = !DILocalVariable(name: "irq", arg: 1, scope: !8300, file: !8232, line: 64, type: !32)
!8305 = !DILocalVariable(name: "prio", arg: 2, scope: !8300, file: !8232, line: 64, type: !32)
!8306 = !DILocalVariable(name: "flags", arg: 3, scope: !8300, file: !8232, line: 64, type: !208)
!8307 = !DILocation(line: 0, scope: !8300)
!8308 = !DILocation(line: 83, column: 8, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8310, file: !8232, line: 82, column: 9)
!8310 = distinct !DILexicalBlock(scope: !8300, file: !8232, line: 76, column: 6)
!8311 = !DILocation(line: 95, column: 2, scope: !8300)
!8312 = !DILocation(line: 96, column: 1, scope: !8300)
!8313 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !693, file: !693, line: 1638, type: !8314, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !8316)
!8314 = !DISubroutineType(types: !8315)
!8315 = !{null, !1015, !208}
!8316 = !{!8317, !8318}
!8317 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8313, file: !693, line: 1638, type: !1015)
!8318 = !DILocalVariable(name: "priority", arg: 2, scope: !8313, file: !693, line: 1638, type: !208)
!8319 = !DILocation(line: 0, scope: !8313)
!8320 = !DILocation(line: 0, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8313, file: !693, line: 1640, column: 7)
!8322 = !DILocation(line: 1640, column: 7, scope: !8313)
!8323 = !DILocation(line: 1648, column: 1, scope: !8313)
!8324 = distinct !DISubprogram(name: "z_irq_spurious", scope: !8232, file: !8232, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !8325)
!8325 = !{!8326}
!8326 = !DILocalVariable(name: "unused", arg: 1, scope: !8324, file: !8232, line: 155, type: !13)
!8327 = !DILocation(line: 0, scope: !8324)
!8328 = !DILocation(line: 159, column: 2, scope: !8324)
!8329 = !DILocation(line: 160, column: 1, scope: !8324)
!8330 = distinct !DISubprogram(name: "z_arm_nmi", scope: !8331, file: !8331, line: 87, type: !3274, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !652)
!8331 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8332 = !DILocation(line: 89, column: 2, scope: !8330)
!8333 = !DILocation(line: 90, column: 2, scope: !8330)
!8334 = !DILocation(line: 91, column: 1, scope: !8330)
!8335 = !DISubprogram(name: "z_SysNmiOnReset", scope: !8331, file: !8331, line: 23, type: !3274, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !652)
!8336 = !DISubprogram(name: "z_arm_int_exit", scope: !8337, file: !8337, line: 153, type: !3274, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !652)
!8337 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8338 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !8339, file: !8339, line: 256, type: !3274, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !652)
!8339 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8340 = !DILocation(line: 258, column: 2, scope: !8338)
!8341 = !DILocation(line: 262, column: 2, scope: !8338)
!8342 = !DILocation(line: 263, column: 2, scope: !8338)
!8343 = !DILocation(line: 267, column: 2, scope: !8338)
!8344 = !DILocation(line: 268, column: 2, scope: !8338)
!8345 = distinct !DISubprogram(name: "relocate_vector_table", scope: !8339, file: !8339, line: 53, type: !3274, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !652)
!8346 = !DILocation(line: 55, column: 12, scope: !8345)
!8347 = !DILocation(line: 271, column: 3, scope: !8348, inlinedAt: !8349)
!8348 = distinct !DISubprogram(name: "__DSB", scope: !8280, file: !8280, line: 269, type: !3274, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !652)
!8349 = distinct !DILocation(line: 56, column: 2, scope: !8345)
!8350 = !{i64 2426964}
!8351 = !DILocation(line: 260, column: 3, scope: !8352, inlinedAt: !8353)
!8352 = distinct !DISubprogram(name: "__ISB", scope: !8280, file: !8280, line: 258, type: !3274, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !652)
!8353 = distinct !DILocation(line: 57, column: 2, scope: !8345)
!8354 = !{i64 2426681}
!8355 = !DILocation(line: 58, column: 1, scope: !8345)
!8356 = distinct !DISubprogram(name: "arch_swap", scope: !8357, file: !8357, line: 33, type: !8290, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2870, retainedNodes: !8358)
!8357 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8358 = !{!8359}
!8359 = !DILocalVariable(name: "key", arg: 1, scope: !8356, file: !8357, line: 33, type: !32)
!8360 = !DILocation(line: 0, scope: !8356)
!8361 = !DILocation(line: 36, column: 2, scope: !8356)
!8362 = !DILocation(line: 36, column: 17, scope: !8356)
!8363 = !DILocation(line: 36, column: 25, scope: !8356)
!8364 = !DILocation(line: 37, column: 37, scope: !8356)
!8365 = !DILocation(line: 37, column: 17, scope: !8356)
!8366 = !DILocation(line: 37, column: 35, scope: !8356)
!8367 = !DILocation(line: 41, column: 12, scope: !8356)
!8368 = !DILocalVariable(name: "key", arg: 1, scope: !8369, file: !6796, line: 84, type: !32)
!8369 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6796, file: !6796, line: 84, type: !6807, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2870, retainedNodes: !8370)
!8370 = !{!8368}
!8371 = !DILocation(line: 0, scope: !8369, inlinedAt: !8372)
!8372 = distinct !DILocation(line: 44, column: 2, scope: !8356)
!8373 = !DILocation(line: 95, column: 2, scope: !8369, inlinedAt: !8372)
!8374 = !{i64 1649964}
!8375 = !DILocation(line: 53, column: 9, scope: !8356)
!8376 = !DILocation(line: 53, column: 24, scope: !8356)
!8377 = !DILocation(line: 53, column: 2, scope: !8356)
!8378 = distinct !DISubprogram(name: "arch_new_thread", scope: !8379, file: !8379, line: 56, type: !8380, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !8487)
!8379 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8380 = !DISubroutineType(types: !8381)
!8381 = !{null, !8382, !8482, !393, !5224, !124, !124, !124}
!8382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8383, size: 32)
!8383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !544, line: 245, size: 1024, elements: !8384)
!8384 = !{!8385, !8443, !8455, !8456, !8457, !8458, !8464, !8477}
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8383, file: !544, line: 247, baseType: !8386, size: 384)
!8386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !544, line: 57, size: 384, elements: !8387)
!8387 = !{!8388, !8412, !8419, !8420, !8421, !8430, !8431, !8432}
!8388 = !DIDerivedType(tag: DW_TAG_member, scope: !8386, file: !544, line: 60, baseType: !8389, size: 64)
!8389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8386, file: !544, line: 60, size: 64, elements: !8390)
!8390 = !{!8391, !8406}
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8389, file: !544, line: 61, baseType: !8392, size: 64)
!8392 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !554, line: 49, baseType: !8393)
!8393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !554, line: 37, size: 64, elements: !8394)
!8394 = !{!8395, !8401}
!8395 = !DIDerivedType(tag: DW_TAG_member, scope: !8393, file: !554, line: 38, baseType: !8396, size: 32)
!8396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8393, file: !554, line: 38, size: 32, elements: !8397)
!8397 = !{!8398, !8400}
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8396, file: !554, line: 39, baseType: !8399, size: 32)
!8399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8393, size: 32)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8396, file: !554, line: 40, baseType: !8399, size: 32)
!8401 = !DIDerivedType(tag: DW_TAG_member, scope: !8393, file: !554, line: 42, baseType: !8402, size: 32, offset: 32)
!8402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8393, file: !554, line: 42, size: 32, elements: !8403)
!8403 = !{!8404, !8405}
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8402, file: !554, line: 43, baseType: !8399, size: 32)
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8402, file: !554, line: 44, baseType: !8399, size: 32)
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8389, file: !544, line: 62, baseType: !8407, size: 64)
!8407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !570, line: 49, size: 64, elements: !8408)
!8408 = !{!8409}
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8407, file: !570, line: 50, baseType: !8410, size: 64)
!8410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8411, size: 64, elements: !575)
!8411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8407, size: 32)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8386, file: !544, line: 68, baseType: !8413, size: 32, offset: 64)
!8413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8414, size: 32)
!8414 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !580, line: 233, baseType: !8415)
!8415 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 231, size: 64, elements: !8416)
!8416 = !{!8417}
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8415, file: !580, line: 232, baseType: !8418, size: 64)
!8418 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !554, line: 48, baseType: !8393)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8386, file: !544, line: 71, baseType: !150, size: 8, offset: 96)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8386, file: !544, line: 74, baseType: !150, size: 8, offset: 104)
!8421 = !DIDerivedType(tag: DW_TAG_member, scope: !8386, file: !544, line: 90, baseType: !8422, size: 16, offset: 112)
!8422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8386, file: !544, line: 90, size: 16, elements: !8423)
!8423 = !{!8424, !8429}
!8424 = !DIDerivedType(tag: DW_TAG_member, scope: !8422, file: !544, line: 91, baseType: !8425, size: 16)
!8425 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8422, file: !544, line: 91, size: 16, elements: !8426)
!8426 = !{!8427, !8428}
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8425, file: !544, line: 96, baseType: !594, size: 8)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8425, file: !544, line: 97, baseType: !150, size: 8, offset: 8)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8422, file: !544, line: 100, baseType: !227, size: 16)
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8386, file: !544, line: 107, baseType: !208, size: 32, offset: 128)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8386, file: !544, line: 127, baseType: !124, size: 32, offset: 160)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8386, file: !544, line: 131, baseType: !8433, size: 192, offset: 192)
!8433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !580, line: 244, size: 192, elements: !8434)
!8434 = !{!8435, !8436, !8442}
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8433, file: !580, line: 245, baseType: !8392, size: 64)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8433, file: !580, line: 246, baseType: !8437, size: 32, offset: 64)
!8437 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !580, line: 242, baseType: !8438)
!8438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8439, size: 32)
!8439 = !DISubroutineType(types: !8440)
!8440 = !{null, !8441}
!8441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8433, size: 32)
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8433, file: !580, line: 249, baseType: !611, size: 64, offset: 128)
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8383, file: !544, line: 250, baseType: !8444, size: 288, offset: 384)
!8444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !614, line: 25, size: 288, elements: !8445)
!8445 = !{!8446, !8447, !8448, !8449, !8450, !8451, !8452, !8453, !8454}
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8444, file: !614, line: 26, baseType: !208, size: 32)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8444, file: !614, line: 27, baseType: !208, size: 32, offset: 32)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8444, file: !614, line: 28, baseType: !208, size: 32, offset: 64)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8444, file: !614, line: 29, baseType: !208, size: 32, offset: 96)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8444, file: !614, line: 30, baseType: !208, size: 32, offset: 128)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8444, file: !614, line: 31, baseType: !208, size: 32, offset: 160)
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8444, file: !614, line: 32, baseType: !208, size: 32, offset: 192)
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8444, file: !614, line: 33, baseType: !208, size: 32, offset: 224)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8444, file: !614, line: 34, baseType: !208, size: 32, offset: 256)
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8383, file: !544, line: 253, baseType: !124, size: 32, offset: 672)
!8456 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8383, file: !544, line: 256, baseType: !8414, size: 64, offset: 704)
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8383, file: !544, line: 294, baseType: !125, size: 32, offset: 768)
!8458 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8383, file: !544, line: 300, baseType: !8459, size: 96, offset: 800)
!8459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !544, line: 149, size: 96, elements: !8460)
!8460 = !{!8461, !8462, !8463}
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8459, file: !544, line: 153, baseType: !22, size: 32)
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8459, file: !544, line: 162, baseType: !272, size: 32, offset: 32)
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8459, file: !544, line: 168, baseType: !272, size: 32, offset: 64)
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8383, file: !544, line: 325, baseType: !8465, size: 32, offset: 896)
!8465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8466, size: 32)
!8466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !637, line: 5073, size: 160, elements: !8467)
!8467 = !{!8468, !8474, !8475}
!8468 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8466, file: !637, line: 5074, baseType: !8469, size: 96)
!8469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !641, line: 56, size: 96, elements: !8470)
!8470 = !{!8471, !8472, !8473}
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8469, file: !641, line: 57, baseType: !644, size: 32)
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8469, file: !641, line: 58, baseType: !124, size: 32, offset: 32)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8469, file: !641, line: 59, baseType: !272, size: 32, offset: 64)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8466, file: !637, line: 5075, baseType: !8414, size: 64, offset: 96)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8466, file: !637, line: 5076, baseType: !8476, offset: 160)
!8476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !651, line: 43, elements: !652)
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8383, file: !544, line: 343, baseType: !8478, size: 64, offset: 928)
!8478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !614, line: 60, size: 64, elements: !8479)
!8479 = !{!8480, !8481}
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8478, file: !614, line: 63, baseType: !208, size: 32)
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8478, file: !614, line: 66, baseType: !208, size: 32, offset: 32)
!8482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8483, size: 32)
!8483 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5225, line: 44, baseType: !8484)
!8484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2375, line: 47, size: 8, elements: !8485)
!8485 = !{!8486}
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8484, file: !2375, line: 48, baseType: !142, size: 8)
!8487 = !{!8488, !8489, !8490, !8491, !8492, !8493, !8494, !8495}
!8488 = !DILocalVariable(name: "thread", arg: 1, scope: !8378, file: !8379, line: 56, type: !8382)
!8489 = !DILocalVariable(name: "stack", arg: 2, scope: !8378, file: !8379, line: 56, type: !8482)
!8490 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8378, file: !8379, line: 57, type: !393)
!8491 = !DILocalVariable(name: "entry", arg: 4, scope: !8378, file: !8379, line: 57, type: !5224)
!8492 = !DILocalVariable(name: "p1", arg: 5, scope: !8378, file: !8379, line: 58, type: !124)
!8493 = !DILocalVariable(name: "p2", arg: 6, scope: !8378, file: !8379, line: 58, type: !124)
!8494 = !DILocalVariable(name: "p3", arg: 7, scope: !8378, file: !8379, line: 58, type: !124)
!8495 = !DILocalVariable(name: "iframe", scope: !8378, file: !8379, line: 60, type: !2901)
!8496 = !DILocation(line: 0, scope: !8378)
!8497 = !DILocation(line: 85, column: 11, scope: !8378)
!8498 = !DILocation(line: 93, column: 10, scope: !8378)
!8499 = !DILocation(line: 98, column: 13, scope: !8378)
!8500 = !DILocation(line: 100, column: 15, scope: !8378)
!8501 = !DILocation(line: 100, column: 10, scope: !8378)
!8502 = !DILocation(line: 100, column: 13, scope: !8378)
!8503 = !DILocation(line: 101, column: 15, scope: !8378)
!8504 = !DILocation(line: 101, column: 10, scope: !8378)
!8505 = !DILocation(line: 101, column: 13, scope: !8378)
!8506 = !DILocation(line: 102, column: 15, scope: !8378)
!8507 = !DILocation(line: 102, column: 10, scope: !8378)
!8508 = !DILocation(line: 102, column: 13, scope: !8378)
!8509 = !DILocation(line: 103, column: 15, scope: !8378)
!8510 = !DILocation(line: 103, column: 10, scope: !8378)
!8511 = !DILocation(line: 103, column: 13, scope: !8378)
!8512 = !DILocation(line: 106, column: 10, scope: !8378)
!8513 = !DILocation(line: 106, column: 15, scope: !8378)
!8514 = !DILocation(line: 122, column: 29, scope: !8378)
!8515 = !DILocation(line: 122, column: 23, scope: !8378)
!8516 = !DILocation(line: 122, column: 27, scope: !8378)
!8517 = !DILocation(line: 123, column: 15, scope: !8378)
!8518 = !DILocation(line: 123, column: 23, scope: !8378)
!8519 = !DILocation(line: 143, column: 1, scope: !8378)
!8520 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !8379, file: !8379, line: 385, type: !8521, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !8524)
!8521 = !DISubroutineType(types: !8522)
!8522 = !{!208, !8523, !8523}
!8523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!8524 = !{!8525, !8526, !8527, !8530}
!8525 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8520, file: !8379, line: 385, type: !8523)
!8526 = !DILocalVariable(name: "psp", arg: 2, scope: !8520, file: !8379, line: 385, type: !8523)
!8527 = !DILocalVariable(name: "thread", scope: !8520, file: !8379, line: 388, type: !8528)
!8528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8529, size: 32)
!8529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8383)
!8530 = !DILocalVariable(name: "guard_len", scope: !8520, file: !8379, line: 405, type: !208)
!8531 = !DILocation(line: 0, scope: !8520)
!8532 = !DILocation(line: 388, column: 34, scope: !8520)
!8533 = !DILocation(line: 390, column: 13, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8520, file: !8379, line: 390, column: 6)
!8535 = !DILocation(line: 390, column: 6, scope: !8520)
!8536 = !DILocation(line: 438, column: 6, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8520, file: !8379, line: 438, column: 6)
!8538 = !DILocation(line: 438, column: 6, scope: !8520)
!8539 = !DILocation(line: 442, column: 3, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8537, file: !8379, line: 440, column: 22)
!8541 = !DILocation(line: 455, column: 1, scope: !8520)
!8542 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8379, file: !8379, line: 530, type: !8543, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !8545)
!8543 = !DISubroutineType(types: !8544)
!8544 = !{null, !8382, !393, !5224}
!8545 = !{!8546, !8547, !8548}
!8546 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8542, file: !8379, line: 530, type: !8382)
!8547 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8542, file: !8379, line: 530, type: !393)
!8548 = !DILocalVariable(name: "_main", arg: 3, scope: !8542, file: !8379, line: 531, type: !5224)
!8549 = !DILocation(line: 0, scope: !8542)
!8550 = !DILocation(line: 535, column: 11, scope: !8542)
!8551 = !DILocation(line: 560, column: 2, scope: !8542)
!8552 = !DILocation(line: 576, column: 2, scope: !8542)
!8553 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8554 = !DILocation(line: 603, column: 2, scope: !8542)
!8555 = distinct !DISubprogram(name: "z_arm_fault", scope: !8556, file: !8556, line: 1036, type: !8557, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !8572)
!8556 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8557 = !DISubroutineType(types: !8558)
!8558 = !{null, !208, !208, !208, !8559}
!8559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8560, size: 32)
!8560 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !614, line: 37, baseType: !8561)
!8561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !614, line: 25, size: 288, elements: !8562)
!8562 = !{!8563, !8564, !8565, !8566, !8567, !8568, !8569, !8570, !8571}
!8563 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8561, file: !614, line: 26, baseType: !208, size: 32)
!8564 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8561, file: !614, line: 27, baseType: !208, size: 32, offset: 32)
!8565 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8561, file: !614, line: 28, baseType: !208, size: 32, offset: 64)
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8561, file: !614, line: 29, baseType: !208, size: 32, offset: 96)
!8567 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8561, file: !614, line: 30, baseType: !208, size: 32, offset: 128)
!8568 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8561, file: !614, line: 31, baseType: !208, size: 32, offset: 160)
!8569 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8561, file: !614, line: 32, baseType: !208, size: 32, offset: 192)
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8561, file: !614, line: 33, baseType: !208, size: 32, offset: 224)
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8561, file: !614, line: 34, baseType: !208, size: 32, offset: 256)
!8572 = !{!8573, !8574, !8575, !8576, !8577, !8578, !8579, !8580, !8581, !8582}
!8573 = !DILocalVariable(name: "msp", arg: 1, scope: !8555, file: !8556, line: 1036, type: !208)
!8574 = !DILocalVariable(name: "psp", arg: 2, scope: !8555, file: !8556, line: 1036, type: !208)
!8575 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8555, file: !8556, line: 1036, type: !208)
!8576 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8555, file: !8556, line: 1037, type: !8559)
!8577 = !DILocalVariable(name: "reason", scope: !8555, file: !8556, line: 1039, type: !208)
!8578 = !DILocalVariable(name: "fault", scope: !8555, file: !8556, line: 1040, type: !125)
!8579 = !DILocalVariable(name: "recoverable", scope: !8555, file: !8556, line: 1041, type: !153)
!8580 = !DILocalVariable(name: "nested_exc", scope: !8555, file: !8556, line: 1041, type: !153)
!8581 = !DILocalVariable(name: "esf", scope: !8555, file: !8556, line: 1042, type: !2969)
!8582 = !DILocalVariable(name: "esf_copy", scope: !8555, file: !8556, line: 1047, type: !2970)
!8583 = !DILocation(line: 0, scope: !8555)
!8584 = !DILocation(line: 1040, column: 19, scope: !8555)
!8585 = !DILocation(line: 1040, column: 24, scope: !8555)
!8586 = !DILocation(line: 1041, column: 2, scope: !8555)
!8587 = !DILocation(line: 1047, column: 2, scope: !8555)
!8588 = !DILocation(line: 1047, column: 15, scope: !8555)
!8589 = !DILocalVariable(name: "key", arg: 1, scope: !8590, file: !6796, line: 84, type: !32)
!8590 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6796, file: !6796, line: 84, type: !6807, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !8591)
!8591 = !{!8589}
!8592 = !DILocation(line: 0, scope: !8590, inlinedAt: !8593)
!8593 = distinct !DILocation(line: 1050, column: 2, scope: !8555)
!8594 = !DILocation(line: 95, column: 2, scope: !8590, inlinedAt: !8593)
!8595 = !{i64 1683208}
!8596 = !DILocation(line: 1055, column: 9, scope: !8555)
!8597 = !DILocation(line: 1063, column: 11, scope: !8555)
!8598 = !DILocation(line: 1064, column: 6, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8555, file: !8556, line: 1064, column: 6)
!8600 = !{i8 0, i8 2}
!8601 = !DILocation(line: 1064, column: 6, scope: !8555)
!8602 = !DILocation(line: 1070, column: 20, scope: !8555)
!8603 = !DILocation(line: 1070, column: 2, scope: !8555)
!8604 = !DILocation(line: 1089, column: 6, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8555, file: !8556, line: 1089, column: 6)
!8606 = !DILocation(line: 0, scope: !8605)
!8607 = !DILocation(line: 1089, column: 6, scope: !8555)
!8608 = !DILocation(line: 1090, column: 28, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !8556, line: 1090, column: 7)
!8610 = distinct !DILexicalBlock(scope: !8605, file: !8556, line: 1089, column: 18)
!8611 = !DILocation(line: 1090, column: 44, scope: !8609)
!8612 = !DILocation(line: 1090, column: 7, scope: !8610)
!8613 = !DILocation(line: 1091, column: 24, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8609, file: !8556, line: 1090, column: 50)
!8615 = !DILocation(line: 1092, column: 3, scope: !8614)
!8616 = !DILocation(line: 1094, column: 23, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8605, file: !8556, line: 1093, column: 9)
!8618 = !DILocation(line: 1097, column: 2, scope: !8555)
!8619 = !DILocation(line: 1098, column: 1, scope: !8555)
!8620 = distinct !DISubprogram(name: "get_esf", scope: !8556, file: !8556, line: 894, type: !8621, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !8624)
!8621 = !DISubroutineType(types: !8622)
!8622 = !{!2969, !208, !208, !208, !8623}
!8623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!8624 = !{!8625, !8626, !8627, !8628, !8629, !8630}
!8625 = !DILocalVariable(name: "msp", arg: 1, scope: !8620, file: !8556, line: 894, type: !208)
!8626 = !DILocalVariable(name: "psp", arg: 2, scope: !8620, file: !8556, line: 894, type: !208)
!8627 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8620, file: !8556, line: 894, type: !208)
!8628 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8620, file: !8556, line: 895, type: !8623)
!8629 = !DILocalVariable(name: "alternative_state_exc", scope: !8620, file: !8556, line: 897, type: !153)
!8630 = !DILocalVariable(name: "ptr_esf", scope: !8620, file: !8556, line: 898, type: !2969)
!8631 = !DILocation(line: 0, scope: !8620)
!8632 = !DILocation(line: 900, column: 14, scope: !8620)
!8633 = !DILocation(line: 902, column: 49, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8620, file: !8556, line: 902, column: 6)
!8635 = !DILocation(line: 902, column: 6, scope: !8620)
!8636 = !DILocation(line: 983, column: 44, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8620, file: !8556, line: 983, column: 6)
!8638 = !DILocation(line: 985, column: 3, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8640, file: !8556, line: 985, column: 3)
!8640 = distinct !DILexicalBlock(scope: !8641, file: !8556, line: 985, column: 3)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !8556, line: 985, column: 3)
!8642 = distinct !DILexicalBlock(scope: !8643, file: !8556, line: 985, column: 3)
!8643 = distinct !DILexicalBlock(scope: !8637, file: !8556, line: 984, column: 47)
!8644 = !DILocation(line: 986, column: 3, scope: !8643)
!8645 = !DILocation(line: 983, column: 18, scope: !8637)
!8646 = !DILocation(line: 991, column: 7, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8648, file: !8556, line: 990, column: 30)
!8648 = distinct !DILexicalBlock(scope: !8620, file: !8556, line: 990, column: 6)
!8649 = !DILocation(line: 998, column: 16, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8651, file: !8556, line: 995, column: 10)
!8651 = distinct !DILexicalBlock(scope: !8647, file: !8556, line: 991, column: 7)
!8652 = !DILocation(line: 1002, column: 2, scope: !8620)
!8653 = !DILocation(line: 1003, column: 1, scope: !8620)
!8654 = distinct !DISubprogram(name: "fault_handle", scope: !8556, file: !8556, line: 786, type: !8655, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !8657)
!8655 = !DISubroutineType(types: !8656)
!8656 = !{!208, !2969, !125, !8623}
!8657 = !{!8658, !8659, !8660, !8661}
!8658 = !DILocalVariable(name: "esf", arg: 1, scope: !8654, file: !8556, line: 786, type: !2969)
!8659 = !DILocalVariable(name: "fault", arg: 2, scope: !8654, file: !8556, line: 786, type: !125)
!8660 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8654, file: !8556, line: 786, type: !8623)
!8661 = !DILocalVariable(name: "reason", scope: !8654, file: !8556, line: 788, type: !208)
!8662 = !DILocation(line: 0, scope: !8654)
!8663 = !DILocation(line: 790, column: 15, scope: !8654)
!8664 = !DILocation(line: 792, column: 2, scope: !8654)
!8665 = !DILocation(line: 794, column: 12, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8654, file: !8556, line: 792, column: 17)
!8667 = !DILocation(line: 795, column: 3, scope: !8666)
!8668 = !DILocation(line: 800, column: 12, scope: !8666)
!8669 = !DILocation(line: 801, column: 3, scope: !8666)
!8670 = !DILocation(line: 803, column: 12, scope: !8666)
!8671 = !DILocation(line: 804, column: 3, scope: !8666)
!8672 = !DILocation(line: 806, column: 12, scope: !8666)
!8673 = !DILocation(line: 807, column: 3, scope: !8666)
!8674 = !DILocation(line: 814, column: 3, scope: !8666)
!8675 = !DILocation(line: 815, column: 3, scope: !8666)
!8676 = !DILocation(line: 820, column: 3, scope: !8666)
!8677 = !DILocation(line: 821, column: 3, scope: !8666)
!8678 = !DILocation(line: 829, column: 2, scope: !8654)
!8679 = distinct !DISubprogram(name: "hard_fault", scope: !8556, file: !8556, line: 709, type: !8680, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !8682)
!8680 = !DISubroutineType(types: !8681)
!8681 = !{!208, !2969, !8623}
!8682 = !{!8683, !8684, !8685}
!8683 = !DILocalVariable(name: "esf", arg: 1, scope: !8679, file: !8556, line: 709, type: !2969)
!8684 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8679, file: !8556, line: 709, type: !8623)
!8685 = !DILocalVariable(name: "reason", scope: !8679, file: !8556, line: 711, type: !208)
!8686 = !DILocation(line: 0, scope: !8679)
!8687 = !DILocation(line: 713, column: 2, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8689, file: !8556, line: 713, column: 2)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !8556, line: 713, column: 2)
!8690 = distinct !DILexicalBlock(scope: !8691, file: !8556, line: 713, column: 2)
!8691 = distinct !DILexicalBlock(scope: !8679, file: !8556, line: 713, column: 2)
!8692 = !DILocation(line: 732, column: 15, scope: !8679)
!8693 = !DILocation(line: 734, column: 12, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8679, file: !8556, line: 734, column: 6)
!8695 = !DILocation(line: 734, column: 17, scope: !8694)
!8696 = !DILocation(line: 734, column: 41, scope: !8694)
!8697 = !DILocation(line: 734, column: 6, scope: !8679)
!8698 = !DILocation(line: 735, column: 3, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !8556, line: 735, column: 3)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !8556, line: 735, column: 3)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !8556, line: 735, column: 3)
!8702 = distinct !DILexicalBlock(scope: !8703, file: !8556, line: 735, column: 3)
!8703 = distinct !DILexicalBlock(scope: !8694, file: !8556, line: 734, column: 47)
!8704 = !DILocation(line: 736, column: 2, scope: !8703)
!8705 = !DILocation(line: 736, column: 19, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8694, file: !8556, line: 736, column: 13)
!8707 = !DILocation(line: 736, column: 49, scope: !8706)
!8708 = !DILocation(line: 736, column: 13, scope: !8694)
!8709 = !DILocation(line: 737, column: 3, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !8556, line: 737, column: 3)
!8711 = distinct !DILexicalBlock(scope: !8712, file: !8556, line: 737, column: 3)
!8712 = distinct !DILexicalBlock(scope: !8713, file: !8556, line: 737, column: 3)
!8713 = distinct !DILexicalBlock(scope: !8714, file: !8556, line: 737, column: 3)
!8714 = distinct !DILexicalBlock(scope: !8706, file: !8556, line: 736, column: 55)
!8715 = !DILocation(line: 738, column: 2, scope: !8714)
!8716 = !DILocation(line: 738, column: 19, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8706, file: !8556, line: 738, column: 13)
!8718 = !DILocation(line: 738, column: 24, scope: !8717)
!8719 = !DILocation(line: 738, column: 47, scope: !8717)
!8720 = !DILocation(line: 738, column: 13, scope: !8706)
!8721 = !DILocation(line: 739, column: 3, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !8556, line: 739, column: 3)
!8723 = distinct !DILexicalBlock(scope: !8724, file: !8556, line: 739, column: 3)
!8724 = distinct !DILexicalBlock(scope: !8725, file: !8556, line: 739, column: 3)
!8725 = distinct !DILexicalBlock(scope: !8726, file: !8556, line: 739, column: 3)
!8726 = distinct !DILexicalBlock(scope: !8717, file: !8556, line: 738, column: 53)
!8727 = !DILocation(line: 740, column: 7, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8726, file: !8556, line: 740, column: 7)
!8729 = !DILocation(line: 740, column: 7, scope: !8726)
!8730 = !DILocation(line: 741, column: 4, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8732, file: !8556, line: 741, column: 4)
!8732 = distinct !DILexicalBlock(scope: !8733, file: !8556, line: 741, column: 4)
!8733 = distinct !DILexicalBlock(scope: !8734, file: !8556, line: 741, column: 4)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !8556, line: 741, column: 4)
!8735 = distinct !DILexicalBlock(scope: !8728, file: !8556, line: 740, column: 38)
!8736 = !DILocation(line: 742, column: 24, scope: !8735)
!8737 = !DILocation(line: 743, column: 3, scope: !8735)
!8738 = !DILocation(line: 743, column: 20, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8728, file: !8556, line: 743, column: 14)
!8740 = !DILocation(line: 743, column: 25, scope: !8739)
!8741 = !DILocation(line: 743, column: 52, scope: !8739)
!8742 = !DILocation(line: 743, column: 14, scope: !8728)
!8743 = !DILocation(line: 744, column: 13, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8739, file: !8556, line: 743, column: 58)
!8745 = !DILocation(line: 745, column: 3, scope: !8744)
!8746 = !DILocation(line: 745, column: 20, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8739, file: !8556, line: 745, column: 14)
!8748 = !DILocation(line: 745, column: 25, scope: !8747)
!8749 = !DILocation(line: 745, column: 52, scope: !8747)
!8750 = !DILocation(line: 745, column: 14, scope: !8739)
!8751 = !DILocation(line: 746, column: 13, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8747, file: !8556, line: 745, column: 58)
!8753 = !DILocation(line: 747, column: 3, scope: !8752)
!8754 = !DILocation(line: 747, column: 20, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8747, file: !8556, line: 747, column: 14)
!8756 = !DILocation(line: 747, column: 52, scope: !8755)
!8757 = !DILocation(line: 747, column: 14, scope: !8747)
!8758 = !DILocation(line: 748, column: 13, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8755, file: !8556, line: 747, column: 58)
!8760 = !DILocation(line: 753, column: 3, scope: !8759)
!8761 = !DILocation(line: 766, column: 2, scope: !8679)
!8762 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8556, file: !8556, line: 229, type: !8655, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !8763)
!8763 = !{!8764, !8765, !8766, !8767, !8768, !8769, !8772}
!8764 = !DILocalVariable(name: "esf", arg: 1, scope: !8762, file: !8556, line: 229, type: !2969)
!8765 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8762, file: !8556, line: 229, type: !125)
!8766 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8762, file: !8556, line: 230, type: !8623)
!8767 = !DILocalVariable(name: "reason", scope: !8762, file: !8556, line: 232, type: !208)
!8768 = !DILocalVariable(name: "mmfar", scope: !8762, file: !8556, line: 233, type: !208)
!8769 = !DILocalVariable(name: "temp", scope: !8770, file: !8556, line: 254, type: !208)
!8770 = distinct !DILexicalBlock(scope: !8771, file: !8556, line: 244, column: 48)
!8771 = distinct !DILexicalBlock(scope: !8762, file: !8556, line: 244, column: 6)
!8772 = !DILocalVariable(name: "min_stack_ptr", scope: !8773, file: !8556, line: 309, type: !208)
!8773 = distinct !DILexicalBlock(scope: !8774, file: !8556, line: 308, column: 43)
!8774 = distinct !DILexicalBlock(scope: !8775, file: !8556, line: 308, column: 7)
!8775 = distinct !DILexicalBlock(scope: !8776, file: !8556, line: 289, column: 40)
!8776 = distinct !DILexicalBlock(scope: !8762, file: !8556, line: 288, column: 6)
!8777 = !DILocation(line: 0, scope: !8762)
!8778 = !DILocation(line: 235, column: 2, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !8556, line: 235, column: 2)
!8780 = distinct !DILexicalBlock(scope: !8781, file: !8556, line: 235, column: 2)
!8781 = distinct !DILexicalBlock(scope: !8782, file: !8556, line: 235, column: 2)
!8782 = distinct !DILexicalBlock(scope: !8762, file: !8556, line: 235, column: 2)
!8783 = !DILocation(line: 237, column: 12, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8762, file: !8556, line: 237, column: 6)
!8785 = !DILocation(line: 237, column: 17, scope: !8784)
!8786 = !DILocation(line: 237, column: 41, scope: !8784)
!8787 = !DILocation(line: 237, column: 6, scope: !8762)
!8788 = !DILocation(line: 238, column: 3, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8790, file: !8556, line: 238, column: 3)
!8790 = distinct !DILexicalBlock(scope: !8791, file: !8556, line: 238, column: 3)
!8791 = distinct !DILexicalBlock(scope: !8792, file: !8556, line: 238, column: 3)
!8792 = distinct !DILexicalBlock(scope: !8793, file: !8556, line: 238, column: 3)
!8793 = distinct !DILexicalBlock(scope: !8784, file: !8556, line: 237, column: 47)
!8794 = !DILocation(line: 240, column: 2, scope: !8793)
!8795 = !DILocation(line: 241, column: 12, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8762, file: !8556, line: 241, column: 6)
!8797 = !DILocation(line: 241, column: 17, scope: !8796)
!8798 = !DILocation(line: 241, column: 43, scope: !8796)
!8799 = !DILocation(line: 241, column: 6, scope: !8762)
!8800 = !DILocation(line: 242, column: 3, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8802, file: !8556, line: 242, column: 3)
!8802 = distinct !DILexicalBlock(scope: !8803, file: !8556, line: 242, column: 3)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !8556, line: 242, column: 3)
!8804 = distinct !DILexicalBlock(scope: !8805, file: !8556, line: 242, column: 3)
!8805 = distinct !DILexicalBlock(scope: !8796, file: !8556, line: 241, column: 49)
!8806 = !DILocation(line: 243, column: 2, scope: !8805)
!8807 = !DILocation(line: 244, column: 12, scope: !8771)
!8808 = !DILocation(line: 244, column: 17, scope: !8771)
!8809 = !DILocation(line: 244, column: 42, scope: !8771)
!8810 = !DILocation(line: 244, column: 6, scope: !8762)
!8811 = !DILocation(line: 245, column: 3, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8813, file: !8556, line: 245, column: 3)
!8813 = distinct !DILexicalBlock(scope: !8814, file: !8556, line: 245, column: 3)
!8814 = distinct !DILexicalBlock(scope: !8815, file: !8556, line: 245, column: 3)
!8815 = distinct !DILexicalBlock(scope: !8770, file: !8556, line: 245, column: 3)
!8816 = !DILocation(line: 254, column: 24, scope: !8770)
!8817 = !DILocation(line: 0, scope: !8770)
!8818 = !DILocation(line: 256, column: 13, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8770, file: !8556, line: 256, column: 7)
!8820 = !DILocation(line: 256, column: 18, scope: !8819)
!8821 = !DILocation(line: 256, column: 44, scope: !8819)
!8822 = !DILocation(line: 256, column: 7, scope: !8770)
!8823 = !DILocation(line: 258, column: 4, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8825, file: !8556, line: 258, column: 4)
!8825 = distinct !DILexicalBlock(scope: !8826, file: !8556, line: 258, column: 4)
!8826 = distinct !DILexicalBlock(scope: !8827, file: !8556, line: 258, column: 4)
!8827 = distinct !DILexicalBlock(scope: !8828, file: !8556, line: 258, column: 4)
!8828 = distinct !DILexicalBlock(scope: !8819, file: !8556, line: 256, column: 50)
!8829 = !DILocation(line: 259, column: 24, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8828, file: !8556, line: 259, column: 8)
!8831 = !DILocation(line: 259, column: 8, scope: !8828)
!8832 = !DILocation(line: 261, column: 15, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8830, file: !8556, line: 259, column: 30)
!8834 = !DILocation(line: 262, column: 4, scope: !8833)
!8835 = !DILocation(line: 265, column: 12, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8762, file: !8556, line: 265, column: 6)
!8837 = !DILocation(line: 265, column: 17, scope: !8836)
!8838 = !DILocation(line: 265, column: 42, scope: !8836)
!8839 = !DILocation(line: 265, column: 6, scope: !8762)
!8840 = !DILocation(line: 266, column: 3, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8842, file: !8556, line: 266, column: 3)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !8556, line: 266, column: 3)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !8556, line: 266, column: 3)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !8556, line: 266, column: 3)
!8845 = distinct !DILexicalBlock(scope: !8836, file: !8556, line: 265, column: 48)
!8846 = !DILocation(line: 267, column: 2, scope: !8845)
!8847 = !DILocation(line: 288, column: 12, scope: !8776)
!8848 = !DILocation(line: 288, column: 17, scope: !8776)
!8849 = !DILocation(line: 288, column: 41, scope: !8776)
!8850 = !DILocation(line: 289, column: 9, scope: !8776)
!8851 = !DILocation(line: 289, column: 14, scope: !8776)
!8852 = !DILocation(line: 288, column: 6, scope: !8762)
!8853 = !DILocation(line: 308, column: 12, scope: !8774)
!8854 = !DILocation(line: 308, column: 17, scope: !8774)
!8855 = !DILocation(line: 308, column: 7, scope: !8775)
!8856 = !DILocation(line: 310, column: 6, scope: !8773)
!8857 = !DILocation(line: 309, column: 29, scope: !8773)
!8858 = !DILocation(line: 0, scope: !8773)
!8859 = !DILocation(line: 312, column: 8, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8773, file: !8556, line: 312, column: 8)
!8861 = !DILocation(line: 312, column: 8, scope: !8773)
!8862 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8863, file: !8280, line: 1099, type: !208)
!8863 = distinct !DISubprogram(name: "__set_PSP", scope: !8280, file: !8280, line: 1099, type: !6820, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !8864)
!8864 = !{!8862}
!8865 = !DILocation(line: 0, scope: !8863, inlinedAt: !8866)
!8866 = distinct !DILocation(line: 338, column: 5, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8860, file: !8556, line: 312, column: 23)
!8868 = !DILocation(line: 1101, column: 3, scope: !8863, inlinedAt: !8866)
!8869 = !{i64 2477933}
!8870 = !DILocation(line: 341, column: 4, scope: !8867)
!8871 = !DILocation(line: 366, column: 12, scope: !8762)
!8872 = !DILocation(line: 369, column: 15, scope: !8762)
!8873 = !DILocation(line: 371, column: 2, scope: !8762)
!8874 = distinct !DISubprogram(name: "bus_fault", scope: !8556, file: !8556, line: 383, type: !8875, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !8877)
!8875 = !DISubroutineType(types: !8876)
!8876 = !{!125, !2969, !125, !8623}
!8877 = !{!8878, !8879, !8880, !8881, !8882}
!8878 = !DILocalVariable(name: "esf", arg: 1, scope: !8874, file: !8556, line: 383, type: !2969)
!8879 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8874, file: !8556, line: 383, type: !125)
!8880 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8874, file: !8556, line: 383, type: !8623)
!8881 = !DILocalVariable(name: "reason", scope: !8874, file: !8556, line: 385, type: !208)
!8882 = !DILocalVariable(name: "bfar", scope: !8883, file: !8556, line: 405, type: !208)
!8883 = distinct !DILexicalBlock(scope: !8884, file: !8556, line: 395, column: 42)
!8884 = distinct !DILexicalBlock(scope: !8874, file: !8556, line: 395, column: 6)
!8885 = !DILocation(line: 0, scope: !8874)
!8886 = !DILocation(line: 387, column: 2, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !8556, line: 387, column: 2)
!8888 = distinct !DILexicalBlock(scope: !8889, file: !8556, line: 387, column: 2)
!8889 = distinct !DILexicalBlock(scope: !8890, file: !8556, line: 387, column: 2)
!8890 = distinct !DILexicalBlock(scope: !8874, file: !8556, line: 387, column: 2)
!8891 = !DILocation(line: 389, column: 11, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8874, file: !8556, line: 389, column: 6)
!8893 = !DILocation(line: 389, column: 16, scope: !8892)
!8894 = !DILocation(line: 389, column: 6, scope: !8874)
!8895 = !DILocation(line: 390, column: 3, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8897, file: !8556, line: 390, column: 3)
!8897 = distinct !DILexicalBlock(scope: !8898, file: !8556, line: 390, column: 3)
!8898 = distinct !DILexicalBlock(scope: !8899, file: !8556, line: 390, column: 3)
!8899 = distinct !DILexicalBlock(scope: !8900, file: !8556, line: 390, column: 3)
!8900 = distinct !DILexicalBlock(scope: !8892, file: !8556, line: 389, column: 39)
!8901 = !DILocation(line: 391, column: 2, scope: !8900)
!8902 = !DILocation(line: 392, column: 11, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8874, file: !8556, line: 392, column: 6)
!8904 = !DILocation(line: 392, column: 16, scope: !8903)
!8905 = !DILocation(line: 392, column: 6, scope: !8874)
!8906 = !DILocation(line: 393, column: 3, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8908, file: !8556, line: 393, column: 3)
!8908 = distinct !DILexicalBlock(scope: !8909, file: !8556, line: 393, column: 3)
!8909 = distinct !DILexicalBlock(scope: !8910, file: !8556, line: 393, column: 3)
!8910 = distinct !DILexicalBlock(scope: !8911, file: !8556, line: 393, column: 3)
!8911 = distinct !DILexicalBlock(scope: !8903, file: !8556, line: 392, column: 41)
!8912 = !DILocation(line: 394, column: 2, scope: !8911)
!8913 = !DILocation(line: 395, column: 11, scope: !8884)
!8914 = !DILocation(line: 395, column: 16, scope: !8884)
!8915 = !DILocation(line: 395, column: 6, scope: !8874)
!8916 = !DILocation(line: 396, column: 3, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8918, file: !8556, line: 396, column: 3)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !8556, line: 396, column: 3)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !8556, line: 396, column: 3)
!8920 = distinct !DILexicalBlock(scope: !8883, file: !8556, line: 396, column: 3)
!8921 = !DILocation(line: 405, column: 3, scope: !8883)
!8922 = !DILocation(line: 0, scope: !8883)
!8923 = !DILocation(line: 407, column: 13, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8883, file: !8556, line: 407, column: 7)
!8925 = !DILocation(line: 407, column: 18, scope: !8924)
!8926 = !DILocation(line: 407, column: 44, scope: !8924)
!8927 = !DILocation(line: 407, column: 7, scope: !8883)
!8928 = !DILocation(line: 408, column: 4, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8930, file: !8556, line: 408, column: 4)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !8556, line: 408, column: 4)
!8931 = distinct !DILexicalBlock(scope: !8932, file: !8556, line: 408, column: 4)
!8932 = distinct !DILexicalBlock(scope: !8933, file: !8556, line: 408, column: 4)
!8933 = distinct !DILexicalBlock(scope: !8924, file: !8556, line: 407, column: 50)
!8934 = !DILocation(line: 409, column: 24, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8933, file: !8556, line: 409, column: 8)
!8936 = !DILocation(line: 409, column: 8, scope: !8933)
!8937 = !DILocation(line: 411, column: 15, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8935, file: !8556, line: 409, column: 30)
!8939 = !DILocation(line: 412, column: 4, scope: !8938)
!8940 = !DILocation(line: 415, column: 11, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8874, file: !8556, line: 415, column: 6)
!8942 = !DILocation(line: 415, column: 16, scope: !8941)
!8943 = !DILocation(line: 415, column: 6, scope: !8874)
!8944 = !DILocation(line: 416, column: 3, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8946, file: !8556, line: 416, column: 3)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !8556, line: 416, column: 3)
!8947 = distinct !DILexicalBlock(scope: !8948, file: !8556, line: 416, column: 3)
!8948 = distinct !DILexicalBlock(scope: !8949, file: !8556, line: 416, column: 3)
!8949 = distinct !DILexicalBlock(scope: !8941, file: !8556, line: 415, column: 44)
!8950 = !DILocation(line: 417, column: 2, scope: !8949)
!8951 = !DILocation(line: 418, column: 12, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8874, file: !8556, line: 418, column: 6)
!8953 = !DILocation(line: 418, column: 17, scope: !8952)
!8954 = !DILocation(line: 418, column: 41, scope: !8952)
!8955 = !DILocation(line: 418, column: 6, scope: !8874)
!8956 = !DILocation(line: 419, column: 3, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8958, file: !8556, line: 419, column: 3)
!8958 = distinct !DILexicalBlock(scope: !8959, file: !8556, line: 419, column: 3)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !8556, line: 419, column: 3)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !8556, line: 419, column: 3)
!8961 = distinct !DILexicalBlock(scope: !8952, file: !8556, line: 418, column: 47)
!8962 = !DILocation(line: 421, column: 2, scope: !8961)
!8963 = !DILocation(line: 524, column: 12, scope: !8874)
!8964 = !DILocation(line: 526, column: 15, scope: !8874)
!8965 = !DILocation(line: 528, column: 2, scope: !8874)
!8966 = distinct !DISubprogram(name: "usage_fault", scope: !8556, file: !8556, line: 539, type: !8967, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !8971)
!8967 = !DISubroutineType(types: !8968)
!8968 = !{!208, !8969}
!8969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8970, size: 32)
!8970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2970)
!8971 = !{!8972, !8973}
!8972 = !DILocalVariable(name: "esf", arg: 1, scope: !8966, file: !8556, line: 539, type: !8969)
!8973 = !DILocalVariable(name: "reason", scope: !8966, file: !8556, line: 541, type: !208)
!8974 = !DILocation(line: 0, scope: !8966)
!8975 = !DILocation(line: 543, column: 2, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8977, file: !8556, line: 543, column: 2)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !8556, line: 543, column: 2)
!8978 = distinct !DILexicalBlock(scope: !8979, file: !8556, line: 543, column: 2)
!8979 = distinct !DILexicalBlock(scope: !8966, file: !8556, line: 543, column: 2)
!8980 = !DILocation(line: 546, column: 12, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8966, file: !8556, line: 546, column: 6)
!8982 = !DILocation(line: 546, column: 17, scope: !8981)
!8983 = !DILocation(line: 546, column: 43, scope: !8981)
!8984 = !DILocation(line: 546, column: 6, scope: !8966)
!8985 = !DILocation(line: 547, column: 3, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !8556, line: 547, column: 3)
!8987 = distinct !DILexicalBlock(scope: !8988, file: !8556, line: 547, column: 3)
!8988 = distinct !DILexicalBlock(scope: !8989, file: !8556, line: 547, column: 3)
!8989 = distinct !DILexicalBlock(scope: !8990, file: !8556, line: 547, column: 3)
!8990 = distinct !DILexicalBlock(scope: !8981, file: !8556, line: 546, column: 49)
!8991 = !DILocation(line: 548, column: 2, scope: !8990)
!8992 = !DILocation(line: 549, column: 12, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8966, file: !8556, line: 549, column: 6)
!8994 = !DILocation(line: 549, column: 17, scope: !8993)
!8995 = !DILocation(line: 549, column: 43, scope: !8993)
!8996 = !DILocation(line: 549, column: 6, scope: !8966)
!8997 = !DILocation(line: 550, column: 3, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8999, file: !8556, line: 550, column: 3)
!8999 = distinct !DILexicalBlock(scope: !9000, file: !8556, line: 550, column: 3)
!9000 = distinct !DILexicalBlock(scope: !9001, file: !8556, line: 550, column: 3)
!9001 = distinct !DILexicalBlock(scope: !9002, file: !8556, line: 550, column: 3)
!9002 = distinct !DILexicalBlock(scope: !8993, file: !8556, line: 549, column: 49)
!9003 = !DILocation(line: 551, column: 2, scope: !9002)
!9004 = !DILocation(line: 567, column: 12, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8966, file: !8556, line: 567, column: 6)
!9006 = !DILocation(line: 567, column: 17, scope: !9005)
!9007 = !DILocation(line: 567, column: 38, scope: !9005)
!9008 = !DILocation(line: 567, column: 6, scope: !8966)
!9009 = !DILocation(line: 568, column: 3, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9011, file: !8556, line: 568, column: 3)
!9011 = distinct !DILexicalBlock(scope: !9012, file: !8556, line: 568, column: 3)
!9012 = distinct !DILexicalBlock(scope: !9013, file: !8556, line: 568, column: 3)
!9013 = distinct !DILexicalBlock(scope: !9014, file: !8556, line: 568, column: 3)
!9014 = distinct !DILexicalBlock(scope: !9005, file: !8556, line: 567, column: 44)
!9015 = !DILocation(line: 569, column: 2, scope: !9014)
!9016 = !DILocation(line: 570, column: 12, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8966, file: !8556, line: 570, column: 6)
!9018 = !DILocation(line: 570, column: 17, scope: !9017)
!9019 = !DILocation(line: 570, column: 39, scope: !9017)
!9020 = !DILocation(line: 570, column: 6, scope: !8966)
!9021 = !DILocation(line: 571, column: 3, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9023, file: !8556, line: 571, column: 3)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !8556, line: 571, column: 3)
!9024 = distinct !DILexicalBlock(scope: !9025, file: !8556, line: 571, column: 3)
!9025 = distinct !DILexicalBlock(scope: !9026, file: !8556, line: 571, column: 3)
!9026 = distinct !DILexicalBlock(scope: !9017, file: !8556, line: 570, column: 45)
!9027 = !DILocation(line: 572, column: 2, scope: !9026)
!9028 = !DILocation(line: 573, column: 12, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !8966, file: !8556, line: 573, column: 6)
!9030 = !DILocation(line: 573, column: 17, scope: !9029)
!9031 = !DILocation(line: 573, column: 42, scope: !9029)
!9032 = !DILocation(line: 573, column: 6, scope: !8966)
!9033 = !DILocation(line: 574, column: 3, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !8556, line: 574, column: 3)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !8556, line: 574, column: 3)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !8556, line: 574, column: 3)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !8556, line: 574, column: 3)
!9038 = distinct !DILexicalBlock(scope: !9029, file: !8556, line: 573, column: 48)
!9039 = !DILocation(line: 575, column: 2, scope: !9038)
!9040 = !DILocation(line: 576, column: 12, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !8966, file: !8556, line: 576, column: 6)
!9042 = !DILocation(line: 576, column: 17, scope: !9041)
!9043 = !DILocation(line: 576, column: 44, scope: !9041)
!9044 = !DILocation(line: 576, column: 6, scope: !8966)
!9045 = !DILocation(line: 577, column: 3, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !8556, line: 577, column: 3)
!9047 = distinct !DILexicalBlock(scope: !9048, file: !8556, line: 577, column: 3)
!9048 = distinct !DILexicalBlock(scope: !9049, file: !8556, line: 577, column: 3)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !8556, line: 577, column: 3)
!9050 = distinct !DILexicalBlock(scope: !9041, file: !8556, line: 576, column: 50)
!9051 = !DILocation(line: 578, column: 2, scope: !9050)
!9052 = !DILocation(line: 581, column: 12, scope: !8966)
!9053 = !DILocation(line: 583, column: 2, scope: !8966)
!9054 = distinct !DISubprogram(name: "debug_monitor", scope: !8556, file: !8556, line: 632, type: !9055, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !9057)
!9055 = !DISubroutineType(types: !9056)
!9056 = !{null, !2969, !8623}
!9057 = !{!9058, !9059}
!9058 = !DILocalVariable(name: "esf", arg: 1, scope: !9054, file: !8556, line: 632, type: !2969)
!9059 = !DILocalVariable(name: "recoverable", arg: 2, scope: !9054, file: !8556, line: 632, type: !8623)
!9060 = !DILocation(line: 0, scope: !9054)
!9061 = !DILocation(line: 634, column: 15, scope: !9054)
!9062 = !DILocation(line: 636, column: 2, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9064, file: !8556, line: 636, column: 2)
!9064 = distinct !DILexicalBlock(scope: !9065, file: !8556, line: 636, column: 2)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !8556, line: 636, column: 2)
!9066 = distinct !DILexicalBlock(scope: !9054, file: !8556, line: 636, column: 2)
!9067 = !DILocation(line: 652, column: 1, scope: !9054)
!9068 = distinct !DISubprogram(name: "reserved_exception", scope: !8556, file: !8556, line: 776, type: !9069, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !9071)
!9069 = !DISubroutineType(types: !9070)
!9070 = !{null, !8969, !125}
!9071 = !{!9072, !9073}
!9072 = !DILocalVariable(name: "esf", arg: 1, scope: !9068, file: !8556, line: 776, type: !8969)
!9073 = !DILocalVariable(name: "fault", arg: 2, scope: !9068, file: !8556, line: 776, type: !125)
!9074 = !DILocation(line: 0, scope: !9068)
!9075 = !DILocation(line: 780, column: 2, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !8556, line: 780, column: 2)
!9077 = distinct !DILexicalBlock(scope: !9078, file: !8556, line: 780, column: 2)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !8556, line: 780, column: 2)
!9079 = distinct !DILexicalBlock(scope: !9068, file: !8556, line: 780, column: 2)
!9080 = !DILocation(line: 783, column: 1, scope: !9068)
!9081 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8556, file: !8556, line: 658, type: !9082, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !9084)
!9082 = !DISubroutineType(types: !9083)
!9083 = !{!153, !2969}
!9084 = !{!9085, !9086, !9087}
!9085 = !DILocalVariable(name: "esf", arg: 1, scope: !9081, file: !8556, line: 658, type: !2969)
!9086 = !DILocalVariable(name: "ret_addr", scope: !9081, file: !8556, line: 660, type: !3012)
!9087 = !DILocalVariable(name: "fault_insn", scope: !9081, file: !8556, line: 686, type: !227)
!9088 = !DILocation(line: 0, scope: !9081)
!9089 = !DILocation(line: 660, column: 46, scope: !9081)
!9090 = !DILocation(line: 660, column: 23, scope: !9081)
!9091 = !DILocation(line: 682, column: 11, scope: !9081)
!9092 = !DILocation(line: 271, column: 3, scope: !9093, inlinedAt: !9094)
!9093 = distinct !DISubprogram(name: "__DSB", scope: !8280, file: !8280, line: 269, type: !3274, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !652)
!9094 = distinct !DILocation(line: 683, column: 2, scope: !9081)
!9095 = !{i64 2454068}
!9096 = !DILocation(line: 260, column: 3, scope: !9097, inlinedAt: !9098)
!9097 = distinct !DISubprogram(name: "__ISB", scope: !8280, file: !8280, line: 258, type: !3274, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !652)
!9098 = distinct !DILocation(line: 684, column: 2, scope: !9081)
!9099 = !{i64 2453785}
!9100 = !DILocation(line: 686, column: 35, scope: !9081)
!9101 = !DILocation(line: 686, column: 24, scope: !9081)
!9102 = !DILocation(line: 688, column: 11, scope: !9081)
!9103 = !DILocation(line: 271, column: 3, scope: !9093, inlinedAt: !9104)
!9104 = distinct !DILocation(line: 689, column: 2, scope: !9081)
!9105 = !DILocation(line: 260, column: 3, scope: !9097, inlinedAt: !9106)
!9106 = distinct !DILocation(line: 690, column: 2, scope: !9081)
!9107 = !DILocation(line: 693, column: 45, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9081, file: !8556, line: 693, column: 6)
!9109 = !DILocation(line: 699, column: 1, scope: !9081)
!9110 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8556, file: !8556, line: 1107, type: !3274, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !652)
!9111 = !DILocation(line: 1111, column: 11, scope: !9110)
!9112 = !DILocation(line: 1136, column: 1, scope: !9110)
!9113 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !9114, file: !9114, line: 26, type: !3274, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !9115)
!9114 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9115 = !{!9116}
!9116 = !DILocalVariable(name: "irq", scope: !9113, file: !9114, line: 28, type: !125)
!9117 = !DILocation(line: 0, scope: !9113)
!9118 = !DILocation(line: 30, column: 2, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9113, file: !9114, line: 30, column: 2)
!9120 = !DILocation(line: 31, column: 3, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9122, file: !9114, line: 30, column: 39)
!9122 = distinct !DILexicalBlock(scope: !9119, file: !9114, line: 30, column: 2)
!9123 = !DILocation(line: 30, column: 35, scope: !9122)
!9124 = !DILocation(line: 30, column: 13, scope: !9122)
!9125 = distinct !{!9125, !9118, !9126}
!9126 = !DILocation(line: 32, column: 2, scope: !9119)
!9127 = !DILocation(line: 33, column: 1, scope: !9113)
!9128 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !693, file: !693, line: 1638, type: !8314, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3013, retainedNodes: !9129)
!9129 = !{!9130, !9131}
!9130 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9128, file: !693, line: 1638, type: !1015)
!9131 = !DILocalVariable(name: "priority", arg: 2, scope: !9128, file: !693, line: 1638, type: !208)
!9132 = !DILocation(line: 0, scope: !9128)
!9133 = !DILocation(line: 1640, column: 7, scope: !9128)
!9134 = !DILocation(line: 0, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9128, file: !693, line: 1640, column: 7)
!9136 = !DILocation(line: 1648, column: 1, scope: !9128)
!9137 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !9138, file: !9138, line: 27, type: !9139, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !9242)
!9138 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9139 = !DISubroutineType(types: !9140)
!9140 = !{null, !9141}
!9141 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !544, line: 347, baseType: !9142)
!9142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9143, size: 32)
!9143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !544, line: 245, size: 1024, elements: !9144)
!9144 = !{!9145, !9203, !9215, !9216, !9217, !9218, !9224, !9237}
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9143, file: !544, line: 247, baseType: !9146, size: 384)
!9146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !544, line: 57, size: 384, elements: !9147)
!9147 = !{!9148, !9172, !9179, !9180, !9181, !9190, !9191, !9192}
!9148 = !DIDerivedType(tag: DW_TAG_member, scope: !9146, file: !544, line: 60, baseType: !9149, size: 64)
!9149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9146, file: !544, line: 60, size: 64, elements: !9150)
!9150 = !{!9151, !9166}
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9149, file: !544, line: 61, baseType: !9152, size: 64)
!9152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !554, line: 49, baseType: !9153)
!9153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !554, line: 37, size: 64, elements: !9154)
!9154 = !{!9155, !9161}
!9155 = !DIDerivedType(tag: DW_TAG_member, scope: !9153, file: !554, line: 38, baseType: !9156, size: 32)
!9156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9153, file: !554, line: 38, size: 32, elements: !9157)
!9157 = !{!9158, !9160}
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9156, file: !554, line: 39, baseType: !9159, size: 32)
!9159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9153, size: 32)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9156, file: !554, line: 40, baseType: !9159, size: 32)
!9161 = !DIDerivedType(tag: DW_TAG_member, scope: !9153, file: !554, line: 42, baseType: !9162, size: 32, offset: 32)
!9162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9153, file: !554, line: 42, size: 32, elements: !9163)
!9163 = !{!9164, !9165}
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9162, file: !554, line: 43, baseType: !9159, size: 32)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9162, file: !554, line: 44, baseType: !9159, size: 32)
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9149, file: !544, line: 62, baseType: !9167, size: 64)
!9167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !570, line: 49, size: 64, elements: !9168)
!9168 = !{!9169}
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9167, file: !570, line: 50, baseType: !9170, size: 64)
!9170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9171, size: 64, elements: !575)
!9171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9167, size: 32)
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9146, file: !544, line: 68, baseType: !9173, size: 32, offset: 64)
!9173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9174, size: 32)
!9174 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !580, line: 233, baseType: !9175)
!9175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 231, size: 64, elements: !9176)
!9176 = !{!9177}
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9175, file: !580, line: 232, baseType: !9178, size: 64)
!9178 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !554, line: 48, baseType: !9153)
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9146, file: !544, line: 71, baseType: !150, size: 8, offset: 96)
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9146, file: !544, line: 74, baseType: !150, size: 8, offset: 104)
!9181 = !DIDerivedType(tag: DW_TAG_member, scope: !9146, file: !544, line: 90, baseType: !9182, size: 16, offset: 112)
!9182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9146, file: !544, line: 90, size: 16, elements: !9183)
!9183 = !{!9184, !9189}
!9184 = !DIDerivedType(tag: DW_TAG_member, scope: !9182, file: !544, line: 91, baseType: !9185, size: 16)
!9185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9182, file: !544, line: 91, size: 16, elements: !9186)
!9186 = !{!9187, !9188}
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9185, file: !544, line: 96, baseType: !594, size: 8)
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9185, file: !544, line: 97, baseType: !150, size: 8, offset: 8)
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9182, file: !544, line: 100, baseType: !227, size: 16)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9146, file: !544, line: 107, baseType: !208, size: 32, offset: 128)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9146, file: !544, line: 127, baseType: !124, size: 32, offset: 160)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9146, file: !544, line: 131, baseType: !9193, size: 192, offset: 192)
!9193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !580, line: 244, size: 192, elements: !9194)
!9194 = !{!9195, !9196, !9202}
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9193, file: !580, line: 245, baseType: !9152, size: 64)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9193, file: !580, line: 246, baseType: !9197, size: 32, offset: 64)
!9197 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !580, line: 242, baseType: !9198)
!9198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9199, size: 32)
!9199 = !DISubroutineType(types: !9200)
!9200 = !{null, !9201}
!9201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9193, size: 32)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9193, file: !580, line: 249, baseType: !611, size: 64, offset: 128)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9143, file: !544, line: 250, baseType: !9204, size: 288, offset: 384)
!9204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !614, line: 25, size: 288, elements: !9205)
!9205 = !{!9206, !9207, !9208, !9209, !9210, !9211, !9212, !9213, !9214}
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9204, file: !614, line: 26, baseType: !208, size: 32)
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9204, file: !614, line: 27, baseType: !208, size: 32, offset: 32)
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9204, file: !614, line: 28, baseType: !208, size: 32, offset: 64)
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9204, file: !614, line: 29, baseType: !208, size: 32, offset: 96)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9204, file: !614, line: 30, baseType: !208, size: 32, offset: 128)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9204, file: !614, line: 31, baseType: !208, size: 32, offset: 160)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9204, file: !614, line: 32, baseType: !208, size: 32, offset: 192)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9204, file: !614, line: 33, baseType: !208, size: 32, offset: 224)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9204, file: !614, line: 34, baseType: !208, size: 32, offset: 256)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9143, file: !544, line: 253, baseType: !124, size: 32, offset: 672)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9143, file: !544, line: 256, baseType: !9174, size: 64, offset: 704)
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9143, file: !544, line: 294, baseType: !125, size: 32, offset: 768)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9143, file: !544, line: 300, baseType: !9219, size: 96, offset: 800)
!9219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !544, line: 149, size: 96, elements: !9220)
!9220 = !{!9221, !9222, !9223}
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9219, file: !544, line: 153, baseType: !22, size: 32)
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9219, file: !544, line: 162, baseType: !272, size: 32, offset: 32)
!9223 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9219, file: !544, line: 168, baseType: !272, size: 32, offset: 64)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9143, file: !544, line: 325, baseType: !9225, size: 32, offset: 896)
!9225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9226, size: 32)
!9226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !637, line: 5073, size: 160, elements: !9227)
!9227 = !{!9228, !9234, !9235}
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9226, file: !637, line: 5074, baseType: !9229, size: 96)
!9229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !641, line: 56, size: 96, elements: !9230)
!9230 = !{!9231, !9232, !9233}
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9229, file: !641, line: 57, baseType: !644, size: 32)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9229, file: !641, line: 58, baseType: !124, size: 32, offset: 32)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9229, file: !641, line: 59, baseType: !272, size: 32, offset: 64)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9226, file: !637, line: 5075, baseType: !9174, size: 64, offset: 96)
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9226, file: !637, line: 5076, baseType: !9236, offset: 160)
!9236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !651, line: 43, elements: !652)
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9143, file: !544, line: 343, baseType: !9238, size: 64, offset: 928)
!9238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !614, line: 60, size: 64, elements: !9239)
!9239 = !{!9240, !9241}
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9238, file: !614, line: 63, baseType: !208, size: 32)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9238, file: !614, line: 66, baseType: !208, size: 32, offset: 32)
!9242 = !{!9243}
!9243 = !DILocalVariable(name: "thread", arg: 1, scope: !9137, file: !9138, line: 27, type: !9141)
!9244 = !DILocation(line: 0, scope: !9137)
!9245 = !DILocation(line: 29, column: 6, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9137, file: !9138, line: 29, column: 6)
!9247 = !DILocation(line: 29, column: 15, scope: !9246)
!9248 = !DILocation(line: 29, column: 6, scope: !9137)
!9249 = !DILocation(line: 1031, column: 3, scope: !9250, inlinedAt: !9255)
!9250 = distinct !DISubprogram(name: "__get_IPSR", scope: !8280, file: !8280, line: 1027, type: !9251, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !9253)
!9251 = !DISubroutineType(types: !9252)
!9252 = !{!208}
!9253 = !{!9254}
!9254 = !DILocalVariable(name: "result", scope: !9250, file: !8280, line: 1029, type: !208)
!9255 = distinct !DILocation(line: 48, column: 10, scope: !9256, inlinedAt: !9260)
!9256 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9257, file: !9257, line: 46, type: !9258, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !652)
!9257 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9258 = !DISubroutineType(types: !9259)
!9259 = !{!153}
!9260 = distinct !DILocation(line: 30, column: 7, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9262, file: !9138, line: 30, column: 7)
!9262 = distinct !DILexicalBlock(scope: !9246, file: !9138, line: 29, column: 26)
!9263 = !{i64 2442916}
!9264 = !DILocation(line: 0, scope: !9250, inlinedAt: !9255)
!9265 = !DILocation(line: 48, column: 9, scope: !9256, inlinedAt: !9260)
!9266 = !DILocation(line: 30, column: 7, scope: !9262)
!9267 = !DILocation(line: 42, column: 14, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9261, file: !9138, line: 30, column: 25)
!9269 = !DILocation(line: 48, column: 15, scope: !9268)
!9270 = !DILocation(line: 49, column: 3, scope: !9268)
!9271 = !DILocation(line: 52, column: 2, scope: !9137)
!9272 = !DILocation(line: 53, column: 1, scope: !9137)
!9273 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !539, file: !539, line: 127, type: !3274, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !652)
!9274 = !DILocation(line: 134, column: 2, scope: !9273)
!9275 = !DILocation(line: 156, column: 1, scope: !9273)
!9276 = !DILocation(line: 0, scope: !538)
!9277 = !DILocation(line: 289, column: 36, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !538, file: !539, line: 285, column: 2)
!9279 = !DILocation(line: 289, column: 42, scope: !9278)
!9280 = !DILocation(line: 300, column: 36, scope: !538)
!9281 = !DILocation(line: 301, column: 35, scope: !538)
!9282 = !DILocation(line: 302, column: 37, scope: !538)
!9283 = !DILocation(line: 311, column: 2, scope: !538)
!9284 = !DILocation(line: 316, column: 1, scope: !538)
!9285 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !721, file: !721, line: 180, type: !3274, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !652)
!9286 = !DILocation(line: 188, column: 12, scope: !9285)
!9287 = !DILocation(line: 271, column: 3, scope: !9288, inlinedAt: !9289)
!9288 = distinct !DISubprogram(name: "__DSB", scope: !8280, file: !8280, line: 269, type: !3274, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !652)
!9289 = distinct !DILocation(line: 192, column: 2, scope: !9285)
!9290 = !{i64 2598767}
!9291 = !DILocation(line: 260, column: 3, scope: !9292, inlinedAt: !9293)
!9292 = distinct !DISubprogram(name: "__ISB", scope: !8280, file: !8280, line: 258, type: !3274, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !652)
!9293 = distinct !DILocation(line: 193, column: 2, scope: !9285)
!9294 = !{i64 2598484}
!9295 = !DILocation(line: 194, column: 1, scope: !9285)
!9296 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !721, file: !721, line: 199, type: !3274, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !652)
!9297 = !DILocation(line: 282, column: 3, scope: !9298, inlinedAt: !9299)
!9298 = distinct !DISubprogram(name: "__DMB", scope: !8280, file: !8280, line: 280, type: !3274, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !652)
!9299 = distinct !DILocation(line: 202, column: 2, scope: !9296)
!9300 = !{i64 2599043}
!9301 = !DILocation(line: 205, column: 12, scope: !9296)
!9302 = !DILocation(line: 206, column: 1, scope: !9296)
!9303 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !721, file: !721, line: 275, type: !9304, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9317)
!9304 = !DISubroutineType(types: !9305)
!9305 = !{null, !9306, !323, !8523, !8523}
!9306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9307, size: 32)
!9307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9308)
!9308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !665, line: 52, size: 96, elements: !9309)
!9309 = !{!9310, !9311, !9312}
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9308, file: !665, line: 53, baseType: !22, size: 32)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9308, file: !665, line: 54, baseType: !272, size: 32, offset: 32)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9308, file: !665, line: 55, baseType: !9313, size: 32, offset: 64)
!9313 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !671, line: 151, baseType: !9314)
!9314 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !671, line: 149, size: 32, elements: !9315)
!9315 = !{!9316}
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !9314, file: !671, line: 150, baseType: !208, size: 32)
!9317 = !{!9318, !9319, !9320, !9321}
!9318 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9303, file: !721, line: 276, type: !9306)
!9319 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9303, file: !721, line: 276, type: !323)
!9320 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !9303, file: !721, line: 277, type: !8523)
!9321 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9303, file: !721, line: 277, type: !8523)
!9322 = !DILocation(line: 0, scope: !9303)
!9323 = !DILocation(line: 279, column: 6, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9303, file: !721, line: 279, column: 6)
!9325 = !DILocation(line: 285, column: 1, scope: !9303)
!9326 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !9327, file: !9327, line: 220, type: !9328, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9330)
!9327 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9328 = !DISubroutineType(types: !9329)
!9329 = !{!125, !9306, !323, !8523, !8523}
!9330 = !{!9331, !9332, !9333, !9334, !9335}
!9331 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9326, file: !9327, line: 221, type: !9306)
!9332 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9326, file: !9327, line: 221, type: !323)
!9333 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !9326, file: !9327, line: 222, type: !8523)
!9334 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9326, file: !9327, line: 223, type: !8523)
!9335 = !DILocalVariable(name: "mpu_reg_index", scope: !9326, file: !9327, line: 225, type: !125)
!9336 = !DILocation(line: 0, scope: !9326)
!9337 = !DILocation(line: 225, column: 22, scope: !9326)
!9338 = !DILocation(line: 233, column: 18, scope: !9326)
!9339 = !DILocation(line: 236, column: 23, scope: !9326)
!9340 = !DILocation(line: 236, column: 21, scope: !9326)
!9341 = !DILocation(line: 238, column: 2, scope: !9326)
!9342 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !721, file: !721, line: 105, type: !9343, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9345)
!9343 = !DISubroutineType(types: !9344)
!9344 = !{!125, !9306, !150, !150, !153}
!9345 = !{!9346, !9347, !9348, !9349, !9350, !9351}
!9346 = !DILocalVariable(name: "regions", arg: 1, scope: !9342, file: !721, line: 106, type: !9306)
!9347 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9342, file: !721, line: 106, type: !150)
!9348 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !9342, file: !721, line: 106, type: !150)
!9349 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !9342, file: !721, line: 107, type: !153)
!9350 = !DILocalVariable(name: "i", scope: !9342, file: !721, line: 109, type: !125)
!9351 = !DILocalVariable(name: "reg_index", scope: !9342, file: !721, line: 110, type: !125)
!9352 = !DILocation(line: 0, scope: !9342)
!9353 = !DILocation(line: 110, column: 18, scope: !9342)
!9354 = !DILocation(line: 112, column: 16, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9356, file: !721, line: 112, column: 2)
!9356 = distinct !DILexicalBlock(scope: !9342, file: !721, line: 112, column: 2)
!9357 = !DILocation(line: 112, column: 2, scope: !9356)
!9358 = !DILocation(line: 113, column: 7, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9360, file: !721, line: 113, column: 7)
!9360 = distinct !DILexicalBlock(scope: !9355, file: !721, line: 112, column: 36)
!9361 = !DILocation(line: 113, column: 18, scope: !9359)
!9362 = !DILocation(line: 113, column: 23, scope: !9359)
!9363 = !DILocation(line: 113, column: 7, scope: !9360)
!9364 = !DILocation(line: 118, column: 23, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9360, file: !721, line: 118, column: 7)
!9366 = !DILocation(line: 119, column: 7, scope: !9365)
!9367 = !DILocation(line: 118, column: 7, scope: !9360)
!9368 = !DILocation(line: 120, column: 4, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !721, line: 120, column: 4)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !721, line: 120, column: 4)
!9371 = distinct !DILexicalBlock(scope: !9372, file: !721, line: 120, column: 4)
!9372 = distinct !DILexicalBlock(scope: !9373, file: !721, line: 120, column: 4)
!9373 = distinct !DILexicalBlock(scope: !9365, file: !721, line: 119, column: 45)
!9374 = !DILocation(line: 121, column: 4, scope: !9373)
!9375 = !DILocation(line: 124, column: 36, scope: !9360)
!9376 = !DILocation(line: 124, column: 15, scope: !9360)
!9377 = !DILocation(line: 126, column: 17, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9360, file: !721, line: 126, column: 7)
!9379 = !DILocation(line: 126, column: 7, scope: !9360)
!9380 = !DILocation(line: 131, column: 12, scope: !9360)
!9381 = !DILocation(line: 132, column: 2, scope: !9360)
!9382 = !DILocation(line: 112, column: 32, scope: !9355)
!9383 = distinct !{!9383, !9357, !9384}
!9384 = !DILocation(line: 132, column: 2, scope: !9356)
!9385 = !DILocation(line: 135, column: 1, scope: !9342)
!9386 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !9327, file: !9327, line: 63, type: !9387, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9389)
!9387 = !DISubroutineType(types: !9388)
!9388 = !{!125, !9306}
!9389 = !{!9390, !9391}
!9390 = !DILocalVariable(name: "part", arg: 1, scope: !9386, file: !9327, line: 63, type: !9306)
!9391 = !DILocalVariable(name: "partition_is_valid", scope: !9386, file: !9327, line: 70, type: !125)
!9392 = !DILocation(line: 0, scope: !9386)
!9393 = !DILocation(line: 71, column: 11, scope: !9386)
!9394 = !DILocation(line: 71, column: 37, scope: !9386)
!9395 = !{i32 0, i32 33}
!9396 = !DILocation(line: 72, column: 3, scope: !9386)
!9397 = !DILocation(line: 71, column: 30, scope: !9386)
!9398 = !DILocation(line: 75, column: 11, scope: !9386)
!9399 = !DILocation(line: 75, column: 17, scope: !9386)
!9400 = !DILocation(line: 75, column: 38, scope: !9386)
!9401 = !DILocation(line: 77, column: 2, scope: !9386)
!9402 = distinct !DISubprogram(name: "mpu_configure_region", scope: !721, file: !721, line: 79, type: !9403, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9405)
!9403 = !DISubroutineType(types: !9404)
!9404 = !{!125, !323, !9306}
!9405 = !{!9406, !9407, !9408}
!9406 = !DILocalVariable(name: "index", arg: 1, scope: !9402, file: !721, line: 79, type: !323)
!9407 = !DILocalVariable(name: "new_region", arg: 2, scope: !9402, file: !721, line: 80, type: !9306)
!9408 = !DILocalVariable(name: "region_conf", scope: !9402, file: !721, line: 82, type: !710)
!9409 = !DILocation(line: 0, scope: !9402)
!9410 = !DILocation(line: 82, column: 2, scope: !9402)
!9411 = !DILocation(line: 82, column: 24, scope: !9402)
!9412 = !DILocation(line: 87, column: 33, scope: !9402)
!9413 = !DILocation(line: 87, column: 14, scope: !9402)
!9414 = !DILocation(line: 87, column: 19, scope: !9402)
!9415 = !DILocation(line: 91, column: 55, scope: !9402)
!9416 = !DILocation(line: 92, column: 16, scope: !9402)
!9417 = !DILocation(line: 92, column: 53, scope: !9402)
!9418 = !DILocation(line: 91, column: 2, scope: !9402)
!9419 = !DILocation(line: 95, column: 9, scope: !9402)
!9420 = !DILocation(line: 97, column: 1, scope: !9402)
!9421 = !DILocation(line: 95, column: 2, scope: !9402)
!9422 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !9327, file: !9327, line: 113, type: !9423, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9428)
!9423 = !DISubroutineType(types: !9424)
!9424 = !{null, !9425, !9426, !208, !208}
!9425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 32)
!9426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9427, size: 32)
!9427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9313)
!9428 = !{!9429, !9430, !9431, !9432}
!9429 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9422, file: !9327, line: 114, type: !9425)
!9430 = !DILocalVariable(name: "attr", arg: 2, scope: !9422, file: !9327, line: 115, type: !9426)
!9431 = !DILocalVariable(name: "base", arg: 3, scope: !9422, file: !9327, line: 115, type: !208)
!9432 = !DILocalVariable(name: "size", arg: 4, scope: !9422, file: !9327, line: 115, type: !208)
!9433 = !DILocation(line: 0, scope: !9422)
!9434 = !DILocation(line: 127, column: 23, scope: !9422)
!9435 = !DILocation(line: 127, column: 35, scope: !9422)
!9436 = !DILocation(line: 127, column: 33, scope: !9422)
!9437 = !DILocation(line: 127, column: 10, scope: !9422)
!9438 = !DILocation(line: 127, column: 15, scope: !9422)
!9439 = !DILocation(line: 129, column: 1, scope: !9422)
!9440 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !721, file: !721, line: 57, type: !9441, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9443)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{!125, !323, !708}
!9443 = !{!9444, !9445}
!9444 = !DILocalVariable(name: "index", arg: 1, scope: !9440, file: !721, line: 57, type: !323)
!9445 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9440, file: !721, line: 58, type: !708)
!9446 = !DILocation(line: 0, scope: !9440)
!9447 = !DILocation(line: 61, column: 6, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9440, file: !721, line: 61, column: 6)
!9449 = !DILocation(line: 61, column: 12, scope: !9448)
!9450 = !DILocation(line: 61, column: 6, scope: !9440)
!9451 = !DILocation(line: 64, column: 3, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !721, line: 64, column: 3)
!9453 = distinct !DILexicalBlock(scope: !9454, file: !721, line: 64, column: 3)
!9454 = distinct !DILexicalBlock(scope: !9455, file: !721, line: 64, column: 3)
!9455 = distinct !DILexicalBlock(scope: !9456, file: !721, line: 64, column: 3)
!9456 = distinct !DILexicalBlock(scope: !9448, file: !721, line: 61, column: 40)
!9457 = !DILocation(line: 65, column: 3, scope: !9456)
!9458 = !DILocation(line: 71, column: 2, scope: !9440)
!9459 = !DILocation(line: 73, column: 2, scope: !9440)
!9460 = !DILocation(line: 74, column: 1, scope: !9440)
!9461 = distinct !DISubprogram(name: "region_init", scope: !9327, file: !9327, line: 29, type: !9462, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9464)
!9462 = !DISubroutineType(types: !9463)
!9463 = !{null, !8523, !708}
!9464 = !{!9465, !9466}
!9465 = !DILocalVariable(name: "index", arg: 1, scope: !9461, file: !9327, line: 29, type: !8523)
!9466 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9461, file: !9327, line: 30, type: !708)
!9467 = !DILocation(line: 0, scope: !9461)
!9468 = !DILocation(line: 33, column: 2, scope: !9461)
!9469 = !DILocation(line: 47, column: 28, scope: !9461)
!9470 = !DILocation(line: 47, column: 33, scope: !9461)
!9471 = !DILocation(line: 48, column: 26, scope: !9461)
!9472 = !DILocation(line: 47, column: 12, scope: !9461)
!9473 = !DILocation(line: 49, column: 32, scope: !9461)
!9474 = !DILocation(line: 49, column: 37, scope: !9461)
!9475 = !DILocation(line: 49, column: 12, scope: !9461)
!9476 = !DILocation(line: 53, column: 1, scope: !9461)
!9477 = distinct !DISubprogram(name: "set_region_number", scope: !9478, file: !9478, line: 32, type: !6820, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9479)
!9478 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9479 = !{!9480}
!9480 = !DILocalVariable(name: "index", arg: 1, scope: !9477, file: !9478, line: 32, type: !208)
!9481 = !DILocation(line: 0, scope: !9477)
!9482 = !DILocation(line: 34, column: 11, scope: !9477)
!9483 = !DILocation(line: 35, column: 1, scope: !9477)
!9484 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !9327, file: !9327, line: 88, type: !9485, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9487)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{!208, !208}
!9487 = !{!9488}
!9488 = !DILocalVariable(name: "size", arg: 1, scope: !9484, file: !9327, line: 88, type: !208)
!9489 = !DILocation(line: 0, scope: !9484)
!9490 = !DILocation(line: 91, column: 11, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9484, file: !9327, line: 91, column: 6)
!9492 = !DILocation(line: 91, column: 6, scope: !9484)
!9493 = !DILocation(line: 100, column: 11, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9484, file: !9327, line: 100, column: 6)
!9495 = !DILocation(line: 100, column: 6, scope: !9484)
!9496 = !DILocation(line: 104, column: 35, scope: !9484)
!9497 = !DILocation(line: 104, column: 16, scope: !9484)
!9498 = !DILocation(line: 104, column: 50, scope: !9484)
!9499 = !DILocation(line: 104, column: 72, scope: !9484)
!9500 = !DILocation(line: 104, column: 2, scope: !9484)
!9501 = !DILocation(line: 106, column: 1, scope: !9484)
!9502 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !721, file: !721, line: 307, type: !9503, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9505)
!9503 = !DISubroutineType(types: !9504)
!9504 = !{null, !9306, !150}
!9505 = !{!9506, !9507}
!9506 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9502, file: !721, line: 308, type: !9306)
!9507 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9502, file: !721, line: 308, type: !150)
!9508 = !DILocation(line: 0, scope: !9502)
!9509 = !DILocation(line: 310, column: 6, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9502, file: !721, line: 310, column: 6)
!9511 = !DILocation(line: 316, column: 1, scope: !9502)
!9512 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !9327, file: !9327, line: 249, type: !9513, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9515)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{!125, !9306, !150}
!9515 = !{!9516, !9517, !9518, !9519}
!9516 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9512, file: !9327, line: 250, type: !9306)
!9517 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9512, file: !9327, line: 250, type: !150)
!9518 = !DILocalVariable(name: "mpu_reg_index", scope: !9512, file: !9327, line: 252, type: !125)
!9519 = !DILocalVariable(name: "i", scope: !9520, file: !9327, line: 264, type: !125)
!9520 = distinct !DILexicalBlock(scope: !9521, file: !9327, line: 264, column: 3)
!9521 = distinct !DILexicalBlock(scope: !9522, file: !9327, line: 261, column: 32)
!9522 = distinct !DILexicalBlock(scope: !9512, file: !9327, line: 261, column: 6)
!9523 = !DILocation(line: 0, scope: !9512)
!9524 = !DILocation(line: 252, column: 22, scope: !9512)
!9525 = !DILocation(line: 258, column: 18, scope: !9512)
!9526 = !DILocation(line: 261, column: 20, scope: !9522)
!9527 = !DILocation(line: 261, column: 6, scope: !9512)
!9528 = !DILocation(line: 0, scope: !9520)
!9529 = !DILocation(line: 265, column: 4, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9531, file: !9327, line: 264, column: 59)
!9531 = distinct !DILexicalBlock(scope: !9520, file: !9327, line: 264, column: 3)
!9532 = !DILocation(line: 264, column: 55, scope: !9531)
!9533 = !DILocation(line: 264, column: 33, scope: !9531)
!9534 = !DILocation(line: 264, column: 3, scope: !9520)
!9535 = distinct !{!9535, !9534, !9536}
!9536 = !DILocation(line: 266, column: 3, scope: !9520)
!9537 = !DILocation(line: 269, column: 2, scope: !9512)
!9538 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9539, file: !9539, line: 218, type: !6820, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9540)
!9539 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9540 = !{!9541}
!9541 = !DILocalVariable(name: "rnr", arg: 1, scope: !9538, file: !9539, line: 218, type: !208)
!9542 = !DILocation(line: 0, scope: !9538)
!9543 = !DILocation(line: 220, column: 12, scope: !9538)
!9544 = !DILocation(line: 221, column: 13, scope: !9538)
!9545 = !DILocation(line: 222, column: 1, scope: !9538)
!9546 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !721, file: !721, line: 326, type: !9547, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !688, retainedNodes: !9549)
!9547 = !DISubroutineType(types: !9548)
!9548 = !{!125}
!9549 = !{!9550}
!9550 = !DILocalVariable(name: "r_index", scope: !9546, file: !721, line: 328, type: !208)
!9551 = !DILocation(line: 330, column: 17, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9546, file: !721, line: 330, column: 6)
!9553 = !DILocation(line: 330, column: 29, scope: !9552)
!9554 = !DILocation(line: 330, column: 6, scope: !9546)
!9555 = !DILocation(line: 347, column: 2, scope: !9546)
!9556 = !DILocation(line: 0, scope: !9546)
!9557 = !DILocation(line: 364, column: 29, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9559, file: !721, line: 364, column: 2)
!9559 = distinct !DILexicalBlock(scope: !9546, file: !721, line: 364, column: 2)
!9560 = !DILocation(line: 364, column: 2, scope: !9559)
!9561 = !DILocation(line: 365, column: 25, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9558, file: !721, line: 364, column: 66)
!9563 = !DILocation(line: 365, column: 3, scope: !9562)
!9564 = !DILocation(line: 364, column: 62, scope: !9558)
!9565 = distinct !{!9565, !9560, !9566}
!9566 = !DILocation(line: 366, column: 2, scope: !9559)
!9567 = !DILocation(line: 369, column: 23, scope: !9546)
!9568 = !DILocation(line: 369, column: 21, scope: !9546)
!9569 = !DILocation(line: 372, column: 2, scope: !9546)
!9570 = !DILocation(line: 443, column: 2, scope: !9546)
!9571 = !DILocation(line: 444, column: 1, scope: !9546)
!9572 = distinct !DISubprogram(name: "strcpy", scope: !9573, file: !9573, line: 20, type: !9574, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9578)
!9573 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9574 = !DISubroutineType(types: !9575)
!9575 = !{!393, !9576, !9577}
!9576 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !393)
!9577 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !140)
!9578 = !{!9579, !9580, !9581}
!9579 = !DILocalVariable(name: "d", arg: 1, scope: !9572, file: !9573, line: 20, type: !9576)
!9580 = !DILocalVariable(name: "s", arg: 2, scope: !9572, file: !9573, line: 20, type: !9577)
!9581 = !DILocalVariable(name: "dest", scope: !9572, file: !9573, line: 22, type: !393)
!9582 = !DILocation(line: 0, scope: !9572)
!9583 = !DILocation(line: 24, column: 9, scope: !9572)
!9584 = !DILocation(line: 24, column: 12, scope: !9572)
!9585 = !DILocation(line: 24, column: 2, scope: !9572)
!9586 = !DILocation(line: 25, column: 6, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9572, file: !9573, line: 24, column: 21)
!9588 = !DILocation(line: 26, column: 4, scope: !9587)
!9589 = !DILocation(line: 27, column: 4, scope: !9587)
!9590 = distinct !{!9590, !9585, !9591}
!9591 = !DILocation(line: 28, column: 2, scope: !9572)
!9592 = !DILocation(line: 30, column: 5, scope: !9572)
!9593 = !DILocation(line: 32, column: 2, scope: !9572)
!9594 = distinct !DISubprogram(name: "strncpy", scope: !9573, file: !9573, line: 42, type: !9595, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9597)
!9595 = !DISubroutineType(types: !9596)
!9596 = !{!393, !9576, !9577, !272}
!9597 = !{!9598, !9599, !9600, !9601}
!9598 = !DILocalVariable(name: "d", arg: 1, scope: !9594, file: !9573, line: 42, type: !9576)
!9599 = !DILocalVariable(name: "s", arg: 2, scope: !9594, file: !9573, line: 42, type: !9577)
!9600 = !DILocalVariable(name: "n", arg: 3, scope: !9594, file: !9573, line: 42, type: !272)
!9601 = !DILocalVariable(name: "dest", scope: !9594, file: !9573, line: 44, type: !393)
!9602 = !DILocation(line: 0, scope: !9594)
!9603 = !DILocation(line: 46, column: 12, scope: !9594)
!9604 = !DILocation(line: 46, column: 17, scope: !9594)
!9605 = !DILocation(line: 46, column: 20, scope: !9594)
!9606 = !DILocation(line: 46, column: 23, scope: !9594)
!9607 = !DILocation(line: 46, column: 2, scope: !9594)
!9608 = !DILocation(line: 47, column: 6, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9594, file: !9573, line: 46, column: 32)
!9610 = !DILocation(line: 48, column: 4, scope: !9609)
!9611 = !DILocation(line: 49, column: 4, scope: !9609)
!9612 = !DILocation(line: 50, column: 4, scope: !9609)
!9613 = distinct !{!9613, !9607, !9614}
!9614 = !DILocation(line: 51, column: 2, scope: !9594)
!9615 = !DILocation(line: 54, column: 6, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9594, file: !9573, line: 53, column: 16)
!9617 = !DILocation(line: 55, column: 4, scope: !9616)
!9618 = !DILocation(line: 56, column: 4, scope: !9616)
!9619 = !DILocation(line: 53, column: 11, scope: !9594)
!9620 = !DILocation(line: 53, column: 2, scope: !9594)
!9621 = distinct !{!9621, !9620, !9622}
!9622 = !DILocation(line: 57, column: 2, scope: !9594)
!9623 = !DILocation(line: 59, column: 2, scope: !9594)
!9624 = distinct !DISubprogram(name: "strchr", scope: !9573, file: !9573, line: 69, type: !9625, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9627)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{!393, !140, !125}
!9627 = !{!9628, !9629, !9630}
!9628 = !DILocalVariable(name: "s", arg: 1, scope: !9624, file: !9573, line: 69, type: !140)
!9629 = !DILocalVariable(name: "c", arg: 2, scope: !9624, file: !9573, line: 69, type: !125)
!9630 = !DILocalVariable(name: "tmp", scope: !9624, file: !9573, line: 71, type: !142)
!9631 = !DILocation(line: 0, scope: !9624)
!9632 = !DILocation(line: 73, column: 2, scope: !9624)
!9633 = !DILocation(line: 73, column: 10, scope: !9624)
!9634 = !DILocation(line: 73, column: 13, scope: !9624)
!9635 = !DILocation(line: 73, column: 21, scope: !9624)
!9636 = !DILocation(line: 74, column: 4, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9624, file: !9573, line: 73, column: 38)
!9638 = distinct !{!9638, !9632, !9639}
!9639 = !DILocation(line: 75, column: 2, scope: !9624)
!9640 = !DILocation(line: 77, column: 9, scope: !9624)
!9641 = !DILocation(line: 77, column: 2, scope: !9624)
!9642 = distinct !DISubprogram(name: "strrchr", scope: !9573, file: !9573, line: 87, type: !9625, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9643)
!9643 = !{!9644, !9645, !9646}
!9644 = !DILocalVariable(name: "s", arg: 1, scope: !9642, file: !9573, line: 87, type: !140)
!9645 = !DILocalVariable(name: "c", arg: 2, scope: !9642, file: !9573, line: 87, type: !125)
!9646 = !DILocalVariable(name: "match", scope: !9642, file: !9573, line: 89, type: !393)
!9647 = !DILocation(line: 0, scope: !9642)
!9648 = !DILocation(line: 91, column: 2, scope: !9642)
!9649 = !DILocation(line: 92, column: 7, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9651, file: !9573, line: 92, column: 7)
!9651 = distinct !DILexicalBlock(scope: !9642, file: !9573, line: 91, column: 5)
!9652 = !DILocation(line: 92, column: 10, scope: !9650)
!9653 = !DILocation(line: 92, column: 7, scope: !9651)
!9654 = !DILocation(line: 95, column: 13, scope: !9642)
!9655 = !DILocation(line: 95, column: 2, scope: !9651)
!9656 = distinct !{!9656, !9648, !9657}
!9657 = !DILocation(line: 95, column: 15, scope: !9642)
!9658 = !DILocation(line: 97, column: 2, scope: !9642)
!9659 = distinct !DISubprogram(name: "strlen", scope: !9573, file: !9573, line: 107, type: !9660, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9662)
!9660 = !DISubroutineType(types: !9661)
!9661 = !{!272, !140}
!9662 = !{!9663, !9664}
!9663 = !DILocalVariable(name: "s", arg: 1, scope: !9659, file: !9573, line: 107, type: !140)
!9664 = !DILocalVariable(name: "n", scope: !9659, file: !9573, line: 109, type: !272)
!9665 = !DILocation(line: 0, scope: !9659)
!9666 = !DILocation(line: 111, column: 9, scope: !9659)
!9667 = !DILocation(line: 111, column: 12, scope: !9659)
!9668 = !DILocation(line: 111, column: 2, scope: !9659)
!9669 = !DILocation(line: 112, column: 4, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9659, file: !9573, line: 111, column: 21)
!9671 = !DILocation(line: 113, column: 4, scope: !9670)
!9672 = distinct !{!9672, !9668, !9673}
!9673 = !DILocation(line: 114, column: 2, scope: !9659)
!9674 = !DILocation(line: 116, column: 2, scope: !9659)
!9675 = distinct !DISubprogram(name: "strnlen", scope: !9573, file: !9573, line: 126, type: !9676, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9678)
!9676 = !DISubroutineType(types: !9677)
!9677 = !{!272, !140, !272}
!9678 = !{!9679, !9680, !9681}
!9679 = !DILocalVariable(name: "s", arg: 1, scope: !9675, file: !9573, line: 126, type: !140)
!9680 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9675, file: !9573, line: 126, type: !272)
!9681 = !DILocalVariable(name: "n", scope: !9675, file: !9573, line: 128, type: !272)
!9682 = !DILocation(line: 0, scope: !9675)
!9683 = !DILocation(line: 130, column: 9, scope: !9675)
!9684 = !DILocation(line: 130, column: 12, scope: !9675)
!9685 = !DILocation(line: 130, column: 20, scope: !9675)
!9686 = !DILocation(line: 130, column: 2, scope: !9675)
!9687 = !DILocation(line: 131, column: 4, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9675, file: !9573, line: 130, column: 35)
!9689 = !DILocation(line: 132, column: 4, scope: !9688)
!9690 = distinct !{!9690, !9686, !9691}
!9691 = !DILocation(line: 133, column: 2, scope: !9675)
!9692 = !DILocation(line: 135, column: 2, scope: !9675)
!9693 = distinct !DISubprogram(name: "strcmp", scope: !9573, file: !9573, line: 145, type: !9694, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9696)
!9694 = !DISubroutineType(types: !9695)
!9695 = !{!125, !140, !140}
!9696 = !{!9697, !9698}
!9697 = !DILocalVariable(name: "s1", arg: 1, scope: !9693, file: !9573, line: 145, type: !140)
!9698 = !DILocalVariable(name: "s2", arg: 2, scope: !9693, file: !9573, line: 145, type: !140)
!9699 = !DILocation(line: 0, scope: !9693)
!9700 = !DILocation(line: 147, column: 10, scope: !9693)
!9701 = !DILocation(line: 147, column: 17, scope: !9693)
!9702 = !DILocation(line: 147, column: 14, scope: !9693)
!9703 = !DILocation(line: 147, column: 22, scope: !9693)
!9704 = !DILocation(line: 148, column: 5, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9693, file: !9573, line: 147, column: 40)
!9706 = !DILocation(line: 149, column: 5, scope: !9705)
!9707 = distinct !{!9707, !9708, !9709}
!9708 = !DILocation(line: 147, column: 2, scope: !9693)
!9709 = !DILocation(line: 150, column: 2, scope: !9693)
!9710 = !DILocation(line: 152, column: 9, scope: !9693)
!9711 = !DILocation(line: 152, column: 15, scope: !9693)
!9712 = !DILocation(line: 152, column: 13, scope: !9693)
!9713 = !DILocation(line: 152, column: 2, scope: !9693)
!9714 = distinct !DISubprogram(name: "strncmp", scope: !9573, file: !9573, line: 162, type: !9715, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9717)
!9715 = !DISubroutineType(types: !9716)
!9716 = !{!125, !140, !140, !272}
!9717 = !{!9718, !9719, !9720}
!9718 = !DILocalVariable(name: "s1", arg: 1, scope: !9714, file: !9573, line: 162, type: !140)
!9719 = !DILocalVariable(name: "s2", arg: 2, scope: !9714, file: !9573, line: 162, type: !140)
!9720 = !DILocalVariable(name: "n", arg: 3, scope: !9714, file: !9573, line: 162, type: !272)
!9721 = !DILocation(line: 0, scope: !9714)
!9722 = !DILocation(line: 164, column: 17, scope: !9714)
!9723 = !DILocation(line: 164, column: 21, scope: !9714)
!9724 = !DILocation(line: 164, column: 28, scope: !9714)
!9725 = !DILocation(line: 164, column: 25, scope: !9714)
!9726 = !DILocation(line: 164, column: 33, scope: !9714)
!9727 = !DILocation(line: 165, column: 5, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9714, file: !9573, line: 164, column: 51)
!9729 = !DILocation(line: 166, column: 5, scope: !9728)
!9730 = !DILocation(line: 167, column: 4, scope: !9728)
!9731 = distinct !{!9731, !9732, !9733}
!9732 = !DILocation(line: 164, column: 2, scope: !9714)
!9733 = !DILocation(line: 168, column: 2, scope: !9714)
!9734 = !DILocation(line: 170, column: 25, scope: !9714)
!9735 = !DILocation(line: 170, column: 31, scope: !9714)
!9736 = !DILocation(line: 170, column: 29, scope: !9714)
!9737 = !DILocation(line: 170, column: 9, scope: !9714)
!9738 = !DILocation(line: 170, column: 2, scope: !9714)
!9739 = distinct !DISubprogram(name: "strtok_r", scope: !9573, file: !9573, line: 180, type: !9740, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9742)
!9740 = !DISubroutineType(types: !9741)
!9741 = !{!393, !393, !140, !392}
!9742 = !{!9743, !9744, !9745, !9746, !9747}
!9743 = !DILocalVariable(name: "str", arg: 1, scope: !9739, file: !9573, line: 180, type: !393)
!9744 = !DILocalVariable(name: "sep", arg: 2, scope: !9739, file: !9573, line: 180, type: !140)
!9745 = !DILocalVariable(name: "state", arg: 3, scope: !9739, file: !9573, line: 180, type: !392)
!9746 = !DILocalVariable(name: "start", scope: !9739, file: !9573, line: 182, type: !393)
!9747 = !DILocalVariable(name: "end", scope: !9739, file: !9573, line: 182, type: !393)
!9748 = !DILocation(line: 0, scope: !9739)
!9749 = !DILocation(line: 184, column: 10, scope: !9739)
!9750 = !DILocation(line: 184, column: 22, scope: !9739)
!9751 = !DILocation(line: 187, column: 9, scope: !9739)
!9752 = !DILocation(line: 187, column: 16, scope: !9739)
!9753 = !DILocation(line: 187, column: 19, scope: !9739)
!9754 = !DILocation(line: 187, column: 2, scope: !9739)
!9755 = !DILocation(line: 188, column: 8, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9739, file: !9573, line: 187, column: 40)
!9757 = distinct !{!9757, !9754, !9758}
!9758 = !DILocation(line: 189, column: 2, scope: !9739)
!9759 = !DILocation(line: 198, column: 9, scope: !9739)
!9760 = !DILocation(line: 198, column: 18, scope: !9739)
!9761 = !DILocation(line: 198, column: 17, scope: !9739)
!9762 = !DILocation(line: 198, column: 2, scope: !9739)
!9763 = !DILocation(line: 199, column: 6, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9739, file: !9573, line: 198, column: 37)
!9765 = !DILocation(line: 198, column: 14, scope: !9739)
!9766 = distinct !{!9766, !9762, !9767}
!9767 = !DILocation(line: 200, column: 2, scope: !9739)
!9768 = !DILocation(line: 203, column: 8, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !9573, line: 202, column: 20)
!9770 = distinct !DILexicalBlock(scope: !9739, file: !9573, line: 202, column: 6)
!9771 = !DILocation(line: 204, column: 16, scope: !9769)
!9772 = !DILocation(line: 205, column: 2, scope: !9769)
!9773 = !DILocation(line: 210, column: 1, scope: !9739)
!9774 = distinct !DISubprogram(name: "strcat", scope: !9573, file: !9573, line: 212, type: !9574, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9775)
!9775 = !{!9776, !9777}
!9776 = !DILocalVariable(name: "dest", arg: 1, scope: !9774, file: !9573, line: 212, type: !9576)
!9777 = !DILocalVariable(name: "src", arg: 2, scope: !9774, file: !9573, line: 212, type: !9577)
!9778 = !DILocation(line: 0, scope: !9774)
!9779 = !DILocation(line: 214, column: 16, scope: !9774)
!9780 = !DILocation(line: 214, column: 14, scope: !9774)
!9781 = !DILocation(line: 214, column: 2, scope: !9774)
!9782 = !DILocation(line: 215, column: 2, scope: !9774)
!9783 = distinct !DISubprogram(name: "strncat", scope: !9573, file: !9573, line: 218, type: !9595, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9784)
!9784 = !{!9785, !9786, !9787, !9788, !9789}
!9785 = !DILocalVariable(name: "dest", arg: 1, scope: !9783, file: !9573, line: 218, type: !9576)
!9786 = !DILocalVariable(name: "src", arg: 2, scope: !9783, file: !9573, line: 218, type: !9577)
!9787 = !DILocalVariable(name: "n", arg: 3, scope: !9783, file: !9573, line: 219, type: !272)
!9788 = !DILocalVariable(name: "orig_dest", scope: !9783, file: !9573, line: 221, type: !393)
!9789 = !DILocalVariable(name: "len", scope: !9783, file: !9573, line: 222, type: !272)
!9790 = !DILocation(line: 0, scope: !9783)
!9791 = !DILocation(line: 222, column: 15, scope: !9783)
!9792 = !DILocation(line: 224, column: 7, scope: !9783)
!9793 = !DILocation(line: 225, column: 14, scope: !9783)
!9794 = !DILocation(line: 225, column: 19, scope: !9783)
!9795 = !DILocation(line: 225, column: 11, scope: !9783)
!9796 = !DILocation(line: 225, column: 23, scope: !9783)
!9797 = !DILocation(line: 225, column: 28, scope: !9783)
!9798 = !DILocation(line: 225, column: 2, scope: !9783)
!9799 = !DILocation(line: 226, column: 17, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9783, file: !9573, line: 225, column: 38)
!9801 = !DILocation(line: 226, column: 8, scope: !9800)
!9802 = !DILocation(line: 226, column: 11, scope: !9800)
!9803 = distinct !{!9803, !9798, !9804}
!9804 = !DILocation(line: 227, column: 2, scope: !9783)
!9805 = !DILocation(line: 228, column: 8, scope: !9783)
!9806 = !DILocation(line: 230, column: 2, scope: !9783)
!9807 = distinct !DISubprogram(name: "memcmp", scope: !9573, file: !9573, line: 239, type: !9808, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9810)
!9808 = !DISubroutineType(types: !9809)
!9809 = !{!125, !13, !13, !272}
!9810 = !{!9811, !9812, !9813, !9814, !9815}
!9811 = !DILocalVariable(name: "m1", arg: 1, scope: !9807, file: !9573, line: 239, type: !13)
!9812 = !DILocalVariable(name: "m2", arg: 2, scope: !9807, file: !9573, line: 239, type: !13)
!9813 = !DILocalVariable(name: "n", arg: 3, scope: !9807, file: !9573, line: 239, type: !272)
!9814 = !DILocalVariable(name: "c1", scope: !9807, file: !9573, line: 241, type: !140)
!9815 = !DILocalVariable(name: "c2", scope: !9807, file: !9573, line: 242, type: !140)
!9816 = !DILocation(line: 0, scope: !9807)
!9817 = !DILocation(line: 244, column: 7, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9807, file: !9573, line: 244, column: 6)
!9819 = !DILocation(line: 244, column: 6, scope: !9807)
!9820 = !DILocation(line: 248, column: 10, scope: !9807)
!9821 = !DILocation(line: 248, column: 14, scope: !9807)
!9822 = !DILocation(line: 248, column: 19, scope: !9807)
!9823 = !DILocation(line: 248, column: 2, scope: !9807)
!9824 = !DILocation(line: 248, column: 23, scope: !9807)
!9825 = !DILocation(line: 248, column: 30, scope: !9807)
!9826 = !DILocation(line: 248, column: 27, scope: !9807)
!9827 = !DILocation(line: 249, column: 5, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9807, file: !9573, line: 248, column: 36)
!9829 = !DILocation(line: 250, column: 5, scope: !9828)
!9830 = distinct !{!9830, !9823, !9831}
!9831 = !DILocation(line: 251, column: 2, scope: !9807)
!9832 = !DILocation(line: 253, column: 9, scope: !9807)
!9833 = !DILocation(line: 253, column: 15, scope: !9807)
!9834 = !DILocation(line: 253, column: 13, scope: !9807)
!9835 = !DILocation(line: 253, column: 2, scope: !9807)
!9836 = !DILocation(line: 254, column: 1, scope: !9807)
!9837 = distinct !DISubprogram(name: "memmove", scope: !9573, file: !9573, line: 263, type: !9838, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9840)
!9838 = !DISubroutineType(types: !9839)
!9839 = !{!124, !124, !13, !272}
!9840 = !{!9841, !9842, !9843, !9844, !9845}
!9841 = !DILocalVariable(name: "d", arg: 1, scope: !9837, file: !9573, line: 263, type: !124)
!9842 = !DILocalVariable(name: "s", arg: 2, scope: !9837, file: !9573, line: 263, type: !13)
!9843 = !DILocalVariable(name: "n", arg: 3, scope: !9837, file: !9573, line: 263, type: !272)
!9844 = !DILocalVariable(name: "dest", scope: !9837, file: !9573, line: 265, type: !393)
!9845 = !DILocalVariable(name: "src", scope: !9837, file: !9573, line: 266, type: !140)
!9846 = !DILocation(line: 0, scope: !9837)
!9847 = !DILocation(line: 268, column: 21, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9837, file: !9573, line: 268, column: 6)
!9849 = !DILocation(line: 268, column: 28, scope: !9848)
!9850 = !DILocation(line: 268, column: 6, scope: !9837)
!9851 = !DILocation(line: 280, column: 12, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9848, file: !9573, line: 278, column: 9)
!9853 = !DILocation(line: 280, column: 3, scope: !9852)
!9854 = !DILocation(line: 275, column: 5, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9856, file: !9573, line: 274, column: 17)
!9856 = distinct !DILexicalBlock(scope: !9848, file: !9573, line: 268, column: 33)
!9857 = !DILocation(line: 276, column: 14, scope: !9855)
!9858 = !DILocation(line: 276, column: 4, scope: !9855)
!9859 = !DILocation(line: 276, column: 12, scope: !9855)
!9860 = !DILocation(line: 274, column: 12, scope: !9856)
!9861 = !DILocation(line: 274, column: 3, scope: !9856)
!9862 = distinct !{!9862, !9861, !9863}
!9863 = !DILocation(line: 277, column: 3, scope: !9856)
!9864 = !DILocation(line: 281, column: 12, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9852, file: !9573, line: 280, column: 17)
!9866 = !DILocation(line: 281, column: 10, scope: !9865)
!9867 = !DILocation(line: 282, column: 8, scope: !9865)
!9868 = !DILocation(line: 283, column: 7, scope: !9865)
!9869 = !DILocation(line: 284, column: 5, scope: !9865)
!9870 = distinct !{!9870, !9853, !9871}
!9871 = !DILocation(line: 285, column: 3, scope: !9852)
!9872 = !DILocation(line: 288, column: 2, scope: !9837)
!9873 = distinct !DISubprogram(name: "memcpy", scope: !9573, file: !9573, line: 298, type: !9874, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9878)
!9874 = !DISubroutineType(types: !9875)
!9875 = !{!124, !9876, !9877, !272}
!9876 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!9877 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9878 = !{!9879, !9880, !9881, !9882, !9883}
!9879 = !DILocalVariable(name: "d", arg: 1, scope: !9873, file: !9573, line: 298, type: !9876)
!9880 = !DILocalVariable(name: "s", arg: 2, scope: !9873, file: !9573, line: 298, type: !9877)
!9881 = !DILocalVariable(name: "n", arg: 3, scope: !9873, file: !9573, line: 298, type: !272)
!9882 = !DILocalVariable(name: "d_byte", scope: !9873, file: !9573, line: 302, type: !1195)
!9883 = !DILocalVariable(name: "s_byte", scope: !9873, file: !9573, line: 303, type: !3089)
!9884 = !DILocation(line: 0, scope: !9873)
!9885 = !DILocation(line: 337, column: 11, scope: !9873)
!9886 = !DILocation(line: 337, column: 2, scope: !9873)
!9887 = !DILocation(line: 338, column: 25, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9873, file: !9573, line: 337, column: 16)
!9889 = !DILocation(line: 338, column: 17, scope: !9888)
!9890 = !DILocation(line: 338, column: 11, scope: !9888)
!9891 = !DILocation(line: 338, column: 15, scope: !9888)
!9892 = !DILocation(line: 339, column: 4, scope: !9888)
!9893 = distinct !{!9893, !9886, !9894}
!9894 = !DILocation(line: 340, column: 2, scope: !9873)
!9895 = !DILocation(line: 342, column: 2, scope: !9873)
!9896 = distinct !DISubprogram(name: "memset", scope: !9573, file: !9573, line: 352, type: !9897, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9899)
!9897 = !DISubroutineType(types: !9898)
!9898 = !{!124, !124, !125, !272}
!9899 = !{!9900, !9901, !9902, !9903, !9904}
!9900 = !DILocalVariable(name: "buf", arg: 1, scope: !9896, file: !9573, line: 352, type: !124)
!9901 = !DILocalVariable(name: "c", arg: 2, scope: !9896, file: !9573, line: 352, type: !125)
!9902 = !DILocalVariable(name: "n", arg: 3, scope: !9896, file: !9573, line: 352, type: !272)
!9903 = !DILocalVariable(name: "d_byte", scope: !9896, file: !9573, line: 356, type: !1195)
!9904 = !DILocalVariable(name: "c_byte", scope: !9896, file: !9573, line: 357, type: !151)
!9905 = !DILocation(line: 0, scope: !9896)
!9906 = !DILocation(line: 357, column: 25, scope: !9896)
!9907 = !DILocation(line: 389, column: 11, scope: !9896)
!9908 = !DILocation(line: 389, column: 2, scope: !9896)
!9909 = !DILocation(line: 390, column: 11, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9896, file: !9573, line: 389, column: 16)
!9911 = !DILocation(line: 390, column: 15, scope: !9910)
!9912 = !DILocation(line: 391, column: 4, scope: !9910)
!9913 = distinct !{!9913, !9908, !9914}
!9914 = !DILocation(line: 392, column: 2, scope: !9896)
!9915 = !DILocation(line: 394, column: 2, scope: !9896)
!9916 = distinct !DISubprogram(name: "memchr", scope: !9573, file: !9573, line: 404, type: !9917, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !9919)
!9917 = !DISubroutineType(types: !9918)
!9918 = !{!124, !13, !125, !272}
!9919 = !{!9920, !9921, !9922, !9923}
!9920 = !DILocalVariable(name: "s", arg: 1, scope: !9916, file: !9573, line: 404, type: !13)
!9921 = !DILocalVariable(name: "c", arg: 2, scope: !9916, file: !9573, line: 404, type: !125)
!9922 = !DILocalVariable(name: "n", arg: 3, scope: !9916, file: !9573, line: 404, type: !272)
!9923 = !DILocalVariable(name: "p", scope: !9924, file: !9573, line: 407, type: !3089)
!9924 = distinct !DILexicalBlock(scope: !9925, file: !9573, line: 406, column: 14)
!9925 = distinct !DILexicalBlock(scope: !9916, file: !9573, line: 406, column: 6)
!9926 = !DILocation(line: 0, scope: !9916)
!9927 = !DILocation(line: 406, column: 8, scope: !9925)
!9928 = !DILocation(line: 406, column: 6, scope: !9916)
!9929 = !DILocation(line: 409, column: 3, scope: !9924)
!9930 = !DILocation(line: 0, scope: !9924)
!9931 = !DILocation(line: 410, column: 8, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9933, file: !9573, line: 410, column: 8)
!9933 = distinct !DILexicalBlock(scope: !9924, file: !9573, line: 409, column: 6)
!9934 = !DILocation(line: 410, column: 13, scope: !9932)
!9935 = !DILocation(line: 410, column: 8, scope: !9933)
!9936 = distinct !{!9936, !9929, !9937}
!9937 = !DILocation(line: 414, column: 20, scope: !9924)
!9938 = !DILocation(line: 417, column: 2, scope: !9916)
!9939 = !DILocation(line: 418, column: 1, scope: !9916)
!9940 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !731, file: !731, line: 23, type: !5048, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !9941)
!9941 = !{!9942}
!9942 = !DILocalVariable(name: "hook", arg: 1, scope: !9940, file: !731, line: 23, type: !409)
!9943 = !DILocation(line: 0, scope: !9940)
!9944 = !DILocation(line: 25, column: 15, scope: !9940)
!9945 = !DILocation(line: 26, column: 1, scope: !9940)
!9946 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !731, file: !731, line: 14, type: !410, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !9947)
!9947 = !{!9948}
!9948 = !DILocalVariable(name: "c", arg: 1, scope: !9946, file: !731, line: 14, type: !125)
!9949 = !DILocation(line: 0, scope: !9946)
!9950 = !DILocation(line: 18, column: 2, scope: !9946)
!9951 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !731, file: !731, line: 28, type: !9952, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !9954)
!9952 = !DISubroutineType(types: !9953)
!9953 = !{!125, !125, !727}
!9954 = !{!9955, !9956}
!9955 = !DILocalVariable(name: "c", arg: 1, scope: !9951, file: !731, line: 28, type: !125)
!9956 = !DILocalVariable(name: "stream", arg: 2, scope: !9951, file: !731, line: 28, type: !727)
!9957 = !DILocation(line: 0, scope: !9951)
!9958 = !DILocation(line: 30, column: 27, scope: !9951)
!9959 = !DILocation(line: 30, column: 50, scope: !9951)
!9960 = !DILocation(line: 30, column: 9, scope: !9951)
!9961 = !DILocation(line: 30, column: 2, scope: !9951)
!9962 = distinct !DISubprogram(name: "fputc", scope: !731, file: !731, line: 41, type: !9952, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !9963)
!9963 = !{!9964, !9965}
!9964 = !DILocalVariable(name: "c", arg: 1, scope: !9962, file: !731, line: 41, type: !125)
!9965 = !DILocalVariable(name: "stream", arg: 2, scope: !9962, file: !731, line: 41, type: !727)
!9966 = !DILocation(line: 0, scope: !9962)
!9967 = !DILocation(line: 43, column: 9, scope: !9962)
!9968 = !DILocation(line: 43, column: 2, scope: !9962)
!9969 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9970, file: !9970, line: 72, type: !9952, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !9971)
!9970 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!9971 = !{!9972, !9973}
!9972 = !DILocalVariable(name: "c", arg: 1, scope: !9969, file: !9970, line: 72, type: !125)
!9973 = !DILocalVariable(name: "stream", arg: 2, scope: !9969, file: !9970, line: 72, type: !727)
!9974 = !DILocation(line: 0, scope: !9969)
!9975 = !DILocation(line: 81, column: 2, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9969, file: !9970, line: 81, column: 2)
!9977 = !{i64 2152279627}
!9978 = !DILocation(line: 82, column: 9, scope: !9969)
!9979 = !DILocation(line: 82, column: 2, scope: !9969)
!9980 = distinct !DISubprogram(name: "fputs", scope: !731, file: !731, line: 46, type: !9981, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !9984)
!9981 = !DISubroutineType(types: !9982)
!9982 = !{!125, !9577, !9983}
!9983 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !727)
!9984 = !{!9985, !9986, !9987, !9988}
!9985 = !DILocalVariable(name: "s", arg: 1, scope: !9980, file: !731, line: 46, type: !9577)
!9986 = !DILocalVariable(name: "stream", arg: 2, scope: !9980, file: !731, line: 46, type: !9983)
!9987 = !DILocalVariable(name: "len", scope: !9980, file: !731, line: 48, type: !125)
!9988 = !DILocalVariable(name: "ret", scope: !9980, file: !731, line: 49, type: !125)
!9989 = !DILocation(line: 0, scope: !9980)
!9990 = !DILocation(line: 48, column: 12, scope: !9980)
!9991 = !DILocation(line: 51, column: 8, scope: !9980)
!9992 = !DILocation(line: 53, column: 13, scope: !9980)
!9993 = !DILocation(line: 53, column: 9, scope: !9980)
!9994 = !DILocation(line: 53, column: 2, scope: !9980)
!9995 = distinct !DISubprogram(name: "fwrite", scope: !731, file: !731, line: 99, type: !9996, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !9998)
!9996 = !DISubroutineType(types: !9997)
!9997 = !{!272, !9877, !272, !272, !9983}
!9998 = !{!9999, !10000, !10001, !10002}
!9999 = !DILocalVariable(name: "ptr", arg: 1, scope: !9995, file: !731, line: 99, type: !9877)
!10000 = !DILocalVariable(name: "size", arg: 2, scope: !9995, file: !731, line: 99, type: !272)
!10001 = !DILocalVariable(name: "nitems", arg: 3, scope: !9995, file: !731, line: 99, type: !272)
!10002 = !DILocalVariable(name: "stream", arg: 4, scope: !9995, file: !731, line: 100, type: !9983)
!10003 = !DILocation(line: 0, scope: !9995)
!10004 = !DILocation(line: 102, column: 9, scope: !9995)
!10005 = !DILocation(line: 102, column: 2, scope: !9995)
!10006 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9970, file: !9970, line: 96, type: !9996, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !10007)
!10007 = !{!10008, !10009, !10010, !10011}
!10008 = !DILocalVariable(name: "ptr", arg: 1, scope: !10006, file: !9970, line: 96, type: !9877)
!10009 = !DILocalVariable(name: "size", arg: 2, scope: !10006, file: !9970, line: 96, type: !272)
!10010 = !DILocalVariable(name: "nitems", arg: 3, scope: !10006, file: !9970, line: 96, type: !272)
!10011 = !DILocalVariable(name: "stream", arg: 4, scope: !10006, file: !9970, line: 96, type: !9983)
!10012 = !DILocation(line: 0, scope: !10006)
!10013 = !DILocation(line: 107, column: 2, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10006, file: !9970, line: 107, column: 2)
!10015 = !{i64 2152279731}
!10016 = !DILocation(line: 108, column: 9, scope: !10006)
!10017 = !DILocation(line: 108, column: 2, scope: !10006)
!10018 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !731, file: !731, line: 56, type: !9996, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !10019)
!10019 = !{!10020, !10021, !10022, !10023, !10024, !10025, !10026, !10027}
!10020 = !DILocalVariable(name: "ptr", arg: 1, scope: !10018, file: !731, line: 56, type: !9877)
!10021 = !DILocalVariable(name: "size", arg: 2, scope: !10018, file: !731, line: 56, type: !272)
!10022 = !DILocalVariable(name: "nitems", arg: 3, scope: !10018, file: !731, line: 57, type: !272)
!10023 = !DILocalVariable(name: "stream", arg: 4, scope: !10018, file: !731, line: 57, type: !9983)
!10024 = !DILocalVariable(name: "i", scope: !10018, file: !731, line: 59, type: !272)
!10025 = !DILocalVariable(name: "j", scope: !10018, file: !731, line: 60, type: !272)
!10026 = !DILocalVariable(name: "p", scope: !10018, file: !731, line: 61, type: !3089)
!10027 = !DILabel(scope: !10018, name: "done", file: !731, line: 82)
!10028 = !DILocation(line: 0, scope: !10018)
!10029 = !DILocation(line: 63, column: 14, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10018, file: !731, line: 63, column: 6)
!10031 = !DILocation(line: 63, column: 24, scope: !10030)
!10032 = !DILocation(line: 72, column: 3, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10018, file: !731, line: 70, column: 5)
!10034 = !DILocation(line: 0, scope: !10033)
!10035 = !DILocation(line: 73, column: 8, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10037, file: !731, line: 73, column: 8)
!10037 = distinct !DILexicalBlock(scope: !10033, file: !731, line: 72, column: 6)
!10038 = !DILocation(line: 73, column: 29, scope: !10036)
!10039 = !DILocation(line: 73, column: 27, scope: !10036)
!10040 = !DILocation(line: 73, column: 21, scope: !10036)
!10041 = !DILocation(line: 73, column: 33, scope: !10036)
!10042 = !DILocation(line: 73, column: 8, scope: !10037)
!10043 = !DILocation(line: 76, column: 5, scope: !10037)
!10044 = !DILocation(line: 77, column: 14, scope: !10033)
!10045 = !DILocation(line: 77, column: 3, scope: !10037)
!10046 = distinct !{!10046, !10032, !10047}
!10047 = !DILocation(line: 77, column: 17, scope: !10033)
!10048 = !DILocation(line: 79, column: 4, scope: !10033)
!10049 = !DILocation(line: 80, column: 13, scope: !10018)
!10050 = !DILocation(line: 80, column: 2, scope: !10033)
!10051 = distinct !{!10051, !10052, !10053}
!10052 = !DILocation(line: 70, column: 2, scope: !10018)
!10053 = !DILocation(line: 80, column: 16, scope: !10018)
!10054 = !DILocation(line: 82, column: 1, scope: !10018)
!10055 = !DILocation(line: 83, column: 17, scope: !10018)
!10056 = !DILocation(line: 83, column: 2, scope: !10018)
!10057 = !DILocation(line: 84, column: 1, scope: !10018)
!10058 = distinct !DISubprogram(name: "puts", scope: !731, file: !731, line: 106, type: !10059, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !724, retainedNodes: !10061)
!10059 = !DISubroutineType(types: !10060)
!10060 = !{!125, !140}
!10061 = !{!10062}
!10062 = !DILocalVariable(name: "s", arg: 1, scope: !10058, file: !731, line: 106, type: !140)
!10063 = !DILocation(line: 0, scope: !10058)
!10064 = !DILocation(line: 108, column: 6, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10058, file: !731, line: 108, column: 6)
!10066 = !DILocation(line: 108, column: 23, scope: !10065)
!10067 = !DILocation(line: 108, column: 6, scope: !10058)
!10068 = !DILocation(line: 112, column: 9, scope: !10058)
!10069 = !DILocation(line: 112, column: 29, scope: !10058)
!10070 = !DILocation(line: 112, column: 2, scope: !10058)
!10071 = !DILocation(line: 113, column: 1, scope: !10058)
!10072 = distinct !DISubprogram(name: "rf_init", scope: !856, file: !856, line: 10, type: !862, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !10073)
!10073 = !{!10074, !10075, !10083, !10084}
!10074 = !DILocalVariable(name: "dev", arg: 1, scope: !10072, file: !856, line: 10, type: !782)
!10075 = !DILocalVariable(name: "rf1", scope: !10072, file: !856, line: 12, type: !10076)
!10076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10077)
!10077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !763, line: 271, size: 64, elements: !10078)
!10078 = !{!10079, !10080, !10081}
!10079 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !10077, file: !763, line: 273, baseType: !782, size: 32)
!10080 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !10077, file: !763, line: 275, baseType: !797, size: 8, offset: 32)
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !10077, file: !763, line: 277, baseType: !10082, size: 16, offset: 48)
!10082 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !763, line: 249, baseType: !227)
!10083 = !DILocalVariable(name: "rf2", scope: !10072, file: !856, line: 14, type: !10076)
!10084 = !DILocalVariable(name: "rf3", scope: !10072, file: !856, line: 16, type: !10076)
!10085 = !DILocation(line: 0, scope: !10072)
!10086 = !DILocation(line: 12, column: 2, scope: !10072)
!10087 = !DILocation(line: 12, column: 28, scope: !10072)
!10088 = !DILocation(line: 14, column: 2, scope: !10072)
!10089 = !DILocation(line: 14, column: 28, scope: !10072)
!10090 = !DILocation(line: 16, column: 2, scope: !10072)
!10091 = !DILocation(line: 16, column: 28, scope: !10072)
!10092 = !DILocation(line: 22, column: 27, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10072, file: !856, line: 22, column: 6)
!10094 = !DILocation(line: 22, column: 7, scope: !10093)
!10095 = !DILocation(line: 22, column: 33, scope: !10093)
!10096 = !DILocation(line: 23, column: 7, scope: !10093)
!10097 = !DILocation(line: 23, column: 33, scope: !10093)
!10098 = !DILocation(line: 24, column: 7, scope: !10093)
!10099 = !DILocation(line: 22, column: 6, scope: !10072)
!10100 = !DILocation(line: 28, column: 8, scope: !10072)
!10101 = !DILocation(line: 29, column: 8, scope: !10072)
!10102 = !DILocation(line: 30, column: 8, scope: !10072)
!10103 = !DILocation(line: 32, column: 2, scope: !10072)
!10104 = !DILocation(line: 33, column: 1, scope: !10072)
!10105 = distinct !DISubprogram(name: "device_is_ready", scope: !4179, file: !4179, line: 47, type: !10106, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !10108)
!10106 = !DISubroutineType(types: !10107)
!10107 = !{!153, !782}
!10108 = !{!10109}
!10109 = !DILocalVariable(name: "dev", arg: 1, scope: !10105, file: !4179, line: 47, type: !782)
!10110 = !DILocation(line: 0, scope: !10105)
!10111 = !DILocation(line: 55, column: 2, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10105, file: !4179, line: 55, column: 2)
!10113 = !{i64 2148927404}
!10114 = !DILocation(line: 56, column: 9, scope: !10105)
!10115 = !DILocation(line: 56, column: 2, scope: !10105)
!10116 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !763, file: !763, line: 731, type: !10117, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !10120)
!10117 = !DISubroutineType(types: !10118)
!10118 = !{!125, !10119, !798}
!10119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10076, size: 32)
!10120 = !{!10121, !10122}
!10121 = !DILocalVariable(name: "spec", arg: 1, scope: !10116, file: !763, line: 731, type: !10119)
!10122 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !10116, file: !763, line: 732, type: !798)
!10123 = !DILocation(line: 0, scope: !10116)
!10124 = !DILocation(line: 734, column: 34, scope: !10116)
!10125 = !DILocation(line: 735, column: 13, scope: !10116)
!10126 = !DILocation(line: 736, column: 13, scope: !10116)
!10127 = !DILocation(line: 736, column: 7, scope: !10116)
!10128 = !DILocation(line: 736, column: 22, scope: !10116)
!10129 = !DILocation(line: 734, column: 9, scope: !10116)
!10130 = !DILocation(line: 734, column: 2, scope: !10116)
!10131 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !10132, file: !10132, line: 49, type: !780, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !10133)
!10132 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!10133 = !{!10134, !10135, !10136}
!10134 = !DILocalVariable(name: "port", arg: 1, scope: !10131, file: !10132, line: 49, type: !782)
!10135 = !DILocalVariable(name: "pin", arg: 2, scope: !10131, file: !10132, line: 49, type: !797)
!10136 = !DILocalVariable(name: "flags", arg: 3, scope: !10131, file: !10132, line: 49, type: !798)
!10137 = !DILocation(line: 0, scope: !10131)
!10138 = !DILocation(line: 59, column: 2, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10131, file: !10132, line: 59, column: 2)
!10140 = !{i64 2148941774}
!10141 = !DILocation(line: 60, column: 9, scope: !10131)
!10142 = !DILocation(line: 60, column: 2, scope: !10131)
!10143 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !763, file: !763, line: 667, type: !780, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !10144)
!10144 = !{!10145, !10146, !10147, !10148, !10149, !10151}
!10145 = !DILocalVariable(name: "port", arg: 1, scope: !10143, file: !763, line: 667, type: !782)
!10146 = !DILocalVariable(name: "pin", arg: 2, scope: !10143, file: !763, line: 668, type: !797)
!10147 = !DILocalVariable(name: "flags", arg: 3, scope: !10143, file: !763, line: 669, type: !798)
!10148 = !DILocalVariable(name: "api", scope: !10143, file: !763, line: 671, type: !774)
!10149 = !DILocalVariable(name: "cfg", scope: !10143, file: !763, line: 673, type: !10150)
!10150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!10151 = !DILocalVariable(name: "data", scope: !10143, file: !763, line: 675, type: !854)
!10152 = !DILocation(line: 0, scope: !10143)
!10153 = !DILocation(line: 672, column: 41, scope: !10143)
!10154 = !DILocation(line: 676, column: 36, scope: !10143)
!10155 = !DILocation(line: 701, column: 6, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10143, file: !763, line: 700, column: 6)
!10157 = !DILocation(line: 711, column: 13, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10143, file: !763, line: 711, column: 6)
!10159 = !DILocation(line: 711, column: 32, scope: !10158)
!10160 = !DILocation(line: 0, scope: !10158)
!10161 = !DILocation(line: 711, column: 6, scope: !10143)
!10162 = !DILocation(line: 712, column: 9, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10158, file: !763, line: 711, column: 38)
!10164 = !DILocation(line: 712, column: 16, scope: !10163)
!10165 = !DILocation(line: 713, column: 2, scope: !10163)
!10166 = !DILocation(line: 714, column: 19, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10158, file: !763, line: 713, column: 9)
!10168 = !DILocation(line: 714, column: 9, scope: !10167)
!10169 = !DILocation(line: 714, column: 16, scope: !10167)
!10170 = !DILocation(line: 706, column: 8, scope: !10143)
!10171 = !DILocation(line: 717, column: 14, scope: !10143)
!10172 = !DILocation(line: 717, column: 9, scope: !10143)
!10173 = !DILocation(line: 717, column: 2, scope: !10143)
!10174 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !10106, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !10175)
!10175 = !{!10176}
!10176 = !DILocalVariable(name: "dev", arg: 1, scope: !10174, file: !137, line: 730, type: !782)
!10177 = !DILocation(line: 0, scope: !10174)
!10178 = !DILocation(line: 732, column: 9, scope: !10174)
!10179 = !DILocation(line: 732, column: 2, scope: !10174)
!10180 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !939, file: !939, line: 368, type: !990, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10181)
!10181 = !{!10182}
!10182 = !DILocalVariable(name: "dev", arg: 1, scope: !10180, file: !939, line: 368, type: !968)
!10183 = !DILocation(line: 0, scope: !10180)
!10184 = !DILocation(line: 370, column: 2, scope: !10180)
!10185 = !DILocation(line: 371, column: 1, scope: !10180)
!10186 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !939, file: !939, line: 243, type: !10187, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10189)
!10187 = !DISubroutineType(types: !10188)
!10188 = !{null, !125, !125, !968}
!10189 = !{!10190, !10191, !10192, !10193, !10195}
!10190 = !DILocalVariable(name: "min", arg: 1, scope: !10186, file: !939, line: 243, type: !125)
!10191 = !DILocalVariable(name: "max", arg: 2, scope: !10186, file: !939, line: 243, type: !125)
!10192 = !DILocalVariable(name: "dev", arg: 3, scope: !10186, file: !939, line: 243, type: !968)
!10193 = !DILocalVariable(name: "data", scope: !10186, file: !939, line: 245, type: !10194)
!10194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!10195 = !DILocalVariable(name: "line", scope: !10186, file: !939, line: 246, type: !125)
!10196 = !DILocation(line: 0, scope: !10186)
!10197 = !DILocation(line: 245, column: 38, scope: !10186)
!10198 = !DILocation(line: 249, column: 24, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10200, file: !939, line: 249, column: 2)
!10200 = distinct !DILexicalBlock(scope: !10186, file: !939, line: 249, column: 2)
!10201 = !DILocation(line: 249, column: 2, scope: !10200)
!10202 = !DILocation(line: 251, column: 7, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10204, file: !939, line: 251, column: 7)
!10204 = distinct !DILexicalBlock(scope: !10199, file: !939, line: 249, column: 39)
!10205 = !DILocation(line: 251, column: 7, scope: !10204)
!10206 = !DILocation(line: 253, column: 4, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10203, file: !939, line: 251, column: 36)
!10208 = !DILocation(line: 256, column: 24, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10207, file: !939, line: 256, column: 8)
!10210 = !DILocation(line: 256, column: 9, scope: !10209)
!10211 = !DILocation(line: 256, column: 8, scope: !10207)
!10212 = !DILocation(line: 260, column: 43, scope: !10207)
!10213 = !DILocation(line: 260, column: 4, scope: !10207)
!10214 = !DILocation(line: 261, column: 3, scope: !10207)
!10215 = !DILocation(line: 249, column: 35, scope: !10199)
!10216 = distinct !{!10216, !10201, !10217}
!10217 = !DILocation(line: 262, column: 2, scope: !10200)
!10218 = !DILocation(line: 263, column: 1, scope: !10186)
!10219 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !939, file: !939, line: 158, type: !410, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10220)
!10220 = !{!10221}
!10221 = !DILocalVariable(name: "line", arg: 1, scope: !10219, file: !939, line: 158, type: !125)
!10222 = !DILocation(line: 0, scope: !10219)
!10223 = !DILocation(line: 170, column: 38, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10225, file: !939, line: 160, column: 17)
!10225 = distinct !DILexicalBlock(scope: !10219, file: !939, line: 160, column: 6)
!10226 = !DILocation(line: 170, column: 10, scope: !10224)
!10227 = !DILocation(line: 176, column: 1, scope: !10219)
!10228 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !939, file: !939, line: 183, type: !10229, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10231)
!10229 = !DISubroutineType(types: !10230)
!10230 = !{null, !125}
!10231 = !{!10232}
!10232 = !DILocalVariable(name: "line", arg: 1, scope: !10228, file: !939, line: 183, type: !125)
!10233 = !DILocation(line: 0, scope: !10228)
!10234 = !DILocation(line: 195, column: 28, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10236, file: !939, line: 185, column: 17)
!10236 = distinct !DILexicalBlock(scope: !10228, file: !939, line: 185, column: 6)
!10237 = !DILocation(line: 195, column: 3, scope: !10235)
!10238 = !DILocation(line: 200, column: 1, scope: !10228)
!10239 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !10240, file: !10240, line: 971, type: !6820, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10241)
!10240 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10241 = !{!10242}
!10242 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10239, file: !10240, line: 971, type: !208)
!10243 = !DILocation(line: 0, scope: !10239)
!10244 = !DILocation(line: 973, column: 3, scope: !10239)
!10245 = !DILocation(line: 974, column: 1, scope: !10239)
!10246 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !10240, file: !10240, line: 891, type: !9485, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10247)
!10247 = !{!10248}
!10248 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10246, file: !10240, line: 891, type: !208)
!10249 = !DILocation(line: 0, scope: !10246)
!10250 = !DILocation(line: 893, column: 11, scope: !10246)
!10251 = !DILocation(line: 893, column: 40, scope: !10246)
!10252 = !DILocation(line: 893, column: 3, scope: !10246)
!10253 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !939, file: !939, line: 304, type: !990, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10254)
!10254 = !{!10255}
!10255 = !DILocalVariable(name: "dev", arg: 1, scope: !10253, file: !939, line: 304, type: !968)
!10256 = !DILocation(line: 0, scope: !10253)
!10257 = !DILocation(line: 306, column: 2, scope: !10253)
!10258 = !DILocation(line: 307, column: 1, scope: !10253)
!10259 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !939, file: !939, line: 299, type: !990, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10260)
!10260 = !{!10261}
!10261 = !DILocalVariable(name: "dev", arg: 1, scope: !10259, file: !939, line: 299, type: !968)
!10262 = !DILocation(line: 0, scope: !10259)
!10263 = !DILocation(line: 301, column: 2, scope: !10259)
!10264 = !DILocation(line: 302, column: 1, scope: !10259)
!10265 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !939, file: !939, line: 294, type: !990, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10266)
!10266 = !{!10267}
!10267 = !DILocalVariable(name: "dev", arg: 1, scope: !10265, file: !939, line: 294, type: !968)
!10268 = !DILocation(line: 0, scope: !10265)
!10269 = !DILocation(line: 296, column: 2, scope: !10265)
!10270 = !DILocation(line: 297, column: 1, scope: !10265)
!10271 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !939, file: !939, line: 289, type: !990, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10272)
!10272 = !{!10273}
!10273 = !DILocalVariable(name: "dev", arg: 1, scope: !10271, file: !939, line: 289, type: !968)
!10274 = !DILocation(line: 0, scope: !10271)
!10275 = !DILocation(line: 291, column: 2, scope: !10271)
!10276 = !DILocation(line: 292, column: 1, scope: !10271)
!10277 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !939, file: !939, line: 373, type: !990, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10278)
!10278 = !{!10279}
!10279 = !DILocalVariable(name: "dev", arg: 1, scope: !10277, file: !939, line: 373, type: !968)
!10280 = !DILocation(line: 0, scope: !10277)
!10281 = !DILocation(line: 375, column: 2, scope: !10277)
!10282 = !DILocation(line: 376, column: 1, scope: !10277)
!10283 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !939, file: !939, line: 284, type: !990, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10284)
!10284 = !{!10285}
!10285 = !DILocalVariable(name: "dev", arg: 1, scope: !10283, file: !939, line: 284, type: !968)
!10286 = !DILocation(line: 0, scope: !10283)
!10287 = !DILocation(line: 286, column: 2, scope: !10283)
!10288 = !DILocation(line: 287, column: 1, scope: !10283)
!10289 = distinct !DISubprogram(name: "stm32_exti_init", scope: !939, file: !939, line: 416, type: !966, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10290)
!10290 = !{!10291}
!10291 = !DILocalVariable(name: "dev", arg: 1, scope: !10289, file: !939, line: 416, type: !968)
!10292 = !DILocation(line: 0, scope: !10289)
!10293 = !DILocation(line: 418, column: 2, scope: !10289)
!10294 = !DILocation(line: 420, column: 2, scope: !10289)
!10295 = !DILocation(line: 0, scope: !989)
!10296 = !DILocation(line: 493, column: 2, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !989, file: !939, line: 493, column: 2)
!10298 = !DILocation(line: 497, column: 2, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !989, file: !939, line: 497, column: 2)
!10300 = !DILocation(line: 507, column: 2, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !989, file: !939, line: 507, column: 2)
!10302 = !DILocation(line: 512, column: 2, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !989, file: !939, line: 512, column: 2)
!10304 = !DILocation(line: 516, column: 2, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !989, file: !939, line: 516, column: 2)
!10306 = !DILocation(line: 523, column: 2, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !989, file: !939, line: 523, column: 2)
!10308 = !DILocation(line: 527, column: 2, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !989, file: !939, line: 527, column: 2)
!10310 = !DILocation(line: 607, column: 1, scope: !989)
!10311 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !939, file: !939, line: 112, type: !10229, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10312)
!10312 = !{!10313, !10314}
!10313 = !DILocalVariable(name: "line", arg: 1, scope: !10311, file: !939, line: 112, type: !125)
!10314 = !DILocalVariable(name: "irqnum", scope: !10311, file: !939, line: 114, type: !125)
!10315 = !DILocation(line: 0, scope: !10311)
!10316 = !DILocation(line: 121, column: 11, scope: !10311)
!10317 = !DILocation(line: 130, column: 26, scope: !10311)
!10318 = !DILocation(line: 130, column: 2, scope: !10311)
!10319 = !DILocation(line: 134, column: 2, scope: !10311)
!10320 = !DILocation(line: 135, column: 1, scope: !10311)
!10321 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !10240, file: !10240, line: 274, type: !6820, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10322)
!10322 = !{!10323}
!10323 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10321, file: !10240, line: 274, type: !208)
!10324 = !DILocation(line: 0, scope: !10321)
!10325 = !DILocation(line: 276, column: 3, scope: !10321)
!10326 = !DILocation(line: 277, column: 1, scope: !10321)
!10327 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !939, file: !939, line: 137, type: !10229, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10328)
!10328 = !{!10329}
!10329 = !DILocalVariable(name: "line", arg: 1, scope: !10327, file: !939, line: 137, type: !125)
!10330 = !DILocation(line: 0, scope: !10327)
!10331 = !DILocation(line: 141, column: 11, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10327, file: !939, line: 141, column: 6)
!10333 = !DILocation(line: 141, column: 6, scope: !10327)
!10334 = !DILocation(line: 145, column: 28, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10332, file: !939, line: 141, column: 17)
!10336 = !DILocation(line: 145, column: 3, scope: !10335)
!10337 = !DILocation(line: 147, column: 2, scope: !10335)
!10338 = !DILocation(line: 151, column: 1, scope: !10327)
!10339 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !10240, file: !10240, line: 322, type: !6820, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10340)
!10340 = !{!10341}
!10341 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10339, file: !10240, line: 322, type: !208)
!10342 = !DILocation(line: 0, scope: !10339)
!10343 = !DILocation(line: 324, column: 3, scope: !10339)
!10344 = !DILocation(line: 325, column: 1, scope: !10339)
!10345 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !939, file: !939, line: 202, type: !10346, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10348)
!10346 = !DISubroutineType(types: !10347)
!10347 = !{null, !125, !125}
!10348 = !{!10349, !10350}
!10349 = !DILocalVariable(name: "line", arg: 1, scope: !10345, file: !939, line: 202, type: !125)
!10350 = !DILocalVariable(name: "trigger", arg: 2, scope: !10345, file: !939, line: 202, type: !125)
!10351 = !DILocation(line: 0, scope: !10345)
!10352 = !DILocation(line: 211, column: 2, scope: !10345)
!10353 = !DILocation(line: 213, column: 36, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10345, file: !939, line: 211, column: 19)
!10355 = !DILocation(line: 213, column: 3, scope: !10354)
!10356 = !DILocation(line: 214, column: 3, scope: !10354)
!10357 = !DILocation(line: 215, column: 3, scope: !10354)
!10358 = !DILocation(line: 217, column: 35, scope: !10354)
!10359 = !DILocation(line: 217, column: 3, scope: !10354)
!10360 = !DILocation(line: 218, column: 3, scope: !10354)
!10361 = !DILocation(line: 219, column: 3, scope: !10354)
!10362 = !DILocation(line: 221, column: 36, scope: !10354)
!10363 = !DILocation(line: 221, column: 3, scope: !10354)
!10364 = !DILocation(line: 222, column: 3, scope: !10354)
!10365 = !DILocation(line: 223, column: 3, scope: !10354)
!10366 = !DILocation(line: 225, column: 35, scope: !10354)
!10367 = !DILocation(line: 225, column: 3, scope: !10354)
!10368 = !DILocation(line: 226, column: 3, scope: !10354)
!10369 = !DILocation(line: 227, column: 3, scope: !10354)
!10370 = !DILocation(line: 232, column: 1, scope: !10345)
!10371 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !10240, file: !10240, line: 618, type: !6820, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10372)
!10372 = !{!10373}
!10373 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10371, file: !10240, line: 618, type: !208)
!10374 = !DILocation(line: 0, scope: !10371)
!10375 = !DILocation(line: 620, column: 3, scope: !10371)
!10376 = !DILocation(line: 622, column: 1, scope: !10371)
!10377 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !10240, file: !10240, line: 754, type: !6820, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10378)
!10378 = !{!10379}
!10379 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10377, file: !10240, line: 754, type: !208)
!10380 = !DILocation(line: 0, scope: !10377)
!10381 = !DILocation(line: 756, column: 3, scope: !10377)
!10382 = !DILocation(line: 757, column: 1, scope: !10377)
!10383 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !10240, file: !10240, line: 572, type: !6820, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10384)
!10384 = !{!10385}
!10385 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10383, file: !10240, line: 572, type: !208)
!10386 = !DILocation(line: 0, scope: !10383)
!10387 = !DILocation(line: 574, column: 3, scope: !10383)
!10388 = !DILocation(line: 576, column: 1, scope: !10383)
!10389 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !10240, file: !10240, line: 710, type: !6820, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10390)
!10390 = !{!10391}
!10391 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10389, file: !10240, line: 710, type: !208)
!10392 = !DILocation(line: 0, scope: !10389)
!10393 = !DILocation(line: 712, column: 3, scope: !10389)
!10394 = !DILocation(line: 713, column: 1, scope: !10389)
!10395 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !939, file: !939, line: 433, type: !10396, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10398)
!10396 = !DISubroutineType(types: !10397)
!10397 = !{!125, !125, !979, !124}
!10398 = !{!10399, !10400, !10401, !10402, !10404}
!10399 = !DILocalVariable(name: "line", arg: 1, scope: !10395, file: !939, line: 433, type: !125)
!10400 = !DILocalVariable(name: "cb", arg: 2, scope: !10395, file: !939, line: 433, type: !979)
!10401 = !DILocalVariable(name: "arg", arg: 3, scope: !10395, file: !939, line: 433, type: !124)
!10402 = !DILocalVariable(name: "dev", scope: !10395, file: !939, line: 435, type: !10403)
!10403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!10404 = !DILocalVariable(name: "data", scope: !10395, file: !939, line: 436, type: !10194)
!10405 = !DILocation(line: 0, scope: !10395)
!10406 = !DILocation(line: 438, column: 21, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10395, file: !939, line: 438, column: 6)
!10408 = !DILocation(line: 438, column: 6, scope: !10407)
!10409 = !DILocation(line: 438, column: 6, scope: !10395)
!10410 = !DILocation(line: 442, column: 20, scope: !10395)
!10411 = !DILocation(line: 443, column: 17, scope: !10395)
!10412 = !DILocation(line: 443, column: 22, scope: !10395)
!10413 = !DILocation(line: 445, column: 2, scope: !10395)
!10414 = !DILocation(line: 446, column: 1, scope: !10395)
!10415 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !939, file: !939, line: 448, type: !10229, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !10416)
!10416 = !{!10417, !10418, !10419}
!10417 = !DILocalVariable(name: "line", arg: 1, scope: !10415, file: !939, line: 448, type: !125)
!10418 = !DILocalVariable(name: "dev", scope: !10415, file: !939, line: 450, type: !10403)
!10419 = !DILocalVariable(name: "data", scope: !10415, file: !939, line: 451, type: !10194)
!10420 = !DILocation(line: 0, scope: !10415)
!10421 = !DILocation(line: 453, column: 17, scope: !10415)
!10422 = !DILocation(line: 453, column: 20, scope: !10415)
!10423 = !DILocation(line: 454, column: 17, scope: !10415)
!10424 = !DILocation(line: 454, column: 22, scope: !10415)
!10425 = !DILocation(line: 455, column: 1, scope: !10415)
!10426 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1094, file: !1094, line: 183, type: !1132, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !10427)
!10427 = !{!10428, !10429, !10430, !10431, !10432}
!10428 = !DILocalVariable(name: "dev", arg: 1, scope: !10426, file: !1094, line: 183, type: !1123)
!10429 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10426, file: !1094, line: 184, type: !1134)
!10430 = !DILocalVariable(name: "pclken", scope: !10426, file: !1094, line: 186, type: !1084)
!10431 = !DILocalVariable(name: "reg", scope: !10426, file: !1094, line: 187, type: !3151)
!10432 = !DILocalVariable(name: "reg_val", scope: !10426, file: !1094, line: 188, type: !208)
!10433 = !DILocation(line: 0, scope: !10426)
!10434 = !DILocation(line: 192, column: 6, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10426, file: !1094, line: 192, column: 6)
!10436 = !DILocation(line: 192, column: 6, scope: !10426)
!10437 = !DILocation(line: 197, column: 52, scope: !10426)
!10438 = !DILocation(line: 197, column: 8, scope: !10426)
!10439 = !DILocation(line: 198, column: 12, scope: !10426)
!10440 = !DILocation(line: 199, column: 21, scope: !10426)
!10441 = !DILocation(line: 199, column: 10, scope: !10426)
!10442 = !DILocation(line: 200, column: 7, scope: !10426)
!10443 = !DILocation(line: 202, column: 2, scope: !10426)
!10444 = !DILocation(line: 203, column: 1, scope: !10426)
!10445 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1094, file: !1094, line: 205, type: !1132, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !10446)
!10446 = !{!10447, !10448, !10449, !10450, !10451}
!10447 = !DILocalVariable(name: "dev", arg: 1, scope: !10445, file: !1094, line: 205, type: !1123)
!10448 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10445, file: !1094, line: 206, type: !1134)
!10449 = !DILocalVariable(name: "pclken", scope: !10445, file: !1094, line: 208, type: !1084)
!10450 = !DILocalVariable(name: "reg", scope: !10445, file: !1094, line: 209, type: !3151)
!10451 = !DILocalVariable(name: "reg_val", scope: !10445, file: !1094, line: 210, type: !208)
!10452 = !DILocation(line: 0, scope: !10445)
!10453 = !DILocation(line: 214, column: 6, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10445, file: !1094, line: 214, column: 6)
!10455 = !DILocation(line: 214, column: 6, scope: !10445)
!10456 = !DILocation(line: 219, column: 52, scope: !10445)
!10457 = !DILocation(line: 219, column: 8, scope: !10445)
!10458 = !DILocation(line: 220, column: 12, scope: !10445)
!10459 = !DILocation(line: 221, column: 22, scope: !10445)
!10460 = !DILocation(line: 221, column: 13, scope: !10445)
!10461 = !DILocation(line: 221, column: 10, scope: !10445)
!10462 = !DILocation(line: 222, column: 7, scope: !10445)
!10463 = !DILocation(line: 224, column: 2, scope: !10445)
!10464 = !DILocation(line: 225, column: 1, scope: !10445)
!10465 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1094, file: !1094, line: 262, type: !1148, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !10466)
!10466 = !{!10467, !10468, !10469, !10470, !10471, !10472, !10473}
!10467 = !DILocalVariable(name: "clock", arg: 1, scope: !10465, file: !1094, line: 262, type: !1123)
!10468 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10465, file: !1094, line: 263, type: !1134)
!10469 = !DILocalVariable(name: "rate", arg: 3, scope: !10465, file: !1094, line: 264, type: !1090)
!10470 = !DILocalVariable(name: "pclken", scope: !10465, file: !1094, line: 266, type: !1084)
!10471 = !DILocalVariable(name: "ahb_clock", scope: !10465, file: !1094, line: 273, type: !208)
!10472 = !DILocalVariable(name: "apb1_clock", scope: !10465, file: !1094, line: 274, type: !208)
!10473 = !DILocalVariable(name: "apb2_clock", scope: !10465, file: !1094, line: 276, type: !208)
!10474 = !DILocation(line: 0, scope: !10465)
!10475 = !DILocation(line: 273, column: 23, scope: !10465)
!10476 = !DILocation(line: 299, column: 18, scope: !10465)
!10477 = !DILocation(line: 299, column: 2, scope: !10465)
!10478 = !DILocation(line: 374, column: 3, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10465, file: !1094, line: 299, column: 23)
!10480 = !DILocation(line: 379, column: 3, scope: !10479)
!10481 = !DILocation(line: 389, column: 3, scope: !10479)
!10482 = !DILocation(line: 0, scope: !10479)
!10483 = !DILocation(line: 396, column: 1, scope: !10465)
!10484 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1094, file: !1094, line: 227, type: !1164, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !10485)
!10485 = !{!10486, !10487, !10488, !10489, !10490, !10491, !10492, !10493}
!10486 = !DILocalVariable(name: "dev", arg: 1, scope: !10484, file: !1094, line: 227, type: !1123)
!10487 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10484, file: !1094, line: 228, type: !1134)
!10488 = !DILocalVariable(name: "data", arg: 3, scope: !10484, file: !1094, line: 229, type: !124)
!10489 = !DILocalVariable(name: "pclken", scope: !10484, file: !1094, line: 233, type: !1084)
!10490 = !DILocalVariable(name: "reg", scope: !10484, file: !1094, line: 234, type: !3151)
!10491 = !DILocalVariable(name: "reg_val", scope: !10484, file: !1094, line: 235, type: !208)
!10492 = !DILocalVariable(name: "dt_val", scope: !10484, file: !1094, line: 235, type: !208)
!10493 = !DILocalVariable(name: "err", scope: !10484, file: !1094, line: 236, type: !125)
!10494 = !DILocation(line: 0, scope: !10484)
!10495 = !DILocation(line: 241, column: 30, scope: !10484)
!10496 = !DILocation(line: 241, column: 8, scope: !10484)
!10497 = !DILocation(line: 242, column: 10, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10484, file: !1094, line: 242, column: 6)
!10499 = !DILocation(line: 242, column: 6, scope: !10484)
!10500 = !DILocation(line: 247, column: 11, scope: !10484)
!10501 = !DILocation(line: 248, column: 6, scope: !10484)
!10502 = !DILocation(line: 247, column: 44, scope: !10484)
!10503 = !DILocation(line: 250, column: 6, scope: !10484)
!10504 = !DILocation(line: 249, column: 52, scope: !10484)
!10505 = !DILocation(line: 249, column: 8, scope: !10484)
!10506 = !DILocation(line: 251, column: 12, scope: !10484)
!10507 = !DILocation(line: 252, column: 10, scope: !10484)
!10508 = !DILocation(line: 253, column: 7, scope: !10484)
!10509 = !DILocation(line: 255, column: 2, scope: !10484)
!10510 = !DILocation(line: 260, column: 1, scope: !10484)
!10511 = distinct !DISubprogram(name: "enabled_clock", scope: !1094, file: !1094, line: 100, type: !10512, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !10514)
!10512 = !DISubroutineType(types: !10513)
!10513 = !{!125, !208}
!10514 = !{!10515, !10516}
!10515 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10511, file: !1094, line: 100, type: !208)
!10516 = !DILocalVariable(name: "r", scope: !10511, file: !1094, line: 102, type: !125)
!10517 = !DILocation(line: 0, scope: !10511)
!10518 = !DILocation(line: 104, column: 2, scope: !10511)
!10519 = !DILocation(line: 180, column: 2, scope: !10511)
!10520 = !DILocation(line: 181, column: 1, scope: !10511)
!10521 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1094, file: !1094, line: 641, type: !1121, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !10522)
!10522 = !{!10523, !10524, !10525}
!10523 = !DILocalVariable(name: "dev", arg: 1, scope: !10521, file: !1094, line: 641, type: !1123)
!10524 = !DILocalVariable(name: "old_flash_freq", scope: !10521, file: !1094, line: 664, type: !208)
!10525 = !DILocalVariable(name: "new_flash_freq", scope: !10521, file: !1094, line: 665, type: !208)
!10526 = !DILocation(line: 0, scope: !10521)
!10527 = !DILocation(line: 646, column: 2, scope: !10521)
!10528 = !DILocation(line: 667, column: 19, scope: !10521)
!10529 = !DILocation(line: 674, column: 21, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10521, file: !1094, line: 674, column: 6)
!10531 = !DILocation(line: 674, column: 6, scope: !10521)
!10532 = !DILocation(line: 675, column: 3, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10530, file: !1094, line: 674, column: 59)
!10534 = !DILocation(line: 676, column: 2, scope: !10533)
!10535 = !DILocation(line: 680, column: 2, scope: !10521)
!10536 = !DILocation(line: 683, column: 2, scope: !10521)
!10537 = !DILocation(line: 690, column: 3, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10539, file: !1094, line: 689, column: 9)
!10539 = distinct !DILexicalBlock(scope: !10521, file: !1094, line: 685, column: 6)
!10540 = !DILocation(line: 695, column: 2, scope: !10521)
!10541 = !DILocation(line: 696, column: 2, scope: !10521)
!10542 = !DILocation(line: 696, column: 9, scope: !10521)
!10543 = !DILocation(line: 696, column: 34, scope: !10521)
!10544 = distinct !{!10544, !10541, !10545}
!10545 = !DILocation(line: 697, column: 2, scope: !10521)
!10546 = !DILocation(line: 720, column: 21, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10521, file: !1094, line: 720, column: 6)
!10548 = !DILocation(line: 720, column: 6, scope: !10521)
!10549 = !DILocation(line: 721, column: 3, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10547, file: !1094, line: 720, column: 60)
!10551 = !DILocation(line: 722, column: 2, scope: !10550)
!10552 = !DILocation(line: 725, column: 18, scope: !10521)
!10553 = !DILocation(line: 728, column: 2, scope: !10521)
!10554 = !DILocation(line: 730, column: 2, scope: !10521)
!10555 = !DILocation(line: 745, column: 2, scope: !10521)
!10556 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10557, file: !10557, line: 995, type: !9251, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !652)
!10557 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10558 = !DILocation(line: 997, column: 21, scope: !10556)
!10559 = !DILocation(line: 997, column: 3, scope: !10556)
!10560 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1094, file: !1094, line: 507, type: !3274, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !652)
!10561 = !DILocation(line: 534, column: 7, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10563, file: !1094, line: 534, column: 7)
!10563 = distinct !DILexicalBlock(scope: !10564, file: !1094, line: 532, column: 37)
!10564 = distinct !DILexicalBlock(scope: !10560, file: !1094, line: 532, column: 6)
!10565 = !DILocation(line: 534, column: 28, scope: !10562)
!10566 = !DILocation(line: 534, column: 7, scope: !10563)
!10567 = !DILocation(line: 536, column: 4, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10562, file: !1094, line: 534, column: 34)
!10569 = !DILocation(line: 537, column: 4, scope: !10568)
!10570 = !DILocation(line: 537, column: 11, scope: !10568)
!10571 = !DILocation(line: 537, column: 32, scope: !10568)
!10572 = distinct !{!10572, !10569, !10573}
!10573 = !DILocation(line: 539, column: 4, scope: !10568)
!10574 = !DILocation(line: 583, column: 3, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10576, file: !1094, line: 577, column: 37)
!10576 = distinct !DILexicalBlock(scope: !10560, file: !1094, line: 577, column: 6)
!10577 = !DILocation(line: 584, column: 3, scope: !10575)
!10578 = !DILocation(line: 584, column: 10, scope: !10575)
!10579 = !DILocation(line: 584, column: 31, scope: !10575)
!10580 = distinct !{!10580, !10577, !10581}
!10581 = !DILocation(line: 585, column: 3, scope: !10575)
!10582 = !DILocation(line: 627, column: 1, scope: !10560)
!10583 = distinct !DISubprogram(name: "set_up_plls", scope: !1094, file: !1094, line: 448, type: !3274, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !652)
!10584 = !DILocation(line: 460, column: 6, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10583, file: !1094, line: 460, column: 6)
!10586 = !DILocation(line: 460, column: 31, scope: !10585)
!10587 = !DILocation(line: 460, column: 6, scope: !10583)
!10588 = !DILocation(line: 461, column: 3, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10585, file: !1094, line: 460, column: 67)
!10590 = !DILocation(line: 462, column: 3, scope: !10589)
!10591 = !DILocation(line: 463, column: 2, scope: !10589)
!10592 = !DILocation(line: 464, column: 2, scope: !10583)
!10593 = !DILocation(line: 496, column: 2, scope: !10583)
!10594 = !DILocation(line: 499, column: 2, scope: !10583)
!10595 = !DILocation(line: 500, column: 2, scope: !10583)
!10596 = !DILocation(line: 500, column: 9, scope: !10583)
!10597 = !DILocation(line: 500, column: 30, scope: !10583)
!10598 = distinct !{!10598, !10595, !10599}
!10599 = !DILocation(line: 502, column: 2, scope: !10583)
!10600 = !DILocation(line: 505, column: 1, scope: !10583)
!10601 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10557, file: !10557, line: 944, type: !6820, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !10602)
!10602 = !{!10603}
!10603 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10601, file: !10557, line: 944, type: !208)
!10604 = !DILocation(line: 0, scope: !10601)
!10605 = !DILocation(line: 946, column: 3, scope: !10601)
!10606 = !DILocation(line: 947, column: 1, scope: !10601)
!10607 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10557, file: !10557, line: 910, type: !6820, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !10608)
!10608 = !{!10609}
!10609 = !DILocalVariable(name: "Source", arg: 1, scope: !10607, file: !10557, line: 910, type: !208)
!10610 = !DILocation(line: 0, scope: !10607)
!10611 = !DILocation(line: 912, column: 3, scope: !10607)
!10612 = !DILocation(line: 913, column: 1, scope: !10607)
!10613 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10557, file: !10557, line: 924, type: !9251, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !652)
!10614 = !DILocation(line: 926, column: 21, scope: !10613)
!10615 = !DILocation(line: 926, column: 3, scope: !10613)
!10616 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10557, file: !10557, line: 960, type: !6820, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !10617)
!10617 = !{!10618}
!10618 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10616, file: !10557, line: 960, type: !208)
!10619 = !DILocation(line: 0, scope: !10616)
!10620 = !DILocation(line: 962, column: 3, scope: !10616)
!10621 = !DILocation(line: 963, column: 1, scope: !10616)
!10622 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10557, file: !10557, line: 976, type: !6820, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !10623)
!10623 = !{!10624}
!10624 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10622, file: !10557, line: 976, type: !208)
!10625 = !DILocation(line: 0, scope: !10622)
!10626 = !DILocation(line: 978, column: 3, scope: !10622)
!10627 = !DILocation(line: 979, column: 1, scope: !10622)
!10628 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1094, file: !1094, line: 409, type: !3274, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !652)
!10629 = !DILocation(line: 412, column: 6, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10628, file: !1094, line: 412, column: 6)
!10631 = !DILocation(line: 412, column: 27, scope: !10630)
!10632 = !DILocation(line: 412, column: 6, scope: !10628)
!10633 = !DILocation(line: 414, column: 3, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10630, file: !1094, line: 412, column: 33)
!10635 = !DILocation(line: 415, column: 3, scope: !10634)
!10636 = !DILocation(line: 415, column: 10, scope: !10634)
!10637 = !DILocation(line: 415, column: 31, scope: !10634)
!10638 = distinct !{!10638, !10635, !10639}
!10639 = !DILocation(line: 417, column: 3, scope: !10634)
!10640 = !DILocation(line: 421, column: 2, scope: !10628)
!10641 = !DILocation(line: 422, column: 2, scope: !10628)
!10642 = !DILocation(line: 422, column: 9, scope: !10628)
!10643 = !DILocation(line: 422, column: 34, scope: !10628)
!10644 = distinct !{!10644, !10641, !10645}
!10645 = !DILocation(line: 423, column: 2, scope: !10628)
!10646 = !DILocation(line: 424, column: 1, scope: !10628)
!10647 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10557, file: !10557, line: 1180, type: !3274, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !652)
!10648 = !DILocation(line: 1182, column: 3, scope: !10647)
!10649 = !DILocation(line: 1183, column: 1, scope: !10647)
!10650 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10557, file: !10557, line: 1169, type: !3274, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !652)
!10651 = !DILocation(line: 1171, column: 3, scope: !10650)
!10652 = !DILocation(line: 1172, column: 1, scope: !10650)
!10653 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10557, file: !10557, line: 1190, type: !9251, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !652)
!10654 = !DILocation(line: 1192, column: 12, scope: !10653)
!10655 = !DILocation(line: 1192, column: 11, scope: !10653)
!10656 = !DILocation(line: 1192, column: 3, scope: !10653)
!10657 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10557, file: !10557, line: 612, type: !9251, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !652)
!10658 = !DILocation(line: 614, column: 12, scope: !10657)
!10659 = !DILocation(line: 614, column: 11, scope: !10657)
!10660 = !DILocation(line: 614, column: 3, scope: !10657)
!10661 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10557, file: !10557, line: 592, type: !3274, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !652)
!10662 = !DILocation(line: 594, column: 3, scope: !10661)
!10663 = !DILocation(line: 595, column: 1, scope: !10661)
!10664 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10557, file: !10557, line: 760, type: !3274, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !652)
!10665 = !DILocation(line: 762, column: 3, scope: !10664)
!10666 = !DILocation(line: 763, column: 1, scope: !10664)
!10667 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10557, file: !10557, line: 780, type: !9251, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1050, retainedNodes: !652)
!10668 = !DILocation(line: 782, column: 12, scope: !10667)
!10669 = !DILocation(line: 782, column: 11, scope: !10667)
!10670 = !DILocation(line: 782, column: 3, scope: !10667)
!10671 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10672, file: !10672, line: 48, type: !9251, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !652)
!10672 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10673 = !DILocation(line: 51, column: 3, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10675, file: !10672, line: 50, column: 37)
!10675 = distinct !DILexicalBlock(scope: !10671, file: !10672, line: 50, column: 6)
!10676 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10672, file: !10672, line: 64, type: !3274, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !652)
!10677 = !DILocation(line: 66, column: 2, scope: !10676)
!10678 = !DILocation(line: 69, column: 1, scope: !10676)
!10679 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10557, file: !10557, line: 1219, type: !10680, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !10682)
!10680 = !DISubroutineType(types: !10681)
!10681 = !{null, !208, !208, !208}
!10682 = !{!10683, !10684, !10685}
!10683 = !DILocalVariable(name: "Source", arg: 1, scope: !10679, file: !10557, line: 1219, type: !208)
!10684 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !10679, file: !10557, line: 1219, type: !208)
!10685 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !10679, file: !10557, line: 1219, type: !208)
!10686 = !DILocation(line: 0, scope: !10679)
!10687 = !DILocation(line: 1221, column: 3, scope: !10679)
!10688 = !DILocation(line: 1222, column: 1, scope: !10679)
!10689 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !10672, file: !10672, line: 75, type: !9251, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !652)
!10690 = !DILocation(line: 77, column: 9, scope: !10689)
!10691 = !DILocation(line: 77, column: 2, scope: !10689)
!10692 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10672, file: !10672, line: 87, type: !3274, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !652)
!10693 = !DILocation(line: 93, column: 2, scope: !10692)
!10694 = !DILocation(line: 95, column: 1, scope: !10692)
!10695 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !6819, file: !6819, line: 895, type: !6820, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !10696)
!10696 = !{!10697, !10698}
!10697 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10695, file: !6819, line: 895, type: !208)
!10698 = !DILocalVariable(name: "tmpreg", scope: !10695, file: !6819, line: 897, type: !423)
!10699 = !DILocation(line: 0, scope: !10695)
!10700 = !DILocation(line: 897, column: 3, scope: !10695)
!10701 = !DILocation(line: 897, column: 17, scope: !10695)
!10702 = !DILocation(line: 898, column: 3, scope: !10695)
!10703 = !DILocation(line: 900, column: 12, scope: !10695)
!10704 = !DILocation(line: 900, column: 10, scope: !10695)
!10705 = !DILocation(line: 901, column: 9, scope: !10695)
!10706 = !DILocation(line: 902, column: 1, scope: !10695)
!10707 = distinct !DISubprogram(name: "uart_console_init", scope: !1225, file: !1225, line: 588, type: !1202, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1168, retainedNodes: !10708)
!10708 = !{!10709}
!10709 = !DILocalVariable(name: "arg", arg: 1, scope: !10707, file: !1225, line: 588, type: !1180)
!10710 = !DILocation(line: 0, scope: !10707)
!10711 = !DILocation(line: 593, column: 7, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10707, file: !1225, line: 593, column: 6)
!10713 = !DILocation(line: 593, column: 6, scope: !10707)
!10714 = !DILocation(line: 597, column: 2, scope: !10707)
!10715 = !DILocation(line: 599, column: 2, scope: !10707)
!10716 = !DILocation(line: 600, column: 1, scope: !10707)
!10717 = distinct !DISubprogram(name: "device_is_ready", scope: !4179, file: !4179, line: 47, type: !10718, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1168, retainedNodes: !10720)
!10718 = !DISubroutineType(types: !10719)
!10719 = !{!153, !1180}
!10720 = !{!10721}
!10721 = !DILocalVariable(name: "dev", arg: 1, scope: !10717, file: !4179, line: 47, type: !1180)
!10722 = !DILocation(line: 0, scope: !10717)
!10723 = !DILocation(line: 55, column: 2, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10717, file: !4179, line: 55, column: 2)
!10725 = !{i64 2152410669}
!10726 = !DILocation(line: 56, column: 9, scope: !10717)
!10727 = !DILocation(line: 56, column: 2, scope: !10717)
!10728 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1225, file: !1225, line: 573, type: !3274, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1168, retainedNodes: !652)
!10729 = !DILocation(line: 576, column: 2, scope: !10728)
!10730 = !DILocation(line: 579, column: 2, scope: !10728)
!10731 = !DILocation(line: 581, column: 1, scope: !10728)
!10732 = distinct !DISubprogram(name: "console_out", scope: !1225, file: !1225, line: 77, type: !410, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1168, retainedNodes: !10733)
!10733 = !{!10734}
!10734 = !DILocalVariable(name: "c", arg: 1, scope: !10732, file: !1225, line: 77, type: !125)
!10735 = !DILocation(line: 0, scope: !10732)
!10736 = !DILocation(line: 89, column: 11, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10732, file: !1225, line: 89, column: 6)
!10738 = !DILocation(line: 89, column: 6, scope: !10732)
!10739 = !DILocation(line: 90, column: 3, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10737, file: !1225, line: 89, column: 17)
!10741 = !DILocation(line: 91, column: 2, scope: !10740)
!10742 = !DILocation(line: 92, column: 34, scope: !10732)
!10743 = !DILocation(line: 92, column: 2, scope: !10732)
!10744 = !DILocation(line: 94, column: 2, scope: !10732)
!10745 = distinct !DISubprogram(name: "uart_poll_out", scope: !10746, file: !10746, line: 95, type: !1198, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1168, retainedNodes: !10747)
!10746 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/crypto")
!10747 = !{!10748, !10749}
!10748 = !DILocalVariable(name: "dev", arg: 1, scope: !10745, file: !10746, line: 95, type: !1180)
!10749 = !DILocalVariable(name: "out_char", arg: 2, scope: !10745, file: !10746, line: 95, type: !151)
!10750 = !DILocation(line: 0, scope: !10745)
!10751 = !DILocation(line: 105, column: 2, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10745, file: !10746, line: 105, column: 2)
!10753 = !{i64 2152494060}
!10754 = !DILocation(line: 106, column: 2, scope: !10745)
!10755 = !DILocation(line: 107, column: 1, scope: !10745)
!10756 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1174, file: !1174, line: 574, type: !1198, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1168, retainedNodes: !10757)
!10757 = !{!10758, !10759, !10760}
!10758 = !DILocalVariable(name: "dev", arg: 1, scope: !10756, file: !1174, line: 574, type: !1180)
!10759 = !DILocalVariable(name: "out_char", arg: 2, scope: !10756, file: !1174, line: 575, type: !151)
!10760 = !DILocalVariable(name: "api", scope: !10756, file: !1174, line: 577, type: !1171)
!10761 = !DILocation(line: 0, scope: !10756)
!10762 = !DILocation(line: 578, column: 40, scope: !10756)
!10763 = !DILocation(line: 580, column: 7, scope: !10756)
!10764 = !DILocation(line: 580, column: 2, scope: !10756)
!10765 = !DILocation(line: 581, column: 1, scope: !10756)
!10766 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !10718, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1168, retainedNodes: !10767)
!10767 = !{!10768}
!10768 = !DILocalVariable(name: "dev", arg: 1, scope: !10766, file: !137, line: 730, type: !1180)
!10769 = !DILocation(line: 0, scope: !10766)
!10770 = !DILocation(line: 732, column: 9, scope: !10766)
!10771 = !DILocation(line: 732, column: 2, scope: !10766)
!10772 = distinct !DISubprogram(name: "uart_register_input", scope: !1225, file: !1225, line: 560, type: !10773, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1168, retainedNodes: !10818)
!10773 = !DISubroutineType(types: !10774)
!10774 = !{null, !10775, !10775, !10815}
!10775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10776, size: 32)
!10776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !637, line: 2208, size: 128, elements: !10777)
!10777 = !{!10778}
!10778 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10776, file: !637, line: 2209, baseType: !10779, size: 128)
!10779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !637, line: 1709, size: 128, elements: !10780)
!10780 = !{!10781, !10794, !10796}
!10781 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10779, file: !637, line: 1710, baseType: !10782, size: 64)
!10782 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10783, line: 46, baseType: !10784)
!10783 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10783, line: 41, size: 64, elements: !10785)
!10785 = !{!10786, !10793}
!10786 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10784, file: !10783, line: 42, baseType: !10787, size: 32)
!10787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10788, size: 32)
!10788 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10783, line: 39, baseType: !10789)
!10789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10783, line: 35, size: 32, elements: !10790)
!10790 = !{!10791}
!10791 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10789, file: !10783, line: 36, baseType: !10792, size: 32)
!10792 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10783, line: 32, baseType: !208)
!10793 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10784, file: !10783, line: 43, baseType: !10787, size: 32, offset: 32)
!10794 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10779, file: !637, line: 1711, baseType: !10795, offset: 64)
!10795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !651, line: 43, elements: !652)
!10796 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10779, file: !637, line: 1712, baseType: !10797, size: 64, offset: 64)
!10797 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !580, line: 233, baseType: !10798)
!10798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 231, size: 64, elements: !10799)
!10799 = !{!10800}
!10800 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10798, file: !580, line: 232, baseType: !10801, size: 64)
!10801 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !554, line: 48, baseType: !10802)
!10802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !554, line: 37, size: 64, elements: !10803)
!10803 = !{!10804, !10810}
!10804 = !DIDerivedType(tag: DW_TAG_member, scope: !10802, file: !554, line: 38, baseType: !10805, size: 32)
!10805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10802, file: !554, line: 38, size: 32, elements: !10806)
!10806 = !{!10807, !10809}
!10807 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10805, file: !554, line: 39, baseType: !10808, size: 32)
!10808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10802, size: 32)
!10809 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10805, file: !554, line: 40, baseType: !10808, size: 32)
!10810 = !DIDerivedType(tag: DW_TAG_member, scope: !10802, file: !554, line: 42, baseType: !10811, size: 32, offset: 32)
!10811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10802, file: !554, line: 42, size: 32, elements: !10812)
!10812 = !{!10813, !10814}
!10813 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10811, file: !554, line: 43, baseType: !10808, size: 32)
!10814 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10811, file: !554, line: 44, baseType: !10808, size: 32)
!10815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10816, size: 32)
!10816 = !DISubroutineType(types: !10817)
!10817 = !{!150, !393, !150}
!10818 = !{!10819, !10820, !10821}
!10819 = !DILocalVariable(name: "avail", arg: 1, scope: !10772, file: !1225, line: 560, type: !10775)
!10820 = !DILocalVariable(name: "lines", arg: 2, scope: !10772, file: !1225, line: 560, type: !10775)
!10821 = !DILocalVariable(name: "completion", arg: 3, scope: !10772, file: !1225, line: 561, type: !10815)
!10822 = !DILocation(line: 0, scope: !10772)
!10823 = !DILocation(line: 566, column: 1, scope: !10772)
!10824 = distinct !DISubprogram(name: "tc_shim_init", scope: !1240, file: !1240, line: 305, type: !1264, scopeLine: 306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1234, retainedNodes: !10825)
!10825 = !{!10826, !10827}
!10826 = !DILocalVariable(name: "dev", arg: 1, scope: !10824, file: !1240, line: 305, type: !1266)
!10827 = !DILocalVariable(name: "i", scope: !10824, file: !1240, line: 307, type: !125)
!10828 = !DILocation(line: 0, scope: !10824)
!10829 = !DILocation(line: 311, column: 29, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10831, file: !1240, line: 310, column: 43)
!10831 = distinct !DILexicalBlock(scope: !10832, file: !1240, line: 310, column: 2)
!10832 = distinct !DILexicalBlock(scope: !10824, file: !1240, line: 310, column: 2)
!10833 = !DILocation(line: 314, column: 2, scope: !10824)
!10834 = distinct !DISubprogram(name: "tc_query_caps", scope: !1240, file: !1240, line: 289, type: !1264, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1234, retainedNodes: !10835)
!10835 = !{!10836}
!10836 = !DILocalVariable(name: "dev", arg: 1, scope: !10834, file: !1240, line: 289, type: !1266)
!10837 = !DILocation(line: 0, scope: !10834)
!10838 = !DILocation(line: 291, column: 2, scope: !10834)
!10839 = distinct !DISubprogram(name: "tc_session_setup", scope: !1240, file: !1240, line: 193, type: !1277, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1234, retainedNodes: !10840)
!10840 = !{!10841, !10842, !10843, !10844, !10845, !10846, !10848}
!10841 = !DILocalVariable(name: "dev", arg: 1, scope: !10839, file: !1240, line: 193, type: !1266)
!10842 = !DILocalVariable(name: "ctx", arg: 2, scope: !10839, file: !1240, line: 193, type: !1279)
!10843 = !DILocalVariable(name: "algo", arg: 3, scope: !10839, file: !1240, line: 194, type: !39)
!10844 = !DILocalVariable(name: "mode", arg: 4, scope: !10839, file: !1240, line: 194, type: !30)
!10845 = !DILocalVariable(name: "op_type", arg: 5, scope: !10839, file: !1240, line: 195, type: !42)
!10846 = !DILocalVariable(name: "data", scope: !10839, file: !1240, line: 197, type: !10847)
!10847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!10848 = !DILocalVariable(name: "idx", scope: !10839, file: !1240, line: 198, type: !125)
!10849 = !DILocation(line: 0, scope: !10839)
!10850 = !DILocation(line: 203, column: 11, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10839, file: !1240, line: 203, column: 6)
!10852 = !DILocation(line: 203, column: 6, scope: !10839)
!10853 = !DILocation(line: 204, column: 3, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10855, file: !1240, line: 204, column: 3)
!10855 = distinct !DILexicalBlock(scope: !10856, file: !1240, line: 204, column: 3)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !1240, line: 204, column: 3)
!10857 = distinct !DILexicalBlock(scope: !10858, file: !1240, line: 204, column: 3)
!10858 = distinct !DILexicalBlock(scope: !10851, file: !1240, line: 203, column: 38)
!10859 = !DILocation(line: 205, column: 3, scope: !10858)
!10860 = !DILocation(line: 211, column: 13, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10839, file: !1240, line: 211, column: 6)
!10862 = !DILocation(line: 211, column: 19, scope: !10861)
!10863 = !DILocation(line: 211, column: 6, scope: !10839)
!10864 = !DILocation(line: 212, column: 3, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10866, file: !1240, line: 212, column: 3)
!10866 = distinct !DILexicalBlock(scope: !10867, file: !1240, line: 212, column: 3)
!10867 = distinct !DILexicalBlock(scope: !10868, file: !1240, line: 212, column: 3)
!10868 = distinct !DILexicalBlock(scope: !10869, file: !1240, line: 212, column: 3)
!10869 = distinct !DILexicalBlock(scope: !10861, file: !1240, line: 211, column: 36)
!10870 = !DILocation(line: 213, column: 3, scope: !10869)
!10871 = !DILocation(line: 216, column: 11, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10839, file: !1240, line: 216, column: 6)
!10873 = !DILocation(line: 216, column: 18, scope: !10872)
!10874 = !DILocation(line: 216, column: 6, scope: !10839)
!10875 = !DILocation(line: 218, column: 3, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10877, file: !1240, line: 218, column: 3)
!10877 = distinct !DILexicalBlock(scope: !10878, file: !1240, line: 218, column: 3)
!10878 = distinct !DILexicalBlock(scope: !10879, file: !1240, line: 218, column: 3)
!10879 = distinct !DILexicalBlock(scope: !10880, file: !1240, line: 218, column: 3)
!10880 = distinct !DILexicalBlock(scope: !10872, file: !1240, line: 216, column: 38)
!10881 = !DILocation(line: 219, column: 3, scope: !10880)
!10882 = !DILocation(line: 222, column: 14, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10839, file: !1240, line: 222, column: 6)
!10884 = !DILocation(line: 222, column: 6, scope: !10839)
!10885 = !DILocation(line: 223, column: 3, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10883, file: !1240, line: 222, column: 43)
!10887 = !DILocation(line: 225, column: 13, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10886, file: !1240, line: 223, column: 17)
!10889 = !DILocation(line: 225, column: 29, scope: !10888)
!10890 = !DILocation(line: 226, column: 4, scope: !10888)
!10891 = !DILocation(line: 228, column: 34, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10888, file: !1240, line: 228, column: 8)
!10893 = !DILocation(line: 228, column: 42, scope: !10892)
!10894 = !DILocation(line: 228, column: 8, scope: !10888)
!10895 = !DILocation(line: 229, column: 5, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10897, file: !1240, line: 229, column: 5)
!10897 = distinct !DILexicalBlock(scope: !10898, file: !1240, line: 229, column: 5)
!10898 = distinct !DILexicalBlock(scope: !10899, file: !1240, line: 229, column: 5)
!10899 = distinct !DILexicalBlock(scope: !10900, file: !1240, line: 229, column: 5)
!10900 = distinct !DILexicalBlock(scope: !10892, file: !1240, line: 228, column: 50)
!10901 = !DILocation(line: 231, column: 5, scope: !10900)
!10902 = !DILocation(line: 233, column: 13, scope: !10888)
!10903 = !DILocation(line: 233, column: 29, scope: !10888)
!10904 = !DILocation(line: 234, column: 4, scope: !10888)
!10905 = !DILocation(line: 236, column: 13, scope: !10888)
!10906 = !DILocation(line: 236, column: 29, scope: !10888)
!10907 = !DILocation(line: 237, column: 4, scope: !10888)
!10908 = !DILocation(line: 239, column: 4, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10910, file: !1240, line: 239, column: 4)
!10910 = distinct !DILexicalBlock(scope: !10911, file: !1240, line: 239, column: 4)
!10911 = distinct !DILexicalBlock(scope: !10912, file: !1240, line: 239, column: 4)
!10912 = distinct !DILexicalBlock(scope: !10888, file: !1240, line: 239, column: 4)
!10913 = !DILocation(line: 240, column: 4, scope: !10888)
!10914 = !DILocation(line: 243, column: 3, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10883, file: !1240, line: 242, column: 9)
!10916 = !DILocation(line: 245, column: 13, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10915, file: !1240, line: 243, column: 17)
!10918 = !DILocation(line: 245, column: 29, scope: !10917)
!10919 = !DILocation(line: 246, column: 4, scope: !10917)
!10920 = !DILocation(line: 249, column: 34, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10917, file: !1240, line: 249, column: 8)
!10922 = !DILocation(line: 249, column: 42, scope: !10921)
!10923 = !DILocation(line: 249, column: 8, scope: !10917)
!10924 = !DILocation(line: 250, column: 5, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !1240, line: 250, column: 5)
!10926 = distinct !DILexicalBlock(scope: !10927, file: !1240, line: 250, column: 5)
!10927 = distinct !DILexicalBlock(scope: !10928, file: !1240, line: 250, column: 5)
!10928 = distinct !DILexicalBlock(scope: !10929, file: !1240, line: 250, column: 5)
!10929 = distinct !DILexicalBlock(scope: !10921, file: !1240, line: 249, column: 50)
!10930 = !DILocation(line: 252, column: 5, scope: !10929)
!10931 = !DILocation(line: 254, column: 13, scope: !10917)
!10932 = !DILocation(line: 254, column: 29, scope: !10917)
!10933 = !DILocation(line: 255, column: 4, scope: !10917)
!10934 = !DILocation(line: 257, column: 13, scope: !10917)
!10935 = !DILocation(line: 257, column: 29, scope: !10917)
!10936 = !DILocation(line: 258, column: 4, scope: !10917)
!10937 = !DILocation(line: 260, column: 4, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10939, file: !1240, line: 260, column: 4)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !1240, line: 260, column: 4)
!10940 = distinct !DILexicalBlock(scope: !10941, file: !1240, line: 260, column: 4)
!10941 = distinct !DILexicalBlock(scope: !10917, file: !1240, line: 260, column: 4)
!10942 = !DILocation(line: 261, column: 4, scope: !10917)
!10943 = !DILocation(line: 266, column: 11, scope: !10839)
!10944 = !DILocation(line: 266, column: 23, scope: !10839)
!10945 = !DILocation(line: 268, column: 8, scope: !10839)
!10946 = !DILocation(line: 269, column: 10, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10839, file: !1240, line: 269, column: 6)
!10948 = !DILocation(line: 269, column: 6, scope: !10839)
!10949 = !DILocation(line: 270, column: 3, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10951, file: !1240, line: 270, column: 3)
!10951 = distinct !DILexicalBlock(scope: !10952, file: !1240, line: 270, column: 3)
!10952 = distinct !DILexicalBlock(scope: !10953, file: !1240, line: 270, column: 3)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !1240, line: 270, column: 3)
!10954 = distinct !DILexicalBlock(scope: !10947, file: !1240, line: 269, column: 33)
!10955 = !DILocation(line: 271, column: 3, scope: !10954)
!10956 = !DILocation(line: 274, column: 10, scope: !10839)
!10957 = !DILocation(line: 276, column: 39, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10839, file: !1240, line: 276, column: 6)
!10959 = !DILocation(line: 276, column: 61, scope: !10958)
!10960 = !DILocation(line: 276, column: 6, scope: !10958)
!10961 = !DILocation(line: 277, column: 5, scope: !10958)
!10962 = !DILocation(line: 276, column: 6, scope: !10839)
!10963 = !DILocation(line: 278, column: 3, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10965, file: !1240, line: 278, column: 3)
!10965 = distinct !DILexicalBlock(scope: !10966, file: !1240, line: 278, column: 3)
!10966 = distinct !DILexicalBlock(scope: !10967, file: !1240, line: 278, column: 3)
!10967 = distinct !DILexicalBlock(scope: !10968, file: !1240, line: 278, column: 3)
!10968 = distinct !DILexicalBlock(scope: !10958, file: !1240, line: 277, column: 24)
!10969 = !DILocation(line: 279, column: 24, scope: !10968)
!10970 = !DILocation(line: 279, column: 31, scope: !10968)
!10971 = !DILocation(line: 281, column: 3, scope: !10968)
!10972 = !DILocation(line: 284, column: 7, scope: !10839)
!10973 = !DILocation(line: 284, column: 23, scope: !10839)
!10974 = !DILocation(line: 286, column: 2, scope: !10839)
!10975 = !DILocation(line: 287, column: 1, scope: !10839)
!10976 = distinct !DISubprogram(name: "tc_session_free", scope: !1240, file: !1240, line: 294, type: !1353, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1234, retainedNodes: !10977)
!10977 = !{!10978, !10979, !10980}
!10978 = !DILocalVariable(name: "dev", arg: 1, scope: !10976, file: !1240, line: 294, type: !1266)
!10979 = !DILocalVariable(name: "sessn", arg: 2, scope: !10976, file: !1240, line: 294, type: !1279)
!10980 = !DILocalVariable(name: "data", scope: !10976, file: !1240, line: 296, type: !10847)
!10981 = !DILocation(line: 0, scope: !10976)
!10982 = !DILocation(line: 296, column: 43, scope: !10976)
!10983 = !DILocation(line: 299, column: 8, scope: !10976)
!10984 = !DILocation(line: 300, column: 8, scope: !10976)
!10985 = !DILocation(line: 300, column: 15, scope: !10976)
!10986 = !DILocation(line: 302, column: 2, scope: !10976)
!10987 = distinct !DISubprogram(name: "do_cbc_encrypt", scope: !1240, file: !1240, line: 28, type: !1306, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1234, retainedNodes: !10988)
!10988 = !{!10989, !10990, !10991, !10992}
!10989 = !DILocalVariable(name: "ctx", arg: 1, scope: !10987, file: !1240, line: 28, type: !1279)
!10990 = !DILocalVariable(name: "op", arg: 2, scope: !10987, file: !1240, line: 28, type: !1294)
!10991 = !DILocalVariable(name: "iv", arg: 3, scope: !10987, file: !1240, line: 29, type: !184)
!10992 = !DILocalVariable(name: "data", scope: !10987, file: !1240, line: 31, type: !10847)
!10993 = !DILocation(line: 0, scope: !10987)
!10994 = !DILocation(line: 31, column: 41, scope: !10987)
!10995 = !DILocation(line: 33, column: 30, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10987, file: !1240, line: 33, column: 6)
!10997 = !DILocation(line: 34, column: 9, scope: !10996)
!10998 = !DILocation(line: 35, column: 9, scope: !10996)
!10999 = !DILocation(line: 35, column: 21, scope: !10996)
!11000 = !DILocation(line: 37, column: 12, scope: !10996)
!11001 = !DILocation(line: 33, column: 6, scope: !10996)
!11002 = !DILocation(line: 37, column: 25, scope: !10996)
!11003 = !DILocation(line: 33, column: 6, scope: !10987)
!11004 = !DILocation(line: 38, column: 3, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11006, file: !1240, line: 38, column: 3)
!11006 = distinct !DILexicalBlock(scope: !11007, file: !1240, line: 38, column: 3)
!11007 = distinct !DILexicalBlock(scope: !11008, file: !1240, line: 38, column: 3)
!11008 = distinct !DILexicalBlock(scope: !11009, file: !1240, line: 38, column: 3)
!11009 = distinct !DILexicalBlock(scope: !10996, file: !1240, line: 37, column: 44)
!11010 = !DILocation(line: 39, column: 3, scope: !11009)
!11011 = !DILocation(line: 43, column: 20, scope: !10987)
!11012 = !DILocation(line: 43, column: 6, scope: !10987)
!11013 = !DILocation(line: 43, column: 14, scope: !10987)
!11014 = !DILocation(line: 45, column: 2, scope: !10987)
!11015 = !DILocation(line: 46, column: 1, scope: !10987)
!11016 = distinct !DISubprogram(name: "do_ctr_op", scope: !1240, file: !1240, line: 76, type: !1306, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1234, retainedNodes: !11017)
!11017 = !{!11018, !11019, !11020, !11021, !11022, !11023}
!11018 = !DILocalVariable(name: "ctx", arg: 1, scope: !11016, file: !1240, line: 76, type: !1279)
!11019 = !DILocalVariable(name: "op", arg: 2, scope: !11016, file: !1240, line: 76, type: !1294)
!11020 = !DILocalVariable(name: "iv", arg: 3, scope: !11016, file: !1240, line: 77, type: !184)
!11021 = !DILocalVariable(name: "data", scope: !11016, file: !1240, line: 79, type: !10847)
!11022 = !DILocalVariable(name: "ctr", scope: !11016, file: !1240, line: 80, type: !311)
!11023 = !DILocalVariable(name: "ivlen", scope: !11016, file: !1240, line: 81, type: !125)
!11024 = !DILocation(line: 0, scope: !11016)
!11025 = !DILocation(line: 79, column: 41, scope: !11016)
!11026 = !DILocation(line: 80, column: 2, scope: !11016)
!11027 = !DILocation(line: 80, column: 10, scope: !11016)
!11028 = !DILocation(line: 81, column: 19, scope: !11016)
!11029 = !DILocation(line: 81, column: 14, scope: !11016)
!11030 = !DILocation(line: 81, column: 55, scope: !11016)
!11031 = !DILocation(line: 81, column: 63, scope: !11016)
!11032 = !DILocation(line: 81, column: 26, scope: !11016)
!11033 = !DILocation(line: 86, column: 2, scope: !11016)
!11034 = !DILocation(line: 88, column: 22, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11016, file: !1240, line: 88, column: 6)
!11036 = !DILocation(line: 88, column: 35, scope: !11035)
!11037 = !DILocation(line: 88, column: 52, scope: !11035)
!11038 = !DILocation(line: 89, column: 8, scope: !11035)
!11039 = !DILocation(line: 90, column: 11, scope: !11035)
!11040 = !DILocation(line: 88, column: 6, scope: !11035)
!11041 = !DILocation(line: 90, column: 24, scope: !11035)
!11042 = !DILocation(line: 88, column: 6, scope: !11016)
!11043 = !DILocation(line: 91, column: 3, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !1240, line: 91, column: 3)
!11045 = distinct !DILexicalBlock(scope: !11046, file: !1240, line: 91, column: 3)
!11046 = distinct !DILexicalBlock(scope: !11047, file: !1240, line: 91, column: 3)
!11047 = distinct !DILexicalBlock(scope: !11048, file: !1240, line: 91, column: 3)
!11048 = distinct !DILexicalBlock(scope: !11035, file: !1240, line: 90, column: 43)
!11049 = !DILocation(line: 92, column: 3, scope: !11048)
!11050 = !DILocation(line: 96, column: 20, scope: !11016)
!11051 = !DILocation(line: 96, column: 6, scope: !11016)
!11052 = !DILocation(line: 96, column: 14, scope: !11016)
!11053 = !DILocation(line: 98, column: 2, scope: !11016)
!11054 = !DILocation(line: 99, column: 1, scope: !11016)
!11055 = distinct !DISubprogram(name: "do_ccm_encrypt_mac", scope: !1240, file: !1240, line: 101, type: !1313, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1234, retainedNodes: !11056)
!11056 = !{!11057, !11058, !11059, !11060, !11068, !11069, !11071}
!11057 = !DILocalVariable(name: "ctx", arg: 1, scope: !11055, file: !1240, line: 101, type: !1279)
!11058 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11055, file: !1240, line: 102, type: !1315)
!11059 = !DILocalVariable(name: "nonce", arg: 3, scope: !11055, file: !1240, line: 102, type: !184)
!11060 = !DILocalVariable(name: "ccm", scope: !11055, file: !1240, line: 104, type: !11061)
!11061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2771, line: 91, size: 96, elements: !11062)
!11062 = !{!11063, !11066, !11067}
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !11061, file: !2771, line: 92, baseType: !11064, size: 32)
!11064 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !505, line: 66, baseType: !11065)
!11065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!11066 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !11061, file: !2771, line: 93, baseType: !184, size: 32, offset: 32)
!11067 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !11061, file: !2771, line: 94, baseType: !32, size: 32, offset: 64)
!11068 = !DILocalVariable(name: "data", scope: !11055, file: !1240, line: 105, type: !10847)
!11069 = !DILocalVariable(name: "ccm_param", scope: !11055, file: !1240, line: 106, type: !11070)
!11070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!11071 = !DILocalVariable(name: "op", scope: !11055, file: !1240, line: 107, type: !1294)
!11072 = !DILocation(line: 0, scope: !11055)
!11073 = !DILocation(line: 104, column: 2, scope: !11055)
!11074 = !DILocation(line: 104, column: 28, scope: !11055)
!11075 = !DILocation(line: 105, column: 41, scope: !11055)
!11076 = !DILocation(line: 106, column: 39, scope: !11055)
!11077 = !DILocation(line: 106, column: 51, scope: !11055)
!11078 = !DILocation(line: 107, column: 35, scope: !11055)
!11079 = !DILocation(line: 109, column: 33, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11055, file: !1240, line: 109, column: 6)
!11081 = !DILocation(line: 110, column: 15, scope: !11080)
!11082 = !DILocation(line: 110, column: 4, scope: !11080)
!11083 = !DILocation(line: 111, column: 15, scope: !11080)
!11084 = !DILocation(line: 111, column: 4, scope: !11080)
!11085 = !DILocation(line: 109, column: 6, scope: !11080)
!11086 = !DILocation(line: 111, column: 24, scope: !11080)
!11087 = !DILocation(line: 109, column: 6, scope: !11055)
!11088 = !DILocation(line: 112, column: 3, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11090, file: !1240, line: 112, column: 3)
!11090 = distinct !DILexicalBlock(scope: !11091, file: !1240, line: 112, column: 3)
!11091 = distinct !DILexicalBlock(scope: !11092, file: !1240, line: 112, column: 3)
!11092 = distinct !DILexicalBlock(scope: !11093, file: !1240, line: 112, column: 3)
!11093 = distinct !DILexicalBlock(scope: !11080, file: !1240, line: 111, column: 43)
!11094 = !DILocation(line: 113, column: 3, scope: !11093)
!11095 = !DILocation(line: 116, column: 39, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11055, file: !1240, line: 116, column: 6)
!11097 = !DILocation(line: 116, column: 52, scope: !11096)
!11098 = !DILocation(line: 117, column: 16, scope: !11096)
!11099 = !DILocation(line: 117, column: 29, scope: !11096)
!11100 = !DILocation(line: 117, column: 41, scope: !11096)
!11101 = !DILocation(line: 118, column: 11, scope: !11096)
!11102 = !DILocation(line: 116, column: 6, scope: !11096)
!11103 = !DILocation(line: 118, column: 25, scope: !11096)
!11104 = !DILocation(line: 116, column: 6, scope: !11055)
!11105 = !DILocation(line: 119, column: 3, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11107, file: !1240, line: 119, column: 3)
!11107 = distinct !DILexicalBlock(scope: !11108, file: !1240, line: 119, column: 3)
!11108 = distinct !DILexicalBlock(scope: !11109, file: !1240, line: 119, column: 3)
!11109 = distinct !DILexicalBlock(scope: !11110, file: !1240, line: 119, column: 3)
!11110 = distinct !DILexicalBlock(scope: !11096, file: !1240, line: 118, column: 44)
!11111 = !DILocation(line: 120, column: 3, scope: !11110)
!11112 = !DILocation(line: 128, column: 15, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11055, file: !1240, line: 128, column: 6)
!11114 = !DILocation(line: 128, column: 6, scope: !11113)
!11115 = !DILocation(line: 128, column: 6, scope: !11055)
!11116 = !DILocation(line: 129, column: 28, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11113, file: !1240, line: 128, column: 20)
!11118 = !DILocation(line: 129, column: 42, scope: !11117)
!11119 = !DILocation(line: 129, column: 36, scope: !11117)
!11120 = !DILocation(line: 129, column: 54, scope: !11117)
!11121 = !DILocation(line: 129, column: 3, scope: !11117)
!11122 = !DILocation(line: 130, column: 2, scope: !11117)
!11123 = !DILocation(line: 136, column: 20, scope: !11055)
!11124 = !DILocation(line: 136, column: 33, scope: !11055)
!11125 = !DILocation(line: 136, column: 27, scope: !11055)
!11126 = !DILocation(line: 136, column: 6, scope: !11055)
!11127 = !DILocation(line: 136, column: 14, scope: !11055)
!11128 = !DILocation(line: 138, column: 2, scope: !11055)
!11129 = !DILocation(line: 139, column: 1, scope: !11055)
!11130 = distinct !DISubprogram(name: "do_cbc_decrypt", scope: !1240, file: !1240, line: 48, type: !1306, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1234, retainedNodes: !11131)
!11131 = !{!11132, !11133, !11134, !11135}
!11132 = !DILocalVariable(name: "ctx", arg: 1, scope: !11130, file: !1240, line: 48, type: !1279)
!11133 = !DILocalVariable(name: "op", arg: 2, scope: !11130, file: !1240, line: 48, type: !1294)
!11134 = !DILocalVariable(name: "iv", arg: 3, scope: !11130, file: !1240, line: 49, type: !184)
!11135 = !DILocalVariable(name: "data", scope: !11130, file: !1240, line: 51, type: !10847)
!11136 = !DILocation(line: 0, scope: !11130)
!11137 = !DILocation(line: 56, column: 16, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11130, file: !1240, line: 56, column: 6)
!11139 = !DILocation(line: 56, column: 9, scope: !11138)
!11140 = !DILocation(line: 56, column: 6, scope: !11130)
!11141 = !DILocation(line: 57, column: 3, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !1240, line: 57, column: 3)
!11143 = distinct !DILexicalBlock(scope: !11144, file: !1240, line: 57, column: 3)
!11144 = distinct !DILexicalBlock(scope: !11145, file: !1240, line: 57, column: 3)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !1240, line: 57, column: 3)
!11146 = distinct !DILexicalBlock(scope: !11138, file: !1240, line: 56, column: 24)
!11147 = !DILocation(line: 58, column: 3, scope: !11146)
!11148 = !DILocation(line: 51, column: 41, scope: !11130)
!11149 = !DILocation(line: 61, column: 30, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11130, file: !1240, line: 61, column: 6)
!11151 = !DILocation(line: 62, column: 8, scope: !11150)
!11152 = !DILocation(line: 63, column: 15, scope: !11150)
!11153 = !DILocation(line: 64, column: 8, scope: !11150)
!11154 = !DILocation(line: 64, column: 15, scope: !11150)
!11155 = !DILocation(line: 65, column: 23, scope: !11150)
!11156 = !DILocation(line: 61, column: 6, scope: !11150)
!11157 = !DILocation(line: 65, column: 36, scope: !11150)
!11158 = !DILocation(line: 61, column: 6, scope: !11130)
!11159 = !DILocation(line: 66, column: 3, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11161, file: !1240, line: 66, column: 3)
!11161 = distinct !DILexicalBlock(scope: !11162, file: !1240, line: 66, column: 3)
!11162 = distinct !DILexicalBlock(scope: !11163, file: !1240, line: 66, column: 3)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !1240, line: 66, column: 3)
!11164 = distinct !DILexicalBlock(scope: !11150, file: !1240, line: 65, column: 55)
!11165 = !DILocation(line: 67, column: 3, scope: !11164)
!11166 = !DILocation(line: 71, column: 20, scope: !11130)
!11167 = !DILocation(line: 71, column: 6, scope: !11130)
!11168 = !DILocation(line: 71, column: 14, scope: !11130)
!11169 = !DILocation(line: 73, column: 2, scope: !11130)
!11170 = !DILocation(line: 74, column: 1, scope: !11130)
!11171 = distinct !DISubprogram(name: "do_ccm_decrypt_auth", scope: !1240, file: !1240, line: 141, type: !1313, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1234, retainedNodes: !11172)
!11172 = !{!11173, !11174, !11175, !11176, !11177, !11178, !11179}
!11173 = !DILocalVariable(name: "ctx", arg: 1, scope: !11171, file: !1240, line: 141, type: !1279)
!11174 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11171, file: !1240, line: 142, type: !1315)
!11175 = !DILocalVariable(name: "nonce", arg: 3, scope: !11171, file: !1240, line: 142, type: !184)
!11176 = !DILocalVariable(name: "ccm", scope: !11171, file: !1240, line: 144, type: !11061)
!11177 = !DILocalVariable(name: "data", scope: !11171, file: !1240, line: 145, type: !10847)
!11178 = !DILocalVariable(name: "ccm_param", scope: !11171, file: !1240, line: 146, type: !11070)
!11179 = !DILocalVariable(name: "op", scope: !11171, file: !1240, line: 147, type: !1294)
!11180 = !DILocation(line: 0, scope: !11171)
!11181 = !DILocation(line: 144, column: 2, scope: !11171)
!11182 = !DILocation(line: 144, column: 28, scope: !11171)
!11183 = !DILocation(line: 145, column: 41, scope: !11171)
!11184 = !DILocation(line: 146, column: 39, scope: !11171)
!11185 = !DILocation(line: 146, column: 51, scope: !11171)
!11186 = !DILocation(line: 147, column: 35, scope: !11171)
!11187 = !DILocation(line: 149, column: 33, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11171, file: !1240, line: 149, column: 6)
!11189 = !DILocation(line: 150, column: 17, scope: !11188)
!11190 = !DILocation(line: 150, column: 6, scope: !11188)
!11191 = !DILocation(line: 151, column: 17, scope: !11188)
!11192 = !DILocation(line: 151, column: 6, scope: !11188)
!11193 = !DILocation(line: 149, column: 6, scope: !11188)
!11194 = !DILocation(line: 151, column: 26, scope: !11188)
!11195 = !DILocation(line: 149, column: 6, scope: !11171)
!11196 = !DILocation(line: 152, column: 3, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11198, file: !1240, line: 152, column: 3)
!11198 = distinct !DILexicalBlock(scope: !11199, file: !1240, line: 152, column: 3)
!11199 = distinct !DILexicalBlock(scope: !11200, file: !1240, line: 152, column: 3)
!11200 = distinct !DILexicalBlock(scope: !11201, file: !1240, line: 152, column: 3)
!11201 = distinct !DILexicalBlock(scope: !11188, file: !1240, line: 151, column: 45)
!11202 = !DILocation(line: 153, column: 3, scope: !11201)
!11203 = !DILocation(line: 160, column: 15, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11171, file: !1240, line: 160, column: 6)
!11205 = !DILocation(line: 160, column: 26, scope: !11204)
!11206 = !DILocation(line: 160, column: 39, scope: !11204)
!11207 = !DILocation(line: 160, column: 33, scope: !11204)
!11208 = !DILocation(line: 160, column: 19, scope: !11204)
!11209 = !DILocation(line: 160, column: 6, scope: !11171)
!11210 = !DILocation(line: 161, column: 3, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11212, file: !1240, line: 161, column: 3)
!11212 = distinct !DILexicalBlock(scope: !11213, file: !1240, line: 161, column: 3)
!11213 = distinct !DILexicalBlock(scope: !11214, file: !1240, line: 161, column: 3)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !1240, line: 161, column: 3)
!11215 = distinct !DILexicalBlock(scope: !11204, file: !1240, line: 160, column: 47)
!11216 = !DILocation(line: 162, column: 3, scope: !11215)
!11217 = !DILocation(line: 165, column: 41, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11171, file: !1240, line: 165, column: 6)
!11219 = !DILocation(line: 165, column: 54, scope: !11218)
!11220 = !DILocation(line: 166, column: 18, scope: !11218)
!11221 = !DILocation(line: 166, column: 31, scope: !11218)
!11222 = !DILocation(line: 168, column: 33, scope: !11218)
!11223 = !DILocation(line: 168, column: 22, scope: !11218)
!11224 = !DILocation(line: 168, column: 20, scope: !11218)
!11225 = !DILocation(line: 165, column: 6, scope: !11218)
!11226 = !DILocation(line: 169, column: 15, scope: !11218)
!11227 = !DILocation(line: 165, column: 6, scope: !11171)
!11228 = !DILocation(line: 170, column: 3, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11230, file: !1240, line: 170, column: 3)
!11230 = distinct !DILexicalBlock(scope: !11231, file: !1240, line: 170, column: 3)
!11231 = distinct !DILexicalBlock(scope: !11232, file: !1240, line: 170, column: 3)
!11232 = distinct !DILexicalBlock(scope: !11233, file: !1240, line: 170, column: 3)
!11233 = distinct !DILexicalBlock(scope: !11218, file: !1240, line: 169, column: 34)
!11234 = !DILocation(line: 171, column: 3, scope: !11233)
!11235 = !DILocation(line: 174, column: 20, scope: !11171)
!11236 = !DILocation(line: 174, column: 40, scope: !11171)
!11237 = !DILocation(line: 174, column: 29, scope: !11171)
!11238 = !DILocation(line: 174, column: 27, scope: !11171)
!11239 = !DILocation(line: 174, column: 6, scope: !11171)
!11240 = !DILocation(line: 174, column: 14, scope: !11171)
!11241 = !DILocation(line: 176, column: 2, scope: !11171)
!11242 = !DILocation(line: 177, column: 1, scope: !11171)
!11243 = distinct !DISubprogram(name: "get_unused_session", scope: !1240, file: !1240, line: 179, type: !9547, scopeLine: 180, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1234, retainedNodes: !11244)
!11244 = !{!11245}
!11245 = !DILocalVariable(name: "i", scope: !11243, file: !1240, line: 181, type: !125)
!11246 = !DILocation(line: 0, scope: !11243)
!11247 = !DILocation(line: 183, column: 2, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11243, file: !1240, line: 183, column: 2)
!11249 = !DILocation(line: 184, column: 26, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !1240, line: 184, column: 7)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !1240, line: 183, column: 43)
!11252 = distinct !DILexicalBlock(scope: !11248, file: !1240, line: 183, column: 2)
!11253 = !DILocation(line: 184, column: 33, scope: !11250)
!11254 = !DILocation(line: 184, column: 7, scope: !11251)
!11255 = !DILocation(line: 185, column: 30, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11250, file: !1240, line: 184, column: 39)
!11257 = !DILocation(line: 186, column: 4, scope: !11256)
!11258 = distinct !{!11258, !11247, !11259}
!11259 = !DILocation(line: 188, column: 2, scope: !11248)
!11260 = !DILocation(line: 190, column: 2, scope: !11243)
!11261 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1566, file: !1566, line: 523, type: !1432, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11262)
!11262 = !{!11263, !11264, !11265, !11266, !11267}
!11263 = !DILocalVariable(name: "dev", arg: 1, scope: !11261, file: !1566, line: 523, type: !1434)
!11264 = !DILocalVariable(name: "pin", arg: 2, scope: !11261, file: !1566, line: 524, type: !797)
!11265 = !DILocalVariable(name: "flags", arg: 3, scope: !11261, file: !1566, line: 524, type: !798)
!11266 = !DILocalVariable(name: "err", scope: !11261, file: !1566, line: 526, type: !125)
!11267 = !DILocalVariable(name: "pincfg", scope: !11261, file: !1566, line: 527, type: !125)
!11268 = !DILocation(line: 0, scope: !11261)
!11269 = !DILocation(line: 527, column: 2, scope: !11261)
!11270 = !DILocation(line: 532, column: 8, scope: !11261)
!11271 = !DILocation(line: 533, column: 10, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11261, file: !1566, line: 533, column: 6)
!11273 = !DILocation(line: 533, column: 6, scope: !11261)
!11274 = !DILocation(line: 543, column: 13, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11261, file: !1566, line: 543, column: 6)
!11276 = !DILocation(line: 543, column: 28, scope: !11275)
!11277 = !DILocation(line: 543, column: 6, scope: !11261)
!11278 = !DILocation(line: 544, column: 14, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11280, file: !1566, line: 544, column: 7)
!11280 = distinct !DILexicalBlock(scope: !11275, file: !1566, line: 543, column: 34)
!11281 = !DILocation(line: 544, column: 39, scope: !11279)
!11282 = !DILocation(line: 544, column: 7, scope: !11280)
!11283 = !DILocation(line: 545, column: 38, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11279, file: !1566, line: 544, column: 45)
!11285 = !DILocation(line: 545, column: 4, scope: !11284)
!11286 = !DILocation(line: 546, column: 3, scope: !11284)
!11287 = !DILocation(line: 546, column: 21, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11279, file: !1566, line: 546, column: 14)
!11289 = !DILocation(line: 546, column: 45, scope: !11288)
!11290 = !DILocation(line: 546, column: 14, scope: !11279)
!11291 = !DILocation(line: 547, column: 40, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11288, file: !1566, line: 546, column: 51)
!11293 = !DILocation(line: 547, column: 4, scope: !11292)
!11294 = !DILocation(line: 548, column: 3, scope: !11292)
!11295 = !DILocation(line: 551, column: 32, scope: !11261)
!11296 = !DILocation(line: 551, column: 37, scope: !11261)
!11297 = !DILocation(line: 551, column: 2, scope: !11261)
!11298 = !DILocation(line: 554, column: 6, scope: !11261)
!11299 = !DILocation(line: 562, column: 1, scope: !11261)
!11300 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1566, file: !1566, line: 410, type: !11301, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11303)
!11301 = !DISubroutineType(types: !11302)
!11302 = !{!125, !1434, !1090}
!11303 = !{!11304, !11305, !11306, !11308}
!11304 = !DILocalVariable(name: "dev", arg: 1, scope: !11300, file: !1566, line: 410, type: !1434)
!11305 = !DILocalVariable(name: "value", arg: 2, scope: !11300, file: !1566, line: 410, type: !1090)
!11306 = !DILocalVariable(name: "cfg", scope: !11300, file: !1566, line: 412, type: !11307)
!11307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!11308 = !DILocalVariable(name: "gpio", scope: !11300, file: !1566, line: 413, type: !1501)
!11309 = !DILocation(line: 0, scope: !11300)
!11310 = !DILocation(line: 412, column: 45, scope: !11300)
!11311 = !DILocation(line: 413, column: 44, scope: !11300)
!11312 = !DILocation(line: 415, column: 11, scope: !11300)
!11313 = !DILocation(line: 415, column: 9, scope: !11300)
!11314 = !DILocation(line: 417, column: 2, scope: !11300)
!11315 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1566, file: !1566, line: 420, type: !1455, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11316)
!11316 = !{!11317, !11318, !11319, !11320, !11321, !11322}
!11317 = !DILocalVariable(name: "dev", arg: 1, scope: !11315, file: !1566, line: 420, type: !1434)
!11318 = !DILocalVariable(name: "mask", arg: 2, scope: !11315, file: !1566, line: 421, type: !809)
!11319 = !DILocalVariable(name: "value", arg: 3, scope: !11315, file: !1566, line: 422, type: !804)
!11320 = !DILocalVariable(name: "cfg", scope: !11315, file: !1566, line: 424, type: !11307)
!11321 = !DILocalVariable(name: "gpio", scope: !11315, file: !1566, line: 425, type: !1501)
!11322 = !DILocalVariable(name: "port_value", scope: !11315, file: !1566, line: 426, type: !208)
!11323 = !DILocation(line: 0, scope: !11315)
!11324 = !DILocation(line: 424, column: 45, scope: !11315)
!11325 = !DILocation(line: 425, column: 44, scope: !11315)
!11326 = !DILocation(line: 430, column: 15, scope: !11315)
!11327 = !DILocation(line: 431, column: 46, scope: !11315)
!11328 = !DILocation(line: 431, column: 44, scope: !11315)
!11329 = !DILocation(line: 431, column: 61, scope: !11315)
!11330 = !DILocation(line: 431, column: 53, scope: !11315)
!11331 = !DILocation(line: 431, column: 2, scope: !11315)
!11332 = !DILocation(line: 435, column: 2, scope: !11315)
!11333 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1566, file: !1566, line: 438, type: !1459, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11334)
!11334 = !{!11335, !11336, !11337, !11338}
!11335 = !DILocalVariable(name: "dev", arg: 1, scope: !11333, file: !1566, line: 438, type: !1434)
!11336 = !DILocalVariable(name: "pins", arg: 2, scope: !11333, file: !1566, line: 439, type: !809)
!11337 = !DILocalVariable(name: "cfg", scope: !11333, file: !1566, line: 441, type: !11307)
!11338 = !DILocalVariable(name: "gpio", scope: !11333, file: !1566, line: 442, type: !1501)
!11339 = !DILocation(line: 0, scope: !11333)
!11340 = !DILocation(line: 441, column: 45, scope: !11333)
!11341 = !DILocation(line: 442, column: 44, scope: !11333)
!11342 = !DILocation(line: 448, column: 2, scope: !11333)
!11343 = !DILocation(line: 450, column: 2, scope: !11333)
!11344 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1566, file: !1566, line: 453, type: !1459, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11345)
!11345 = !{!11346, !11347, !11348, !11349}
!11346 = !DILocalVariable(name: "dev", arg: 1, scope: !11344, file: !1566, line: 453, type: !1434)
!11347 = !DILocalVariable(name: "pins", arg: 2, scope: !11344, file: !1566, line: 454, type: !809)
!11348 = !DILocalVariable(name: "cfg", scope: !11344, file: !1566, line: 456, type: !11307)
!11349 = !DILocalVariable(name: "gpio", scope: !11344, file: !1566, line: 457, type: !1501)
!11350 = !DILocation(line: 0, scope: !11344)
!11351 = !DILocation(line: 456, column: 45, scope: !11344)
!11352 = !DILocation(line: 457, column: 44, scope: !11344)
!11353 = !DILocation(line: 467, column: 2, scope: !11344)
!11354 = !DILocation(line: 470, column: 2, scope: !11344)
!11355 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1566, file: !1566, line: 473, type: !1459, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11356)
!11356 = !{!11357, !11358, !11359, !11360}
!11357 = !DILocalVariable(name: "dev", arg: 1, scope: !11355, file: !1566, line: 473, type: !1434)
!11358 = !DILocalVariable(name: "pins", arg: 2, scope: !11355, file: !1566, line: 474, type: !809)
!11359 = !DILocalVariable(name: "cfg", scope: !11355, file: !1566, line: 476, type: !11307)
!11360 = !DILocalVariable(name: "gpio", scope: !11355, file: !1566, line: 477, type: !1501)
!11361 = !DILocation(line: 0, scope: !11355)
!11362 = !DILocation(line: 476, column: 45, scope: !11355)
!11363 = !DILocation(line: 477, column: 44, scope: !11355)
!11364 = !DILocation(line: 484, column: 2, scope: !11355)
!11365 = !DILocation(line: 487, column: 2, scope: !11355)
!11366 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1566, file: !1566, line: 594, type: !1465, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11367)
!11367 = !{!11368, !11369, !11370, !11371, !11372, !11373, !11375, !11376, !11377}
!11368 = !DILocalVariable(name: "dev", arg: 1, scope: !11366, file: !1566, line: 594, type: !1434)
!11369 = !DILocalVariable(name: "pin", arg: 2, scope: !11366, file: !1566, line: 595, type: !797)
!11370 = !DILocalVariable(name: "mode", arg: 3, scope: !11366, file: !1566, line: 596, type: !762)
!11371 = !DILocalVariable(name: "trig", arg: 4, scope: !11366, file: !1566, line: 597, type: !768)
!11372 = !DILocalVariable(name: "cfg", scope: !11366, file: !1566, line: 599, type: !11307)
!11373 = !DILocalVariable(name: "data", scope: !11366, file: !1566, line: 600, type: !11374)
!11374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 32)
!11375 = !DILocalVariable(name: "edge", scope: !11366, file: !1566, line: 601, type: !125)
!11376 = !DILocalVariable(name: "err", scope: !11366, file: !1566, line: 602, type: !125)
!11377 = !DILabel(scope: !11366, name: "exit", file: !1566, line: 643)
!11378 = !DILocation(line: 0, scope: !11366)
!11379 = !DILocation(line: 599, column: 45, scope: !11366)
!11380 = !DILocation(line: 604, column: 6, scope: !11366)
!11381 = !DILocation(line: 605, column: 34, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11383, file: !1566, line: 605, column: 7)
!11383 = distinct !DILexicalBlock(scope: !11384, file: !1566, line: 604, column: 38)
!11384 = distinct !DILexicalBlock(scope: !11366, file: !1566, line: 604, column: 6)
!11385 = !DILocation(line: 605, column: 7, scope: !11382)
!11386 = !DILocation(line: 605, column: 47, scope: !11382)
!11387 = !DILocation(line: 605, column: 39, scope: !11382)
!11388 = !DILocation(line: 605, column: 7, scope: !11383)
!11389 = !DILocation(line: 606, column: 4, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11382, file: !1566, line: 605, column: 53)
!11391 = !DILocation(line: 607, column: 4, scope: !11390)
!11392 = !DILocation(line: 608, column: 4, scope: !11390)
!11393 = !DILocation(line: 609, column: 3, scope: !11390)
!11394 = !DILocation(line: 600, column: 38, scope: !11366)
!11395 = !DILocation(line: 620, column: 30, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11366, file: !1566, line: 620, column: 6)
!11397 = !DILocation(line: 620, column: 6, scope: !11396)
!11398 = !DILocation(line: 620, column: 57, scope: !11396)
!11399 = !DILocation(line: 620, column: 6, scope: !11366)
!11400 = !DILocation(line: 625, column: 29, scope: !11366)
!11401 = !DILocation(line: 625, column: 2, scope: !11366)
!11402 = !DILocation(line: 627, column: 2, scope: !11366)
!11403 = !DILocation(line: 630, column: 3, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11366, file: !1566, line: 627, column: 16)
!11405 = !DILocation(line: 633, column: 3, scope: !11404)
!11406 = !DILocation(line: 636, column: 3, scope: !11404)
!11407 = !DILocation(line: 639, column: 2, scope: !11366)
!11408 = !DILocation(line: 641, column: 2, scope: !11366)
!11409 = !DILocation(line: 643, column: 1, scope: !11366)
!11410 = !DILocation(line: 644, column: 2, scope: !11366)
!11411 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1566, file: !1566, line: 647, type: !1469, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11412)
!11412 = !{!11413, !11414, !11415, !11416}
!11413 = !DILocalVariable(name: "dev", arg: 1, scope: !11411, file: !1566, line: 647, type: !1434)
!11414 = !DILocalVariable(name: "callback", arg: 2, scope: !11411, file: !1566, line: 648, type: !1471)
!11415 = !DILocalVariable(name: "set", arg: 3, scope: !11411, file: !1566, line: 649, type: !153)
!11416 = !DILocalVariable(name: "data", scope: !11411, file: !1566, line: 651, type: !11374)
!11417 = !DILocation(line: 0, scope: !11411)
!11418 = !DILocation(line: 651, column: 38, scope: !11411)
!11419 = !DILocation(line: 653, column: 37, scope: !11411)
!11420 = !DILocation(line: 653, column: 9, scope: !11411)
!11421 = !DILocation(line: 653, column: 2, scope: !11411)
!11422 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !11423, file: !11423, line: 38, type: !11424, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11427)
!11423 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11424 = !DISubroutineType(types: !11425)
!11425 = !{!125, !11426, !1471, !153}
!11426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!11427 = !{!11428, !11429, !11430}
!11428 = !DILocalVariable(name: "callbacks", arg: 1, scope: !11422, file: !11423, line: 38, type: !11426)
!11429 = !DILocalVariable(name: "callback", arg: 2, scope: !11422, file: !11423, line: 39, type: !1471)
!11430 = !DILocalVariable(name: "set", arg: 3, scope: !11422, file: !11423, line: 40, type: !153)
!11431 = !DILocation(line: 0, scope: !11422)
!11432 = !DILocation(line: 45, column: 7, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11422, file: !11423, line: 45, column: 6)
!11434 = !DILocation(line: 45, column: 6, scope: !11422)
!11435 = !DILocation(line: 46, column: 56, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11437, file: !11423, line: 46, column: 7)
!11437 = distinct !DILexicalBlock(scope: !11433, file: !11423, line: 45, column: 38)
!11438 = !DILocation(line: 46, column: 8, scope: !11436)
!11439 = !DILocation(line: 46, column: 7, scope: !11437)
!11440 = !DILocation(line: 51, column: 13, scope: !11433)
!11441 = !DILocation(line: 56, column: 43, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !11423, line: 55, column: 11)
!11443 = distinct !DILexicalBlock(scope: !11422, file: !11423, line: 55, column: 6)
!11444 = !DILocation(line: 56, column: 3, scope: !11442)
!11445 = !DILocation(line: 57, column: 2, scope: !11442)
!11446 = !DILocation(line: 60, column: 1, scope: !11422)
!11447 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !829, file: !829, line: 261, type: !11448, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11450)
!11448 = !DISubroutineType(types: !11449)
!11449 = !{!153, !11426}
!11450 = !{!11451}
!11451 = !DILocalVariable(name: "list", arg: 1, scope: !11447, file: !829, line: 261, type: !11426)
!11452 = !DILocation(line: 0, scope: !11447)
!11453 = !DILocation(line: 261, column: 1, scope: !11447)
!11454 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !829, file: !829, line: 417, type: !11455, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11457)
!11455 = !DISubroutineType(types: !11456)
!11456 = !{!153, !11426, !1634}
!11457 = !{!11458, !11459, !11460, !11461}
!11458 = !DILocalVariable(name: "list", arg: 1, scope: !11454, file: !829, line: 417, type: !11426)
!11459 = !DILocalVariable(name: "node", arg: 2, scope: !11454, file: !829, line: 417, type: !1634)
!11460 = !DILocalVariable(name: "prev", scope: !11454, file: !829, line: 417, type: !1634)
!11461 = !DILocalVariable(name: "test", scope: !11454, file: !829, line: 417, type: !1634)
!11462 = !DILocation(line: 0, scope: !11454)
!11463 = !DILocation(line: 417, column: 1, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11454, file: !829, line: 417, column: 1)
!11465 = !DILocation(line: 417, column: 1, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11464, file: !829, line: 417, column: 1)
!11467 = !DILocation(line: 417, column: 1, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11469, file: !829, line: 417, column: 1)
!11469 = distinct !DILexicalBlock(scope: !11466, file: !829, line: 417, column: 1)
!11470 = !DILocation(line: 417, column: 1, scope: !11469)
!11471 = distinct !{!11471, !11463, !11463}
!11472 = !DILocation(line: 417, column: 1, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11468, file: !829, line: 417, column: 1)
!11474 = !DILocation(line: 417, column: 1, scope: !11454)
!11475 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !829, file: !829, line: 298, type: !11476, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11478)
!11476 = !DISubroutineType(types: !11477)
!11477 = !{null, !11426, !1634}
!11478 = !{!11479, !11480}
!11479 = !DILocalVariable(name: "list", arg: 1, scope: !11475, file: !829, line: 298, type: !11426)
!11480 = !DILocalVariable(name: "node", arg: 2, scope: !11475, file: !829, line: 298, type: !1634)
!11481 = !DILocation(line: 0, scope: !11475)
!11482 = !DILocation(line: 298, column: 1, scope: !11475)
!11483 = !DILocation(line: 298, column: 1, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11475, file: !829, line: 298, column: 1)
!11485 = !DILocation(line: 298, column: 1, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11484, file: !829, line: 298, column: 1)
!11487 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !829, file: !829, line: 231, type: !11488, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11490)
!11488 = !DISubroutineType(types: !11489)
!11489 = !{!1634, !11426}
!11490 = !{!11491}
!11491 = !DILocalVariable(name: "list", arg: 1, scope: !11487, file: !829, line: 231, type: !11426)
!11492 = !DILocation(line: 0, scope: !11487)
!11493 = !DILocation(line: 233, column: 15, scope: !11487)
!11494 = !DILocation(line: 233, column: 2, scope: !11487)
!11495 = distinct !DISubprogram(name: "z_snode_next_set", scope: !829, file: !829, line: 209, type: !11496, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11498)
!11496 = !DISubroutineType(types: !11497)
!11497 = !{null, !1634, !1634}
!11498 = !{!11499, !11500}
!11499 = !DILocalVariable(name: "parent", arg: 1, scope: !11495, file: !829, line: 209, type: !1634)
!11500 = !DILocalVariable(name: "child", arg: 2, scope: !11495, file: !829, line: 209, type: !1634)
!11501 = !DILocation(line: 0, scope: !11495)
!11502 = !DILocation(line: 211, column: 10, scope: !11495)
!11503 = !DILocation(line: 211, column: 15, scope: !11495)
!11504 = !DILocation(line: 212, column: 1, scope: !11495)
!11505 = distinct !DISubprogram(name: "z_slist_head_set", scope: !829, file: !829, line: 214, type: !11476, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11506)
!11506 = !{!11507, !11508}
!11507 = !DILocalVariable(name: "list", arg: 1, scope: !11505, file: !829, line: 214, type: !11426)
!11508 = !DILocalVariable(name: "node", arg: 2, scope: !11505, file: !829, line: 214, type: !1634)
!11509 = !DILocation(line: 0, scope: !11505)
!11510 = !DILocation(line: 216, column: 8, scope: !11505)
!11511 = !DILocation(line: 216, column: 13, scope: !11505)
!11512 = !DILocation(line: 217, column: 1, scope: !11505)
!11513 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !829, file: !829, line: 243, type: !11488, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11514)
!11514 = !{!11515}
!11515 = !DILocalVariable(name: "list", arg: 1, scope: !11513, file: !829, line: 243, type: !11426)
!11516 = !DILocation(line: 0, scope: !11513)
!11517 = !DILocation(line: 245, column: 15, scope: !11513)
!11518 = !DILocation(line: 245, column: 2, scope: !11513)
!11519 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !829, file: !829, line: 219, type: !11476, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11520)
!11520 = !{!11521, !11522}
!11521 = !DILocalVariable(name: "list", arg: 1, scope: !11519, file: !829, line: 219, type: !11426)
!11522 = !DILocalVariable(name: "node", arg: 2, scope: !11519, file: !829, line: 219, type: !1634)
!11523 = !DILocation(line: 0, scope: !11519)
!11524 = !DILocation(line: 221, column: 8, scope: !11519)
!11525 = !DILocation(line: 221, column: 13, scope: !11519)
!11526 = !DILocation(line: 222, column: 1, scope: !11519)
!11527 = distinct !DISubprogram(name: "sys_slist_remove", scope: !829, file: !829, line: 401, type: !11528, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11530)
!11528 = !DISubroutineType(types: !11529)
!11529 = !{null, !11426, !1634, !1634}
!11530 = !{!11531, !11532, !11533}
!11531 = !DILocalVariable(name: "list", arg: 1, scope: !11527, file: !829, line: 401, type: !11426)
!11532 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11527, file: !829, line: 401, type: !1634)
!11533 = !DILocalVariable(name: "node", arg: 3, scope: !11527, file: !829, line: 401, type: !1634)
!11534 = !DILocation(line: 0, scope: !11527)
!11535 = !DILocation(line: 401, column: 1, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11527, file: !829, line: 401, column: 1)
!11537 = !DILocation(line: 0, scope: !11536)
!11538 = !DILocation(line: 401, column: 1, scope: !11527)
!11539 = !DILocation(line: 401, column: 1, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11536, file: !829, line: 401, column: 1)
!11541 = !DILocation(line: 401, column: 1, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11540, file: !829, line: 401, column: 1)
!11543 = !DILocation(line: 401, column: 1, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11542, file: !829, line: 401, column: 1)
!11545 = !DILocation(line: 401, column: 1, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11536, file: !829, line: 401, column: 1)
!11547 = !DILocation(line: 401, column: 1, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11546, file: !829, line: 401, column: 1)
!11549 = !DILocation(line: 401, column: 1, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11548, file: !829, line: 401, column: 1)
!11551 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !829, file: !829, line: 285, type: !11552, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11554)
!11552 = !DISubroutineType(types: !11553)
!11553 = !{!1634, !1634}
!11554 = !{!11555}
!11555 = !DILocalVariable(name: "node", arg: 1, scope: !11551, file: !829, line: 285, type: !1634)
!11556 = !DILocation(line: 0, scope: !11551)
!11557 = !DILocation(line: 285, column: 1, scope: !11551)
!11558 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !829, file: !829, line: 274, type: !11552, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11559)
!11559 = !{!11560}
!11560 = !DILocalVariable(name: "node", arg: 1, scope: !11558, file: !829, line: 274, type: !1634)
!11561 = !DILocation(line: 0, scope: !11558)
!11562 = !DILocation(line: 274, column: 1, scope: !11558)
!11563 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !829, file: !829, line: 204, type: !11552, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11564)
!11564 = !{!11565}
!11565 = !DILocalVariable(name: "node", arg: 1, scope: !11563, file: !829, line: 204, type: !1634)
!11566 = !DILocation(line: 0, scope: !11563)
!11567 = !DILocation(line: 206, column: 15, scope: !11563)
!11568 = !DILocation(line: 206, column: 2, scope: !11563)
!11569 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1566, file: !1566, line: 342, type: !410, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11570)
!11570 = !{!11571, !11572, !11573}
!11571 = !DILocalVariable(name: "pin", arg: 1, scope: !11569, file: !1566, line: 342, type: !125)
!11572 = !DILocalVariable(name: "line", scope: !11569, file: !1566, line: 344, type: !208)
!11573 = !DILocalVariable(name: "port", scope: !11569, file: !1566, line: 345, type: !125)
!11574 = !DILocation(line: 0, scope: !11569)
!11575 = !DILocation(line: 344, column: 18, scope: !11569)
!11576 = !{i32 983040, i32 0}
!11577 = !DILocation(line: 356, column: 9, scope: !11569)
!11578 = !DILocation(line: 370, column: 2, scope: !11569)
!11579 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1566, file: !1566, line: 37, type: !982, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11580)
!11580 = !{!11581, !11582, !11583}
!11581 = !DILocalVariable(name: "line", arg: 1, scope: !11579, file: !1566, line: 37, type: !125)
!11582 = !DILocalVariable(name: "arg", arg: 2, scope: !11579, file: !1566, line: 37, type: !124)
!11583 = !DILocalVariable(name: "data", scope: !11579, file: !1566, line: 39, type: !11374)
!11584 = !DILocation(line: 0, scope: !11579)
!11585 = !DILocation(line: 41, column: 29, scope: !11579)
!11586 = !DILocation(line: 41, column: 39, scope: !11579)
!11587 = !DILocation(line: 41, column: 44, scope: !11579)
!11588 = !DILocation(line: 41, column: 2, scope: !11579)
!11589 = !DILocation(line: 42, column: 1, scope: !11579)
!11590 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1566, file: !1566, line: 376, type: !11591, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11593)
!11591 = !DISubroutineType(types: !11592)
!11592 = !{!125, !125, !125}
!11593 = !{!11594, !11595, !11596, !11598, !11599}
!11594 = !DILocalVariable(name: "port", arg: 1, scope: !11590, file: !1566, line: 376, type: !125)
!11595 = !DILocalVariable(name: "pin", arg: 2, scope: !11590, file: !1566, line: 376, type: !125)
!11596 = !DILocalVariable(name: "clk", scope: !11590, file: !1566, line: 386, type: !11597)
!11597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!11598 = !DILocalVariable(name: "pclken", scope: !11590, file: !1566, line: 387, type: !1669)
!11599 = !DILocalVariable(name: "ret", scope: !11590, file: !1566, line: 396, type: !125)
!11600 = !DILocation(line: 0, scope: !11590)
!11601 = !DILocation(line: 387, column: 2, scope: !11590)
!11602 = !DILocation(line: 387, column: 22, scope: !11590)
!11603 = !DILocation(line: 399, column: 8, scope: !11590)
!11604 = !DILocation(line: 400, column: 10, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11590, file: !1566, line: 400, column: 6)
!11606 = !DILocation(line: 400, column: 6, scope: !11590)
!11607 = !DILocation(line: 405, column: 2, scope: !11590)
!11608 = !DILocation(line: 407, column: 2, scope: !11590)
!11609 = !DILocation(line: 408, column: 1, scope: !11590)
!11610 = distinct !DISubprogram(name: "clock_control_on", scope: !1059, file: !1059, line: 123, type: !1531, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11611)
!11611 = !{!11612, !11613, !11614}
!11612 = !DILocalVariable(name: "dev", arg: 1, scope: !11610, file: !1059, line: 123, type: !1434)
!11613 = !DILocalVariable(name: "sys", arg: 2, scope: !11610, file: !1059, line: 124, type: !1134)
!11614 = !DILocalVariable(name: "api", scope: !11610, file: !1059, line: 126, type: !1524)
!11615 = !DILocation(line: 0, scope: !11610)
!11616 = !DILocation(line: 127, column: 49, scope: !11610)
!11617 = !DILocation(line: 129, column: 14, scope: !11610)
!11618 = !DILocation(line: 129, column: 9, scope: !11610)
!11619 = !DILocation(line: 129, column: 2, scope: !11610)
!11620 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1566, file: !1566, line: 311, type: !10346, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11621)
!11621 = !{!11622, !11623, !11624}
!11622 = !DILocalVariable(name: "port", arg: 1, scope: !11620, file: !1566, line: 311, type: !125)
!11623 = !DILocalVariable(name: "pin", arg: 2, scope: !11620, file: !1566, line: 311, type: !125)
!11624 = !DILocalVariable(name: "line", scope: !11620, file: !1566, line: 313, type: !208)
!11625 = !DILocation(line: 0, scope: !11620)
!11626 = !DILocation(line: 313, column: 18, scope: !11620)
!11627 = !DILocation(line: 337, column: 2, scope: !11620)
!11628 = !DILocation(line: 340, column: 1, scope: !11620)
!11629 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1566, file: !1566, line: 295, type: !11630, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11632)
!11630 = !DISubroutineType(types: !11631)
!11631 = !{!208, !125}
!11632 = !{!11633}
!11633 = !DILocalVariable(name: "pin", arg: 1, scope: !11629, file: !1566, line: 295, type: !125)
!11634 = !DILocation(line: 0, scope: !11629)
!11635 = !DILocation(line: 307, column: 46, scope: !11629)
!11636 = !DILocation(line: 307, column: 27, scope: !11629)
!11637 = !DILocation(line: 307, column: 32, scope: !11629)
!11638 = !DILocation(line: 307, column: 14, scope: !11629)
!11639 = !DILocation(line: 307, column: 39, scope: !11629)
!11640 = !DILocation(line: 307, column: 2, scope: !11629)
!11641 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !11642, file: !11642, line: 621, type: !11643, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11645)
!11642 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11643 = !DISubroutineType(types: !11644)
!11644 = !{null, !208, !208}
!11645 = !{!11646, !11647}
!11646 = !DILocalVariable(name: "Port", arg: 1, scope: !11641, file: !11642, line: 621, type: !208)
!11647 = !DILocalVariable(name: "Line", arg: 2, scope: !11641, file: !11642, line: 621, type: !208)
!11648 = !DILocation(line: 0, scope: !11641)
!11649 = !DILocation(line: 623, column: 3, scope: !11641)
!11650 = !DILocalVariable(name: "value", arg: 1, scope: !11651, file: !8280, line: 373, type: !208)
!11651 = distinct !DISubprogram(name: "__RBIT", scope: !8280, file: !8280, line: 373, type: !9485, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11652)
!11652 = !{!11650, !11653}
!11653 = !DILocalVariable(name: "result", scope: !11651, file: !8280, line: 375, type: !208)
!11654 = !DILocation(line: 0, scope: !11651, inlinedAt: !11655)
!11655 = distinct !DILocation(line: 623, column: 3, scope: !11641)
!11656 = !DILocation(line: 380, column: 4, scope: !11651, inlinedAt: !11655)
!11657 = !{i64 2450216}
!11658 = !DILocalVariable(name: "value", arg: 1, scope: !11659, file: !8280, line: 403, type: !208)
!11659 = distinct !DISubprogram(name: "__CLZ", scope: !8280, file: !8280, line: 403, type: !11660, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11662)
!11660 = !DISubroutineType(types: !11661)
!11661 = !{!150, !208}
!11662 = !{!11658}
!11663 = !DILocation(line: 0, scope: !11659, inlinedAt: !11664)
!11664 = distinct !DILocation(line: 623, column: 3, scope: !11641)
!11665 = !DILocation(line: 414, column: 7, scope: !11659, inlinedAt: !11664)
!11666 = !DILocation(line: 624, column: 1, scope: !11641)
!11667 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !11423, file: !11423, line: 69, type: !11668, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11670)
!11668 = !DISubroutineType(types: !11669)
!11669 = !{null, !11426, !1434, !208}
!11670 = !{!11671, !11672, !11673, !11674, !11675}
!11671 = !DILocalVariable(name: "list", arg: 1, scope: !11667, file: !11423, line: 69, type: !11426)
!11672 = !DILocalVariable(name: "port", arg: 2, scope: !11667, file: !11423, line: 70, type: !1434)
!11673 = !DILocalVariable(name: "pins", arg: 3, scope: !11667, file: !11423, line: 71, type: !208)
!11674 = !DILocalVariable(name: "cb", scope: !11667, file: !11423, line: 73, type: !1471)
!11675 = !DILocalVariable(name: "tmp", scope: !11667, file: !11423, line: 73, type: !1471)
!11676 = !DILocation(line: 0, scope: !11667)
!11677 = !DILocation(line: 75, column: 2, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11667, file: !11423, line: 75, column: 2)
!11679 = !DILocation(line: 0, scope: !11678)
!11680 = !DILocation(line: 76, column: 11, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11682, file: !11423, line: 76, column: 7)
!11682 = distinct !DILexicalBlock(scope: !11683, file: !11423, line: 75, column: 57)
!11683 = distinct !DILexicalBlock(scope: !11678, file: !11423, line: 75, column: 2)
!11684 = !DILocation(line: 76, column: 20, scope: !11681)
!11685 = !DILocation(line: 76, column: 7, scope: !11682)
!11686 = !DILocation(line: 78, column: 8, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11681, file: !11423, line: 76, column: 28)
!11688 = !DILocation(line: 78, column: 4, scope: !11687)
!11689 = !DILocation(line: 79, column: 3, scope: !11687)
!11690 = !DILocation(line: 75, column: 2, scope: !11683)
!11691 = !DILocation(line: 81, column: 1, scope: !11667)
!11692 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !11642, file: !11642, line: 721, type: !9485, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11693)
!11693 = !{!11694}
!11694 = !DILocalVariable(name: "Line", arg: 1, scope: !11692, file: !11642, line: 721, type: !208)
!11695 = !DILocation(line: 0, scope: !11692)
!11696 = !DILocation(line: 723, column: 21, scope: !11692)
!11697 = !DILocation(line: 0, scope: !11651, inlinedAt: !11698)
!11698 = distinct !DILocation(line: 723, column: 76, scope: !11692)
!11699 = !DILocation(line: 380, column: 4, scope: !11651, inlinedAt: !11698)
!11700 = !DILocation(line: 0, scope: !11659, inlinedAt: !11701)
!11701 = distinct !DILocation(line: 723, column: 76, scope: !11692)
!11702 = !DILocation(line: 414, column: 7, scope: !11659, inlinedAt: !11701)
!11703 = !DILocation(line: 723, column: 73, scope: !11692)
!11704 = !DILocation(line: 723, column: 3, scope: !11692)
!11705 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !11706, file: !11706, line: 913, type: !11707, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11709)
!11706 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11707 = !DISubroutineType(types: !11708)
!11708 = !{null, !1501, !208}
!11709 = !{!11710, !11711}
!11710 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11705, file: !11706, line: 913, type: !1501)
!11711 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11705, file: !11706, line: 913, type: !208)
!11712 = !DILocation(line: 0, scope: !11705)
!11713 = !DILocation(line: 918, column: 3, scope: !11705)
!11714 = !DILocation(line: 920, column: 1, scope: !11705)
!11715 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !11706, file: !11706, line: 825, type: !11716, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11718)
!11716 = !DISubroutineType(types: !11717)
!11717 = !{!208, !1501}
!11718 = !{!11719}
!11719 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11715, file: !11706, line: 825, type: !1501)
!11720 = !DILocation(line: 0, scope: !11715)
!11721 = !DILocation(line: 827, column: 21, scope: !11715)
!11722 = !DILocation(line: 827, column: 3, scope: !11715)
!11723 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !11706, file: !11706, line: 814, type: !11707, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11724)
!11724 = !{!11725, !11726}
!11725 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11723, file: !11706, line: 814, type: !1501)
!11726 = !DILocalVariable(name: "PortValue", arg: 2, scope: !11723, file: !11706, line: 814, type: !208)
!11727 = !DILocation(line: 0, scope: !11723)
!11728 = !DILocation(line: 816, column: 3, scope: !11723)
!11729 = !DILocation(line: 817, column: 1, scope: !11723)
!11730 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !11706, file: !11706, line: 773, type: !11716, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11731)
!11731 = !{!11732}
!11732 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11730, file: !11706, line: 773, type: !1501)
!11733 = !DILocation(line: 0, scope: !11730)
!11734 = !DILocation(line: 775, column: 21, scope: !11730)
!11735 = !DILocation(line: 775, column: 3, scope: !11730)
!11736 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1566, file: !1566, line: 47, type: !11737, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11739)
!11737 = !DISubroutineType(types: !11738)
!11738 = !{!125, !798, !387}
!11739 = !{!11740, !11741}
!11740 = !DILocalVariable(name: "flags", arg: 1, scope: !11736, file: !1566, line: 47, type: !798)
!11741 = !DILocalVariable(name: "pincfg", arg: 2, scope: !11736, file: !1566, line: 47, type: !387)
!11742 = !DILocation(line: 0, scope: !11736)
!11743 = !DILocation(line: 50, column: 13, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11736, file: !1566, line: 50, column: 6)
!11745 = !DILocation(line: 50, column: 28, scope: !11744)
!11746 = !DILocation(line: 50, column: 6, scope: !11736)
!11747 = !DILocation(line: 53, column: 11, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11744, file: !1566, line: 50, column: 34)
!11749 = !DILocation(line: 55, column: 14, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11748, file: !1566, line: 55, column: 7)
!11751 = !DILocation(line: 55, column: 35, scope: !11750)
!11752 = !DILocation(line: 55, column: 7, scope: !11748)
!11753 = !DILocation(line: 56, column: 14, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11755, file: !1566, line: 56, column: 8)
!11755 = distinct !DILexicalBlock(scope: !11750, file: !1566, line: 55, column: 41)
!11756 = !DILocation(line: 56, column: 8, scope: !11755)
!11757 = !DILocation(line: 0, scope: !11750)
!11758 = !DILocation(line: 66, column: 14, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11748, file: !1566, line: 66, column: 7)
!11760 = !DILocation(line: 66, column: 30, scope: !11759)
!11761 = !DILocation(line: 66, column: 7, scope: !11748)
!11762 = !DILocation(line: 67, column: 12, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11759, file: !1566, line: 66, column: 36)
!11764 = !DILocation(line: 68, column: 3, scope: !11763)
!11765 = !DILocation(line: 68, column: 21, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11759, file: !1566, line: 68, column: 14)
!11767 = !DILocation(line: 68, column: 39, scope: !11766)
!11768 = !DILocation(line: 68, column: 14, scope: !11759)
!11769 = !DILocation(line: 69, column: 12, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11766, file: !1566, line: 68, column: 45)
!11771 = !DILocation(line: 70, column: 3, scope: !11770)
!11772 = !DILocation(line: 72, column: 21, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11744, file: !1566, line: 72, column: 14)
!11774 = !DILocation(line: 72, column: 35, scope: !11773)
!11775 = !DILocation(line: 72, column: 14, scope: !11744)
!11776 = !DILocation(line: 77, column: 14, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11778, file: !1566, line: 77, column: 7)
!11778 = distinct !DILexicalBlock(scope: !11773, file: !1566, line: 72, column: 41)
!11779 = !DILocation(line: 77, column: 30, scope: !11777)
!11780 = !DILocation(line: 77, column: 7, scope: !11778)
!11781 = !DILocation(line: 0, scope: !11744)
!11782 = !DILocation(line: 90, column: 1, scope: !11736)
!11783 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1566, file: !1566, line: 157, type: !11784, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11786)
!11784 = !DISubroutineType(types: !11785)
!11785 = !{null, !1434, !125, !125, !125}
!11786 = !{!11787, !11788, !11789, !11790, !11791, !11792, !11793, !11794, !11795, !11796, !11797}
!11787 = !DILocalVariable(name: "dev", arg: 1, scope: !11783, file: !1566, line: 157, type: !1434)
!11788 = !DILocalVariable(name: "pin", arg: 2, scope: !11783, file: !1566, line: 157, type: !125)
!11789 = !DILocalVariable(name: "conf", arg: 3, scope: !11783, file: !1566, line: 158, type: !125)
!11790 = !DILocalVariable(name: "func", arg: 4, scope: !11783, file: !1566, line: 158, type: !125)
!11791 = !DILocalVariable(name: "cfg", scope: !11783, file: !1566, line: 160, type: !11307)
!11792 = !DILocalVariable(name: "gpio", scope: !11783, file: !1566, line: 161, type: !1501)
!11793 = !DILocalVariable(name: "pin_ll", scope: !11783, file: !1566, line: 163, type: !125)
!11794 = !DILocalVariable(name: "mode", scope: !11783, file: !1566, line: 227, type: !32)
!11795 = !DILocalVariable(name: "otype", scope: !11783, file: !1566, line: 227, type: !32)
!11796 = !DILocalVariable(name: "ospeed", scope: !11783, file: !1566, line: 227, type: !32)
!11797 = !DILocalVariable(name: "pupd", scope: !11783, file: !1566, line: 227, type: !32)
!11798 = !DILocation(line: 0, scope: !11783)
!11799 = !DILocation(line: 160, column: 45, scope: !11783)
!11800 = !DILocation(line: 161, column: 44, scope: !11783)
!11801 = !DILocation(line: 163, column: 15, scope: !11783)
!11802 = !DILocation(line: 229, column: 14, scope: !11783)
!11803 = !DILocation(line: 246, column: 47, scope: !11783)
!11804 = !DILocation(line: 246, column: 2, scope: !11783)
!11805 = !DILocation(line: 248, column: 43, scope: !11783)
!11806 = !DILocation(line: 248, column: 2, scope: !11783)
!11807 = !DILocation(line: 250, column: 40, scope: !11783)
!11808 = !DILocation(line: 250, column: 2, scope: !11783)
!11809 = !DILocation(line: 252, column: 11, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11783, file: !1566, line: 252, column: 6)
!11811 = !DILocation(line: 252, column: 6, scope: !11783)
!11812 = !DILocation(line: 253, column: 11, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11814, file: !1566, line: 253, column: 7)
!11814 = distinct !DILexicalBlock(scope: !11810, file: !1566, line: 252, column: 36)
!11815 = !DILocation(line: 253, column: 7, scope: !11814)
!11816 = !DILocation(line: 254, column: 4, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11813, file: !1566, line: 253, column: 16)
!11818 = !DILocation(line: 255, column: 3, scope: !11817)
!11819 = !DILocation(line: 256, column: 4, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11813, file: !1566, line: 255, column: 10)
!11821 = !DILocation(line: 260, column: 40, scope: !11783)
!11822 = !DILocation(line: 260, column: 2, scope: !11783)
!11823 = !DILocation(line: 265, column: 1, scope: !11783)
!11824 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1566, file: !1566, line: 137, type: !11630, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11825)
!11825 = !{!11826, !11827}
!11826 = !DILocalVariable(name: "pin", arg: 1, scope: !11824, file: !1566, line: 137, type: !125)
!11827 = !DILocalVariable(name: "pinval", scope: !11824, file: !1566, line: 139, type: !208)
!11828 = !DILocation(line: 0, scope: !11824)
!11829 = !DILocation(line: 149, column: 13, scope: !11824)
!11830 = !DILocation(line: 151, column: 2, scope: !11824)
!11831 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !11706, file: !11706, line: 343, type: !11832, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11834)
!11832 = !DISubroutineType(types: !11833)
!11833 = !{null, !1501, !208, !208}
!11834 = !{!11835, !11836, !11837}
!11835 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11831, file: !11706, line: 343, type: !1501)
!11836 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11831, file: !11706, line: 343, type: !208)
!11837 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11831, file: !11706, line: 343, type: !208)
!11838 = !DILocation(line: 0, scope: !11831)
!11839 = !DILocation(line: 345, column: 3, scope: !11831)
!11840 = !DILocation(line: 346, column: 1, scope: !11831)
!11841 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !11706, file: !11706, line: 414, type: !11832, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11842)
!11842 = !{!11843, !11844, !11845}
!11843 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11841, file: !11706, line: 414, type: !1501)
!11844 = !DILocalVariable(name: "Pin", arg: 2, scope: !11841, file: !11706, line: 414, type: !208)
!11845 = !DILocalVariable(name: "Speed", arg: 3, scope: !11841, file: !11706, line: 414, type: !208)
!11846 = !DILocation(line: 0, scope: !11841)
!11847 = !DILocation(line: 416, column: 3, scope: !11841)
!11848 = !DILocation(line: 0, scope: !11651, inlinedAt: !11849)
!11849 = distinct !DILocation(line: 416, column: 3, scope: !11841)
!11850 = !DILocation(line: 380, column: 4, scope: !11651, inlinedAt: !11849)
!11851 = !DILocation(line: 0, scope: !11659, inlinedAt: !11852)
!11852 = distinct !DILocation(line: 416, column: 3, scope: !11841)
!11853 = !DILocation(line: 414, column: 7, scope: !11659, inlinedAt: !11852)
!11854 = !DILocation(line: 0, scope: !11651, inlinedAt: !11855)
!11855 = distinct !DILocation(line: 416, column: 3, scope: !11841)
!11856 = !DILocation(line: 0, scope: !11659, inlinedAt: !11857)
!11857 = distinct !DILocation(line: 416, column: 3, scope: !11841)
!11858 = !DILocation(line: 418, column: 1, scope: !11841)
!11859 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !11706, file: !11706, line: 485, type: !11832, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11860)
!11860 = !{!11861, !11862, !11863}
!11861 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11859, file: !11706, line: 485, type: !1501)
!11862 = !DILocalVariable(name: "Pin", arg: 2, scope: !11859, file: !11706, line: 485, type: !208)
!11863 = !DILocalVariable(name: "Pull", arg: 3, scope: !11859, file: !11706, line: 485, type: !208)
!11864 = !DILocation(line: 0, scope: !11859)
!11865 = !DILocation(line: 487, column: 3, scope: !11859)
!11866 = !DILocation(line: 0, scope: !11651, inlinedAt: !11867)
!11867 = distinct !DILocation(line: 487, column: 3, scope: !11859)
!11868 = !DILocation(line: 380, column: 4, scope: !11651, inlinedAt: !11867)
!11869 = !DILocation(line: 0, scope: !11659, inlinedAt: !11870)
!11870 = distinct !DILocation(line: 487, column: 3, scope: !11859)
!11871 = !DILocation(line: 414, column: 7, scope: !11659, inlinedAt: !11870)
!11872 = !DILocation(line: 0, scope: !11651, inlinedAt: !11873)
!11873 = distinct !DILocation(line: 487, column: 3, scope: !11859)
!11874 = !DILocation(line: 0, scope: !11659, inlinedAt: !11875)
!11875 = distinct !DILocation(line: 487, column: 3, scope: !11859)
!11876 = !DILocation(line: 488, column: 1, scope: !11859)
!11877 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !11706, file: !11706, line: 557, type: !11832, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11878)
!11878 = !{!11879, !11880, !11881}
!11879 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11877, file: !11706, line: 557, type: !1501)
!11880 = !DILocalVariable(name: "Pin", arg: 2, scope: !11877, file: !11706, line: 557, type: !208)
!11881 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11877, file: !11706, line: 557, type: !208)
!11882 = !DILocation(line: 0, scope: !11877)
!11883 = !DILocation(line: 559, column: 3, scope: !11877)
!11884 = !DILocation(line: 0, scope: !11651, inlinedAt: !11885)
!11885 = distinct !DILocation(line: 559, column: 3, scope: !11877)
!11886 = !DILocation(line: 380, column: 4, scope: !11651, inlinedAt: !11885)
!11887 = !DILocation(line: 0, scope: !11659, inlinedAt: !11888)
!11888 = distinct !DILocation(line: 559, column: 3, scope: !11877)
!11889 = !DILocation(line: 414, column: 7, scope: !11659, inlinedAt: !11888)
!11890 = !DILocation(line: 0, scope: !11651, inlinedAt: !11891)
!11891 = distinct !DILocation(line: 559, column: 3, scope: !11877)
!11892 = !DILocation(line: 0, scope: !11659, inlinedAt: !11893)
!11893 = distinct !DILocation(line: 559, column: 3, scope: !11877)
!11894 = !DILocation(line: 561, column: 1, scope: !11877)
!11895 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !11706, file: !11706, line: 634, type: !11832, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11896)
!11896 = !{!11897, !11898, !11899}
!11897 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11895, file: !11706, line: 634, type: !1501)
!11898 = !DILocalVariable(name: "Pin", arg: 2, scope: !11895, file: !11706, line: 634, type: !208)
!11899 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11895, file: !11706, line: 634, type: !208)
!11900 = !DILocation(line: 0, scope: !11895)
!11901 = !DILocation(line: 636, column: 3, scope: !11895)
!11902 = !DILocation(line: 0, scope: !11651, inlinedAt: !11903)
!11903 = distinct !DILocation(line: 636, column: 3, scope: !11895)
!11904 = !DILocation(line: 380, column: 4, scope: !11651, inlinedAt: !11903)
!11905 = !DILocation(line: 0, scope: !11659, inlinedAt: !11906)
!11906 = distinct !DILocation(line: 636, column: 3, scope: !11895)
!11907 = !DILocation(line: 414, column: 7, scope: !11659, inlinedAt: !11906)
!11908 = !DILocation(line: 0, scope: !11651, inlinedAt: !11909)
!11909 = distinct !DILocation(line: 636, column: 3, scope: !11895)
!11910 = !DILocation(line: 0, scope: !11659, inlinedAt: !11911)
!11911 = distinct !DILocation(line: 636, column: 3, scope: !11895)
!11912 = !DILocation(line: 638, column: 1, scope: !11895)
!11913 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !11706, file: !11706, line: 274, type: !11832, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11914)
!11914 = !{!11915, !11916, !11917}
!11915 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11913, file: !11706, line: 274, type: !1501)
!11916 = !DILocalVariable(name: "Pin", arg: 2, scope: !11913, file: !11706, line: 274, type: !208)
!11917 = !DILocalVariable(name: "Mode", arg: 3, scope: !11913, file: !11706, line: 274, type: !208)
!11918 = !DILocation(line: 0, scope: !11913)
!11919 = !DILocation(line: 276, column: 3, scope: !11913)
!11920 = !DILocation(line: 0, scope: !11651, inlinedAt: !11921)
!11921 = distinct !DILocation(line: 276, column: 3, scope: !11913)
!11922 = !DILocation(line: 380, column: 4, scope: !11651, inlinedAt: !11921)
!11923 = !DILocation(line: 0, scope: !11659, inlinedAt: !11924)
!11924 = distinct !DILocation(line: 276, column: 3, scope: !11913)
!11925 = !DILocation(line: 414, column: 7, scope: !11659, inlinedAt: !11924)
!11926 = !DILocation(line: 0, scope: !11651, inlinedAt: !11927)
!11927 = distinct !DILocation(line: 276, column: 3, scope: !11913)
!11928 = !DILocation(line: 0, scope: !11659, inlinedAt: !11929)
!11929 = distinct !DILocation(line: 276, column: 3, scope: !11913)
!11930 = !DILocation(line: 277, column: 1, scope: !11913)
!11931 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1566, file: !1566, line: 698, type: !1577, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11932)
!11932 = !{!11933, !11934, !11935}
!11933 = !DILocalVariable(name: "dev", arg: 1, scope: !11931, file: !1566, line: 698, type: !1434)
!11934 = !DILocalVariable(name: "data", scope: !11931, file: !1566, line: 700, type: !11374)
!11935 = !DILocalVariable(name: "ret", scope: !11931, file: !1566, line: 701, type: !125)
!11936 = !DILocation(line: 0, scope: !11931)
!11937 = !DILocation(line: 700, column: 38, scope: !11931)
!11938 = !DILocation(line: 703, column: 8, scope: !11931)
!11939 = !DILocation(line: 703, column: 12, scope: !11931)
!11940 = !DILocation(line: 705, column: 7, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11931, file: !1566, line: 705, column: 6)
!11942 = !DILocation(line: 705, column: 6, scope: !11931)
!11943 = !DILocation(line: 722, column: 8, scope: !11931)
!11944 = !DILocation(line: 723, column: 10, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11931, file: !1566, line: 723, column: 6)
!11946 = !DILocation(line: 723, column: 6, scope: !11931)
!11947 = !DILocation(line: 731, column: 1, scope: !11931)
!11948 = distinct !DISubprogram(name: "device_is_ready", scope: !4179, file: !4179, line: 47, type: !11949, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11951)
!11949 = !DISubroutineType(types: !11950)
!11950 = !{!153, !1434}
!11951 = !{!11952}
!11952 = !DILocalVariable(name: "dev", arg: 1, scope: !11948, file: !4179, line: 47, type: !1434)
!11953 = !DILocation(line: 0, scope: !11948)
!11954 = !DILocation(line: 55, column: 2, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11948, file: !4179, line: 55, column: 2)
!11956 = !{i64 2152401876}
!11957 = !DILocation(line: 56, column: 9, scope: !11948)
!11958 = !DILocation(line: 56, column: 2, scope: !11948)
!11959 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1566, file: !1566, line: 270, type: !11960, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11962)
!11960 = !DISubroutineType(types: !11961)
!11961 = !{!125, !1434, !153}
!11962 = !{!11963, !11964, !11965, !11966, !11967}
!11963 = !DILocalVariable(name: "dev", arg: 1, scope: !11959, file: !1566, line: 270, type: !1434)
!11964 = !DILocalVariable(name: "on", arg: 2, scope: !11959, file: !1566, line: 270, type: !153)
!11965 = !DILocalVariable(name: "cfg", scope: !11959, file: !1566, line: 272, type: !11307)
!11966 = !DILocalVariable(name: "ret", scope: !11959, file: !1566, line: 273, type: !125)
!11967 = !DILocalVariable(name: "clk", scope: !11959, file: !1566, line: 278, type: !11597)
!11968 = !DILocation(line: 0, scope: !11959)
!11969 = !DILocation(line: 272, column: 45, scope: !11959)
!11970 = !DILocation(line: 282, column: 38, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11972, file: !1566, line: 280, column: 10)
!11972 = distinct !DILexicalBlock(scope: !11959, file: !1566, line: 280, column: 6)
!11973 = !DILocation(line: 282, column: 6, scope: !11971)
!11974 = !DILocation(line: 281, column: 9, scope: !11971)
!11975 = !DILocation(line: 293, column: 1, scope: !11959)
!11976 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !11949, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11977)
!11977 = !{!11978}
!11978 = !DILocalVariable(name: "dev", arg: 1, scope: !11976, file: !137, line: 730, type: !1434)
!11979 = !DILocation(line: 0, scope: !11976)
!11980 = !DILocation(line: 732, column: 9, scope: !11976)
!11981 = !DILocation(line: 732, column: 2, scope: !11976)
!11982 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1566, file: !1566, line: 496, type: !11983, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1416, retainedNodes: !11985)
!11983 = !DISubroutineType(types: !11984)
!11984 = !{!125, !1434, !125, !125, !125}
!11985 = !{!11986, !11987, !11988, !11989, !11990, !11991}
!11986 = !DILocalVariable(name: "dev", arg: 1, scope: !11982, file: !1566, line: 496, type: !1434)
!11987 = !DILocalVariable(name: "pin", arg: 2, scope: !11982, file: !1566, line: 496, type: !125)
!11988 = !DILocalVariable(name: "conf", arg: 3, scope: !11982, file: !1566, line: 496, type: !125)
!11989 = !DILocalVariable(name: "func", arg: 4, scope: !11982, file: !1566, line: 496, type: !125)
!11990 = !DILocalVariable(name: "ret", scope: !11982, file: !1566, line: 498, type: !125)
!11991 = !DILocalVariable(name: "gpio_out", scope: !11992, file: !1566, line: 508, type: !208)
!11992 = distinct !DILexicalBlock(scope: !11993, file: !1566, line: 507, column: 27)
!11993 = distinct !DILexicalBlock(scope: !11982, file: !1566, line: 507, column: 6)
!11994 = !DILocation(line: 0, scope: !11982)
!11995 = !DILocation(line: 505, column: 2, scope: !11982)
!11996 = !DILocation(line: 507, column: 11, scope: !11993)
!11997 = !DILocation(line: 507, column: 6, scope: !11982)
!11998 = !DILocation(line: 508, column: 28, scope: !11992)
!11999 = !DILocation(line: 0, scope: !11992)
!12000 = !DILocation(line: 510, column: 16, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11992, file: !1566, line: 510, column: 7)
!12002 = !DILocation(line: 0, scope: !12001)
!12003 = !DILocation(line: 510, column: 7, scope: !11992)
!12004 = !DILocation(line: 511, column: 4, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12001, file: !1566, line: 510, column: 32)
!12006 = !DILocation(line: 512, column: 3, scope: !12005)
!12007 = !DILocation(line: 513, column: 4, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !12009, file: !1566, line: 512, column: 39)
!12009 = distinct !DILexicalBlock(scope: !12001, file: !1566, line: 512, column: 14)
!12010 = !DILocation(line: 514, column: 3, scope: !12008)
!12011 = !DILocation(line: 518, column: 1, scope: !11982)
!12012 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1821, file: !1821, line: 526, type: !1725, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12013)
!12013 = !{!12014, !12015, !12016}
!12014 = !DILocalVariable(name: "dev", arg: 1, scope: !12012, file: !1821, line: 526, type: !1727)
!12015 = !DILocalVariable(name: "c", arg: 2, scope: !12012, file: !1821, line: 526, type: !1195)
!12016 = !DILocalVariable(name: "config", scope: !12012, file: !1821, line: 528, type: !12017)
!12017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!12018 = !DILocation(line: 0, scope: !12012)
!12019 = !DILocation(line: 528, column: 48, scope: !12012)
!12020 = !DILocation(line: 531, column: 40, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12012, file: !1821, line: 531, column: 6)
!12022 = !DILocation(line: 531, column: 6, scope: !12021)
!12023 = !DILocation(line: 531, column: 6, scope: !12012)
!12024 = !DILocation(line: 532, column: 34, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12021, file: !1821, line: 531, column: 48)
!12026 = !DILocation(line: 532, column: 3, scope: !12025)
!12027 = !DILocation(line: 533, column: 2, scope: !12025)
!12028 = !DILocation(line: 539, column: 42, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12012, file: !1821, line: 539, column: 6)
!12030 = !DILocation(line: 539, column: 7, scope: !12029)
!12031 = !DILocation(line: 539, column: 6, scope: !12012)
!12032 = !DILocation(line: 543, column: 52, scope: !12012)
!12033 = !DILocation(line: 543, column: 22, scope: !12012)
!12034 = !DILocation(line: 543, column: 5, scope: !12012)
!12035 = !DILocation(line: 545, column: 2, scope: !12012)
!12036 = !DILocation(line: 546, column: 1, scope: !12012)
!12037 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1821, file: !1821, line: 548, type: !1744, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12038)
!12038 = !{!12039, !12040, !12041, !12042}
!12039 = !DILocalVariable(name: "dev", arg: 1, scope: !12037, file: !1821, line: 548, type: !1727)
!12040 = !DILocalVariable(name: "c", arg: 2, scope: !12037, file: !1821, line: 549, type: !151)
!12041 = !DILocalVariable(name: "config", scope: !12037, file: !1821, line: 551, type: !12017)
!12042 = !DILocalVariable(name: "key", scope: !12037, file: !1821, line: 555, type: !32)
!12043 = !DILocation(line: 0, scope: !12037)
!12044 = !DILocation(line: 551, column: 48, scope: !12037)
!12045 = !DILocation(line: 562, column: 2, scope: !12037)
!12046 = !DILocation(line: 563, column: 41, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12048, file: !1821, line: 563, column: 7)
!12048 = distinct !DILexicalBlock(scope: !12037, file: !1821, line: 562, column: 12)
!12049 = !DILocation(line: 563, column: 7, scope: !12047)
!12050 = !DILocation(line: 563, column: 7, scope: !12048)
!12051 = !DILocation(line: 55, column: 2, scope: !12052, inlinedAt: !12056)
!12052 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6796, file: !6796, line: 42, type: !6797, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12053)
!12053 = !{!12054, !12055}
!12054 = !DILocalVariable(name: "key", scope: !12052, file: !6796, line: 44, type: !32)
!12055 = !DILocalVariable(name: "tmp", scope: !12052, file: !6796, line: 53, type: !32)
!12056 = distinct !DILocation(line: 564, column: 10, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12047, file: !1821, line: 563, column: 49)
!12058 = !{i64 1699565}
!12059 = !DILocation(line: 0, scope: !12052, inlinedAt: !12056)
!12060 = !DILocation(line: 565, column: 42, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12057, file: !1821, line: 565, column: 8)
!12062 = !DILocation(line: 565, column: 8, scope: !12061)
!12063 = !DILocation(line: 565, column: 8, scope: !12057)
!12064 = !DILocalVariable(name: "key", arg: 1, scope: !12065, file: !6796, line: 84, type: !32)
!12065 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6796, file: !6796, line: 84, type: !6807, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12066)
!12066 = !{!12064}
!12067 = !DILocation(line: 0, scope: !12065, inlinedAt: !12068)
!12068 = distinct !DILocation(line: 568, column: 4, scope: !12057)
!12069 = !DILocation(line: 95, column: 2, scope: !12065, inlinedAt: !12068)
!12070 = !{i64 1700382}
!12071 = !DILocation(line: 569, column: 3, scope: !12057)
!12072 = distinct !{!12072, !12045, !12073}
!12073 = !DILocation(line: 570, column: 2, scope: !12037)
!12074 = !DILocation(line: 592, column: 33, scope: !12037)
!12075 = !DILocation(line: 592, column: 2, scope: !12037)
!12076 = !DILocation(line: 0, scope: !12065, inlinedAt: !12077)
!12077 = distinct !DILocation(line: 593, column: 2, scope: !12037)
!12078 = !DILocation(line: 95, column: 2, scope: !12065, inlinedAt: !12077)
!12079 = !DILocation(line: 594, column: 1, scope: !12037)
!12080 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1821, file: !1821, line: 596, type: !1748, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12081)
!12081 = !{!12082, !12083, !12084}
!12082 = !DILocalVariable(name: "dev", arg: 1, scope: !12080, file: !1821, line: 596, type: !1727)
!12083 = !DILocalVariable(name: "config", scope: !12080, file: !1821, line: 598, type: !12017)
!12084 = !DILocalVariable(name: "err", scope: !12080, file: !1821, line: 599, type: !208)
!12085 = !DILocation(line: 0, scope: !12080)
!12086 = !DILocation(line: 598, column: 48, scope: !12080)
!12087 = !DILocation(line: 606, column: 40, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12080, file: !1821, line: 606, column: 6)
!12089 = !DILocation(line: 606, column: 6, scope: !12088)
!12090 = !DILocation(line: 606, column: 6, scope: !12080)
!12091 = !DILocation(line: 610, column: 39, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12080, file: !1821, line: 610, column: 6)
!12093 = !DILocation(line: 610, column: 6, scope: !12092)
!12094 = !DILocation(line: 610, column: 6, scope: !12080)
!12095 = !DILocation(line: 614, column: 39, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12080, file: !1821, line: 614, column: 6)
!12097 = !DILocation(line: 614, column: 6, scope: !12096)
!12098 = !DILocation(line: 614, column: 6, scope: !12080)
!12099 = !DILocation(line: 619, column: 40, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12080, file: !1821, line: 619, column: 6)
!12101 = !DILocation(line: 619, column: 6, scope: !12100)
!12102 = !DILocation(line: 619, column: 6, scope: !12080)
!12103 = !DILocation(line: 623, column: 10, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12080, file: !1821, line: 623, column: 6)
!12105 = !DILocation(line: 623, column: 6, scope: !12080)
!12106 = !DILocation(line: 624, column: 34, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12104, file: !1821, line: 623, column: 24)
!12108 = !DILocation(line: 624, column: 3, scope: !12107)
!12109 = !DILocation(line: 625, column: 2, scope: !12107)
!12110 = !DILocation(line: 632, column: 10, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12080, file: !1821, line: 632, column: 6)
!12112 = !DILocation(line: 632, column: 6, scope: !12080)
!12113 = !DILocation(line: 633, column: 34, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12111, file: !1821, line: 632, column: 32)
!12115 = !DILocation(line: 633, column: 3, scope: !12114)
!12116 = !DILocation(line: 634, column: 2, scope: !12114)
!12117 = !DILocation(line: 636, column: 10, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12080, file: !1821, line: 636, column: 6)
!12119 = !DILocation(line: 636, column: 6, scope: !12080)
!12120 = !DILocation(line: 637, column: 33, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12118, file: !1821, line: 636, column: 31)
!12122 = !DILocation(line: 637, column: 3, scope: !12121)
!12123 = !DILocation(line: 638, column: 2, scope: !12121)
!12124 = !DILocation(line: 640, column: 10, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12080, file: !1821, line: 640, column: 6)
!12126 = !DILocation(line: 640, column: 6, scope: !12080)
!12127 = !DILocation(line: 641, column: 33, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12125, file: !1821, line: 640, column: 32)
!12129 = !DILocation(line: 641, column: 3, scope: !12128)
!12130 = !DILocation(line: 642, column: 2, scope: !12128)
!12131 = !DILocation(line: 646, column: 32, scope: !12080)
!12132 = !DILocation(line: 646, column: 2, scope: !12080)
!12133 = !DILocation(line: 648, column: 2, scope: !12080)
!12134 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1821, file: !1821, line: 419, type: !1752, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12135)
!12135 = !{!12136, !12137, !12138, !12139, !12141, !12142, !12143, !12144}
!12136 = !DILocalVariable(name: "dev", arg: 1, scope: !12134, file: !1821, line: 419, type: !1727)
!12137 = !DILocalVariable(name: "cfg", arg: 2, scope: !12134, file: !1821, line: 420, type: !1754)
!12138 = !DILocalVariable(name: "config", scope: !12134, file: !1821, line: 422, type: !12017)
!12139 = !DILocalVariable(name: "data", scope: !12134, file: !1821, line: 423, type: !12140)
!12140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!12141 = !DILocalVariable(name: "parity", scope: !12134, file: !1821, line: 424, type: !8523)
!12142 = !DILocalVariable(name: "stopbits", scope: !12134, file: !1821, line: 425, type: !8523)
!12143 = !DILocalVariable(name: "databits", scope: !12134, file: !1821, line: 426, type: !8523)
!12144 = !DILocalVariable(name: "flowctrl", scope: !12134, file: !1821, line: 428, type: !8523)
!12145 = !DILocation(line: 0, scope: !12134)
!12146 = !DILocation(line: 422, column: 48, scope: !12134)
!12147 = !DILocation(line: 423, column: 38, scope: !12134)
!12148 = !DILocation(line: 424, column: 56, scope: !12134)
!12149 = !DILocation(line: 424, column: 51, scope: !12134)
!12150 = !DILocation(line: 424, column: 26, scope: !12134)
!12151 = !DILocation(line: 425, column: 60, scope: !12134)
!12152 = !DILocation(line: 425, column: 55, scope: !12134)
!12153 = !DILocation(line: 425, column: 28, scope: !12134)
!12154 = !DILocation(line: 426, column: 60, scope: !12134)
!12155 = !DILocation(line: 426, column: 55, scope: !12134)
!12156 = !DILocation(line: 426, column: 28, scope: !12134)
!12157 = !DILocation(line: 428, column: 58, scope: !12134)
!12158 = !DILocation(line: 428, column: 53, scope: !12134)
!12159 = !DILocation(line: 428, column: 28, scope: !12134)
!12160 = !DILocation(line: 431, column: 44, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12134, file: !1821, line: 431, column: 6)
!12162 = !DILocation(line: 438, column: 22, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12134, file: !1821, line: 437, column: 6)
!12164 = !DILocation(line: 437, column: 6, scope: !12134)
!12165 = !DILocation(line: 448, column: 6, scope: !12134)
!12166 = !DILocation(line: 465, column: 47, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12134, file: !1821, line: 465, column: 6)
!12168 = !DILocation(line: 475, column: 21, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12134, file: !1821, line: 475, column: 6)
!12170 = !DILocation(line: 475, column: 6, scope: !12134)
!12171 = !DILocation(line: 476, column: 8, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12173, file: !1821, line: 476, column: 7)
!12173 = distinct !DILexicalBlock(scope: !12169, file: !1821, line: 475, column: 49)
!12174 = !DILocation(line: 477, column: 34, scope: !12172)
!12175 = !DILocation(line: 476, column: 7, scope: !12173)
!12176 = !DILocation(line: 482, column: 27, scope: !12134)
!12177 = !DILocation(line: 482, column: 2, scope: !12134)
!12178 = !DILocation(line: 484, column: 16, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12134, file: !1821, line: 484, column: 6)
!12180 = !DILocation(line: 484, column: 13, scope: !12179)
!12181 = !DILocation(line: 484, column: 6, scope: !12134)
!12182 = !DILocation(line: 485, column: 3, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12179, file: !1821, line: 484, column: 44)
!12184 = !DILocation(line: 486, column: 2, scope: !12183)
!12185 = !DILocation(line: 488, column: 18, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12134, file: !1821, line: 488, column: 6)
!12187 = !DILocation(line: 488, column: 15, scope: !12186)
!12188 = !DILocation(line: 488, column: 6, scope: !12134)
!12189 = !DILocation(line: 489, column: 3, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12186, file: !1821, line: 488, column: 48)
!12191 = !DILocation(line: 490, column: 2, scope: !12190)
!12192 = !DILocation(line: 492, column: 18, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12134, file: !1821, line: 492, column: 6)
!12194 = !DILocation(line: 492, column: 15, scope: !12193)
!12195 = !DILocation(line: 492, column: 6, scope: !12134)
!12196 = !DILocation(line: 493, column: 3, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12193, file: !1821, line: 492, column: 48)
!12198 = !DILocation(line: 494, column: 2, scope: !12197)
!12199 = !DILocation(line: 496, column: 18, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12134, file: !1821, line: 496, column: 6)
!12201 = !DILocation(line: 496, column: 15, scope: !12200)
!12202 = !DILocation(line: 496, column: 6, scope: !12134)
!12203 = !DILocation(line: 497, column: 3, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12200, file: !1821, line: 496, column: 46)
!12205 = !DILocation(line: 498, column: 2, scope: !12204)
!12206 = !DILocation(line: 500, column: 11, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12134, file: !1821, line: 500, column: 6)
!12208 = !DILocation(line: 500, column: 29, scope: !12207)
!12209 = !DILocation(line: 500, column: 20, scope: !12207)
!12210 = !DILocation(line: 500, column: 6, scope: !12134)
!12211 = !DILocation(line: 501, column: 3, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12207, file: !1821, line: 500, column: 40)
!12213 = !DILocation(line: 502, column: 26, scope: !12212)
!12214 = !DILocation(line: 502, column: 19, scope: !12212)
!12215 = !DILocation(line: 503, column: 2, scope: !12212)
!12216 = !DILocation(line: 505, column: 26, scope: !12134)
!12217 = !DILocation(line: 505, column: 2, scope: !12134)
!12218 = !DILocation(line: 506, column: 2, scope: !12134)
!12219 = !DILocation(line: 507, column: 1, scope: !12134)
!12220 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1821, file: !1821, line: 509, type: !1765, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12221)
!12221 = !{!12222, !12223, !12224}
!12222 = !DILocalVariable(name: "dev", arg: 1, scope: !12220, file: !1821, line: 509, type: !1727)
!12223 = !DILocalVariable(name: "cfg", arg: 2, scope: !12220, file: !1821, line: 510, type: !1767)
!12224 = !DILocalVariable(name: "data", scope: !12220, file: !1821, line: 512, type: !12140)
!12225 = !DILocation(line: 0, scope: !12220)
!12226 = !DILocation(line: 512, column: 38, scope: !12220)
!12227 = !DILocation(line: 514, column: 24, scope: !12220)
!12228 = !DILocation(line: 514, column: 7, scope: !12220)
!12229 = !DILocation(line: 514, column: 16, scope: !12220)
!12230 = !DILocation(line: 515, column: 41, scope: !12220)
!12231 = !{i32 0, i32 1537}
!12232 = !DILocation(line: 515, column: 16, scope: !12220)
!12233 = !DILocation(line: 515, column: 7, scope: !12220)
!12234 = !DILocation(line: 515, column: 14, scope: !12220)
!12235 = !DILocation(line: 517, column: 3, scope: !12220)
!12236 = !{i32 0, i32 12289}
!12237 = !DILocation(line: 516, column: 19, scope: !12220)
!12238 = !DILocation(line: 516, column: 7, scope: !12220)
!12239 = !DILocation(line: 516, column: 17, scope: !12220)
!12240 = !DILocation(line: 519, column: 3, scope: !12220)
!12241 = !DILocation(line: 519, column: 33, scope: !12220)
!12242 = !DILocation(line: 518, column: 19, scope: !12220)
!12243 = !DILocation(line: 518, column: 7, scope: !12220)
!12244 = !DILocation(line: 518, column: 17, scope: !12220)
!12245 = !DILocation(line: 521, column: 3, scope: !12220)
!12246 = !{i32 0, i32 769}
!12247 = !DILocation(line: 520, column: 19, scope: !12220)
!12248 = !DILocation(line: 520, column: 7, scope: !12220)
!12249 = !DILocation(line: 520, column: 17, scope: !12220)
!12250 = !DILocation(line: 522, column: 2, scope: !12220)
!12251 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1821, file: !1821, line: 205, type: !12252, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12254)
!12252 = !DISubroutineType(types: !12253)
!12253 = !{!208, !1727}
!12254 = !{!12255, !12256}
!12255 = !DILocalVariable(name: "dev", arg: 1, scope: !12251, file: !1821, line: 205, type: !1727)
!12256 = !DILocalVariable(name: "config", scope: !12251, file: !1821, line: 207, type: !12017)
!12257 = !DILocation(line: 0, scope: !12251)
!12258 = !DILocation(line: 207, column: 48, scope: !12251)
!12259 = !DILocation(line: 209, column: 36, scope: !12251)
!12260 = !DILocation(line: 209, column: 9, scope: !12251)
!12261 = !DILocation(line: 209, column: 2, scope: !12251)
!12262 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1821, file: !1821, line: 270, type: !12263, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12265)
!12263 = !DISubroutineType(types: !12264)
!12264 = !{!1693, !208}
!12265 = !{!12266}
!12266 = !DILocalVariable(name: "parity", arg: 1, scope: !12262, file: !1821, line: 270, type: !208)
!12267 = !DILocation(line: 0, scope: !12262)
!12268 = !DILocation(line: 272, column: 2, scope: !12262)
!12269 = !DILocation(line: 281, column: 1, scope: !12262)
!12270 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1821, file: !1821, line: 220, type: !12252, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12271)
!12271 = !{!12272, !12273}
!12272 = !DILocalVariable(name: "dev", arg: 1, scope: !12270, file: !1821, line: 220, type: !1727)
!12273 = !DILocalVariable(name: "config", scope: !12270, file: !1821, line: 222, type: !12017)
!12274 = !DILocation(line: 0, scope: !12270)
!12275 = !DILocation(line: 222, column: 48, scope: !12270)
!12276 = !DILocation(line: 224, column: 44, scope: !12270)
!12277 = !DILocation(line: 224, column: 9, scope: !12270)
!12278 = !DILocation(line: 224, column: 2, scope: !12270)
!12279 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1821, file: !1821, line: 304, type: !12280, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12282)
!12280 = !DISubroutineType(types: !12281)
!12281 = !{!1707, !208}
!12282 = !{!12283}
!12283 = !DILocalVariable(name: "sb", arg: 1, scope: !12279, file: !1821, line: 304, type: !208)
!12284 = !DILocation(line: 0, scope: !12279)
!12285 = !DILocation(line: 306, column: 2, scope: !12279)
!12286 = !DILocation(line: 0, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12279, file: !1821, line: 306, column: 14)
!12288 = !DILocation(line: 323, column: 1, scope: !12279)
!12289 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1821, file: !1821, line: 235, type: !12252, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12290)
!12290 = !{!12291, !12292}
!12291 = !DILocalVariable(name: "dev", arg: 1, scope: !12289, file: !1821, line: 235, type: !1727)
!12292 = !DILocalVariable(name: "config", scope: !12289, file: !1821, line: 237, type: !12017)
!12293 = !DILocation(line: 0, scope: !12289)
!12294 = !DILocation(line: 237, column: 48, scope: !12289)
!12295 = !DILocation(line: 239, column: 39, scope: !12289)
!12296 = !DILocation(line: 239, column: 9, scope: !12289)
!12297 = !DILocation(line: 239, column: 2, scope: !12289)
!12298 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1821, file: !1821, line: 355, type: !12299, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12301)
!12299 = !DISubroutineType(types: !12300)
!12300 = !{!1700, !208, !208}
!12301 = !{!12302, !12303}
!12302 = !DILocalVariable(name: "db", arg: 1, scope: !12298, file: !1821, line: 355, type: !208)
!12303 = !DILocalVariable(name: "p", arg: 2, scope: !12298, file: !1821, line: 356, type: !208)
!12304 = !DILocation(line: 0, scope: !12298)
!12305 = !DILocation(line: 358, column: 2, scope: !12298)
!12306 = !DILocation(line: 384, column: 1, scope: !12298)
!12307 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1821, file: !1821, line: 250, type: !12252, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12308)
!12308 = !{!12309, !12310}
!12309 = !DILocalVariable(name: "dev", arg: 1, scope: !12307, file: !1821, line: 250, type: !1727)
!12310 = !DILocalVariable(name: "config", scope: !12307, file: !1821, line: 252, type: !12017)
!12311 = !DILocation(line: 0, scope: !12307)
!12312 = !DILocation(line: 252, column: 48, scope: !12307)
!12313 = !DILocation(line: 254, column: 40, scope: !12307)
!12314 = !DILocation(line: 254, column: 9, scope: !12307)
!12315 = !DILocation(line: 254, column: 2, scope: !12307)
!12316 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1821, file: !1821, line: 409, type: !12317, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12319)
!12317 = !DISubroutineType(types: !12318)
!12318 = !{!1713, !208}
!12319 = !{!12320}
!12320 = !DILocalVariable(name: "fc", arg: 1, scope: !12316, file: !1821, line: 409, type: !208)
!12321 = !DILocation(line: 0, scope: !12316)
!12322 = !DILocation(line: 411, column: 9, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12316, file: !1821, line: 411, column: 6)
!12324 = !DILocation(line: 416, column: 1, scope: !12316)
!12325 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !12326, file: !12326, line: 966, type: !12327, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12329)
!12326 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12327 = !DISubroutineType(types: !12328)
!12328 = !{!208, !1768}
!12329 = !{!12330}
!12330 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12325, file: !12326, line: 966, type: !1768)
!12331 = !DILocation(line: 0, scope: !12325)
!12332 = !DILocation(line: 968, column: 21, scope: !12325)
!12333 = !DILocation(line: 968, column: 3, scope: !12325)
!12334 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !12326, file: !12326, line: 600, type: !12327, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12335)
!12335 = !{!12336}
!12336 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12334, file: !12326, line: 600, type: !1768)
!12337 = !DILocation(line: 0, scope: !12334)
!12338 = !DILocation(line: 602, column: 21, scope: !12334)
!12339 = !DILocation(line: 602, column: 3, scope: !12334)
!12340 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !12326, file: !12326, line: 819, type: !12327, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12341)
!12341 = !{!12342}
!12342 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12340, file: !12326, line: 819, type: !1768)
!12343 = !DILocation(line: 0, scope: !12340)
!12344 = !DILocation(line: 821, column: 21, scope: !12340)
!12345 = !DILocation(line: 821, column: 3, scope: !12340)
!12346 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !12326, file: !12326, line: 546, type: !12327, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12347)
!12347 = !{!12348}
!12348 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12346, file: !12326, line: 546, type: !1768)
!12349 = !DILocation(line: 0, scope: !12346)
!12350 = !DILocation(line: 548, column: 21, scope: !12346)
!12351 = !DILocation(line: 548, column: 3, scope: !12346)
!12352 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1821, file: !1821, line: 257, type: !12353, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12355)
!12353 = !DISubroutineType(types: !12354)
!12354 = !{!208, !1693}
!12355 = !{!12356}
!12356 = !DILocalVariable(name: "parity", arg: 1, scope: !12352, file: !1821, line: 257, type: !1693)
!12357 = !DILocation(line: 0, scope: !12352)
!12358 = !DILocation(line: 259, column: 2, scope: !12352)
!12359 = !DILocation(line: 268, column: 1, scope: !12352)
!12360 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1821, file: !1821, line: 283, type: !12361, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12363)
!12361 = !DISubroutineType(types: !12362)
!12362 = !{!208, !1707}
!12363 = !{!12364}
!12364 = !DILocalVariable(name: "sb", arg: 1, scope: !12360, file: !1821, line: 283, type: !1707)
!12365 = !DILocation(line: 0, scope: !12360)
!12366 = !DILocation(line: 285, column: 2, scope: !12360)
!12367 = !DILocation(line: 0, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12360, file: !1821, line: 285, column: 14)
!12369 = !DILocation(line: 302, column: 1, scope: !12360)
!12370 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1821, file: !1821, line: 325, type: !12371, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12373)
!12371 = !DISubroutineType(types: !12372)
!12372 = !{!208, !1700, !1693}
!12373 = !{!12374, !12375}
!12374 = !DILocalVariable(name: "db", arg: 1, scope: !12370, file: !1821, line: 325, type: !1700)
!12375 = !DILocalVariable(name: "p", arg: 2, scope: !12370, file: !1821, line: 326, type: !1693)
!12376 = !DILocation(line: 0, scope: !12370)
!12377 = !DILocation(line: 328, column: 2, scope: !12370)
!12378 = !DILocation(line: 353, column: 1, scope: !12370)
!12379 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1821, file: !1821, line: 393, type: !12380, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12382)
!12380 = !DISubroutineType(types: !12381)
!12381 = !{!208, !1713}
!12382 = !{!12383}
!12383 = !DILocalVariable(name: "fc", arg: 1, scope: !12379, file: !1821, line: 393, type: !1713)
!12384 = !DILocation(line: 0, scope: !12379)
!12385 = !DILocation(line: 395, column: 9, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12379, file: !1821, line: 395, column: 6)
!12387 = !DILocation(line: 400, column: 1, scope: !12379)
!12388 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !12326, file: !12326, line: 423, type: !12389, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12391)
!12389 = !DISubroutineType(types: !12390)
!12390 = !{null, !1768}
!12391 = !{!12392}
!12392 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12388, file: !12326, line: 423, type: !1768)
!12393 = !DILocation(line: 0, scope: !12388)
!12394 = !DILocation(line: 425, column: 3, scope: !12388)
!12395 = !DILocation(line: 426, column: 1, scope: !12388)
!12396 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1821, file: !1821, line: 197, type: !12397, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12399)
!12397 = !DISubroutineType(types: !12398)
!12398 = !{null, !1727, !208}
!12399 = !{!12400, !12401, !12402}
!12400 = !DILocalVariable(name: "dev", arg: 1, scope: !12396, file: !1821, line: 197, type: !1727)
!12401 = !DILocalVariable(name: "parity", arg: 2, scope: !12396, file: !1821, line: 198, type: !208)
!12402 = !DILocalVariable(name: "config", scope: !12396, file: !1821, line: 200, type: !12017)
!12403 = !DILocation(line: 0, scope: !12396)
!12404 = !DILocation(line: 200, column: 48, scope: !12396)
!12405 = !DILocation(line: 202, column: 29, scope: !12396)
!12406 = !DILocation(line: 202, column: 2, scope: !12396)
!12407 = !DILocation(line: 203, column: 1, scope: !12396)
!12408 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1821, file: !1821, line: 212, type: !12397, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12409)
!12409 = !{!12410, !12411, !12412}
!12410 = !DILocalVariable(name: "dev", arg: 1, scope: !12408, file: !1821, line: 212, type: !1727)
!12411 = !DILocalVariable(name: "stopbits", arg: 2, scope: !12408, file: !1821, line: 213, type: !208)
!12412 = !DILocalVariable(name: "config", scope: !12408, file: !1821, line: 215, type: !12017)
!12413 = !DILocation(line: 0, scope: !12408)
!12414 = !DILocation(line: 215, column: 48, scope: !12408)
!12415 = !DILocation(line: 217, column: 37, scope: !12408)
!12416 = !DILocation(line: 217, column: 2, scope: !12408)
!12417 = !DILocation(line: 218, column: 1, scope: !12408)
!12418 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1821, file: !1821, line: 227, type: !12397, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12419)
!12419 = !{!12420, !12421, !12422}
!12420 = !DILocalVariable(name: "dev", arg: 1, scope: !12418, file: !1821, line: 227, type: !1727)
!12421 = !DILocalVariable(name: "databits", arg: 2, scope: !12418, file: !1821, line: 228, type: !208)
!12422 = !DILocalVariable(name: "config", scope: !12418, file: !1821, line: 230, type: !12017)
!12423 = !DILocation(line: 0, scope: !12418)
!12424 = !DILocation(line: 230, column: 48, scope: !12418)
!12425 = !DILocation(line: 232, column: 32, scope: !12418)
!12426 = !DILocation(line: 232, column: 2, scope: !12418)
!12427 = !DILocation(line: 233, column: 1, scope: !12418)
!12428 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1821, file: !1821, line: 242, type: !12397, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12429)
!12429 = !{!12430, !12431, !12432}
!12430 = !DILocalVariable(name: "dev", arg: 1, scope: !12428, file: !1821, line: 242, type: !1727)
!12431 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !12428, file: !1821, line: 243, type: !208)
!12432 = !DILocalVariable(name: "config", scope: !12428, file: !1821, line: 245, type: !12017)
!12433 = !DILocation(line: 0, scope: !12428)
!12434 = !DILocation(line: 245, column: 48, scope: !12428)
!12435 = !DILocation(line: 247, column: 33, scope: !12428)
!12436 = !DILocation(line: 247, column: 2, scope: !12428)
!12437 = !DILocation(line: 248, column: 1, scope: !12428)
!12438 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1821, file: !1821, line: 107, type: !12397, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12439)
!12439 = !{!12440, !12441, !12442, !12443, !12444}
!12440 = !DILocalVariable(name: "dev", arg: 1, scope: !12438, file: !1821, line: 107, type: !1727)
!12441 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !12438, file: !1821, line: 107, type: !208)
!12442 = !DILocalVariable(name: "config", scope: !12438, file: !1821, line: 109, type: !12017)
!12443 = !DILocalVariable(name: "data", scope: !12438, file: !1821, line: 110, type: !12140)
!12444 = !DILocalVariable(name: "clock_rate", scope: !12438, file: !1821, line: 112, type: !208)
!12445 = !DILocation(line: 0, scope: !12438)
!12446 = !DILocation(line: 109, column: 48, scope: !12438)
!12447 = !DILocation(line: 110, column: 38, scope: !12438)
!12448 = !DILocation(line: 112, column: 2, scope: !12438)
!12449 = !DILocation(line: 123, column: 36, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12451, file: !1821, line: 123, column: 7)
!12451 = distinct !DILexicalBlock(scope: !12452, file: !1821, line: 122, column: 9)
!12452 = distinct !DILexicalBlock(scope: !12438, file: !1821, line: 115, column: 6)
!12453 = !DILocation(line: 124, column: 42, scope: !12450)
!12454 = !DILocation(line: 123, column: 7, scope: !12450)
!12455 = !DILocation(line: 125, column: 22, scope: !12450)
!12456 = !DILocation(line: 123, column: 7, scope: !12451)
!12457 = !DILocation(line: 126, column: 4, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12459, file: !1821, line: 126, column: 4)
!12459 = distinct !DILexicalBlock(scope: !12460, file: !1821, line: 126, column: 4)
!12460 = distinct !DILexicalBlock(scope: !12461, file: !1821, line: 126, column: 4)
!12461 = distinct !DILexicalBlock(scope: !12462, file: !1821, line: 126, column: 4)
!12462 = distinct !DILexicalBlock(scope: !12450, file: !1821, line: 125, column: 27)
!12463 = !DILocation(line: 127, column: 4, scope: !12462)
!12464 = !DILocation(line: 176, column: 36, scope: !12438)
!12465 = !DILocation(line: 176, column: 3, scope: !12438)
!12466 = !DILocation(line: 179, column: 32, scope: !12438)
!12467 = !DILocation(line: 180, column: 10, scope: !12438)
!12468 = !DILocation(line: 179, column: 3, scope: !12438)
!12469 = !DILocation(line: 195, column: 1, scope: !12438)
!12470 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !12326, file: !12326, line: 409, type: !12389, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12471)
!12471 = !{!12472}
!12472 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12470, file: !12326, line: 409, type: !1768)
!12473 = !DILocation(line: 0, scope: !12470)
!12474 = !DILocation(line: 411, column: 3, scope: !12470)
!12475 = !DILocation(line: 412, column: 1, scope: !12470)
!12476 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1059, file: !1059, line: 216, type: !1801, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12477)
!12477 = !{!12478, !12479, !12480, !12481}
!12478 = !DILocalVariable(name: "dev", arg: 1, scope: !12476, file: !1059, line: 216, type: !1727)
!12479 = !DILocalVariable(name: "sys", arg: 2, scope: !12476, file: !1059, line: 217, type: !1134)
!12480 = !DILocalVariable(name: "rate", arg: 3, scope: !12476, file: !1059, line: 218, type: !1090)
!12481 = !DILocalVariable(name: "api", scope: !12476, file: !1059, line: 220, type: !1779)
!12482 = !DILocation(line: 0, scope: !12476)
!12483 = !DILocation(line: 221, column: 49, scope: !12476)
!12484 = !DILocation(line: 223, column: 11, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12476, file: !1059, line: 223, column: 6)
!12486 = !DILocation(line: 223, column: 20, scope: !12485)
!12487 = !DILocation(line: 223, column: 6, scope: !12476)
!12488 = !DILocation(line: 227, column: 9, scope: !12476)
!12489 = !DILocation(line: 227, column: 2, scope: !12476)
!12490 = !DILocation(line: 228, column: 1, scope: !12476)
!12491 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3438, file: !3438, line: 175, type: !3439, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12492)
!12492 = !{!12493}
!12493 = !DILocalVariable(name: "level", arg: 1, scope: !12491, file: !3438, line: 175, type: !125)
!12494 = !DILocation(line: 0, scope: !12491)
!12495 = !DILocation(line: 177, column: 2, scope: !12491)
!12496 = !DILocation(line: 189, column: 1, scope: !12491)
!12497 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !12326, file: !12326, line: 614, type: !12498, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12500)
!12498 = !DISubroutineType(types: !12499)
!12499 = !{null, !1768, !208}
!12500 = !{!12501, !12502}
!12501 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12497, file: !12326, line: 614, type: !1768)
!12502 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !12497, file: !12326, line: 614, type: !208)
!12503 = !DILocation(line: 0, scope: !12497)
!12504 = !DILocation(line: 616, column: 3, scope: !12497)
!12505 = !DILocation(line: 617, column: 1, scope: !12497)
!12506 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !12326, file: !12326, line: 1019, type: !12507, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12509)
!12507 = !DISubroutineType(types: !12508)
!12508 = !{null, !1768, !208, !208, !208}
!12509 = !{!12510, !12511, !12512, !12513}
!12510 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12506, file: !12326, line: 1019, type: !1768)
!12511 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !12506, file: !12326, line: 1019, type: !208)
!12512 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !12506, file: !12326, line: 1019, type: !208)
!12513 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !12506, file: !12326, line: 1020, type: !208)
!12514 = !DILocation(line: 0, scope: !12506)
!12515 = !DILocation(line: 1028, column: 30, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12517, file: !12326, line: 1027, column: 3)
!12517 = distinct !DILexicalBlock(scope: !12506, file: !12326, line: 1022, column: 7)
!12518 = !DILocation(line: 1028, column: 19, scope: !12516)
!12519 = !DILocation(line: 1028, column: 13, scope: !12516)
!12520 = !DILocation(line: 1028, column: 17, scope: !12516)
!12521 = !DILocation(line: 1030, column: 1, scope: !12506)
!12522 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !12326, file: !12326, line: 948, type: !12498, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12523)
!12523 = !{!12524, !12525}
!12524 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12522, file: !12326, line: 948, type: !1768)
!12525 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !12522, file: !12326, line: 948, type: !208)
!12526 = !DILocation(line: 0, scope: !12522)
!12527 = !DILocation(line: 950, column: 3, scope: !12522)
!12528 = !DILocation(line: 951, column: 1, scope: !12522)
!12529 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !12326, file: !12326, line: 587, type: !12498, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12530)
!12530 = !{!12531, !12532}
!12531 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12529, file: !12326, line: 587, type: !1768)
!12532 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12529, file: !12326, line: 587, type: !208)
!12533 = !DILocation(line: 0, scope: !12529)
!12534 = !DILocation(line: 589, column: 3, scope: !12529)
!12535 = !DILocation(line: 590, column: 1, scope: !12529)
!12536 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !12326, file: !12326, line: 804, type: !12498, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12537)
!12537 = !{!12538, !12539}
!12538 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12536, file: !12326, line: 804, type: !1768)
!12539 = !DILocalVariable(name: "StopBits", arg: 2, scope: !12536, file: !12326, line: 804, type: !208)
!12540 = !DILocation(line: 0, scope: !12536)
!12541 = !DILocation(line: 806, column: 3, scope: !12536)
!12542 = !DILocation(line: 807, column: 1, scope: !12536)
!12543 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !12326, file: !12326, line: 531, type: !12498, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12544)
!12544 = !{!12545, !12546}
!12545 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12543, file: !12326, line: 531, type: !1768)
!12546 = !DILocalVariable(name: "Parity", arg: 2, scope: !12543, file: !12326, line: 531, type: !208)
!12547 = !DILocation(line: 0, scope: !12543)
!12548 = !DILocation(line: 533, column: 3, scope: !12543)
!12549 = !DILocation(line: 534, column: 1, scope: !12543)
!12550 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !12326, file: !12326, line: 1769, type: !12327, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12551)
!12551 = !{!12552}
!12552 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12550, file: !12326, line: 1769, type: !1768)
!12553 = !DILocation(line: 0, scope: !12550)
!12554 = !DILocation(line: 1771, column: 11, scope: !12550)
!12555 = !DILocation(line: 1771, column: 46, scope: !12550)
!12556 = !DILocation(line: 1771, column: 3, scope: !12550)
!12557 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !12326, file: !12326, line: 1736, type: !12327, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12558)
!12558 = !{!12559}
!12559 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12557, file: !12326, line: 1736, type: !1768)
!12560 = !DILocation(line: 0, scope: !12557)
!12561 = !DILocation(line: 1738, column: 11, scope: !12557)
!12562 = !DILocation(line: 1738, column: 3, scope: !12557)
!12563 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !12326, file: !12326, line: 1747, type: !12327, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12564)
!12564 = !{!12565}
!12565 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12563, file: !12326, line: 1747, type: !1768)
!12566 = !DILocation(line: 0, scope: !12563)
!12567 = !DILocation(line: 1749, column: 11, scope: !12563)
!12568 = !DILocation(line: 1749, column: 45, scope: !12563)
!12569 = !DILocation(line: 1749, column: 3, scope: !12563)
!12570 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !12326, file: !12326, line: 1826, type: !12327, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12571)
!12571 = !{!12572}
!12572 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12570, file: !12326, line: 1826, type: !1768)
!12573 = !DILocation(line: 0, scope: !12570)
!12574 = !DILocation(line: 1828, column: 11, scope: !12570)
!12575 = !DILocation(line: 1828, column: 46, scope: !12570)
!12576 = !DILocation(line: 1828, column: 3, scope: !12570)
!12577 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !12326, file: !12326, line: 1991, type: !12389, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12578)
!12578 = !{!12579}
!12579 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12577, file: !12326, line: 1991, type: !1768)
!12580 = !DILocation(line: 0, scope: !12577)
!12581 = !DILocation(line: 1993, column: 3, scope: !12577)
!12582 = !DILocation(line: 1994, column: 1, scope: !12577)
!12583 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !12326, file: !12326, line: 1933, type: !12389, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12584)
!12584 = !{!12585, !12586}
!12585 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12583, file: !12326, line: 1933, type: !1768)
!12586 = !DILocalVariable(name: "tmpreg", scope: !12583, file: !12326, line: 1935, type: !423)
!12587 = !DILocation(line: 0, scope: !12583)
!12588 = !DILocation(line: 1935, column: 3, scope: !12583)
!12589 = !DILocation(line: 1935, column: 17, scope: !12583)
!12590 = !DILocation(line: 1936, column: 20, scope: !12583)
!12591 = !DILocation(line: 1936, column: 10, scope: !12583)
!12592 = !DILocation(line: 1937, column: 10, scope: !12583)
!12593 = !DILocation(line: 1938, column: 20, scope: !12583)
!12594 = !DILocation(line: 1938, column: 10, scope: !12583)
!12595 = !DILocation(line: 1939, column: 10, scope: !12583)
!12596 = !DILocation(line: 1940, column: 1, scope: !12583)
!12597 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !12326, file: !12326, line: 1876, type: !12389, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12598)
!12598 = !{!12599, !12600}
!12599 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12597, file: !12326, line: 1876, type: !1768)
!12600 = !DILocalVariable(name: "tmpreg", scope: !12597, file: !12326, line: 1878, type: !423)
!12601 = !DILocation(line: 0, scope: !12597)
!12602 = !DILocation(line: 1878, column: 3, scope: !12597)
!12603 = !DILocation(line: 1878, column: 17, scope: !12597)
!12604 = !DILocation(line: 1879, column: 20, scope: !12597)
!12605 = !DILocation(line: 1879, column: 10, scope: !12597)
!12606 = !DILocation(line: 1880, column: 10, scope: !12597)
!12607 = !DILocation(line: 1881, column: 20, scope: !12597)
!12608 = !DILocation(line: 1881, column: 10, scope: !12597)
!12609 = !DILocation(line: 1882, column: 10, scope: !12597)
!12610 = !DILocation(line: 1883, column: 1, scope: !12597)
!12611 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !12326, file: !12326, line: 1895, type: !12389, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12612)
!12612 = !{!12613, !12614}
!12613 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12611, file: !12326, line: 1895, type: !1768)
!12614 = !DILocalVariable(name: "tmpreg", scope: !12611, file: !12326, line: 1897, type: !423)
!12615 = !DILocation(line: 0, scope: !12611)
!12616 = !DILocation(line: 1897, column: 3, scope: !12611)
!12617 = !DILocation(line: 1897, column: 17, scope: !12611)
!12618 = !DILocation(line: 1898, column: 20, scope: !12611)
!12619 = !DILocation(line: 1898, column: 10, scope: !12611)
!12620 = !DILocation(line: 1899, column: 10, scope: !12611)
!12621 = !DILocation(line: 1900, column: 20, scope: !12611)
!12622 = !DILocation(line: 1900, column: 10, scope: !12611)
!12623 = !DILocation(line: 1901, column: 10, scope: !12611)
!12624 = !DILocation(line: 1902, column: 1, scope: !12611)
!12625 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !12326, file: !12326, line: 1914, type: !12389, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12626)
!12626 = !{!12627, !12628}
!12627 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12625, file: !12326, line: 1914, type: !1768)
!12628 = !DILocalVariable(name: "tmpreg", scope: !12625, file: !12326, line: 1916, type: !423)
!12629 = !DILocation(line: 0, scope: !12625)
!12630 = !DILocation(line: 1916, column: 3, scope: !12625)
!12631 = !DILocation(line: 1916, column: 17, scope: !12625)
!12632 = !DILocation(line: 1917, column: 20, scope: !12625)
!12633 = !DILocation(line: 1917, column: 10, scope: !12625)
!12634 = !DILocation(line: 1918, column: 10, scope: !12625)
!12635 = !DILocation(line: 1919, column: 20, scope: !12625)
!12636 = !DILocation(line: 1919, column: 10, scope: !12625)
!12637 = !DILocation(line: 1920, column: 10, scope: !12625)
!12638 = !DILocation(line: 1921, column: 1, scope: !12625)
!12639 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !12326, file: !12326, line: 1813, type: !12327, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12640)
!12640 = !{!12641}
!12641 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12639, file: !12326, line: 1813, type: !1768)
!12642 = !DILocation(line: 0, scope: !12639)
!12643 = !DILocation(line: 1815, column: 11, scope: !12639)
!12644 = !DILocation(line: 1815, column: 46, scope: !12639)
!12645 = !DILocation(line: 1815, column: 3, scope: !12639)
!12646 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !12326, file: !12326, line: 2425, type: !12647, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12649)
!12647 = !DISubroutineType(types: !12648)
!12648 = !{null, !1768, !150}
!12649 = !{!12650, !12651}
!12650 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12646, file: !12326, line: 2425, type: !1768)
!12651 = !DILocalVariable(name: "Value", arg: 2, scope: !12646, file: !12326, line: 2425, type: !150)
!12652 = !DILocation(line: 0, scope: !12646)
!12653 = !DILocation(line: 2427, column: 16, scope: !12646)
!12654 = !DILocation(line: 2427, column: 11, scope: !12646)
!12655 = !DILocation(line: 2427, column: 14, scope: !12646)
!12656 = !DILocation(line: 2428, column: 1, scope: !12646)
!12657 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !12326, file: !12326, line: 1791, type: !12327, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12658)
!12658 = !{!12659}
!12659 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12657, file: !12326, line: 1791, type: !1768)
!12660 = !DILocation(line: 0, scope: !12657)
!12661 = !DILocation(line: 1793, column: 11, scope: !12657)
!12662 = !DILocation(line: 1793, column: 47, scope: !12657)
!12663 = !DILocation(line: 1793, column: 3, scope: !12657)
!12664 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !12326, file: !12326, line: 2402, type: !12665, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12667)
!12665 = !DISubroutineType(types: !12666)
!12666 = !{!150, !1768}
!12667 = !{!12668}
!12668 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12664, file: !12326, line: 2402, type: !1768)
!12669 = !DILocation(line: 0, scope: !12664)
!12670 = !DILocation(line: 2404, column: 20, scope: !12664)
!12671 = !DILocation(line: 2404, column: 10, scope: !12664)
!12672 = !DILocation(line: 2404, column: 3, scope: !12664)
!12673 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1821, file: !1821, line: 1583, type: !1748, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12674)
!12674 = !{!12675, !12676, !12677, !12678, !12679, !12680}
!12675 = !DILocalVariable(name: "dev", arg: 1, scope: !12673, file: !1821, line: 1583, type: !1727)
!12676 = !DILocalVariable(name: "config", scope: !12673, file: !1821, line: 1585, type: !12017)
!12677 = !DILocalVariable(name: "data", scope: !12673, file: !1821, line: 1586, type: !12140)
!12678 = !DILocalVariable(name: "ll_parity", scope: !12673, file: !1821, line: 1587, type: !208)
!12679 = !DILocalVariable(name: "ll_datawidth", scope: !12673, file: !1821, line: 1588, type: !208)
!12680 = !DILocalVariable(name: "err", scope: !12673, file: !1821, line: 1589, type: !125)
!12681 = !DILocation(line: 0, scope: !12673)
!12682 = !DILocation(line: 1585, column: 48, scope: !12673)
!12683 = !DILocation(line: 1586, column: 38, scope: !12673)
!12684 = !DILocation(line: 1591, column: 2, scope: !12673)
!12685 = !DILocation(line: 1593, column: 29, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12673, file: !1821, line: 1593, column: 6)
!12687 = !DILocation(line: 1593, column: 7, scope: !12686)
!12688 = !DILocation(line: 1593, column: 6, scope: !12673)
!12689 = !DILocation(line: 1594, column: 3, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12691, file: !1821, line: 1594, column: 3)
!12691 = distinct !DILexicalBlock(scope: !12692, file: !1821, line: 1594, column: 3)
!12692 = distinct !DILexicalBlock(scope: !12693, file: !1821, line: 1594, column: 3)
!12693 = distinct !DILexicalBlock(scope: !12694, file: !1821, line: 1594, column: 3)
!12694 = distinct !DILexicalBlock(scope: !12686, file: !1821, line: 1593, column: 37)
!12695 = !DILocation(line: 1595, column: 3, scope: !12694)
!12696 = !DILocation(line: 1599, column: 31, scope: !12673)
!12697 = !DILocation(line: 1599, column: 71, scope: !12673)
!12698 = !DILocation(line: 1599, column: 8, scope: !12673)
!12699 = !DILocation(line: 1600, column: 10, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12673, file: !1821, line: 1600, column: 6)
!12701 = !DILocation(line: 1600, column: 6, scope: !12673)
!12702 = !DILocation(line: 1601, column: 3, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12704, file: !1821, line: 1601, column: 3)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !1821, line: 1601, column: 3)
!12705 = distinct !DILexicalBlock(scope: !12706, file: !1821, line: 1601, column: 3)
!12706 = distinct !DILexicalBlock(scope: !12707, file: !1821, line: 1601, column: 3)
!12707 = distinct !DILexicalBlock(scope: !12700, file: !1821, line: 1600, column: 16)
!12708 = !DILocation(line: 1602, column: 3, scope: !12707)
!12709 = !DILocation(line: 1616, column: 36, scope: !12673)
!12710 = !DILocation(line: 1616, column: 8, scope: !12673)
!12711 = !DILocation(line: 1617, column: 10, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12673, file: !1821, line: 1617, column: 6)
!12713 = !DILocation(line: 1617, column: 6, scope: !12673)
!12714 = !DILocation(line: 1621, column: 27, scope: !12673)
!12715 = !DILocation(line: 1621, column: 2, scope: !12673)
!12716 = !DILocation(line: 1624, column: 40, scope: !12673)
!12717 = !DILocation(line: 1624, column: 2, scope: !12673)
!12718 = !DILocation(line: 1630, column: 14, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12673, file: !1821, line: 1630, column: 6)
!12720 = !DILocation(line: 1630, column: 6, scope: !12673)
!12721 = !DILocation(line: 1640, column: 4, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12723, file: !1821, line: 1640, column: 4)
!12723 = distinct !DILexicalBlock(scope: !12724, file: !1821, line: 1640, column: 4)
!12724 = distinct !DILexicalBlock(scope: !12725, file: !1821, line: 1640, column: 4)
!12725 = distinct !DILexicalBlock(scope: !12726, file: !1821, line: 1640, column: 4)
!12726 = distinct !DILexicalBlock(scope: !12727, file: !1821, line: 1639, column: 28)
!12727 = distinct !DILexicalBlock(scope: !12728, file: !1821, line: 1639, column: 7)
!12728 = distinct !DILexicalBlock(scope: !12729, file: !1821, line: 1638, column: 9)
!12729 = distinct !DILexicalBlock(scope: !12719, file: !1821, line: 1634, column: 13)
!12730 = !DILocation(line: 0, scope: !12719)
!12731 = !DILocation(line: 1649, column: 35, scope: !12673)
!12732 = !DILocation(line: 1649, column: 2, scope: !12673)
!12733 = !DILocation(line: 1654, column: 14, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12673, file: !1821, line: 1654, column: 6)
!12735 = !DILocation(line: 1654, column: 6, scope: !12673)
!12736 = !DILocation(line: 1655, column: 3, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12734, file: !1821, line: 1654, column: 31)
!12738 = !DILocation(line: 1656, column: 2, scope: !12737)
!12739 = !DILocation(line: 1659, column: 37, scope: !12673)
!12740 = !DILocation(line: 1659, column: 2, scope: !12673)
!12741 = !DILocation(line: 1662, column: 14, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12673, file: !1821, line: 1662, column: 6)
!12743 = !DILocation(line: 1662, column: 6, scope: !12673)
!12744 = !DILocation(line: 1663, column: 37, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12742, file: !1821, line: 1662, column: 27)
!12746 = !DILocation(line: 1663, column: 3, scope: !12745)
!12747 = !DILocation(line: 1664, column: 2, scope: !12745)
!12748 = !DILocation(line: 1684, column: 26, scope: !12673)
!12749 = !DILocation(line: 1684, column: 2, scope: !12673)
!12750 = !DILocation(line: 1722, column: 2, scope: !12673)
!12751 = !DILocation(line: 1724, column: 1, scope: !12673)
!12752 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1821, file: !1821, line: 651, type: !12753, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12755)
!12753 = !DISubroutineType(types: !12754)
!12754 = !{null, !1727}
!12755 = !{!12756, !12757, !12758}
!12756 = !DILocalVariable(name: "dev", arg: 1, scope: !12752, file: !1821, line: 651, type: !1727)
!12757 = !DILocalVariable(name: "data", scope: !12752, file: !1821, line: 653, type: !12140)
!12758 = !DILocalVariable(name: "clk", scope: !12752, file: !1821, line: 654, type: !12759)
!12759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1727)
!12760 = !DILocation(line: 0, scope: !12752)
!12761 = !DILocation(line: 653, column: 38, scope: !12752)
!12762 = !DILocation(line: 656, column: 8, scope: !12752)
!12763 = !DILocation(line: 656, column: 14, scope: !12752)
!12764 = !DILocation(line: 657, column: 1, scope: !12752)
!12765 = distinct !DISubprogram(name: "device_is_ready", scope: !4179, file: !4179, line: 47, type: !12766, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12768)
!12766 = !DISubroutineType(types: !12767)
!12767 = !{!153, !1727}
!12768 = !{!12769}
!12769 = !DILocalVariable(name: "dev", arg: 1, scope: !12765, file: !4179, line: 47, type: !1727)
!12770 = !DILocation(line: 0, scope: !12765)
!12771 = !DILocation(line: 55, column: 2, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12765, file: !4179, line: 55, column: 2)
!12773 = !{i64 2152493039}
!12774 = !DILocation(line: 56, column: 9, scope: !12765)
!12775 = !DILocation(line: 56, column: 2, scope: !12765)
!12776 = distinct !DISubprogram(name: "clock_control_on", scope: !1059, file: !1059, line: 123, type: !1786, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12777)
!12777 = !{!12778, !12779, !12780}
!12778 = !DILocalVariable(name: "dev", arg: 1, scope: !12776, file: !1059, line: 123, type: !1727)
!12779 = !DILocalVariable(name: "sys", arg: 2, scope: !12776, file: !1059, line: 124, type: !1134)
!12780 = !DILocalVariable(name: "api", scope: !12776, file: !1059, line: 126, type: !1779)
!12781 = !DILocation(line: 0, scope: !12776)
!12782 = !DILocation(line: 127, column: 49, scope: !12776)
!12783 = !DILocation(line: 129, column: 14, scope: !12776)
!12784 = !DILocation(line: 129, column: 9, scope: !12776)
!12785 = !DILocation(line: 129, column: 2, scope: !12776)
!12786 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1866, file: !1866, line: 342, type: !12787, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12789)
!12787 = !DISubroutineType(types: !12788)
!12788 = !{!125, !1863, !150}
!12789 = !{!12790, !12791, !12792, !12793}
!12790 = !DILocalVariable(name: "config", arg: 1, scope: !12786, file: !1866, line: 342, type: !1863)
!12791 = !DILocalVariable(name: "id", arg: 2, scope: !12786, file: !1866, line: 343, type: !150)
!12792 = !DILocalVariable(name: "ret", scope: !12786, file: !1866, line: 345, type: !125)
!12793 = !DILocalVariable(name: "state", scope: !12786, file: !1866, line: 346, type: !1869)
!12794 = !DILocation(line: 0, scope: !12786)
!12795 = !DILocation(line: 346, column: 2, scope: !12786)
!12796 = !DILocation(line: 348, column: 8, scope: !12786)
!12797 = !DILocation(line: 349, column: 10, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12786, file: !1866, line: 349, column: 6)
!12799 = !DILocation(line: 349, column: 6, scope: !12786)
!12800 = !DILocation(line: 353, column: 44, scope: !12786)
!12801 = !DILocation(line: 353, column: 9, scope: !12786)
!12802 = !DILocation(line: 353, column: 2, scope: !12786)
!12803 = !DILocation(line: 354, column: 1, scope: !12786)
!12804 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !12326, file: !12326, line: 496, type: !12498, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12805)
!12805 = !{!12806, !12807}
!12806 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12804, file: !12326, line: 496, type: !1768)
!12807 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12804, file: !12326, line: 496, type: !208)
!12808 = !DILocation(line: 0, scope: !12804)
!12809 = !DILocation(line: 498, column: 3, scope: !12804)
!12810 = !DILocation(line: 499, column: 1, scope: !12804)
!12811 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !12326, file: !12326, line: 849, type: !12507, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12812)
!12812 = !{!12813, !12814, !12815, !12816}
!12813 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12811, file: !12326, line: 849, type: !1768)
!12814 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12811, file: !12326, line: 849, type: !208)
!12815 = !DILocalVariable(name: "Parity", arg: 3, scope: !12811, file: !12326, line: 849, type: !208)
!12816 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12811, file: !12326, line: 850, type: !208)
!12817 = !DILocation(line: 0, scope: !12811)
!12818 = !DILocation(line: 852, column: 3, scope: !12811)
!12819 = !DILocation(line: 853, column: 3, scope: !12811)
!12820 = !DILocation(line: 854, column: 1, scope: !12811)
!12821 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !12326, file: !12326, line: 1336, type: !12389, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12822)
!12822 = !{!12823}
!12823 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12821, file: !12326, line: 1336, type: !1768)
!12824 = !DILocation(line: 0, scope: !12821)
!12825 = !DILocation(line: 1338, column: 3, scope: !12821)
!12826 = !DILocation(line: 1339, column: 1, scope: !12821)
!12827 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1866, file: !1866, line: 316, type: !12828, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12830)
!12828 = !DISubroutineType(types: !12829)
!12829 = !{!125, !1863, !1869}
!12830 = !{!12831, !12832, !12833}
!12831 = !DILocalVariable(name: "config", arg: 1, scope: !12827, file: !1866, line: 317, type: !1863)
!12832 = !DILocalVariable(name: "state", arg: 2, scope: !12827, file: !1866, line: 318, type: !1869)
!12833 = !DILocalVariable(name: "reg", scope: !12827, file: !1866, line: 320, type: !22)
!12834 = !DILocation(line: 0, scope: !12827)
!12835 = !DILocation(line: 329, column: 39, scope: !12827)
!12836 = !DILocation(line: 329, column: 52, scope: !12827)
!12837 = !DILocation(line: 329, column: 9, scope: !12827)
!12838 = !DILocation(line: 329, column: 2, scope: !12827)
!12839 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !12766, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !12840)
!12840 = !{!12841}
!12841 = !DILocalVariable(name: "dev", arg: 1, scope: !12839, file: !137, line: 730, type: !1727)
!12842 = !DILocation(line: 0, scope: !12839)
!12843 = !DILocation(line: 732, column: 9, scope: !12839)
!12844 = !DILocation(line: 732, column: 2, scope: !12839)
!12845 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2001, file: !2001, line: 270, type: !2007, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !12846)
!12846 = !{!12847}
!12847 = !DILocalVariable(name: "dev", arg: 1, scope: !12845, file: !2001, line: 270, type: !2009)
!12848 = !DILocation(line: 0, scope: !12845)
!12849 = !DILocation(line: 274, column: 2, scope: !12845)
!12850 = !DILocation(line: 275, column: 12, scope: !12845)
!12851 = !DILocation(line: 276, column: 15, scope: !12845)
!12852 = !DILocation(line: 277, column: 16, scope: !12845)
!12853 = !DILocation(line: 278, column: 15, scope: !12845)
!12854 = !DILocation(line: 279, column: 16, scope: !12845)
!12855 = !DILocation(line: 282, column: 2, scope: !12845)
!12856 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !693, file: !693, line: 1638, type: !8314, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !12857)
!12857 = !{!12858, !12859}
!12858 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12856, file: !693, line: 1638, type: !1015)
!12859 = !DILocalVariable(name: "priority", arg: 2, scope: !12856, file: !693, line: 1638, type: !208)
!12860 = !DILocation(line: 0, scope: !12856)
!12861 = !DILocation(line: 1646, column: 46, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12863, file: !693, line: 1645, column: 3)
!12863 = distinct !DILexicalBlock(scope: !12856, file: !693, line: 1640, column: 7)
!12864 = !DILocation(line: 1648, column: 1, scope: !12856)
!12865 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2001, file: !2001, line: 118, type: !8217, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !12866)
!12866 = !{!12867, !12868}
!12867 = !DILocalVariable(name: "arg", arg: 1, scope: !12865, file: !2001, line: 118, type: !124)
!12868 = !DILocalVariable(name: "dticks", scope: !12865, file: !2001, line: 121, type: !208)
!12869 = !DILocation(line: 0, scope: !12865)
!12870 = !DILocation(line: 124, column: 2, scope: !12865)
!12871 = !DILocation(line: 129, column: 17, scope: !12865)
!12872 = !DILocation(line: 129, column: 14, scope: !12865)
!12873 = !DILocation(line: 130, column: 15, scope: !12865)
!12874 = !DILocation(line: 145, column: 27, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12876, file: !2001, line: 132, column: 16)
!12876 = distinct !DILexicalBlock(scope: !12865, file: !2001, line: 132, column: 6)
!12877 = !DILocation(line: 145, column: 25, scope: !12875)
!12878 = !DILocation(line: 145, column: 45, scope: !12875)
!12879 = !DILocation(line: 146, column: 30, scope: !12875)
!12880 = !DILocation(line: 146, column: 20, scope: !12875)
!12881 = !DILocation(line: 147, column: 3, scope: !12875)
!12882 = !DILocation(line: 151, column: 2, scope: !12865)
!12883 = !DILocation(line: 152, column: 1, scope: !12865)
!12884 = distinct !DISubprogram(name: "elapsed", scope: !2001, file: !2001, line: 85, type: !9251, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !12885)
!12885 = !{!12886, !12887, !12888}
!12886 = !DILocalVariable(name: "val1", scope: !12884, file: !2001, line: 87, type: !208)
!12887 = !DILocalVariable(name: "ctrl", scope: !12884, file: !2001, line: 88, type: !208)
!12888 = !DILocalVariable(name: "val2", scope: !12884, file: !2001, line: 89, type: !208)
!12889 = !DILocation(line: 87, column: 27, scope: !12884)
!12890 = !DILocation(line: 0, scope: !12884)
!12891 = !DILocation(line: 88, column: 27, scope: !12884)
!12892 = !DILocation(line: 89, column: 27, scope: !12884)
!12893 = !DILocation(line: 105, column: 12, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12884, file: !2001, line: 105, column: 6)
!12895 = !DILocation(line: 106, column: 6, scope: !12894)
!12896 = !DILocation(line: 107, column: 16, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12894, file: !2001, line: 106, column: 24)
!12898 = !DILocation(line: 111, column: 18, scope: !12897)
!12899 = !DILocation(line: 112, column: 2, scope: !12897)
!12900 = !DILocation(line: 114, column: 20, scope: !12884)
!12901 = !DILocation(line: 114, column: 30, scope: !12884)
!12902 = !DILocation(line: 114, column: 28, scope: !12884)
!12903 = !DILocation(line: 114, column: 2, scope: !12884)
!12904 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2001, file: !2001, line: 154, type: !12905, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !12907)
!12905 = !DISubroutineType(types: !12906)
!12906 = !{null, !997, !153}
!12907 = !{!12908, !12909, !12910, !12911, !12912, !12913, !12914, !12919, !12920}
!12908 = !DILocalVariable(name: "ticks", arg: 1, scope: !12904, file: !2001, line: 154, type: !997)
!12909 = !DILocalVariable(name: "idle", arg: 2, scope: !12904, file: !2001, line: 154, type: !153)
!12910 = !DILocalVariable(name: "delay", scope: !12904, file: !2001, line: 169, type: !208)
!12911 = !DILocalVariable(name: "val1", scope: !12904, file: !2001, line: 170, type: !208)
!12912 = !DILocalVariable(name: "val2", scope: !12904, file: !2001, line: 170, type: !208)
!12913 = !DILocalVariable(name: "last_load_", scope: !12904, file: !2001, line: 171, type: !208)
!12914 = !DILocalVariable(name: "key", scope: !12904, file: !2001, line: 176, type: !12915)
!12915 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !651, line: 106, baseType: !12916)
!12916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !651, line: 32, size: 32, elements: !12917)
!12917 = !{!12918}
!12918 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12916, file: !651, line: 33, baseType: !125, size: 32)
!12919 = !DILocalVariable(name: "pending", scope: !12904, file: !2001, line: 178, type: !208)
!12920 = !DILocalVariable(name: "unannounced", scope: !12904, file: !2001, line: 185, type: !208)
!12921 = !DILocation(line: 0, scope: !12904)
!12922 = !DILocation(line: 162, column: 49, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12904, file: !2001, line: 162, column: 6)
!12924 = !DILocation(line: 163, column: 17, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12923, file: !2001, line: 162, column: 78)
!12926 = !DILocation(line: 164, column: 13, scope: !12925)
!12927 = !DILocation(line: 165, column: 3, scope: !12925)
!12928 = !DILocation(line: 171, column: 24, scope: !12904)
!12929 = !DILocation(line: 173, column: 10, scope: !12904)
!12930 = !DILocation(line: 174, column: 10, scope: !12904)
!12931 = !DILocalVariable(name: "l", arg: 1, scope: !12932, file: !651, line: 136, type: !12935)
!12932 = distinct !DISubprogram(name: "k_spin_lock", scope: !651, file: !651, line: 136, type: !12933, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !12936)
!12933 = !DISubroutineType(types: !12934)
!12934 = !{!12915, !12935}
!12935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!12936 = !{!12931, !12937}
!12937 = !DILocalVariable(name: "k", scope: !12932, file: !651, line: 139, type: !12915)
!12938 = !DILocation(line: 0, scope: !12932, inlinedAt: !12939)
!12939 = distinct !DILocation(line: 176, column: 25, scope: !12904)
!12940 = !DILocation(line: 55, column: 2, scope: !12941, inlinedAt: !12945)
!12941 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6796, file: !6796, line: 42, type: !6797, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !12942)
!12942 = !{!12943, !12944}
!12943 = !DILocalVariable(name: "key", scope: !12941, file: !6796, line: 44, type: !32)
!12944 = !DILocalVariable(name: "tmp", scope: !12941, file: !6796, line: 53, type: !32)
!12945 = distinct !DILocation(line: 145, column: 10, scope: !12932, inlinedAt: !12939)
!12946 = !{i64 1619123}
!12947 = !DILocation(line: 0, scope: !12941, inlinedAt: !12945)
!12948 = !DILocation(line: 178, column: 21, scope: !12904)
!12949 = !DILocation(line: 180, column: 18, scope: !12904)
!12950 = !DILocation(line: 182, column: 14, scope: !12904)
!12951 = !DILocation(line: 183, column: 15, scope: !12904)
!12952 = !DILocation(line: 185, column: 39, scope: !12904)
!12953 = !DILocation(line: 185, column: 37, scope: !12904)
!12954 = !DILocation(line: 187, column: 27, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12904, file: !2001, line: 187, column: 6)
!12956 = !DILocation(line: 187, column: 6, scope: !12904)
!12957 = !DILocation(line: 202, column: 27, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12955, file: !2001, line: 195, column: 9)
!12959 = !DILocation(line: 202, column: 48, scope: !12958)
!12960 = !DILocation(line: 203, column: 9, scope: !12958)
!12961 = !DILocation(line: 204, column: 11, scope: !12958)
!12962 = !DILocation(line: 205, column: 13, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12958, file: !2001, line: 205, column: 7)
!12964 = !DILocation(line: 205, column: 7, scope: !12958)
!12965 = !DILocation(line: 0, scope: !12955)
!12966 = !DILocation(line: 212, column: 18, scope: !12904)
!12967 = !DILocation(line: 214, column: 28, scope: !12904)
!12968 = !DILocation(line: 214, column: 16, scope: !12904)
!12969 = !DILocation(line: 215, column: 15, scope: !12904)
!12970 = !DILocation(line: 227, column: 11, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12904, file: !2001, line: 227, column: 6)
!12972 = !DILocation(line: 227, column: 6, scope: !12904)
!12973 = !DILocation(line: 228, column: 15, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12971, file: !2001, line: 227, column: 19)
!12975 = !DILocation(line: 228, column: 38, scope: !12974)
!12976 = !DILocation(line: 228, column: 24, scope: !12974)
!12977 = !DILocation(line: 229, column: 2, scope: !12974)
!12978 = !DILocation(line: 230, column: 24, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12971, file: !2001, line: 229, column: 9)
!12980 = !DILocation(line: 230, column: 15, scope: !12979)
!12981 = !DILocation(line: 0, scope: !12971)
!12982 = !DILocalVariable(name: "key", arg: 2, scope: !12983, file: !651, line: 190, type: !12915)
!12983 = distinct !DISubprogram(name: "k_spin_unlock", scope: !651, file: !651, line: 189, type: !12984, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !12986)
!12984 = !DISubroutineType(types: !12985)
!12985 = !{null, !12935, !12915}
!12986 = !{!12987, !12982}
!12987 = !DILocalVariable(name: "l", arg: 1, scope: !12983, file: !651, line: 189, type: !12935)
!12988 = !DILocation(line: 0, scope: !12983, inlinedAt: !12989)
!12989 = distinct !DILocation(line: 232, column: 2, scope: !12904)
!12990 = !DILocalVariable(name: "key", arg: 1, scope: !12991, file: !6796, line: 84, type: !32)
!12991 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6796, file: !6796, line: 84, type: !6807, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !12992)
!12992 = !{!12990}
!12993 = !DILocation(line: 0, scope: !12991, inlinedAt: !12994)
!12994 = distinct !DILocation(line: 215, column: 2, scope: !12983, inlinedAt: !12989)
!12995 = !DILocation(line: 95, column: 2, scope: !12991, inlinedAt: !12994)
!12996 = !{i64 1619940}
!12997 = !DILocation(line: 234, column: 1, scope: !12904)
!12998 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2001, file: !2001, line: 236, type: !9251, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !12999)
!12999 = !{!13000, !13001}
!13000 = !DILocalVariable(name: "key", scope: !12998, file: !2001, line: 242, type: !12915)
!13001 = !DILocalVariable(name: "cyc", scope: !12998, file: !2001, line: 243, type: !208)
!13002 = !DILocation(line: 0, scope: !12932, inlinedAt: !13003)
!13003 = distinct !DILocation(line: 242, column: 25, scope: !12998)
!13004 = !DILocation(line: 55, column: 2, scope: !12941, inlinedAt: !13005)
!13005 = distinct !DILocation(line: 145, column: 10, scope: !12932, inlinedAt: !13003)
!13006 = !DILocation(line: 0, scope: !12941, inlinedAt: !13005)
!13007 = !DILocation(line: 0, scope: !12998)
!13008 = !DILocation(line: 243, column: 17, scope: !12998)
!13009 = !DILocation(line: 243, column: 29, scope: !12998)
!13010 = !DILocation(line: 243, column: 27, scope: !12998)
!13011 = !DILocation(line: 243, column: 43, scope: !12998)
!13012 = !DILocation(line: 243, column: 41, scope: !12998)
!13013 = !DILocation(line: 0, scope: !12983, inlinedAt: !13014)
!13014 = distinct !DILocation(line: 245, column: 2, scope: !12998)
!13015 = !DILocation(line: 0, scope: !12991, inlinedAt: !13016)
!13016 = distinct !DILocation(line: 215, column: 2, scope: !12983, inlinedAt: !13014)
!13017 = !DILocation(line: 95, column: 2, scope: !12991, inlinedAt: !13016)
!13018 = !DILocation(line: 246, column: 13, scope: !12998)
!13019 = !DILocation(line: 246, column: 2, scope: !12998)
!13020 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2001, file: !2001, line: 249, type: !9251, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !13021)
!13021 = !{!13022, !13023}
!13022 = !DILocalVariable(name: "key", scope: !13020, file: !2001, line: 251, type: !12915)
!13023 = !DILocalVariable(name: "ret", scope: !13020, file: !2001, line: 252, type: !208)
!13024 = !DILocation(line: 0, scope: !12932, inlinedAt: !13025)
!13025 = distinct !DILocation(line: 251, column: 25, scope: !13020)
!13026 = !DILocation(line: 55, column: 2, scope: !12941, inlinedAt: !13027)
!13027 = distinct !DILocation(line: 145, column: 10, scope: !12932, inlinedAt: !13025)
!13028 = !DILocation(line: 0, scope: !12941, inlinedAt: !13027)
!13029 = !DILocation(line: 0, scope: !13020)
!13030 = !DILocation(line: 252, column: 17, scope: !13020)
!13031 = !DILocation(line: 252, column: 29, scope: !13020)
!13032 = !DILocation(line: 252, column: 27, scope: !13020)
!13033 = !DILocation(line: 0, scope: !12983, inlinedAt: !13034)
!13034 = distinct !DILocation(line: 254, column: 2, scope: !13020)
!13035 = !DILocation(line: 0, scope: !12991, inlinedAt: !13036)
!13036 = distinct !DILocation(line: 215, column: 2, scope: !12983, inlinedAt: !13034)
!13037 = !DILocation(line: 95, column: 2, scope: !12991, inlinedAt: !13036)
!13038 = !DILocation(line: 255, column: 2, scope: !13020)
!13039 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2001, file: !2001, line: 258, type: !3274, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !652)
!13040 = !DILocation(line: 260, column: 6, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13039, file: !2001, line: 260, column: 6)
!13042 = !DILocation(line: 260, column: 16, scope: !13041)
!13043 = !DILocation(line: 260, column: 6, scope: !13039)
!13044 = !DILocation(line: 261, column: 17, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13041, file: !2001, line: 260, column: 34)
!13046 = !DILocation(line: 262, column: 2, scope: !13045)
!13047 = !DILocation(line: 263, column: 1, scope: !13039)
!13048 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2001, file: !2001, line: 265, type: !3274, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1923, retainedNodes: !652)
!13049 = !DILocation(line: 267, column: 16, scope: !13048)
!13050 = !DILocation(line: 268, column: 1, scope: !13048)
!13051 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !13052, file: !13052, line: 9, type: !13053, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !13076)
!13052 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13053 = !DISubroutineType(types: !13054)
!13054 = !{!125, !13055, !150, !13075}
!13055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13056, size: 32)
!13056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13057)
!13057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1866, line: 60, size: 64, elements: !13058)
!13058 = !{!13059, !13074}
!13059 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !13057, file: !1866, line: 69, baseType: !13060, size: 32)
!13060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13061, size: 32)
!13061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13062)
!13062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1866, line: 50, size: 64, elements: !13063)
!13063 = !{!13064, !13072, !13073}
!13064 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !13062, file: !1866, line: 52, baseType: !13065, size: 32)
!13065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13066, size: 32)
!13066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13067)
!13067 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1877, line: 37, baseType: !13068)
!13068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1877, line: 32, size: 64, elements: !13069)
!13069 = !{!13070, !13071}
!13070 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13068, file: !1877, line: 34, baseType: !208, size: 32)
!13071 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13068, file: !1877, line: 36, baseType: !208, size: 32, offset: 32)
!13072 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !13062, file: !1866, line: 54, baseType: !150, size: 8, offset: 32)
!13073 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13062, file: !1866, line: 56, baseType: !150, size: 8, offset: 40)
!13074 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !13057, file: !1866, line: 71, baseType: !150, size: 8, offset: 32)
!13075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13060, size: 32)
!13076 = !{!13077, !13078, !13079}
!13077 = !DILocalVariable(name: "config", arg: 1, scope: !13051, file: !13052, line: 9, type: !13055)
!13078 = !DILocalVariable(name: "id", arg: 2, scope: !13051, file: !13052, line: 9, type: !150)
!13079 = !DILocalVariable(name: "state", arg: 3, scope: !13051, file: !13052, line: 10, type: !13075)
!13080 = !DILocation(line: 0, scope: !13051)
!13081 = !DILocation(line: 12, column: 20, scope: !13051)
!13082 = !DILocation(line: 13, column: 27, scope: !13051)
!13083 = !DILocation(line: 13, column: 42, scope: !13051)
!13084 = !DILocation(line: 13, column: 19, scope: !13051)
!13085 = !DILocation(line: 13, column: 16, scope: !13051)
!13086 = !DILocation(line: 13, column: 2, scope: !13051)
!13087 = distinct !{!13087, !13086, !13088}
!13088 = !DILocation(line: 19, column: 2, scope: !13051)
!13089 = !DILocation(line: 14, column: 23, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13091, file: !13052, line: 14, column: 7)
!13091 = distinct !DILexicalBlock(scope: !13051, file: !13052, line: 13, column: 54)
!13092 = !DILocation(line: 14, column: 10, scope: !13090)
!13093 = !DILocation(line: 18, column: 11, scope: !13091)
!13094 = !DILocation(line: 14, column: 7, scope: !13091)
!13095 = !DILocation(line: 22, column: 1, scope: !13051)
!13096 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2117, file: !2117, line: 193, type: !13097, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2036, retainedNodes: !13106)
!13097 = !DISubroutineType(types: !13098)
!13098 = !{!125, !13099, !150, !22}
!13099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13100, size: 32)
!13100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13101)
!13101 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1877, line: 37, baseType: !13102)
!13102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1877, line: 32, size: 64, elements: !13103)
!13103 = !{!13104, !13105}
!13104 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13102, file: !1877, line: 34, baseType: !208, size: 32)
!13105 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13102, file: !1877, line: 36, baseType: !208, size: 32, offset: 32)
!13106 = !{!13107, !13108, !13109, !13110, !13111, !13112, !13113, !13114, !13116}
!13107 = !DILocalVariable(name: "pins", arg: 1, scope: !13096, file: !2117, line: 193, type: !13099)
!13108 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !13096, file: !2117, line: 193, type: !150)
!13109 = !DILocalVariable(name: "reg", arg: 3, scope: !13096, file: !2117, line: 194, type: !22)
!13110 = !DILocalVariable(name: "pin", scope: !13096, file: !2117, line: 196, type: !208)
!13111 = !DILocalVariable(name: "mux", scope: !13096, file: !2117, line: 196, type: !208)
!13112 = !DILocalVariable(name: "pin_cgf", scope: !13096, file: !2117, line: 197, type: !208)
!13113 = !DILocalVariable(name: "ret", scope: !13096, file: !2117, line: 198, type: !125)
!13114 = !DILocalVariable(name: "i", scope: !13115, file: !2117, line: 209, type: !150)
!13115 = distinct !DILexicalBlock(scope: !13096, file: !2117, line: 209, column: 2)
!13116 = !DILocalVariable(name: "gpio_out", scope: !13117, file: !2117, line: 239, type: !208)
!13117 = distinct !DILexicalBlock(scope: !13118, file: !2117, line: 238, column: 55)
!13118 = distinct !DILexicalBlock(scope: !13119, file: !2117, line: 238, column: 14)
!13119 = distinct !DILexicalBlock(scope: !13120, file: !2117, line: 236, column: 14)
!13120 = distinct !DILexicalBlock(scope: !13121, file: !2117, line: 234, column: 7)
!13121 = distinct !DILexicalBlock(scope: !13122, file: !2117, line: 209, column: 41)
!13122 = distinct !DILexicalBlock(scope: !13115, file: !2117, line: 209, column: 2)
!13123 = !DILocation(line: 0, scope: !13096)
!13124 = !DILocation(line: 0, scope: !13115)
!13125 = !DILocation(line: 209, column: 25, scope: !13122)
!13126 = !DILocation(line: 209, column: 2, scope: !13115)
!13127 = distinct !{!13127, !13126, !13128}
!13128 = !DILocation(line: 259, column: 2, scope: !13115)
!13129 = !DILocation(line: 210, column: 17, scope: !13121)
!13130 = !DILocation(line: 234, column: 7, scope: !13120)
!13131 = !DILocation(line: 234, column: 33, scope: !13120)
!13132 = !DILocation(line: 234, column: 7, scope: !13121)
!13133 = !DILocation(line: 235, column: 22, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13120, file: !2117, line: 234, column: 49)
!13135 = !DILocation(line: 235, column: 29, scope: !13134)
!13136 = !DILocation(line: 236, column: 3, scope: !13134)
!13137 = !DILocation(line: 236, column: 14, scope: !13120)
!13138 = !DILocation(line: 239, column: 32, scope: !13117)
!13139 = !DILocation(line: 0, scope: !13117)
!13140 = !DILocation(line: 241, column: 8, scope: !13117)
!13141 = !DILocation(line: 246, column: 3, scope: !13117)
!13142 = !DILocation(line: 252, column: 9, scope: !13121)
!13143 = !DILocation(line: 255, column: 9, scope: !13121)
!13144 = !DILocation(line: 256, column: 11, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13121, file: !2117, line: 256, column: 7)
!13146 = !DILocation(line: 209, column: 37, scope: !13122)
!13147 = !DILocation(line: 256, column: 7, scope: !13121)
!13148 = !DILocation(line: 262, column: 1, scope: !13096)
!13149 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2117, file: !2117, line: 176, type: !13150, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2036, retainedNodes: !13152)
!13150 = !DISubroutineType(types: !13151)
!13151 = !{!125, !208, !208, !208}
!13152 = !{!13153, !13154, !13155, !13156}
!13153 = !DILocalVariable(name: "pin", arg: 1, scope: !13149, file: !2117, line: 176, type: !208)
!13154 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !13149, file: !2117, line: 176, type: !208)
!13155 = !DILocalVariable(name: "pin_func", arg: 3, scope: !13149, file: !2117, line: 176, type: !208)
!13156 = !DILocalVariable(name: "port_device", scope: !13149, file: !2117, line: 178, type: !2047)
!13157 = !DILocation(line: 0, scope: !13149)
!13158 = !DILocation(line: 180, column: 22, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13149, file: !2117, line: 180, column: 6)
!13160 = !DILocation(line: 180, column: 6, scope: !13149)
!13161 = !DILocation(line: 180, column: 6, scope: !13159)
!13162 = !DILocation(line: 184, column: 16, scope: !13149)
!13163 = !DILocation(line: 186, column: 19, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13149, file: !2117, line: 186, column: 6)
!13165 = !DILocation(line: 186, column: 28, scope: !13164)
!13166 = !DILocation(line: 186, column: 33, scope: !13164)
!13167 = !DILocation(line: 186, column: 6, scope: !13149)
!13168 = !DILocation(line: 190, column: 43, scope: !13149)
!13169 = !DILocation(line: 190, column: 9, scope: !13149)
!13170 = !DILocation(line: 190, column: 2, scope: !13149)
!13171 = !DILocation(line: 191, column: 1, scope: !13149)
!13172 = distinct !DISubprogram(name: "device_is_ready", scope: !4179, file: !4179, line: 47, type: !13173, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2036, retainedNodes: !13175)
!13173 = !DISubroutineType(types: !13174)
!13174 = !{!153, !2047}
!13175 = !{!13176}
!13176 = !DILocalVariable(name: "dev", arg: 1, scope: !13172, file: !4179, line: 47, type: !2047)
!13177 = !DILocation(line: 0, scope: !13172)
!13178 = !DILocation(line: 55, column: 2, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13172, file: !4179, line: 55, column: 2)
!13180 = !{i64 2148853132}
!13181 = !DILocation(line: 56, column: 9, scope: !13172)
!13182 = !DILocation(line: 56, column: 2, scope: !13172)
!13183 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !13173, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2036, retainedNodes: !13184)
!13184 = !{!13185}
!13185 = !DILocalVariable(name: "dev", arg: 1, scope: !13183, file: !137, line: 730, type: !2047)
!13186 = !DILocation(line: 0, scope: !13183)
!13187 = !DILocation(line: 732, column: 9, scope: !13183)
!13188 = !DILocation(line: 732, column: 2, scope: !13183)
!13189 = distinct !DISubprogram(name: "SystemInit", scope: !2147, file: !2147, line: 160, type: !3274, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !652)
!13190 = !DILocation(line: 170, column: 1, scope: !13189)
!13191 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2147, file: !2147, line: 210, type: !3274, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2123, retainedNodes: !13192)
!13192 = !{!13193, !13194, !13195, !13196, !13197}
!13193 = !DILocalVariable(name: "tmp", scope: !13191, file: !2147, line: 212, type: !208)
!13194 = !DILocalVariable(name: "pllmul", scope: !13191, file: !2147, line: 212, type: !208)
!13195 = !DILocalVariable(name: "plldiv", scope: !13191, file: !2147, line: 212, type: !208)
!13196 = !DILocalVariable(name: "pllsource", scope: !13191, file: !2147, line: 212, type: !208)
!13197 = !DILocalVariable(name: "msirange", scope: !13191, file: !2147, line: 212, type: !208)
!13198 = !DILocation(line: 0, scope: !13191)
!13199 = !DILocation(line: 215, column: 14, scope: !13191)
!13200 = !DILocation(line: 217, column: 3, scope: !13191)
!13201 = !DILocation(line: 220, column: 24, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13191, file: !2147, line: 218, column: 3)
!13203 = !DILocation(line: 220, column: 52, scope: !13202)
!13204 = !DILocation(line: 221, column: 32, scope: !13202)
!13205 = !DILocation(line: 222, column: 7, scope: !13202)
!13206 = !DILocation(line: 228, column: 7, scope: !13202)
!13207 = !DILocation(line: 231, column: 21, scope: !13202)
!13208 = !DILocation(line: 232, column: 21, scope: !13202)
!13209 = !DILocation(line: 233, column: 36, scope: !13202)
!13210 = !DILocation(line: 233, column: 16, scope: !13202)
!13211 = !DILocation(line: 234, column: 24, scope: !13202)
!13212 = !DILocation(line: 234, column: 31, scope: !13202)
!13213 = !DILocation(line: 236, column: 24, scope: !13202)
!13214 = !DILocation(line: 236, column: 29, scope: !13202)
!13215 = !DILocation(line: 238, column: 21, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13202, file: !2147, line: 238, column: 11)
!13217 = !DILocation(line: 238, column: 11, scope: !13202)
!13218 = !DILocation(line: 241, column: 41, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13216, file: !2147, line: 239, column: 7)
!13220 = !DILocation(line: 241, column: 51, scope: !13219)
!13221 = !DILocation(line: 242, column: 7, scope: !13219)
!13222 = !DILocation(line: 246, column: 41, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13216, file: !2147, line: 244, column: 7)
!13224 = !DILocation(line: 246, column: 51, scope: !13223)
!13225 = !DILocation(line: 0, scope: !13202)
!13226 = !DILocation(line: 256, column: 30, scope: !13191)
!13227 = !DILocation(line: 256, column: 52, scope: !13191)
!13228 = !DILocation(line: 256, column: 9, scope: !13191)
!13229 = !DILocation(line: 258, column: 19, scope: !13191)
!13230 = !DILocation(line: 259, column: 1, scope: !13191)
!13231 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !13232, file: !13232, line: 228, type: !13233, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13236)
!13232 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13233 = !DISubroutineType(types: !13234)
!13234 = !{!13235}
!13235 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3118, line: 45, baseType: !3117)
!13236 = !{!13237, !13238}
!13237 = !DILocalVariable(name: "tickstart", scope: !13231, file: !13232, line: 230, type: !208)
!13238 = !DILocalVariable(name: "status", scope: !13231, file: !13232, line: 231, type: !13235)
!13239 = !DILocation(line: 234, column: 3, scope: !13231)
!13240 = !DILocation(line: 238, column: 3, scope: !13231)
!13241 = !DILocation(line: 241, column: 15, scope: !13231)
!13242 = !DILocation(line: 0, scope: !13231)
!13243 = !DILocation(line: 244, column: 3, scope: !13231)
!13244 = !DILocation(line: 244, column: 10, scope: !13231)
!13245 = !DILocation(line: 244, column: 43, scope: !13231)
!13246 = !DILocation(line: 246, column: 10, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13248, file: !13232, line: 246, column: 9)
!13248 = distinct !DILexicalBlock(scope: !13231, file: !13232, line: 245, column: 3)
!13249 = !DILocation(line: 246, column: 24, scope: !13247)
!13250 = !DILocation(line: 246, column: 37, scope: !13247)
!13251 = !DILocation(line: 246, column: 9, scope: !13248)
!13252 = distinct !{!13252, !13243, !13253}
!13253 = !DILocation(line: 250, column: 3, scope: !13231)
!13254 = !DILocation(line: 253, column: 3, scope: !13231)
!13255 = !DILocation(line: 256, column: 3, scope: !13231)
!13256 = !DILocation(line: 256, column: 10, scope: !13231)
!13257 = !DILocation(line: 256, column: 44, scope: !13231)
!13258 = !DILocation(line: 258, column: 10, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13260, file: !13232, line: 258, column: 9)
!13260 = distinct !DILexicalBlock(scope: !13231, file: !13232, line: 257, column: 3)
!13261 = !DILocation(line: 258, column: 24, scope: !13259)
!13262 = !DILocation(line: 258, column: 37, scope: !13259)
!13263 = !DILocation(line: 258, column: 9, scope: !13260)
!13264 = distinct !{!13264, !13255, !13265}
!13265 = !DILocation(line: 262, column: 3, scope: !13231)
!13266 = !DILocation(line: 265, column: 19, scope: !13231)
!13267 = !DILocation(line: 268, column: 25, scope: !13231)
!13268 = !DILocation(line: 268, column: 12, scope: !13231)
!13269 = !DILocation(line: 269, column: 13, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13231, file: !13232, line: 269, column: 6)
!13271 = !DILocation(line: 269, column: 6, scope: !13231)
!13272 = !DILocation(line: 275, column: 3, scope: !13231)
!13273 = !DILocation(line: 277, column: 3, scope: !13231)
!13274 = !DILocation(line: 280, column: 15, scope: !13231)
!13275 = !DILocation(line: 283, column: 3, scope: !13231)
!13276 = !DILocation(line: 283, column: 10, scope: !13231)
!13277 = !DILocation(line: 283, column: 43, scope: !13231)
!13278 = !DILocation(line: 285, column: 10, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13280, file: !13232, line: 285, column: 9)
!13280 = distinct !DILexicalBlock(scope: !13231, file: !13232, line: 284, column: 3)
!13281 = !DILocation(line: 285, column: 24, scope: !13279)
!13282 = !DILocation(line: 285, column: 37, scope: !13279)
!13283 = !DILocation(line: 285, column: 9, scope: !13280)
!13284 = distinct !{!13284, !13275, !13285}
!13285 = !DILocation(line: 289, column: 3, scope: !13231)
!13286 = !DILocation(line: 292, column: 3, scope: !13231)
!13287 = !DILocation(line: 295, column: 3, scope: !13231)
!13288 = !DILocation(line: 299, column: 3, scope: !13231)
!13289 = !DILocation(line: 305, column: 3, scope: !13231)
!13290 = !DILocation(line: 307, column: 3, scope: !13231)
!13291 = !DILocation(line: 308, column: 1, scope: !13231)
!13292 = !DISubprogram(name: "HAL_GetTick", scope: !13293, file: !13293, line: 945, type: !9251, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !652)
!13293 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13294 = !DISubprogram(name: "HAL_InitTick", scope: !13293, file: !13293, line: 932, type: !13295, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !652)
!13295 = !DISubroutineType(types: !13296)
!13296 = !{!13235, !208}
!13297 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !13232, file: !13232, line: 324, type: !13298, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13322)
!13298 = !DISubroutineType(types: !13299)
!13299 = !{!13235, !13300}
!13300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13301, size: 32)
!13301 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13302, line: 283, baseType: !13303)
!13302 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13302, line: 252, size: 416, elements: !13304)
!13304 = !{!13305, !13306, !13307, !13308, !13309, !13310, !13311, !13312, !13313, !13314}
!13305 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13303, file: !13302, line: 254, baseType: !208, size: 32)
!13306 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13303, file: !13302, line: 257, baseType: !208, size: 32, offset: 32)
!13307 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13303, file: !13302, line: 260, baseType: !208, size: 32, offset: 64)
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13303, file: !13302, line: 263, baseType: !208, size: 32, offset: 96)
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13303, file: !13302, line: 266, baseType: !208, size: 32, offset: 128)
!13310 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13303, file: !13302, line: 269, baseType: !208, size: 32, offset: 160)
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !13303, file: !13302, line: 272, baseType: !208, size: 32, offset: 192)
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !13303, file: !13302, line: 275, baseType: !208, size: 32, offset: 224)
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !13303, file: !13302, line: 278, baseType: !208, size: 32, offset: 256)
!13314 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13303, file: !13302, line: 281, baseType: !13315, size: 128, offset: 288)
!13315 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !13302, line: 247, baseType: !13316)
!13316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13302, line: 234, size: 128, elements: !13317)
!13317 = !{!13318, !13319, !13320, !13321}
!13318 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13316, file: !13302, line: 236, baseType: !208, size: 32)
!13319 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13316, file: !13302, line: 239, baseType: !208, size: 32, offset: 32)
!13320 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !13316, file: !13302, line: 242, baseType: !208, size: 32, offset: 64)
!13321 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !13316, file: !13302, line: 245, baseType: !208, size: 32, offset: 96)
!13322 = !{!13323, !13324, !13325, !13326, !13327, !13328, !13332}
!13323 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13297, file: !13232, line: 324, type: !13300)
!13324 = !DILocalVariable(name: "tickstart", scope: !13297, file: !13232, line: 326, type: !208)
!13325 = !DILocalVariable(name: "status", scope: !13297, file: !13232, line: 327, type: !13235)
!13326 = !DILocalVariable(name: "sysclk_source", scope: !13297, file: !13232, line: 328, type: !208)
!13327 = !DILocalVariable(name: "pll_config", scope: !13297, file: !13232, line: 328, type: !208)
!13328 = !DILocalVariable(name: "pwrclkchanged", scope: !13329, file: !13232, line: 613, type: !13331)
!13329 = distinct !DILexicalBlock(scope: !13330, file: !13232, line: 612, column: 3)
!13330 = distinct !DILexicalBlock(scope: !13297, file: !13232, line: 611, column: 6)
!13331 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1054, line: 181, baseType: !3128)
!13332 = !DILocalVariable(name: "tmpreg", scope: !13333, file: !13232, line: 622, type: !423)
!13333 = distinct !DILexicalBlock(scope: !13334, file: !13232, line: 622, column: 7)
!13334 = distinct !DILexicalBlock(scope: !13335, file: !13232, line: 621, column: 5)
!13335 = distinct !DILexicalBlock(scope: !13329, file: !13232, line: 620, column: 8)
!13336 = !DILocation(line: 0, scope: !13297)
!13337 = !DILocation(line: 331, column: 24, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13297, file: !13232, line: 331, column: 6)
!13339 = !DILocation(line: 331, column: 6, scope: !13297)
!13340 = !DILocation(line: 338, column: 19, scope: !13297)
!13341 = !DILocation(line: 339, column: 16, scope: !13297)
!13342 = !DILocation(line: 342, column: 27, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13297, file: !13232, line: 342, column: 6)
!13344 = !DILocation(line: 342, column: 43, scope: !13343)
!13345 = !DILocation(line: 342, column: 69, scope: !13343)
!13346 = !DILocation(line: 342, column: 6, scope: !13297)
!13347 = !DILocation(line: 348, column: 23, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13349, file: !13232, line: 348, column: 8)
!13349 = distinct !DILexicalBlock(scope: !13343, file: !13232, line: 343, column: 3)
!13350 = !DILocation(line: 349, column: 8, scope: !13348)
!13351 = !DILocation(line: 349, column: 27, scope: !13348)
!13352 = !DILocation(line: 349, column: 62, scope: !13348)
!13353 = !DILocation(line: 351, column: 11, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13355, file: !13232, line: 351, column: 10)
!13355 = distinct !DILexicalBlock(scope: !13348, file: !13232, line: 350, column: 5)
!13356 = !DILocation(line: 351, column: 47, scope: !13354)
!13357 = !DILocation(line: 351, column: 54, scope: !13354)
!13358 = !DILocation(line: 351, column: 77, scope: !13354)
!13359 = !DILocation(line: 351, column: 86, scope: !13354)
!13360 = !DILocation(line: 351, column: 10, scope: !13355)
!13361 = !DILocation(line: 359, column: 7, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13363, file: !13232, line: 359, column: 7)
!13363 = distinct !DILexicalBlock(scope: !13364, file: !13232, line: 359, column: 7)
!13364 = distinct !DILexicalBlock(scope: !13348, file: !13232, line: 357, column: 5)
!13365 = !DILocation(line: 359, column: 7, scope: !13363)
!13366 = !DILocation(line: 359, column: 7, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13362, file: !13232, line: 359, column: 7)
!13368 = !DILocation(line: 359, column: 7, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13370, file: !13232, line: 359, column: 7)
!13370 = distinct !DILexicalBlock(scope: !13362, file: !13232, line: 359, column: 7)
!13371 = !DILocation(line: 359, column: 7, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !13232, line: 359, column: 7)
!13373 = distinct !DILexicalBlock(scope: !13370, file: !13232, line: 359, column: 7)
!13374 = !DILocation(line: 359, column: 7, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13373, file: !13232, line: 359, column: 7)
!13376 = !DILocation(line: 0, scope: !13362)
!13377 = !DILocation(line: 362, column: 29, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13364, file: !13232, line: 362, column: 10)
!13379 = !DILocation(line: 362, column: 38, scope: !13378)
!13380 = !DILocation(line: 0, scope: !13378)
!13381 = !DILocation(line: 362, column: 10, scope: !13364)
!13382 = !DILocation(line: 368, column: 15, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13378, file: !13232, line: 363, column: 7)
!13384 = !DILocation(line: 368, column: 51, scope: !13383)
!13385 = !DILocation(line: 368, column: 9, scope: !13383)
!13386 = !DILocation(line: 370, column: 15, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13388, file: !13232, line: 370, column: 14)
!13388 = distinct !DILexicalBlock(scope: !13383, file: !13232, line: 369, column: 9)
!13389 = !DILocation(line: 370, column: 29, scope: !13387)
!13390 = !DILocation(line: 370, column: 43, scope: !13387)
!13391 = !DILocation(line: 370, column: 14, scope: !13388)
!13392 = distinct !{!13392, !13385, !13393}
!13393 = !DILocation(line: 374, column: 9, scope: !13383)
!13394 = !DILocation(line: 382, column: 15, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13378, file: !13232, line: 377, column: 7)
!13396 = !DILocation(line: 382, column: 51, scope: !13395)
!13397 = !DILocation(line: 382, column: 9, scope: !13395)
!13398 = !DILocation(line: 384, column: 16, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13400, file: !13232, line: 384, column: 15)
!13400 = distinct !DILexicalBlock(scope: !13395, file: !13232, line: 383, column: 9)
!13401 = !DILocation(line: 384, column: 30, scope: !13399)
!13402 = !DILocation(line: 384, column: 44, scope: !13399)
!13403 = !DILocation(line: 384, column: 15, scope: !13400)
!13404 = distinct !{!13404, !13397, !13405}
!13405 = !DILocation(line: 388, column: 9, scope: !13395)
!13406 = !DILocation(line: 393, column: 27, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13297, file: !13232, line: 393, column: 6)
!13408 = !DILocation(line: 393, column: 43, scope: !13407)
!13409 = !DILocation(line: 393, column: 69, scope: !13407)
!13410 = !DILocation(line: 393, column: 6, scope: !13297)
!13411 = !DILocation(line: 400, column: 23, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13413, file: !13232, line: 400, column: 8)
!13413 = distinct !DILexicalBlock(scope: !13407, file: !13232, line: 394, column: 3)
!13414 = !DILocation(line: 401, column: 8, scope: !13412)
!13415 = !DILocation(line: 401, column: 27, scope: !13412)
!13416 = !DILocation(line: 401, column: 62, scope: !13412)
!13417 = !DILocation(line: 404, column: 11, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13419, file: !13232, line: 404, column: 10)
!13419 = distinct !DILexicalBlock(scope: !13412, file: !13232, line: 402, column: 5)
!13420 = !DILocation(line: 404, column: 47, scope: !13418)
!13421 = !DILocation(line: 404, column: 54, scope: !13418)
!13422 = !DILocation(line: 404, column: 77, scope: !13418)
!13423 = !DILocation(line: 404, column: 86, scope: !13418)
!13424 = !DILocation(line: 404, column: 10, scope: !13419)
!13425 = !DILocation(line: 418, column: 29, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13427, file: !13232, line: 418, column: 10)
!13427 = distinct !DILexicalBlock(scope: !13412, file: !13232, line: 416, column: 5)
!13428 = !DILocation(line: 418, column: 38, scope: !13426)
!13429 = !DILocation(line: 418, column: 10, scope: !13427)
!13430 = !DILocation(line: 421, column: 9, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13426, file: !13232, line: 419, column: 7)
!13432 = !DILocation(line: 424, column: 21, scope: !13431)
!13433 = !DILocation(line: 427, column: 9, scope: !13431)
!13434 = !DILocation(line: 427, column: 15, scope: !13431)
!13435 = !DILocation(line: 427, column: 51, scope: !13431)
!13436 = !DILocation(line: 429, column: 15, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13438, file: !13232, line: 429, column: 14)
!13438 = distinct !DILexicalBlock(scope: !13431, file: !13232, line: 428, column: 9)
!13439 = !DILocation(line: 429, column: 29, scope: !13437)
!13440 = !DILocation(line: 429, column: 43, scope: !13437)
!13441 = !DILocation(line: 429, column: 14, scope: !13438)
!13442 = distinct !{!13442, !13433, !13443}
!13443 = !DILocation(line: 433, column: 9, scope: !13431)
!13444 = !DILocation(line: 441, column: 9, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13426, file: !13232, line: 439, column: 7)
!13446 = !DILocation(line: 444, column: 21, scope: !13445)
!13447 = !DILocation(line: 447, column: 9, scope: !13445)
!13448 = !DILocation(line: 447, column: 15, scope: !13445)
!13449 = !DILocation(line: 447, column: 51, scope: !13445)
!13450 = !DILocation(line: 449, column: 15, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13452, file: !13232, line: 449, column: 14)
!13452 = distinct !DILexicalBlock(scope: !13445, file: !13232, line: 448, column: 9)
!13453 = !DILocation(line: 449, column: 29, scope: !13451)
!13454 = !DILocation(line: 449, column: 43, scope: !13451)
!13455 = !DILocation(line: 449, column: 14, scope: !13452)
!13456 = distinct !{!13456, !13447, !13457}
!13457 = !DILocation(line: 453, column: 9, scope: !13445)
!13458 = !DILocation(line: 0, scope: !13412)
!13459 = !DILocation(line: 458, column: 27, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13297, file: !13232, line: 458, column: 6)
!13461 = !DILocation(line: 458, column: 43, scope: !13460)
!13462 = !DILocation(line: 458, column: 69, scope: !13460)
!13463 = !DILocation(line: 458, column: 6, scope: !13297)
!13464 = !DILocation(line: 461, column: 22, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13466, file: !13232, line: 461, column: 8)
!13466 = distinct !DILexicalBlock(scope: !13460, file: !13232, line: 459, column: 3)
!13467 = !DILocation(line: 461, column: 8, scope: !13466)
!13468 = !DILocation(line: 463, column: 11, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13470, file: !13232, line: 463, column: 10)
!13470 = distinct !DILexicalBlock(scope: !13465, file: !13232, line: 462, column: 5)
!13471 = !DILocation(line: 463, column: 47, scope: !13469)
!13472 = !DILocation(line: 463, column: 54, scope: !13469)
!13473 = !DILocation(line: 463, column: 77, scope: !13469)
!13474 = !DILocation(line: 463, column: 86, scope: !13469)
!13475 = !DILocation(line: 463, column: 10, scope: !13470)
!13476 = !DILocation(line: 477, column: 31, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13478, file: !13232, line: 477, column: 12)
!13478 = distinct !DILexicalBlock(scope: !13469, file: !13232, line: 469, column: 7)
!13479 = !DILocation(line: 477, column: 47, scope: !13477)
!13480 = !DILocation(line: 477, column: 45, scope: !13477)
!13481 = !DILocation(line: 477, column: 12, scope: !13478)
!13482 = !DILocation(line: 480, column: 14, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13484, file: !13232, line: 480, column: 14)
!13484 = distinct !DILexicalBlock(scope: !13477, file: !13232, line: 478, column: 9)
!13485 = !DILocation(line: 480, column: 80, scope: !13483)
!13486 = !DILocation(line: 480, column: 14, scope: !13484)
!13487 = !DILocation(line: 486, column: 11, scope: !13484)
!13488 = !DILocation(line: 488, column: 11, scope: !13484)
!13489 = !DILocation(line: 489, column: 9, scope: !13484)
!13490 = !DILocation(line: 494, column: 11, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13477, file: !13232, line: 491, column: 9)
!13492 = !DILocation(line: 496, column: 11, scope: !13491)
!13493 = !DILocation(line: 499, column: 65, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13491, file: !13232, line: 499, column: 14)
!13495 = !DILocation(line: 499, column: 14, scope: !13494)
!13496 = !DILocation(line: 499, column: 80, scope: !13494)
!13497 = !DILocation(line: 499, column: 14, scope: !13491)
!13498 = !DILocation(line: 506, column: 67, scope: !13478)
!13499 = !DILocation(line: 506, column: 81, scope: !13478)
!13500 = !DILocation(line: 506, column: 36, scope: !13478)
!13501 = !DILocation(line: 507, column: 52, scope: !13478)
!13502 = !DILocation(line: 507, column: 74, scope: !13478)
!13503 = !DILocation(line: 507, column: 31, scope: !13478)
!13504 = !DILocation(line: 507, column: 28, scope: !13478)
!13505 = !DILocation(line: 506, column: 25, scope: !13478)
!13506 = !DILocation(line: 510, column: 31, scope: !13478)
!13507 = !DILocation(line: 510, column: 18, scope: !13478)
!13508 = !DILocation(line: 511, column: 19, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13478, file: !13232, line: 511, column: 12)
!13510 = !DILocation(line: 511, column: 12, scope: !13478)
!13511 = !DILocation(line: 523, column: 29, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13513, file: !13232, line: 523, column: 10)
!13513 = distinct !DILexicalBlock(scope: !13465, file: !13232, line: 518, column: 5)
!13514 = !DILocation(line: 523, column: 38, scope: !13512)
!13515 = !DILocation(line: 523, column: 10, scope: !13513)
!13516 = !DILocation(line: 526, column: 9, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13512, file: !13232, line: 524, column: 7)
!13518 = !DILocation(line: 529, column: 21, scope: !13517)
!13519 = !DILocation(line: 532, column: 9, scope: !13517)
!13520 = !DILocation(line: 532, column: 15, scope: !13517)
!13521 = !DILocation(line: 532, column: 51, scope: !13517)
!13522 = !DILocation(line: 534, column: 15, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13524, file: !13232, line: 534, column: 14)
!13524 = distinct !DILexicalBlock(scope: !13517, file: !13232, line: 533, column: 9)
!13525 = !DILocation(line: 534, column: 29, scope: !13523)
!13526 = !DILocation(line: 534, column: 42, scope: !13523)
!13527 = !DILocation(line: 534, column: 14, scope: !13524)
!13528 = distinct !{!13528, !13519, !13529}
!13529 = !DILocation(line: 538, column: 9, scope: !13517)
!13530 = !DILocation(line: 544, column: 9, scope: !13517)
!13531 = !DILocation(line: 546, column: 9, scope: !13517)
!13532 = !DILocation(line: 548, column: 7, scope: !13517)
!13533 = !DILocation(line: 552, column: 9, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13512, file: !13232, line: 550, column: 7)
!13535 = !DILocation(line: 555, column: 21, scope: !13534)
!13536 = !DILocation(line: 558, column: 9, scope: !13534)
!13537 = !DILocation(line: 558, column: 15, scope: !13534)
!13538 = !DILocation(line: 558, column: 51, scope: !13534)
!13539 = !DILocation(line: 560, column: 15, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13541, file: !13232, line: 560, column: 14)
!13541 = distinct !DILexicalBlock(scope: !13534, file: !13232, line: 559, column: 9)
!13542 = !DILocation(line: 560, column: 29, scope: !13540)
!13543 = !DILocation(line: 560, column: 42, scope: !13540)
!13544 = !DILocation(line: 560, column: 14, scope: !13541)
!13545 = distinct !{!13545, !13536, !13546}
!13546 = !DILocation(line: 564, column: 9, scope: !13534)
!13547 = !DILocation(line: 569, column: 27, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13297, file: !13232, line: 569, column: 6)
!13549 = !DILocation(line: 569, column: 43, scope: !13548)
!13550 = !DILocation(line: 569, column: 69, scope: !13548)
!13551 = !DILocation(line: 569, column: 6, scope: !13297)
!13552 = !DILocation(line: 575, column: 27, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13554, file: !13232, line: 575, column: 8)
!13554 = distinct !DILexicalBlock(scope: !13548, file: !13232, line: 570, column: 3)
!13555 = !DILocation(line: 575, column: 36, scope: !13553)
!13556 = !DILocation(line: 575, column: 8, scope: !13554)
!13557 = !DILocation(line: 578, column: 7, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13553, file: !13232, line: 576, column: 5)
!13559 = !DILocation(line: 581, column: 19, scope: !13558)
!13560 = !DILocation(line: 584, column: 7, scope: !13558)
!13561 = !DILocation(line: 584, column: 13, scope: !13558)
!13562 = !DILocation(line: 584, column: 49, scope: !13558)
!13563 = !DILocation(line: 586, column: 13, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13565, file: !13232, line: 586, column: 12)
!13565 = distinct !DILexicalBlock(scope: !13558, file: !13232, line: 585, column: 7)
!13566 = !DILocation(line: 586, column: 27, scope: !13564)
!13567 = !DILocation(line: 586, column: 41, scope: !13564)
!13568 = !DILocation(line: 586, column: 12, scope: !13565)
!13569 = distinct !{!13569, !13560, !13570}
!13570 = !DILocation(line: 590, column: 7, scope: !13558)
!13571 = !DILocation(line: 595, column: 7, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13553, file: !13232, line: 593, column: 5)
!13573 = !DILocation(line: 598, column: 19, scope: !13572)
!13574 = !DILocation(line: 601, column: 7, scope: !13572)
!13575 = !DILocation(line: 601, column: 13, scope: !13572)
!13576 = !DILocation(line: 601, column: 49, scope: !13572)
!13577 = !DILocation(line: 603, column: 13, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13579, file: !13232, line: 603, column: 12)
!13579 = distinct !DILexicalBlock(scope: !13572, file: !13232, line: 602, column: 7)
!13580 = !DILocation(line: 603, column: 27, scope: !13578)
!13581 = !DILocation(line: 603, column: 41, scope: !13578)
!13582 = !DILocation(line: 603, column: 12, scope: !13579)
!13583 = distinct !{!13583, !13574, !13584}
!13584 = !DILocation(line: 607, column: 7, scope: !13572)
!13585 = !DILocation(line: 611, column: 27, scope: !13330)
!13586 = !DILocation(line: 611, column: 43, scope: !13330)
!13587 = !DILocation(line: 611, column: 69, scope: !13330)
!13588 = !DILocation(line: 611, column: 6, scope: !13297)
!13589 = !DILocation(line: 0, scope: !13329)
!13590 = !DILocation(line: 620, column: 8, scope: !13335)
!13591 = !DILocation(line: 620, column: 8, scope: !13329)
!13592 = !DILocation(line: 622, column: 7, scope: !13333)
!13593 = !DILocation(line: 622, column: 7, scope: !13334)
!13594 = !DILocation(line: 624, column: 5, scope: !13334)
!13595 = !DILocation(line: 626, column: 8, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13329, file: !13232, line: 626, column: 8)
!13597 = !DILocation(line: 626, column: 8, scope: !13329)
!13598 = !DILocation(line: 629, column: 7, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !13596, file: !13232, line: 627, column: 5)
!13600 = !DILocation(line: 632, column: 19, scope: !13599)
!13601 = !DILocation(line: 634, column: 7, scope: !13599)
!13602 = !DILocation(line: 634, column: 13, scope: !13599)
!13603 = !DILocation(line: 636, column: 13, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13605, file: !13232, line: 636, column: 12)
!13605 = distinct !DILexicalBlock(scope: !13599, file: !13232, line: 635, column: 7)
!13606 = !DILocation(line: 636, column: 27, scope: !13604)
!13607 = !DILocation(line: 636, column: 40, scope: !13604)
!13608 = !DILocation(line: 636, column: 12, scope: !13605)
!13609 = distinct !{!13609, !13601, !13610}
!13610 = !DILocation(line: 640, column: 7, scope: !13599)
!13611 = !DILocation(line: 644, column: 5, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13613, file: !13232, line: 644, column: 5)
!13613 = distinct !DILexicalBlock(scope: !13329, file: !13232, line: 644, column: 5)
!13614 = !DILocation(line: 644, column: 5, scope: !13613)
!13615 = !DILocation(line: 644, column: 5, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13612, file: !13232, line: 644, column: 5)
!13617 = !DILocation(line: 644, column: 5, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13619, file: !13232, line: 644, column: 5)
!13619 = distinct !DILexicalBlock(scope: !13612, file: !13232, line: 644, column: 5)
!13620 = !DILocation(line: 644, column: 5, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13622, file: !13232, line: 644, column: 5)
!13622 = distinct !DILexicalBlock(scope: !13619, file: !13232, line: 644, column: 5)
!13623 = !DILocation(line: 644, column: 5, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13622, file: !13232, line: 644, column: 5)
!13625 = !DILocation(line: 0, scope: !13612)
!13626 = !DILocation(line: 646, column: 27, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13329, file: !13232, line: 646, column: 8)
!13628 = !DILocation(line: 646, column: 36, scope: !13627)
!13629 = !DILocation(line: 0, scope: !13627)
!13630 = !DILocation(line: 646, column: 8, scope: !13329)
!13631 = !DILocation(line: 652, column: 13, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13627, file: !13232, line: 647, column: 5)
!13633 = !DILocation(line: 652, column: 49, scope: !13632)
!13634 = !DILocation(line: 652, column: 7, scope: !13632)
!13635 = !DILocation(line: 654, column: 13, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13637, file: !13232, line: 654, column: 12)
!13637 = distinct !DILexicalBlock(scope: !13632, file: !13232, line: 653, column: 7)
!13638 = !DILocation(line: 654, column: 27, scope: !13636)
!13639 = !DILocation(line: 654, column: 41, scope: !13636)
!13640 = !DILocation(line: 654, column: 12, scope: !13637)
!13641 = distinct !{!13641, !13634, !13642}
!13642 = !DILocation(line: 658, column: 7, scope: !13632)
!13643 = !DILocation(line: 666, column: 13, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13627, file: !13232, line: 661, column: 5)
!13645 = !DILocation(line: 666, column: 49, scope: !13644)
!13646 = !DILocation(line: 666, column: 7, scope: !13644)
!13647 = !DILocation(line: 668, column: 13, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13649, file: !13232, line: 668, column: 12)
!13649 = distinct !DILexicalBlock(scope: !13644, file: !13232, line: 667, column: 7)
!13650 = !DILocation(line: 668, column: 27, scope: !13648)
!13651 = !DILocation(line: 668, column: 41, scope: !13648)
!13652 = !DILocation(line: 668, column: 12, scope: !13649)
!13653 = distinct !{!13653, !13646, !13654}
!13654 = !DILocation(line: 672, column: 7, scope: !13644)
!13655 = !DILocation(line: 676, column: 8, scope: !13329)
!13656 = !DILocation(line: 678, column: 7, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13658, file: !13232, line: 677, column: 5)
!13658 = distinct !DILexicalBlock(scope: !13329, file: !13232, line: 676, column: 8)
!13659 = !DILocation(line: 679, column: 5, scope: !13657)
!13660 = !DILocation(line: 685, column: 31, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13297, file: !13232, line: 685, column: 7)
!13662 = !DILocation(line: 685, column: 41, scope: !13661)
!13663 = !DILocation(line: 685, column: 7, scope: !13297)
!13664 = !DILocation(line: 688, column: 22, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13666, file: !13232, line: 688, column: 8)
!13666 = distinct !DILexicalBlock(scope: !13661, file: !13232, line: 686, column: 3)
!13667 = !DILocation(line: 688, column: 8, scope: !13666)
!13668 = !DILocation(line: 690, column: 44, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13670, file: !13232, line: 690, column: 10)
!13670 = distinct !DILexicalBlock(scope: !13665, file: !13232, line: 689, column: 5)
!13671 = !DILocation(line: 0, scope: !13669)
!13672 = !DILocation(line: 690, column: 10, scope: !13670)
!13673 = !DILocation(line: 704, column: 15, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13669, file: !13232, line: 691, column: 7)
!13675 = !DILocation(line: 704, column: 51, scope: !13674)
!13676 = !DILocation(line: 704, column: 9, scope: !13674)
!13677 = !DILocation(line: 706, column: 15, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13679, file: !13232, line: 706, column: 14)
!13679 = distinct !DILexicalBlock(scope: !13674, file: !13232, line: 705, column: 9)
!13680 = !DILocation(line: 706, column: 29, scope: !13678)
!13681 = !DILocation(line: 706, column: 43, scope: !13678)
!13682 = !DILocation(line: 706, column: 14, scope: !13679)
!13683 = distinct !{!13683, !13676, !13684}
!13684 = !DILocation(line: 710, column: 9, scope: !13674)
!13685 = !DILocation(line: 713, column: 9, scope: !13674)
!13686 = !DILocation(line: 717, column: 9, scope: !13674)
!13687 = !DILocation(line: 720, column: 21, scope: !13674)
!13688 = !DILocation(line: 723, column: 9, scope: !13674)
!13689 = !DILocation(line: 723, column: 15, scope: !13674)
!13690 = !DILocation(line: 723, column: 51, scope: !13674)
!13691 = !DILocation(line: 725, column: 15, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13693, file: !13232, line: 725, column: 14)
!13693 = distinct !DILexicalBlock(scope: !13674, file: !13232, line: 724, column: 9)
!13694 = !DILocation(line: 725, column: 29, scope: !13692)
!13695 = !DILocation(line: 725, column: 43, scope: !13692)
!13696 = !DILocation(line: 725, column: 14, scope: !13693)
!13697 = distinct !{!13697, !13688, !13698}
!13698 = !DILocation(line: 729, column: 9, scope: !13674)
!13699 = !DILocation(line: 740, column: 15, scope: !13700)
!13700 = distinct !DILexicalBlock(scope: !13669, file: !13232, line: 732, column: 7)
!13701 = !DILocation(line: 740, column: 51, scope: !13700)
!13702 = !DILocation(line: 740, column: 9, scope: !13700)
!13703 = !DILocation(line: 742, column: 15, scope: !13704)
!13704 = distinct !DILexicalBlock(scope: !13705, file: !13232, line: 742, column: 14)
!13705 = distinct !DILexicalBlock(scope: !13700, file: !13232, line: 741, column: 9)
!13706 = !DILocation(line: 742, column: 29, scope: !13704)
!13707 = !DILocation(line: 742, column: 43, scope: !13704)
!13708 = !DILocation(line: 742, column: 14, scope: !13705)
!13709 = distinct !{!13709, !13702, !13710}
!13710 = !DILocation(line: 746, column: 9, scope: !13700)
!13711 = !DILocation(line: 752, column: 44, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13713, file: !13232, line: 752, column: 10)
!13713 = distinct !DILexicalBlock(scope: !13665, file: !13232, line: 750, column: 5)
!13714 = !DILocation(line: 752, column: 10, scope: !13713)
!13715 = !DILocation(line: 759, column: 27, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13712, file: !13232, line: 757, column: 7)
!13717 = !DILocation(line: 760, column: 13, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13716, file: !13232, line: 760, column: 12)
!13719 = !DILocation(line: 760, column: 77, scope: !13718)
!13720 = !DILocation(line: 760, column: 51, scope: !13718)
!13721 = !DILocation(line: 760, column: 88, scope: !13718)
!13722 = !DILocation(line: 761, column: 13, scope: !13718)
!13723 = !DILocation(line: 761, column: 77, scope: !13718)
!13724 = !DILocation(line: 761, column: 51, scope: !13718)
!13725 = !DILocation(line: 761, column: 85, scope: !13718)
!13726 = !DILocation(line: 762, column: 13, scope: !13718)
!13727 = !DILocation(line: 762, column: 77, scope: !13718)
!13728 = !DILocation(line: 762, column: 51, scope: !13718)
!13729 = !DILocation(line: 760, column: 12, scope: !13716)
!13730 = !DILocation(line: 770, column: 3, scope: !13297)
!13731 = !DILocation(line: 771, column: 1, scope: !13297)
!13732 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !13232, file: !13232, line: 1343, type: !13295, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13733)
!13733 = !{!13734, !13735, !13736, !13737}
!13734 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !13732, file: !13232, line: 1343, type: !208)
!13735 = !DILocalVariable(name: "vos", scope: !13732, file: !13232, line: 1345, type: !208)
!13736 = !DILocalVariable(name: "latency", scope: !13732, file: !13232, line: 1346, type: !208)
!13737 = !DILocalVariable(name: "tmpreg", scope: !13738, file: !13232, line: 1357, type: !423)
!13738 = distinct !DILexicalBlock(scope: !13739, file: !13232, line: 1357, column: 7)
!13739 = distinct !DILexicalBlock(scope: !13740, file: !13232, line: 1356, column: 5)
!13740 = distinct !DILexicalBlock(scope: !13741, file: !13232, line: 1351, column: 8)
!13741 = distinct !DILexicalBlock(scope: !13742, file: !13232, line: 1350, column: 3)
!13742 = distinct !DILexicalBlock(scope: !13732, file: !13232, line: 1349, column: 7)
!13743 = !DILocation(line: 0, scope: !13732)
!13744 = !DILocation(line: 1349, column: 7, scope: !13742)
!13745 = !DILocation(line: 1349, column: 42, scope: !13742)
!13746 = !DILocation(line: 1349, column: 7, scope: !13732)
!13747 = !DILocation(line: 1351, column: 8, scope: !13740)
!13748 = !DILocation(line: 1351, column: 8, scope: !13741)
!13749 = !DILocation(line: 1353, column: 13, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13740, file: !13232, line: 1352, column: 5)
!13751 = !DILocation(line: 1354, column: 5, scope: !13750)
!13752 = !DILocation(line: 1357, column: 7, scope: !13738)
!13753 = !DILocation(line: 1357, column: 7, scope: !13739)
!13754 = !DILocation(line: 1358, column: 13, scope: !13739)
!13755 = !DILocation(line: 1359, column: 7, scope: !13739)
!13756 = !DILocation(line: 0, scope: !13740)
!13757 = !DILocation(line: 1363, column: 13, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13741, file: !13232, line: 1363, column: 8)
!13759 = !DILocation(line: 1363, column: 46, scope: !13758)
!13760 = !DILocation(line: 1369, column: 3, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13732, file: !13232, line: 1369, column: 3)
!13762 = !DILocation(line: 1369, column: 3, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13764, file: !13232, line: 1369, column: 3)
!13764 = distinct !DILexicalBlock(scope: !13761, file: !13232, line: 1369, column: 3)
!13765 = !DILocation(line: 1373, column: 6, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13732, file: !13232, line: 1373, column: 6)
!13767 = !DILocation(line: 1379, column: 1, scope: !13732)
!13768 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !13232, file: !13232, line: 799, type: !13769, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13780)
!13769 = !DISubroutineType(types: !13770)
!13770 = !{!13235, !13771, !208}
!13771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13772, size: 32)
!13772 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !13302, line: 304, baseType: !13773)
!13773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13302, line: 288, size: 160, elements: !13774)
!13774 = !{!13775, !13776, !13777, !13778, !13779}
!13775 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !13773, file: !13302, line: 290, baseType: !208, size: 32)
!13776 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !13773, file: !13302, line: 293, baseType: !208, size: 32, offset: 32)
!13777 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13773, file: !13302, line: 296, baseType: !208, size: 32, offset: 64)
!13778 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13773, file: !13302, line: 299, baseType: !208, size: 32, offset: 96)
!13779 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13773, file: !13302, line: 302, baseType: !208, size: 32, offset: 128)
!13780 = !{!13781, !13782, !13783, !13784}
!13781 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13768, file: !13232, line: 799, type: !13771)
!13782 = !DILocalVariable(name: "FLatency", arg: 2, scope: !13768, file: !13232, line: 799, type: !208)
!13783 = !DILocalVariable(name: "tickstart", scope: !13768, file: !13232, line: 801, type: !208)
!13784 = !DILocalVariable(name: "status", scope: !13768, file: !13232, line: 802, type: !13235)
!13785 = !DILocation(line: 0, scope: !13768)
!13786 = !DILocation(line: 805, column: 24, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13768, file: !13232, line: 805, column: 6)
!13788 = !DILocation(line: 805, column: 6, scope: !13768)
!13789 = !DILocation(line: 817, column: 17, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13768, file: !13232, line: 817, column: 6)
!13791 = !DILocation(line: 817, column: 15, scope: !13790)
!13792 = !DILocation(line: 817, column: 6, scope: !13768)
!13793 = !DILocation(line: 820, column: 5, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13795, file: !13232, line: 820, column: 5)
!13795 = distinct !DILexicalBlock(scope: !13796, file: !13232, line: 820, column: 5)
!13796 = distinct !DILexicalBlock(scope: !13790, file: !13232, line: 818, column: 3)
!13797 = !DILocation(line: 820, column: 5, scope: !13795)
!13798 = !DILocation(line: 820, column: 5, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13794, file: !13232, line: 820, column: 5)
!13800 = !DILocation(line: 824, column: 8, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13796, file: !13232, line: 824, column: 8)
!13802 = !DILocation(line: 824, column: 34, scope: !13801)
!13803 = !DILocation(line: 824, column: 8, scope: !13796)
!13804 = !DILocation(line: 831, column: 27, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13768, file: !13232, line: 831, column: 6)
!13806 = !DILocation(line: 831, column: 38, scope: !13805)
!13807 = !DILocation(line: 831, column: 60, scope: !13805)
!13808 = !DILocation(line: 831, column: 6, scope: !13768)
!13809 = !DILocation(line: 834, column: 5, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13805, file: !13232, line: 832, column: 3)
!13811 = !DILocation(line: 838, column: 27, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13768, file: !13232, line: 838, column: 6)
!13813 = !DILocation(line: 835, column: 3, scope: !13810)
!13814 = !DILocation(line: 838, column: 38, scope: !13812)
!13815 = !DILocation(line: 838, column: 62, scope: !13812)
!13816 = !DILocation(line: 838, column: 6, scope: !13768)
!13817 = !DILocation(line: 843, column: 27, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13819, file: !13232, line: 843, column: 8)
!13819 = distinct !DILexicalBlock(scope: !13812, file: !13232, line: 839, column: 3)
!13820 = !DILocation(line: 843, column: 8, scope: !13819)
!13821 = !DILocation(line: 846, column: 10, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13823, file: !13232, line: 846, column: 10)
!13823 = distinct !DILexicalBlock(scope: !13818, file: !13232, line: 844, column: 5)
!13824 = !DILocation(line: 846, column: 46, scope: !13822)
!13825 = !DILocation(line: 846, column: 10, scope: !13823)
!13826 = !DILocation(line: 855, column: 10, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13828, file: !13232, line: 855, column: 10)
!13828 = distinct !DILexicalBlock(scope: !13829, file: !13232, line: 853, column: 5)
!13829 = distinct !DILexicalBlock(scope: !13818, file: !13232, line: 852, column: 13)
!13830 = !DILocation(line: 855, column: 46, scope: !13827)
!13831 = !DILocation(line: 855, column: 10, scope: !13828)
!13832 = !DILocation(line: 864, column: 10, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13834, file: !13232, line: 864, column: 10)
!13834 = distinct !DILexicalBlock(scope: !13835, file: !13232, line: 862, column: 5)
!13835 = distinct !DILexicalBlock(scope: !13829, file: !13232, line: 861, column: 13)
!13836 = !DILocation(line: 864, column: 46, scope: !13833)
!13837 = !DILocation(line: 864, column: 10, scope: !13834)
!13838 = !DILocation(line: 873, column: 10, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13840, file: !13232, line: 873, column: 10)
!13840 = distinct !DILexicalBlock(scope: !13835, file: !13232, line: 871, column: 5)
!13841 = !DILocation(line: 873, column: 46, scope: !13839)
!13842 = !DILocation(line: 873, column: 10, scope: !13840)
!13843 = !DILocation(line: 878, column: 5, scope: !13819)
!13844 = !DILocation(line: 881, column: 17, scope: !13819)
!13845 = !DILocation(line: 883, column: 27, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13819, file: !13232, line: 883, column: 8)
!13847 = !DILocation(line: 883, column: 8, scope: !13819)
!13848 = !DILocation(line: 885, column: 14, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13846, file: !13232, line: 884, column: 5)
!13850 = !DILocation(line: 885, column: 44, scope: !13849)
!13851 = !DILocation(line: 885, column: 7, scope: !13849)
!13852 = !DILocation(line: 887, column: 13, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13854, file: !13232, line: 887, column: 12)
!13854 = distinct !DILexicalBlock(scope: !13849, file: !13232, line: 886, column: 7)
!13855 = !DILocation(line: 887, column: 27, scope: !13853)
!13856 = !DILocation(line: 887, column: 41, scope: !13853)
!13857 = !DILocation(line: 887, column: 12, scope: !13854)
!13858 = distinct !{!13858, !13851, !13859}
!13859 = !DILocation(line: 891, column: 7, scope: !13849)
!13860 = !DILocation(line: 895, column: 14, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13862, file: !13232, line: 894, column: 5)
!13862 = distinct !DILexicalBlock(scope: !13846, file: !13232, line: 893, column: 13)
!13863 = !DILocation(line: 895, column: 44, scope: !13861)
!13864 = !DILocation(line: 895, column: 7, scope: !13861)
!13865 = !DILocation(line: 897, column: 13, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13867, file: !13232, line: 897, column: 12)
!13867 = distinct !DILexicalBlock(scope: !13861, file: !13232, line: 896, column: 7)
!13868 = !DILocation(line: 897, column: 27, scope: !13866)
!13869 = !DILocation(line: 897, column: 41, scope: !13866)
!13870 = !DILocation(line: 897, column: 12, scope: !13867)
!13871 = distinct !{!13871, !13864, !13872}
!13872 = !DILocation(line: 901, column: 7, scope: !13861)
!13873 = !DILocation(line: 905, column: 14, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13875, file: !13232, line: 904, column: 5)
!13875 = distinct !DILexicalBlock(scope: !13862, file: !13232, line: 903, column: 13)
!13876 = !DILocation(line: 905, column: 44, scope: !13874)
!13877 = !DILocation(line: 905, column: 7, scope: !13874)
!13878 = !DILocation(line: 907, column: 13, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13880, file: !13232, line: 907, column: 12)
!13880 = distinct !DILexicalBlock(scope: !13874, file: !13232, line: 906, column: 7)
!13881 = !DILocation(line: 907, column: 27, scope: !13879)
!13882 = !DILocation(line: 907, column: 41, scope: !13879)
!13883 = !DILocation(line: 907, column: 12, scope: !13880)
!13884 = distinct !{!13884, !13877, !13885}
!13885 = !DILocation(line: 911, column: 7, scope: !13874)
!13886 = !DILocation(line: 915, column: 13, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13875, file: !13232, line: 914, column: 5)
!13888 = !DILocation(line: 915, column: 43, scope: !13887)
!13889 = !DILocation(line: 915, column: 7, scope: !13887)
!13890 = !DILocation(line: 917, column: 13, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13892, file: !13232, line: 917, column: 12)
!13892 = distinct !DILexicalBlock(scope: !13887, file: !13232, line: 916, column: 7)
!13893 = !DILocation(line: 917, column: 27, scope: !13891)
!13894 = !DILocation(line: 917, column: 41, scope: !13891)
!13895 = !DILocation(line: 917, column: 12, scope: !13892)
!13896 = distinct !{!13896, !13889, !13897}
!13897 = !DILocation(line: 921, column: 7, scope: !13887)
!13898 = !DILocation(line: 925, column: 17, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13768, file: !13232, line: 925, column: 6)
!13900 = !DILocation(line: 925, column: 15, scope: !13899)
!13901 = !DILocation(line: 925, column: 6, scope: !13768)
!13902 = !DILocation(line: 928, column: 5, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13904, file: !13232, line: 928, column: 5)
!13904 = distinct !DILexicalBlock(scope: !13899, file: !13232, line: 926, column: 3)
!13905 = !DILocation(line: 932, column: 8, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13904, file: !13232, line: 932, column: 8)
!13907 = !DILocation(line: 932, column: 34, scope: !13906)
!13908 = !DILocation(line: 932, column: 8, scope: !13904)
!13909 = !DILocation(line: 939, column: 27, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13768, file: !13232, line: 939, column: 6)
!13911 = !DILocation(line: 939, column: 38, scope: !13910)
!13912 = !DILocation(line: 939, column: 61, scope: !13910)
!13913 = !DILocation(line: 939, column: 6, scope: !13768)
!13914 = !DILocation(line: 942, column: 5, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13910, file: !13232, line: 940, column: 3)
!13916 = !DILocation(line: 946, column: 27, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13768, file: !13232, line: 946, column: 6)
!13918 = !DILocation(line: 943, column: 3, scope: !13915)
!13919 = !DILocation(line: 946, column: 38, scope: !13917)
!13920 = !DILocation(line: 946, column: 61, scope: !13917)
!13921 = !DILocation(line: 946, column: 6, scope: !13768)
!13922 = !DILocation(line: 949, column: 5, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13917, file: !13232, line: 947, column: 3)
!13924 = !DILocation(line: 950, column: 3, scope: !13923)
!13925 = !DILocation(line: 953, column: 21, scope: !13768)
!13926 = !DILocation(line: 953, column: 70, scope: !13768)
!13927 = !DILocation(line: 953, column: 91, scope: !13768)
!13928 = !DILocation(line: 953, column: 50, scope: !13768)
!13929 = !DILocation(line: 953, column: 47, scope: !13768)
!13930 = !DILocation(line: 953, column: 19, scope: !13768)
!13931 = !DILocation(line: 956, column: 25, scope: !13768)
!13932 = !DILocation(line: 956, column: 12, scope: !13768)
!13933 = !DILocation(line: 958, column: 3, scope: !13768)
!13934 = !DILocation(line: 959, column: 1, scope: !13768)
!13935 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !13232, file: !13232, line: 1083, type: !9251, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13936)
!13936 = !{!13937, !13938, !13939, !13940, !13941, !13942}
!13937 = !DILocalVariable(name: "tmpreg", scope: !13935, file: !13232, line: 1085, type: !208)
!13938 = !DILocalVariable(name: "pllm", scope: !13935, file: !13232, line: 1085, type: !208)
!13939 = !DILocalVariable(name: "plld", scope: !13935, file: !13232, line: 1085, type: !208)
!13940 = !DILocalVariable(name: "pllvco", scope: !13935, file: !13232, line: 1085, type: !208)
!13941 = !DILocalVariable(name: "msiclkrange", scope: !13935, file: !13232, line: 1085, type: !208)
!13942 = !DILocalVariable(name: "sysclockfreq", scope: !13935, file: !13232, line: 1085, type: !208)
!13943 = !DILocation(line: 1087, column: 17, scope: !13935)
!13944 = !DILocation(line: 0, scope: !13935)
!13945 = !DILocation(line: 1090, column: 3, scope: !13935)
!13946 = !DILocation(line: 1100, column: 7, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13948, file: !13232, line: 1098, column: 5)
!13948 = distinct !DILexicalBlock(scope: !13935, file: !13232, line: 1091, column: 3)
!13949 = !DILocation(line: 1104, column: 63, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13948, file: !13232, line: 1103, column: 5)
!13951 = !DILocation(line: 1104, column: 14, scope: !13950)
!13952 = !DILocation(line: 1105, column: 52, scope: !13950)
!13953 = !DILocation(line: 1105, column: 76, scope: !13950)
!13954 = !DILocation(line: 1106, column: 11, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13950, file: !13232, line: 1106, column: 11)
!13956 = !DILocation(line: 1106, column: 41, scope: !13955)
!13957 = !DILocation(line: 1106, column: 11, scope: !13950)
!13958 = !DILocation(line: 0, scope: !13955)
!13959 = !DILocation(line: 1117, column: 7, scope: !13950)
!13960 = !DILocation(line: 1122, column: 27, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13948, file: !13232, line: 1121, column: 5)
!13962 = !DILocation(line: 1122, column: 56, scope: !13961)
!13963 = !DILocation(line: 1123, column: 30, scope: !13961)
!13964 = !DILocation(line: 1124, column: 7, scope: !13961)
!13965 = !DILocation(line: 0, scope: !13948)
!13966 = !DILocation(line: 1127, column: 3, scope: !13935)
!13967 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !13232, file: !13232, line: 1005, type: !10680, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13968)
!13968 = !{!13969, !13970, !13971, !13972, !13982}
!13969 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !13967, file: !13232, line: 1005, type: !208)
!13970 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !13967, file: !13232, line: 1005, type: !208)
!13971 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !13967, file: !13232, line: 1005, type: !208)
!13972 = !DILocalVariable(name: "gpio", scope: !13967, file: !13232, line: 1007, type: !13973)
!13973 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !13974, line: 64, baseType: !13975)
!13974 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13974, line: 48, size: 160, elements: !13976)
!13976 = !{!13977, !13978, !13979, !13980, !13981}
!13977 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !13975, file: !13974, line: 50, baseType: !208, size: 32)
!13978 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !13975, file: !13974, line: 53, baseType: !208, size: 32, offset: 32)
!13979 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !13975, file: !13974, line: 56, baseType: !208, size: 32, offset: 64)
!13980 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !13975, file: !13974, line: 59, baseType: !208, size: 32, offset: 96)
!13981 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !13975, file: !13974, line: 62, baseType: !208, size: 32, offset: 128)
!13982 = !DILocalVariable(name: "tmpreg", scope: !13983, file: !13232, line: 1022, type: !423)
!13983 = distinct !DILexicalBlock(scope: !13967, file: !13232, line: 1022, column: 3)
!13984 = !DILocation(line: 0, scope: !13967)
!13985 = !DILocation(line: 1007, column: 3, scope: !13967)
!13986 = !DILocation(line: 1007, column: 20, scope: !13967)
!13987 = !DILocation(line: 1015, column: 8, scope: !13967)
!13988 = !DILocation(line: 1015, column: 18, scope: !13967)
!13989 = !DILocation(line: 1016, column: 8, scope: !13967)
!13990 = !DILocation(line: 1016, column: 18, scope: !13967)
!13991 = !DILocation(line: 1017, column: 8, scope: !13967)
!13992 = !DILocation(line: 1017, column: 18, scope: !13967)
!13993 = !DILocation(line: 1018, column: 8, scope: !13967)
!13994 = !DILocation(line: 1018, column: 18, scope: !13967)
!13995 = !DILocation(line: 1019, column: 8, scope: !13967)
!13996 = !DILocation(line: 1019, column: 18, scope: !13967)
!13997 = !DILocation(line: 1022, column: 3, scope: !13983)
!13998 = !DILocation(line: 1022, column: 3, scope: !13967)
!13999 = !DILocation(line: 1024, column: 3, scope: !13967)
!14000 = !DILocation(line: 1027, column: 3, scope: !13967)
!14001 = !DILocation(line: 1028, column: 1, scope: !13967)
!14002 = !DISubprogram(name: "HAL_GPIO_Init", scope: !13974, file: !13974, line: 293, type: !14003, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !652)
!14003 = !DISubroutineType(types: !14004)
!14004 = !{null, !3171, !14005}
!14005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13973, size: 32)
!14006 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !13232, file: !13232, line: 1039, type: !3274, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !652)
!14007 = !DILocation(line: 1041, column: 38, scope: !14006)
!14008 = !DILocation(line: 1042, column: 1, scope: !14006)
!14009 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !13232, file: !13232, line: 1048, type: !3274, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !652)
!14010 = !DILocation(line: 1050, column: 38, scope: !14009)
!14011 = !DILocation(line: 1051, column: 1, scope: !14009)
!14012 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !13232, file: !13232, line: 1139, type: !9251, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !652)
!14013 = !DILocation(line: 1141, column: 10, scope: !14012)
!14014 = !DILocation(line: 1141, column: 3, scope: !14012)
!14015 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !13232, file: !13232, line: 1150, type: !9251, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !652)
!14016 = !DILocation(line: 1153, column: 11, scope: !14015)
!14017 = !DILocation(line: 1153, column: 56, scope: !14015)
!14018 = !DILocation(line: 1153, column: 79, scope: !14015)
!14019 = !DILocation(line: 1153, column: 36, scope: !14015)
!14020 = !DILocation(line: 1153, column: 33, scope: !14015)
!14021 = !DILocation(line: 1153, column: 3, scope: !14015)
!14022 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !13232, file: !13232, line: 1162, type: !9251, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !652)
!14023 = !DILocation(line: 1165, column: 11, scope: !14022)
!14024 = !DILocation(line: 1165, column: 55, scope: !14022)
!14025 = !DILocation(line: 1165, column: 78, scope: !14022)
!14026 = !DILocation(line: 1165, column: 35, scope: !14022)
!14027 = !DILocation(line: 1165, column: 32, scope: !14022)
!14028 = !DILocation(line: 1165, column: 3, scope: !14022)
!14029 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !13232, file: !13232, line: 1175, type: !14030, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14032)
!14030 = !DISubroutineType(types: !14031)
!14031 = !{null, !13300}
!14032 = !{!14033}
!14033 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !14029, file: !13232, line: 1175, type: !13300)
!14034 = !DILocation(line: 0, scope: !14029)
!14035 = !DILocation(line: 1181, column: 22, scope: !14029)
!14036 = !DILocation(line: 1181, column: 37, scope: !14029)
!14037 = !DILocation(line: 1186, column: 12, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14029, file: !13232, line: 1186, column: 6)
!14039 = !DILocation(line: 1186, column: 15, scope: !14038)
!14040 = !DILocation(line: 1186, column: 31, scope: !14038)
!14041 = !DILocation(line: 1186, column: 6, scope: !14029)
!14042 = !DILocation(line: 1188, column: 24, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14038, file: !13232, line: 1187, column: 3)
!14044 = !DILocation(line: 1188, column: 33, scope: !14043)
!14045 = !DILocation(line: 1189, column: 3, scope: !14043)
!14046 = !DILocation(line: 1190, column: 17, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14038, file: !13232, line: 1190, column: 11)
!14048 = !DILocation(line: 1190, column: 20, scope: !14047)
!14049 = !DILocation(line: 1190, column: 35, scope: !14047)
!14050 = !DILocation(line: 0, scope: !14047)
!14051 = !DILocation(line: 1190, column: 11, scope: !14038)
!14052 = !DILocation(line: 1192, column: 33, scope: !14053)
!14053 = distinct !DILexicalBlock(scope: !14047, file: !13232, line: 1191, column: 3)
!14054 = !DILocation(line: 1193, column: 3, scope: !14053)
!14055 = !DILocation(line: 1196, column: 33, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !14047, file: !13232, line: 1195, column: 3)
!14057 = !DILocation(line: 1200, column: 12, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14029, file: !13232, line: 1200, column: 6)
!14059 = !DILocation(line: 1200, column: 15, scope: !14058)
!14060 = !DILocation(line: 1206, column: 24, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14058, file: !13232, line: 1205, column: 3)
!14062 = !DILocation(line: 1206, column: 33, scope: !14061)
!14063 = !DILocation(line: 1209, column: 61, scope: !14029)
!14064 = !DILocation(line: 1209, column: 88, scope: !14029)
!14065 = !DILocation(line: 1209, column: 22, scope: !14029)
!14066 = !DILocation(line: 1209, column: 42, scope: !14029)
!14067 = !DILocation(line: 1212, column: 12, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14029, file: !13232, line: 1212, column: 6)
!14069 = !DILocation(line: 1212, column: 6, scope: !14029)
!14070 = !DILocation(line: 1218, column: 24, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14068, file: !13232, line: 1217, column: 3)
!14072 = !DILocation(line: 1218, column: 33, scope: !14071)
!14073 = !DILocation(line: 1221, column: 61, scope: !14029)
!14074 = !DILocation(line: 1221, column: 88, scope: !14029)
!14075 = !DILocation(line: 1221, column: 22, scope: !14029)
!14076 = !DILocation(line: 1221, column: 42, scope: !14029)
!14077 = !DILocation(line: 1222, column: 55, scope: !14029)
!14078 = !DILocation(line: 1222, column: 61, scope: !14029)
!14079 = !DILocation(line: 1222, column: 22, scope: !14029)
!14080 = !DILocation(line: 1222, column: 36, scope: !14029)
!14081 = !DILocation(line: 1225, column: 12, scope: !14082)
!14082 = distinct !DILexicalBlock(scope: !14029, file: !13232, line: 1225, column: 6)
!14083 = !DILocation(line: 1225, column: 16, scope: !14082)
!14084 = !DILocation(line: 1225, column: 33, scope: !14082)
!14085 = !DILocation(line: 1225, column: 6, scope: !14029)
!14086 = !DILocation(line: 1227, column: 24, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14082, file: !13232, line: 1226, column: 3)
!14088 = !DILocation(line: 1227, column: 33, scope: !14087)
!14089 = !DILocation(line: 1228, column: 3, scope: !14087)
!14090 = !DILocation(line: 1229, column: 17, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14082, file: !13232, line: 1229, column: 11)
!14092 = !DILocation(line: 1229, column: 21, scope: !14091)
!14093 = !DILocation(line: 1229, column: 37, scope: !14091)
!14094 = !DILocation(line: 0, scope: !14091)
!14095 = !DILocation(line: 1229, column: 11, scope: !14082)
!14096 = !DILocation(line: 1231, column: 33, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14091, file: !13232, line: 1230, column: 3)
!14098 = !DILocation(line: 1232, column: 3, scope: !14097)
!14099 = !DILocation(line: 1235, column: 33, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !14091, file: !13232, line: 1234, column: 3)
!14101 = !DILocation(line: 1239, column: 12, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14029, file: !13232, line: 1239, column: 6)
!14103 = !DILocation(line: 1239, column: 16, scope: !14102)
!14104 = !DILocation(line: 1245, column: 24, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14102, file: !13232, line: 1244, column: 3)
!14106 = !DILocation(line: 1245, column: 33, scope: !14105)
!14107 = !DILocation(line: 1250, column: 12, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14029, file: !13232, line: 1250, column: 6)
!14109 = !DILocation(line: 1250, column: 15, scope: !14108)
!14110 = !DILocation(line: 1250, column: 30, scope: !14108)
!14111 = !DILocation(line: 1250, column: 6, scope: !14029)
!14112 = !DILocation(line: 1256, column: 28, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14108, file: !13232, line: 1255, column: 3)
!14114 = !DILocation(line: 1256, column: 37, scope: !14113)
!14115 = !DILocation(line: 1258, column: 54, scope: !14029)
!14116 = !DILocation(line: 1258, column: 59, scope: !14029)
!14117 = !DILocation(line: 1258, column: 26, scope: !14029)
!14118 = !DILocation(line: 1258, column: 36, scope: !14029)
!14119 = !DILocation(line: 1259, column: 51, scope: !14029)
!14120 = !DILocation(line: 1259, column: 56, scope: !14029)
!14121 = !DILocation(line: 1259, column: 26, scope: !14029)
!14122 = !DILocation(line: 1259, column: 33, scope: !14029)
!14123 = !DILocation(line: 1260, column: 51, scope: !14029)
!14124 = !DILocation(line: 1260, column: 56, scope: !14029)
!14125 = !DILocation(line: 1260, column: 26, scope: !14029)
!14126 = !DILocation(line: 1260, column: 33, scope: !14029)
!14127 = !DILocation(line: 1261, column: 1, scope: !14029)
!14128 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !13232, file: !13232, line: 1271, type: !14129, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14131)
!14129 = !DISubroutineType(types: !14130)
!14130 = !{null, !13771, !1090}
!14131 = !{!14132, !14133}
!14132 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !14128, file: !13232, line: 1271, type: !13771)
!14133 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !14128, file: !13232, line: 1271, type: !1090)
!14134 = !DILocation(line: 0, scope: !14128)
!14135 = !DILocation(line: 1278, column: 22, scope: !14128)
!14136 = !DILocation(line: 1278, column: 32, scope: !14128)
!14137 = !DILocation(line: 1281, column: 53, scope: !14128)
!14138 = !DILocation(line: 1281, column: 58, scope: !14128)
!14139 = !DILocation(line: 1281, column: 22, scope: !14128)
!14140 = !DILocation(line: 1281, column: 35, scope: !14128)
!14141 = !DILocation(line: 1284, column: 54, scope: !14128)
!14142 = !DILocation(line: 1284, column: 59, scope: !14128)
!14143 = !DILocation(line: 1284, column: 22, scope: !14128)
!14144 = !DILocation(line: 1284, column: 36, scope: !14128)
!14145 = !DILocation(line: 1287, column: 55, scope: !14128)
!14146 = !DILocation(line: 1287, column: 60, scope: !14128)
!14147 = !DILocation(line: 1287, column: 22, scope: !14128)
!14148 = !DILocation(line: 1287, column: 37, scope: !14128)
!14149 = !DILocation(line: 1290, column: 56, scope: !14128)
!14150 = !DILocation(line: 1290, column: 79, scope: !14128)
!14151 = !DILocation(line: 1290, column: 22, scope: !14128)
!14152 = !DILocation(line: 1290, column: 37, scope: !14128)
!14153 = !DILocation(line: 1293, column: 16, scope: !14128)
!14154 = !DILocation(line: 1293, column: 14, scope: !14128)
!14155 = !DILocation(line: 1294, column: 1, scope: !14128)
!14156 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !13232, file: !13232, line: 1301, type: !3274, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !652)
!14157 = !DILocation(line: 1304, column: 6, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14156, file: !13232, line: 1304, column: 6)
!14159 = !DILocation(line: 1304, column: 6, scope: !14156)
!14160 = !DILocation(line: 1307, column: 5, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14158, file: !13232, line: 1305, column: 3)
!14162 = !DILocation(line: 1310, column: 5, scope: !14161)
!14163 = !DILocation(line: 1311, column: 3, scope: !14161)
!14164 = !DILocation(line: 1312, column: 1, scope: !14156)
!14165 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !13232, file: !13232, line: 1318, type: !3274, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !652)
!14166 = !DILocation(line: 1323, column: 1, scope: !14165)
!14167 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !14168, file: !14168, line: 147, type: !6820, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14169)
!14168 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14169 = !{!14170}
!14170 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14167, file: !14168, line: 147, type: !208)
!14171 = !DILocation(line: 0, scope: !14167)
!14172 = !DILocation(line: 150, column: 3, scope: !14167)
!14173 = !DILocation(line: 151, column: 1, scope: !14167)
!14174 = distinct !DISubprogram(name: "LL_InitTick", scope: !14175, file: !14175, line: 222, type: !11643, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14176)
!14175 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14176 = !{!14177, !14178}
!14177 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14174, file: !14175, line: 222, type: !208)
!14178 = !DILocalVariable(name: "Ticks", arg: 2, scope: !14174, file: !14175, line: 222, type: !208)
!14179 = !DILocation(line: 0, scope: !14174)
!14180 = !DILocation(line: 225, column: 46, scope: !14174)
!14181 = !DILocation(line: 225, column: 55, scope: !14174)
!14182 = !DILocation(line: 225, column: 18, scope: !14174)
!14183 = !DILocation(line: 226, column: 18, scope: !14174)
!14184 = !DILocation(line: 227, column: 18, scope: !14174)
!14185 = !DILocation(line: 229, column: 1, scope: !14174)
!14186 = distinct !DISubprogram(name: "LL_mDelay", scope: !14168, file: !14168, line: 163, type: !6820, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14187)
!14187 = !{!14188, !14189, !14190}
!14188 = !DILocalVariable(name: "Delay", arg: 1, scope: !14186, file: !14168, line: 163, type: !208)
!14189 = !DILocalVariable(name: "tmp", scope: !14186, file: !14168, line: 165, type: !423)
!14190 = !DILocalVariable(name: "tmpDelay", scope: !14186, file: !14168, line: 166, type: !208)
!14191 = !DILocation(line: 0, scope: !14186)
!14192 = !DILocation(line: 165, column: 3, scope: !14186)
!14193 = !DILocation(line: 165, column: 18, scope: !14186)
!14194 = !DILocation(line: 165, column: 33, scope: !14186)
!14195 = !DILocation(line: 169, column: 10, scope: !14186)
!14196 = !DILocation(line: 172, column: 15, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14186, file: !14168, line: 172, column: 6)
!14198 = !DILocation(line: 177, column: 3, scope: !14186)
!14199 = !DILocation(line: 179, column: 18, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14201, file: !14168, line: 179, column: 8)
!14201 = distinct !DILexicalBlock(scope: !14186, file: !14168, line: 178, column: 3)
!14202 = !DILocation(line: 177, column: 19, scope: !14186)
!14203 = !DILocation(line: 184, column: 1, scope: !14186)
!14204 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !14168, file: !14168, line: 227, type: !6820, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14205)
!14205 = !{!14206}
!14206 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14204, file: !14168, line: 227, type: !208)
!14207 = !DILocation(line: 0, scope: !14204)
!14208 = !DILocation(line: 230, column: 19, scope: !14204)
!14209 = !DILocation(line: 231, column: 1, scope: !14204)
!14210 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !14168, file: !14168, line: 242, type: !14211, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14214)
!14211 = !DISubroutineType(types: !14212)
!14212 = !{!14213, !208}
!14213 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1054, line: 194, baseType: !1053)
!14214 = !{!14215, !14216, !14217}
!14215 = !DILocalVariable(name: "Frequency", arg: 1, scope: !14210, file: !14168, line: 242, type: !208)
!14216 = !DILocalVariable(name: "status", scope: !14210, file: !14168, line: 244, type: !14213)
!14217 = !DILocalVariable(name: "latency", scope: !14210, file: !14168, line: 246, type: !208)
!14218 = !DILocation(line: 0, scope: !14210)
!14219 = !DILocation(line: 249, column: 25, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14210, file: !14168, line: 249, column: 7)
!14221 = !DILocation(line: 255, column: 9, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14223, file: !14168, line: 255, column: 9)
!14223 = distinct !DILexicalBlock(scope: !14220, file: !14168, line: 254, column: 3)
!14224 = !DILocation(line: 255, column: 41, scope: !14222)
!14225 = !DILocation(line: 255, column: 9, scope: !14223)
!14226 = !DILocation(line: 257, column: 21, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14228, file: !14168, line: 257, column: 11)
!14228 = distinct !DILexicalBlock(scope: !14222, file: !14168, line: 256, column: 5)
!14229 = !DILocation(line: 284, column: 9, scope: !14223)
!14230 = !DILocation(line: 264, column: 14, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14222, file: !14168, line: 264, column: 14)
!14232 = !DILocation(line: 264, column: 46, scope: !14231)
!14233 = !DILocation(line: 264, column: 14, scope: !14222)
!14234 = !DILocation(line: 266, column: 21, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14236, file: !14168, line: 266, column: 11)
!14236 = distinct !DILexicalBlock(scope: !14231, file: !14168, line: 265, column: 5)
!14237 = !DILocation(line: 275, column: 21, scope: !14238)
!14238 = distinct !DILexicalBlock(scope: !14239, file: !14168, line: 275, column: 11)
!14239 = distinct !DILexicalBlock(scope: !14231, file: !14168, line: 274, column: 5)
!14240 = !DILocation(line: 286, column: 7, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14242, file: !14168, line: 285, column: 5)
!14242 = distinct !DILexicalBlock(scope: !14223, file: !14168, line: 284, column: 9)
!14243 = !DILocation(line: 287, column: 5, scope: !14241)
!14244 = !DILocation(line: 289, column: 5, scope: !14223)
!14245 = !DILocation(line: 293, column: 9, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14223, file: !14168, line: 293, column: 9)
!14247 = !DILocation(line: 293, column: 31, scope: !14246)
!14248 = !DILocation(line: 293, column: 9, scope: !14223)
!14249 = !DILocation(line: 298, column: 3, scope: !14210)
!14250 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !6834, file: !6834, line: 285, type: !9251, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !652)
!14251 = !DILocation(line: 287, column: 21, scope: !14250)
!14252 = !DILocation(line: 287, column: 3, scope: !14250)
!14253 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !11642, file: !11642, line: 1897, type: !3274, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !652)
!14254 = !DILocation(line: 1899, column: 3, scope: !14253)
!14255 = !DILocation(line: 1900, column: 1, scope: !14253)
!14256 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !11642, file: !11642, line: 1843, type: !6820, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14257)
!14257 = !{!14258}
!14258 = !DILocalVariable(name: "Latency", arg: 1, scope: !14256, file: !11642, line: 1843, type: !208)
!14259 = !DILocation(line: 0, scope: !14256)
!14260 = !DILocation(line: 1845, column: 3, scope: !14256)
!14261 = !DILocation(line: 1846, column: 1, scope: !14256)
!14262 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !11642, file: !11642, line: 1855, type: !9251, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !652)
!14263 = !DILocation(line: 1857, column: 21, scope: !14262)
!14264 = !DILocation(line: 1857, column: 3, scope: !14262)
!14265 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !14168, file: !14168, line: 323, type: !14266, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14281)
!14266 = !DISubroutineType(types: !14267)
!14267 = !{!14213, !14268, !14274}
!14268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14269, size: 32)
!14269 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !14175, line: 103, baseType: !14270)
!14270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14175, line: 90, size: 64, elements: !14271)
!14271 = !{!14272, !14273}
!14272 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !14270, file: !14175, line: 92, baseType: !208, size: 32)
!14273 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !14270, file: !14175, line: 98, baseType: !208, size: 32, offset: 32)
!14274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14275, size: 32)
!14275 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !14175, line: 128, baseType: !14276)
!14276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14175, line: 108, size: 96, elements: !14277)
!14277 = !{!14278, !14279, !14280}
!14278 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !14276, file: !14175, line: 110, baseType: !208, size: 32)
!14279 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !14276, file: !14175, line: 116, baseType: !208, size: 32, offset: 32)
!14280 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !14276, file: !14175, line: 122, baseType: !208, size: 32, offset: 64)
!14281 = !{!14282, !14283, !14284, !14285}
!14282 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !14265, file: !14168, line: 323, type: !14268)
!14283 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14265, file: !14168, line: 324, type: !14274)
!14284 = !DILocalVariable(name: "status", scope: !14265, file: !14168, line: 326, type: !14213)
!14285 = !DILocalVariable(name: "pllfreq", scope: !14265, file: !14168, line: 327, type: !208)
!14286 = !DILocation(line: 0, scope: !14265)
!14287 = !DILocation(line: 330, column: 7, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14265, file: !14168, line: 330, column: 7)
!14289 = !DILocation(line: 330, column: 26, scope: !14288)
!14290 = !DILocation(line: 330, column: 7, scope: !14265)
!14291 = !DILocation(line: 333, column: 15, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14288, file: !14168, line: 331, column: 3)
!14293 = !DILocation(line: 336, column: 9, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14292, file: !14168, line: 336, column: 9)
!14295 = !DILocation(line: 336, column: 30, scope: !14294)
!14296 = !DILocation(line: 336, column: 9, scope: !14292)
!14297 = !DILocation(line: 338, column: 7, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14294, file: !14168, line: 337, column: 5)
!14299 = !DILocation(line: 339, column: 7, scope: !14298)
!14300 = !DILocation(line: 339, column: 14, scope: !14298)
!14301 = !DILocation(line: 339, column: 35, scope: !14298)
!14302 = distinct !{!14302, !14299, !14303}
!14303 = !DILocation(line: 342, column: 7, scope: !14298)
!14304 = !DILocation(line: 346, column: 76, scope: !14292)
!14305 = !DILocation(line: 346, column: 105, scope: !14292)
!14306 = !DILocation(line: 346, column: 5, scope: !14292)
!14307 = !DILocation(line: 349, column: 14, scope: !14292)
!14308 = !DILocation(line: 350, column: 3, scope: !14292)
!14309 = !DILocation(line: 0, scope: !14288)
!14310 = !DILocation(line: 357, column: 3, scope: !14265)
!14311 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !14168, file: !14168, line: 487, type: !14312, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14314)
!14312 = !DISubroutineType(types: !14313)
!14313 = !{!14213}
!14314 = !{!14315}
!14315 = !DILocalVariable(name: "status", scope: !14311, file: !14168, line: 489, type: !14213)
!14316 = !DILocation(line: 0, scope: !14311)
!14317 = !DILocation(line: 492, column: 7, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14311, file: !14168, line: 492, column: 7)
!14319 = !DILocation(line: 492, column: 28, scope: !14318)
!14320 = !DILocation(line: 492, column: 7, scope: !14311)
!14321 = !DILocation(line: 498, column: 3, scope: !14311)
!14322 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !14168, file: !14168, line: 457, type: !14323, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14325)
!14323 = !DISubroutineType(types: !14324)
!14324 = !{!208, !208, !14268}
!14325 = !{!14326, !14327, !14328}
!14326 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !14322, file: !14168, line: 457, type: !208)
!14327 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !14322, file: !14168, line: 457, type: !14268)
!14328 = !DILocalVariable(name: "pllfreq", scope: !14322, file: !14168, line: 459, type: !208)
!14329 = !DILocation(line: 0, scope: !14322)
!14330 = !DILocation(line: 470, column: 68, scope: !14322)
!14331 = !DILocation(line: 470, column: 75, scope: !14322)
!14332 = !DILocation(line: 470, column: 35, scope: !14322)
!14333 = !DILocation(line: 470, column: 34, scope: !14322)
!14334 = !DILocation(line: 470, column: 32, scope: !14322)
!14335 = !DILocation(line: 475, column: 46, scope: !14322)
!14336 = !DILocation(line: 475, column: 53, scope: !14322)
!14337 = !DILocation(line: 475, column: 76, scope: !14322)
!14338 = !DILocation(line: 475, column: 21, scope: !14322)
!14339 = !DILocation(line: 478, column: 3, scope: !14322)
!14340 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10557, file: !10557, line: 612, type: !9251, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !652)
!14341 = !DILocation(line: 614, column: 12, scope: !14340)
!14342 = !DILocation(line: 614, column: 11, scope: !14340)
!14343 = !DILocation(line: 614, column: 3, scope: !14340)
!14344 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10557, file: !10557, line: 592, type: !3274, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !652)
!14345 = !DILocation(line: 594, column: 3, scope: !14344)
!14346 = !DILocation(line: 595, column: 1, scope: !14344)
!14347 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10557, file: !10557, line: 1219, type: !10680, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14348)
!14348 = !{!14349, !14350, !14351}
!14349 = !DILocalVariable(name: "Source", arg: 1, scope: !14347, file: !10557, line: 1219, type: !208)
!14350 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !14347, file: !10557, line: 1219, type: !208)
!14351 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !14347, file: !10557, line: 1219, type: !208)
!14352 = !DILocation(line: 0, scope: !14347)
!14353 = !DILocation(line: 1221, column: 3, scope: !14347)
!14354 = !DILocation(line: 1222, column: 1, scope: !14347)
!14355 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !14168, file: !14168, line: 510, type: !14356, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14358)
!14356 = !DISubroutineType(types: !14357)
!14357 = !{!14213, !208, !14274}
!14358 = !{!14359, !14360, !14361, !14362}
!14359 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !14355, file: !14168, line: 510, type: !208)
!14360 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14355, file: !14168, line: 510, type: !14274)
!14361 = !DILocalVariable(name: "status", scope: !14355, file: !14168, line: 512, type: !14213)
!14362 = !DILocalVariable(name: "hclk_frequency", scope: !14355, file: !14168, line: 513, type: !208)
!14363 = !DILocation(line: 0, scope: !14355)
!14364 = !DILocation(line: 520, column: 20, scope: !14355)
!14365 = !DILocation(line: 523, column: 7, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14355, file: !14168, line: 523, column: 7)
!14367 = !DILocation(line: 523, column: 23, scope: !14366)
!14368 = !DILocation(line: 523, column: 7, scope: !14355)
!14369 = !DILocation(line: 526, column: 14, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14366, file: !14168, line: 524, column: 3)
!14371 = !DILocation(line: 530, column: 14, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14355, file: !14168, line: 530, column: 7)
!14373 = !DILocation(line: 530, column: 7, scope: !14355)
!14374 = !DILocation(line: 533, column: 5, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14372, file: !14168, line: 531, column: 3)
!14376 = !DILocation(line: 534, column: 5, scope: !14375)
!14377 = !DILocation(line: 534, column: 12, scope: !14375)
!14378 = !DILocation(line: 534, column: 33, scope: !14375)
!14379 = distinct !{!14379, !14376, !14380}
!14380 = !DILocation(line: 537, column: 5, scope: !14375)
!14381 = !DILocation(line: 540, column: 49, scope: !14375)
!14382 = !DILocation(line: 540, column: 5, scope: !14375)
!14383 = !DILocation(line: 541, column: 5, scope: !14375)
!14384 = !DILocation(line: 542, column: 5, scope: !14375)
!14385 = !DILocation(line: 542, column: 12, scope: !14375)
!14386 = !DILocation(line: 542, column: 37, scope: !14375)
!14387 = distinct !{!14387, !14384, !14388}
!14388 = !DILocation(line: 545, column: 5, scope: !14375)
!14389 = !DILocation(line: 548, column: 50, scope: !14375)
!14390 = !DILocation(line: 548, column: 5, scope: !14375)
!14391 = !DILocation(line: 549, column: 50, scope: !14375)
!14392 = !DILocation(line: 549, column: 5, scope: !14375)
!14393 = !DILocation(line: 550, column: 3, scope: !14375)
!14394 = !DILocation(line: 553, column: 7, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14355, file: !14168, line: 553, column: 7)
!14396 = !DILocation(line: 553, column: 23, scope: !14395)
!14397 = !DILocation(line: 553, column: 7, scope: !14355)
!14398 = !DILocation(line: 556, column: 14, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14395, file: !14168, line: 554, column: 3)
!14400 = !DILocation(line: 557, column: 3, scope: !14399)
!14401 = !DILocation(line: 560, column: 14, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14355, file: !14168, line: 560, column: 7)
!14403 = !DILocation(line: 560, column: 7, scope: !14355)
!14404 = !DILocation(line: 562, column: 5, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14402, file: !14168, line: 561, column: 3)
!14406 = !DILocation(line: 563, column: 3, scope: !14405)
!14407 = !DILocation(line: 565, column: 3, scope: !14355)
!14408 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10557, file: !10557, line: 1169, type: !3274, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !652)
!14409 = !DILocation(line: 1171, column: 3, scope: !14408)
!14410 = !DILocation(line: 1172, column: 1, scope: !14408)
!14411 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10557, file: !10557, line: 1190, type: !9251, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !652)
!14412 = !DILocation(line: 1192, column: 12, scope: !14411)
!14413 = !DILocation(line: 1192, column: 11, scope: !14411)
!14414 = !DILocation(line: 1192, column: 3, scope: !14411)
!14415 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10557, file: !10557, line: 944, type: !6820, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14416)
!14416 = !{!14417}
!14417 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14415, file: !10557, line: 944, type: !208)
!14418 = !DILocation(line: 0, scope: !14415)
!14419 = !DILocation(line: 946, column: 3, scope: !14415)
!14420 = !DILocation(line: 947, column: 1, scope: !14415)
!14421 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10557, file: !10557, line: 910, type: !6820, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14422)
!14422 = !{!14423}
!14423 = !DILocalVariable(name: "Source", arg: 1, scope: !14421, file: !10557, line: 910, type: !208)
!14424 = !DILocation(line: 0, scope: !14421)
!14425 = !DILocation(line: 912, column: 3, scope: !14421)
!14426 = !DILocation(line: 913, column: 1, scope: !14421)
!14427 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10557, file: !10557, line: 924, type: !9251, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !652)
!14428 = !DILocation(line: 926, column: 21, scope: !14427)
!14429 = !DILocation(line: 926, column: 3, scope: !14427)
!14430 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10557, file: !10557, line: 960, type: !6820, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14431)
!14431 = !{!14432}
!14432 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14430, file: !10557, line: 960, type: !208)
!14433 = !DILocation(line: 0, scope: !14430)
!14434 = !DILocation(line: 962, column: 3, scope: !14430)
!14435 = !DILocation(line: 963, column: 1, scope: !14430)
!14436 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10557, file: !10557, line: 976, type: !6820, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14437)
!14437 = !{!14438}
!14438 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14436, file: !10557, line: 976, type: !208)
!14439 = !DILocation(line: 0, scope: !14436)
!14440 = !DILocation(line: 978, column: 3, scope: !14436)
!14441 = !DILocation(line: 979, column: 1, scope: !14436)
!14442 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !14168, file: !14168, line: 385, type: !14443, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !14445)
!14443 = !DISubroutineType(types: !14444)
!14444 = !{!14213, !208, !208, !14268, !14274}
!14445 = !{!14446, !14447, !14448, !14449, !14450, !14451}
!14446 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14442, file: !14168, line: 385, type: !208)
!14447 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14442, file: !14168, line: 385, type: !208)
!14448 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14442, file: !14168, line: 386, type: !14268)
!14449 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14442, file: !14168, line: 386, type: !14274)
!14450 = !DILocalVariable(name: "status", scope: !14442, file: !14168, line: 388, type: !14213)
!14451 = !DILocalVariable(name: "pllfreq", scope: !14442, file: !14168, line: 389, type: !208)
!14452 = !DILocation(line: 0, scope: !14442)
!14453 = !DILocation(line: 396, column: 7, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14442, file: !14168, line: 396, column: 7)
!14455 = !DILocation(line: 396, column: 26, scope: !14454)
!14456 = !DILocation(line: 396, column: 7, scope: !14442)
!14457 = !DILocation(line: 400, column: 15, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14454, file: !14168, line: 397, column: 3)
!14459 = !DILocation(line: 403, column: 9, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14458, file: !14168, line: 403, column: 9)
!14461 = !DILocation(line: 403, column: 30, scope: !14460)
!14462 = !DILocation(line: 403, column: 9, scope: !14458)
!14463 = !DILocation(line: 406, column: 21, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14465, file: !14168, line: 406, column: 11)
!14465 = distinct !DILexicalBlock(scope: !14460, file: !14168, line: 404, column: 5)
!14466 = !DILocation(line: 406, column: 11, scope: !14465)
!14467 = !DILocation(line: 408, column: 9, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14464, file: !14168, line: 407, column: 7)
!14469 = !DILocation(line: 409, column: 7, scope: !14468)
!14470 = !DILocation(line: 412, column: 9, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14464, file: !14168, line: 411, column: 7)
!14472 = !DILocation(line: 416, column: 7, scope: !14465)
!14473 = !DILocation(line: 417, column: 7, scope: !14465)
!14474 = !DILocation(line: 417, column: 14, scope: !14465)
!14475 = !DILocation(line: 417, column: 35, scope: !14465)
!14476 = distinct !{!14476, !14473, !14477}
!14477 = !DILocation(line: 420, column: 7, scope: !14465)
!14478 = !DILocation(line: 424, column: 78, scope: !14458)
!14479 = !DILocation(line: 424, column: 107, scope: !14458)
!14480 = !DILocation(line: 424, column: 7, scope: !14458)
!14481 = !DILocation(line: 427, column: 14, scope: !14458)
!14482 = !DILocation(line: 428, column: 3, scope: !14458)
!14483 = !DILocation(line: 0, scope: !14454)
!14484 = !DILocation(line: 435, column: 3, scope: !14442)
!14485 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10557, file: !10557, line: 545, type: !9251, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !652)
!14486 = !DILocation(line: 547, column: 12, scope: !14485)
!14487 = !DILocation(line: 547, column: 11, scope: !14485)
!14488 = !DILocation(line: 547, column: 3, scope: !14485)
!14489 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10557, file: !10557, line: 505, type: !3274, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !652)
!14490 = !DILocation(line: 507, column: 3, scope: !14489)
!14491 = !DILocation(line: 508, column: 1, scope: !14489)
!14492 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10557, file: !10557, line: 515, type: !3274, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !652)
!14493 = !DILocation(line: 517, column: 3, scope: !14492)
!14494 = !DILocation(line: 518, column: 1, scope: !14492)
!14495 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10557, file: !10557, line: 525, type: !3274, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !652)
!14496 = !DILocation(line: 527, column: 3, scope: !14495)
!14497 = !DILocation(line: 528, column: 1, scope: !14495)
!14498 = distinct !DISubprogram(name: "z_device_state_init", scope: !14499, file: !14499, line: 23, type: !3274, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3234, retainedNodes: !14500)
!14499 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14500 = !{!14501}
!14501 = !DILocalVariable(name: "dev", scope: !14498, file: !14499, line: 25, type: !14502)
!14502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14503, size: 32)
!14503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14504)
!14504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !14505)
!14505 = !{!14506, !14507, !14508, !14509, !14515, !14516}
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14504, file: !137, line: 380, baseType: !140, size: 32)
!14507 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14504, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!14508 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14504, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!14509 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14504, file: !137, line: 386, baseType: !14510, size: 32, offset: 96)
!14510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14511, size: 32)
!14511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !14512)
!14512 = !{!14513, !14514}
!14513 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14511, file: !137, line: 359, baseType: !150, size: 8)
!14514 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14511, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14515 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14504, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!14516 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14504, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!14517 = !DILocation(line: 0, scope: !14498)
!14518 = !DILocation(line: 31, column: 1, scope: !14498)
!14519 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14499, file: !14499, line: 33, type: !14520, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3234, retainedNodes: !14522)
!14520 = !DISubroutineType(types: !14521)
!14521 = !{!14502, !140}
!14522 = !{!14523, !14524}
!14523 = !DILocalVariable(name: "name", arg: 1, scope: !14519, file: !14499, line: 33, type: !140)
!14524 = !DILocalVariable(name: "dev", scope: !14519, file: !14499, line: 35, type: !14502)
!14525 = !DILocation(line: 0, scope: !14519)
!14526 = !DILocation(line: 40, column: 12, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14519, file: !14499, line: 40, column: 6)
!14528 = !DILocation(line: 40, column: 21, scope: !14527)
!14529 = !DILocation(line: 40, column: 25, scope: !14527)
!14530 = !DILocation(line: 40, column: 33, scope: !14527)
!14531 = !DILocation(line: 40, column: 6, scope: !14519)
!14532 = !DILocation(line: 55, column: 2, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14519, file: !14499, line: 55, column: 2)
!14534 = !DILocation(line: 50, column: 7, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14536, file: !14499, line: 50, column: 7)
!14536 = distinct !DILexicalBlock(scope: !14537, file: !14499, line: 49, column: 57)
!14537 = distinct !DILexicalBlock(scope: !14538, file: !14499, line: 49, column: 2)
!14538 = distinct !DILexicalBlock(scope: !14519, file: !14499, line: 49, column: 2)
!14539 = !DILocation(line: 50, column: 30, scope: !14535)
!14540 = !DILocation(line: 50, column: 39, scope: !14535)
!14541 = !DILocation(line: 50, column: 44, scope: !14535)
!14542 = !DILocation(line: 50, column: 7, scope: !14536)
!14543 = !DILocation(line: 49, column: 53, scope: !14537)
!14544 = !DILocation(line: 49, column: 33, scope: !14537)
!14545 = !DILocation(line: 49, column: 2, scope: !14538)
!14546 = distinct !{!14546, !14545, !14547}
!14547 = !DILocation(line: 53, column: 2, scope: !14538)
!14548 = !DILocation(line: 56, column: 7, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14550, file: !14499, line: 56, column: 7)
!14550 = distinct !DILexicalBlock(scope: !14551, file: !14499, line: 55, column: 57)
!14551 = distinct !DILexicalBlock(scope: !14533, file: !14499, line: 55, column: 2)
!14552 = !DILocation(line: 56, column: 30, scope: !14549)
!14553 = !DILocation(line: 56, column: 52, scope: !14549)
!14554 = !DILocation(line: 56, column: 34, scope: !14549)
!14555 = !DILocation(line: 56, column: 58, scope: !14549)
!14556 = !DILocation(line: 56, column: 7, scope: !14550)
!14557 = !DILocation(line: 55, column: 53, scope: !14551)
!14558 = !DILocation(line: 55, column: 33, scope: !14551)
!14559 = distinct !{!14559, !14532, !14560}
!14560 = !DILocation(line: 59, column: 2, scope: !14533)
!14561 = !DILocation(line: 62, column: 1, scope: !14519)
!14562 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14499, file: !14499, line: 93, type: !14563, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3234, retainedNodes: !14565)
!14563 = !DISubroutineType(types: !14564)
!14564 = !{!153, !14502}
!14565 = !{!14566}
!14566 = !DILocalVariable(name: "dev", arg: 1, scope: !14562, file: !14499, line: 93, type: !14502)
!14567 = !DILocation(line: 0, scope: !14562)
!14568 = !DILocation(line: 99, column: 10, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14562, file: !14499, line: 99, column: 6)
!14570 = !DILocation(line: 99, column: 6, scope: !14562)
!14571 = !DILocation(line: 103, column: 14, scope: !14562)
!14572 = !DILocation(line: 103, column: 21, scope: !14562)
!14573 = !DILocation(line: 103, column: 33, scope: !14562)
!14574 = !DILocation(line: 103, column: 49, scope: !14562)
!14575 = !DILocation(line: 103, column: 58, scope: !14562)
!14576 = !DILocation(line: 104, column: 1, scope: !14562)
!14577 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14499, file: !14499, line: 87, type: !14578, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3234, retainedNodes: !14581)
!14578 = !DISubroutineType(types: !14579)
!14579 = !{!272, !14580}
!14580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14502, size: 32)
!14581 = !{!14582}
!14582 = !DILocalVariable(name: "devices", arg: 1, scope: !14577, file: !14499, line: 87, type: !14580)
!14583 = !DILocation(line: 0, scope: !14577)
!14584 = !DILocation(line: 89, column: 11, scope: !14577)
!14585 = !DILocation(line: 90, column: 2, scope: !14577)
!14586 = distinct !DISubprogram(name: "device_required_foreach", scope: !14499, file: !14499, line: 125, type: !14587, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3234, retainedNodes: !14593)
!14587 = !DISubroutineType(types: !14588)
!14588 = !{!125, !14502, !14589, !124}
!14589 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !137, line: 471, baseType: !14590)
!14590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14591, size: 32)
!14591 = !DISubroutineType(types: !14592)
!14592 = !{!125, !14502, !124}
!14593 = !{!14594, !14595, !14596, !14597, !14598}
!14594 = !DILocalVariable(name: "dev", arg: 1, scope: !14586, file: !14499, line: 125, type: !14502)
!14595 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14586, file: !14499, line: 126, type: !14589)
!14596 = !DILocalVariable(name: "context", arg: 3, scope: !14586, file: !14499, line: 127, type: !124)
!14597 = !DILocalVariable(name: "handle_count", scope: !14586, file: !14499, line: 129, type: !272)
!14598 = !DILocalVariable(name: "handles", scope: !14586, file: !14499, line: 130, type: !156)
!14599 = !DILocation(line: 0, scope: !14586)
!14600 = !DILocation(line: 129, column: 2, scope: !14586)
!14601 = !DILocation(line: 129, column: 9, scope: !14586)
!14602 = !DILocation(line: 130, column: 35, scope: !14586)
!14603 = !DILocation(line: 132, column: 33, scope: !14586)
!14604 = !DILocation(line: 132, column: 9, scope: !14586)
!14605 = !DILocation(line: 133, column: 1, scope: !14586)
!14606 = !DILocation(line: 132, column: 2, scope: !14586)
!14607 = distinct !DISubprogram(name: "device_required_handles_get", scope: !137, file: !137, line: 493, type: !14608, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3234, retainedNodes: !14610)
!14608 = !DISubroutineType(types: !14609)
!14609 = !{!156, !14502, !2741}
!14610 = !{!14611, !14612, !14613, !14614}
!14611 = !DILocalVariable(name: "dev", arg: 1, scope: !14607, file: !137, line: 493, type: !14502)
!14612 = !DILocalVariable(name: "count", arg: 2, scope: !14607, file: !137, line: 493, type: !2741)
!14613 = !DILocalVariable(name: "rv", scope: !14607, file: !137, line: 495, type: !156)
!14614 = !DILocalVariable(name: "i", scope: !14615, file: !137, line: 498, type: !272)
!14615 = distinct !DILexicalBlock(scope: !14616, file: !137, line: 497, column: 18)
!14616 = distinct !DILexicalBlock(scope: !14607, file: !137, line: 497, column: 6)
!14617 = !DILocation(line: 0, scope: !14607)
!14618 = !DILocation(line: 495, column: 35, scope: !14607)
!14619 = !DILocation(line: 497, column: 9, scope: !14616)
!14620 = !DILocation(line: 497, column: 6, scope: !14607)
!14621 = !DILocation(line: 0, scope: !14615)
!14622 = !DILocation(line: 500, column: 11, scope: !14615)
!14623 = !DILocation(line: 500, column: 40, scope: !14615)
!14624 = !DILocation(line: 502, column: 4, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14615, file: !137, line: 501, column: 40)
!14626 = distinct !{!14626, !14627, !14628}
!14627 = !DILocation(line: 500, column: 3, scope: !14615)
!14628 = !DILocation(line: 503, column: 3, scope: !14615)
!14629 = !DILocation(line: 504, column: 10, scope: !14615)
!14630 = !DILocation(line: 505, column: 2, scope: !14615)
!14631 = !DILocation(line: 507, column: 2, scope: !14607)
!14632 = distinct !DISubprogram(name: "device_visitor", scope: !14499, file: !14499, line: 106, type: !14633, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3234, retainedNodes: !14635)
!14633 = !DISubroutineType(types: !14634)
!14634 = !{!125, !156, !272, !14589, !124}
!14635 = !{!14636, !14637, !14638, !14639, !14640, !14642, !14645, !14646}
!14636 = !DILocalVariable(name: "handles", arg: 1, scope: !14632, file: !14499, line: 106, type: !156)
!14637 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14632, file: !14499, line: 107, type: !272)
!14638 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14632, file: !14499, line: 108, type: !14589)
!14639 = !DILocalVariable(name: "context", arg: 4, scope: !14632, file: !14499, line: 109, type: !124)
!14640 = !DILocalVariable(name: "i", scope: !14641, file: !14499, line: 112, type: !272)
!14641 = distinct !DILexicalBlock(scope: !14632, file: !14499, line: 112, column: 2)
!14642 = !DILocalVariable(name: "dh", scope: !14643, file: !14499, line: 113, type: !158)
!14643 = distinct !DILexicalBlock(scope: !14644, file: !14499, line: 112, column: 44)
!14644 = distinct !DILexicalBlock(scope: !14641, file: !14499, line: 112, column: 2)
!14645 = !DILocalVariable(name: "rdev", scope: !14643, file: !14499, line: 114, type: !14502)
!14646 = !DILocalVariable(name: "rc", scope: !14643, file: !14499, line: 115, type: !125)
!14647 = !DILocation(line: 0, scope: !14632)
!14648 = !DILocation(line: 0, scope: !14641)
!14649 = !DILocation(line: 112, column: 23, scope: !14644)
!14650 = !DILocation(line: 112, column: 2, scope: !14641)
!14651 = distinct !{!14651, !14650, !14652}
!14652 = !DILocation(line: 120, column: 2, scope: !14641)
!14653 = !DILocation(line: 113, column: 24, scope: !14643)
!14654 = !DILocation(line: 0, scope: !14643)
!14655 = !DILocation(line: 114, column: 31, scope: !14643)
!14656 = !DILocation(line: 115, column: 12, scope: !14643)
!14657 = !DILocation(line: 117, column: 10, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14643, file: !14499, line: 117, column: 7)
!14659 = !DILocation(line: 112, column: 39, scope: !14644)
!14660 = !DILocation(line: 123, column: 1, scope: !14632)
!14661 = distinct !DISubprogram(name: "device_from_handle", scope: !137, file: !137, line: 439, type: !14662, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3234, retainedNodes: !14664)
!14662 = !DISubroutineType(types: !14663)
!14663 = !{!14502, !158}
!14664 = !{!14665, !14666, !14667}
!14665 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14661, file: !137, line: 439, type: !158)
!14666 = !DILocalVariable(name: "dev", scope: !14661, file: !137, line: 443, type: !14502)
!14667 = !DILocalVariable(name: "numdev", scope: !14661, file: !137, line: 444, type: !272)
!14668 = !DILocation(line: 0, scope: !14661)
!14669 = !DILocation(line: 446, column: 7, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14661, file: !137, line: 446, column: 6)
!14671 = !DILocation(line: 446, column: 18, scope: !14670)
!14672 = !DILocation(line: 446, column: 23, scope: !14670)
!14673 = !DILocation(line: 450, column: 2, scope: !14661)
!14674 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14499, file: !14499, line: 135, type: !14587, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3234, retainedNodes: !14675)
!14675 = !{!14676, !14677, !14678, !14679, !14680}
!14676 = !DILocalVariable(name: "dev", arg: 1, scope: !14674, file: !14499, line: 135, type: !14502)
!14677 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14674, file: !14499, line: 136, type: !14589)
!14678 = !DILocalVariable(name: "context", arg: 3, scope: !14674, file: !14499, line: 137, type: !124)
!14679 = !DILocalVariable(name: "handle_count", scope: !14674, file: !14499, line: 139, type: !272)
!14680 = !DILocalVariable(name: "handles", scope: !14674, file: !14499, line: 140, type: !156)
!14681 = !DILocation(line: 0, scope: !14674)
!14682 = !DILocation(line: 139, column: 2, scope: !14674)
!14683 = !DILocation(line: 139, column: 9, scope: !14674)
!14684 = !DILocation(line: 140, column: 35, scope: !14674)
!14685 = !DILocation(line: 142, column: 33, scope: !14674)
!14686 = !DILocation(line: 142, column: 9, scope: !14674)
!14687 = !DILocation(line: 143, column: 1, scope: !14674)
!14688 = !DILocation(line: 142, column: 2, scope: !14674)
!14689 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !137, file: !137, line: 573, type: !14608, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3234, retainedNodes: !14690)
!14690 = !{!14691, !14692, !14693, !14694, !14695}
!14691 = !DILocalVariable(name: "dev", arg: 1, scope: !14689, file: !137, line: 573, type: !14502)
!14692 = !DILocalVariable(name: "count", arg: 2, scope: !14689, file: !137, line: 573, type: !2741)
!14693 = !DILocalVariable(name: "rv", scope: !14689, file: !137, line: 575, type: !156)
!14694 = !DILocalVariable(name: "region", scope: !14689, file: !137, line: 576, type: !272)
!14695 = !DILocalVariable(name: "i", scope: !14689, file: !137, line: 577, type: !272)
!14696 = !DILocation(line: 0, scope: !14689)
!14697 = !DILocation(line: 575, column: 35, scope: !14689)
!14698 = !DILocation(line: 579, column: 9, scope: !14699)
!14699 = distinct !DILexicalBlock(scope: !14689, file: !137, line: 579, column: 6)
!14700 = !DILocation(line: 579, column: 6, scope: !14689)
!14701 = !DILocation(line: 582, column: 8, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14703, file: !137, line: 582, column: 8)
!14703 = distinct !DILexicalBlock(scope: !14704, file: !137, line: 581, column: 23)
!14704 = distinct !DILexicalBlock(scope: !14699, file: !137, line: 579, column: 18)
!14705 = !DILocation(line: 582, column: 12, scope: !14702)
!14706 = !DILocation(line: 585, column: 6, scope: !14703)
!14707 = !DILocation(line: 0, scope: !14704)
!14708 = !DILocation(line: 581, column: 17, scope: !14704)
!14709 = !DILocation(line: 581, column: 3, scope: !14704)
!14710 = !DILocation(line: 588, column: 10, scope: !14704)
!14711 = !DILocation(line: 588, column: 16, scope: !14704)
!14712 = !DILocation(line: 589, column: 4, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14704, file: !137, line: 588, column: 39)
!14714 = !DILocation(line: 588, column: 3, scope: !14704)
!14715 = distinct !{!14715, !14714, !14716}
!14716 = !DILocation(line: 590, column: 3, scope: !14704)
!14717 = !DILocation(line: 591, column: 10, scope: !14704)
!14718 = !DILocation(line: 592, column: 2, scope: !14704)
!14719 = !DILocation(line: 575, column: 25, scope: !14689)
!14720 = !DILocation(line: 594, column: 2, scope: !14689)
!14721 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2160, file: !2160, line: 49, type: !14722, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2157, retainedNodes: !652)
!14722 = !DISubroutineType(types: !14723)
!14723 = !{!387}
!14724 = !DILocation(line: 51, column: 10, scope: !14721)
!14725 = !DILocation(line: 51, column: 20, scope: !14721)
!14726 = !DILocation(line: 51, column: 2, scope: !14721)
!14727 = distinct !DISubprogram(name: "coredump", scope: !3241, file: !3241, line: 209, type: !14728, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14874)
!14728 = !DISubroutineType(types: !14729)
!14729 = !{null, !32, !14730, !14774}
!14730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14731, size: 32)
!14731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14732)
!14732 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2903, line: 141, baseType: !14733)
!14733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2903, line: 97, size: 256, elements: !14734)
!14734 = !{!14735}
!14735 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14733, file: !2903, line: 107, baseType: !14736, size: 256)
!14736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2903, line: 98, size: 256, elements: !14737)
!14737 = !{!14738, !14743, !14748, !14753, !14758, !14763, !14768, !14773}
!14738 = !DIDerivedType(tag: DW_TAG_member, scope: !14736, file: !2903, line: 99, baseType: !14739, size: 32)
!14739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14736, file: !2903, line: 99, size: 32, elements: !14740)
!14740 = !{!14741, !14742}
!14741 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14739, file: !2903, line: 99, baseType: !208, size: 32)
!14742 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14739, file: !2903, line: 99, baseType: !208, size: 32)
!14743 = !DIDerivedType(tag: DW_TAG_member, scope: !14736, file: !2903, line: 100, baseType: !14744, size: 32, offset: 32)
!14744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14736, file: !2903, line: 100, size: 32, elements: !14745)
!14745 = !{!14746, !14747}
!14746 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14744, file: !2903, line: 100, baseType: !208, size: 32)
!14747 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14744, file: !2903, line: 100, baseType: !208, size: 32)
!14748 = !DIDerivedType(tag: DW_TAG_member, scope: !14736, file: !2903, line: 101, baseType: !14749, size: 32, offset: 64)
!14749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14736, file: !2903, line: 101, size: 32, elements: !14750)
!14750 = !{!14751, !14752}
!14751 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14749, file: !2903, line: 101, baseType: !208, size: 32)
!14752 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14749, file: !2903, line: 101, baseType: !208, size: 32)
!14753 = !DIDerivedType(tag: DW_TAG_member, scope: !14736, file: !2903, line: 102, baseType: !14754, size: 32, offset: 96)
!14754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14736, file: !2903, line: 102, size: 32, elements: !14755)
!14755 = !{!14756, !14757}
!14756 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14754, file: !2903, line: 102, baseType: !208, size: 32)
!14757 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14754, file: !2903, line: 102, baseType: !208, size: 32)
!14758 = !DIDerivedType(tag: DW_TAG_member, scope: !14736, file: !2903, line: 103, baseType: !14759, size: 32, offset: 128)
!14759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14736, file: !2903, line: 103, size: 32, elements: !14760)
!14760 = !{!14761, !14762}
!14761 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14759, file: !2903, line: 103, baseType: !208, size: 32)
!14762 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14759, file: !2903, line: 103, baseType: !208, size: 32)
!14763 = !DIDerivedType(tag: DW_TAG_member, scope: !14736, file: !2903, line: 104, baseType: !14764, size: 32, offset: 160)
!14764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14736, file: !2903, line: 104, size: 32, elements: !14765)
!14765 = !{!14766, !14767}
!14766 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14764, file: !2903, line: 104, baseType: !208, size: 32)
!14767 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14764, file: !2903, line: 104, baseType: !208, size: 32)
!14768 = !DIDerivedType(tag: DW_TAG_member, scope: !14736, file: !2903, line: 105, baseType: !14769, size: 32, offset: 192)
!14769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14736, file: !2903, line: 105, size: 32, elements: !14770)
!14770 = !{!14771, !14772}
!14771 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14769, file: !2903, line: 105, baseType: !208, size: 32)
!14772 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14769, file: !2903, line: 105, baseType: !208, size: 32)
!14773 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14736, file: !2903, line: 106, baseType: !208, size: 32, offset: 224)
!14774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14775, size: 32)
!14775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !544, line: 245, size: 1024, elements: !14776)
!14776 = !{!14777, !14835, !14847, !14848, !14849, !14850, !14856, !14869}
!14777 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14775, file: !544, line: 247, baseType: !14778, size: 384)
!14778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !544, line: 57, size: 384, elements: !14779)
!14779 = !{!14780, !14804, !14811, !14812, !14813, !14822, !14823, !14824}
!14780 = !DIDerivedType(tag: DW_TAG_member, scope: !14778, file: !544, line: 60, baseType: !14781, size: 64)
!14781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14778, file: !544, line: 60, size: 64, elements: !14782)
!14782 = !{!14783, !14798}
!14783 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14781, file: !544, line: 61, baseType: !14784, size: 64)
!14784 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !554, line: 49, baseType: !14785)
!14785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !554, line: 37, size: 64, elements: !14786)
!14786 = !{!14787, !14793}
!14787 = !DIDerivedType(tag: DW_TAG_member, scope: !14785, file: !554, line: 38, baseType: !14788, size: 32)
!14788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14785, file: !554, line: 38, size: 32, elements: !14789)
!14789 = !{!14790, !14792}
!14790 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14788, file: !554, line: 39, baseType: !14791, size: 32)
!14791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14785, size: 32)
!14792 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14788, file: !554, line: 40, baseType: !14791, size: 32)
!14793 = !DIDerivedType(tag: DW_TAG_member, scope: !14785, file: !554, line: 42, baseType: !14794, size: 32, offset: 32)
!14794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14785, file: !554, line: 42, size: 32, elements: !14795)
!14795 = !{!14796, !14797}
!14796 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14794, file: !554, line: 43, baseType: !14791, size: 32)
!14797 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14794, file: !554, line: 44, baseType: !14791, size: 32)
!14798 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14781, file: !544, line: 62, baseType: !14799, size: 64)
!14799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !570, line: 49, size: 64, elements: !14800)
!14800 = !{!14801}
!14801 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14799, file: !570, line: 50, baseType: !14802, size: 64)
!14802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14803, size: 64, elements: !575)
!14803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14799, size: 32)
!14804 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14778, file: !544, line: 68, baseType: !14805, size: 32, offset: 64)
!14805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14806, size: 32)
!14806 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !580, line: 233, baseType: !14807)
!14807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !580, line: 231, size: 64, elements: !14808)
!14808 = !{!14809}
!14809 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14807, file: !580, line: 232, baseType: !14810, size: 64)
!14810 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !554, line: 48, baseType: !14785)
!14811 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14778, file: !544, line: 71, baseType: !150, size: 8, offset: 96)
!14812 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14778, file: !544, line: 74, baseType: !150, size: 8, offset: 104)
!14813 = !DIDerivedType(tag: DW_TAG_member, scope: !14778, file: !544, line: 90, baseType: !14814, size: 16, offset: 112)
!14814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14778, file: !544, line: 90, size: 16, elements: !14815)
!14815 = !{!14816, !14821}
!14816 = !DIDerivedType(tag: DW_TAG_member, scope: !14814, file: !544, line: 91, baseType: !14817, size: 16)
!14817 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14814, file: !544, line: 91, size: 16, elements: !14818)
!14818 = !{!14819, !14820}
!14819 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14817, file: !544, line: 96, baseType: !594, size: 8)
!14820 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14817, file: !544, line: 97, baseType: !150, size: 8, offset: 8)
!14821 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14814, file: !544, line: 100, baseType: !227, size: 16)
!14822 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14778, file: !544, line: 107, baseType: !208, size: 32, offset: 128)
!14823 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14778, file: !544, line: 127, baseType: !124, size: 32, offset: 160)
!14824 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14778, file: !544, line: 131, baseType: !14825, size: 192, offset: 192)
!14825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !580, line: 244, size: 192, elements: !14826)
!14826 = !{!14827, !14828, !14834}
!14827 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14825, file: !580, line: 245, baseType: !14784, size: 64)
!14828 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14825, file: !580, line: 246, baseType: !14829, size: 32, offset: 64)
!14829 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !580, line: 242, baseType: !14830)
!14830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14831, size: 32)
!14831 = !DISubroutineType(types: !14832)
!14832 = !{null, !14833}
!14833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14825, size: 32)
!14834 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14825, file: !580, line: 249, baseType: !611, size: 64, offset: 128)
!14835 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14775, file: !544, line: 250, baseType: !14836, size: 288, offset: 384)
!14836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !614, line: 25, size: 288, elements: !14837)
!14837 = !{!14838, !14839, !14840, !14841, !14842, !14843, !14844, !14845, !14846}
!14838 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14836, file: !614, line: 26, baseType: !208, size: 32)
!14839 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14836, file: !614, line: 27, baseType: !208, size: 32, offset: 32)
!14840 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14836, file: !614, line: 28, baseType: !208, size: 32, offset: 64)
!14841 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14836, file: !614, line: 29, baseType: !208, size: 32, offset: 96)
!14842 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14836, file: !614, line: 30, baseType: !208, size: 32, offset: 128)
!14843 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14836, file: !614, line: 31, baseType: !208, size: 32, offset: 160)
!14844 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14836, file: !614, line: 32, baseType: !208, size: 32, offset: 192)
!14845 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14836, file: !614, line: 33, baseType: !208, size: 32, offset: 224)
!14846 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14836, file: !614, line: 34, baseType: !208, size: 32, offset: 256)
!14847 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14775, file: !544, line: 253, baseType: !124, size: 32, offset: 672)
!14848 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14775, file: !544, line: 256, baseType: !14806, size: 64, offset: 704)
!14849 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14775, file: !544, line: 294, baseType: !125, size: 32, offset: 768)
!14850 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14775, file: !544, line: 300, baseType: !14851, size: 96, offset: 800)
!14851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !544, line: 149, size: 96, elements: !14852)
!14852 = !{!14853, !14854, !14855}
!14853 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14851, file: !544, line: 153, baseType: !22, size: 32)
!14854 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14851, file: !544, line: 162, baseType: !272, size: 32, offset: 32)
!14855 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14851, file: !544, line: 168, baseType: !272, size: 32, offset: 64)
!14856 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14775, file: !544, line: 325, baseType: !14857, size: 32, offset: 896)
!14857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14858, size: 32)
!14858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !637, line: 5073, size: 160, elements: !14859)
!14859 = !{!14860, !14866, !14867}
!14860 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14858, file: !637, line: 5074, baseType: !14861, size: 96)
!14861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !641, line: 56, size: 96, elements: !14862)
!14862 = !{!14863, !14864, !14865}
!14863 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14861, file: !641, line: 57, baseType: !644, size: 32)
!14864 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14861, file: !641, line: 58, baseType: !124, size: 32, offset: 32)
!14865 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14861, file: !641, line: 59, baseType: !272, size: 32, offset: 64)
!14866 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14858, file: !637, line: 5075, baseType: !14806, size: 64, offset: 96)
!14867 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14858, file: !637, line: 5076, baseType: !14868, offset: 160)
!14868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !651, line: 43, elements: !652)
!14869 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14775, file: !544, line: 343, baseType: !14870, size: 64, offset: 928)
!14870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !614, line: 60, size: 64, elements: !14871)
!14871 = !{!14872, !14873}
!14872 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14870, file: !614, line: 63, baseType: !208, size: 32)
!14873 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14870, file: !614, line: 66, baseType: !208, size: 32, offset: 32)
!14874 = !{!14875, !14876, !14877}
!14875 = !DILocalVariable(name: "reason", arg: 1, scope: !14727, file: !3241, line: 209, type: !32)
!14876 = !DILocalVariable(name: "esf", arg: 2, scope: !14727, file: !3241, line: 209, type: !14730)
!14877 = !DILocalVariable(name: "thread", arg: 3, scope: !14727, file: !3241, line: 210, type: !14774)
!14878 = !DILocation(line: 0, scope: !14727)
!14879 = !DILocation(line: 212, column: 1, scope: !14727)
!14880 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3241, file: !3241, line: 214, type: !14881, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14883)
!14881 = !DISubroutineType(types: !14882)
!14882 = !{null, !22, !22}
!14883 = !{!14884, !14885}
!14884 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14880, file: !3241, line: 214, type: !22)
!14885 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14880, file: !3241, line: 214, type: !22)
!14886 = !DILocation(line: 0, scope: !14880)
!14887 = !DILocation(line: 216, column: 1, scope: !14880)
!14888 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3241, file: !3241, line: 218, type: !14889, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14891)
!14889 = !DISubroutineType(types: !14890)
!14890 = !{null, !184, !272}
!14891 = !{!14892, !14893}
!14892 = !DILocalVariable(name: "buf", arg: 1, scope: !14888, file: !3241, line: 218, type: !184)
!14893 = !DILocalVariable(name: "buflen", arg: 2, scope: !14888, file: !3241, line: 218, type: !272)
!14894 = !DILocation(line: 0, scope: !14888)
!14895 = !DILocation(line: 220, column: 1, scope: !14888)
!14896 = distinct !DISubprogram(name: "coredump_query", scope: !3241, file: !3241, line: 222, type: !14897, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14899)
!14897 = !DISubroutineType(types: !14898)
!14898 = !{!125, !3240, !124}
!14899 = !{!14900, !14901}
!14900 = !DILocalVariable(name: "query_id", arg: 1, scope: !14896, file: !3241, line: 222, type: !3240)
!14901 = !DILocalVariable(name: "arg", arg: 2, scope: !14896, file: !3241, line: 222, type: !124)
!14902 = !DILocation(line: 0, scope: !14896)
!14903 = !DILocation(line: 224, column: 2, scope: !14896)
!14904 = distinct !DISubprogram(name: "coredump_cmd", scope: !3241, file: !3241, line: 227, type: !14905, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14907)
!14905 = !DISubroutineType(types: !14906)
!14906 = !{!125, !3247, !124}
!14907 = !{!14908, !14909}
!14908 = !DILocalVariable(name: "query_id", arg: 1, scope: !14904, file: !3241, line: 227, type: !3247)
!14909 = !DILocalVariable(name: "arg", arg: 2, scope: !14904, file: !3241, line: 227, type: !124)
!14910 = !DILocation(line: 0, scope: !14904)
!14911 = !DILocation(line: 229, column: 2, scope: !14904)
!14912 = distinct !DISubprogram(name: "arch_system_halt", scope: !14913, file: !14913, line: 23, type: !6807, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14914)
!14913 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14914 = !{!14915}
!14915 = !DILocalVariable(name: "reason", arg: 1, scope: !14912, file: !14913, line: 23, type: !32)
!14916 = !DILocation(line: 0, scope: !14912)
!14917 = !DILocation(line: 55, column: 2, scope: !14918, inlinedAt: !14922)
!14918 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6796, file: !6796, line: 42, type: !6797, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14919)
!14919 = !{!14920, !14921}
!14920 = !DILocalVariable(name: "key", scope: !14918, file: !6796, line: 44, type: !32)
!14921 = !DILocalVariable(name: "tmp", scope: !14918, file: !6796, line: 53, type: !32)
!14922 = distinct !DILocation(line: 31, column: 8, scope: !14912)
!14923 = !{i64 1652125}
!14924 = !DILocation(line: 0, scope: !14918, inlinedAt: !14922)
!14925 = !DILocation(line: 32, column: 2, scope: !14912)
!14926 = !DILocation(line: 32, column: 2, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14928, file: !14913, line: 32, column: 2)
!14928 = distinct !DILexicalBlock(scope: !14912, file: !14913, line: 32, column: 2)
!14929 = distinct !{!14929, !14930, !14931}
!14930 = !DILocation(line: 32, column: 2, scope: !14928)
!14931 = !DILocation(line: 34, column: 2, scope: !14928)
!14932 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14913, file: !14913, line: 39, type: !14933, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14935)
!14933 = !DISubroutineType(types: !14934)
!14934 = !{null, !32, !14730}
!14935 = !{!14936, !14937}
!14936 = !DILocalVariable(name: "reason", arg: 1, scope: !14932, file: !14913, line: 39, type: !32)
!14937 = !DILocalVariable(name: "esf", arg: 2, scope: !14932, file: !14913, line: 40, type: !14730)
!14938 = !DILocation(line: 0, scope: !14932)
!14939 = !DILocation(line: 45, column: 2, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14941, file: !14913, line: 45, column: 2)
!14941 = distinct !DILexicalBlock(scope: !14942, file: !14913, line: 45, column: 2)
!14942 = distinct !DILexicalBlock(scope: !14943, file: !14913, line: 45, column: 2)
!14943 = distinct !DILexicalBlock(scope: !14932, file: !14913, line: 45, column: 2)
!14944 = !DILocation(line: 46, column: 2, scope: !14932)
!14945 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14913, file: !14913, line: 81, type: !6807, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14946)
!14946 = !{!14947}
!14947 = !DILocalVariable(name: "reason", arg: 1, scope: !14945, file: !14913, line: 81, type: !32)
!14948 = !DILocation(line: 0, scope: !14945)
!14949 = !DILocation(line: 83, column: 2, scope: !14945)
!14950 = distinct !DISubprogram(name: "z_fatal_error", scope: !14913, file: !14913, line: 96, type: !14933, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14951)
!14951 = !{!14952, !14953, !14954, !14955}
!14952 = !DILocalVariable(name: "reason", arg: 1, scope: !14950, file: !14913, line: 96, type: !32)
!14953 = !DILocalVariable(name: "esf", arg: 2, scope: !14950, file: !14913, line: 96, type: !14730)
!14954 = !DILocalVariable(name: "key", scope: !14950, file: !14913, line: 102, type: !32)
!14955 = !DILocalVariable(name: "thread", scope: !14950, file: !14913, line: 103, type: !14774)
!14956 = !DILocation(line: 0, scope: !14950)
!14957 = !DILocation(line: 55, column: 2, scope: !14918, inlinedAt: !14958)
!14958 = distinct !DILocation(line: 102, column: 21, scope: !14950)
!14959 = !DILocation(line: 0, scope: !14918, inlinedAt: !14958)
!14960 = !DILocation(line: 104, column: 4, scope: !14950)
!14961 = !DILocation(line: 109, column: 2, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14963, file: !14913, line: 109, column: 2)
!14963 = distinct !DILexicalBlock(scope: !14964, file: !14913, line: 109, column: 2)
!14964 = distinct !DILexicalBlock(scope: !14965, file: !14913, line: 109, column: 2)
!14965 = distinct !DILexicalBlock(scope: !14950, file: !14913, line: 109, column: 2)
!14966 = !DILocation(line: 119, column: 11, scope: !14967)
!14967 = distinct !DILexicalBlock(scope: !14950, file: !14913, line: 119, column: 6)
!14968 = !DILocation(line: 119, column: 20, scope: !14967)
!14969 = !DILocalVariable(name: "esf", arg: 1, scope: !14970, file: !9257, line: 71, type: !14730)
!14970 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !9257, file: !9257, line: 71, type: !14971, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !14973)
!14971 = !DISubroutineType(types: !14972)
!14972 = !{!153, !14730}
!14973 = !{!14969}
!14974 = !DILocation(line: 0, scope: !14970, inlinedAt: !14975)
!14975 = distinct !DILocation(line: 119, column: 23, scope: !14967)
!14976 = !DILocation(line: 73, column: 21, scope: !14970, inlinedAt: !14975)
!14977 = !DILocation(line: 73, column: 26, scope: !14970, inlinedAt: !14975)
!14978 = !DILocation(line: 73, column: 9, scope: !14970, inlinedAt: !14975)
!14979 = !DILocation(line: 119, column: 6, scope: !14950)
!14980 = !DILocation(line: 120, column: 3, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14982, file: !14913, line: 120, column: 3)
!14982 = distinct !DILexicalBlock(scope: !14983, file: !14913, line: 120, column: 3)
!14983 = distinct !DILexicalBlock(scope: !14984, file: !14913, line: 120, column: 3)
!14984 = distinct !DILexicalBlock(scope: !14985, file: !14913, line: 120, column: 3)
!14985 = distinct !DILexicalBlock(scope: !14967, file: !14913, line: 119, column: 57)
!14986 = !DILocation(line: 121, column: 2, scope: !14985)
!14987 = !DILocation(line: 124, column: 2, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14989, file: !14913, line: 124, column: 2)
!14989 = distinct !DILexicalBlock(scope: !14990, file: !14913, line: 124, column: 2)
!14990 = distinct !DILexicalBlock(scope: !14991, file: !14913, line: 124, column: 2)
!14991 = distinct !DILexicalBlock(scope: !14950, file: !14913, line: 124, column: 2)
!14992 = !DILocation(line: 131, column: 2, scope: !14950)
!14993 = !DILocation(line: 0, scope: !14970, inlinedAt: !14994)
!14994 = distinct !DILocation(line: 151, column: 24, scope: !14995)
!14995 = distinct !DILexicalBlock(scope: !14996, file: !14913, line: 151, column: 7)
!14996 = distinct !DILexicalBlock(scope: !14997, file: !14913, line: 146, column: 32)
!14997 = distinct !DILexicalBlock(scope: !14950, file: !14913, line: 146, column: 6)
!14998 = !DILocation(line: 151, column: 7, scope: !14996)
!14999 = !DILocation(line: 151, column: 21, scope: !14995)
!15000 = !DILocalVariable(name: "key", arg: 1, scope: !15001, file: !6796, line: 84, type: !32)
!15001 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6796, file: !6796, line: 84, type: !6807, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !15002)
!15002 = !{!15000}
!15003 = !DILocation(line: 0, scope: !15001, inlinedAt: !15004)
!15004 = distinct !DILocation(line: 186, column: 2, scope: !14950)
!15005 = !DILocation(line: 95, column: 2, scope: !15001, inlinedAt: !15004)
!15006 = !{i64 1652942}
!15007 = !DILocation(line: 189, column: 3, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !15009, file: !14913, line: 188, column: 41)
!15009 = distinct !DILexicalBlock(scope: !14950, file: !14913, line: 188, column: 6)
!15010 = !DILocation(line: 191, column: 1, scope: !14950)
!15011 = distinct !DISubprogram(name: "k_current_get", scope: !637, file: !637, line: 530, type: !15012, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !652)
!15012 = !DISubroutineType(types: !15013)
!15013 = !{!15014}
!15014 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !544, line: 347, baseType: !14774)
!15015 = !DILocation(line: 535, column: 9, scope: !15011)
!15016 = !DILocation(line: 535, column: 2, scope: !15011)
!15017 = distinct !DISubprogram(name: "reason_to_str", scope: !14913, file: !14913, line: 62, type: !15018, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !15020)
!15018 = !DISubroutineType(types: !15019)
!15019 = !{!140, !32}
!15020 = !{!15021}
!15021 = !DILocalVariable(name: "reason", arg: 1, scope: !15017, file: !14913, line: 62, type: !32)
!15022 = !DILocation(line: 0, scope: !15017)
!15023 = !DILocation(line: 64, column: 2, scope: !15017)
!15024 = !DILocation(line: 0, scope: !15025)
!15025 = distinct !DILexicalBlock(scope: !15017, file: !14913, line: 64, column: 18)
!15026 = !DILocation(line: 78, column: 1, scope: !15017)
!15027 = distinct !DISubprogram(name: "thread_name_get", scope: !14913, file: !14913, line: 51, type: !15028, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !15030)
!15028 = !DISubroutineType(types: !15029)
!15029 = !{!140, !14774}
!15030 = !{!15031, !15032}
!15031 = !DILocalVariable(name: "thread", arg: 1, scope: !15027, file: !14913, line: 51, type: !14774)
!15032 = !DILocalVariable(name: "thread_name", scope: !15027, file: !14913, line: 53, type: !140)
!15033 = !DILocation(line: 0, scope: !15027)
!15034 = !DILocation(line: 53, column: 36, scope: !15027)
!15035 = !DILocation(line: 53, column: 28, scope: !15027)
!15036 = !DILocation(line: 53, column: 47, scope: !15027)
!15037 = !DILocation(line: 55, column: 19, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !15027, file: !14913, line: 55, column: 6)
!15039 = !DILocation(line: 55, column: 28, scope: !15038)
!15040 = !DILocation(line: 55, column: 32, scope: !15038)
!15041 = !DILocation(line: 55, column: 47, scope: !15038)
!15042 = !DILocation(line: 55, column: 6, scope: !15027)
!15043 = !DILocation(line: 57, column: 2, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !15038, file: !14913, line: 55, column: 57)
!15045 = !DILocation(line: 59, column: 2, scope: !15027)
!15046 = distinct !DISubprogram(name: "k_thread_abort", scope: !5346, file: !5346, line: 188, type: !15047, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !15049)
!15047 = !DISubroutineType(types: !15048)
!15048 = !{null, !15014}
!15049 = !{!15050}
!15050 = !DILocalVariable(name: "thread", arg: 1, scope: !15046, file: !5346, line: 188, type: !15014)
!15051 = !DILocation(line: 0, scope: !15046)
!15052 = !DILocation(line: 197, column: 2, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15046, file: !5346, line: 197, column: 2)
!15054 = !{i64 2152217783}
!15055 = !DILocation(line: 198, column: 2, scope: !15046)
!15056 = !DILocation(line: 199, column: 1, scope: !15046)
!15057 = distinct !DISubprogram(name: "z_current_get", scope: !5346, file: !5346, line: 173, type: !15012, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3237, retainedNodes: !652)
!15058 = !DILocation(line: 180, column: 2, scope: !15059)
!15059 = distinct !DILexicalBlock(scope: !15057, file: !5346, line: 180, column: 2)
!15060 = !{i64 2152217715}
!15061 = !DILocation(line: 181, column: 9, scope: !15057)
!15062 = !DILocation(line: 181, column: 2, scope: !15057)
!15063 = distinct !DISubprogram(name: "z_early_memset", scope: !2168, file: !2168, line: 108, type: !15064, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15066)
!15064 = !DISubroutineType(types: !15065)
!15065 = !{null, !124, !125, !272}
!15066 = !{!15067, !15068, !15069}
!15067 = !DILocalVariable(name: "dst", arg: 1, scope: !15063, file: !2168, line: 108, type: !124)
!15068 = !DILocalVariable(name: "c", arg: 2, scope: !15063, file: !2168, line: 108, type: !125)
!15069 = !DILocalVariable(name: "n", arg: 3, scope: !15063, file: !2168, line: 108, type: !272)
!15070 = !DILocation(line: 0, scope: !15063)
!15071 = !DILocation(line: 110, column: 9, scope: !15063)
!15072 = !DILocation(line: 111, column: 1, scope: !15063)
!15073 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2168, file: !2168, line: 121, type: !15074, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15076)
!15074 = !DISubroutineType(types: !15075)
!15075 = !{null, !124, !13, !272}
!15076 = !{!15077, !15078, !15079}
!15077 = !DILocalVariable(name: "dst", arg: 1, scope: !15073, file: !2168, line: 121, type: !124)
!15078 = !DILocalVariable(name: "src", arg: 2, scope: !15073, file: !2168, line: 121, type: !13)
!15079 = !DILocalVariable(name: "n", arg: 3, scope: !15073, file: !2168, line: 121, type: !272)
!15080 = !DILocation(line: 0, scope: !15073)
!15081 = !DILocation(line: 123, column: 9, scope: !15073)
!15082 = !DILocation(line: 124, column: 1, scope: !15073)
!15083 = distinct !DISubprogram(name: "z_bss_zero", scope: !2168, file: !2168, line: 132, type: !3274, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !652)
!15084 = !DILocation(line: 143, column: 2, scope: !15083)
!15085 = !DILocation(line: 168, column: 1, scope: !15083)
!15086 = distinct !DISubprogram(name: "z_init_cpu", scope: !2168, file: !2168, line: 372, type: !10229, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15087)
!15087 = !{!15088}
!15088 = !DILocalVariable(name: "id", arg: 1, scope: !15086, file: !2168, line: 372, type: !125)
!15089 = !DILocation(line: 0, scope: !15086)
!15090 = !DILocation(line: 374, column: 2, scope: !15086)
!15091 = !DILocation(line: 375, column: 34, scope: !15086)
!15092 = !DILocation(line: 375, column: 19, scope: !15086)
!15093 = !DILocation(line: 375, column: 31, scope: !15086)
!15094 = !DILocation(line: 376, column: 24, scope: !15086)
!15095 = !DILocation(line: 376, column: 19, scope: !15086)
!15096 = !DILocation(line: 376, column: 22, scope: !15086)
!15097 = !DILocation(line: 378, column: 26, scope: !15086)
!15098 = !DILocation(line: 378, column: 4, scope: !15086)
!15099 = !DILocation(line: 378, column: 50, scope: !15086)
!15100 = !DILocation(line: 377, column: 19, scope: !15086)
!15101 = !DILocation(line: 377, column: 29, scope: !15086)
!15102 = !DILocation(line: 384, column: 1, scope: !15086)
!15103 = distinct !DISubprogram(name: "init_idle_thread", scope: !2168, file: !2168, line: 343, type: !10229, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15104)
!15104 = !{!15105, !15106, !15107, !15110}
!15105 = !DILocalVariable(name: "i", arg: 1, scope: !15103, file: !2168, line: 343, type: !125)
!15106 = !DILocalVariable(name: "thread", scope: !15103, file: !2168, line: 345, type: !2260)
!15107 = !DILocalVariable(name: "stack", scope: !15103, file: !2168, line: 346, type: !15108)
!15108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15109, size: 32)
!15109 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5225, line: 44, baseType: !2374)
!15110 = !DILocalVariable(name: "tname", scope: !15103, file: !2168, line: 358, type: !393)
!15111 = !DILocation(line: 0, scope: !15103)
!15112 = !DILocation(line: 345, column: 29, scope: !15103)
!15113 = !DILocation(line: 346, column: 28, scope: !15103)
!15114 = !DILocation(line: 362, column: 37, scope: !15103)
!15115 = !DILocation(line: 362, column: 36, scope: !15103)
!15116 = !DILocation(line: 361, column: 2, scope: !15103)
!15117 = !DILocation(line: 365, column: 2, scope: !15103)
!15118 = !DILocation(line: 370, column: 1, scope: !15103)
!15119 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2375, file: !2375, line: 331, type: !15120, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15122)
!15120 = !DISubroutineType(types: !15121)
!15121 = !{!393, !15108}
!15122 = !{!15123}
!15123 = !DILocalVariable(name: "sym", arg: 1, scope: !15119, file: !2375, line: 331, type: !15108)
!15124 = !DILocation(line: 0, scope: !15119)
!15125 = !DILocation(line: 333, column: 21, scope: !15119)
!15126 = !DILocation(line: 333, column: 2, scope: !15119)
!15127 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15128, file: !15128, line: 155, type: !15129, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15131)
!15128 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15129 = !DISubroutineType(types: !15130)
!15130 = !{null, !2260}
!15131 = !{!15132}
!15132 = !DILocalVariable(name: "thread", arg: 1, scope: !15127, file: !15128, line: 155, type: !2260)
!15133 = !DILocation(line: 0, scope: !15127)
!15134 = !DILocation(line: 157, column: 15, scope: !15127)
!15135 = !DILocation(line: 157, column: 28, scope: !15127)
!15136 = !DILocation(line: 158, column: 1, scope: !15127)
!15137 = distinct !DISubprogram(name: "z_cstart", scope: !2168, file: !2168, line: 501, type: !3274, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15138)
!15138 = !{!15139}
!15139 = !DILocalVariable(name: "dummy_thread", scope: !15137, file: !2168, line: 518, type: !2261)
!15140 = !DILocation(line: 507, column: 2, scope: !15137)
!15141 = !DILocation(line: 43, column: 14, scope: !15142, inlinedAt: !15146)
!15142 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !15143, file: !15143, line: 40, type: !3274, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15144)
!15143 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15144 = !{!15145}
!15145 = !DILocalVariable(name: "msp", scope: !15142, file: !15143, line: 42, type: !208)
!15146 = distinct !DILocation(line: 44, column: 2, scope: !15147, inlinedAt: !15149)
!15147 = distinct !DISubprogram(name: "arch_kernel_init", scope: !15148, file: !15148, line: 42, type: !3274, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !652)
!15148 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15149 = distinct !DILocation(line: 510, column: 2, scope: !15137)
!15150 = !DILocation(line: 43, column: 3, scope: !15142, inlinedAt: !15146)
!15151 = !DILocation(line: 43, column: 60, scope: !15142, inlinedAt: !15146)
!15152 = !DILocation(line: 0, scope: !15142, inlinedAt: !15146)
!15153 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !15154, file: !8280, line: 1153, type: !208)
!15154 = distinct !DISubprogram(name: "__set_MSP", scope: !8280, file: !8280, line: 1153, type: !6820, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15155)
!15155 = !{!15153}
!15156 = !DILocation(line: 0, scope: !15154, inlinedAt: !15157)
!15157 = distinct !DILocation(line: 46, column: 2, scope: !15142, inlinedAt: !15146)
!15158 = !DILocation(line: 1155, column: 3, scope: !15154, inlinedAt: !15157)
!15159 = !{i64 2465565}
!15160 = !DILocation(line: 62, column: 11, scope: !15142, inlinedAt: !15146)
!15161 = !DILocation(line: 102, column: 2, scope: !15162, inlinedAt: !15163)
!15162 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !9257, file: !9257, line: 97, type: !3274, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !652)
!15163 = distinct !DILocation(line: 45, column: 2, scope: !15147, inlinedAt: !15149)
!15164 = !DILocation(line: 108, column: 2, scope: !15162, inlinedAt: !15163)
!15165 = !DILocation(line: 112, column: 2, scope: !15162, inlinedAt: !15163)
!15166 = !DILocation(line: 113, column: 2, scope: !15162, inlinedAt: !15163)
!15167 = !DILocation(line: 114, column: 2, scope: !15162, inlinedAt: !15163)
!15168 = !DILocation(line: 116, column: 2, scope: !15162, inlinedAt: !15163)
!15169 = !DILocation(line: 123, column: 13, scope: !15162, inlinedAt: !15163)
!15170 = !DILocation(line: 46, column: 2, scope: !15147, inlinedAt: !15149)
!15171 = !DILocation(line: 47, column: 2, scope: !15147, inlinedAt: !15149)
!15172 = !DILocation(line: 174, column: 12, scope: !15173, inlinedAt: !15174)
!15173 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !9257, file: !9257, line: 169, type: !3274, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !652)
!15174 = distinct !DILocation(line: 48, column: 2, scope: !15147, inlinedAt: !15149)
!15175 = !DILocation(line: 179, column: 12, scope: !15173, inlinedAt: !15174)
!15176 = !DILocation(line: 50, column: 2, scope: !15147, inlinedAt: !15149)
!15177 = !DILocation(line: 57, column: 2, scope: !15147, inlinedAt: !15149)
!15178 = !DILocation(line: 518, column: 2, scope: !15137)
!15179 = !DILocation(line: 518, column: 18, scope: !15137)
!15180 = !DILocation(line: 520, column: 2, scope: !15137)
!15181 = !DILocation(line: 523, column: 2, scope: !15137)
!15182 = !DILocation(line: 526, column: 2, scope: !15137)
!15183 = !DILocation(line: 527, column: 2, scope: !15137)
!15184 = !DILocation(line: 543, column: 24, scope: !15137)
!15185 = !DILocation(line: 543, column: 2, scope: !15137)
!15186 = !DILocation(line: 0, scope: !2399)
!15187 = !DILocation(line: 246, column: 15, scope: !2417)
!15188 = !DILocation(line: 246, column: 36, scope: !2416)
!15189 = !DILocation(line: 246, column: 2, scope: !2417)
!15190 = !DILocation(line: 247, column: 37, scope: !2415)
!15191 = !DILocation(line: 0, scope: !2415)
!15192 = !DILocation(line: 248, column: 19, scope: !2415)
!15193 = !DILocation(line: 248, column: 12, scope: !2415)
!15194 = !DILocation(line: 250, column: 11, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !2415, file: !2168, line: 250, column: 7)
!15196 = !DILocation(line: 250, column: 7, scope: !2415)
!15197 = !DILocation(line: 254, column: 11, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15199, file: !2168, line: 254, column: 8)
!15199 = distinct !DILexicalBlock(scope: !15195, file: !2168, line: 250, column: 20)
!15200 = !DILocation(line: 254, column: 8, scope: !15199)
!15201 = !DILocation(line: 255, column: 9, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15198, file: !2168, line: 254, column: 17)
!15203 = !DILocation(line: 258, column: 9, scope: !15202)
!15204 = !DILocation(line: 261, column: 28, scope: !15202)
!15205 = !DILocation(line: 261, column: 10, scope: !15202)
!15206 = !DILocation(line: 261, column: 17, scope: !15202)
!15207 = !DILocation(line: 261, column: 26, scope: !15202)
!15208 = !DILocation(line: 262, column: 4, scope: !15202)
!15209 = !DILocation(line: 263, column: 9, scope: !15199)
!15210 = !DILocation(line: 263, column: 16, scope: !15199)
!15211 = !DILocation(line: 263, column: 28, scope: !15199)
!15212 = !DILocation(line: 264, column: 3, scope: !15199)
!15213 = !DILocation(line: 246, column: 60, scope: !2416)
!15214 = distinct !{!15214, !15189, !15215}
!15215 = !DILocation(line: 265, column: 2, scope: !2417)
!15216 = !DILocation(line: 266, column: 1, scope: !2399)
!15217 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !693, file: !693, line: 1638, type: !8314, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15218)
!15218 = !{!15219, !15220}
!15219 = !DILocalVariable(name: "IRQn", arg: 1, scope: !15217, file: !693, line: 1638, type: !1015)
!15220 = !DILocalVariable(name: "priority", arg: 2, scope: !15217, file: !693, line: 1638, type: !208)
!15221 = !DILocation(line: 0, scope: !15217)
!15222 = !DILocation(line: 1646, column: 48, scope: !15223)
!15223 = distinct !DILexicalBlock(scope: !15224, file: !693, line: 1645, column: 3)
!15224 = distinct !DILexicalBlock(scope: !15217, file: !693, line: 1640, column: 7)
!15225 = !DILocation(line: 1646, column: 32, scope: !15223)
!15226 = !DILocation(line: 1646, column: 40, scope: !15223)
!15227 = !DILocation(line: 1646, column: 5, scope: !15223)
!15228 = !DILocation(line: 1646, column: 46, scope: !15223)
!15229 = !DILocation(line: 1648, column: 1, scope: !15217)
!15230 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !15148, file: !15148, line: 32, type: !3274, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !652)
!15231 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !15232, file: !15232, line: 215, type: !15129, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15233)
!15232 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15233 = !{!15234}
!15234 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !15231, file: !15232, line: 215, type: !2260)
!15235 = !DILocation(line: 0, scope: !15231)
!15236 = !DILocation(line: 217, column: 21, scope: !15231)
!15237 = !DILocation(line: 217, column: 34, scope: !15231)
!15238 = !DILocation(line: 221, column: 21, scope: !15231)
!15239 = !DILocation(line: 221, column: 34, scope: !15231)
!15240 = !DILocation(line: 223, column: 27, scope: !15231)
!15241 = !DILocation(line: 223, column: 33, scope: !15231)
!15242 = !DILocation(line: 224, column: 27, scope: !15231)
!15243 = !DILocation(line: 224, column: 32, scope: !15231)
!15244 = !DILocation(line: 232, column: 16, scope: !15231)
!15245 = !DILocation(line: 232, column: 30, scope: !15231)
!15246 = !DILocation(line: 239, column: 24, scope: !15231)
!15247 = !DILocation(line: 240, column: 1, scope: !15231)
!15248 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2168, file: !2168, line: 399, type: !15249, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15251)
!15249 = !DISubroutineType(types: !15250)
!15250 = !{!393}
!15251 = !{!15252}
!15252 = !DILocalVariable(name: "stack_ptr", scope: !15248, file: !2168, line: 401, type: !393)
!15253 = !DILocation(line: 404, column: 2, scope: !15248)
!15254 = !DILocation(line: 416, column: 24, scope: !15248)
!15255 = !DILocation(line: 418, column: 14, scope: !15248)
!15256 = !DILocation(line: 0, scope: !15248)
!15257 = !DILocation(line: 423, column: 2, scope: !15248)
!15258 = !DILocation(line: 424, column: 2, scope: !15248)
!15259 = !DILocation(line: 426, column: 2, scope: !15248)
!15260 = !DILocation(line: 428, column: 2, scope: !15248)
!15261 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2168, file: !2168, line: 432, type: !15262, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15264)
!15262 = !DISubroutineType(types: !15263)
!15263 = !{null, !393}
!15264 = !{!15265}
!15265 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !15261, file: !2168, line: 432, type: !393)
!15266 = !DILocation(line: 0, scope: !15261)
!15267 = !DILocation(line: 435, column: 2, scope: !15261)
!15268 = !DILocation(line: 445, column: 2, scope: !15261)
!15269 = distinct !DISubprogram(name: "bg_thread_main", scope: !2168, file: !2168, line: 277, type: !5227, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2164, retainedNodes: !15270)
!15270 = !{!15271, !15272, !15273}
!15271 = !DILocalVariable(name: "unused1", arg: 1, scope: !15269, file: !2168, line: 277, type: !124)
!15272 = !DILocalVariable(name: "unused2", arg: 2, scope: !15269, file: !2168, line: 277, type: !124)
!15273 = !DILocalVariable(name: "unused3", arg: 3, scope: !15269, file: !2168, line: 277, type: !124)
!15274 = !DILocation(line: 0, scope: !15269)
!15275 = !DILocation(line: 291, column: 20, scope: !15269)
!15276 = !DILocation(line: 293, column: 2, scope: !15269)
!15277 = !DILocation(line: 297, column: 2, scope: !15269)
!15278 = !DILocation(line: 305, column: 2, scope: !15269)
!15279 = !DILocation(line: 307, column: 2, scope: !15269)
!15280 = !DILocation(line: 330, column: 8, scope: !15269)
!15281 = !DILocation(line: 333, column: 34, scope: !15269)
!15282 = !DILocation(line: 339, column: 1, scope: !15269)
!15283 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2428, file: !2428, line: 45, type: !15284, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15292)
!15284 = !DISubroutineType(types: !15285)
!15285 = !{null, !15286, !124}
!15286 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !637, line: 103, baseType: !15287)
!15287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15288, size: 32)
!15288 = !DISubroutineType(types: !15289)
!15289 = !{null, !15290, !124}
!15290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15291, size: 32)
!15291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2433)
!15292 = !{!15293, !15294}
!15293 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15283, file: !2428, line: 45, type: !15286)
!15294 = !DILocalVariable(name: "user_data", arg: 2, scope: !15283, file: !2428, line: 45, type: !124)
!15295 = !DILocation(line: 0, scope: !15283)
!15296 = !DILocation(line: 71, column: 1, scope: !15283)
!15297 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2428, file: !2428, line: 73, type: !15284, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15298)
!15298 = !{!15299, !15300}
!15299 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15297, file: !2428, line: 73, type: !15286)
!15300 = !DILocalVariable(name: "user_data", arg: 2, scope: !15297, file: !2428, line: 73, type: !124)
!15301 = !DILocation(line: 0, scope: !15297)
!15302 = !DILocation(line: 95, column: 1, scope: !15297)
!15303 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2428, file: !2428, line: 97, type: !9258, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !652)
!15304 = !DILocation(line: 1031, column: 3, scope: !15305, inlinedAt: !15308)
!15305 = distinct !DISubprogram(name: "__get_IPSR", scope: !8280, file: !8280, line: 1027, type: !9251, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15306)
!15306 = !{!15307}
!15307 = !DILocalVariable(name: "result", scope: !15305, file: !8280, line: 1029, type: !208)
!15308 = distinct !DILocation(line: 48, column: 10, scope: !15309, inlinedAt: !15310)
!15309 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9257, file: !9257, line: 46, type: !9258, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !652)
!15310 = distinct !DILocation(line: 99, column: 9, scope: !15303)
!15311 = !{i64 2471216}
!15312 = !DILocation(line: 0, scope: !15305, inlinedAt: !15308)
!15313 = !DILocation(line: 48, column: 9, scope: !15309, inlinedAt: !15310)
!15314 = !DILocation(line: 99, column: 2, scope: !15303)
!15315 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2428, file: !2428, line: 106, type: !3274, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !652)
!15316 = !DILocation(line: 108, column: 2, scope: !15315)
!15317 = !DILocation(line: 108, column: 17, scope: !15315)
!15318 = !DILocation(line: 108, column: 30, scope: !15315)
!15319 = !DILocation(line: 109, column: 1, scope: !15315)
!15320 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2428, file: !2428, line: 116, type: !3274, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !652)
!15321 = !DILocation(line: 118, column: 2, scope: !15320)
!15322 = !DILocation(line: 118, column: 17, scope: !15320)
!15323 = !DILocation(line: 118, column: 30, scope: !15320)
!15324 = !DILocation(line: 119, column: 1, scope: !15320)
!15325 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2428, file: !2428, line: 126, type: !9258, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !652)
!15326 = !DILocation(line: 128, column: 10, scope: !15325)
!15327 = !DILocation(line: 128, column: 25, scope: !15325)
!15328 = !DILocation(line: 128, column: 38, scope: !15325)
!15329 = !DILocation(line: 128, column: 53, scope: !15325)
!15330 = !DILocation(line: 128, column: 2, scope: !15325)
!15331 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2428, file: !2428, line: 187, type: !15332, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15334)
!15332 = !DISubroutineType(types: !15333)
!15333 = !{!125, !2432, !140}
!15334 = !{!15335, !15336}
!15335 = !DILocalVariable(name: "thread", arg: 1, scope: !15331, file: !2428, line: 187, type: !2432)
!15336 = !DILocalVariable(name: "value", arg: 2, scope: !15331, file: !2428, line: 187, type: !140)
!15337 = !DILocation(line: 0, scope: !15331)
!15338 = !DILocation(line: 206, column: 2, scope: !15331)
!15339 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2428, file: !2428, line: 238, type: !15340, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15342)
!15340 = !DISubroutineType(types: !15341)
!15341 = !{!140, !2432}
!15342 = !{!15343}
!15343 = !DILocalVariable(name: "thread", arg: 1, scope: !15339, file: !2428, line: 238, type: !2432)
!15344 = !DILocation(line: 0, scope: !15339)
!15345 = !DILocation(line: 244, column: 2, scope: !15339)
!15346 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2428, file: !2428, line: 248, type: !15347, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15349)
!15347 = !DISubroutineType(types: !15348)
!15348 = !{!125, !2431, !393, !272}
!15349 = !{!15350, !15351, !15352}
!15350 = !DILocalVariable(name: "thread", arg: 1, scope: !15346, file: !2428, line: 248, type: !2431)
!15351 = !DILocalVariable(name: "buf", arg: 2, scope: !15346, file: !2428, line: 248, type: !393)
!15352 = !DILocalVariable(name: "size", arg: 3, scope: !15346, file: !2428, line: 248, type: !272)
!15353 = !DILocation(line: 0, scope: !15346)
!15354 = !DILocation(line: 257, column: 2, scope: !15346)
!15355 = !DILocation(line: 0, scope: !2427)
!15356 = !DILocation(line: 281, column: 11, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !2427, file: !2428, line: 281, column: 6)
!15358 = !DILocation(line: 281, column: 20, scope: !15357)
!15359 = !DILocation(line: 275, column: 45, scope: !2427)
!15360 = !DILocation(line: 285, column: 10, scope: !2427)
!15361 = !DILocation(line: 0, scope: !2550)
!15362 = !DILocation(line: 293, column: 39, scope: !15363)
!15363 = distinct !DILexicalBlock(scope: !2550, file: !2428, line: 293, column: 2)
!15364 = !DILocation(line: 293, column: 2, scope: !2550)
!15365 = !DILocation(line: 273, column: 14, scope: !2427)
!15366 = !DILocation(line: 309, column: 2, scope: !2427)
!15367 = !DILocation(line: 309, column: 11, scope: !2427)
!15368 = !DILocation(line: 311, column: 2, scope: !2427)
!15369 = !DILocation(line: 293, column: 26, scope: !15363)
!15370 = !DILocation(line: 294, column: 9, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15363, file: !2428, line: 293, column: 54)
!15372 = !DILocation(line: 295, column: 21, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15371, file: !2428, line: 295, column: 7)
!15374 = !DILocation(line: 295, column: 28, scope: !15373)
!15375 = !DILocation(line: 295, column: 7, scope: !15371)
!15376 = !DILocation(line: 299, column: 25, scope: !15371)
!15377 = !DILocation(line: 299, column: 41, scope: !15371)
!15378 = !DILocation(line: 300, column: 7, scope: !15371)
!15379 = !DILocation(line: 300, column: 26, scope: !15371)
!15380 = !DILocation(line: 299, column: 10, scope: !15371)
!15381 = !DILocation(line: 299, column: 7, scope: !15371)
!15382 = !DILocation(line: 302, column: 16, scope: !15371)
!15383 = !DILocation(line: 304, column: 20, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15371, file: !2428, line: 304, column: 7)
!15385 = !DILocation(line: 304, column: 7, scope: !15371)
!15386 = !DILocation(line: 305, column: 26, scope: !15387)
!15387 = distinct !DILexicalBlock(scope: !15384, file: !2428, line: 304, column: 26)
!15388 = !DILocation(line: 305, column: 42, scope: !15387)
!15389 = !DILocation(line: 305, column: 11, scope: !15387)
!15390 = !DILocation(line: 305, column: 8, scope: !15387)
!15391 = !DILocation(line: 306, column: 3, scope: !15387)
!15392 = !DILocation(line: 293, column: 50, scope: !15363)
!15393 = !DILocation(line: 312, column: 1, scope: !2427)
!15394 = distinct !DISubprogram(name: "copy_bytes", scope: !2428, file: !2428, line: 261, type: !15395, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15397)
!15395 = !DISubroutineType(types: !15396)
!15396 = !{!272, !393, !272, !140, !272}
!15397 = !{!15398, !15399, !15400, !15401, !15402}
!15398 = !DILocalVariable(name: "dest", arg: 1, scope: !15394, file: !2428, line: 261, type: !393)
!15399 = !DILocalVariable(name: "dest_size", arg: 2, scope: !15394, file: !2428, line: 261, type: !272)
!15400 = !DILocalVariable(name: "src", arg: 3, scope: !15394, file: !2428, line: 261, type: !140)
!15401 = !DILocalVariable(name: "src_size", arg: 4, scope: !15394, file: !2428, line: 261, type: !272)
!15402 = !DILocalVariable(name: "bytes_to_copy", scope: !15394, file: !2428, line: 263, type: !272)
!15403 = !DILocation(line: 0, scope: !15394)
!15404 = !DILocation(line: 265, column: 18, scope: !15394)
!15405 = !DILocation(line: 266, column: 2, scope: !15394)
!15406 = !DILocation(line: 268, column: 2, scope: !15394)
!15407 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2428, file: !2428, line: 383, type: !15408, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15410)
!15408 = !DISubroutineType(types: !15409)
!15409 = !{null, !2432}
!15410 = !{!15411}
!15411 = !DILocalVariable(name: "thread", arg: 1, scope: !15407, file: !2428, line: 383, type: !2432)
!15412 = !DILocation(line: 0, scope: !15407)
!15413 = !DILocation(line: 387, column: 2, scope: !15407)
!15414 = !DILocation(line: 388, column: 1, scope: !15407)
!15415 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2428, file: !2428, line: 528, type: !15416, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15423)
!15416 = !DISubroutineType(types: !15417)
!15417 = !{!393, !2432, !15418, !272, !5224, !124, !124, !124, !125, !208, !140}
!15418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15419, size: 32)
!15419 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5225, line: 44, baseType: !15420)
!15420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2375, line: 47, size: 8, elements: !15421)
!15421 = !{!15422}
!15422 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15420, file: !2375, line: 48, baseType: !142, size: 8)
!15423 = !{!15424, !15425, !15426, !15427, !15428, !15429, !15430, !15431, !15432, !15433, !15434}
!15424 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15415, file: !2428, line: 528, type: !2432)
!15425 = !DILocalVariable(name: "stack", arg: 2, scope: !15415, file: !2428, line: 529, type: !15418)
!15426 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15415, file: !2428, line: 529, type: !272)
!15427 = !DILocalVariable(name: "entry", arg: 4, scope: !15415, file: !2428, line: 530, type: !5224)
!15428 = !DILocalVariable(name: "p1", arg: 5, scope: !15415, file: !2428, line: 531, type: !124)
!15429 = !DILocalVariable(name: "p2", arg: 6, scope: !15415, file: !2428, line: 531, type: !124)
!15430 = !DILocalVariable(name: "p3", arg: 7, scope: !15415, file: !2428, line: 531, type: !124)
!15431 = !DILocalVariable(name: "prio", arg: 8, scope: !15415, file: !2428, line: 532, type: !125)
!15432 = !DILocalVariable(name: "options", arg: 9, scope: !15415, file: !2428, line: 532, type: !208)
!15433 = !DILocalVariable(name: "name", arg: 10, scope: !15415, file: !2428, line: 532, type: !140)
!15434 = !DILocalVariable(name: "stack_ptr", scope: !15415, file: !2428, line: 534, type: !393)
!15435 = !DILocation(line: 0, scope: !15415)
!15436 = !DILocation(line: 550, column: 28, scope: !15415)
!15437 = !DILocation(line: 550, column: 2, scope: !15415)
!15438 = !DILocation(line: 553, column: 34, scope: !15415)
!15439 = !DILocation(line: 553, column: 2, scope: !15415)
!15440 = !DILocation(line: 554, column: 14, scope: !15415)
!15441 = !DILocation(line: 564, column: 2, scope: !15415)
!15442 = !DILocation(line: 567, column: 14, scope: !15415)
!15443 = !DILocation(line: 567, column: 24, scope: !15415)
!15444 = !DILocation(line: 612, column: 7, scope: !15445)
!15445 = distinct !DILexicalBlock(scope: !15415, file: !2428, line: 612, column: 6)
!15446 = !DILocation(line: 612, column: 6, scope: !15415)
!15447 = !DILocation(line: 627, column: 40, scope: !15415)
!15448 = !DILocation(line: 637, column: 2, scope: !15415)
!15449 = !DILocation(line: 613, column: 15, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15445, file: !2428, line: 612, column: 17)
!15451 = !DILocation(line: 613, column: 29, scope: !15450)
!15452 = !DILocation(line: 638, column: 1, scope: !15415)
!15453 = distinct !DISubprogram(name: "z_waitq_init", scope: !15454, file: !15454, line: 47, type: !15455, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15457)
!15454 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15455 = !DISubroutineType(types: !15456)
!15456 = !{null, !2463}
!15457 = !{!15458}
!15458 = !DILocalVariable(name: "w", arg: 1, scope: !15453, file: !15454, line: 47, type: !2463)
!15459 = !DILocation(line: 0, scope: !15453)
!15460 = !DILocation(line: 49, column: 21, scope: !15453)
!15461 = !DILocation(line: 49, column: 2, scope: !15453)
!15462 = !DILocation(line: 50, column: 1, scope: !15453)
!15463 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2428, file: !2428, line: 791, type: !15464, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15467)
!15464 = !DISubroutineType(types: !15465)
!15465 = !{null, !15466, !125, !208, !32}
!15466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 32)
!15467 = !{!15468, !15469, !15470, !15471}
!15468 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15463, file: !2428, line: 791, type: !15466)
!15469 = !DILocalVariable(name: "priority", arg: 2, scope: !15463, file: !2428, line: 791, type: !125)
!15470 = !DILocalVariable(name: "initial_state", arg: 3, scope: !15463, file: !2428, line: 792, type: !208)
!15471 = !DILocalVariable(name: "options", arg: 4, scope: !15463, file: !2428, line: 792, type: !32)
!15472 = !DILocation(line: 0, scope: !15463)
!15473 = !DILocation(line: 795, column: 15, scope: !15463)
!15474 = !DILocation(line: 795, column: 25, scope: !15463)
!15475 = !DILocation(line: 796, column: 30, scope: !15463)
!15476 = !DILocation(line: 796, column: 15, scope: !15463)
!15477 = !DILocation(line: 796, column: 28, scope: !15463)
!15478 = !DILocation(line: 797, column: 30, scope: !15463)
!15479 = !DILocation(line: 797, column: 15, scope: !15463)
!15480 = !DILocation(line: 797, column: 28, scope: !15463)
!15481 = !DILocation(line: 799, column: 22, scope: !15463)
!15482 = !DILocation(line: 799, column: 15, scope: !15463)
!15483 = !DILocation(line: 799, column: 20, scope: !15463)
!15484 = !DILocation(line: 801, column: 15, scope: !15463)
!15485 = !DILocation(line: 801, column: 28, scope: !15463)
!15486 = !DILocation(line: 814, column: 2, scope: !15463)
!15487 = !DILocation(line: 815, column: 1, scope: !15463)
!15488 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2428, file: !2428, line: 449, type: !15489, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15491)
!15489 = !DISubroutineType(types: !15490)
!15490 = !{!393, !2432, !15418, !272}
!15491 = !{!15492, !15493, !15494, !15495, !15496, !15497, !15498, !15499}
!15492 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15488, file: !2428, line: 449, type: !2432)
!15493 = !DILocalVariable(name: "stack", arg: 2, scope: !15488, file: !2428, line: 450, type: !15418)
!15494 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15488, file: !2428, line: 450, type: !272)
!15495 = !DILocalVariable(name: "stack_obj_size", scope: !15488, file: !2428, line: 452, type: !272)
!15496 = !DILocalVariable(name: "stack_buf_size", scope: !15488, file: !2428, line: 452, type: !272)
!15497 = !DILocalVariable(name: "stack_ptr", scope: !15488, file: !2428, line: 453, type: !393)
!15498 = !DILocalVariable(name: "stack_buf_start", scope: !15488, file: !2428, line: 453, type: !393)
!15499 = !DILocalVariable(name: "delta", scope: !15488, file: !2428, line: 454, type: !272)
!15500 = !DILocation(line: 0, scope: !15488)
!15501 = !DILocation(line: 465, column: 20, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15488, file: !2428, line: 463, column: 2)
!15503 = !DILocation(line: 466, column: 21, scope: !15502)
!15504 = !DILocation(line: 473, column: 28, scope: !15488)
!15505 = !DILocation(line: 514, column: 33, scope: !15488)
!15506 = !DILocation(line: 514, column: 25, scope: !15488)
!15507 = !DILocation(line: 514, column: 31, scope: !15488)
!15508 = !DILocation(line: 515, column: 25, scope: !15488)
!15509 = !DILocation(line: 515, column: 30, scope: !15488)
!15510 = !DILocation(line: 516, column: 25, scope: !15488)
!15511 = !DILocation(line: 516, column: 31, scope: !15488)
!15512 = !DILocation(line: 520, column: 2, scope: !15488)
!15513 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2375, file: !2375, line: 331, type: !15514, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15516)
!15514 = !DISubroutineType(types: !15515)
!15515 = !{!393, !15418}
!15516 = !{!15517}
!15517 = !DILocalVariable(name: "sym", arg: 1, scope: !15513, file: !2375, line: 331, type: !15418)
!15518 = !DILocation(line: 0, scope: !15513)
!15519 = !DILocation(line: 333, column: 21, scope: !15513)
!15520 = !DILocation(line: 333, column: 2, scope: !15513)
!15521 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15522, file: !15522, line: 40, type: !15523, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15525)
!15522 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15523 = !DISubroutineType(types: !15524)
!15524 = !{null, !15466}
!15525 = !{!15526}
!15526 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15521, file: !15522, line: 40, type: !15466)
!15527 = !DILocation(line: 0, scope: !15521)
!15528 = !DILocation(line: 42, column: 31, scope: !15521)
!15529 = !DILocation(line: 42, column: 2, scope: !15521)
!15530 = !DILocation(line: 43, column: 1, scope: !15521)
!15531 = distinct !DISubprogram(name: "z_init_timeout", scope: !15522, file: !15522, line: 25, type: !2489, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15532)
!15532 = !{!15533}
!15533 = !DILocalVariable(name: "to", arg: 1, scope: !15531, file: !15522, line: 25, type: !2491)
!15534 = !DILocation(line: 0, scope: !15531)
!15535 = !DILocation(line: 27, column: 22, scope: !15531)
!15536 = !DILocation(line: 27, column: 2, scope: !15531)
!15537 = !DILocation(line: 28, column: 1, scope: !15531)
!15538 = distinct !DISubprogram(name: "sys_dnode_init", scope: !554, file: !554, line: 211, type: !15539, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15541)
!15539 = !DISubroutineType(types: !15540)
!15540 = !{null, !2535}
!15541 = !{!15542}
!15542 = !DILocalVariable(name: "node", arg: 1, scope: !15538, file: !554, line: 211, type: !2535)
!15543 = !DILocation(line: 0, scope: !15538)
!15544 = !DILocation(line: 213, column: 8, scope: !15538)
!15545 = !DILocation(line: 213, column: 13, scope: !15538)
!15546 = !DILocation(line: 214, column: 8, scope: !15538)
!15547 = !DILocation(line: 214, column: 13, scope: !15538)
!15548 = !DILocation(line: 215, column: 1, scope: !15538)
!15549 = distinct !DISubprogram(name: "sys_dlist_init", scope: !554, file: !554, line: 197, type: !15550, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15553)
!15550 = !DISubroutineType(types: !15551)
!15551 = !{null, !15552}
!15552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 32)
!15553 = !{!15554}
!15554 = !DILocalVariable(name: "list", arg: 1, scope: !15549, file: !554, line: 197, type: !15552)
!15555 = !DILocation(line: 0, scope: !15549)
!15556 = !DILocation(line: 199, column: 8, scope: !15549)
!15557 = !DILocation(line: 199, column: 13, scope: !15549)
!15558 = !DILocation(line: 200, column: 8, scope: !15549)
!15559 = !DILocation(line: 200, column: 13, scope: !15549)
!15560 = !DILocation(line: 201, column: 1, scope: !15549)
!15561 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2428, file: !2428, line: 641, type: !15562, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15568)
!15562 = !DISubroutineType(types: !15563)
!15563 = !{!2431, !2432, !15418, !272, !5224, !124, !124, !124, !125, !208, !15564}
!15564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1928, line: 67, baseType: !15565)
!15565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1928, line: 65, size: 64, elements: !15566)
!15566 = !{!15567}
!15567 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15565, file: !1928, line: 66, baseType: !1927, size: 64)
!15568 = !{!15569, !15570, !15571, !15572, !15573, !15574, !15575, !15576, !15577, !15578}
!15569 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15561, file: !2428, line: 641, type: !2432)
!15570 = !DILocalVariable(name: "stack", arg: 2, scope: !15561, file: !2428, line: 642, type: !15418)
!15571 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15561, file: !2428, line: 643, type: !272)
!15572 = !DILocalVariable(name: "entry", arg: 4, scope: !15561, file: !2428, line: 643, type: !5224)
!15573 = !DILocalVariable(name: "p1", arg: 5, scope: !15561, file: !2428, line: 644, type: !124)
!15574 = !DILocalVariable(name: "p2", arg: 6, scope: !15561, file: !2428, line: 644, type: !124)
!15575 = !DILocalVariable(name: "p3", arg: 7, scope: !15561, file: !2428, line: 644, type: !124)
!15576 = !DILocalVariable(name: "prio", arg: 8, scope: !15561, file: !2428, line: 645, type: !125)
!15577 = !DILocalVariable(name: "options", arg: 9, scope: !15561, file: !2428, line: 645, type: !208)
!15578 = !DILocalVariable(name: "delay", arg: 10, scope: !15561, file: !2428, line: 645, type: !15564)
!15579 = !DILocation(line: 0, scope: !15561)
!15580 = !DILocation(line: 649, column: 2, scope: !15561)
!15581 = !DILocation(line: 652, column: 7, scope: !15582)
!15582 = distinct !DILexicalBlock(scope: !15561, file: !2428, line: 652, column: 6)
!15583 = !DILocation(line: 652, column: 6, scope: !15561)
!15584 = !DILocation(line: 653, column: 3, scope: !15585)
!15585 = distinct !DILexicalBlock(scope: !15582, file: !2428, line: 652, column: 39)
!15586 = !DILocation(line: 654, column: 2, scope: !15585)
!15587 = !DILocation(line: 656, column: 2, scope: !15561)
!15588 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2428, file: !2428, line: 401, type: !15589, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15591)
!15589 = !DISubroutineType(types: !15590)
!15590 = !{null, !2432, !15564}
!15591 = !{!15592, !15593}
!15592 = !DILocalVariable(name: "thread", arg: 1, scope: !15588, file: !2428, line: 401, type: !2432)
!15593 = !DILocalVariable(name: "delay", arg: 2, scope: !15588, file: !2428, line: 401, type: !15564)
!15594 = !DILocation(line: 0, scope: !15588)
!15595 = !DILocation(line: 404, column: 6, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !15588, file: !2428, line: 404, column: 6)
!15597 = !DILocation(line: 404, column: 6, scope: !15588)
!15598 = !DILocation(line: 405, column: 3, scope: !15599)
!15599 = distinct !DILexicalBlock(scope: !15596, file: !2428, line: 404, column: 38)
!15600 = !DILocation(line: 406, column: 2, scope: !15599)
!15601 = !DILocation(line: 407, column: 3, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15596, file: !2428, line: 406, column: 9)
!15603 = !DILocation(line: 413, column: 1, scope: !15588)
!15604 = distinct !DISubprogram(name: "k_thread_start", scope: !5346, file: !5346, line: 205, type: !15605, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15607)
!15605 = !DISubroutineType(types: !15606)
!15606 = !{null, !2431}
!15607 = !{!15608}
!15608 = !DILocalVariable(name: "thread", arg: 1, scope: !15604, file: !5346, line: 205, type: !2431)
!15609 = !DILocation(line: 0, scope: !15604)
!15610 = !DILocation(line: 214, column: 2, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15604, file: !5346, line: 214, column: 2)
!15612 = !{i64 2152243007}
!15613 = !DILocation(line: 215, column: 2, scope: !15604)
!15614 = !DILocation(line: 216, column: 1, scope: !15604)
!15615 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15522, file: !15522, line: 47, type: !15589, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15616)
!15616 = !{!15617, !15618}
!15617 = !DILocalVariable(name: "thread", arg: 1, scope: !15615, file: !15522, line: 47, type: !2432)
!15618 = !DILocalVariable(name: "ticks", arg: 2, scope: !15615, file: !15522, line: 47, type: !15564)
!15619 = !DILocation(line: 0, scope: !15615)
!15620 = !DILocation(line: 49, column: 30, scope: !15615)
!15621 = !DILocation(line: 49, column: 2, scope: !15615)
!15622 = !DILocation(line: 50, column: 1, scope: !15615)
!15623 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2428, file: !2428, line: 748, type: !3274, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15624)
!15624 = !{!15625, !15643}
!15625 = !DILocalVariable(name: "thread_data", scope: !15626, file: !2428, line: 750, type: !15627)
!15626 = distinct !DILexicalBlock(scope: !15623, file: !2428, line: 750, column: 2)
!15627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15628, size: 32)
!15628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !637, line: 620, size: 384, elements: !15629)
!15629 = !{!15630, !15631, !15632, !15633, !15634, !15635, !15636, !15637, !15638, !15639, !15640, !15642}
!15630 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15628, file: !637, line: 621, baseType: !2432, size: 32)
!15631 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15628, file: !637, line: 622, baseType: !15418, size: 32, offset: 32)
!15632 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15628, file: !637, line: 623, baseType: !32, size: 32, offset: 64)
!15633 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15628, file: !637, line: 624, baseType: !5224, size: 32, offset: 96)
!15634 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15628, file: !637, line: 625, baseType: !124, size: 32, offset: 128)
!15635 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15628, file: !637, line: 626, baseType: !124, size: 32, offset: 160)
!15636 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15628, file: !637, line: 627, baseType: !124, size: 32, offset: 192)
!15637 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15628, file: !637, line: 628, baseType: !125, size: 32, offset: 224)
!15638 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15628, file: !637, line: 629, baseType: !208, size: 32, offset: 256)
!15639 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15628, file: !637, line: 630, baseType: !997, size: 32, offset: 288)
!15640 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15628, file: !637, line: 631, baseType: !15641, size: 32, offset: 320)
!15641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 32)
!15642 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15628, file: !637, line: 632, baseType: !140, size: 32, offset: 352)
!15643 = !DILocalVariable(name: "thread_data", scope: !15644, file: !2428, line: 781, type: !15627)
!15644 = distinct !DILexicalBlock(scope: !15623, file: !2428, line: 781, column: 2)
!15645 = !DILocation(line: 0, scope: !15626)
!15646 = !DILocation(line: 750, column: 2, scope: !15626)
!15647 = !DILocation(line: 780, column: 2, scope: !15623)
!15648 = !DILocation(line: 0, scope: !15644)
!15649 = !DILocation(line: 781, column: 2, scope: !15644)
!15650 = !DILocation(line: 752, column: 17, scope: !15651)
!15651 = distinct !DILexicalBlock(scope: !15652, file: !2428, line: 750, column: 38)
!15652 = distinct !DILexicalBlock(scope: !15626, file: !2428, line: 750, column: 2)
!15653 = !DILocation(line: 753, column: 17, scope: !15651)
!15654 = !DILocation(line: 754, column: 17, scope: !15651)
!15655 = !DILocation(line: 755, column: 17, scope: !15651)
!15656 = !DILocation(line: 756, column: 17, scope: !15651)
!15657 = !DILocation(line: 757, column: 17, scope: !15651)
!15658 = !DILocation(line: 758, column: 17, scope: !15651)
!15659 = !DILocation(line: 759, column: 17, scope: !15651)
!15660 = !DILocation(line: 760, column: 17, scope: !15651)
!15661 = !DILocation(line: 751, column: 3, scope: !15651)
!15662 = !DILocation(line: 763, column: 16, scope: !15651)
!15663 = !DILocation(line: 763, column: 29, scope: !15651)
!15664 = !DILocation(line: 763, column: 39, scope: !15651)
!15665 = !DILocation(line: 750, column: 2, scope: !15652)
!15666 = !DILocation(line: 750, column: 2, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15652, file: !2428, line: 750, column: 2)
!15668 = distinct !{!15668, !15646, !15669}
!15669 = !DILocation(line: 764, column: 2, scope: !15626)
!15670 = !DILocation(line: 787, column: 2, scope: !15623)
!15671 = !DILocation(line: 788, column: 1, scope: !15623)
!15672 = !DILocation(line: 782, column: 20, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !15674, file: !2428, line: 782, column: 7)
!15674 = distinct !DILexicalBlock(scope: !15675, file: !2428, line: 781, column: 38)
!15675 = distinct !DILexicalBlock(scope: !15644, file: !2428, line: 781, column: 2)
!15676 = !DILocation(line: 782, column: 31, scope: !15673)
!15677 = !DILocation(line: 782, column: 7, scope: !15674)
!15678 = !DILocation(line: 783, column: 37, scope: !15679)
!15679 = distinct !DILexicalBlock(scope: !15673, file: !2428, line: 782, column: 51)
!15680 = !DILocation(line: 784, column: 10, scope: !15679)
!15681 = !DILocation(line: 783, column: 4, scope: !15679)
!15682 = !DILocation(line: 785, column: 3, scope: !15679)
!15683 = !DILocation(line: 781, column: 2, scope: !15675)
!15684 = !DILocation(line: 781, column: 2, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15675, file: !2428, line: 781, column: 2)
!15686 = distinct !{!15686, !15649, !15687}
!15687 = !DILocation(line: 786, column: 2, scope: !15644)
!15688 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !15689, file: !15689, line: 403, type: !15690, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15692)
!15689 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15690 = !DISubroutineType(types: !15691)
!15691 = !{!2536, !2536}
!15692 = !{!15693}
!15693 = !DILocalVariable(name: "t", arg: 1, scope: !15688, file: !15689, line: 403, type: !2536)
!15694 = !DILocation(line: 0, scope: !15688)
!15695 = !DILocalVariable(name: "t", arg: 1, scope: !15696, file: !15689, line: 102, type: !2536)
!15696 = distinct !DISubprogram(name: "z_tmcvt", scope: !15689, file: !15689, line: 102, type: !15697, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15699)
!15697 = !DISubroutineType(types: !15698)
!15698 = !{!2536, !2536, !208, !208, !153, !153, !153, !153}
!15699 = !{!15695, !15700, !15701, !15702, !15703, !15704, !15705, !15706, !15707, !15708, !15709}
!15700 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15696, file: !15689, line: 102, type: !208)
!15701 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15696, file: !15689, line: 103, type: !208)
!15702 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15696, file: !15689, line: 103, type: !153)
!15703 = !DILocalVariable(name: "result32", arg: 5, scope: !15696, file: !15689, line: 104, type: !153)
!15704 = !DILocalVariable(name: "round_up", arg: 6, scope: !15696, file: !15689, line: 104, type: !153)
!15705 = !DILocalVariable(name: "round_off", arg: 7, scope: !15696, file: !15689, line: 105, type: !153)
!15706 = !DILocalVariable(name: "mul_ratio", scope: !15696, file: !15689, line: 107, type: !153)
!15707 = !DILocalVariable(name: "div_ratio", scope: !15696, file: !15689, line: 109, type: !153)
!15708 = !DILocalVariable(name: "off", scope: !15696, file: !15689, line: 116, type: !2536)
!15709 = !DILocalVariable(name: "rdivisor", scope: !15710, file: !15689, line: 119, type: !208)
!15710 = distinct !DILexicalBlock(scope: !15711, file: !15689, line: 118, column: 18)
!15711 = distinct !DILexicalBlock(scope: !15696, file: !15689, line: 118, column: 6)
!15712 = !DILocation(line: 0, scope: !15696, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 406, column: 9, scope: !15688)
!15714 = !DILocation(line: 145, column: 13, scope: !15715, inlinedAt: !15713)
!15715 = distinct !DILexicalBlock(scope: !15716, file: !15689, line: 144, column: 10)
!15716 = distinct !DILexicalBlock(scope: !15717, file: !15689, line: 142, column: 7)
!15717 = distinct !DILexicalBlock(scope: !15718, file: !15689, line: 141, column: 24)
!15718 = distinct !DILexicalBlock(scope: !15719, file: !15689, line: 141, column: 13)
!15719 = distinct !DILexicalBlock(scope: !15696, file: !15689, line: 134, column: 6)
!15720 = !DILocation(line: 406, column: 2, scope: !15688)
!15721 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2428, file: !2428, line: 817, type: !5222, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15722)
!15722 = !{!15723, !15724, !15725, !15726}
!15723 = !DILocalVariable(name: "entry", arg: 1, scope: !15721, file: !2428, line: 817, type: !5224)
!15724 = !DILocalVariable(name: "p1", arg: 2, scope: !15721, file: !2428, line: 818, type: !124)
!15725 = !DILocalVariable(name: "p2", arg: 3, scope: !15721, file: !2428, line: 818, type: !124)
!15726 = !DILocalVariable(name: "p3", arg: 4, scope: !15721, file: !2428, line: 818, type: !124)
!15727 = !DILocation(line: 0, scope: !15721)
!15728 = !DILocation(line: 822, column: 2, scope: !15721)
!15729 = !DILocation(line: 822, column: 17, scope: !15721)
!15730 = !DILocation(line: 822, column: 30, scope: !15721)
!15731 = !DILocation(line: 823, column: 2, scope: !15721)
!15732 = !DILocation(line: 845, column: 2, scope: !15721)
!15733 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2428, file: !2428, line: 888, type: !15734, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15736)
!15734 = !DISubroutineType(types: !15735)
!15735 = !{!125, !2432}
!15736 = !{!15737}
!15737 = !DILocalVariable(name: "thread", arg: 1, scope: !15733, file: !2428, line: 888, type: !2432)
!15738 = !DILocation(line: 0, scope: !15733)
!15739 = !DILocation(line: 893, column: 2, scope: !15733)
!15740 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2428, file: !2428, line: 897, type: !15741, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15743)
!15741 = !DISubroutineType(types: !15742)
!15742 = !{!125, !2432, !32}
!15743 = !{!15744, !15745}
!15744 = !DILocalVariable(name: "thread", arg: 1, scope: !15740, file: !2428, line: 897, type: !2432)
!15745 = !DILocalVariable(name: "options", arg: 2, scope: !15740, file: !2428, line: 897, type: !32)
!15746 = !DILocation(line: 0, scope: !15740)
!15747 = !DILocation(line: 902, column: 2, scope: !15740)
!15748 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2428, file: !2428, line: 1072, type: !15749, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15754)
!15749 = !DISubroutineType(types: !15750)
!15750 = !{!125, !2431, !15751}
!15751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15752, size: 32)
!15752 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !544, line: 234, baseType: !15753)
!15753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !544, line: 192, elements: !652)
!15754 = !{!15755, !15756}
!15755 = !DILocalVariable(name: "thread", arg: 1, scope: !15748, file: !2428, line: 1072, type: !2431)
!15756 = !DILocalVariable(name: "stats", arg: 2, scope: !15748, file: !2428, line: 1073, type: !15751)
!15757 = !DILocation(line: 0, scope: !15748)
!15758 = !DILocation(line: 1075, column: 14, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15748, file: !2428, line: 1075, column: 6)
!15760 = !DILocation(line: 1075, column: 23, scope: !15759)
!15761 = !DILocation(line: 1086, column: 1, scope: !15748)
!15762 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2428, file: !2428, line: 1088, type: !15763, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !15765)
!15763 = !DISubroutineType(types: !15764)
!15764 = !{!125, !15751}
!15765 = !{!15766}
!15766 = !DILocalVariable(name: "stats", arg: 1, scope: !15762, file: !2428, line: 1088, type: !15751)
!15767 = !DILocation(line: 0, scope: !15762)
!15768 = !DILocation(line: 1094, column: 12, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15762, file: !2428, line: 1094, column: 6)
!15770 = !DILocation(line: 1120, column: 1, scope: !15762)
!15771 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15772, file: !15772, line: 20, type: !3274, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !652)
!15772 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15773 = !DILocation(line: 30, column: 2, scope: !15771)
!15774 = !DILocation(line: 31, column: 1, scope: !15771)
!15775 = distinct !DISubprogram(name: "idle", scope: !15772, file: !15772, line: 33, type: !5227, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !15776)
!15776 = !{!15777, !15778, !15779}
!15777 = !DILocalVariable(name: "unused1", arg: 1, scope: !15775, file: !15772, line: 33, type: !124)
!15778 = !DILocalVariable(name: "unused2", arg: 2, scope: !15775, file: !15772, line: 33, type: !124)
!15779 = !DILocalVariable(name: "unused3", arg: 3, scope: !15775, file: !15772, line: 33, type: !124)
!15780 = !DILocation(line: 0, scope: !15775)
!15781 = !DILocation(line: 41, column: 2, scope: !15775)
!15782 = !DILocation(line: 55, column: 2, scope: !15783, inlinedAt: !15787)
!15783 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6796, file: !6796, line: 42, type: !6797, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !15784)
!15784 = !{!15785, !15786}
!15785 = !DILocalVariable(name: "key", scope: !15783, file: !6796, line: 44, type: !32)
!15786 = !DILocalVariable(name: "tmp", scope: !15783, file: !6796, line: 53, type: !32)
!15787 = distinct !DILocation(line: 62, column: 10, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15775, file: !15772, line: 41, column: 15)
!15789 = !{i64 1650467}
!15790 = !DILocation(line: 0, scope: !15783, inlinedAt: !15787)
!15791 = !DILocation(line: 86, column: 3, scope: !15788)
!15792 = distinct !{!15792, !15781, !15793}
!15793 = !DILocation(line: 105, column: 2, scope: !15775)
!15794 = distinct !DISubprogram(name: "k_cpu_idle", scope: !637, file: !637, line: 5627, type: !3274, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !652)
!15795 = !DILocation(line: 5629, column: 2, scope: !15794)
!15796 = !DILocation(line: 5630, column: 1, scope: !15794)
!15797 = !DISubprogram(name: "arch_cpu_idle", scope: !5225, file: !5225, line: 167, type: !3274, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !652)
!15798 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2662, file: !2662, line: 93, type: !15799, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15801)
!15799 = !DISubroutineType(types: !15800)
!15800 = !{!997, !2557, !2557}
!15801 = !{!15802, !15803, !15804, !15805}
!15802 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15798, file: !2662, line: 93, type: !2557)
!15803 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15798, file: !2662, line: 94, type: !2557)
!15804 = !DILocalVariable(name: "b1", scope: !15798, file: !2662, line: 97, type: !997)
!15805 = !DILocalVariable(name: "b2", scope: !15798, file: !2662, line: 98, type: !997)
!15806 = !DILocation(line: 0, scope: !15798)
!15807 = !DILocation(line: 97, column: 30, scope: !15798)
!15808 = !DILocation(line: 98, column: 30, scope: !15798)
!15809 = !DILocation(line: 100, column: 9, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15798, file: !2662, line: 100, column: 6)
!15811 = !DILocation(line: 100, column: 6, scope: !15798)
!15812 = !DILocation(line: 125, column: 1, scope: !15798)
!15813 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2662, file: !2662, line: 428, type: !15814, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15816)
!15814 = !DISubroutineType(types: !15815)
!15815 = !{null, !2557}
!15816 = !{!15817}
!15817 = !DILocalVariable(name: "curr", arg: 1, scope: !15813, file: !2662, line: 428, type: !2557)
!15818 = !DILocation(line: 0, scope: !15813)
!15819 = !DILocation(line: 434, column: 6, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15813, file: !2662, line: 434, column: 6)
!15821 = !DILocation(line: 434, column: 23, scope: !15820)
!15822 = !DILocation(line: 434, column: 6, scope: !15813)
!15823 = !DILocation(line: 435, column: 50, scope: !15824)
!15824 = distinct !DILexicalBlock(scope: !15820, file: !2662, line: 434, column: 29)
!15825 = !DILocation(line: 435, column: 48, scope: !15824)
!15826 = !DILocation(line: 435, column: 29, scope: !15824)
!15827 = !DILocation(line: 436, column: 24, scope: !15824)
!15828 = !DILocation(line: 436, column: 3, scope: !15824)
!15829 = !DILocation(line: 437, column: 2, scope: !15824)
!15830 = !DILocation(line: 438, column: 1, scope: !15813)
!15831 = distinct !DISubprogram(name: "slice_time", scope: !2662, file: !2662, line: 407, type: !15832, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15834)
!15832 = !DISubroutineType(types: !15833)
!15833 = !{!125, !2557}
!15834 = !{!15835, !15836}
!15835 = !DILocalVariable(name: "curr", arg: 1, scope: !15831, file: !2662, line: 407, type: !2557)
!15836 = !DILocalVariable(name: "ret", scope: !15831, file: !2662, line: 409, type: !125)
!15837 = !DILocation(line: 0, scope: !15831)
!15838 = !DILocation(line: 409, column: 12, scope: !15831)
!15839 = !DILocation(line: 416, column: 2, scope: !15831)
!15840 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2662, file: !2662, line: 440, type: !15841, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15843)
!15841 = !DISubroutineType(types: !15842)
!15842 = !{null, !997, !125}
!15843 = !{!15844, !15845, !15846, !15852}
!15844 = !DILocalVariable(name: "slice", arg: 1, scope: !15840, file: !2662, line: 440, type: !997)
!15845 = !DILocalVariable(name: "prio", arg: 2, scope: !15840, file: !2662, line: 440, type: !125)
!15846 = !DILocalVariable(name: "__i", scope: !15847, file: !2662, line: 442, type: !15848)
!15847 = distinct !DILexicalBlock(scope: !15840, file: !2662, line: 442, column: 2)
!15848 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !651, line: 106, baseType: !15849)
!15849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !651, line: 32, size: 32, elements: !15850)
!15850 = !{!15851}
!15851 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15849, file: !651, line: 33, baseType: !125, size: 32)
!15852 = !DILocalVariable(name: "__key", scope: !15847, file: !2662, line: 442, type: !15848)
!15853 = !DILocation(line: 0, scope: !15840)
!15854 = !DILocation(line: 0, scope: !15847)
!15855 = !DILocalVariable(name: "l", arg: 1, scope: !15856, file: !651, line: 136, type: !15859)
!15856 = distinct !DISubprogram(name: "k_spin_lock", scope: !651, file: !651, line: 136, type: !15857, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15860)
!15857 = !DISubroutineType(types: !15858)
!15858 = !{!15848, !15859}
!15859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 32)
!15860 = !{!15855, !15861}
!15861 = !DILocalVariable(name: "k", scope: !15856, file: !651, line: 139, type: !15848)
!15862 = !DILocation(line: 0, scope: !15856, inlinedAt: !15863)
!15863 = distinct !DILocation(line: 442, column: 2, scope: !15847)
!15864 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !15869)
!15865 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6796, file: !6796, line: 42, type: !6797, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15866)
!15866 = !{!15867, !15868}
!15867 = !DILocalVariable(name: "key", scope: !15865, file: !6796, line: 44, type: !32)
!15868 = !DILocalVariable(name: "tmp", scope: !15865, file: !6796, line: 53, type: !32)
!15869 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !15863)
!15870 = !{i64 1694438}
!15871 = !DILocation(line: 0, scope: !15865, inlinedAt: !15869)
!15872 = !DILocation(line: 443, column: 29, scope: !15873)
!15873 = distinct !DILexicalBlock(scope: !15874, file: !2662, line: 442, column: 26)
!15874 = distinct !DILexicalBlock(scope: !15847, file: !2662, line: 442, column: 2)
!15875 = !DILocation(line: 444, column: 17, scope: !15873)
!15876 = !DILocation(line: 445, column: 51, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15873, file: !2662, line: 445, column: 7)
!15878 = !DILocation(line: 445, column: 7, scope: !15873)
!15879 = !DILocation(line: 0, scope: !15873)
!15880 = !DILocation(line: 451, column: 18, scope: !15873)
!15881 = !DILocation(line: 452, column: 3, scope: !15873)
!15882 = !DILocalVariable(name: "key", arg: 2, scope: !15883, file: !651, line: 190, type: !15848)
!15883 = distinct !DISubprogram(name: "k_spin_unlock", scope: !651, file: !651, line: 189, type: !15884, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15886)
!15884 = !DISubroutineType(types: !15885)
!15885 = !{null, !15859, !15848}
!15886 = !{!15887, !15882}
!15887 = !DILocalVariable(name: "l", arg: 1, scope: !15883, file: !651, line: 189, type: !15859)
!15888 = !DILocation(line: 0, scope: !15883, inlinedAt: !15889)
!15889 = distinct !DILocation(line: 442, column: 2, scope: !15874)
!15890 = !DILocalVariable(name: "key", arg: 1, scope: !15891, file: !6796, line: 84, type: !32)
!15891 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6796, file: !6796, line: 84, type: !6807, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15892)
!15892 = !{!15890}
!15893 = !DILocation(line: 0, scope: !15891, inlinedAt: !15894)
!15894 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !15889)
!15895 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !15894)
!15896 = !{i64 1695255}
!15897 = !DILocation(line: 454, column: 1, scope: !15840)
!15898 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !15689, file: !15689, line: 389, type: !9485, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15899)
!15899 = !{!15900}
!15900 = !DILocalVariable(name: "t", arg: 1, scope: !15898, file: !15689, line: 389, type: !208)
!15901 = !DILocation(line: 0, scope: !15898)
!15902 = !DILocalVariable(name: "t", arg: 1, scope: !15903, file: !15689, line: 102, type: !2536)
!15903 = distinct !DISubprogram(name: "z_tmcvt", scope: !15689, file: !15689, line: 102, type: !15697, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15904)
!15904 = !{!15902, !15905, !15906, !15907, !15908, !15909, !15910, !15911, !15912, !15913, !15914}
!15905 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15903, file: !15689, line: 102, type: !208)
!15906 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15903, file: !15689, line: 103, type: !208)
!15907 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15903, file: !15689, line: 103, type: !153)
!15908 = !DILocalVariable(name: "result32", arg: 5, scope: !15903, file: !15689, line: 104, type: !153)
!15909 = !DILocalVariable(name: "round_up", arg: 6, scope: !15903, file: !15689, line: 104, type: !153)
!15910 = !DILocalVariable(name: "round_off", arg: 7, scope: !15903, file: !15689, line: 105, type: !153)
!15911 = !DILocalVariable(name: "mul_ratio", scope: !15903, file: !15689, line: 107, type: !153)
!15912 = !DILocalVariable(name: "div_ratio", scope: !15903, file: !15689, line: 109, type: !153)
!15913 = !DILocalVariable(name: "off", scope: !15903, file: !15689, line: 116, type: !2536)
!15914 = !DILocalVariable(name: "rdivisor", scope: !15915, file: !15689, line: 119, type: !208)
!15915 = distinct !DILexicalBlock(scope: !15916, file: !15689, line: 118, column: 18)
!15916 = distinct !DILexicalBlock(scope: !15903, file: !15689, line: 118, column: 6)
!15917 = !DILocation(line: 0, scope: !15903, inlinedAt: !15918)
!15918 = distinct !DILocation(line: 392, column: 9, scope: !15898)
!15919 = !DILocation(line: 143, column: 25, scope: !15920, inlinedAt: !15918)
!15920 = distinct !DILexicalBlock(scope: !15921, file: !15689, line: 142, column: 17)
!15921 = distinct !DILexicalBlock(scope: !15922, file: !15689, line: 142, column: 7)
!15922 = distinct !DILexicalBlock(scope: !15923, file: !15689, line: 141, column: 24)
!15923 = distinct !DILexicalBlock(scope: !15924, file: !15689, line: 141, column: 13)
!15924 = distinct !DILexicalBlock(scope: !15903, file: !15689, line: 134, column: 6)
!15925 = !DILocation(line: 392, column: 2, scope: !15898)
!15926 = distinct !DISubprogram(name: "z_time_slice", scope: !2662, file: !2662, line: 502, type: !10229, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15927)
!15927 = !{!15928, !15929}
!15928 = !DILocalVariable(name: "ticks", arg: 1, scope: !15926, file: !2662, line: 502, type: !125)
!15929 = !DILocalVariable(name: "key", scope: !15926, file: !2662, line: 511, type: !15848)
!15930 = !DILocation(line: 0, scope: !15926)
!15931 = !DILocation(line: 0, scope: !15856, inlinedAt: !15932)
!15932 = distinct !DILocation(line: 511, column: 25, scope: !15926)
!15933 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !15934)
!15934 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !15932)
!15935 = !DILocation(line: 0, scope: !15865, inlinedAt: !15934)
!15936 = !DILocation(line: 514, column: 6, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15926, file: !2662, line: 514, column: 6)
!15938 = !DILocation(line: 514, column: 25, scope: !15937)
!15939 = !DILocation(line: 514, column: 22, scope: !15937)
!15940 = !DILocation(line: 514, column: 6, scope: !15926)
!15941 = !DILocation(line: 515, column: 3, scope: !15942)
!15942 = distinct !DILexicalBlock(scope: !15937, file: !2662, line: 514, column: 35)
!15943 = !DILocation(line: 0, scope: !15883, inlinedAt: !15944)
!15944 = distinct !DILocation(line: 516, column: 3, scope: !15942)
!15945 = !DILocation(line: 0, scope: !15891, inlinedAt: !15946)
!15946 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !15944)
!15947 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !15946)
!15948 = !DILocation(line: 517, column: 3, scope: !15942)
!15949 = !DILocation(line: 519, column: 18, scope: !15926)
!15950 = !DILocation(line: 522, column: 6, scope: !15951)
!15951 = distinct !DILexicalBlock(scope: !15926, file: !2662, line: 522, column: 6)
!15952 = !DILocation(line: 522, column: 27, scope: !15951)
!15953 = !DILocation(line: 522, column: 30, scope: !15951)
!15954 = !DILocation(line: 522, column: 6, scope: !15926)
!15955 = !DILocation(line: 523, column: 30, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15957, file: !2662, line: 523, column: 7)
!15957 = distinct !DILexicalBlock(scope: !15951, file: !2662, line: 522, column: 51)
!15958 = !DILocation(line: 523, column: 13, scope: !15956)
!15959 = !DILocation(line: 523, column: 7, scope: !15957)
!15960 = !DILocation(line: 530, column: 10, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15956, file: !2662, line: 523, column: 43)
!15962 = !DILocation(line: 531, column: 3, scope: !15961)
!15963 = !DILocation(line: 532, column: 30, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15956, file: !2662, line: 531, column: 10)
!15965 = !DILocation(line: 535, column: 29, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15951, file: !2662, line: 534, column: 9)
!15967 = !DILocation(line: 0, scope: !15883, inlinedAt: !15968)
!15968 = distinct !DILocation(line: 537, column: 2, scope: !15926)
!15969 = !DILocation(line: 0, scope: !15891, inlinedAt: !15970)
!15970 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !15968)
!15971 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !15970)
!15972 = !DILocation(line: 538, column: 1, scope: !15926)
!15973 = distinct !DISubprogram(name: "sliceable", scope: !2662, file: !2662, line: 468, type: !15974, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15976)
!15974 = !DISubroutineType(types: !15975)
!15975 = !{!153, !2557}
!15976 = !{!15977, !15978}
!15977 = !DILocalVariable(name: "thread", arg: 1, scope: !15973, file: !2662, line: 468, type: !2557)
!15978 = !DILocalVariable(name: "ret", scope: !15973, file: !2662, line: 470, type: !153)
!15979 = !DILocation(line: 0, scope: !15973)
!15980 = !DILocation(line: 470, column: 13, scope: !15973)
!15981 = !DILocation(line: 471, column: 3, scope: !15973)
!15982 = !DILocation(line: 471, column: 7, scope: !15973)
!15983 = !DILocation(line: 472, column: 3, scope: !15973)
!15984 = !DILocation(line: 472, column: 37, scope: !15973)
!15985 = !DILocation(line: 472, column: 24, scope: !15973)
!15986 = !DILocation(line: 472, column: 43, scope: !15973)
!15987 = !DILocation(line: 472, column: 7, scope: !15973)
!15988 = !DILocation(line: 473, column: 3, scope: !15973)
!15989 = !DILocation(line: 473, column: 7, scope: !15973)
!15990 = !DILocation(line: 473, column: 6, scope: !15973)
!15991 = !DILocation(line: 479, column: 2, scope: !15973)
!15992 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2662, file: !2662, line: 482, type: !15993, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !15995)
!15993 = !DISubroutineType(types: !15994)
!15994 = !{!15848, !15848}
!15995 = !{!15996, !15997}
!15996 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15992, file: !2662, line: 482, type: !15848)
!15997 = !DILocalVariable(name: "curr", scope: !15992, file: !2662, line: 484, type: !2557)
!15998 = !DILocation(line: 0, scope: !15992)
!15999 = !DILocation(line: 484, column: 26, scope: !15992)
!16000 = !DILocation(line: 493, column: 7, scope: !16001)
!16001 = distinct !DILexicalBlock(scope: !15992, file: !2662, line: 493, column: 6)
!16002 = !DILocation(line: 493, column: 6, scope: !15992)
!16003 = !DILocation(line: 494, column: 3, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !16001, file: !2662, line: 493, column: 49)
!16005 = !DILocation(line: 495, column: 2, scope: !16004)
!16006 = !DILocation(line: 496, column: 2, scope: !15992)
!16007 = !DILocation(line: 499, column: 1, scope: !15992)
!16008 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !15128, file: !15128, line: 106, type: !15974, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16009)
!16009 = !{!16010, !16011}
!16010 = !DILocalVariable(name: "thread", arg: 1, scope: !16008, file: !15128, line: 106, type: !2557)
!16011 = !DILocalVariable(name: "state", scope: !16008, file: !15128, line: 108, type: !150)
!16012 = !DILocation(line: 0, scope: !16008)
!16013 = !DILocation(line: 108, column: 31, scope: !16008)
!16014 = !DILocation(line: 110, column: 16, scope: !16008)
!16015 = !DILocation(line: 111, column: 41, scope: !16008)
!16016 = !DILocation(line: 110, column: 2, scope: !16008)
!16017 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2662, file: !2662, line: 393, type: !15814, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16018)
!16018 = !{!16019}
!16019 = !DILocalVariable(name: "thread", arg: 1, scope: !16017, file: !2662, line: 393, type: !2557)
!16020 = !DILocation(line: 0, scope: !16017)
!16021 = !DILocation(line: 395, column: 6, scope: !16022)
!16022 = distinct !DILexicalBlock(scope: !16017, file: !2662, line: 395, column: 6)
!16023 = !DILocation(line: 395, column: 6, scope: !16017)
!16024 = !DILocalVariable(name: "thread", arg: 1, scope: !16025, file: !2662, line: 264, type: !2557)
!16025 = distinct !DISubprogram(name: "dequeue_thread", scope: !2662, file: !2662, line: 264, type: !15814, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16026)
!16026 = !{!16024}
!16027 = !DILocation(line: 0, scope: !16025, inlinedAt: !16028)
!16028 = distinct !DILocation(line: 396, column: 3, scope: !16029)
!16029 = distinct !DILexicalBlock(scope: !16022, file: !2662, line: 395, column: 34)
!16030 = !DILocation(line: 266, column: 15, scope: !16025, inlinedAt: !16028)
!16031 = !DILocation(line: 266, column: 28, scope: !16025, inlinedAt: !16028)
!16032 = !DILocalVariable(name: "thread", arg: 1, scope: !16033, file: !2662, line: 232, type: !2557)
!16033 = distinct !DISubprogram(name: "runq_remove", scope: !2662, file: !2662, line: 232, type: !15814, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16034)
!16034 = !{!16032}
!16035 = !DILocation(line: 0, scope: !16033, inlinedAt: !16036)
!16036 = distinct !DILocation(line: 268, column: 3, scope: !16037, inlinedAt: !16028)
!16037 = distinct !DILexicalBlock(scope: !16038, file: !2662, line: 267, column: 35)
!16038 = distinct !DILexicalBlock(scope: !16025, file: !2662, line: 267, column: 6)
!16039 = !DILocation(line: 234, column: 2, scope: !16033, inlinedAt: !16036)
!16040 = !DILocation(line: 397, column: 2, scope: !16029)
!16041 = !DILocalVariable(name: "thread", arg: 1, scope: !16042, file: !2662, line: 250, type: !2557)
!16042 = distinct !DISubprogram(name: "queue_thread", scope: !2662, file: !2662, line: 250, type: !15814, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16043)
!16043 = !{!16041}
!16044 = !DILocation(line: 0, scope: !16042, inlinedAt: !16045)
!16045 = distinct !DILocation(line: 398, column: 2, scope: !16017)
!16046 = !DILocation(line: 252, column: 15, scope: !16042, inlinedAt: !16045)
!16047 = !DILocation(line: 252, column: 28, scope: !16042, inlinedAt: !16045)
!16048 = !DILocalVariable(name: "thread", arg: 1, scope: !16049, file: !2662, line: 227, type: !2557)
!16049 = distinct !DISubprogram(name: "runq_add", scope: !2662, file: !2662, line: 227, type: !15814, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16050)
!16050 = !{!16048}
!16051 = !DILocation(line: 0, scope: !16049, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 254, column: 3, scope: !16053, inlinedAt: !16045)
!16053 = distinct !DILexicalBlock(scope: !16054, file: !2662, line: 253, column: 35)
!16054 = distinct !DILexicalBlock(scope: !16042, file: !2662, line: 253, column: 6)
!16055 = !DILocalVariable(name: "pq", arg: 1, scope: !16056, file: !2662, line: 181, type: !16059)
!16056 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2662, file: !2662, line: 181, type: !16057, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16060)
!16057 = !DISubroutineType(types: !16058)
!16058 = !{null, !16059, !2557}
!16059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 32)
!16060 = !{!16055, !16061, !16062}
!16061 = !DILocalVariable(name: "thread", arg: 2, scope: !16056, file: !2662, line: 182, type: !2557)
!16062 = !DILocalVariable(name: "t", scope: !16056, file: !2662, line: 184, type: !2557)
!16063 = !DILocation(line: 0, scope: !16056, inlinedAt: !16064)
!16064 = distinct !DILocation(line: 229, column: 2, scope: !16049, inlinedAt: !16052)
!16065 = !DILocation(line: 188, column: 2, scope: !16066, inlinedAt: !16064)
!16066 = distinct !DILexicalBlock(scope: !16056, file: !2662, line: 188, column: 2)
!16067 = !DILocation(line: 188, column: 2, scope: !16068, inlinedAt: !16064)
!16068 = distinct !DILexicalBlock(scope: !16066, file: !2662, line: 188, column: 2)
!16069 = !DILocation(line: 0, scope: !16066, inlinedAt: !16064)
!16070 = !DILocation(line: 189, column: 7, scope: !16071, inlinedAt: !16064)
!16071 = distinct !DILexicalBlock(scope: !16072, file: !2662, line: 189, column: 7)
!16072 = distinct !DILexicalBlock(scope: !16068, file: !2662, line: 188, column: 56)
!16073 = !DILocation(line: 189, column: 35, scope: !16071, inlinedAt: !16064)
!16074 = !DILocation(line: 189, column: 7, scope: !16072, inlinedAt: !16064)
!16075 = !DILocation(line: 191, column: 21, scope: !16076, inlinedAt: !16064)
!16076 = distinct !DILexicalBlock(scope: !16071, file: !2662, line: 189, column: 40)
!16077 = !DILocation(line: 190, column: 4, scope: !16076, inlinedAt: !16064)
!16078 = !DILocation(line: 192, column: 4, scope: !16076, inlinedAt: !16064)
!16079 = distinct !{!16079, !16065, !16080}
!16080 = !DILocation(line: 194, column: 2, scope: !16066, inlinedAt: !16064)
!16081 = !DILocation(line: 196, column: 37, scope: !16056, inlinedAt: !16064)
!16082 = !DILocation(line: 196, column: 2, scope: !16056, inlinedAt: !16064)
!16083 = !DILocation(line: 197, column: 1, scope: !16056, inlinedAt: !16064)
!16084 = !DILocation(line: 399, column: 25, scope: !16017)
!16085 = !DILocation(line: 399, column: 22, scope: !16017)
!16086 = !DILocation(line: 399, column: 2, scope: !16017)
!16087 = !DILocation(line: 400, column: 1, scope: !16017)
!16088 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !15128, file: !15128, line: 136, type: !15974, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16089)
!16089 = !{!16090}
!16090 = !DILocalVariable(name: "thread", arg: 1, scope: !16088, file: !15128, line: 136, type: !2557)
!16091 = !DILocation(line: 0, scope: !16088)
!16092 = !DILocation(line: 138, column: 9, scope: !16088)
!16093 = !DILocation(line: 138, column: 2, scope: !16088)
!16094 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2662, file: !2662, line: 1137, type: !16057, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16095)
!16095 = !{!16096, !16097}
!16096 = !DILocalVariable(name: "pq", arg: 1, scope: !16094, file: !2662, line: 1137, type: !16059)
!16097 = !DILocalVariable(name: "thread", arg: 2, scope: !16094, file: !2662, line: 1137, type: !2557)
!16098 = !DILocation(line: 0, scope: !16094)
!16099 = !DILocation(line: 1141, column: 33, scope: !16094)
!16100 = !DILocation(line: 1141, column: 2, scope: !16094)
!16101 = !DILocation(line: 1142, column: 1, scope: !16094)
!16102 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !554, file: !554, line: 294, type: !16103, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16105)
!16103 = !DISubroutineType(types: !16104)
!16104 = !{!2658, !16059}
!16105 = !{!16106}
!16106 = !DILocalVariable(name: "list", arg: 1, scope: !16102, file: !554, line: 294, type: !16059)
!16107 = !DILocation(line: 0, scope: !16102)
!16108 = !DILocation(line: 296, column: 9, scope: !16102)
!16109 = !DILocation(line: 296, column: 49, scope: !16102)
!16110 = !DILocation(line: 296, column: 2, scope: !16102)
!16111 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !554, file: !554, line: 443, type: !16112, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16114)
!16112 = !DISubroutineType(types: !16113)
!16113 = !{null, !2658, !2658}
!16114 = !{!16115, !16116, !16117}
!16115 = !DILocalVariable(name: "successor", arg: 1, scope: !16111, file: !554, line: 443, type: !2658)
!16116 = !DILocalVariable(name: "node", arg: 2, scope: !16111, file: !554, line: 443, type: !2658)
!16117 = !DILocalVariable(name: "prev", scope: !16111, file: !554, line: 445, type: !16118)
!16118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2658)
!16119 = !DILocation(line: 0, scope: !16111)
!16120 = !DILocation(line: 445, column: 39, scope: !16111)
!16121 = !DILocation(line: 447, column: 8, scope: !16111)
!16122 = !DILocation(line: 447, column: 13, scope: !16111)
!16123 = !DILocation(line: 448, column: 8, scope: !16111)
!16124 = !DILocation(line: 448, column: 13, scope: !16111)
!16125 = !DILocation(line: 449, column: 8, scope: !16111)
!16126 = !DILocation(line: 449, column: 13, scope: !16111)
!16127 = !DILocation(line: 450, column: 18, scope: !16111)
!16128 = !DILocation(line: 451, column: 1, scope: !16111)
!16129 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !554, file: !554, line: 341, type: !16130, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16132)
!16130 = !DISubroutineType(types: !16131)
!16131 = !{!2658, !16059, !2658}
!16132 = !{!16133, !16134}
!16133 = !DILocalVariable(name: "list", arg: 1, scope: !16129, file: !554, line: 341, type: !16059)
!16134 = !DILocalVariable(name: "node", arg: 2, scope: !16129, file: !554, line: 342, type: !2658)
!16135 = !DILocation(line: 0, scope: !16129)
!16136 = !DILocation(line: 344, column: 15, scope: !16129)
!16137 = !DILocation(line: 344, column: 9, scope: !16129)
!16138 = !DILocation(line: 344, column: 26, scope: !16129)
!16139 = !DILocation(line: 344, column: 2, scope: !16129)
!16140 = distinct !DISubprogram(name: "sys_dlist_append", scope: !554, file: !554, line: 404, type: !16141, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16143)
!16141 = !DISubroutineType(types: !16142)
!16142 = !{null, !16059, !2658}
!16143 = !{!16144, !16145, !16146}
!16144 = !DILocalVariable(name: "list", arg: 1, scope: !16140, file: !554, line: 404, type: !16059)
!16145 = !DILocalVariable(name: "node", arg: 2, scope: !16140, file: !554, line: 404, type: !2658)
!16146 = !DILocalVariable(name: "tail", scope: !16140, file: !554, line: 406, type: !16118)
!16147 = !DILocation(line: 0, scope: !16140)
!16148 = !DILocation(line: 406, column: 34, scope: !16140)
!16149 = !DILocation(line: 408, column: 8, scope: !16140)
!16150 = !DILocation(line: 408, column: 13, scope: !16140)
!16151 = !DILocation(line: 409, column: 8, scope: !16140)
!16152 = !DILocation(line: 409, column: 13, scope: !16140)
!16153 = !DILocation(line: 411, column: 8, scope: !16140)
!16154 = !DILocation(line: 411, column: 13, scope: !16140)
!16155 = !DILocation(line: 412, column: 13, scope: !16140)
!16156 = !DILocation(line: 413, column: 1, scope: !16140)
!16157 = distinct !DISubprogram(name: "update_cache", scope: !2662, file: !2662, line: 559, type: !10229, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16158)
!16158 = !{!16159, !16160}
!16159 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16157, file: !2662, line: 559, type: !125)
!16160 = !DILocalVariable(name: "thread", scope: !16157, file: !2662, line: 562, type: !2557)
!16161 = !DILocation(line: 0, scope: !16157)
!16162 = !DILocation(line: 239, column: 9, scope: !16163, inlinedAt: !16166)
!16163 = distinct !DISubprogram(name: "runq_best", scope: !2662, file: !2662, line: 237, type: !16164, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !652)
!16164 = !DISubroutineType(types: !16165)
!16165 = !{!2557}
!16166 = distinct !DILocation(line: 314, column: 28, scope: !16167, inlinedAt: !16170)
!16167 = distinct !DISubprogram(name: "next_up", scope: !2662, file: !2662, line: 312, type: !16164, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16168)
!16168 = !{!16169}
!16169 = !DILocalVariable(name: "thread", scope: !16167, file: !2662, line: 314, type: !2557)
!16170 = distinct !DILocation(line: 562, column: 28, scope: !16157)
!16171 = !DILocation(line: 0, scope: !16167, inlinedAt: !16170)
!16172 = !DILocation(line: 340, column: 17, scope: !16167, inlinedAt: !16170)
!16173 = !DILocation(line: 340, column: 9, scope: !16167, inlinedAt: !16170)
!16174 = !DILocalVariable(name: "thread", arg: 1, scope: !16175, file: !2662, line: 127, type: !2557)
!16175 = distinct !DISubprogram(name: "should_preempt", scope: !2662, file: !2662, line: 127, type: !16176, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16178)
!16176 = !DISubroutineType(types: !16177)
!16177 = !{!153, !2557, !125}
!16178 = !{!16174, !16179}
!16179 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16175, file: !2662, line: 128, type: !125)
!16180 = !DILocation(line: 0, scope: !16175, inlinedAt: !16181)
!16181 = distinct !DILocation(line: 564, column: 6, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16157, file: !2662, line: 564, column: 6)
!16183 = !DILocation(line: 133, column: 17, scope: !16184, inlinedAt: !16181)
!16184 = distinct !DILexicalBlock(scope: !16175, file: !2662, line: 133, column: 6)
!16185 = !DILocation(line: 0, scope: !16182)
!16186 = !DILocation(line: 133, column: 6, scope: !16175, inlinedAt: !16181)
!16187 = !DILocation(line: 140, column: 6, scope: !16188, inlinedAt: !16181)
!16188 = distinct !DILexicalBlock(scope: !16175, file: !2662, line: 140, column: 6)
!16189 = !DILocation(line: 140, column: 6, scope: !16175, inlinedAt: !16181)
!16190 = !DILocation(line: 150, column: 9, scope: !16191, inlinedAt: !16181)
!16191 = distinct !DILexicalBlock(scope: !16175, file: !2662, line: 149, column: 6)
!16192 = !DILocation(line: 149, column: 6, scope: !16175, inlinedAt: !16181)
!16193 = !DILocation(line: 157, column: 6, scope: !16194, inlinedAt: !16181)
!16194 = distinct !DILexicalBlock(scope: !16175, file: !2662, line: 157, column: 6)
!16195 = !DILocation(line: 564, column: 6, scope: !16157)
!16196 = !DILocation(line: 566, column: 14, scope: !16197)
!16197 = distinct !DILexicalBlock(scope: !16198, file: !2662, line: 566, column: 7)
!16198 = distinct !DILexicalBlock(scope: !16182, file: !2662, line: 564, column: 42)
!16199 = !DILocation(line: 566, column: 7, scope: !16198)
!16200 = !DILocation(line: 567, column: 4, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16197, file: !2662, line: 566, column: 27)
!16202 = !DILocation(line: 568, column: 3, scope: !16201)
!16203 = !DILocation(line: 585, column: 1, scope: !16157)
!16204 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2662, file: !2662, line: 1144, type: !16205, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16207)
!16205 = !DISubroutineType(types: !16206)
!16206 = !{!2557, !16059}
!16207 = !{!16208, !16209, !16210}
!16208 = !DILocalVariable(name: "pq", arg: 1, scope: !16204, file: !2662, line: 1144, type: !16059)
!16209 = !DILocalVariable(name: "thread", scope: !16204, file: !2662, line: 1146, type: !2557)
!16210 = !DILocalVariable(name: "n", scope: !16204, file: !2662, line: 1147, type: !2658)
!16211 = !DILocation(line: 0, scope: !16204)
!16212 = !DILocation(line: 1147, column: 19, scope: !16204)
!16213 = !DILocation(line: 1152, column: 2, scope: !16204)
!16214 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !15128, file: !15128, line: 115, type: !15974, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16215)
!16215 = !{!16216}
!16216 = !DILocalVariable(name: "thread", arg: 1, scope: !16214, file: !15128, line: 115, type: !2557)
!16217 = !DILocation(line: 0, scope: !16214)
!16218 = !DILocation(line: 117, column: 46, scope: !16214)
!16219 = !DILocation(line: 117, column: 10, scope: !16214)
!16220 = !DILocation(line: 117, column: 9, scope: !16214)
!16221 = !DILocation(line: 117, column: 2, scope: !16214)
!16222 = distinct !DISubprogram(name: "is_preempt", scope: !2662, file: !2662, line: 62, type: !15832, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16223)
!16223 = !{!16224}
!16224 = !DILocalVariable(name: "thread", arg: 1, scope: !16222, file: !2662, line: 62, type: !2557)
!16225 = !DILocation(line: 0, scope: !16222)
!16226 = !DILocation(line: 65, column: 22, scope: !16222)
!16227 = !DILocation(line: 65, column: 30, scope: !16222)
!16228 = !DILocation(line: 65, column: 2, scope: !16222)
!16229 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15522, file: !15522, line: 35, type: !16230, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16234)
!16230 = !DISubroutineType(types: !16231)
!16231 = !{!153, !16232}
!16232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16233, size: 32)
!16233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2608)
!16234 = !{!16235}
!16235 = !DILocalVariable(name: "to", arg: 1, scope: !16229, file: !15522, line: 35, type: !16232)
!16236 = !DILocation(line: 0, scope: !16229)
!16237 = !DILocation(line: 37, column: 35, scope: !16229)
!16238 = !DILocation(line: 37, column: 10, scope: !16229)
!16239 = !DILocation(line: 37, column: 9, scope: !16229)
!16240 = !DILocation(line: 37, column: 2, scope: !16229)
!16241 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !554, file: !554, line: 225, type: !16242, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16246)
!16242 = !DISubroutineType(types: !16243)
!16243 = !{!153, !16244}
!16244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16245, size: 32)
!16245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2567)
!16246 = !{!16247}
!16247 = !DILocalVariable(name: "node", arg: 1, scope: !16241, file: !554, line: 225, type: !16244)
!16248 = !DILocation(line: 0, scope: !16241)
!16249 = !DILocation(line: 227, column: 15, scope: !16241)
!16250 = !DILocation(line: 227, column: 20, scope: !16241)
!16251 = !DILocation(line: 227, column: 2, scope: !16241)
!16252 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !554, file: !554, line: 325, type: !16130, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16253)
!16253 = !{!16254, !16255}
!16254 = !DILocalVariable(name: "list", arg: 1, scope: !16252, file: !554, line: 325, type: !16059)
!16255 = !DILocalVariable(name: "node", arg: 2, scope: !16252, file: !554, line: 326, type: !2658)
!16256 = !DILocation(line: 0, scope: !16252)
!16257 = !DILocation(line: 328, column: 24, scope: !16252)
!16258 = !DILocation(line: 328, column: 15, scope: !16252)
!16259 = !DILocation(line: 328, column: 9, scope: !16252)
!16260 = !DILocation(line: 328, column: 45, scope: !16252)
!16261 = !DILocation(line: 328, column: 2, scope: !16252)
!16262 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !554, file: !554, line: 266, type: !16263, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16265)
!16263 = !DISubroutineType(types: !16264)
!16264 = !{!153, !16059}
!16265 = !{!16266}
!16266 = !DILocalVariable(name: "list", arg: 1, scope: !16262, file: !554, line: 266, type: !16059)
!16267 = !DILocation(line: 0, scope: !16262)
!16268 = !DILocation(line: 268, column: 15, scope: !16262)
!16269 = !DILocation(line: 268, column: 20, scope: !16262)
!16270 = !DILocation(line: 268, column: 2, scope: !16262)
!16271 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !554, file: !554, line: 496, type: !16272, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16274)
!16272 = !DISubroutineType(types: !16273)
!16273 = !{null, !2658}
!16274 = !{!16275, !16276, !16277}
!16275 = !DILocalVariable(name: "node", arg: 1, scope: !16271, file: !554, line: 496, type: !2658)
!16276 = !DILocalVariable(name: "prev", scope: !16271, file: !554, line: 498, type: !16118)
!16277 = !DILocalVariable(name: "next", scope: !16271, file: !554, line: 499, type: !16118)
!16278 = !DILocation(line: 0, scope: !16271)
!16279 = !DILocation(line: 498, column: 34, scope: !16271)
!16280 = !DILocation(line: 499, column: 34, scope: !16271)
!16281 = !DILocation(line: 501, column: 8, scope: !16271)
!16282 = !DILocation(line: 501, column: 13, scope: !16271)
!16283 = !DILocation(line: 502, column: 8, scope: !16271)
!16284 = !DILocation(line: 502, column: 13, scope: !16271)
!16285 = !DILocation(line: 503, column: 2, scope: !16271)
!16286 = !DILocation(line: 504, column: 1, scope: !16271)
!16287 = distinct !DISubprogram(name: "sys_dnode_init", scope: !554, file: !554, line: 211, type: !16272, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16288)
!16288 = !{!16289}
!16289 = !DILocalVariable(name: "node", arg: 1, scope: !16287, file: !554, line: 211, type: !2658)
!16290 = !DILocation(line: 0, scope: !16287)
!16291 = !DILocation(line: 213, column: 8, scope: !16287)
!16292 = !DILocation(line: 213, column: 13, scope: !16287)
!16293 = !DILocation(line: 214, column: 8, scope: !16287)
!16294 = !DILocation(line: 214, column: 13, scope: !16287)
!16295 = !DILocation(line: 215, column: 1, scope: !16287)
!16296 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !15128, file: !15128, line: 131, type: !16297, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16299)
!16297 = !DISubroutineType(types: !16298)
!16298 = !{!153, !2557, !208}
!16299 = !{!16300, !16301}
!16300 = !DILocalVariable(name: "thread", arg: 1, scope: !16296, file: !15128, line: 131, type: !2557)
!16301 = !DILocalVariable(name: "state", arg: 2, scope: !16296, file: !15128, line: 131, type: !208)
!16302 = !DILocation(line: 0, scope: !16296)
!16303 = !DILocation(line: 133, column: 23, scope: !16296)
!16304 = !DILocation(line: 133, column: 45, scope: !16296)
!16305 = !DILocation(line: 133, column: 2, scope: !16296)
!16306 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !15128, file: !15128, line: 211, type: !16307, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16309)
!16307 = !DISubroutineType(types: !16308)
!16308 = !{!153, !125, !125}
!16309 = !{!16310, !16311}
!16310 = !DILocalVariable(name: "prio", arg: 1, scope: !16306, file: !15128, line: 211, type: !125)
!16311 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16306, file: !15128, line: 211, type: !125)
!16312 = !DILocation(line: 0, scope: !16306)
!16313 = !DILocation(line: 213, column: 9, scope: !16306)
!16314 = !DILocation(line: 213, column: 2, scope: !16306)
!16315 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !15128, file: !15128, line: 83, type: !15974, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16316)
!16316 = !{!16317}
!16317 = !DILocalVariable(name: "thread", arg: 1, scope: !16315, file: !15128, line: 83, type: !2557)
!16318 = !DILocation(line: 0, scope: !16315)
!16319 = !DILocation(line: 89, column: 16, scope: !16315)
!16320 = !DILocation(line: 89, column: 2, scope: !16315)
!16321 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !15128, file: !15128, line: 206, type: !16307, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16322)
!16322 = !{!16323, !16324}
!16323 = !DILocalVariable(name: "prio1", arg: 1, scope: !16321, file: !15128, line: 206, type: !125)
!16324 = !DILocalVariable(name: "prio2", arg: 2, scope: !16321, file: !15128, line: 206, type: !125)
!16325 = !DILocation(line: 0, scope: !16321)
!16326 = !DILocation(line: 208, column: 15, scope: !16321)
!16327 = !DILocation(line: 208, column: 2, scope: !16321)
!16328 = distinct !DISubprogram(name: "z_ready_thread", scope: !2662, file: !2662, line: 635, type: !15814, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16329)
!16329 = !{!16330, !16331, !16333}
!16330 = !DILocalVariable(name: "thread", arg: 1, scope: !16328, file: !2662, line: 635, type: !2557)
!16331 = !DILocalVariable(name: "__i", scope: !16332, file: !2662, line: 637, type: !15848)
!16332 = distinct !DILexicalBlock(scope: !16328, file: !2662, line: 637, column: 2)
!16333 = !DILocalVariable(name: "__key", scope: !16332, file: !2662, line: 637, type: !15848)
!16334 = !DILocation(line: 0, scope: !16328)
!16335 = !DILocation(line: 0, scope: !16332)
!16336 = !DILocation(line: 0, scope: !15856, inlinedAt: !16337)
!16337 = distinct !DILocation(line: 637, column: 2, scope: !16332)
!16338 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16339)
!16339 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16337)
!16340 = !DILocation(line: 0, scope: !15865, inlinedAt: !16339)
!16341 = !DILocation(line: 639, column: 4, scope: !16342)
!16342 = distinct !DILexicalBlock(scope: !16343, file: !2662, line: 638, column: 41)
!16343 = distinct !DILexicalBlock(scope: !16344, file: !2662, line: 638, column: 7)
!16344 = distinct !DILexicalBlock(scope: !16345, file: !2662, line: 637, column: 26)
!16345 = distinct !DILexicalBlock(scope: !16332, file: !2662, line: 637, column: 2)
!16346 = !DILocation(line: 0, scope: !15883, inlinedAt: !16347)
!16347 = distinct !DILocation(line: 637, column: 2, scope: !16345)
!16348 = !DILocation(line: 0, scope: !15891, inlinedAt: !16349)
!16349 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16347)
!16350 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16349)
!16351 = !DILocation(line: 642, column: 1, scope: !16328)
!16352 = distinct !DISubprogram(name: "ready_thread", scope: !2662, file: !2662, line: 617, type: !15814, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16353)
!16353 = !{!16354}
!16354 = !DILocalVariable(name: "thread", arg: 1, scope: !16352, file: !2662, line: 617, type: !2557)
!16355 = !DILocation(line: 0, scope: !16352)
!16356 = !DILocation(line: 626, column: 7, scope: !16357)
!16357 = distinct !DILexicalBlock(scope: !16352, file: !2662, line: 626, column: 6)
!16358 = !DILocation(line: 626, column: 34, scope: !16357)
!16359 = !DILocation(line: 626, column: 37, scope: !16357)
!16360 = !DILocation(line: 626, column: 6, scope: !16352)
!16361 = !DILocation(line: 0, scope: !16042, inlinedAt: !16362)
!16362 = distinct !DILocation(line: 629, column: 3, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !16357, file: !2662, line: 626, column: 64)
!16364 = !DILocation(line: 252, column: 15, scope: !16042, inlinedAt: !16362)
!16365 = !DILocation(line: 252, column: 28, scope: !16042, inlinedAt: !16362)
!16366 = !DILocation(line: 0, scope: !16049, inlinedAt: !16367)
!16367 = distinct !DILocation(line: 254, column: 3, scope: !16053, inlinedAt: !16362)
!16368 = !DILocation(line: 0, scope: !16056, inlinedAt: !16369)
!16369 = distinct !DILocation(line: 229, column: 2, scope: !16049, inlinedAt: !16367)
!16370 = !DILocation(line: 188, column: 2, scope: !16066, inlinedAt: !16369)
!16371 = !DILocation(line: 188, column: 2, scope: !16068, inlinedAt: !16369)
!16372 = !DILocation(line: 0, scope: !16066, inlinedAt: !16369)
!16373 = !DILocation(line: 189, column: 7, scope: !16071, inlinedAt: !16369)
!16374 = !DILocation(line: 189, column: 35, scope: !16071, inlinedAt: !16369)
!16375 = !DILocation(line: 189, column: 7, scope: !16072, inlinedAt: !16369)
!16376 = !DILocation(line: 191, column: 21, scope: !16076, inlinedAt: !16369)
!16377 = !DILocation(line: 190, column: 4, scope: !16076, inlinedAt: !16369)
!16378 = !DILocation(line: 192, column: 4, scope: !16076, inlinedAt: !16369)
!16379 = distinct !{!16379, !16370, !16380}
!16380 = !DILocation(line: 194, column: 2, scope: !16066, inlinedAt: !16369)
!16381 = !DILocation(line: 196, column: 37, scope: !16056, inlinedAt: !16369)
!16382 = !DILocation(line: 196, column: 2, scope: !16056, inlinedAt: !16369)
!16383 = !DILocation(line: 197, column: 1, scope: !16056, inlinedAt: !16369)
!16384 = !DILocation(line: 630, column: 3, scope: !16363)
!16385 = !DILocation(line: 632, column: 2, scope: !16363)
!16386 = !DILocation(line: 633, column: 1, scope: !16352)
!16387 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !15128, file: !15128, line: 120, type: !15974, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16388)
!16388 = !{!16389}
!16389 = !DILocalVariable(name: "thread", arg: 1, scope: !16387, file: !15128, line: 120, type: !2557)
!16390 = !DILocation(line: 0, scope: !16387)
!16391 = !DILocation(line: 122, column: 12, scope: !16387)
!16392 = !DILocation(line: 122, column: 62, scope: !16387)
!16393 = !DILocation(line: 123, column: 4, scope: !16387)
!16394 = !DILocation(line: 122, column: 2, scope: !16387)
!16395 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2662, file: !2662, line: 644, type: !15814, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16396)
!16396 = !{!16397, !16398, !16400}
!16397 = !DILocalVariable(name: "thread", arg: 1, scope: !16395, file: !2662, line: 644, type: !2557)
!16398 = !DILocalVariable(name: "__i", scope: !16399, file: !2662, line: 646, type: !15848)
!16399 = distinct !DILexicalBlock(scope: !16395, file: !2662, line: 646, column: 2)
!16400 = !DILocalVariable(name: "__key", scope: !16399, file: !2662, line: 646, type: !15848)
!16401 = !DILocation(line: 0, scope: !16395)
!16402 = !DILocation(line: 0, scope: !16399)
!16403 = !DILocation(line: 0, scope: !15856, inlinedAt: !16404)
!16404 = distinct !DILocation(line: 646, column: 2, scope: !16399)
!16405 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16406)
!16406 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16404)
!16407 = !DILocation(line: 0, scope: !15865, inlinedAt: !16406)
!16408 = !DILocation(line: 647, column: 3, scope: !16409)
!16409 = distinct !DILexicalBlock(scope: !16410, file: !2662, line: 646, column: 26)
!16410 = distinct !DILexicalBlock(scope: !16399, file: !2662, line: 646, column: 2)
!16411 = !DILocation(line: 0, scope: !15883, inlinedAt: !16412)
!16412 = distinct !DILocation(line: 646, column: 2, scope: !16410)
!16413 = !DILocation(line: 0, scope: !15891, inlinedAt: !16414)
!16414 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16412)
!16415 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16414)
!16416 = !DILocation(line: 649, column: 1, scope: !16395)
!16417 = distinct !DISubprogram(name: "z_sched_start", scope: !2662, file: !2662, line: 651, type: !15814, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16418)
!16418 = !{!16419, !16420}
!16419 = !DILocalVariable(name: "thread", arg: 1, scope: !16417, file: !2662, line: 651, type: !2557)
!16420 = !DILocalVariable(name: "key", scope: !16417, file: !2662, line: 653, type: !15848)
!16421 = !DILocation(line: 0, scope: !16417)
!16422 = !DILocation(line: 0, scope: !15856, inlinedAt: !16423)
!16423 = distinct !DILocation(line: 653, column: 25, scope: !16417)
!16424 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16425)
!16425 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16423)
!16426 = !DILocation(line: 0, scope: !15865, inlinedAt: !16425)
!16427 = !DILocation(line: 655, column: 6, scope: !16428)
!16428 = distinct !DILexicalBlock(scope: !16417, file: !2662, line: 655, column: 6)
!16429 = !DILocation(line: 655, column: 6, scope: !16417)
!16430 = !DILocation(line: 0, scope: !15883, inlinedAt: !16431)
!16431 = distinct !DILocation(line: 656, column: 3, scope: !16432)
!16432 = distinct !DILexicalBlock(scope: !16428, file: !2662, line: 655, column: 36)
!16433 = !DILocation(line: 0, scope: !15891, inlinedAt: !16434)
!16434 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16431)
!16435 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16434)
!16436 = !DILocation(line: 657, column: 3, scope: !16432)
!16437 = !DILocation(line: 660, column: 2, scope: !16417)
!16438 = !DILocation(line: 661, column: 2, scope: !16417)
!16439 = !DILocation(line: 662, column: 2, scope: !16417)
!16440 = !DILocation(line: 663, column: 1, scope: !16417)
!16441 = distinct !DISubprogram(name: "z_has_thread_started", scope: !15128, file: !15128, line: 126, type: !15974, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16442)
!16442 = !{!16443}
!16443 = !DILocalVariable(name: "thread", arg: 1, scope: !16441, file: !15128, line: 126, type: !2557)
!16444 = !DILocation(line: 0, scope: !16441)
!16445 = !DILocation(line: 128, column: 23, scope: !16441)
!16446 = !DILocation(line: 128, column: 36, scope: !16441)
!16447 = !DILocation(line: 128, column: 56, scope: !16441)
!16448 = !DILocation(line: 128, column: 2, scope: !16441)
!16449 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15128, file: !15128, line: 155, type: !15814, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16450)
!16450 = !{!16451}
!16451 = !DILocalVariable(name: "thread", arg: 1, scope: !16449, file: !15128, line: 155, type: !2557)
!16452 = !DILocation(line: 0, scope: !16449)
!16453 = !DILocation(line: 157, column: 15, scope: !16449)
!16454 = !DILocation(line: 157, column: 28, scope: !16449)
!16455 = !DILocation(line: 158, column: 1, scope: !16449)
!16456 = distinct !DISubprogram(name: "z_reschedule", scope: !2662, file: !2662, line: 967, type: !15884, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16457)
!16457 = !{!16458, !16459}
!16458 = !DILocalVariable(name: "lock", arg: 1, scope: !16456, file: !2662, line: 967, type: !15859)
!16459 = !DILocalVariable(name: "key", arg: 2, scope: !16456, file: !2662, line: 967, type: !15848)
!16460 = !DILocation(line: 0, scope: !16456)
!16461 = !DILocation(line: 969, column: 6, scope: !16462)
!16462 = distinct !DILexicalBlock(scope: !16456, file: !2662, line: 969, column: 6)
!16463 = !DILocation(line: 969, column: 23, scope: !16462)
!16464 = !DILocation(line: 969, column: 26, scope: !16462)
!16465 = !DILocation(line: 969, column: 6, scope: !16456)
!16466 = !DILocalVariable(name: "key", arg: 2, scope: !16467, file: !15232, line: 193, type: !15848)
!16467 = distinct !DISubprogram(name: "z_swap", scope: !15232, file: !15232, line: 193, type: !16468, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16470)
!16468 = !DISubroutineType(types: !16469)
!16469 = !{!125, !15859, !15848}
!16470 = !{!16471, !16466}
!16471 = !DILocalVariable(name: "lock", arg: 1, scope: !16467, file: !15232, line: 193, type: !15859)
!16472 = !DILocation(line: 0, scope: !16467, inlinedAt: !16473)
!16473 = distinct !DILocation(line: 970, column: 3, scope: !16474)
!16474 = distinct !DILexicalBlock(scope: !16462, file: !2662, line: 969, column: 39)
!16475 = !DILocation(line: 196, column: 9, scope: !16467, inlinedAt: !16473)
!16476 = !DILocation(line: 971, column: 2, scope: !16474)
!16477 = !DILocation(line: 0, scope: !15883, inlinedAt: !16478)
!16478 = distinct !DILocation(line: 972, column: 3, scope: !16479)
!16479 = distinct !DILexicalBlock(scope: !16462, file: !2662, line: 971, column: 9)
!16480 = !DILocation(line: 0, scope: !15891, inlinedAt: !16481)
!16481 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16478)
!16482 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16481)
!16483 = !DILocation(line: 975, column: 1, scope: !16456)
!16484 = distinct !DISubprogram(name: "resched", scope: !2662, file: !2662, line: 940, type: !16485, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16487)
!16485 = !DISubroutineType(types: !16486)
!16486 = !{!153, !208}
!16487 = !{!16488}
!16488 = !DILocalVariable(name: "key", arg: 1, scope: !16484, file: !2662, line: 940, type: !208)
!16489 = !DILocation(line: 0, scope: !16484)
!16490 = !DILocalVariable(name: "key", arg: 1, scope: !16491, file: !6796, line: 112, type: !32)
!16491 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6796, file: !6796, line: 112, type: !16492, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16494)
!16492 = !DISubroutineType(types: !16493)
!16493 = !{!153, !32}
!16494 = !{!16490}
!16495 = !DILocation(line: 0, scope: !16491, inlinedAt: !16496)
!16496 = distinct !DILocation(line: 946, column: 9, scope: !16484)
!16497 = !DILocation(line: 115, column: 13, scope: !16491, inlinedAt: !16496)
!16498 = !DILocation(line: 946, column: 32, scope: !16484)
!16499 = !DILocation(line: 1031, column: 3, scope: !16500, inlinedAt: !16503)
!16500 = distinct !DISubprogram(name: "__get_IPSR", scope: !8280, file: !8280, line: 1027, type: !9251, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16501)
!16501 = !{!16502}
!16502 = !DILocalVariable(name: "result", scope: !16500, file: !8280, line: 1029, type: !208)
!16503 = distinct !DILocation(line: 48, column: 10, scope: !16504, inlinedAt: !16505)
!16504 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9257, file: !9257, line: 46, type: !9258, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !652)
!16505 = distinct !DILocation(line: 946, column: 36, scope: !16484)
!16506 = !{i64 2488373}
!16507 = !DILocation(line: 0, scope: !16500, inlinedAt: !16503)
!16508 = !DILocation(line: 48, column: 9, scope: !16504, inlinedAt: !16505)
!16509 = !DILocation(line: 946, column: 2, scope: !16484)
!16510 = distinct !DISubprogram(name: "need_swap", scope: !2662, file: !2662, line: 953, type: !9258, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16511)
!16511 = !{!16512}
!16512 = !DILocalVariable(name: "new_thread", scope: !16510, file: !2662, line: 959, type: !2557)
!16513 = !DILocation(line: 962, column: 31, scope: !16510)
!16514 = !DILocation(line: 0, scope: !16510)
!16515 = !DILocation(line: 963, column: 23, scope: !16510)
!16516 = !DILocation(line: 963, column: 20, scope: !16510)
!16517 = !DILocation(line: 963, column: 2, scope: !16510)
!16518 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !15232, file: !15232, line: 181, type: !8290, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16519)
!16519 = !{!16520, !16521}
!16520 = !DILocalVariable(name: "key", arg: 1, scope: !16518, file: !15232, line: 181, type: !32)
!16521 = !DILocalVariable(name: "ret", scope: !16518, file: !15232, line: 183, type: !125)
!16522 = !DILocation(line: 0, scope: !16518)
!16523 = !DILocation(line: 185, column: 8, scope: !16518)
!16524 = !DILocation(line: 186, column: 2, scope: !16518)
!16525 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2662, file: !2662, line: 665, type: !15814, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16526)
!16526 = !{!16527, !16528, !16530}
!16527 = !DILocalVariable(name: "thread", arg: 1, scope: !16525, file: !2662, line: 665, type: !2557)
!16528 = !DILocalVariable(name: "__i", scope: !16529, file: !2662, line: 671, type: !15848)
!16529 = distinct !DILexicalBlock(scope: !16525, file: !2662, line: 671, column: 2)
!16530 = !DILocalVariable(name: "__key", scope: !16529, file: !2662, line: 671, type: !15848)
!16531 = !DILocation(line: 0, scope: !16525)
!16532 = !DILocation(line: 669, column: 8, scope: !16525)
!16533 = !DILocation(line: 0, scope: !16529)
!16534 = !DILocation(line: 0, scope: !15856, inlinedAt: !16535)
!16535 = distinct !DILocation(line: 671, column: 2, scope: !16529)
!16536 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16537)
!16537 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16535)
!16538 = !DILocation(line: 0, scope: !15865, inlinedAt: !16537)
!16539 = !DILocation(line: 672, column: 7, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16541, file: !2662, line: 672, column: 7)
!16541 = distinct !DILexicalBlock(scope: !16542, file: !2662, line: 671, column: 26)
!16542 = distinct !DILexicalBlock(scope: !16529, file: !2662, line: 671, column: 2)
!16543 = !DILocation(line: 672, column: 7, scope: !16541)
!16544 = !DILocation(line: 0, scope: !16025, inlinedAt: !16545)
!16545 = distinct !DILocation(line: 673, column: 4, scope: !16546)
!16546 = distinct !DILexicalBlock(scope: !16540, file: !2662, line: 672, column: 35)
!16547 = !DILocation(line: 266, column: 15, scope: !16025, inlinedAt: !16545)
!16548 = !DILocation(line: 266, column: 28, scope: !16025, inlinedAt: !16545)
!16549 = !DILocation(line: 0, scope: !16033, inlinedAt: !16550)
!16550 = distinct !DILocation(line: 268, column: 3, scope: !16037, inlinedAt: !16545)
!16551 = !DILocation(line: 234, column: 2, scope: !16033, inlinedAt: !16550)
!16552 = !DILocation(line: 674, column: 3, scope: !16546)
!16553 = !DILocation(line: 675, column: 3, scope: !16541)
!16554 = !DILocation(line: 676, column: 26, scope: !16541)
!16555 = !DILocation(line: 676, column: 23, scope: !16541)
!16556 = !DILocation(line: 676, column: 3, scope: !16541)
!16557 = !DILocation(line: 0, scope: !15883, inlinedAt: !16558)
!16558 = distinct !DILocation(line: 671, column: 2, scope: !16542)
!16559 = !DILocation(line: 0, scope: !15891, inlinedAt: !16560)
!16560 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16558)
!16561 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16560)
!16562 = !DILocation(line: 679, column: 16, scope: !16563)
!16563 = distinct !DILexicalBlock(scope: !16525, file: !2662, line: 679, column: 6)
!16564 = !DILocation(line: 679, column: 13, scope: !16563)
!16565 = !DILocation(line: 679, column: 6, scope: !16525)
!16566 = !DILocation(line: 680, column: 3, scope: !16567)
!16567 = distinct !DILexicalBlock(scope: !16563, file: !2662, line: 679, column: 26)
!16568 = !DILocation(line: 681, column: 2, scope: !16567)
!16569 = !DILocation(line: 684, column: 1, scope: !16525)
!16570 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15522, file: !15522, line: 52, type: !15832, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16571)
!16571 = !{!16572}
!16572 = !DILocalVariable(name: "thread", arg: 1, scope: !16570, file: !15522, line: 52, type: !2557)
!16573 = !DILocation(line: 0, scope: !16570)
!16574 = !DILocation(line: 54, column: 39, scope: !16570)
!16575 = !DILocation(line: 54, column: 9, scope: !16570)
!16576 = !DILocation(line: 54, column: 2, scope: !16570)
!16577 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !15128, file: !15128, line: 141, type: !15814, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16578)
!16578 = !{!16579}
!16579 = !DILocalVariable(name: "thread", arg: 1, scope: !16577, file: !15128, line: 141, type: !2557)
!16580 = !DILocation(line: 0, scope: !16577)
!16581 = !DILocation(line: 143, column: 15, scope: !16577)
!16582 = !DILocation(line: 143, column: 28, scope: !16577)
!16583 = !DILocation(line: 146, column: 1, scope: !16577)
!16584 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !15128, file: !15128, line: 73, type: !3274, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !652)
!16585 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16586)
!16586 = distinct !DILocation(line: 75, column: 30, scope: !16584)
!16587 = !DILocation(line: 0, scope: !15865, inlinedAt: !16586)
!16588 = !DILocation(line: 75, column: 9, scope: !16584)
!16589 = !DILocation(line: 76, column: 1, scope: !16584)
!16590 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2662, file: !2662, line: 977, type: !6820, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16591)
!16591 = !{!16592}
!16592 = !DILocalVariable(name: "key", arg: 1, scope: !16590, file: !2662, line: 977, type: !208)
!16593 = !DILocation(line: 0, scope: !16590)
!16594 = !DILocation(line: 979, column: 6, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16590, file: !2662, line: 979, column: 6)
!16596 = !DILocation(line: 979, column: 6, scope: !16590)
!16597 = !DILocation(line: 980, column: 3, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16595, file: !2662, line: 979, column: 20)
!16599 = !DILocation(line: 981, column: 2, scope: !16598)
!16600 = !DILocation(line: 0, scope: !15891, inlinedAt: !16601)
!16601 = distinct !DILocation(line: 982, column: 3, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16595, file: !2662, line: 981, column: 9)
!16603 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16601)
!16604 = !DILocation(line: 985, column: 1, scope: !16590)
!16605 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2662, file: !2662, line: 695, type: !15814, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16606)
!16606 = !{!16607, !16608}
!16607 = !DILocalVariable(name: "thread", arg: 1, scope: !16605, file: !2662, line: 695, type: !2557)
!16608 = !DILocalVariable(name: "key", scope: !16605, file: !2662, line: 699, type: !15848)
!16609 = !DILocation(line: 0, scope: !16605)
!16610 = !DILocation(line: 0, scope: !15856, inlinedAt: !16611)
!16611 = distinct !DILocation(line: 699, column: 25, scope: !16605)
!16612 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16613)
!16613 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16611)
!16614 = !DILocation(line: 0, scope: !15865, inlinedAt: !16613)
!16615 = !DILocation(line: 702, column: 7, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16605, file: !2662, line: 702, column: 6)
!16617 = !DILocation(line: 702, column: 6, scope: !16605)
!16618 = !DILocation(line: 0, scope: !15883, inlinedAt: !16619)
!16619 = distinct !DILocation(line: 703, column: 3, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16616, file: !2662, line: 702, column: 38)
!16621 = !DILocation(line: 0, scope: !15891, inlinedAt: !16622)
!16622 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16619)
!16623 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16622)
!16624 = !DILocation(line: 704, column: 3, scope: !16620)
!16625 = !DILocation(line: 707, column: 2, scope: !16605)
!16626 = !DILocation(line: 708, column: 2, scope: !16605)
!16627 = !DILocation(line: 710, column: 2, scope: !16605)
!16628 = !DILocation(line: 713, column: 1, scope: !16605)
!16629 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !15128, file: !15128, line: 96, type: !15974, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16630)
!16630 = !{!16631}
!16631 = !DILocalVariable(name: "thread", arg: 1, scope: !16629, file: !15128, line: 96, type: !2557)
!16632 = !DILocation(line: 0, scope: !16629)
!16633 = !DILocation(line: 98, column: 23, scope: !16629)
!16634 = !DILocation(line: 98, column: 36, scope: !16629)
!16635 = !DILocation(line: 98, column: 57, scope: !16629)
!16636 = !DILocation(line: 98, column: 2, scope: !16629)
!16637 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !15128, file: !15128, line: 148, type: !15814, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16638)
!16638 = !{!16639}
!16639 = !DILocalVariable(name: "thread", arg: 1, scope: !16637, file: !15128, line: 148, type: !2557)
!16640 = !DILocation(line: 0, scope: !16637)
!16641 = !DILocation(line: 150, column: 15, scope: !16637)
!16642 = !DILocation(line: 150, column: 28, scope: !16637)
!16643 = !DILocation(line: 153, column: 1, scope: !16637)
!16644 = distinct !DISubprogram(name: "z_pend_thread", scope: !2662, file: !2662, line: 770, type: !16645, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16651)
!16645 = !DISubroutineType(types: !16646)
!16646 = !{null, !2557, !2588, !16647}
!16647 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1928, line: 67, baseType: !16648)
!16648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1928, line: 65, size: 64, elements: !16649)
!16649 = !{!16650}
!16650 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16648, file: !1928, line: 66, baseType: !1927, size: 64)
!16651 = !{!16652, !16653, !16654, !16655, !16657}
!16652 = !DILocalVariable(name: "thread", arg: 1, scope: !16644, file: !2662, line: 770, type: !2557)
!16653 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16644, file: !2662, line: 770, type: !2588)
!16654 = !DILocalVariable(name: "timeout", arg: 3, scope: !16644, file: !2662, line: 771, type: !16647)
!16655 = !DILocalVariable(name: "__i", scope: !16656, file: !2662, line: 774, type: !15848)
!16656 = distinct !DILexicalBlock(scope: !16644, file: !2662, line: 774, column: 2)
!16657 = !DILocalVariable(name: "__key", scope: !16656, file: !2662, line: 774, type: !15848)
!16658 = !DILocation(line: 0, scope: !16644)
!16659 = !DILocation(line: 0, scope: !16656)
!16660 = !DILocation(line: 0, scope: !15856, inlinedAt: !16661)
!16661 = distinct !DILocation(line: 774, column: 2, scope: !16656)
!16662 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16663)
!16663 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16661)
!16664 = !DILocation(line: 0, scope: !15865, inlinedAt: !16663)
!16665 = !DILocation(line: 775, column: 3, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16667, file: !2662, line: 774, column: 26)
!16667 = distinct !DILexicalBlock(scope: !16656, file: !2662, line: 774, column: 2)
!16668 = !DILocation(line: 0, scope: !15883, inlinedAt: !16669)
!16669 = distinct !DILocation(line: 774, column: 2, scope: !16667)
!16670 = !DILocation(line: 0, scope: !15891, inlinedAt: !16671)
!16671 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16669)
!16672 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16671)
!16673 = !DILocation(line: 777, column: 1, scope: !16644)
!16674 = distinct !DISubprogram(name: "pend_locked", scope: !2662, file: !2662, line: 760, type: !16645, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16675)
!16675 = !{!16676, !16677, !16678}
!16676 = !DILocalVariable(name: "thread", arg: 1, scope: !16674, file: !2662, line: 760, type: !2557)
!16677 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16674, file: !2662, line: 760, type: !2588)
!16678 = !DILocalVariable(name: "timeout", arg: 3, scope: !16674, file: !2662, line: 761, type: !16647)
!16679 = !DILocation(line: 0, scope: !16674)
!16680 = !DILocation(line: 766, column: 2, scope: !16674)
!16681 = !DILocation(line: 767, column: 2, scope: !16674)
!16682 = !DILocation(line: 768, column: 1, scope: !16674)
!16683 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2662, file: !2662, line: 740, type: !16684, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16686)
!16684 = !DISubroutineType(types: !16685)
!16685 = !{null, !2557, !2588}
!16686 = !{!16687, !16688}
!16687 = !DILocalVariable(name: "thread", arg: 1, scope: !16683, file: !2662, line: 740, type: !2557)
!16688 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16683, file: !2662, line: 740, type: !2588)
!16689 = !DILocation(line: 0, scope: !16683)
!16690 = !DILocation(line: 742, column: 2, scope: !16683)
!16691 = !DILocation(line: 743, column: 2, scope: !16683)
!16692 = !DILocation(line: 747, column: 13, scope: !16693)
!16693 = distinct !DILexicalBlock(scope: !16683, file: !2662, line: 747, column: 6)
!16694 = !DILocation(line: 747, column: 6, scope: !16683)
!16695 = !DILocation(line: 748, column: 16, scope: !16696)
!16696 = distinct !DILexicalBlock(scope: !16693, file: !2662, line: 747, column: 22)
!16697 = !DILocation(line: 748, column: 26, scope: !16696)
!16698 = !DILocation(line: 749, column: 28, scope: !16696)
!16699 = !DILocation(line: 0, scope: !16056, inlinedAt: !16700)
!16700 = distinct !DILocation(line: 749, column: 3, scope: !16696)
!16701 = !DILocation(line: 188, column: 2, scope: !16066, inlinedAt: !16700)
!16702 = !DILocation(line: 188, column: 2, scope: !16068, inlinedAt: !16700)
!16703 = !DILocation(line: 0, scope: !16066, inlinedAt: !16700)
!16704 = !DILocation(line: 189, column: 7, scope: !16071, inlinedAt: !16700)
!16705 = !DILocation(line: 189, column: 35, scope: !16071, inlinedAt: !16700)
!16706 = !DILocation(line: 189, column: 7, scope: !16072, inlinedAt: !16700)
!16707 = !DILocation(line: 191, column: 21, scope: !16076, inlinedAt: !16700)
!16708 = !DILocation(line: 190, column: 4, scope: !16076, inlinedAt: !16700)
!16709 = !DILocation(line: 192, column: 4, scope: !16076, inlinedAt: !16700)
!16710 = distinct !{!16710, !16701, !16711}
!16711 = !DILocation(line: 194, column: 2, scope: !16066, inlinedAt: !16700)
!16712 = !DILocation(line: 196, column: 37, scope: !16056, inlinedAt: !16700)
!16713 = !DILocation(line: 196, column: 2, scope: !16056, inlinedAt: !16700)
!16714 = !DILocation(line: 197, column: 1, scope: !16056, inlinedAt: !16700)
!16715 = !DILocation(line: 751, column: 1, scope: !16683)
!16716 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2662, file: !2662, line: 753, type: !16717, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16719)
!16717 = !DISubroutineType(types: !16718)
!16718 = !{null, !2557, !16647}
!16719 = !{!16720, !16721}
!16720 = !DILocalVariable(name: "thread", arg: 1, scope: !16716, file: !2662, line: 753, type: !2557)
!16721 = !DILocalVariable(name: "timeout", arg: 2, scope: !16716, file: !2662, line: 753, type: !16647)
!16722 = !DILocation(line: 0, scope: !16716)
!16723 = !DILocation(line: 755, column: 7, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !16716, file: !2662, line: 755, column: 6)
!16725 = !DILocation(line: 755, column: 6, scope: !16716)
!16726 = !DILocation(line: 756, column: 3, scope: !16727)
!16727 = distinct !DILexicalBlock(scope: !16724, file: !2662, line: 755, column: 41)
!16728 = !DILocation(line: 757, column: 2, scope: !16727)
!16729 = !DILocation(line: 758, column: 1, scope: !16716)
!16730 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15522, file: !15522, line: 47, type: !16717, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16731)
!16731 = !{!16732, !16733}
!16732 = !DILocalVariable(name: "thread", arg: 1, scope: !16730, file: !15522, line: 47, type: !2557)
!16733 = !DILocalVariable(name: "ticks", arg: 2, scope: !16730, file: !15522, line: 47, type: !16647)
!16734 = !DILocation(line: 0, scope: !16730)
!16735 = !DILocation(line: 49, column: 30, scope: !16730)
!16736 = !DILocation(line: 49, column: 2, scope: !16730)
!16737 = !DILocation(line: 50, column: 1, scope: !16730)
!16738 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2662, file: !2662, line: 795, type: !2614, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16739)
!16739 = !{!16740, !16741, !16742, !16744, !16745}
!16740 = !DILocalVariable(name: "timeout", arg: 1, scope: !16738, file: !2662, line: 795, type: !2616)
!16741 = !DILocalVariable(name: "thread", scope: !16738, file: !2662, line: 797, type: !2557)
!16742 = !DILocalVariable(name: "__i", scope: !16743, file: !2662, line: 800, type: !15848)
!16743 = distinct !DILexicalBlock(scope: !16738, file: !2662, line: 800, column: 2)
!16744 = !DILocalVariable(name: "__key", scope: !16743, file: !2662, line: 800, type: !15848)
!16745 = !DILocalVariable(name: "killed", scope: !16746, file: !2662, line: 801, type: !153)
!16746 = distinct !DILexicalBlock(scope: !16747, file: !2662, line: 800, column: 26)
!16747 = distinct !DILexicalBlock(scope: !16743, file: !2662, line: 800, column: 2)
!16748 = !DILocation(line: 0, scope: !16738)
!16749 = !DILocation(line: 797, column: 28, scope: !16738)
!16750 = !DILocation(line: 0, scope: !16743)
!16751 = !DILocation(line: 0, scope: !15856, inlinedAt: !16752)
!16752 = distinct !DILocation(line: 800, column: 2, scope: !16743)
!16753 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16754)
!16754 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16752)
!16755 = !DILocation(line: 0, scope: !15865, inlinedAt: !16754)
!16756 = !DILocation(line: 801, column: 27, scope: !16746)
!16757 = !DILocation(line: 801, column: 32, scope: !16746)
!16758 = !DILocation(line: 801, column: 61, scope: !16746)
!16759 = !DILocation(line: 0, scope: !16746)
!16760 = !DILocation(line: 804, column: 7, scope: !16746)
!16761 = !DILocation(line: 805, column: 21, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16763, file: !2662, line: 805, column: 8)
!16763 = distinct !DILexicalBlock(scope: !16764, file: !2662, line: 804, column: 16)
!16764 = distinct !DILexicalBlock(scope: !16746, file: !2662, line: 804, column: 7)
!16765 = !DILocation(line: 805, column: 31, scope: !16762)
!16766 = !DILocation(line: 805, column: 8, scope: !16763)
!16767 = !DILocation(line: 806, column: 5, scope: !16768)
!16768 = distinct !DILexicalBlock(scope: !16762, file: !2662, line: 805, column: 40)
!16769 = !DILocation(line: 807, column: 4, scope: !16768)
!16770 = !DILocation(line: 808, column: 4, scope: !16763)
!16771 = !DILocation(line: 809, column: 4, scope: !16763)
!16772 = !DILocation(line: 810, column: 4, scope: !16763)
!16773 = !DILocation(line: 811, column: 3, scope: !16763)
!16774 = !DILocation(line: 0, scope: !15883, inlinedAt: !16775)
!16775 = distinct !DILocation(line: 800, column: 2, scope: !16747)
!16776 = !DILocation(line: 0, scope: !15891, inlinedAt: !16777)
!16777 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16775)
!16778 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16777)
!16779 = !DILocation(line: 813, column: 1, scope: !16738)
!16780 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2662, file: !2662, line: 779, type: !15814, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16781)
!16781 = !{!16782}
!16782 = !DILocalVariable(name: "thread", arg: 1, scope: !16780, file: !2662, line: 779, type: !2557)
!16783 = !DILocation(line: 0, scope: !16780)
!16784 = !DILocation(line: 781, column: 2, scope: !16780)
!16785 = !DILocation(line: 782, column: 2, scope: !16780)
!16786 = !DILocation(line: 783, column: 15, scope: !16780)
!16787 = !DILocation(line: 783, column: 25, scope: !16780)
!16788 = !DILocation(line: 784, column: 1, scope: !16780)
!16789 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !15128, file: !15128, line: 165, type: !15814, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16790)
!16790 = !{!16791}
!16791 = !DILocalVariable(name: "thread", arg: 1, scope: !16789, file: !15128, line: 165, type: !2557)
!16792 = !DILocation(line: 0, scope: !16789)
!16793 = !DILocation(line: 167, column: 15, scope: !16789)
!16794 = !DILocation(line: 167, column: 28, scope: !16789)
!16795 = !DILocation(line: 168, column: 1, scope: !16789)
!16796 = distinct !DISubprogram(name: "unready_thread", scope: !2662, file: !2662, line: 731, type: !15814, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16797)
!16797 = !{!16798}
!16798 = !DILocalVariable(name: "thread", arg: 1, scope: !16796, file: !2662, line: 731, type: !2557)
!16799 = !DILocation(line: 0, scope: !16796)
!16800 = !DILocation(line: 733, column: 6, scope: !16801)
!16801 = distinct !DILexicalBlock(scope: !16796, file: !2662, line: 733, column: 6)
!16802 = !DILocation(line: 733, column: 6, scope: !16796)
!16803 = !DILocation(line: 0, scope: !16025, inlinedAt: !16804)
!16804 = distinct !DILocation(line: 734, column: 3, scope: !16805)
!16805 = distinct !DILexicalBlock(scope: !16801, file: !2662, line: 733, column: 34)
!16806 = !DILocation(line: 266, column: 15, scope: !16025, inlinedAt: !16804)
!16807 = !DILocation(line: 266, column: 28, scope: !16025, inlinedAt: !16804)
!16808 = !DILocation(line: 0, scope: !16033, inlinedAt: !16809)
!16809 = distinct !DILocation(line: 268, column: 3, scope: !16037, inlinedAt: !16804)
!16810 = !DILocation(line: 234, column: 2, scope: !16033, inlinedAt: !16809)
!16811 = !DILocation(line: 735, column: 2, scope: !16805)
!16812 = !DILocation(line: 736, column: 25, scope: !16796)
!16813 = !DILocation(line: 736, column: 22, scope: !16796)
!16814 = !DILocation(line: 736, column: 2, scope: !16796)
!16815 = !DILocation(line: 737, column: 1, scope: !16796)
!16816 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !15128, file: !15128, line: 160, type: !15814, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16817)
!16817 = !{!16818}
!16818 = !DILocalVariable(name: "thread", arg: 1, scope: !16816, file: !15128, line: 160, type: !2557)
!16819 = !DILocation(line: 0, scope: !16816)
!16820 = !DILocation(line: 162, column: 15, scope: !16816)
!16821 = !DILocation(line: 162, column: 28, scope: !16816)
!16822 = !DILocation(line: 163, column: 1, scope: !16816)
!16823 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2662, file: !2662, line: 786, type: !15814, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16824)
!16824 = !{!16825, !16826, !16828}
!16825 = !DILocalVariable(name: "thread", arg: 1, scope: !16823, file: !2662, line: 786, type: !2557)
!16826 = !DILocalVariable(name: "__i", scope: !16827, file: !2662, line: 788, type: !15848)
!16827 = distinct !DILexicalBlock(scope: !16823, file: !2662, line: 788, column: 2)
!16828 = !DILocalVariable(name: "__key", scope: !16827, file: !2662, line: 788, type: !15848)
!16829 = !DILocation(line: 0, scope: !16823)
!16830 = !DILocation(line: 0, scope: !16827)
!16831 = !DILocation(line: 0, scope: !15856, inlinedAt: !16832)
!16832 = distinct !DILocation(line: 788, column: 2, scope: !16827)
!16833 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16834)
!16834 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16832)
!16835 = !DILocation(line: 0, scope: !15865, inlinedAt: !16834)
!16836 = !DILocation(line: 789, column: 3, scope: !16837)
!16837 = distinct !DILexicalBlock(scope: !16838, file: !2662, line: 788, column: 26)
!16838 = distinct !DILexicalBlock(scope: !16827, file: !2662, line: 788, column: 2)
!16839 = !DILocation(line: 0, scope: !15883, inlinedAt: !16840)
!16840 = distinct !DILocation(line: 788, column: 2, scope: !16838)
!16841 = !DILocation(line: 0, scope: !15891, inlinedAt: !16842)
!16842 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16840)
!16843 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16842)
!16844 = !DILocation(line: 791, column: 1, scope: !16823)
!16845 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2662, file: !2662, line: 816, type: !16846, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16848)
!16846 = !DISubroutineType(types: !16847)
!16847 = !{!125, !208, !2588, !16647}
!16848 = !{!16849, !16850, !16851, !16852, !16853, !16855}
!16849 = !DILocalVariable(name: "key", arg: 1, scope: !16845, file: !2662, line: 816, type: !208)
!16850 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16845, file: !2662, line: 816, type: !2588)
!16851 = !DILocalVariable(name: "timeout", arg: 3, scope: !16845, file: !2662, line: 816, type: !16647)
!16852 = !DILocalVariable(name: "ret", scope: !16845, file: !2662, line: 828, type: !125)
!16853 = !DILocalVariable(name: "__i", scope: !16854, file: !2662, line: 829, type: !15848)
!16854 = distinct !DILexicalBlock(scope: !16845, file: !2662, line: 829, column: 2)
!16855 = !DILocalVariable(name: "__key", scope: !16854, file: !2662, line: 829, type: !15848)
!16856 = !DILocation(line: 0, scope: !16845)
!16857 = !DILocation(line: 823, column: 14, scope: !16845)
!16858 = !DILocation(line: 823, column: 2, scope: !16845)
!16859 = !DILocation(line: 826, column: 20, scope: !16845)
!16860 = !DILocation(line: 826, column: 18, scope: !16845)
!16861 = !DILocation(line: 828, column: 12, scope: !16845)
!16862 = !DILocation(line: 0, scope: !16854)
!16863 = !DILocation(line: 0, scope: !15856, inlinedAt: !16864)
!16864 = distinct !DILocation(line: 829, column: 2, scope: !16854)
!16865 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16866)
!16866 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16864)
!16867 = !DILocation(line: 0, scope: !15865, inlinedAt: !16866)
!16868 = !DILocation(line: 830, column: 7, scope: !16869)
!16869 = distinct !DILexicalBlock(scope: !16870, file: !2662, line: 830, column: 7)
!16870 = distinct !DILexicalBlock(scope: !16871, file: !2662, line: 829, column: 26)
!16871 = distinct !DILexicalBlock(scope: !16854, file: !2662, line: 829, column: 2)
!16872 = !DILocation(line: 830, column: 26, scope: !16869)
!16873 = !DILocation(line: 830, column: 23, scope: !16869)
!16874 = !DILocation(line: 830, column: 7, scope: !16870)
!16875 = !DILocation(line: 831, column: 20, scope: !16876)
!16876 = distinct !DILexicalBlock(scope: !16869, file: !2662, line: 830, column: 36)
!16877 = !DILocation(line: 832, column: 3, scope: !16876)
!16878 = !DILocation(line: 0, scope: !15883, inlinedAt: !16879)
!16879 = distinct !DILocation(line: 829, column: 2, scope: !16871)
!16880 = !DILocation(line: 0, scope: !15891, inlinedAt: !16881)
!16881 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16879)
!16882 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16881)
!16883 = !DILocation(line: 834, column: 2, scope: !16845)
!16884 = distinct !DISubprogram(name: "z_pend_curr", scope: !2662, file: !2662, line: 840, type: !16885, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16887)
!16885 = !DISubroutineType(types: !16886)
!16886 = !{!125, !15859, !15848, !2588, !16647}
!16887 = !{!16888, !16889, !16890, !16891}
!16888 = !DILocalVariable(name: "lock", arg: 1, scope: !16884, file: !2662, line: 840, type: !15859)
!16889 = !DILocalVariable(name: "key", arg: 2, scope: !16884, file: !2662, line: 840, type: !15848)
!16890 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16884, file: !2662, line: 841, type: !2588)
!16891 = !DILocalVariable(name: "timeout", arg: 4, scope: !16884, file: !2662, line: 841, type: !16647)
!16892 = !DILocation(line: 0, scope: !16884)
!16893 = !DILocation(line: 844, column: 20, scope: !16884)
!16894 = !DILocation(line: 844, column: 18, scope: !16884)
!16895 = !DILocation(line: 0, scope: !15856, inlinedAt: !16896)
!16896 = distinct !DILocation(line: 856, column: 9, scope: !16884)
!16897 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16898)
!16898 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16896)
!16899 = !DILocation(line: 0, scope: !15865, inlinedAt: !16898)
!16900 = !DILocation(line: 857, column: 14, scope: !16884)
!16901 = !DILocation(line: 857, column: 2, scope: !16884)
!16902 = !DILocation(line: 0, scope: !16467, inlinedAt: !16903)
!16903 = distinct !DILocation(line: 859, column: 9, scope: !16884)
!16904 = !DILocation(line: 196, column: 9, scope: !16467, inlinedAt: !16903)
!16905 = !DILocation(line: 859, column: 2, scope: !16884)
!16906 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2662, file: !2662, line: 862, type: !16907, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16909)
!16907 = !DISubroutineType(types: !16908)
!16908 = !{!2557, !2588}
!16909 = !{!16910, !16911, !16912, !16914}
!16910 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16906, file: !2662, line: 862, type: !2588)
!16911 = !DILocalVariable(name: "thread", scope: !16906, file: !2662, line: 864, type: !2557)
!16912 = !DILocalVariable(name: "__i", scope: !16913, file: !2662, line: 866, type: !15848)
!16913 = distinct !DILexicalBlock(scope: !16906, file: !2662, line: 866, column: 2)
!16914 = !DILocalVariable(name: "__key", scope: !16913, file: !2662, line: 866, type: !15848)
!16915 = !DILocation(line: 0, scope: !16906)
!16916 = !DILocation(line: 0, scope: !16913)
!16917 = !DILocation(line: 0, scope: !15856, inlinedAt: !16918)
!16918 = distinct !DILocation(line: 866, column: 2, scope: !16913)
!16919 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16920)
!16920 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16918)
!16921 = !DILocation(line: 0, scope: !15865, inlinedAt: !16920)
!16922 = !DILocation(line: 867, column: 12, scope: !16923)
!16923 = distinct !DILexicalBlock(scope: !16924, file: !2662, line: 866, column: 26)
!16924 = distinct !DILexicalBlock(scope: !16913, file: !2662, line: 866, column: 2)
!16925 = !DILocation(line: 869, column: 14, scope: !16926)
!16926 = distinct !DILexicalBlock(scope: !16923, file: !2662, line: 869, column: 7)
!16927 = !DILocation(line: 869, column: 7, scope: !16923)
!16928 = !DILocation(line: 870, column: 4, scope: !16929)
!16929 = distinct !DILexicalBlock(scope: !16926, file: !2662, line: 869, column: 23)
!16930 = !DILocation(line: 871, column: 3, scope: !16929)
!16931 = !DILocation(line: 0, scope: !15883, inlinedAt: !16932)
!16932 = distinct !DILocation(line: 866, column: 2, scope: !16924)
!16933 = !DILocation(line: 0, scope: !15891, inlinedAt: !16934)
!16934 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16932)
!16935 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16934)
!16936 = !DILocation(line: 874, column: 2, scope: !16906)
!16937 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2662, file: !2662, line: 877, type: !16907, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16938)
!16938 = !{!16939, !16940, !16941, !16943}
!16939 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16937, file: !2662, line: 877, type: !2588)
!16940 = !DILocalVariable(name: "thread", scope: !16937, file: !2662, line: 879, type: !2557)
!16941 = !DILocalVariable(name: "__i", scope: !16942, file: !2662, line: 881, type: !15848)
!16942 = distinct !DILexicalBlock(scope: !16937, file: !2662, line: 881, column: 2)
!16943 = !DILocalVariable(name: "__key", scope: !16942, file: !2662, line: 881, type: !15848)
!16944 = !DILocation(line: 0, scope: !16937)
!16945 = !DILocation(line: 0, scope: !16942)
!16946 = !DILocation(line: 0, scope: !15856, inlinedAt: !16947)
!16947 = distinct !DILocation(line: 881, column: 2, scope: !16942)
!16948 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16949)
!16949 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16947)
!16950 = !DILocation(line: 0, scope: !15865, inlinedAt: !16949)
!16951 = !DILocation(line: 882, column: 12, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16953, file: !2662, line: 881, column: 26)
!16953 = distinct !DILexicalBlock(scope: !16942, file: !2662, line: 881, column: 2)
!16954 = !DILocation(line: 884, column: 14, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16952, file: !2662, line: 884, column: 7)
!16956 = !DILocation(line: 884, column: 7, scope: !16952)
!16957 = !DILocation(line: 885, column: 4, scope: !16958)
!16958 = distinct !DILexicalBlock(scope: !16955, file: !2662, line: 884, column: 23)
!16959 = !DILocation(line: 886, column: 10, scope: !16958)
!16960 = !DILocation(line: 887, column: 3, scope: !16958)
!16961 = !DILocation(line: 0, scope: !15883, inlinedAt: !16962)
!16962 = distinct !DILocation(line: 881, column: 2, scope: !16953)
!16963 = !DILocation(line: 0, scope: !15891, inlinedAt: !16964)
!16964 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16962)
!16965 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16964)
!16966 = !DILocation(line: 890, column: 2, scope: !16937)
!16967 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2662, file: !2662, line: 893, type: !15814, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16968)
!16968 = !{!16969}
!16969 = !DILocalVariable(name: "thread", arg: 1, scope: !16967, file: !2662, line: 893, type: !2557)
!16970 = !DILocation(line: 0, scope: !16967)
!16971 = !DILocation(line: 0, scope: !16823, inlinedAt: !16972)
!16972 = distinct !DILocation(line: 895, column: 2, scope: !16967)
!16973 = !DILocation(line: 0, scope: !16827, inlinedAt: !16972)
!16974 = !DILocation(line: 0, scope: !15856, inlinedAt: !16975)
!16975 = distinct !DILocation(line: 788, column: 2, scope: !16827, inlinedAt: !16972)
!16976 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !16977)
!16977 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16975)
!16978 = !DILocation(line: 0, scope: !15865, inlinedAt: !16977)
!16979 = !DILocation(line: 789, column: 3, scope: !16837, inlinedAt: !16972)
!16980 = !DILocation(line: 0, scope: !15883, inlinedAt: !16981)
!16981 = distinct !DILocation(line: 788, column: 2, scope: !16838, inlinedAt: !16972)
!16982 = !DILocation(line: 0, scope: !15891, inlinedAt: !16983)
!16983 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !16981)
!16984 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !16983)
!16985 = !DILocation(line: 896, column: 8, scope: !16967)
!16986 = !DILocation(line: 897, column: 1, scope: !16967)
!16987 = distinct !DISubprogram(name: "z_set_prio", scope: !2662, file: !2662, line: 902, type: !16176, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !16988)
!16988 = !{!16989, !16990, !16991, !16992, !16994}
!16989 = !DILocalVariable(name: "thread", arg: 1, scope: !16987, file: !2662, line: 902, type: !2557)
!16990 = !DILocalVariable(name: "prio", arg: 2, scope: !16987, file: !2662, line: 902, type: !125)
!16991 = !DILocalVariable(name: "need_sched", scope: !16987, file: !2662, line: 904, type: !153)
!16992 = !DILocalVariable(name: "__i", scope: !16993, file: !2662, line: 906, type: !15848)
!16993 = distinct !DILexicalBlock(scope: !16987, file: !2662, line: 906, column: 2)
!16994 = !DILocalVariable(name: "__key", scope: !16993, file: !2662, line: 906, type: !15848)
!16995 = !DILocation(line: 0, scope: !16987)
!16996 = !DILocation(line: 0, scope: !16993)
!16997 = !DILocation(line: 0, scope: !15856, inlinedAt: !16998)
!16998 = distinct !DILocation(line: 906, column: 2, scope: !16993)
!16999 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !17000)
!17000 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !16998)
!17001 = !DILocation(line: 0, scope: !15865, inlinedAt: !17000)
!17002 = !DILocation(line: 907, column: 16, scope: !17003)
!17003 = distinct !DILexicalBlock(scope: !17004, file: !2662, line: 906, column: 26)
!17004 = distinct !DILexicalBlock(scope: !16993, file: !2662, line: 906, column: 2)
!17005 = !DILocation(line: 909, column: 7, scope: !17003)
!17006 = !DILocation(line: 0, scope: !16025, inlinedAt: !17007)
!17007 = distinct !DILocation(line: 912, column: 5, scope: !17008)
!17008 = distinct !DILexicalBlock(scope: !17009, file: !2662, line: 911, column: 63)
!17009 = distinct !DILexicalBlock(scope: !17010, file: !2662, line: 911, column: 8)
!17010 = distinct !DILexicalBlock(scope: !17011, file: !2662, line: 909, column: 19)
!17011 = distinct !DILexicalBlock(scope: !17003, file: !2662, line: 909, column: 7)
!17012 = !DILocation(line: 266, column: 28, scope: !16025, inlinedAt: !17007)
!17013 = !DILocation(line: 0, scope: !16033, inlinedAt: !17014)
!17014 = distinct !DILocation(line: 268, column: 3, scope: !16037, inlinedAt: !17007)
!17015 = !DILocation(line: 234, column: 2, scope: !16033, inlinedAt: !17014)
!17016 = !DILocation(line: 913, column: 23, scope: !17008)
!17017 = !DILocation(line: 0, scope: !16042, inlinedAt: !17018)
!17018 = distinct !DILocation(line: 914, column: 5, scope: !17008)
!17019 = !DILocation(line: 252, column: 28, scope: !16042, inlinedAt: !17018)
!17020 = !DILocation(line: 0, scope: !16049, inlinedAt: !17021)
!17021 = distinct !DILocation(line: 254, column: 3, scope: !16053, inlinedAt: !17018)
!17022 = !DILocation(line: 0, scope: !16056, inlinedAt: !17023)
!17023 = distinct !DILocation(line: 229, column: 2, scope: !16049, inlinedAt: !17021)
!17024 = !DILocation(line: 188, column: 2, scope: !16066, inlinedAt: !17023)
!17025 = !DILocation(line: 188, column: 2, scope: !16068, inlinedAt: !17023)
!17026 = !DILocation(line: 0, scope: !16066, inlinedAt: !17023)
!17027 = !DILocation(line: 189, column: 7, scope: !16071, inlinedAt: !17023)
!17028 = !DILocation(line: 189, column: 35, scope: !16071, inlinedAt: !17023)
!17029 = !DILocation(line: 189, column: 7, scope: !16072, inlinedAt: !17023)
!17030 = !DILocation(line: 190, column: 4, scope: !16076, inlinedAt: !17023)
!17031 = !DILocation(line: 192, column: 4, scope: !16076, inlinedAt: !17023)
!17032 = distinct !{!17032, !17024, !17033}
!17033 = !DILocation(line: 194, column: 2, scope: !16066, inlinedAt: !17023)
!17034 = !DILocation(line: 196, column: 2, scope: !16056, inlinedAt: !17023)
!17035 = !DILocation(line: 197, column: 1, scope: !16056, inlinedAt: !17023)
!17036 = !DILocation(line: 918, column: 4, scope: !17010)
!17037 = !DILocation(line: 919, column: 3, scope: !17010)
!17038 = !DILocation(line: 920, column: 22, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !17011, file: !2662, line: 919, column: 10)
!17040 = !DILocation(line: 0, scope: !15883, inlinedAt: !17041)
!17041 = distinct !DILocation(line: 906, column: 2, scope: !17004)
!17042 = !DILocation(line: 0, scope: !15891, inlinedAt: !17043)
!17043 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !17041)
!17044 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !17043)
!17045 = !DILocation(line: 926, column: 2, scope: !16987)
!17046 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2662, file: !2662, line: 929, type: !17047, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17049)
!17047 = !DISubroutineType(types: !17048)
!17048 = !{null, !2557, !125}
!17049 = !{!17050, !17051, !17052}
!17050 = !DILocalVariable(name: "thread", arg: 1, scope: !17046, file: !2662, line: 929, type: !2557)
!17051 = !DILocalVariable(name: "prio", arg: 2, scope: !17046, file: !2662, line: 929, type: !125)
!17052 = !DILocalVariable(name: "need_sched", scope: !17046, file: !2662, line: 931, type: !153)
!17053 = !DILocation(line: 0, scope: !17046)
!17054 = !DILocation(line: 931, column: 20, scope: !17046)
!17055 = !DILocation(line: 935, column: 17, scope: !17056)
!17056 = distinct !DILexicalBlock(scope: !17046, file: !2662, line: 935, column: 6)
!17057 = !DILocation(line: 935, column: 20, scope: !17056)
!17058 = !DILocation(line: 935, column: 35, scope: !17056)
!17059 = !DILocation(line: 935, column: 48, scope: !17056)
!17060 = !DILocation(line: 935, column: 6, scope: !17046)
!17061 = !DILocation(line: 936, column: 3, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17056, file: !2662, line: 935, column: 55)
!17063 = !DILocation(line: 937, column: 2, scope: !17062)
!17064 = !DILocation(line: 938, column: 1, scope: !17046)
!17065 = distinct !DISubprogram(name: "k_sched_lock", scope: !2662, file: !2662, line: 987, type: !3274, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17066)
!17066 = !{!17067, !17069}
!17067 = !DILocalVariable(name: "__i", scope: !17068, file: !2662, line: 989, type: !15848)
!17068 = distinct !DILexicalBlock(scope: !17065, file: !2662, line: 989, column: 2)
!17069 = !DILocalVariable(name: "__key", scope: !17068, file: !2662, line: 989, type: !15848)
!17070 = !DILocation(line: 0, scope: !17068)
!17071 = !DILocation(line: 0, scope: !15856, inlinedAt: !17072)
!17072 = distinct !DILocation(line: 989, column: 2, scope: !17068)
!17073 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !17074)
!17074 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !17072)
!17075 = !DILocation(line: 0, scope: !15865, inlinedAt: !17074)
!17076 = !DILocation(line: 992, column: 3, scope: !17077)
!17077 = distinct !DILexicalBlock(scope: !17078, file: !2662, line: 989, column: 26)
!17078 = distinct !DILexicalBlock(scope: !17068, file: !2662, line: 989, column: 2)
!17079 = !DILocation(line: 0, scope: !15883, inlinedAt: !17080)
!17080 = distinct !DILocation(line: 989, column: 2, scope: !17078)
!17081 = !DILocation(line: 0, scope: !15891, inlinedAt: !17082)
!17082 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !17080)
!17083 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !17082)
!17084 = !DILocation(line: 994, column: 1, scope: !17065)
!17085 = distinct !DISubprogram(name: "z_sched_lock", scope: !15128, file: !15128, line: 251, type: !3274, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !652)
!17086 = !DILocation(line: 256, column: 4, scope: !17085)
!17087 = !DILocation(line: 256, column: 19, scope: !17085)
!17088 = !DILocation(line: 256, column: 2, scope: !17085)
!17089 = !DILocation(line: 258, column: 2, scope: !17090)
!17090 = distinct !DILexicalBlock(scope: !17085, file: !15128, line: 258, column: 2)
!17091 = !{i64 2152342183}
!17092 = !DILocation(line: 259, column: 1, scope: !17085)
!17093 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2662, file: !2662, line: 996, type: !3274, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17094)
!17094 = !{!17095, !17097}
!17095 = !DILocalVariable(name: "__i", scope: !17096, file: !2662, line: 998, type: !15848)
!17096 = distinct !DILexicalBlock(scope: !17093, file: !2662, line: 998, column: 2)
!17097 = !DILocalVariable(name: "__key", scope: !17096, file: !2662, line: 998, type: !15848)
!17098 = !DILocation(line: 0, scope: !17096)
!17099 = !DILocation(line: 0, scope: !15856, inlinedAt: !17100)
!17100 = distinct !DILocation(line: 998, column: 2, scope: !17096)
!17101 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !17102)
!17102 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !17100)
!17103 = !DILocation(line: 0, scope: !15865, inlinedAt: !17102)
!17104 = !DILocation(line: 1002, column: 5, scope: !17105)
!17105 = distinct !DILexicalBlock(scope: !17106, file: !2662, line: 998, column: 26)
!17106 = distinct !DILexicalBlock(scope: !17096, file: !2662, line: 998, column: 2)
!17107 = !DILocation(line: 1002, column: 20, scope: !17105)
!17108 = !DILocation(line: 1002, column: 3, scope: !17105)
!17109 = !DILocation(line: 1003, column: 3, scope: !17105)
!17110 = !DILocation(line: 0, scope: !15883, inlinedAt: !17111)
!17111 = distinct !DILocation(line: 998, column: 2, scope: !17106)
!17112 = !DILocation(line: 0, scope: !15891, inlinedAt: !17113)
!17113 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !17111)
!17114 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !17113)
!17115 = !DILocation(line: 1011, column: 2, scope: !17093)
!17116 = !DILocation(line: 1012, column: 1, scope: !17093)
!17117 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2662, file: !2662, line: 1014, type: !16164, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !652)
!17118 = !DILocation(line: 1028, column: 25, scope: !17117)
!17119 = !DILocation(line: 1028, column: 2, scope: !17117)
!17120 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2662, file: !2662, line: 1155, type: !17121, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17123)
!17121 = !DISubroutineType(types: !17122)
!17122 = !{!153, !2586, !2586}
!17123 = !{!17124, !17125, !17126, !17127, !17128}
!17124 = !DILocalVariable(name: "a", arg: 1, scope: !17120, file: !2662, line: 1155, type: !2586)
!17125 = !DILocalVariable(name: "b", arg: 2, scope: !17120, file: !2662, line: 1155, type: !2586)
!17126 = !DILocalVariable(name: "thread_a", scope: !17120, file: !2662, line: 1157, type: !2557)
!17127 = !DILocalVariable(name: "thread_b", scope: !17120, file: !2662, line: 1157, type: !2557)
!17128 = !DILocalVariable(name: "cmp", scope: !17120, file: !2662, line: 1158, type: !997)
!17129 = !DILocation(line: 0, scope: !17120)
!17130 = !DILocation(line: 1160, column: 13, scope: !17120)
!17131 = !DILocation(line: 1161, column: 13, scope: !17120)
!17132 = !DILocation(line: 1163, column: 8, scope: !17120)
!17133 = !DILocation(line: 1165, column: 10, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17120, file: !2662, line: 1165, column: 6)
!17135 = !DILocation(line: 1165, column: 6, scope: !17120)
!17136 = !DILocation(line: 1167, column: 17, scope: !17137)
!17137 = distinct !DILexicalBlock(scope: !17134, file: !2662, line: 1167, column: 13)
!17138 = !DILocation(line: 1167, column: 13, scope: !17134)
!17139 = !DILocation(line: 1170, column: 25, scope: !17140)
!17140 = distinct !DILexicalBlock(scope: !17137, file: !2662, line: 1169, column: 9)
!17141 = !DILocation(line: 1170, column: 52, scope: !17140)
!17142 = !DILocation(line: 1170, column: 35, scope: !17140)
!17143 = !DILocation(line: 1170, column: 3, scope: !17140)
!17144 = !DILocation(line: 0, scope: !17134)
!17145 = !DILocation(line: 1173, column: 1, scope: !17120)
!17146 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2662, file: !2662, line: 1175, type: !17147, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17162)
!17147 = !DISubroutineType(types: !17148)
!17148 = !{null, !17149, !2557}
!17149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17150, size: 32)
!17150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17151, line: 37, size: 128, elements: !17152)
!17151 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17152 = !{!17153, !17161}
!17153 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17150, file: !17151, line: 38, baseType: !17154, size: 96)
!17154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !570, line: 83, size: 96, elements: !17155)
!17155 = !{!17156, !17157, !17160}
!17156 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17154, file: !570, line: 84, baseType: !2586, size: 32)
!17157 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17154, file: !570, line: 85, baseType: !17158, size: 32, offset: 32)
!17158 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !570, line: 81, baseType: !17159)
!17159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17121, size: 32)
!17160 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17154, file: !570, line: 86, baseType: !125, size: 32, offset: 64)
!17161 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17150, file: !17151, line: 39, baseType: !125, size: 32, offset: 96)
!17162 = !{!17163, !17164, !17165, !17166, !17175}
!17163 = !DILocalVariable(name: "pq", arg: 1, scope: !17146, file: !2662, line: 1175, type: !17149)
!17164 = !DILocalVariable(name: "thread", arg: 2, scope: !17146, file: !2662, line: 1175, type: !2557)
!17165 = !DILocalVariable(name: "t", scope: !17146, file: !2662, line: 1177, type: !2557)
!17166 = !DILocalVariable(name: "__f", scope: !17167, file: !2662, line: 1190, type: !17170)
!17167 = distinct !DILexicalBlock(scope: !17168, file: !2662, line: 1190, column: 3)
!17168 = distinct !DILexicalBlock(scope: !17169, file: !2662, line: 1189, column: 27)
!17169 = distinct !DILexicalBlock(scope: !17146, file: !2662, line: 1189, column: 6)
!17170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !570, line: 155, size: 96, elements: !17171)
!17171 = !{!17172, !17173, !17174}
!17172 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17170, file: !570, line: 156, baseType: !2657, size: 32)
!17173 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17170, file: !570, line: 157, baseType: !184, size: 32, offset: 32)
!17174 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17170, file: !570, line: 158, baseType: !997, size: 32, offset: 64)
!17175 = !DILocalVariable(name: "n", scope: !17176, file: !2662, line: 1190, type: !2586)
!17176 = distinct !DILexicalBlock(scope: !17177, file: !2662, line: 1190, column: 3)
!17177 = distinct !DILexicalBlock(scope: !17167, file: !2662, line: 1190, column: 3)
!17178 = !DILocation(line: 0, scope: !17146)
!17179 = !DILocation(line: 1181, column: 31, scope: !17146)
!17180 = !DILocation(line: 1181, column: 45, scope: !17146)
!17181 = !DILocation(line: 1181, column: 15, scope: !17146)
!17182 = !DILocation(line: 1181, column: 25, scope: !17146)
!17183 = !DILocation(line: 1189, column: 11, scope: !17169)
!17184 = !DILocation(line: 1189, column: 7, scope: !17169)
!17185 = !DILocation(line: 1189, column: 6, scope: !17146)
!17186 = !DILocation(line: 1190, column: 3, scope: !17167)
!17187 = !DILocation(line: 1190, column: 3, scope: !17176)
!17188 = !DILocation(line: 0, scope: !17176)
!17189 = !DILocation(line: 1190, column: 3, scope: !17177)
!17190 = !DILocation(line: 1193, column: 2, scope: !17168)
!17191 = !DILocation(line: 1191, column: 42, scope: !17192)
!17192 = distinct !DILexicalBlock(scope: !17177, file: !2662, line: 1190, column: 54)
!17193 = !DILocation(line: 1191, column: 12, scope: !17192)
!17194 = !DILocation(line: 1191, column: 22, scope: !17192)
!17195 = distinct !{!17195, !17186, !17196}
!17196 = !DILocation(line: 1192, column: 3, scope: !17167)
!17197 = !DILocation(line: 1195, column: 17, scope: !17146)
!17198 = !DILocation(line: 1195, column: 37, scope: !17146)
!17199 = !DILocation(line: 1195, column: 2, scope: !17146)
!17200 = !DILocation(line: 1196, column: 1, scope: !17146)
!17201 = !DISubprogram(name: "z_rb_foreach_next", scope: !570, file: !570, line: 176, type: !17202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !652)
!17202 = !DISubroutineType(types: !17203)
!17203 = !{!2586, !17204, !17205}
!17204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17154, size: 32)
!17205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17170, size: 32)
!17206 = !DISubprogram(name: "rb_insert", scope: !570, file: !570, line: 105, type: !17207, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !652)
!17207 = !DISubroutineType(types: !17208)
!17208 = !{null, !17204, !2586}
!17209 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2662, file: !2662, line: 1198, type: !17147, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17210)
!17210 = !{!17211, !17212}
!17211 = !DILocalVariable(name: "pq", arg: 1, scope: !17209, file: !2662, line: 1198, type: !17149)
!17212 = !DILocalVariable(name: "thread", arg: 2, scope: !17209, file: !2662, line: 1198, type: !2557)
!17213 = !DILocation(line: 0, scope: !17209)
!17214 = !DILocation(line: 1202, column: 17, scope: !17209)
!17215 = !DILocation(line: 1202, column: 37, scope: !17209)
!17216 = !DILocation(line: 1202, column: 2, scope: !17209)
!17217 = !DILocation(line: 1204, column: 16, scope: !17218)
!17218 = distinct !DILexicalBlock(scope: !17209, file: !2662, line: 1204, column: 6)
!17219 = !DILocation(line: 1204, column: 7, scope: !17218)
!17220 = !DILocation(line: 1204, column: 6, scope: !17209)
!17221 = !DILocation(line: 1205, column: 7, scope: !17222)
!17222 = distinct !DILexicalBlock(scope: !17218, file: !2662, line: 1204, column: 22)
!17223 = !DILocation(line: 1205, column: 22, scope: !17222)
!17224 = !DILocation(line: 1206, column: 2, scope: !17222)
!17225 = !DILocation(line: 1207, column: 1, scope: !17209)
!17226 = !DISubprogram(name: "rb_remove", scope: !570, file: !570, line: 110, type: !17207, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !652)
!17227 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2662, file: !2662, line: 1209, type: !17228, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17230)
!17228 = !DISubroutineType(types: !17229)
!17229 = !{!2557, !17149}
!17230 = !{!17231, !17232, !17233}
!17231 = !DILocalVariable(name: "pq", arg: 1, scope: !17227, file: !2662, line: 1209, type: !17149)
!17232 = !DILocalVariable(name: "thread", scope: !17227, file: !2662, line: 1211, type: !2557)
!17233 = !DILocalVariable(name: "n", scope: !17227, file: !2662, line: 1212, type: !2586)
!17234 = !DILocation(line: 0, scope: !17227)
!17235 = !DILocation(line: 1212, column: 37, scope: !17227)
!17236 = !DILocation(line: 1212, column: 21, scope: !17227)
!17237 = !DILocation(line: 1217, column: 2, scope: !17227)
!17238 = distinct !DISubprogram(name: "rb_get_min", scope: !570, file: !570, line: 115, type: !17239, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17241)
!17239 = !DISubroutineType(types: !17240)
!17240 = !{!2586, !17204}
!17241 = !{!17242}
!17242 = !DILocalVariable(name: "tree", arg: 1, scope: !17238, file: !570, line: 115, type: !17204)
!17243 = !DILocation(line: 0, scope: !17238)
!17244 = !DILocation(line: 117, column: 9, scope: !17238)
!17245 = !DILocation(line: 117, column: 2, scope: !17238)
!17246 = !DISubprogram(name: "z_rb_get_minmax", scope: !570, file: !570, line: 100, type: !17247, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !652)
!17247 = !DISubroutineType(types: !17248)
!17248 = !{!2586, !17204, !150}
!17249 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2662, file: !2662, line: 1246, type: !17250, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17258)
!17250 = !DISubroutineType(types: !17251)
!17251 = !{!2557, !17252}
!17252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17253, size: 32)
!17253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17151, line: 53, size: 2080, elements: !17254)
!17254 = !{!17255, !17257}
!17255 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17253, file: !17151, line: 54, baseType: !17256, size: 2048)
!17256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2593, size: 2048, elements: !1096)
!17257 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17253, file: !17151, line: 55, baseType: !32, size: 32, offset: 2048)
!17258 = !{!17259, !17260, !17261, !17262}
!17259 = !DILocalVariable(name: "pq", arg: 1, scope: !17249, file: !2662, line: 1246, type: !17252)
!17260 = !DILocalVariable(name: "thread", scope: !17249, file: !2662, line: 1252, type: !2557)
!17261 = !DILocalVariable(name: "l", scope: !17249, file: !2662, line: 1253, type: !16059)
!17262 = !DILocalVariable(name: "n", scope: !17249, file: !2662, line: 1254, type: !2658)
!17263 = !DILocation(line: 0, scope: !17249)
!17264 = !DILocation(line: 1248, column: 11, scope: !17265)
!17265 = distinct !DILexicalBlock(scope: !17249, file: !2662, line: 1248, column: 6)
!17266 = !DILocation(line: 1248, column: 7, scope: !17265)
!17267 = !DILocation(line: 1248, column: 6, scope: !17249)
!17268 = !DILocation(line: 1253, column: 31, scope: !17249)
!17269 = !DILocation(line: 1253, column: 20, scope: !17249)
!17270 = !DILocation(line: 1254, column: 19, scope: !17249)
!17271 = !DILocation(line: 1260, column: 1, scope: !17249)
!17272 = distinct !DISubprogram(name: "z_unpend_all", scope: !2662, file: !2662, line: 1262, type: !17273, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17275)
!17273 = !DISubroutineType(types: !17274)
!17274 = !{!125, !2588}
!17275 = !{!17276, !17277, !17278}
!17276 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17272, file: !2662, line: 1262, type: !2588)
!17277 = !DILocalVariable(name: "need_sched", scope: !17272, file: !2662, line: 1264, type: !125)
!17278 = !DILocalVariable(name: "thread", scope: !17272, file: !2662, line: 1265, type: !2557)
!17279 = !DILocation(line: 0, scope: !17272)
!17280 = !DILocation(line: 1267, column: 19, scope: !17272)
!17281 = !DILocation(line: 1267, column: 41, scope: !17272)
!17282 = !DILocation(line: 1267, column: 2, scope: !17272)
!17283 = !DILocation(line: 1268, column: 3, scope: !17284)
!17284 = distinct !DILexicalBlock(scope: !17272, file: !2662, line: 1267, column: 50)
!17285 = !DILocation(line: 1269, column: 3, scope: !17284)
!17286 = distinct !{!17286, !17282, !17287}
!17287 = !DILocation(line: 1271, column: 2, scope: !17272)
!17288 = !DILocation(line: 1273, column: 2, scope: !17272)
!17289 = distinct !DISubprogram(name: "z_waitq_head", scope: !15454, file: !15454, line: 52, type: !16907, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17290)
!17290 = !{!17291}
!17291 = !DILocalVariable(name: "w", arg: 1, scope: !17289, file: !15454, line: 52, type: !2588)
!17292 = !DILocation(line: 0, scope: !17289)
!17293 = !DILocation(line: 54, column: 52, scope: !17289)
!17294 = !DILocation(line: 54, column: 28, scope: !17289)
!17295 = !DILocation(line: 54, column: 9, scope: !17289)
!17296 = !DILocation(line: 54, column: 2, scope: !17289)
!17297 = distinct !DISubprogram(name: "init_ready_q", scope: !2662, file: !2662, line: 1276, type: !17298, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17305)
!17298 = !DISubroutineType(types: !17299)
!17299 = !{null, !17300}
!17300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17301, size: 32)
!17301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !580, line: 83, size: 96, elements: !17302)
!17302 = !{!17303, !17304}
!17303 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17301, file: !580, line: 86, baseType: !2557, size: 32)
!17304 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17301, file: !580, line: 90, baseType: !2593, size: 64, offset: 32)
!17305 = !{!17306}
!17306 = !DILocalVariable(name: "rq", arg: 1, scope: !17297, file: !2662, line: 1276, type: !17300)
!17307 = !DILocation(line: 0, scope: !17297)
!17308 = !DILocation(line: 1289, column: 22, scope: !17297)
!17309 = !DILocation(line: 1289, column: 2, scope: !17297)
!17310 = !DILocation(line: 1291, column: 1, scope: !17297)
!17311 = distinct !DISubprogram(name: "sys_dlist_init", scope: !554, file: !554, line: 197, type: !17312, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17314)
!17312 = !DISubroutineType(types: !17313)
!17313 = !{null, !16059}
!17314 = !{!17315}
!17315 = !DILocalVariable(name: "list", arg: 1, scope: !17311, file: !554, line: 197, type: !16059)
!17316 = !DILocation(line: 0, scope: !17311)
!17317 = !DILocation(line: 199, column: 8, scope: !17311)
!17318 = !DILocation(line: 199, column: 13, scope: !17311)
!17319 = !DILocation(line: 200, column: 8, scope: !17311)
!17320 = !DILocation(line: 200, column: 13, scope: !17311)
!17321 = !DILocation(line: 201, column: 1, scope: !17311)
!17322 = distinct !DISubprogram(name: "z_sched_init", scope: !2662, file: !2662, line: 1293, type: !3274, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !652)
!17323 = !DILocation(line: 1302, column: 2, scope: !17322)
!17324 = !DILocation(line: 1306, column: 2, scope: !17322)
!17325 = !DILocation(line: 1309, column: 1, scope: !17322)
!17326 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2662, file: !2662, line: 1311, type: !17327, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17330)
!17327 = !DISubroutineType(types: !17328)
!17328 = !{!125, !17329}
!17329 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !544, line: 347, baseType: !2557)
!17330 = !{!17331}
!17331 = !DILocalVariable(name: "thread", arg: 1, scope: !17326, file: !2662, line: 1311, type: !17329)
!17332 = !DILocation(line: 0, scope: !17326)
!17333 = !DILocation(line: 1313, column: 22, scope: !17326)
!17334 = !DILocation(line: 1313, column: 9, scope: !17326)
!17335 = !DILocation(line: 1313, column: 2, scope: !17326)
!17336 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2662, file: !2662, line: 1325, type: !17337, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17339)
!17337 = !DISubroutineType(types: !17338)
!17338 = !{null, !17329, !125}
!17339 = !{!17340, !17341, !17342}
!17340 = !DILocalVariable(name: "thread", arg: 1, scope: !17336, file: !2662, line: 1325, type: !17329)
!17341 = !DILocalVariable(name: "prio", arg: 2, scope: !17336, file: !2662, line: 1325, type: !125)
!17342 = !DILocalVariable(name: "th", scope: !17336, file: !2662, line: 1334, type: !2557)
!17343 = !DILocation(line: 0, scope: !17336)
!17344 = !DILocation(line: 1336, column: 2, scope: !17336)
!17345 = !DILocation(line: 1337, column: 1, scope: !17336)
!17346 = distinct !DISubprogram(name: "k_can_yield", scope: !2662, file: !2662, line: 1384, type: !9258, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !652)
!17347 = !DILocation(line: 1386, column: 11, scope: !17346)
!17348 = !DILocation(line: 1386, column: 29, scope: !17346)
!17349 = !DILocation(line: 1386, column: 32, scope: !17346)
!17350 = !DILocation(line: 1386, column: 46, scope: !17346)
!17351 = !DILocation(line: 1387, column: 28, scope: !17346)
!17352 = !DILocation(line: 1387, column: 4, scope: !17346)
!17353 = !DILocation(line: 1386, column: 2, scope: !17346)
!17354 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !637, file: !637, line: 989, type: !9258, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !652)
!17355 = !DILocation(line: 993, column: 10, scope: !17354)
!17356 = !DILocation(line: 993, column: 2, scope: !17354)
!17357 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2662, file: !2662, line: 1390, type: !3274, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17358)
!17358 = !{!17359}
!17359 = !DILocalVariable(name: "key", scope: !17357, file: !2662, line: 1396, type: !15848)
!17360 = !DILocation(line: 0, scope: !15856, inlinedAt: !17361)
!17361 = distinct !DILocation(line: 1396, column: 25, scope: !17357)
!17362 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !17363)
!17363 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !17361)
!17364 = !DILocation(line: 0, scope: !15865, inlinedAt: !17363)
!17365 = !DILocation(line: 0, scope: !17357)
!17366 = !DILocation(line: 1400, column: 18, scope: !17367)
!17367 = distinct !DILexicalBlock(scope: !17368, file: !2662, line: 1399, column: 36)
!17368 = distinct !DILexicalBlock(scope: !17357, file: !2662, line: 1398, column: 6)
!17369 = !DILocation(line: 0, scope: !16025, inlinedAt: !17370)
!17370 = distinct !DILocation(line: 1400, column: 3, scope: !17367)
!17371 = !DILocation(line: 266, column: 15, scope: !16025, inlinedAt: !17370)
!17372 = !DILocation(line: 266, column: 28, scope: !16025, inlinedAt: !17370)
!17373 = !DILocation(line: 0, scope: !16033, inlinedAt: !17374)
!17374 = distinct !DILocation(line: 268, column: 3, scope: !16037, inlinedAt: !17370)
!17375 = !DILocation(line: 234, column: 2, scope: !16033, inlinedAt: !17374)
!17376 = !DILocation(line: 1402, column: 15, scope: !17357)
!17377 = !DILocation(line: 0, scope: !16042, inlinedAt: !17378)
!17378 = distinct !DILocation(line: 1402, column: 2, scope: !17357)
!17379 = !DILocation(line: 252, column: 15, scope: !16042, inlinedAt: !17378)
!17380 = !DILocation(line: 252, column: 28, scope: !16042, inlinedAt: !17378)
!17381 = !DILocation(line: 0, scope: !16049, inlinedAt: !17382)
!17382 = distinct !DILocation(line: 254, column: 3, scope: !16053, inlinedAt: !17378)
!17383 = !DILocation(line: 0, scope: !16056, inlinedAt: !17384)
!17384 = distinct !DILocation(line: 229, column: 2, scope: !16049, inlinedAt: !17382)
!17385 = !DILocation(line: 188, column: 2, scope: !16066, inlinedAt: !17384)
!17386 = !DILocation(line: 188, column: 2, scope: !16068, inlinedAt: !17384)
!17387 = !DILocation(line: 0, scope: !16066, inlinedAt: !17384)
!17388 = !DILocation(line: 189, column: 7, scope: !16071, inlinedAt: !17384)
!17389 = !DILocation(line: 189, column: 35, scope: !16071, inlinedAt: !17384)
!17390 = !DILocation(line: 189, column: 7, scope: !16072, inlinedAt: !17384)
!17391 = !DILocation(line: 191, column: 21, scope: !16076, inlinedAt: !17384)
!17392 = !DILocation(line: 190, column: 4, scope: !16076, inlinedAt: !17384)
!17393 = !DILocation(line: 192, column: 4, scope: !16076, inlinedAt: !17384)
!17394 = distinct !{!17394, !17385, !17395}
!17395 = !DILocation(line: 194, column: 2, scope: !16066, inlinedAt: !17384)
!17396 = !DILocation(line: 196, column: 37, scope: !16056, inlinedAt: !17384)
!17397 = !DILocation(line: 196, column: 2, scope: !16056, inlinedAt: !17384)
!17398 = !DILocation(line: 197, column: 1, scope: !16056, inlinedAt: !17384)
!17399 = !DILocation(line: 1403, column: 2, scope: !17357)
!17400 = !DILocation(line: 0, scope: !16467, inlinedAt: !17401)
!17401 = distinct !DILocation(line: 1404, column: 2, scope: !17357)
!17402 = !DILocation(line: 196, column: 9, scope: !16467, inlinedAt: !17401)
!17403 = !DILocation(line: 1405, column: 1, scope: !17357)
!17404 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2662, file: !2662, line: 1459, type: !17405, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17407)
!17405 = !DISubroutineType(types: !17406)
!17406 = !{!997, !16647}
!17407 = !{!17408, !17409, !17410}
!17408 = !DILocalVariable(name: "timeout", arg: 1, scope: !17404, file: !2662, line: 1459, type: !16647)
!17409 = !DILocalVariable(name: "ticks", scope: !17404, file: !2662, line: 1461, type: !1927)
!17410 = !DILocalVariable(name: "ret", scope: !17404, file: !2662, line: 1480, type: !997)
!17411 = !DILocation(line: 0, scope: !17404)
!17412 = !DILocation(line: 1468, column: 6, scope: !17413)
!17413 = distinct !DILexicalBlock(scope: !17404, file: !2662, line: 1468, column: 6)
!17414 = !DILocation(line: 1468, column: 6, scope: !17404)
!17415 = !DILocation(line: 1469, column: 20, scope: !17416)
!17416 = distinct !DILexicalBlock(scope: !17413, file: !2662, line: 1468, column: 40)
!17417 = !DILocation(line: 1469, column: 3, scope: !17416)
!17418 = !DILocation(line: 1473, column: 3, scope: !17416)
!17419 = !DILocation(line: 1478, column: 10, scope: !17404)
!17420 = !DILocation(line: 1480, column: 16, scope: !17404)
!17421 = !DILocation(line: 1485, column: 1, scope: !17404)
!17422 = distinct !DISubprogram(name: "k_thread_suspend", scope: !5346, file: !5346, line: 310, type: !17423, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17425)
!17423 = !DISubroutineType(types: !17424)
!17424 = !{null, !17329}
!17425 = !{!17426}
!17426 = !DILocalVariable(name: "thread", arg: 1, scope: !17422, file: !5346, line: 310, type: !17329)
!17427 = !DILocation(line: 0, scope: !17422)
!17428 = !DILocation(line: 319, column: 2, scope: !17429)
!17429 = distinct !DILexicalBlock(scope: !17422, file: !5346, line: 319, column: 2)
!17430 = !{i64 2152260572}
!17431 = !DILocation(line: 320, column: 2, scope: !17422)
!17432 = !DILocation(line: 321, column: 1, scope: !17422)
!17433 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2662, file: !2662, line: 1415, type: !17434, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17436)
!17434 = !DISubroutineType(types: !17435)
!17435 = !{!997, !1927}
!17436 = !{!17437, !17438, !17439, !17440}
!17437 = !DILocalVariable(name: "ticks", arg: 1, scope: !17433, file: !2662, line: 1415, type: !1927)
!17438 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17433, file: !2662, line: 1418, type: !208)
!17439 = !DILocalVariable(name: "timeout", scope: !17433, file: !2662, line: 1430, type: !16647)
!17440 = !DILocalVariable(name: "key", scope: !17433, file: !2662, line: 1437, type: !15848)
!17441 = !DILocation(line: 0, scope: !17433)
!17442 = !DILocation(line: 1425, column: 12, scope: !17443)
!17443 = distinct !DILexicalBlock(scope: !17433, file: !2662, line: 1425, column: 6)
!17444 = !DILocation(line: 1425, column: 6, scope: !17433)
!17445 = !DILocation(line: 1426, column: 3, scope: !17446)
!17446 = distinct !DILexicalBlock(scope: !17443, file: !2662, line: 1425, column: 18)
!17447 = !DILocation(line: 1427, column: 3, scope: !17446)
!17448 = !DILocation(line: 1431, column: 24, scope: !17449)
!17449 = distinct !DILexicalBlock(scope: !17433, file: !2662, line: 1431, column: 6)
!17450 = !DILocation(line: 1431, column: 6, scope: !17433)
!17451 = !DILocation(line: 1432, column: 35, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17449, file: !2662, line: 1431, column: 30)
!17453 = !DILocation(line: 1432, column: 27, scope: !17452)
!17454 = !DILocation(line: 1433, column: 2, scope: !17452)
!17455 = !DILocation(line: 1434, column: 27, scope: !17456)
!17456 = distinct !DILexicalBlock(scope: !17449, file: !2662, line: 1433, column: 9)
!17457 = !DILocation(line: 0, scope: !17449)
!17458 = !DILocation(line: 0, scope: !15856, inlinedAt: !17459)
!17459 = distinct !DILocation(line: 1437, column: 25, scope: !17433)
!17460 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !17461)
!17461 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !17459)
!17462 = !DILocation(line: 0, scope: !15865, inlinedAt: !17461)
!17463 = !DILocation(line: 1440, column: 20, scope: !17433)
!17464 = !DILocation(line: 1440, column: 18, scope: !17433)
!17465 = !DILocation(line: 1442, column: 2, scope: !17433)
!17466 = !DILocation(line: 1443, column: 23, scope: !17433)
!17467 = !DILocation(line: 1443, column: 2, scope: !17433)
!17468 = !DILocation(line: 1444, column: 29, scope: !17433)
!17469 = !DILocation(line: 1444, column: 2, scope: !17433)
!17470 = !DILocation(line: 0, scope: !16467, inlinedAt: !17471)
!17471 = distinct !DILocation(line: 1446, column: 8, scope: !17433)
!17472 = !DILocation(line: 196, column: 9, scope: !16467, inlinedAt: !17471)
!17473 = !DILocation(line: 1450, column: 10, scope: !17433)
!17474 = !DILocation(line: 1450, column: 45, scope: !17433)
!17475 = !DILocation(line: 1450, column: 43, scope: !17433)
!17476 = !DILocation(line: 1451, column: 6, scope: !17433)
!17477 = !DILocation(line: 1457, column: 1, scope: !17433)
!17478 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !15689, file: !15689, line: 1103, type: !15690, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17479)
!17479 = !{!17480}
!17480 = !DILocalVariable(name: "t", arg: 1, scope: !17478, file: !15689, line: 1103, type: !2536)
!17481 = !DILocation(line: 0, scope: !17478)
!17482 = !DILocation(line: 0, scope: !15903, inlinedAt: !17483)
!17483 = distinct !DILocation(line: 1106, column: 9, scope: !17478)
!17484 = !DILocation(line: 139, column: 13, scope: !17485, inlinedAt: !17483)
!17485 = distinct !DILexicalBlock(scope: !17486, file: !15689, line: 138, column: 10)
!17486 = distinct !DILexicalBlock(scope: !17487, file: !15689, line: 136, column: 7)
!17487 = distinct !DILexicalBlock(scope: !15924, file: !15689, line: 134, column: 17)
!17488 = !DILocation(line: 1106, column: 2, scope: !17478)
!17489 = distinct !DISubprogram(name: "k_yield", scope: !5346, file: !5346, line: 140, type: !3274, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !652)
!17490 = !DILocation(line: 148, column: 2, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17489, file: !5346, line: 148, column: 2)
!17492 = !{i64 2152259892}
!17493 = !DILocation(line: 149, column: 2, scope: !17489)
!17494 = !DILocation(line: 150, column: 1, scope: !17489)
!17495 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2662, file: !2662, line: 1495, type: !17496, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17498)
!17496 = !DISubroutineType(types: !17497)
!17497 = !{!997, !125}
!17498 = !{!17499, !17500}
!17499 = !DILocalVariable(name: "us", arg: 1, scope: !17495, file: !2662, line: 1495, type: !125)
!17500 = !DILocalVariable(name: "ticks", scope: !17495, file: !2662, line: 1497, type: !997)
!17501 = !DILocation(line: 0, scope: !17495)
!17502 = !DILocation(line: 1501, column: 31, scope: !17495)
!17503 = !DILocation(line: 1501, column: 10, scope: !17495)
!17504 = !DILocation(line: 1502, column: 23, scope: !17495)
!17505 = !DILocation(line: 1502, column: 10, scope: !17495)
!17506 = !DILocation(line: 1506, column: 31, scope: !17495)
!17507 = !DILocation(line: 1506, column: 9, scope: !17495)
!17508 = !DILocation(line: 1506, column: 2, scope: !17495)
!17509 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !15689, file: !15689, line: 571, type: !15690, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17510)
!17510 = !{!17511}
!17511 = !DILocalVariable(name: "t", arg: 1, scope: !17509, file: !15689, line: 571, type: !2536)
!17512 = !DILocation(line: 0, scope: !17509)
!17513 = !DILocation(line: 0, scope: !15903, inlinedAt: !17514)
!17514 = distinct !DILocation(line: 574, column: 9, scope: !17509)
!17515 = !DILocation(line: 135, column: 5, scope: !17487, inlinedAt: !17514)
!17516 = !DILocation(line: 139, column: 13, scope: !17485, inlinedAt: !17514)
!17517 = !DILocation(line: 574, column: 2, scope: !17509)
!17518 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !15689, file: !15689, line: 1187, type: !15690, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17519)
!17519 = !{!17520}
!17520 = !DILocalVariable(name: "t", arg: 1, scope: !17518, file: !15689, line: 1187, type: !2536)
!17521 = !DILocation(line: 0, scope: !17518)
!17522 = !DILocation(line: 0, scope: !15903, inlinedAt: !17523)
!17523 = distinct !DILocation(line: 1190, column: 9, scope: !17518)
!17524 = !DILocation(line: 145, column: 13, scope: !17525, inlinedAt: !17523)
!17525 = distinct !DILexicalBlock(scope: !15921, file: !15689, line: 144, column: 10)
!17526 = !DILocation(line: 1190, column: 2, scope: !17518)
!17527 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2662, file: !2662, line: 1517, type: !17423, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17528)
!17528 = !{!17529}
!17529 = !DILocalVariable(name: "thread", arg: 1, scope: !17527, file: !2662, line: 1517, type: !17329)
!17530 = !DILocation(line: 0, scope: !17527)
!17531 = !DILocation(line: 1521, column: 6, scope: !17532)
!17532 = distinct !DILexicalBlock(scope: !17527, file: !2662, line: 1521, column: 6)
!17533 = !DILocation(line: 1521, column: 6, scope: !17527)
!17534 = !DILocation(line: 1525, column: 6, scope: !17535)
!17535 = distinct !DILexicalBlock(scope: !17527, file: !2662, line: 1525, column: 6)
!17536 = !DILocation(line: 1525, column: 37, scope: !17535)
!17537 = !DILocation(line: 1525, column: 6, scope: !17527)
!17538 = !DILocation(line: 1527, column: 20, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17540, file: !2662, line: 1527, column: 7)
!17540 = distinct !DILexicalBlock(scope: !17535, file: !2662, line: 1525, column: 42)
!17541 = !DILocation(line: 1527, column: 33, scope: !17539)
!17542 = !DILocation(line: 1527, column: 7, scope: !17540)
!17543 = !DILocation(line: 1532, column: 2, scope: !17527)
!17544 = !DILocation(line: 1533, column: 2, scope: !17527)
!17545 = !DILocation(line: 1031, column: 3, scope: !16500, inlinedAt: !17546)
!17546 = distinct !DILocation(line: 48, column: 10, scope: !16504, inlinedAt: !17547)
!17547 = distinct !DILocation(line: 1537, column: 7, scope: !17548)
!17548 = distinct !DILexicalBlock(scope: !17527, file: !2662, line: 1537, column: 6)
!17549 = !DILocation(line: 0, scope: !16500, inlinedAt: !17546)
!17550 = !DILocation(line: 48, column: 9, scope: !16504, inlinedAt: !17547)
!17551 = !DILocation(line: 1537, column: 6, scope: !17527)
!17552 = !DILocation(line: 1538, column: 3, scope: !17553)
!17553 = distinct !DILexicalBlock(scope: !17548, file: !2662, line: 1537, column: 25)
!17554 = !DILocation(line: 1539, column: 2, scope: !17553)
!17555 = !DILocation(line: 1540, column: 1, scope: !17527)
!17556 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !15128, file: !15128, line: 101, type: !15974, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17557)
!17557 = !{!17558}
!17558 = !DILocalVariable(name: "thread", arg: 1, scope: !17556, file: !15128, line: 101, type: !2557)
!17559 = !DILocation(line: 0, scope: !17556)
!17560 = !DILocation(line: 103, column: 23, scope: !17556)
!17561 = !DILocation(line: 103, column: 36, scope: !17556)
!17562 = !DILocation(line: 103, column: 55, scope: !17556)
!17563 = !DILocation(line: 103, column: 2, scope: !17556)
!17564 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2662, file: !2662, line: 1567, type: !17565, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17567)
!17565 = !DISubroutineType(types: !17566)
!17566 = !{!17329}
!17567 = !{!17568}
!17568 = !DILocalVariable(name: "ret", scope: !17564, file: !2662, line: 1577, type: !17329)
!17569 = !DILocation(line: 1577, column: 30, scope: !17564)
!17570 = !DILocation(line: 0, scope: !17564)
!17571 = !DILocation(line: 1582, column: 2, scope: !17564)
!17572 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2662, file: !2662, line: 1593, type: !9547, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !652)
!17573 = !DILocation(line: 1031, column: 3, scope: !16500, inlinedAt: !17574)
!17574 = distinct !DILocation(line: 48, column: 10, scope: !16504, inlinedAt: !17575)
!17575 = distinct !DILocation(line: 1595, column: 10, scope: !17572)
!17576 = !DILocation(line: 0, scope: !16500, inlinedAt: !17574)
!17577 = !DILocation(line: 48, column: 9, scope: !16504, inlinedAt: !17575)
!17578 = !DILocation(line: 1595, column: 27, scope: !17572)
!17579 = !DILocation(line: 1595, column: 41, scope: !17572)
!17580 = !DILocation(line: 1595, column: 30, scope: !17572)
!17581 = !DILocation(line: 1595, column: 2, scope: !17572)
!17582 = distinct !DISubprogram(name: "z_thread_abort", scope: !2662, file: !2662, line: 1725, type: !15814, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17583)
!17583 = !{!17584, !17585}
!17584 = !DILocalVariable(name: "thread", arg: 1, scope: !17582, file: !2662, line: 1725, type: !2557)
!17585 = !DILocalVariable(name: "key", scope: !17582, file: !2662, line: 1727, type: !15848)
!17586 = !DILocation(line: 0, scope: !17582)
!17587 = !DILocation(line: 0, scope: !15856, inlinedAt: !17588)
!17588 = distinct !DILocation(line: 1727, column: 25, scope: !17582)
!17589 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !17590)
!17590 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !17588)
!17591 = !DILocation(line: 0, scope: !15865, inlinedAt: !17590)
!17592 = !DILocation(line: 1729, column: 20, scope: !17593)
!17593 = distinct !DILexicalBlock(scope: !17582, file: !2662, line: 1729, column: 6)
!17594 = !DILocation(line: 1729, column: 33, scope: !17593)
!17595 = !DILocation(line: 1729, column: 48, scope: !17593)
!17596 = !DILocation(line: 1729, column: 6, scope: !17582)
!17597 = !DILocation(line: 0, scope: !15883, inlinedAt: !17598)
!17598 = distinct !DILocation(line: 1730, column: 3, scope: !17599)
!17599 = distinct !DILexicalBlock(scope: !17593, file: !2662, line: 1729, column: 54)
!17600 = !DILocation(line: 0, scope: !15891, inlinedAt: !17601)
!17601 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !17598)
!17602 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !17601)
!17603 = !DILocation(line: 1732, column: 3, scope: !17604)
!17604 = distinct !DILexicalBlock(scope: !17599, file: !2662, line: 1732, column: 3)
!17605 = !{i64 2152995897, i64 2152995913, i64 2152995939, i64 2152995967, i64 2152995987}
!17606 = !DILocation(line: 1733, column: 3, scope: !17599)
!17607 = !DILocation(line: 1736, column: 20, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17582, file: !2662, line: 1736, column: 6)
!17609 = !DILocation(line: 1736, column: 33, scope: !17608)
!17610 = !DILocation(line: 1736, column: 49, scope: !17608)
!17611 = !DILocation(line: 1736, column: 6, scope: !17582)
!17612 = !DILocation(line: 0, scope: !15883, inlinedAt: !17613)
!17613 = distinct !DILocation(line: 1737, column: 3, scope: !17614)
!17614 = distinct !DILexicalBlock(scope: !17608, file: !2662, line: 1736, column: 56)
!17615 = !DILocation(line: 0, scope: !15891, inlinedAt: !17616)
!17616 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !17613)
!17617 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !17616)
!17618 = !DILocation(line: 1738, column: 3, scope: !17614)
!17619 = !DILocation(line: 1775, column: 2, scope: !17582)
!17620 = !DILocation(line: 1776, column: 16, scope: !17621)
!17621 = distinct !DILexicalBlock(scope: !17582, file: !2662, line: 1776, column: 6)
!17622 = !DILocation(line: 1776, column: 13, scope: !17621)
!17623 = !DILocation(line: 1776, column: 25, scope: !17621)
!17624 = !DILocation(line: 1031, column: 3, scope: !16500, inlinedAt: !17625)
!17625 = distinct !DILocation(line: 48, column: 10, scope: !16504, inlinedAt: !17626)
!17626 = distinct !DILocation(line: 1776, column: 29, scope: !17621)
!17627 = !DILocation(line: 0, scope: !16500, inlinedAt: !17625)
!17628 = !DILocation(line: 48, column: 9, scope: !16504, inlinedAt: !17626)
!17629 = !DILocation(line: 1776, column: 6, scope: !17582)
!17630 = !DILocation(line: 0, scope: !16467, inlinedAt: !17631)
!17631 = distinct !DILocation(line: 1777, column: 3, scope: !17632)
!17632 = distinct !DILexicalBlock(scope: !17621, file: !2662, line: 1776, column: 47)
!17633 = !DILocation(line: 196, column: 9, scope: !16467, inlinedAt: !17631)
!17634 = !DILocation(line: 1779, column: 2, scope: !17632)
!17635 = !DILocation(line: 0, scope: !15883, inlinedAt: !17636)
!17636 = distinct !DILocation(line: 1780, column: 2, scope: !17582)
!17637 = !DILocation(line: 0, scope: !15891, inlinedAt: !17638)
!17638 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !17636)
!17639 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !17638)
!17640 = !DILocation(line: 1781, column: 1, scope: !17582)
!17641 = distinct !DISubprogram(name: "end_thread", scope: !2662, file: !2662, line: 1690, type: !15814, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17642)
!17642 = !{!17643}
!17643 = !DILocalVariable(name: "thread", arg: 1, scope: !17641, file: !2662, line: 1690, type: !2557)
!17644 = !DILocation(line: 0, scope: !17641)
!17645 = !DILocation(line: 1695, column: 20, scope: !17646)
!17646 = distinct !DILexicalBlock(scope: !17641, file: !2662, line: 1695, column: 6)
!17647 = !DILocation(line: 1695, column: 33, scope: !17646)
!17648 = !DILocation(line: 1695, column: 49, scope: !17646)
!17649 = !DILocation(line: 1695, column: 6, scope: !17641)
!17650 = !DILocation(line: 1697, column: 29, scope: !17651)
!17651 = distinct !DILexicalBlock(scope: !17646, file: !2662, line: 1695, column: 56)
!17652 = !DILocation(line: 1698, column: 7, scope: !17653)
!17653 = distinct !DILexicalBlock(scope: !17651, file: !2662, line: 1698, column: 7)
!17654 = !DILocation(line: 1698, column: 7, scope: !17651)
!17655 = !DILocation(line: 0, scope: !16025, inlinedAt: !17656)
!17656 = distinct !DILocation(line: 1699, column: 4, scope: !17657)
!17657 = distinct !DILexicalBlock(scope: !17653, file: !2662, line: 1698, column: 35)
!17658 = !DILocation(line: 266, column: 28, scope: !16025, inlinedAt: !17656)
!17659 = !DILocation(line: 0, scope: !16033, inlinedAt: !17660)
!17660 = distinct !DILocation(line: 268, column: 3, scope: !16037, inlinedAt: !17656)
!17661 = !DILocation(line: 234, column: 2, scope: !16033, inlinedAt: !17660)
!17662 = !DILocation(line: 1700, column: 3, scope: !17657)
!17663 = !DILocation(line: 1701, column: 20, scope: !17664)
!17664 = distinct !DILexicalBlock(scope: !17651, file: !2662, line: 1701, column: 7)
!17665 = !DILocation(line: 1701, column: 30, scope: !17664)
!17666 = !DILocation(line: 1701, column: 7, scope: !17651)
!17667 = !DILocation(line: 1702, column: 4, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17664, file: !2662, line: 1701, column: 39)
!17669 = !DILocation(line: 1703, column: 3, scope: !17668)
!17670 = !DILocation(line: 1704, column: 9, scope: !17651)
!17671 = !DILocation(line: 1705, column: 23, scope: !17651)
!17672 = !DILocation(line: 1705, column: 3, scope: !17651)
!17673 = !DILocation(line: 1706, column: 3, scope: !17651)
!17674 = !DILocation(line: 1722, column: 2, scope: !17651)
!17675 = !DILocation(line: 1723, column: 1, scope: !17641)
!17676 = distinct !DISubprogram(name: "unpend_all", scope: !2662, file: !2662, line: 1674, type: !17677, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17679)
!17677 = !DISubroutineType(types: !17678)
!17678 = !{null, !2588}
!17679 = !{!17680, !17681}
!17680 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17676, file: !2662, line: 1674, type: !2588)
!17681 = !DILocalVariable(name: "thread", scope: !17676, file: !2662, line: 1676, type: !2557)
!17682 = !DILocation(line: 0, scope: !17676)
!17683 = !DILocation(line: 1678, column: 19, scope: !17676)
!17684 = !DILocation(line: 1678, column: 41, scope: !17676)
!17685 = !DILocation(line: 1678, column: 2, scope: !17676)
!17686 = !DILocation(line: 1679, column: 3, scope: !17687)
!17687 = distinct !DILexicalBlock(scope: !17676, file: !2662, line: 1678, column: 50)
!17688 = !DILocation(line: 1680, column: 9, scope: !17687)
!17689 = !DILocalVariable(name: "thread", arg: 1, scope: !17690, file: !15148, line: 65, type: !2557)
!17690 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15148, file: !15148, line: 65, type: !17691, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17693)
!17691 = !DISubroutineType(types: !17692)
!17692 = !{null, !2557, !32}
!17693 = !{!17689, !17694}
!17694 = !DILocalVariable(name: "value", arg: 2, scope: !17690, file: !15148, line: 65, type: !32)
!17695 = !DILocation(line: 0, scope: !17690, inlinedAt: !17696)
!17696 = distinct !DILocation(line: 1681, column: 3, scope: !17687)
!17697 = !DILocation(line: 67, column: 15, scope: !17690, inlinedAt: !17696)
!17698 = !DILocation(line: 67, column: 33, scope: !17690, inlinedAt: !17696)
!17699 = !DILocation(line: 1682, column: 3, scope: !17687)
!17700 = distinct !{!17700, !17685, !17701}
!17701 = !DILocation(line: 1683, column: 2, scope: !17676)
!17702 = !DILocation(line: 1684, column: 1, scope: !17676)
!17703 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2662, file: !2662, line: 1794, type: !17704, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17706)
!17704 = !DISubroutineType(types: !17705)
!17705 = !{!125, !2557, !16647}
!17706 = !{!17707, !17708, !17709, !17710}
!17707 = !DILocalVariable(name: "thread", arg: 1, scope: !17703, file: !2662, line: 1794, type: !2557)
!17708 = !DILocalVariable(name: "timeout", arg: 2, scope: !17703, file: !2662, line: 1794, type: !16647)
!17709 = !DILocalVariable(name: "key", scope: !17703, file: !2662, line: 1796, type: !15848)
!17710 = !DILocalVariable(name: "ret", scope: !17703, file: !2662, line: 1797, type: !125)
!17711 = !DILocation(line: 0, scope: !17703)
!17712 = !DILocation(line: 0, scope: !15856, inlinedAt: !17713)
!17713 = distinct !DILocation(line: 1796, column: 25, scope: !17703)
!17714 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !17715)
!17715 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !17713)
!17716 = !DILocation(line: 0, scope: !15865, inlinedAt: !17715)
!17717 = !DILocation(line: 1801, column: 20, scope: !17718)
!17718 = distinct !DILexicalBlock(scope: !17703, file: !2662, line: 1801, column: 6)
!17719 = !DILocation(line: 1801, column: 33, scope: !17718)
!17720 = !DILocation(line: 1801, column: 49, scope: !17718)
!17721 = !DILocation(line: 1801, column: 6, scope: !17703)
!17722 = !DILocation(line: 1803, column: 13, scope: !17723)
!17723 = distinct !DILexicalBlock(scope: !17718, file: !2662, line: 1803, column: 13)
!17724 = !DILocation(line: 1803, column: 13, scope: !17718)
!17725 = !DILocation(line: 1805, column: 24, scope: !17726)
!17726 = distinct !DILexicalBlock(scope: !17723, file: !2662, line: 1805, column: 13)
!17727 = !DILocation(line: 1805, column: 21, scope: !17726)
!17728 = !DILocation(line: 1805, column: 34, scope: !17726)
!17729 = !DILocation(line: 1806, column: 20, scope: !17726)
!17730 = !DILocation(line: 1806, column: 44, scope: !17726)
!17731 = !DILocation(line: 1806, column: 30, scope: !17726)
!17732 = !DILocation(line: 1805, column: 13, scope: !17723)
!17733 = !DILocation(line: 1810, column: 42, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17726, file: !2662, line: 1808, column: 9)
!17735 = !DILocation(line: 1810, column: 3, scope: !17734)
!17736 = !DILocation(line: 1811, column: 22, scope: !17734)
!17737 = !DILocation(line: 1811, column: 3, scope: !17734)
!17738 = !DILocation(line: 0, scope: !16467, inlinedAt: !17739)
!17739 = distinct !DILocation(line: 1814, column: 9, scope: !17734)
!17740 = !DILocation(line: 196, column: 9, scope: !16467, inlinedAt: !17739)
!17741 = !DILocation(line: 1817, column: 3, scope: !17734)
!17742 = !DILocation(line: 0, scope: !17718)
!17743 = !DILocation(line: 0, scope: !15883, inlinedAt: !17744)
!17744 = distinct !DILocation(line: 1822, column: 2, scope: !17703)
!17745 = !DILocation(line: 0, scope: !15891, inlinedAt: !17746)
!17746 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !17744)
!17747 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !17746)
!17748 = !DILocation(line: 1823, column: 2, scope: !17703)
!17749 = !DILocation(line: 1824, column: 1, scope: !17703)
!17750 = distinct !DISubprogram(name: "z_sched_wake", scope: !2662, file: !2662, line: 1882, type: !17751, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17753)
!17751 = !DISubroutineType(types: !17752)
!17752 = !{!153, !2588, !125, !124}
!17753 = !{!17754, !17755, !17756, !17757, !17758, !17759, !17761}
!17754 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17750, file: !2662, line: 1882, type: !2588)
!17755 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17750, file: !2662, line: 1882, type: !125)
!17756 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17750, file: !2662, line: 1882, type: !124)
!17757 = !DILocalVariable(name: "thread", scope: !17750, file: !2662, line: 1884, type: !2557)
!17758 = !DILocalVariable(name: "ret", scope: !17750, file: !2662, line: 1885, type: !153)
!17759 = !DILocalVariable(name: "__i", scope: !17760, file: !2662, line: 1887, type: !15848)
!17760 = distinct !DILexicalBlock(scope: !17750, file: !2662, line: 1887, column: 2)
!17761 = !DILocalVariable(name: "__key", scope: !17760, file: !2662, line: 1887, type: !15848)
!17762 = !DILocation(line: 0, scope: !17750)
!17763 = !DILocation(line: 0, scope: !17760)
!17764 = !DILocation(line: 0, scope: !15856, inlinedAt: !17765)
!17765 = distinct !DILocation(line: 1887, column: 2, scope: !17760)
!17766 = !DILocation(line: 55, column: 2, scope: !15865, inlinedAt: !17767)
!17767 = distinct !DILocation(line: 145, column: 10, scope: !15856, inlinedAt: !17765)
!17768 = !DILocation(line: 0, scope: !15865, inlinedAt: !17767)
!17769 = !DILocation(line: 1888, column: 12, scope: !17770)
!17770 = distinct !DILexicalBlock(scope: !17771, file: !2662, line: 1887, column: 26)
!17771 = distinct !DILexicalBlock(scope: !17760, file: !2662, line: 1887, column: 2)
!17772 = !DILocation(line: 1890, column: 14, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17770, file: !2662, line: 1890, column: 7)
!17774 = !DILocation(line: 1890, column: 7, scope: !17770)
!17775 = !DILocalVariable(name: "thread", arg: 1, scope: !17776, file: !17777, line: 134, type: !2557)
!17776 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !17777, file: !17777, line: 134, type: !17778, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17780)
!17777 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17778 = !DISubroutineType(types: !17779)
!17779 = !{null, !2557, !32, !124}
!17780 = !{!17775, !17781, !17782}
!17781 = !DILocalVariable(name: "value", arg: 2, scope: !17776, file: !17777, line: 135, type: !32)
!17782 = !DILocalVariable(name: "data", arg: 3, scope: !17776, file: !17777, line: 136, type: !124)
!17783 = !DILocation(line: 0, scope: !17776, inlinedAt: !17784)
!17784 = distinct !DILocation(line: 1891, column: 4, scope: !17785)
!17785 = distinct !DILexicalBlock(scope: !17773, file: !2662, line: 1890, column: 23)
!17786 = !DILocation(line: 0, scope: !17690, inlinedAt: !17787)
!17787 = distinct !DILocation(line: 138, column: 2, scope: !17776, inlinedAt: !17784)
!17788 = !DILocation(line: 67, column: 15, scope: !17690, inlinedAt: !17787)
!17789 = !DILocation(line: 67, column: 33, scope: !17690, inlinedAt: !17787)
!17790 = !DILocation(line: 139, column: 15, scope: !17776, inlinedAt: !17784)
!17791 = !DILocation(line: 139, column: 25, scope: !17776, inlinedAt: !17784)
!17792 = !DILocation(line: 1894, column: 4, scope: !17785)
!17793 = !DILocation(line: 1895, column: 10, scope: !17785)
!17794 = !DILocation(line: 1896, column: 4, scope: !17785)
!17795 = !DILocation(line: 1898, column: 3, scope: !17785)
!17796 = !DILocation(line: 0, scope: !15883, inlinedAt: !17797)
!17797 = distinct !DILocation(line: 1887, column: 2, scope: !17771)
!17798 = !DILocation(line: 0, scope: !15891, inlinedAt: !17799)
!17799 = distinct !DILocation(line: 215, column: 2, scope: !15883, inlinedAt: !17797)
!17800 = !DILocation(line: 95, column: 2, scope: !15891, inlinedAt: !17799)
!17801 = !DILocation(line: 1901, column: 2, scope: !17750)
!17802 = distinct !DISubprogram(name: "z_sched_wait", scope: !2662, file: !2662, line: 1904, type: !17803, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !17806)
!17803 = !DISubroutineType(types: !17804)
!17804 = !{!125, !15859, !15848, !2588, !16647, !17805}
!17805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!17806 = !{!17807, !17808, !17809, !17810, !17811, !17812}
!17807 = !DILocalVariable(name: "lock", arg: 1, scope: !17802, file: !2662, line: 1904, type: !15859)
!17808 = !DILocalVariable(name: "key", arg: 2, scope: !17802, file: !2662, line: 1904, type: !15848)
!17809 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17802, file: !2662, line: 1905, type: !2588)
!17810 = !DILocalVariable(name: "timeout", arg: 4, scope: !17802, file: !2662, line: 1905, type: !16647)
!17811 = !DILocalVariable(name: "data", arg: 5, scope: !17802, file: !2662, line: 1905, type: !17805)
!17812 = !DILocalVariable(name: "ret", scope: !17802, file: !2662, line: 1907, type: !125)
!17813 = !DILocation(line: 0, scope: !17802)
!17814 = !DILocation(line: 1907, column: 12, scope: !17802)
!17815 = !DILocation(line: 1909, column: 11, scope: !17816)
!17816 = distinct !DILexicalBlock(scope: !17802, file: !2662, line: 1909, column: 6)
!17817 = !DILocation(line: 1909, column: 6, scope: !17802)
!17818 = !DILocation(line: 1910, column: 11, scope: !17819)
!17819 = distinct !DILexicalBlock(scope: !17816, file: !2662, line: 1909, column: 20)
!17820 = !DILocation(line: 1910, column: 26, scope: !17819)
!17821 = !DILocation(line: 1910, column: 9, scope: !17819)
!17822 = !DILocation(line: 1911, column: 2, scope: !17819)
!17823 = !DILocation(line: 1912, column: 2, scope: !17802)
!17824 = distinct !DISubprogram(name: "z_data_copy", scope: !17825, file: !17825, line: 22, type: !3274, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3257, retainedNodes: !652)
!17825 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17826 = !DILocation(line: 24, column: 2, scope: !17824)
!17827 = !DILocation(line: 27, column: 2, scope: !17824)
!17828 = !DILocation(line: 71, column: 1, scope: !17824)
!17829 = distinct !DISubprogram(name: "z_add_timeout", scope: !2699, file: !2699, line: 88, type: !17830, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !17836)
!17830 = !DISubroutineType(types: !17831)
!17831 = !{null, !2672, !2691, !17832}
!17832 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1928, line: 67, baseType: !17833)
!17833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1928, line: 65, size: 64, elements: !17834)
!17834 = !{!17835}
!17835 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17833, file: !1928, line: 66, baseType: !1927, size: 64)
!17836 = !{!17837, !17838, !17839, !17840, !17846, !17847, !17850, !17853}
!17837 = !DILocalVariable(name: "to", arg: 1, scope: !17829, file: !2699, line: 88, type: !2672)
!17838 = !DILocalVariable(name: "fn", arg: 2, scope: !17829, file: !2699, line: 88, type: !2691)
!17839 = !DILocalVariable(name: "timeout", arg: 3, scope: !17829, file: !2699, line: 89, type: !17832)
!17840 = !DILocalVariable(name: "__i", scope: !17841, file: !2699, line: 102, type: !17842)
!17841 = distinct !DILexicalBlock(scope: !17829, file: !2699, line: 102, column: 2)
!17842 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !651, line: 106, baseType: !17843)
!17843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !651, line: 32, size: 32, elements: !17844)
!17844 = !{!17845}
!17845 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17843, file: !651, line: 33, baseType: !125, size: 32)
!17846 = !DILocalVariable(name: "__key", scope: !17841, file: !2699, line: 102, type: !17842)
!17847 = !DILocalVariable(name: "t", scope: !17848, file: !2699, line: 103, type: !2672)
!17848 = distinct !DILexicalBlock(scope: !17849, file: !2699, line: 102, column: 24)
!17849 = distinct !DILexicalBlock(scope: !17841, file: !2699, line: 102, column: 2)
!17850 = !DILocalVariable(name: "ticks", scope: !17851, file: !2699, line: 107, type: !1927)
!17851 = distinct !DILexicalBlock(scope: !17852, file: !2699, line: 106, column: 39)
!17852 = distinct !DILexicalBlock(scope: !17848, file: !2699, line: 105, column: 7)
!17853 = !DILocalVariable(name: "next_time", scope: !17854, file: !2699, line: 137, type: !997)
!17854 = distinct !DILexicalBlock(scope: !17855, file: !2699, line: 127, column: 22)
!17855 = distinct !DILexicalBlock(scope: !17848, file: !2699, line: 127, column: 7)
!17856 = !DILocation(line: 0, scope: !17829)
!17857 = !DILocation(line: 91, column: 6, scope: !17858)
!17858 = distinct !DILexicalBlock(scope: !17829, file: !2699, line: 91, column: 6)
!17859 = !DILocation(line: 91, column: 6, scope: !17829)
!17860 = !DILocation(line: 100, column: 6, scope: !17829)
!17861 = !DILocation(line: 100, column: 9, scope: !17829)
!17862 = !DILocation(line: 0, scope: !17841)
!17863 = !DILocalVariable(name: "l", arg: 1, scope: !17864, file: !651, line: 136, type: !17867)
!17864 = distinct !DISubprogram(name: "k_spin_lock", scope: !651, file: !651, line: 136, type: !17865, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !17868)
!17865 = !DISubroutineType(types: !17866)
!17866 = !{!17842, !17867}
!17867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 32)
!17868 = !{!17863, !17869}
!17869 = !DILocalVariable(name: "k", scope: !17864, file: !651, line: 139, type: !17842)
!17870 = !DILocation(line: 0, scope: !17864, inlinedAt: !17871)
!17871 = distinct !DILocation(line: 102, column: 2, scope: !17841)
!17872 = !DILocation(line: 55, column: 2, scope: !17873, inlinedAt: !17877)
!17873 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6796, file: !6796, line: 42, type: !6797, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !17874)
!17874 = !{!17875, !17876}
!17875 = !DILocalVariable(name: "key", scope: !17873, file: !6796, line: 44, type: !32)
!17876 = !DILocalVariable(name: "tmp", scope: !17873, file: !6796, line: 53, type: !32)
!17877 = distinct !DILocation(line: 145, column: 10, scope: !17864, inlinedAt: !17871)
!17878 = !{i64 1655980}
!17879 = !DILocation(line: 0, scope: !17873, inlinedAt: !17877)
!17880 = !DILocation(line: 106, column: 33, scope: !17852)
!17881 = !DILocation(line: 105, column: 7, scope: !17848)
!17882 = !DILocation(line: 107, column: 50, scope: !17851)
!17883 = !DILocation(line: 107, column: 48, scope: !17851)
!17884 = !DILocation(line: 0, scope: !17851)
!17885 = !DILocation(line: 109, column: 17, scope: !17851)
!17886 = !DILocation(line: 110, column: 3, scope: !17851)
!17887 = !DILocation(line: 111, column: 31, scope: !17888)
!17888 = distinct !DILexicalBlock(scope: !17852, file: !2699, line: 110, column: 10)
!17889 = !DILocation(line: 111, column: 37, scope: !17888)
!17890 = !DILocation(line: 111, column: 35, scope: !17888)
!17891 = !DILocation(line: 0, scope: !17852)
!17892 = !DILocation(line: 109, column: 8, scope: !17851)
!17893 = !DILocation(line: 109, column: 15, scope: !17851)
!17894 = !DILocation(line: 114, column: 12, scope: !17895)
!17895 = distinct !DILexicalBlock(scope: !17848, file: !2699, line: 114, column: 3)
!17896 = !DILocation(line: 0, scope: !17848)
!17897 = !DILocation(line: 114, column: 3, scope: !17895)
!17898 = !DILocation(line: 115, column: 24, scope: !17899)
!17899 = distinct !DILexicalBlock(scope: !17900, file: !2699, line: 115, column: 8)
!17900 = distinct !DILexicalBlock(scope: !17901, file: !2699, line: 114, column: 45)
!17901 = distinct !DILexicalBlock(scope: !17895, file: !2699, line: 114, column: 3)
!17902 = !DILocation(line: 115, column: 11, scope: !17899)
!17903 = !DILocation(line: 115, column: 18, scope: !17899)
!17904 = !DILocation(line: 115, column: 8, scope: !17900)
!17905 = !DILocation(line: 116, column: 15, scope: !17906)
!17906 = distinct !DILexicalBlock(scope: !17899, file: !2699, line: 115, column: 32)
!17907 = !DILocation(line: 117, column: 26, scope: !17906)
!17908 = !DILocation(line: 117, column: 37, scope: !17906)
!17909 = !DILocation(line: 117, column: 5, scope: !17906)
!17910 = !DILocation(line: 123, column: 7, scope: !17848)
!17911 = !DILocation(line: 120, column: 15, scope: !17900)
!17912 = !DILocation(line: 114, column: 36, scope: !17901)
!17913 = distinct !{!17913, !17897, !17914}
!17914 = !DILocation(line: 121, column: 3, scope: !17895)
!17915 = !DILocation(line: 124, column: 41, scope: !17916)
!17916 = distinct !DILexicalBlock(scope: !17917, file: !2699, line: 123, column: 18)
!17917 = distinct !DILexicalBlock(scope: !17848, file: !2699, line: 123, column: 7)
!17918 = !DILocation(line: 124, column: 4, scope: !17916)
!17919 = !DILocation(line: 125, column: 3, scope: !17916)
!17920 = !DILocation(line: 127, column: 13, scope: !17855)
!17921 = !DILocation(line: 127, column: 10, scope: !17855)
!17922 = !DILocation(line: 127, column: 7, scope: !17848)
!17923 = !DILocation(line: 137, column: 24, scope: !17854)
!17924 = !DILocation(line: 0, scope: !17854)
!17925 = !DILocation(line: 139, column: 18, scope: !17926)
!17926 = distinct !DILexicalBlock(scope: !17854, file: !2699, line: 139, column: 8)
!17927 = !DILocation(line: 139, column: 23, scope: !17926)
!17928 = !DILocation(line: 141, column: 5, scope: !17929)
!17929 = distinct !DILexicalBlock(scope: !17926, file: !2699, line: 140, column: 48)
!17930 = !DILocation(line: 142, column: 4, scope: !17929)
!17931 = !DILocalVariable(name: "key", arg: 2, scope: !17932, file: !651, line: 190, type: !17842)
!17932 = distinct !DISubprogram(name: "k_spin_unlock", scope: !651, file: !651, line: 189, type: !17933, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !17935)
!17933 = !DISubroutineType(types: !17934)
!17934 = !{null, !17867, !17842}
!17935 = !{!17936, !17931}
!17936 = !DILocalVariable(name: "l", arg: 1, scope: !17932, file: !651, line: 189, type: !17867)
!17937 = !DILocation(line: 0, scope: !17932, inlinedAt: !17938)
!17938 = distinct !DILocation(line: 102, column: 2, scope: !17849)
!17939 = !DILocalVariable(name: "key", arg: 1, scope: !17940, file: !6796, line: 84, type: !32)
!17940 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6796, file: !6796, line: 84, type: !6807, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !17941)
!17941 = !{!17939}
!17942 = !DILocation(line: 0, scope: !17940, inlinedAt: !17943)
!17943 = distinct !DILocation(line: 215, column: 2, scope: !17932, inlinedAt: !17938)
!17944 = !DILocation(line: 95, column: 2, scope: !17940, inlinedAt: !17943)
!17945 = !{i64 1656797}
!17946 = !DILocation(line: 148, column: 1, scope: !17829)
!17947 = distinct !DISubprogram(name: "elapsed", scope: !2699, file: !2699, line: 62, type: !17948, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !652)
!17948 = !DISubroutineType(types: !17949)
!17949 = !{!997}
!17950 = !DILocation(line: 64, column: 9, scope: !17947)
!17951 = !DILocation(line: 64, column: 28, scope: !17947)
!17952 = !DILocation(line: 64, column: 35, scope: !17947)
!17953 = !DILocation(line: 64, column: 2, scope: !17947)
!17954 = distinct !DISubprogram(name: "first", scope: !2699, file: !2699, line: 39, type: !17955, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !17957)
!17955 = !DISubroutineType(types: !17956)
!17956 = !{!2672}
!17957 = !{!17958}
!17958 = !DILocalVariable(name: "t", scope: !17954, file: !2699, line: 41, type: !17959)
!17959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 32)
!17960 = !DILocation(line: 41, column: 19, scope: !17954)
!17961 = !DILocation(line: 0, scope: !17954)
!17962 = !DILocation(line: 43, column: 9, scope: !17954)
!17963 = !DILocation(line: 43, column: 2, scope: !17954)
!17964 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !554, file: !554, line: 443, type: !17965, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !17967)
!17965 = !DISubroutineType(types: !17966)
!17966 = !{null, !17959, !17959}
!17967 = !{!17968, !17969, !17970}
!17968 = !DILocalVariable(name: "successor", arg: 1, scope: !17964, file: !554, line: 443, type: !17959)
!17969 = !DILocalVariable(name: "node", arg: 2, scope: !17964, file: !554, line: 443, type: !17959)
!17970 = !DILocalVariable(name: "prev", scope: !17964, file: !554, line: 445, type: !17971)
!17971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17959)
!17972 = !DILocation(line: 0, scope: !17964)
!17973 = !DILocation(line: 445, column: 39, scope: !17964)
!17974 = !DILocation(line: 447, column: 8, scope: !17964)
!17975 = !DILocation(line: 447, column: 13, scope: !17964)
!17976 = !DILocation(line: 448, column: 8, scope: !17964)
!17977 = !DILocation(line: 448, column: 13, scope: !17964)
!17978 = !DILocation(line: 449, column: 8, scope: !17964)
!17979 = !DILocation(line: 449, column: 13, scope: !17964)
!17980 = !DILocation(line: 450, column: 18, scope: !17964)
!17981 = !DILocation(line: 451, column: 1, scope: !17964)
!17982 = distinct !DISubprogram(name: "next", scope: !2699, file: !2699, line: 46, type: !17983, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !17985)
!17983 = !DISubroutineType(types: !17984)
!17984 = !{!2672, !2672}
!17985 = !{!17986, !17987}
!17986 = !DILocalVariable(name: "t", arg: 1, scope: !17982, file: !2699, line: 46, type: !2672)
!17987 = !DILocalVariable(name: "n", scope: !17982, file: !2699, line: 48, type: !17959)
!17988 = !DILocation(line: 0, scope: !17982)
!17989 = !DILocation(line: 48, column: 58, scope: !17982)
!17990 = !DILocation(line: 48, column: 19, scope: !17982)
!17991 = !DILocation(line: 50, column: 9, scope: !17982)
!17992 = !DILocation(line: 50, column: 2, scope: !17982)
!17993 = distinct !DISubprogram(name: "sys_dlist_append", scope: !554, file: !554, line: 404, type: !17994, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !17997)
!17994 = !DISubroutineType(types: !17995)
!17995 = !{null, !17996, !17959}
!17996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 32)
!17997 = !{!17998, !17999, !18000}
!17998 = !DILocalVariable(name: "list", arg: 1, scope: !17993, file: !554, line: 404, type: !17996)
!17999 = !DILocalVariable(name: "node", arg: 2, scope: !17993, file: !554, line: 404, type: !17959)
!18000 = !DILocalVariable(name: "tail", scope: !17993, file: !554, line: 406, type: !17971)
!18001 = !DILocation(line: 0, scope: !17993)
!18002 = !DILocation(line: 406, column: 34, scope: !17993)
!18003 = !DILocation(line: 408, column: 8, scope: !17993)
!18004 = !DILocation(line: 408, column: 13, scope: !17993)
!18005 = !DILocation(line: 409, column: 8, scope: !17993)
!18006 = !DILocation(line: 409, column: 13, scope: !17993)
!18007 = !DILocation(line: 411, column: 8, scope: !17993)
!18008 = !DILocation(line: 411, column: 13, scope: !17993)
!18009 = !DILocation(line: 412, column: 13, scope: !17993)
!18010 = !DILocation(line: 413, column: 1, scope: !17993)
!18011 = distinct !DISubprogram(name: "next_timeout", scope: !2699, file: !2699, line: 67, type: !17948, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18012)
!18012 = !{!18013, !18014, !18015}
!18013 = !DILocalVariable(name: "to", scope: !18011, file: !2699, line: 69, type: !2672)
!18014 = !DILocalVariable(name: "ticks_elapsed", scope: !18011, file: !2699, line: 70, type: !997)
!18015 = !DILocalVariable(name: "ret", scope: !18011, file: !2699, line: 71, type: !997)
!18016 = !DILocation(line: 69, column: 24, scope: !18011)
!18017 = !DILocation(line: 0, scope: !18011)
!18018 = !DILocation(line: 70, column: 26, scope: !18011)
!18019 = !DILocation(line: 73, column: 10, scope: !18020)
!18020 = distinct !DILexicalBlock(scope: !18011, file: !2699, line: 73, column: 6)
!18021 = !DILocation(line: 73, column: 19, scope: !18020)
!18022 = !DILocation(line: 74, column: 21, scope: !18020)
!18023 = !DILocation(line: 74, column: 30, scope: !18020)
!18024 = !DILocation(line: 74, column: 28, scope: !18020)
!18025 = !DILocation(line: 74, column: 45, scope: !18020)
!18026 = !DILocation(line: 73, column: 6, scope: !18011)
!18027 = !DILocation(line: 77, column: 9, scope: !18028)
!18028 = distinct !DILexicalBlock(scope: !18020, file: !2699, line: 76, column: 9)
!18029 = !DILocation(line: 0, scope: !18020)
!18030 = !DILocation(line: 81, column: 20, scope: !18031)
!18031 = distinct !DILexicalBlock(scope: !18011, file: !2699, line: 81, column: 6)
!18032 = !DILocation(line: 81, column: 6, scope: !18031)
!18033 = !DILocation(line: 81, column: 32, scope: !18031)
!18034 = !DILocation(line: 85, column: 2, scope: !18011)
!18035 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !554, file: !554, line: 341, type: !18036, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18038)
!18036 = !DISubroutineType(types: !18037)
!18037 = !{!17959, !17996, !17959}
!18038 = !{!18039, !18040}
!18039 = !DILocalVariable(name: "list", arg: 1, scope: !18035, file: !554, line: 341, type: !17996)
!18040 = !DILocalVariable(name: "node", arg: 2, scope: !18035, file: !554, line: 342, type: !17959)
!18041 = !DILocation(line: 0, scope: !18035)
!18042 = !DILocation(line: 344, column: 15, scope: !18035)
!18043 = !DILocation(line: 344, column: 9, scope: !18035)
!18044 = !DILocation(line: 344, column: 26, scope: !18035)
!18045 = !DILocation(line: 344, column: 2, scope: !18035)
!18046 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !554, file: !554, line: 325, type: !18036, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18047)
!18047 = !{!18048, !18049}
!18048 = !DILocalVariable(name: "list", arg: 1, scope: !18046, file: !554, line: 325, type: !17996)
!18049 = !DILocalVariable(name: "node", arg: 2, scope: !18046, file: !554, line: 326, type: !17959)
!18050 = !DILocation(line: 0, scope: !18046)
!18051 = !DILocation(line: 328, column: 24, scope: !18046)
!18052 = !DILocation(line: 328, column: 15, scope: !18046)
!18053 = !DILocation(line: 328, column: 9, scope: !18046)
!18054 = !DILocation(line: 328, column: 45, scope: !18046)
!18055 = !DILocation(line: 328, column: 2, scope: !18046)
!18056 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !554, file: !554, line: 294, type: !18057, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18059)
!18057 = !DISubroutineType(types: !18058)
!18058 = !{!17959, !17996}
!18059 = !{!18060}
!18060 = !DILocalVariable(name: "list", arg: 1, scope: !18056, file: !554, line: 294, type: !17996)
!18061 = !DILocation(line: 0, scope: !18056)
!18062 = !DILocation(line: 296, column: 9, scope: !18056)
!18063 = !DILocation(line: 296, column: 2, scope: !18056)
!18064 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !554, file: !554, line: 266, type: !18065, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18067)
!18065 = !DISubroutineType(types: !18066)
!18066 = !{!153, !17996}
!18067 = !{!18068}
!18068 = !DILocalVariable(name: "list", arg: 1, scope: !18064, file: !554, line: 266, type: !17996)
!18069 = !DILocation(line: 0, scope: !18064)
!18070 = !DILocation(line: 268, column: 15, scope: !18064)
!18071 = !DILocation(line: 268, column: 20, scope: !18064)
!18072 = !DILocation(line: 268, column: 2, scope: !18064)
!18073 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2699, file: !2699, line: 150, type: !18074, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18076)
!18074 = !DISubroutineType(types: !18075)
!18075 = !{!125, !2672}
!18076 = !{!18077, !18078, !18079, !18081}
!18077 = !DILocalVariable(name: "to", arg: 1, scope: !18073, file: !2699, line: 150, type: !2672)
!18078 = !DILocalVariable(name: "ret", scope: !18073, file: !2699, line: 152, type: !125)
!18079 = !DILocalVariable(name: "__i", scope: !18080, file: !2699, line: 154, type: !17842)
!18080 = distinct !DILexicalBlock(scope: !18073, file: !2699, line: 154, column: 2)
!18081 = !DILocalVariable(name: "__key", scope: !18080, file: !2699, line: 154, type: !17842)
!18082 = !DILocation(line: 0, scope: !18073)
!18083 = !DILocation(line: 0, scope: !18080)
!18084 = !DILocation(line: 0, scope: !17864, inlinedAt: !18085)
!18085 = distinct !DILocation(line: 154, column: 2, scope: !18080)
!18086 = !DILocation(line: 55, column: 2, scope: !17873, inlinedAt: !18087)
!18087 = distinct !DILocation(line: 145, column: 10, scope: !17864, inlinedAt: !18085)
!18088 = !DILocation(line: 0, scope: !17873, inlinedAt: !18087)
!18089 = !DILocation(line: 155, column: 7, scope: !18090)
!18090 = distinct !DILexicalBlock(scope: !18091, file: !2699, line: 155, column: 7)
!18091 = distinct !DILexicalBlock(scope: !18092, file: !2699, line: 154, column: 24)
!18092 = distinct !DILexicalBlock(scope: !18080, file: !2699, line: 154, column: 2)
!18093 = !DILocation(line: 155, column: 7, scope: !18091)
!18094 = !DILocation(line: 156, column: 4, scope: !18095)
!18095 = distinct !DILexicalBlock(scope: !18090, file: !2699, line: 155, column: 39)
!18096 = !DILocation(line: 158, column: 3, scope: !18095)
!18097 = !DILocation(line: 0, scope: !17932, inlinedAt: !18098)
!18098 = distinct !DILocation(line: 154, column: 2, scope: !18092)
!18099 = !DILocation(line: 0, scope: !17940, inlinedAt: !18100)
!18100 = distinct !DILocation(line: 215, column: 2, scope: !17932, inlinedAt: !18098)
!18101 = !DILocation(line: 95, column: 2, scope: !17940, inlinedAt: !18100)
!18102 = !DILocation(line: 161, column: 2, scope: !18073)
!18103 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !554, file: !554, line: 225, type: !18104, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18108)
!18104 = !DISubroutineType(types: !18105)
!18105 = !{!153, !18106}
!18106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18107, size: 32)
!18107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2676)
!18108 = !{!18109}
!18109 = !DILocalVariable(name: "node", arg: 1, scope: !18103, file: !554, line: 225, type: !18106)
!18110 = !DILocation(line: 0, scope: !18103)
!18111 = !DILocation(line: 227, column: 15, scope: !18103)
!18112 = !DILocation(line: 227, column: 20, scope: !18103)
!18113 = !DILocation(line: 227, column: 2, scope: !18103)
!18114 = distinct !DISubprogram(name: "remove_timeout", scope: !2699, file: !2699, line: 53, type: !2693, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18115)
!18115 = !{!18116}
!18116 = !DILocalVariable(name: "t", arg: 1, scope: !18114, file: !2699, line: 53, type: !2672)
!18117 = !DILocation(line: 0, scope: !18114)
!18118 = !DILocation(line: 55, column: 6, scope: !18119)
!18119 = distinct !DILexicalBlock(scope: !18114, file: !2699, line: 55, column: 6)
!18120 = !DILocation(line: 55, column: 14, scope: !18119)
!18121 = !DILocation(line: 55, column: 6, scope: !18114)
!18122 = !DILocation(line: 56, column: 25, scope: !18123)
!18123 = distinct !DILexicalBlock(scope: !18119, file: !2699, line: 55, column: 23)
!18124 = !DILocation(line: 56, column: 12, scope: !18123)
!18125 = !DILocation(line: 56, column: 19, scope: !18123)
!18126 = !DILocation(line: 57, column: 2, scope: !18123)
!18127 = !DILocation(line: 59, column: 23, scope: !18114)
!18128 = !DILocation(line: 59, column: 2, scope: !18114)
!18129 = !DILocation(line: 60, column: 1, scope: !18114)
!18130 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !554, file: !554, line: 496, type: !18131, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18133)
!18131 = !DISubroutineType(types: !18132)
!18132 = !{null, !17959}
!18133 = !{!18134, !18135, !18136}
!18134 = !DILocalVariable(name: "node", arg: 1, scope: !18130, file: !554, line: 496, type: !17959)
!18135 = !DILocalVariable(name: "prev", scope: !18130, file: !554, line: 498, type: !17971)
!18136 = !DILocalVariable(name: "next", scope: !18130, file: !554, line: 499, type: !17971)
!18137 = !DILocation(line: 0, scope: !18130)
!18138 = !DILocation(line: 498, column: 34, scope: !18130)
!18139 = !DILocation(line: 499, column: 34, scope: !18130)
!18140 = !DILocation(line: 501, column: 8, scope: !18130)
!18141 = !DILocation(line: 501, column: 13, scope: !18130)
!18142 = !DILocation(line: 502, column: 8, scope: !18130)
!18143 = !DILocation(line: 502, column: 13, scope: !18130)
!18144 = !DILocation(line: 503, column: 2, scope: !18130)
!18145 = !DILocation(line: 504, column: 1, scope: !18130)
!18146 = distinct !DISubprogram(name: "sys_dnode_init", scope: !554, file: !554, line: 211, type: !18131, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18147)
!18147 = !{!18148}
!18148 = !DILocalVariable(name: "node", arg: 1, scope: !18146, file: !554, line: 211, type: !17959)
!18149 = !DILocation(line: 0, scope: !18146)
!18150 = !DILocation(line: 213, column: 8, scope: !18146)
!18151 = !DILocation(line: 213, column: 13, scope: !18146)
!18152 = !DILocation(line: 214, column: 8, scope: !18146)
!18153 = !DILocation(line: 214, column: 13, scope: !18146)
!18154 = !DILocation(line: 215, column: 1, scope: !18146)
!18155 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2699, file: !2699, line: 183, type: !18156, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18160)
!18156 = !DISubroutineType(types: !18157)
!18157 = !{!1927, !18158}
!18158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18159, size: 32)
!18159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2673)
!18160 = !{!18161, !18162, !18163, !18165}
!18161 = !DILocalVariable(name: "timeout", arg: 1, scope: !18155, file: !2699, line: 183, type: !18158)
!18162 = !DILocalVariable(name: "ticks", scope: !18155, file: !2699, line: 185, type: !1927)
!18163 = !DILocalVariable(name: "__i", scope: !18164, file: !2699, line: 187, type: !17842)
!18164 = distinct !DILexicalBlock(scope: !18155, file: !2699, line: 187, column: 2)
!18165 = !DILocalVariable(name: "__key", scope: !18164, file: !2699, line: 187, type: !17842)
!18166 = !DILocation(line: 0, scope: !18155)
!18167 = !DILocation(line: 0, scope: !18164)
!18168 = !DILocation(line: 0, scope: !17864, inlinedAt: !18169)
!18169 = distinct !DILocation(line: 187, column: 2, scope: !18164)
!18170 = !DILocation(line: 55, column: 2, scope: !17873, inlinedAt: !18171)
!18171 = distinct !DILocation(line: 145, column: 10, scope: !17864, inlinedAt: !18169)
!18172 = !DILocation(line: 0, scope: !17873, inlinedAt: !18171)
!18173 = !DILocation(line: 188, column: 11, scope: !18174)
!18174 = distinct !DILexicalBlock(scope: !18175, file: !2699, line: 187, column: 24)
!18175 = distinct !DILexicalBlock(scope: !18164, file: !2699, line: 187, column: 2)
!18176 = !DILocation(line: 0, scope: !17932, inlinedAt: !18177)
!18177 = distinct !DILocation(line: 187, column: 2, scope: !18175)
!18178 = !DILocation(line: 0, scope: !17940, inlinedAt: !18179)
!18179 = distinct !DILocation(line: 215, column: 2, scope: !17932, inlinedAt: !18177)
!18180 = !DILocation(line: 95, column: 2, scope: !17940, inlinedAt: !18179)
!18181 = !DILocation(line: 191, column: 2, scope: !18155)
!18182 = distinct !DISubprogram(name: "timeout_rem", scope: !2699, file: !2699, line: 165, type: !18156, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18183)
!18183 = !{!18184, !18185, !18186}
!18184 = !DILocalVariable(name: "timeout", arg: 1, scope: !18182, file: !2699, line: 165, type: !18158)
!18185 = !DILocalVariable(name: "ticks", scope: !18182, file: !2699, line: 167, type: !1927)
!18186 = !DILocalVariable(name: "t", scope: !18187, file: !2699, line: 173, type: !2672)
!18187 = distinct !DILexicalBlock(scope: !18182, file: !2699, line: 173, column: 2)
!18188 = !DILocation(line: 0, scope: !18182)
!18189 = !DILocation(line: 169, column: 6, scope: !18190)
!18190 = distinct !DILexicalBlock(scope: !18182, file: !2699, line: 169, column: 6)
!18191 = !DILocation(line: 169, column: 6, scope: !18182)
!18192 = !DILocation(line: 173, column: 28, scope: !18187)
!18193 = !DILocation(line: 0, scope: !18187)
!18194 = !DILocation(line: 173, column: 39, scope: !18195)
!18195 = distinct !DILexicalBlock(scope: !18187, file: !2699, line: 173, column: 2)
!18196 = !DILocation(line: 173, column: 2, scope: !18187)
!18197 = !DILocation(line: 174, column: 15, scope: !18198)
!18198 = distinct !DILexicalBlock(scope: !18195, file: !2699, line: 173, column: 61)
!18199 = !DILocation(line: 174, column: 9, scope: !18198)
!18200 = !DILocation(line: 175, column: 15, scope: !18201)
!18201 = distinct !DILexicalBlock(scope: !18198, file: !2699, line: 175, column: 7)
!18202 = !DILocation(line: 175, column: 7, scope: !18198)
!18203 = !DILocation(line: 173, column: 52, scope: !18195)
!18204 = distinct !{!18204, !18196, !18205}
!18205 = !DILocation(line: 178, column: 2, scope: !18187)
!18206 = !DILocation(line: 180, column: 17, scope: !18182)
!18207 = !DILocation(line: 180, column: 15, scope: !18182)
!18208 = !DILocation(line: 180, column: 2, scope: !18182)
!18209 = !DILocation(line: 181, column: 1, scope: !18182)
!18210 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15522, file: !15522, line: 35, type: !18211, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18213)
!18211 = !DISubroutineType(types: !18212)
!18212 = !{!153, !18158}
!18213 = !{!18214}
!18214 = !DILocalVariable(name: "to", arg: 1, scope: !18210, file: !15522, line: 35, type: !18158)
!18215 = !DILocation(line: 0, scope: !18210)
!18216 = !DILocation(line: 37, column: 35, scope: !18210)
!18217 = !DILocation(line: 37, column: 10, scope: !18210)
!18218 = !DILocation(line: 37, column: 9, scope: !18210)
!18219 = !DILocation(line: 37, column: 2, scope: !18210)
!18220 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2699, file: !2699, line: 194, type: !18156, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18221)
!18221 = !{!18222, !18223, !18224, !18226}
!18222 = !DILocalVariable(name: "timeout", arg: 1, scope: !18220, file: !2699, line: 194, type: !18158)
!18223 = !DILocalVariable(name: "ticks", scope: !18220, file: !2699, line: 196, type: !1927)
!18224 = !DILocalVariable(name: "__i", scope: !18225, file: !2699, line: 198, type: !17842)
!18225 = distinct !DILexicalBlock(scope: !18220, file: !2699, line: 198, column: 2)
!18226 = !DILocalVariable(name: "__key", scope: !18225, file: !2699, line: 198, type: !17842)
!18227 = !DILocation(line: 0, scope: !18220)
!18228 = !DILocation(line: 0, scope: !18225)
!18229 = !DILocation(line: 0, scope: !17864, inlinedAt: !18230)
!18230 = distinct !DILocation(line: 198, column: 2, scope: !18225)
!18231 = !DILocation(line: 55, column: 2, scope: !17873, inlinedAt: !18232)
!18232 = distinct !DILocation(line: 145, column: 10, scope: !17864, inlinedAt: !18230)
!18233 = !DILocation(line: 0, scope: !17873, inlinedAt: !18232)
!18234 = !DILocation(line: 199, column: 11, scope: !18235)
!18235 = distinct !DILexicalBlock(scope: !18236, file: !2699, line: 198, column: 24)
!18236 = distinct !DILexicalBlock(scope: !18225, file: !2699, line: 198, column: 2)
!18237 = !DILocation(line: 199, column: 23, scope: !18235)
!18238 = !DILocation(line: 0, scope: !17932, inlinedAt: !18239)
!18239 = distinct !DILocation(line: 198, column: 2, scope: !18236)
!18240 = !DILocation(line: 0, scope: !17940, inlinedAt: !18241)
!18241 = distinct !DILocation(line: 215, column: 2, scope: !17932, inlinedAt: !18239)
!18242 = !DILocation(line: 95, column: 2, scope: !17940, inlinedAt: !18241)
!18243 = !DILocation(line: 199, column: 21, scope: !18235)
!18244 = !DILocation(line: 202, column: 2, scope: !18220)
!18245 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2699, file: !2699, line: 205, type: !17948, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18246)
!18246 = !{!18247, !18248, !18250}
!18247 = !DILocalVariable(name: "ret", scope: !18245, file: !2699, line: 207, type: !997)
!18248 = !DILocalVariable(name: "__i", scope: !18249, file: !2699, line: 209, type: !17842)
!18249 = distinct !DILexicalBlock(scope: !18245, file: !2699, line: 209, column: 2)
!18250 = !DILocalVariable(name: "__key", scope: !18249, file: !2699, line: 209, type: !17842)
!18251 = !DILocation(line: 0, scope: !18245)
!18252 = !DILocation(line: 0, scope: !18249)
!18253 = !DILocation(line: 0, scope: !17864, inlinedAt: !18254)
!18254 = distinct !DILocation(line: 209, column: 2, scope: !18249)
!18255 = !DILocation(line: 55, column: 2, scope: !17873, inlinedAt: !18256)
!18256 = distinct !DILocation(line: 145, column: 10, scope: !17864, inlinedAt: !18254)
!18257 = !DILocation(line: 0, scope: !17873, inlinedAt: !18256)
!18258 = !DILocation(line: 210, column: 9, scope: !18259)
!18259 = distinct !DILexicalBlock(scope: !18260, file: !2699, line: 209, column: 24)
!18260 = distinct !DILexicalBlock(scope: !18249, file: !2699, line: 209, column: 2)
!18261 = !DILocation(line: 0, scope: !17932, inlinedAt: !18262)
!18262 = distinct !DILocation(line: 209, column: 2, scope: !18260)
!18263 = !DILocation(line: 0, scope: !17940, inlinedAt: !18264)
!18264 = distinct !DILocation(line: 215, column: 2, scope: !17932, inlinedAt: !18262)
!18265 = !DILocation(line: 95, column: 2, scope: !17940, inlinedAt: !18264)
!18266 = !DILocation(line: 212, column: 2, scope: !18245)
!18267 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2699, file: !2699, line: 215, type: !12905, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18268)
!18268 = !{!18269, !18270, !18271, !18273, !18274, !18277, !18278}
!18269 = !DILocalVariable(name: "ticks", arg: 1, scope: !18267, file: !2699, line: 215, type: !997)
!18270 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18267, file: !2699, line: 215, type: !153)
!18271 = !DILocalVariable(name: "__i", scope: !18272, file: !2699, line: 217, type: !17842)
!18272 = distinct !DILexicalBlock(scope: !18267, file: !2699, line: 217, column: 2)
!18273 = !DILocalVariable(name: "__key", scope: !18272, file: !2699, line: 217, type: !17842)
!18274 = !DILocalVariable(name: "next_to", scope: !18275, file: !2699, line: 218, type: !125)
!18275 = distinct !DILexicalBlock(scope: !18276, file: !2699, line: 217, column: 24)
!18276 = distinct !DILexicalBlock(scope: !18272, file: !2699, line: 217, column: 2)
!18277 = !DILocalVariable(name: "sooner", scope: !18275, file: !2699, line: 219, type: !153)
!18278 = !DILocalVariable(name: "imminent", scope: !18275, file: !2699, line: 221, type: !153)
!18279 = !DILocation(line: 0, scope: !18267)
!18280 = !DILocation(line: 0, scope: !18272)
!18281 = !DILocation(line: 0, scope: !17864, inlinedAt: !18282)
!18282 = distinct !DILocation(line: 217, column: 2, scope: !18272)
!18283 = !DILocation(line: 55, column: 2, scope: !17873, inlinedAt: !18284)
!18284 = distinct !DILocation(line: 145, column: 10, scope: !17864, inlinedAt: !18282)
!18285 = !DILocation(line: 0, scope: !17873, inlinedAt: !18284)
!18286 = !DILocation(line: 218, column: 17, scope: !18275)
!18287 = !DILocation(line: 0, scope: !18275)
!18288 = !DILocation(line: 221, column: 27, scope: !18275)
!18289 = !DILocation(line: 233, column: 17, scope: !18290)
!18290 = distinct !DILexicalBlock(scope: !18275, file: !2699, line: 233, column: 7)
!18291 = !DILocation(line: 234, column: 26, scope: !18292)
!18292 = distinct !DILexicalBlock(scope: !18290, file: !2699, line: 233, column: 56)
!18293 = !DILocation(line: 234, column: 4, scope: !18292)
!18294 = !DILocation(line: 235, column: 3, scope: !18292)
!18295 = !DILocation(line: 0, scope: !17932, inlinedAt: !18296)
!18296 = distinct !DILocation(line: 217, column: 2, scope: !18276)
!18297 = !DILocation(line: 0, scope: !17940, inlinedAt: !18298)
!18298 = distinct !DILocation(line: 215, column: 2, scope: !17932, inlinedAt: !18296)
!18299 = !DILocation(line: 95, column: 2, scope: !17940, inlinedAt: !18298)
!18300 = !DILocation(line: 237, column: 1, scope: !18267)
!18301 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2699, file: !2699, line: 239, type: !18302, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18304)
!18302 = !DISubroutineType(types: !18303)
!18303 = !{null, !997}
!18304 = !{!18305, !18306, !18307, !18309}
!18305 = !DILocalVariable(name: "ticks", arg: 1, scope: !18301, file: !2699, line: 239, type: !997)
!18306 = !DILocalVariable(name: "key", scope: !18301, file: !2699, line: 245, type: !17842)
!18307 = !DILocalVariable(name: "t", scope: !18308, file: !2699, line: 262, type: !2672)
!18308 = distinct !DILexicalBlock(scope: !18301, file: !2699, line: 261, column: 67)
!18309 = !DILocalVariable(name: "dt", scope: !18308, file: !2699, line: 263, type: !125)
!18310 = !DILocation(line: 0, scope: !18301)
!18311 = !DILocation(line: 242, column: 2, scope: !18301)
!18312 = !DILocation(line: 0, scope: !17864, inlinedAt: !18313)
!18313 = distinct !DILocation(line: 245, column: 25, scope: !18301)
!18314 = !DILocation(line: 55, column: 2, scope: !17873, inlinedAt: !18315)
!18315 = distinct !DILocation(line: 145, column: 10, scope: !17864, inlinedAt: !18313)
!18316 = !DILocation(line: 0, scope: !17873, inlinedAt: !18315)
!18317 = !DILocation(line: 261, column: 9, scope: !18301)
!18318 = !DILocation(line: 261, column: 17, scope: !18301)
!18319 = !DILocation(line: 261, column: 25, scope: !18301)
!18320 = !DILocation(line: 261, column: 37, scope: !18301)
!18321 = !DILocation(line: 261, column: 47, scope: !18301)
!18322 = !DILocation(line: 261, column: 44, scope: !18301)
!18323 = !DILocation(line: 261, column: 2, scope: !18301)
!18324 = !DILocation(line: 0, scope: !18308)
!18325 = !DILocation(line: 263, column: 12, scope: !18308)
!18326 = !DILocation(line: 265, column: 16, scope: !18308)
!18327 = !DILocation(line: 265, column: 13, scope: !18308)
!18328 = !DILocation(line: 266, column: 13, scope: !18308)
!18329 = !DILocation(line: 267, column: 3, scope: !18308)
!18330 = !DILocation(line: 0, scope: !17932, inlinedAt: !18331)
!18331 = distinct !DILocation(line: 269, column: 3, scope: !18308)
!18332 = !DILocation(line: 0, scope: !17940, inlinedAt: !18333)
!18333 = distinct !DILocation(line: 215, column: 2, scope: !17932, inlinedAt: !18331)
!18334 = !DILocation(line: 95, column: 2, scope: !17940, inlinedAt: !18333)
!18335 = !DILocation(line: 270, column: 6, scope: !18308)
!18336 = !DILocation(line: 270, column: 3, scope: !18308)
!18337 = !DILocation(line: 0, scope: !17864, inlinedAt: !18338)
!18338 = distinct !DILocation(line: 271, column: 9, scope: !18308)
!18339 = !DILocation(line: 55, column: 2, scope: !17873, inlinedAt: !18340)
!18340 = distinct !DILocation(line: 145, column: 10, scope: !17864, inlinedAt: !18338)
!18341 = !DILocation(line: 0, scope: !17873, inlinedAt: !18340)
!18342 = !DILocation(line: 272, column: 22, scope: !18308)
!18343 = distinct !{!18343, !18323, !18344}
!18344 = !DILocation(line: 273, column: 2, scope: !18301)
!18345 = !DILocation(line: 276, column: 19, scope: !18346)
!18346 = distinct !DILexicalBlock(scope: !18347, file: !2699, line: 275, column: 23)
!18347 = distinct !DILexicalBlock(scope: !18301, file: !2699, line: 275, column: 6)
!18348 = !DILocation(line: 277, column: 2, scope: !18346)
!18349 = !DILocation(line: 279, column: 15, scope: !18301)
!18350 = !DILocation(line: 279, column: 12, scope: !18301)
!18351 = !DILocation(line: 280, column: 21, scope: !18301)
!18352 = !DILocation(line: 282, column: 24, scope: !18301)
!18353 = !DILocation(line: 282, column: 2, scope: !18301)
!18354 = !DILocation(line: 0, scope: !17932, inlinedAt: !18355)
!18355 = distinct !DILocation(line: 284, column: 2, scope: !18301)
!18356 = !DILocation(line: 0, scope: !17940, inlinedAt: !18357)
!18357 = distinct !DILocation(line: 215, column: 2, scope: !17932, inlinedAt: !18355)
!18358 = !DILocation(line: 95, column: 2, scope: !17940, inlinedAt: !18357)
!18359 = !DILocation(line: 285, column: 1, scope: !18301)
!18360 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2699, file: !2699, line: 287, type: !18361, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18363)
!18361 = !DISubroutineType(types: !18362)
!18362 = !{!611}
!18363 = !{!18364, !18365, !18367}
!18364 = !DILocalVariable(name: "t", scope: !18360, file: !2699, line: 289, type: !2536)
!18365 = !DILocalVariable(name: "__i", scope: !18366, file: !2699, line: 291, type: !17842)
!18366 = distinct !DILexicalBlock(scope: !18360, file: !2699, line: 291, column: 2)
!18367 = !DILocalVariable(name: "__key", scope: !18366, file: !2699, line: 291, type: !17842)
!18368 = !DILocation(line: 0, scope: !18360)
!18369 = !DILocation(line: 0, scope: !18366)
!18370 = !DILocation(line: 0, scope: !17864, inlinedAt: !18371)
!18371 = distinct !DILocation(line: 291, column: 2, scope: !18366)
!18372 = !DILocation(line: 55, column: 2, scope: !17873, inlinedAt: !18373)
!18373 = distinct !DILocation(line: 145, column: 10, scope: !17864, inlinedAt: !18371)
!18374 = !DILocation(line: 0, scope: !17873, inlinedAt: !18373)
!18375 = !DILocation(line: 292, column: 7, scope: !18376)
!18376 = distinct !DILexicalBlock(scope: !18377, file: !2699, line: 291, column: 24)
!18377 = distinct !DILexicalBlock(scope: !18366, file: !2699, line: 291, column: 2)
!18378 = !DILocation(line: 292, column: 19, scope: !18376)
!18379 = !DILocation(line: 0, scope: !17932, inlinedAt: !18380)
!18380 = distinct !DILocation(line: 291, column: 2, scope: !18377)
!18381 = !DILocation(line: 0, scope: !17940, inlinedAt: !18382)
!18382 = distinct !DILocation(line: 215, column: 2, scope: !17932, inlinedAt: !18380)
!18383 = !DILocation(line: 95, column: 2, scope: !17940, inlinedAt: !18382)
!18384 = !DILocation(line: 292, column: 17, scope: !18376)
!18385 = !DILocation(line: 294, column: 2, scope: !18360)
!18386 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2699, file: !2699, line: 297, type: !9251, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !652)
!18387 = !DILocation(line: 300, column: 19, scope: !18386)
!18388 = !DILocation(line: 300, column: 9, scope: !18386)
!18389 = !DILocation(line: 300, column: 2, scope: !18386)
!18390 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2699, file: !2699, line: 306, type: !18361, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !652)
!18391 = !DILocation(line: 308, column: 9, scope: !18390)
!18392 = !DILocation(line: 308, column: 2, scope: !18390)
!18393 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2699, file: !2699, line: 319, type: !6820, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18394)
!18394 = !{!18395, !18396, !18397, !18398}
!18395 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18393, file: !2699, line: 319, type: !208)
!18396 = !DILocalVariable(name: "start_cycles", scope: !18393, file: !2699, line: 328, type: !208)
!18397 = !DILocalVariable(name: "cycles_to_wait", scope: !18393, file: !2699, line: 331, type: !208)
!18398 = !DILocalVariable(name: "current_cycles", scope: !18399, file: !2699, line: 338, type: !208)
!18399 = distinct !DILexicalBlock(scope: !18400, file: !2699, line: 337, column: 11)
!18400 = distinct !DILexicalBlock(scope: !18401, file: !2699, line: 337, column: 2)
!18401 = distinct !DILexicalBlock(scope: !18393, file: !2699, line: 337, column: 2)
!18402 = !DILocation(line: 0, scope: !18393)
!18403 = !DILocation(line: 322, column: 19, scope: !18404)
!18404 = distinct !DILexicalBlock(scope: !18393, file: !2699, line: 322, column: 6)
!18405 = !DILocation(line: 322, column: 6, scope: !18393)
!18406 = !DILocation(line: 328, column: 26, scope: !18393)
!18407 = !DILocation(line: 333, column: 43, scope: !18393)
!18408 = !DILocation(line: 337, column: 2, scope: !18393)
!18409 = !DILocation(line: 338, column: 29, scope: !18399)
!18410 = !DILocation(line: 0, scope: !18399)
!18411 = !DILocation(line: 341, column: 23, scope: !18412)
!18412 = distinct !DILexicalBlock(scope: !18399, file: !2699, line: 341, column: 7)
!18413 = !DILocation(line: 341, column: 39, scope: !18412)
!18414 = !DILocation(line: 349, column: 1, scope: !18393)
!18415 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !637, file: !637, line: 1675, type: !9251, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !652)
!18416 = !DILocation(line: 1677, column: 9, scope: !18415)
!18417 = !DILocation(line: 1677, column: 2, scope: !18415)
!18418 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18419, file: !18419, line: 24, type: !9251, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !652)
!18419 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18420 = !DILocation(line: 26, column: 9, scope: !18418)
!18421 = !DILocation(line: 26, column: 2, scope: !18418)
!18422 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2699, file: !2699, line: 364, type: !18423, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2669, retainedNodes: !18425)
!18423 = !DISubroutineType(types: !18424)
!18424 = !{!2536, !17832}
!18425 = !{!18426, !18427}
!18426 = !DILocalVariable(name: "timeout", arg: 1, scope: !18422, file: !2699, line: 364, type: !17832)
!18427 = !DILocalVariable(name: "dt", scope: !18422, file: !2699, line: 366, type: !1927)
!18428 = !DILocation(line: 0, scope: !18422)
!18429 = !DILocation(line: 368, column: 6, scope: !18422)
!18430 = !DILocation(line: 371, column: 10, scope: !18431)
!18431 = distinct !DILexicalBlock(scope: !18432, file: !2699, line: 370, column: 47)
!18432 = distinct !DILexicalBlock(scope: !18433, file: !2699, line: 370, column: 13)
!18433 = distinct !DILexicalBlock(scope: !18422, file: !2699, line: 368, column: 6)
!18434 = !DILocation(line: 371, column: 3, scope: !18431)
!18435 = !DILocation(line: 376, column: 58, scope: !18436)
!18436 = distinct !DILexicalBlock(scope: !18437, file: !2699, line: 376, column: 7)
!18437 = distinct !DILexicalBlock(scope: !18432, file: !2699, line: 372, column: 9)
!18438 = !DILocation(line: 376, column: 7, scope: !18437)
!18439 = !DILocation(line: 376, column: 43, scope: !18436)
!18440 = !DILocation(line: 377, column: 4, scope: !18441)
!18441 = distinct !DILexicalBlock(scope: !18436, file: !2699, line: 376, column: 64)
!18442 = !DILocation(line: 379, column: 10, scope: !18437)
!18443 = !DILocation(line: 379, column: 33, scope: !18437)
!18444 = !DILocation(line: 379, column: 31, scope: !18437)
!18445 = !DILocation(line: 379, column: 3, scope: !18437)
!18446 = !DILocation(line: 0, scope: !18433)
!18447 = !DILocation(line: 381, column: 1, scope: !18422)
!18448 = distinct !DISubprogram(name: "boot_banner", scope: !18449, file: !18449, line: 26, type: !3274, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !652)
!18449 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18450 = !DILocation(line: 34, column: 2, scope: !18448)
!18451 = !DILocation(line: 36, column: 1, scope: !18448)
