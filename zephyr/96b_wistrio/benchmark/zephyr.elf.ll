; ModuleID = 'build/96b_wistrio/benchmark/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.zbus_observer = type { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.zbus_channel = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.external_data_msg = type { i8*, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.bm_msg = type { [256 x i8] }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232976 to i8*), void (i8*)* inttoptr (i32 134230893 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232976 to i8*), void (i8*)* inttoptr (i32 134230883 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232976 to i8*), void (i8*)* inttoptr (i32 134230873 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232976 to i8*), void (i8*)* inttoptr (i32 134230863 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232976 to i8*), void (i8*)* inttoptr (i32 134230853 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232976 to i8*), void (i8*)* inttoptr (i32 134230843 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232976 to i8*), void (i8*)* inttoptr (i32 134230833 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [50 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_producer_thread_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_bm_channel to i8*), i8* bitcast (%struct.zbus_channel* @bm_channel to i8*), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s1, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s2, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s3, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s4, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s5, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s6, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s7, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s8, i32 0, i32 0), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_mutex_bm_channel = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_bm_channel", align 4, !dbg !25
@_zbus_message_bm_channel = internal global %struct.external_data_msg zeroinitializer, align 4, !dbg !350
@_zbus_observers_bm_channel = internal constant [9 x %struct.zbus_observer*] [%struct.zbus_observer* @s1, %struct.zbus_observer* @s2, %struct.zbus_observer* @s3, %struct.zbus_observer* @s4, %struct.zbus_observer* @s5, %struct.zbus_observer* @s6, %struct.zbus_observer* @s7, %struct.zbus_observer* @s8, %struct.zbus_observer* null], align 4, !dbg !357
@bm_channel = dso_local constant %struct.zbus_channel { i16 8, i8* null, i8* bitcast (%struct.external_data_msg* @_zbus_message_bm_channel to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_bm_channel, %struct.zbus_observer** getelementptr inbounds ([9 x %struct.zbus_observer*], [9 x %struct.zbus_observer*]* @_zbus_observers_bm_channel, i32 0, i32 0) }, section "._zbus_channel.static.bm_channel", align 4, !dbg !112
@s1 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s1", align 4, !dbg !290
@s2 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s2", align 4, !dbg !292
@s3 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s3", align 4, !dbg !294
@s4 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s4", align 4, !dbg !296
@s5 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s5", align 4, !dbg !298
@s6 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s6", align 4, !dbg !300
@s7 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s7", align 4, !dbg !302
@s8 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s8", align 4, !dbg !304
@_k_thread_obj_producer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !348
@_k_thread_stack_producer_thread_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/benchmark.c\22.0", align 64, !dbg !343
@.str = private unnamed_addr constant [19 x i8] c"producer_thread_id\00", align 1
@_k_thread_data_producer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_producer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_producer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 5, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_producer_thread_id", align 4, !dbg !306
@producer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_producer_thread_id, align 4, !dbg !339
@count = internal unnamed_addr global i64 0, align 8, !dbg !362
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Benchmark 1 to %d: Dynamic memory, %sSYNC transmission and message size %u\0A\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"%c: Something wrong. Duration is zero!\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"%c: Bytes sent = %lld, received = %llu\0A\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"%c: Average data rate: %llu.%lluB/s\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"%c: Duration: %ums\0A\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"\0A@%u\0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !364
@.str.1.10 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !388
@.str.15 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !398
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !461
@.str.21 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.23 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.24 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.22 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.26 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.27 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.29 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.30 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.31 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.45 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.41 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.42 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.44 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.38 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.39 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.36 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.15.37 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.17 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.20 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.21.35 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.22 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.23 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.24 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.25 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.26 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.28.34 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !490
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !621
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !496
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !630
@.str.57 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.58 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !666
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i32 0, i32 0), %struct.z_heap_bucket { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.70, i32 0, i32 0), %struct.z_heap_bucket { i32 285933596 } }], align 4, !dbg !676
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !681
@.str.69 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.70 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !701
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@.str.72 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !809
@.str.1.74 = private unnamed_addr constant [60 x i8] c"%c: Observer %s at %p could not be notified. Error code %d\0A\00", align 1
@.str.2.75 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !821
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !973
@.str.82 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !943
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !926
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.82, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !899
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !915
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !945
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !958
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !960
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !962
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !964
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !966
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !968
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !978
@.str.84 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1003
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1080
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1069
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1121
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !994
@.str.95 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1187
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1431
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1409
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1395
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1345
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !992
@.str.1.98 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1433
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1413
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1411
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1360
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !990
@.str.2.99 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1446
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1417
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1415
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1369
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !988
@.str.3.100 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1448
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1421
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1419
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1378
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !986
@.str.4.101 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1450
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1425
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1423
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1384
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !984
@.str.5.102 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1452
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1429
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1427
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1393
@.str.106 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1454
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !998
@.str.1.107 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1614
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1669
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1610
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1671
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.107, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1595
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1597
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !996
@.str.2.112 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1677
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1612
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1687
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.112, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1606
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1608
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1658
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1661
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1663
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1666
@.str.3.109 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.4.115 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.5.117 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.6.118 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.84, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1053
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1679
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1681
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1683
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1685
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.7 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1694
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1803
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1805
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1801
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1772
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1807
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1343
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1358
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.99, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1367
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.100, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1376
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.101, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1382
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.102, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1391
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1894
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1918
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1921
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1925
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1929
@.str.152 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.156 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.157 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.158 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.162 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.163 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.164 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.165 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.166 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.161 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.160 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.162, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.163, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.164, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.165, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.166, i32 0, i32 0)], align 4
@.str.168 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.168, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1936
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2156
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2145
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2151
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2163
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2168
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.177 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.183, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.184, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.185, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.186, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.187, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.181, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.188, i32 0, i32 0)], align 4, !dbg !2196
@.str.182 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.183 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.184 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.185 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.186 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.187 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.181 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.188 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2308
@.str.8.180 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2321
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2429
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2537
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2540
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2542
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2161
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2153
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2544
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2580
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2578
@kheap__system_heap = dso_local global [1024 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2583
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @kheap__system_heap, i32 0, i32 0), i32 1024 }, %struct._wait_q_t zeroinitializer, %struct.k_spinlock zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2588
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2023
@.str.289 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2623
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3326 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3366, !srcloc !3367
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3368, !srcloc !3369
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3372, !srcloc !3373
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3374, !srcloc !3375
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3376, !srcloc !3377
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3378, !srcloc !3379
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3380, !srcloc !3381
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3382, !srcloc !3385
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3386, !srcloc !3387
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3388, !srcloc !3389
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3390, !srcloc !3391
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3392, !srcloc !3393
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3394, !srcloc !3395
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3396, !srcloc !3397
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3398, !srcloc !3399
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3400, !srcloc !3401
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3402, !srcloc !3403
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3404, !srcloc !3405
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3406, !srcloc !3407
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3408, !srcloc !3409
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3410, !srcloc !3411
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3412, !srcloc !3413
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3414, !srcloc !3415
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3416, !srcloc !3417
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3418, !srcloc !3419
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3420, !srcloc !3421
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3422, !srcloc !3423
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3424, !srcloc !3425
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3426, !srcloc !3427
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3428, !srcloc !3429
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3430, !srcloc !3431
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3432, !srcloc !3433
  ret void, !dbg !3434
}

; Function Attrs: noinline nounwind optsize
define internal void @s_cb(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3437 {
  %2 = alloca [256 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3439, metadata !DIExpression()), !dbg !3450
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3) #25, !dbg !3451
  call void @llvm.dbg.declare(metadata %struct.bm_msg* undef, metadata !3440, metadata !DIExpression()), !dbg !3452
  %4 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #26, !dbg !3453
  call void @llvm.dbg.value(metadata i8* %4, metadata !3447, metadata !DIExpression()), !dbg !3450
  %5 = bitcast i8* %4 to i8**, !dbg !3454
  %6 = load i8*, i8** %5, align 4, !dbg !3454
  %7 = call i8* @memcpy(i8* noundef nonnull %3, i8* noundef %6, i32 noundef 256) #27, !dbg !3455
  %8 = load i64, i64* @count, align 8, !dbg !3456
  %9 = add i64 %8, 256, !dbg !3456
  store i64 %9, i64* @count, align 8, !dbg !3456
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3) #25, !dbg !3457
  ret void, !dbg !3457
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #4 !dbg !3458 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3462, metadata !DIExpression()), !dbg !3463
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !3464
  %3 = load i8*, i8** %2, align 4, !dbg !3464
  ret i8* %3, !dbg !3465
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal void @producer_thread() #1 !dbg !3466 {
  %1 = alloca %struct.bm_msg, align 1
  %2 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3479
  %3 = zext i8 %2 to i32, !dbg !3479
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %3, i32 noundef 8, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i32 noundef 256) #27, !dbg !3479
  %4 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 0, !dbg !3484
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #25, !dbg !3484
  call void @llvm.dbg.declare(metadata %struct.bm_msg* %1, metadata !3468, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i64 255, metadata !3471, metadata !DIExpression()), !dbg !3486
  br label %10, !dbg !3487

5:                                                ; preds = %10
  %6 = tail call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #27, !dbg !3488
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3469, metadata !DIExpression()), !dbg !3489
  %7 = tail call i8* @k_malloc(i32 noundef 256) #27, !dbg !3490
  store i8* %7, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3491
  store i32 256, i32* getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 1), align 4, !dbg !3492
  %8 = tail call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #27, !dbg !3493
  %9 = tail call fastcc i32 @k_uptime_get_32() #26, !dbg !3494
  call void @llvm.dbg.value(metadata i32 %9, metadata !3473, metadata !DIExpression()), !dbg !3489
  call void @llvm.dbg.value(metadata i64 32768, metadata !3474, metadata !DIExpression()), !dbg !3495
  br label %21, !dbg !3496

10:                                               ; preds = %0, %10
  %11 = phi i64 [ 255, %0 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata i64 %11, metadata !3471, metadata !DIExpression()), !dbg !3486
  %12 = trunc i64 %11 to i8, !dbg !3497
  %13 = trunc i64 %11 to i32, !dbg !3500
  %14 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 %13, !dbg !3500
  store i8 %12, i8* %14, align 1, !dbg !3501
  %15 = add nsw i64 %11, -1, !dbg !3502
  call void @llvm.dbg.value(metadata i64 %15, metadata !3471, metadata !DIExpression()), !dbg !3486
  %16 = icmp eq i64 %15, 0, !dbg !3503
  br i1 %16, label %5, label %10, !dbg !3487, !llvm.loop !3504

17:                                               ; preds = %21
  %18 = call fastcc i32 @k_uptime_get_32() #26, !dbg !3506
  %19 = sub i32 %18, %9, !dbg !3507
  call void @llvm.dbg.value(metadata i32 %19, metadata !3476, metadata !DIExpression()), !dbg !3489
  %20 = icmp eq i32 %19, 0, !dbg !3508
  br i1 %20, label %32, label %35, !dbg !3510

21:                                               ; preds = %5, %21
  %22 = phi i64 [ 32768, %5 ], [ %30, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3474, metadata !DIExpression()), !dbg !3495
  %23 = call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #27, !dbg !3511
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3469, metadata !DIExpression()), !dbg !3489
  %24 = load i8*, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3514
  %25 = call i8* @memcpy(i8* noundef %24, i8* noundef nonnull %4, i32 noundef 256) #27, !dbg !3515
  %26 = call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #27, !dbg !3516
  %27 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #26, !dbg !3517
  %28 = insertvalue [1 x i64] poison, i64 %27, 0, !dbg !3518
  %29 = call i32 @zbus_chan_notify(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] %28) #27, !dbg !3518
  %30 = add nsw i64 %22, -256, !dbg !3519
  call void @llvm.dbg.value(metadata i64 %30, metadata !3474, metadata !DIExpression()), !dbg !3495
  %31 = icmp eq i64 %30, 0, !dbg !3520
  br i1 %31, label %17, label %21, !dbg !3496, !llvm.loop !3521

32:                                               ; preds = %17
  %33 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3523
  %34 = zext i8 %33 to i32, !dbg !3523
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i32 0, i32 0), i32 noundef %34) #27, !dbg !3523
  call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 3, i32 2) #25, !dbg !3529, !srcloc !3531
  br label %35, !dbg !3532

35:                                               ; preds = %32, %17
  %36 = zext i32 %19 to i64, !dbg !3533
  %37 = udiv i32 262144000, %19, !dbg !3534
  %38 = zext i32 %37 to i64, !dbg !3534
  call void @llvm.dbg.value(metadata i64 %38, metadata !3477, metadata !DIExpression()), !dbg !3489
  %39 = udiv i64 26214400000, %36, !dbg !3535
  %40 = urem i64 %39, 100, !dbg !3536
  call void @llvm.dbg.value(metadata i64 %40, metadata !3478, metadata !DIExpression()), !dbg !3489
  %41 = load i64, i64* @count, align 8, !dbg !3537
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0), i32 noundef %3, i64 noundef 262144, i64 noundef %41) #27, !dbg !3537
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i32 0, i32 0), i32 noundef %3, i64 noundef %38, i64 noundef %40) #27, !dbg !3542
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i32 0, i32 0), i32 noundef %3, i32 noundef %19) #27, !dbg !3547
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 noundef %19) #27, !dbg !3552
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #25, !dbg !3553
  ret void, !dbg !3553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3559, metadata !DIExpression()), !dbg !3560
  %2 = add i32 %0, -1, !dbg !3561
  %3 = icmp ult i32 %2, 3, !dbg !3561
  %4 = trunc i32 %2 to i24, !dbg !3561
  %5 = shl i24 %4, 3, !dbg !3561
  %6 = lshr i24 4806469, %5, !dbg !3561
  %7 = trunc i24 %6 to i8, !dbg !3561
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3561
  ret i8 %8, !dbg !3562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !3563 {
  %1 = tail call fastcc i64 @k_uptime_get() #26, !dbg !3566
  %2 = trunc i64 %1 to i32, !dbg !3567
  ret i32 %2, !dbg !3568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #5 !dbg !3569 {
  call void @llvm.dbg.value(metadata i64 200, metadata !3574, metadata !DIExpression()), !dbg !3575
  ret i64 2000, !dbg !3576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !3577 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #26, !dbg !3580
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #26, !dbg !3581
  ret i64 %2, !dbg !3582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !3583 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3585, !srcloc !3587
  %1 = tail call i64 @z_impl_k_uptime_ticks() #27, !dbg !3588
  ret i64 %1, !dbg !3589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !3590 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3592, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata i64 %0, metadata !3594, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata i32 10000, metadata !3599, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata i32 1000, metadata !3600, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata i8 1, metadata !3601, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata i8 0, metadata !3602, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata i1 false, metadata !3603, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3611
  call void @llvm.dbg.value(metadata i8 0, metadata !3604, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata i1 false, metadata !3605, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3611
  call void @llvm.dbg.value(metadata i1 true, metadata !3606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3611
  call void @llvm.dbg.value(metadata i64 0, metadata !3607, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata i64 0, metadata !3607, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !3594, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3611
  call void @llvm.dbg.value(metadata i64 %0, metadata !3594, metadata !DIExpression()), !dbg !3611
  %2 = udiv i64 %0, 10, !dbg !3613
  ret i64 %2, !dbg !3618
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3619 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3634, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %0, metadata !3630, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %1, metadata !3631, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %2, metadata !3632, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %3, metadata !3633, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %0, metadata !3635, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %0, metadata !3636, metadata !DIExpression()), !dbg !3697
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3698
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3698
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3639, metadata !DIExpression()), !dbg !3699
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3700
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3700
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3641, metadata !DIExpression()), !dbg !3701
  call void @llvm.dbg.value(metadata i32 0, metadata !3642, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 0, metadata !3643, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 0, metadata !3644, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 -1, metadata !3645, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 0, metadata !3648, metadata !DIExpression()), !dbg !3697
  %12 = and i32 %2, 4, !dbg !3702
  %13 = icmp eq i32 %12, 0, !dbg !3703
  call void @llvm.dbg.value(metadata i1 %13, metadata !3649, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3697
  %14 = lshr i32 %2, 3, !dbg !3704
  %15 = and i32 %14, 7, !dbg !3704
  %16 = add nuw nsw i32 %15, 1, !dbg !3705
  call void @llvm.dbg.value(metadata i32 %16, metadata !3650, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 0, metadata !3651, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %0, metadata !3652, metadata !DIExpression()), !dbg !3697
  %17 = ptrtoint i8* %0 to i32, !dbg !3706
  %18 = and i32 %17, 3, !dbg !3708
  %19 = icmp eq i32 %18, 0, !dbg !3708
  br i1 %19, label %20, label %316, !dbg !3709

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3710
  call void @llvm.dbg.value(metadata i8* %21, metadata !3636, metadata !DIExpression()), !dbg !3697
  %22 = icmp eq i8* %0, null, !dbg !3711
  %23 = and i32 %1, 7, !dbg !3713
  %24 = sub nuw nsw i32 8, %23, !dbg !3713
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3713
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3713
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3713
  call void @llvm.dbg.value(metadata i32 %27, metadata !3631, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %26, metadata !3636, metadata !DIExpression()), !dbg !3697
  br i1 %22, label %33, label %28, !dbg !3714

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3716
  %30 = sub i32 4, %17, !dbg !3716
  %31 = add i32 %30, %29, !dbg !3717
  %32 = icmp ugt i32 %31, %27, !dbg !3718
  br i1 %32, label %316, label %33, !dbg !3719

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3720
  call void @llvm.dbg.value(metadata i8* %34, metadata !3633, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %3, metadata !3647, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 4, metadata !3638, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 4, metadata !3637, metadata !DIExpression()), !dbg !3697
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3721

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3634, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %42, metadata !3633, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %43, metadata !3636, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %44, metadata !3637, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %45, metadata !3638, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %72, metadata !3645, metadata !DIExpression()), !dbg !3697
  br i1 %46, label %73, label %47, !dbg !3722

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3723
  %49 = zext i1 %48 to i32, !dbg !3727
  %50 = add nsw i32 %72, %49, !dbg !3727
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3727
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3727
  call void @llvm.dbg.value(metadata i32 %52, metadata !3637, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %51, metadata !3638, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 poison, metadata !3648, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %50, metadata !3645, metadata !DIExpression()), !dbg !3697
  br label %53, !dbg !3728

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3634, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %40, metadata !3633, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %58, metadata !3636, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %57, metadata !3637, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %56, metadata !3638, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 poison, metadata !3648, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %54, metadata !3645, metadata !DIExpression()), !dbg !3697
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3729
  call void @llvm.dbg.value(metadata i8* %60, metadata !3633, metadata !DIExpression()), !dbg !3697
  %61 = load i8, i8* %60, align 1, !dbg !3731
  %62 = icmp eq i8 %61, 0, !dbg !3732
  br i1 %62, label %223, label %63, !dbg !3733, !llvm.loop !3734

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !3722

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3737

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3648, metadata !DIExpression()), !dbg !3697
  %75 = add nsw i32 %72, -1, !dbg !3738
  call void @llvm.dbg.value(metadata i32 %75, metadata !3645, metadata !DIExpression()), !dbg !3697
  br label %53, !dbg !3739

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3740

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3638, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 4, metadata !3637, metadata !DIExpression()), !dbg !3697
  br label %53, !dbg !3741

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3638, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 4, metadata !3637, metadata !DIExpression()), !dbg !3697
  br label %53, !dbg !3742

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3743
  %81 = icmp eq i8 %80, 108, !dbg !3745
  br i1 %81, label %82, label %109, !dbg !3746

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3747
  %84 = load i8, i8* %83, align 1, !dbg !3747
  %85 = icmp eq i8 %84, 108, !dbg !3750
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3751
  %89 = add i32 %88, 7, !dbg !3751
  %90 = and i32 %89, -8, !dbg !3751
  %91 = inttoptr i32 %90 to i8*, !dbg !3751
  %92 = inttoptr i32 %90 to double*, !dbg !3751
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3751
  %94 = load double, double* %92, align 8, !dbg !3751
  call void @llvm.dbg.value(metadata i8* %93, metadata !3634, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 8, metadata !3637, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 8, metadata !3638, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata double %94, metadata !3665, metadata !DIExpression()), !dbg !3753
  %95 = ptrtoint i8* %43 to i32, !dbg !3754
  %96 = add i32 %95, 7, !dbg !3754
  %97 = and i32 %96, -8, !dbg !3754
  %98 = inttoptr i32 %97 to i8*, !dbg !3755
  call void @llvm.dbg.value(metadata i8* %98, metadata !3636, metadata !DIExpression()), !dbg !3697
  br i1 %22, label %104, label %99, !dbg !3756

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3757
  %101 = icmp ugt i32 %100, %194, !dbg !3761
  br i1 %101, label %316, label %102, !dbg !3762

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3763
  store double %94, double* %103, align 8, !dbg !3763
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3766
  call void @llvm.dbg.value(metadata i8* %105, metadata !3636, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 poison, metadata !3648, metadata !DIExpression()), !dbg !3697
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3648, metadata !DIExpression()), !dbg !3697
  br label %53, !dbg !3767

107:                                              ; preds = %73, %73
  br label %109, !dbg !3768

108:                                              ; preds = %73
  br label %109, !dbg !3768

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3697
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3697
  call void @llvm.dbg.value(metadata i32 %113, metadata !3637, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %112, metadata !3638, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 poison, metadata !3651, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 poison, metadata !3648, metadata !DIExpression()), !dbg !3697
  %114 = ptrtoint i8* %43 to i32, !dbg !3768
  %115 = add i32 %114, -1, !dbg !3768
  %116 = add i32 %115, %112, !dbg !3768
  %117 = sub i32 0, %112, !dbg !3768
  %118 = and i32 %116, %117, !dbg !3768
  %119 = inttoptr i32 %118 to i8*, !dbg !3769
  call void @llvm.dbg.value(metadata i8* %119, metadata !3636, metadata !DIExpression()), !dbg !3697
  br i1 %22, label %124, label %120, !dbg !3770

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3772
  %122 = add i32 %121, %118, !dbg !3773
  %123 = icmp ugt i32 %122, %194, !dbg !3774
  br i1 %123, label %316, label %124, !dbg !3775

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !3776

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3769
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3777
  call void @llvm.dbg.value(metadata i8* %127, metadata !3634, metadata !DIExpression()), !dbg !3697
  %128 = bitcast i8* %41 to i8**, !dbg !3777
  %129 = load i8*, i8** %128, align 4, !dbg !3777
  call void @llvm.dbg.value(metadata i8* %129, metadata !3647, metadata !DIExpression()), !dbg !3697
  br label %130, !dbg !3778

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !3779
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3780
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3697
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !3781
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3697
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3782
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3697
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3697
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3697
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3697
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !3783
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3634, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %142, metadata !3631, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %141, metadata !3633, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %140, metadata !3636, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %139, metadata !3637, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %138, metadata !3638, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %137, metadata !3642, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %136, metadata !3650, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %135, metadata !3643, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 poison, metadata !3648, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %133, metadata !3647, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %132, metadata !3645, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %131, metadata !3644, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.label(metadata !3696), !dbg !3785
  br i1 %22, label %146, label %144, !dbg !3786

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3787
  store i8* %133, i8** %145, align 4, !dbg !3790
  br label %146, !dbg !3791

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3792
  call void @llvm.dbg.value(metadata i32 %147, metadata !3650, metadata !DIExpression()), !dbg !3697
  %148 = icmp sgt i32 %136, 0, !dbg !3793
  br i1 %148, label %152, label %149, !dbg !3794

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !3795
  %151 = zext i1 %150 to i32, !dbg !3795
  br label %152, !dbg !3794

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3794
  %154 = icmp eq i32 %153, 0, !dbg !3794
  call void @llvm.dbg.value(metadata i1 %154, metadata !3674, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3796
  call void @llvm.dbg.value(metadata i1 %36, metadata !3677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3796
  %155 = or i1 %36, %154, !dbg !3797
  br i1 %155, label %156, label %190, !dbg !3797

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3798
  %158 = sub i32 %157, %17, !dbg !3798
  %159 = lshr i32 %158, 2, !dbg !3799
  call void @llvm.dbg.value(metadata i32 %159, metadata !3678, metadata !DIExpression()), !dbg !3800
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3801
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !3801
  br i1 %163, label %316, label %164, !dbg !3801

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !3803

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !3804
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3807
  store i8 %166, i8* %167, align 1, !dbg !3808
  %168 = trunc i32 %132 to i8, !dbg !3809
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3810
  store i8 %168, i8* %169, align 1, !dbg !3811
  br i1 %154, label %173, label %170, !dbg !3812

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !3813
  store i8 %171, i8* %167, align 1, !dbg !3813
  %172 = add i32 %131, 1, !dbg !3816
  call void @llvm.dbg.value(metadata i32 %172, metadata !3644, metadata !DIExpression()), !dbg !3697
  br label %185, !dbg !3817

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %174, metadata !3643, metadata !DIExpression()), !dbg !3697
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !3820

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !3821
  call void @llvm.dbg.value(metadata i32 %177, metadata !3631, metadata !DIExpression()), !dbg !3697
  br label %185, !dbg !3824

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !3825

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !3826
  call void @llvm.dbg.value(metadata i32 %180, metadata !3631, metadata !DIExpression()), !dbg !3697
  br label %185, !dbg !3829

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !3830
  %183 = add i32 %142, 2, !dbg !3832
  %184 = add i32 %183, %182, !dbg !3833
  call void @llvm.dbg.value(metadata i32 %184, metadata !3631, metadata !DIExpression()), !dbg !3697
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !3697
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !3697
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !3697
  call void @llvm.dbg.value(metadata i32 %188, metadata !3631, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %187, metadata !3643, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %186, metadata !3644, metadata !DIExpression()), !dbg !3697
  %189 = add nuw nsw i32 %137, 1, !dbg !3834
  call void @llvm.dbg.value(metadata i32 undef, metadata !3631, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 undef, metadata !3642, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 undef, metadata !3643, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 undef, metadata !3644, metadata !DIExpression()), !dbg !3697
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !3779
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !3781
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !3782
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !3783
  call void @llvm.dbg.value(metadata i32 %194, metadata !3631, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %193, metadata !3642, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %192, metadata !3643, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %191, metadata !3644, metadata !DIExpression()), !dbg !3697
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3835
  call void @llvm.dbg.value(metadata i8* %195, metadata !3636, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %143, metadata !3634, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %141, metadata !3633, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %139, metadata !3637, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %138, metadata !3638, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 poison, metadata !3651, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 poison, metadata !3648, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %132, metadata !3645, metadata !DIExpression()), !dbg !3697
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3729
  call void @llvm.dbg.value(metadata i8* %196, metadata !3633, metadata !DIExpression()), !dbg !3697
  %197 = load i8, i8* %196, align 1, !dbg !3731
  %198 = icmp eq i8 %197, 0, !dbg !3732
  br i1 %198, label %223, label %63, !dbg !3733

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !3836

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3837
  call void @llvm.dbg.value(metadata i8* %201, metadata !3634, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 undef, metadata !3681, metadata !DIExpression()), !dbg !3838
  br i1 %22, label %216, label %202, !dbg !3839

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !3837
  %204 = load i32, i32* %203, align 4, !dbg !3837
  call void @llvm.dbg.value(metadata i32 %204, metadata !3681, metadata !DIExpression()), !dbg !3838
  %205 = inttoptr i32 %118 to i32*, !dbg !3840
  store i32 %204, i32* %205, align 4, !dbg !3843
  br label %216, !dbg !3844

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !3845
  %208 = add i32 %207, 7, !dbg !3845
  %209 = and i32 %208, -8, !dbg !3845
  %210 = inttoptr i32 %209 to i8*, !dbg !3845
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !3845
  call void @llvm.dbg.value(metadata i8* %211, metadata !3634, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i64 undef, metadata !3687, metadata !DIExpression()), !dbg !3846
  br i1 %22, label %216, label %212, !dbg !3847

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !3845
  %214 = load i64, i64* %213, align 8, !dbg !3845
  call void @llvm.dbg.value(metadata i64 %214, metadata !3687, metadata !DIExpression()), !dbg !3846
  %215 = inttoptr i32 %118 to i64*, !dbg !3848
  store i64 %214, i64* %215, align 8, !dbg !3853
  br label %216, !dbg !3854

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !3855
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !3855
  call void @llvm.dbg.value(metadata i8* %218, metadata !3634, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %40, metadata !3633, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %219, metadata !3636, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %113, metadata !3637, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %112, metadata !3638, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 poison, metadata !3651, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8 poison, metadata !3648, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %72, metadata !3645, metadata !DIExpression()), !dbg !3697
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3729
  call void @llvm.dbg.value(metadata i8* %220, metadata !3633, metadata !DIExpression()), !dbg !3697
  %221 = load i8, i8* %220, align 1, !dbg !3731
  %222 = icmp eq i8 %221, 0, !dbg !3732
  br i1 %222, label %223, label %38, !dbg !3733

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !3856
  %225 = ptrtoint i8* %224 to i32, !dbg !3857
  %226 = sub i32 %225, %17, !dbg !3857
  %227 = lshr i32 %226, 2, !dbg !3859
  %228 = icmp ugt i32 %226, 1023, !dbg !3860
  br i1 %228, label %316, label %229, !dbg !3861

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !3862

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !3863
  %232 = add i32 %231, %226, !dbg !3866
  br label %316, !dbg !3867

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !3868
  store i8 %234, i8* %0, align 1, !dbg !3869
  %235 = trunc i32 %192 to i8, !dbg !3870
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3872
  store i8 %236, i8* %238, align 1, !dbg !3874
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3875
  store i8 %237, i8* %239, align 1, !dbg !3876
  %240 = trunc i32 %191 to i8, !dbg !3877
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3878
  store i8 %240, i8* %241, align 1, !dbg !3879
  %242 = icmp eq i32 %191, 0, !dbg !3880
  %243 = xor i1 %242, true, !dbg !3881
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !3881
  call void @llvm.dbg.value(metadata i8* %224, metadata !3636, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 0, metadata !3646, metadata !DIExpression()), !dbg !3697
  br i1 %245, label %246, label %265, !dbg !3881

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !3882

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !3636, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %250, metadata !3646, metadata !DIExpression()), !dbg !3697
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !3883
  %252 = load i8, i8* %251, align 1, !dbg !3883
  %253 = icmp sgt i8 %252, -1, !dbg !3885
  br i1 %253, label %261, label %254, !dbg !3886

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !3690, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3887
  %255 = ptrtoint i8* %249 to i32, !dbg !3888
  %256 = add i32 %247, %255, !dbg !3890
  %257 = icmp ugt i32 %256, %194, !dbg !3891
  br i1 %257, label %316, label %258, !dbg !3892

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !3893
  call void @llvm.dbg.value(metadata i8 %259, metadata !3690, metadata !DIExpression()), !dbg !3887
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !3894
  call void @llvm.dbg.value(metadata i8* %260, metadata !3636, metadata !DIExpression()), !dbg !3697
  store i8 %259, i8* %249, align 1, !dbg !3895
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !3835
  call void @llvm.dbg.value(metadata i8* %262, metadata !3636, metadata !DIExpression()), !dbg !3697
  %263 = add nuw i32 %250, 1, !dbg !3896
  call void @llvm.dbg.value(metadata i32 %263, metadata !3646, metadata !DIExpression()), !dbg !3697
  %264 = icmp eq i32 %263, %193, !dbg !3897
  br i1 %264, label %265, label %248, !dbg !3882, !llvm.loop !3898

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !3835
  call void @llvm.dbg.value(metadata i8* %266, metadata !3636, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 0, metadata !3646, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %133, metadata !3647, metadata !DIExpression()), !dbg !3697
  %267 = icmp eq i32 %193, 0, !dbg !3900
  br i1 %267, label %312, label %268, !dbg !3903

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !3903

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !3636, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %272, metadata !3647, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %273, metadata !3646, metadata !DIExpression()), !dbg !3697
  br i1 %242, label %278, label %274, !dbg !3904

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3907
  %276 = load i8, i8* %275, align 1, !dbg !3907
  %277 = icmp sgt i8 %276, -1, !dbg !3908
  br i1 %277, label %278, label %307, !dbg !3909

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !3910

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !3637, metadata !DIExpression()), !dbg !3697
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !3911
  %281 = load i8, i8* %280, align 1, !dbg !3911
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !3914
  call void @llvm.dbg.value(metadata i8* %282, metadata !3636, metadata !DIExpression()), !dbg !3697
  store i8 %281, i8* %271, align 1, !dbg !3915
  br label %293, !dbg !3916

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3917
  %285 = load i8, i8* %284, align 1, !dbg !3917
  %286 = zext i8 %285 to i32, !dbg !3917
  %287 = shl nuw nsw i32 %286, 2, !dbg !3919
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !3920
  %289 = bitcast i8* %288 to i8**, !dbg !3921
  %290 = load i8*, i8** %289, align 4, !dbg !3921
  call void @llvm.dbg.value(metadata i8* %290, metadata !3647, metadata !DIExpression()), !dbg !3697
  store i8* null, i8** %289, align 4, !dbg !3922
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !3923
  %292 = add i32 %291, 1, !dbg !3924
  call void @llvm.dbg.value(metadata i32 %292, metadata !3637, metadata !DIExpression()), !dbg !3697
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !3697
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !3925
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !3697
  call void @llvm.dbg.value(metadata i8* %296, metadata !3636, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %295, metadata !3637, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %294, metadata !3647, metadata !DIExpression()), !dbg !3697
  %297 = ptrtoint i8* %296 to i32, !dbg !3926
  %298 = add i32 %269, %295, !dbg !3928
  %299 = add i32 %298, %297, !dbg !3929
  %300 = icmp ugt i32 %299, %194, !dbg !3930
  br i1 %300, label %316, label %301, !dbg !3931

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3932
  %303 = load i8, i8* %302, align 1, !dbg !3932
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !3933
  call void @llvm.dbg.value(metadata i8* %304, metadata !3636, metadata !DIExpression()), !dbg !3697
  store i8 %303, i8* %296, align 1, !dbg !3934
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !3935
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !3936
  call void @llvm.dbg.value(metadata i8* %306, metadata !3636, metadata !DIExpression()), !dbg !3697
  br label %307, !dbg !3937

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !3938
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !3697
  call void @llvm.dbg.value(metadata i8* %309, metadata !3636, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %308, metadata !3647, metadata !DIExpression()), !dbg !3697
  %310 = add nuw i32 %273, 1, !dbg !3939
  call void @llvm.dbg.value(metadata i32 %310, metadata !3646, metadata !DIExpression()), !dbg !3697
  %311 = icmp eq i32 %310, %193, !dbg !3900
  br i1 %311, label %312, label %270, !dbg !3903, !llvm.loop !3940

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !3835
  %314 = ptrtoint i8* %313 to i32, !dbg !3942
  %315 = sub i32 %314, %17, !dbg !3942
  br label %316, !dbg !3943

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !3697
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3944
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3944
  ret i32 %317, !dbg !3944
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !3945 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3949, metadata !DIExpression()), !dbg !3950
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !3951
  ret i1 %2, !dbg !3952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !3953 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3958, metadata !DIExpression()), !dbg !3959
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3960
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3961
  %4 = and i1 %2, %3, !dbg !3961
  ret i1 %4, !dbg !3962
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3963 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3967, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i32 %1, metadata !3968, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i32 %2, metadata !3969, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i8* %3, metadata !3970, metadata !DIExpression()), !dbg !3973
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3974
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !3974
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3971, metadata !DIExpression()), !dbg !3975
  call void @llvm.va_start(i8* nonnull %6), !dbg !3976
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3977
  %8 = load i32, i32* %7, align 4, !dbg !3977
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3977
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !3977
  call void @llvm.dbg.value(metadata i32 %10, metadata !3972, metadata !DIExpression()), !dbg !3973
  call void @llvm.va_end(i8* nonnull %6), !dbg !3978
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !3979
  ret i32 %10, !dbg !3980
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3981 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3993, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3994, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i8* %2, metadata !3995, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i8* %3, metadata !3996, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i8* %3, metadata !3997, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i8* %3, metadata !3998, metadata !DIExpression()), !dbg !4012
  %5 = icmp eq i8* %3, null, !dbg !4013
  br i1 %5, label %45, label %6, !dbg !4015

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4007, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4012
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4016
  %8 = load i8, i8* %7, align 1, !dbg !4016
  %9 = zext i8 %8 to i32, !dbg !4017
  call void @llvm.dbg.value(metadata i32 %9, metadata !4008, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i8 undef, metadata !4009, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4012
  call void @llvm.dbg.value(metadata i8 undef, metadata !4010, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4012
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4012
  call void @llvm.dbg.value(metadata i32 0, metadata !4006, metadata !DIExpression()), !dbg !4012
  %10 = icmp eq i8 %8, 0, !dbg !4018
  br i1 %10, label %39, label %11, !dbg !4021

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4022
  call void @llvm.dbg.value(metadata i8 %12, metadata !4007, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4012
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4012
  %13 = zext i8 %12 to i32, !dbg !4023
  call void @llvm.dbg.value(metadata i32 %13, metadata !4007, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4012
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4012
  %14 = shl nuw nsw i32 %13, 2, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %14, metadata !4007, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4012
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4025
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4012
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4026
  %17 = load i8, i8* %16, align 1, !dbg !4026
  call void @llvm.dbg.value(metadata i8 %17, metadata !4009, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4012
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4012
  %18 = zext i8 %17 to i32, !dbg !4027
  call void @llvm.dbg.value(metadata i32 %18, metadata !4009, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4012
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4028
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4012
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4029
  %21 = load i8, i8* %20, align 1, !dbg !4029
  call void @llvm.dbg.value(metadata i8 %21, metadata !4010, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4012
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4012
  %22 = zext i8 %21 to i32, !dbg !4030
  call void @llvm.dbg.value(metadata i32 %22, metadata !4010, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4012
  %23 = shl nuw nsw i32 %22, 1, !dbg !4031
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4012
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4032
  call void @llvm.dbg.value(metadata i8* %24, metadata !4004, metadata !DIExpression()), !dbg !4012
  br label %25, !dbg !4021

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4004, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i32 %27, metadata !4006, metadata !DIExpression()), !dbg !4012
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4033
  call void @llvm.dbg.value(metadata i8* %28, metadata !4004, metadata !DIExpression()), !dbg !4012
  %29 = load i8, i8* %26, align 1, !dbg !4035
  %30 = zext i8 %29 to i32, !dbg !4035
  call void @llvm.dbg.value(metadata i32 %30, metadata !4011, metadata !DIExpression()), !dbg !4012
  %31 = shl nuw nsw i32 %30, 2, !dbg !4036
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4037
  %33 = bitcast i8* %32 to i8**, !dbg !4038
  call void @llvm.dbg.value(metadata i8** %33, metadata !4005, metadata !DIExpression()), !dbg !4012
  store i8* %28, i8** %33, align 4, !dbg !4039
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4040
  %35 = add i32 %34, 1, !dbg !4041
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4042
  call void @llvm.dbg.value(metadata i8* %36, metadata !4004, metadata !DIExpression()), !dbg !4012
  %37 = add nuw nsw i32 %27, 1, !dbg !4043
  call void @llvm.dbg.value(metadata i32 %37, metadata !4006, metadata !DIExpression()), !dbg !4012
  %38 = icmp eq i32 %37, %9, !dbg !4018
  br i1 %38, label %39, label %25, !dbg !4021, !llvm.loop !4044

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4046
  call void @llvm.dbg.value(metadata i8* %40, metadata !3997, metadata !DIExpression()), !dbg !4012
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4047
  %42 = bitcast i8* %41 to i8**, !dbg !4047
  %43 = load i8*, i8** %42, align 1, !dbg !4047
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4048
  br label %45, !dbg !4049

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4012
  ret i32 %46, !dbg !4050
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4051 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4055, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4056, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.value(metadata i8* %2, metadata !4057, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.value(metadata i8* %3, metadata !4058, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.value(metadata i8* %4, metadata !4059, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.value(metadata i8* %4, metadata !4060, metadata !DIExpression()), !dbg !4065
  %6 = ptrtoint i8* %4 to i32, !dbg !4066
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4066
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4066
  ret i32 %8, !dbg !4067
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !4068 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4072, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i32 %1, metadata !4073, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i8 0, metadata !4075, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i32 0, metadata !4076, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i8 poison, metadata !4075, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i8* %0, metadata !4072, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4077
  %3 = load i8, i8* %0, align 1, !dbg !4078
  call void @llvm.dbg.value(metadata i8 %3, metadata !4074, metadata !DIExpression()), !dbg !4077
  %4 = icmp eq i8 %3, 0, !dbg !4079
  br i1 %4, label %29, label %5, !dbg !4080

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4081
  call void @llvm.dbg.value(metadata i32 %8, metadata !4076, metadata !DIExpression()), !dbg !4077
  br i1 %9, label %11, label %22, !dbg !4082

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4084
  br i1 %12, label %13, label %17, !dbg !4088

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4089
  br i1 %14, label %29, label %15, !dbg !4092

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4093
  br i1 %16, label %29, label %22, !dbg !4095

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4096
  %19 = xor i1 %18, true, !dbg !4098
  %20 = zext i1 %18 to i32, !dbg !4098
  %21 = add nsw i32 %8, %20, !dbg !4098
  br label %22, !dbg !4098

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4077
  call void @llvm.dbg.value(metadata i32 %24, metadata !4076, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i8 poison, metadata !4075, metadata !DIExpression()), !dbg !4077
  %25 = icmp eq i8 %6, 37, !dbg !4099
  %26 = xor i1 %25, %23, !dbg !4101
  call void @llvm.dbg.value(metadata i8* %10, metadata !4072, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i8* %10, metadata !4072, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4077
  %27 = load i8, i8* %10, align 1, !dbg !4078
  call void @llvm.dbg.value(metadata i8 %27, metadata !4074, metadata !DIExpression()), !dbg !4077
  %28 = icmp eq i8 %27, 0, !dbg !4079
  br i1 %28, label %29, label %5, !dbg !4080, !llvm.loop !4102

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4077
  ret i1 %30, !dbg !4104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4105 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4109, metadata !DIExpression()), !dbg !4110
  %2 = add i8 %0, -64, !dbg !4111
  %3 = icmp ult i8 %2, 59, !dbg !4111
  ret i1 %3, !dbg !4112
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4113 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4121, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %1, metadata !4122, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4123, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %3, metadata !4124, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %4, metadata !4125, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i16* %5, metadata !4126, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %6, metadata !4127, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %0, metadata !4128, metadata !DIExpression()), !dbg !4190
  %11 = bitcast i8* %0 to i32*, !dbg !4191
  call void @llvm.dbg.value(metadata i32* %11, metadata !4129, metadata !DIExpression()), !dbg !4190
  %12 = and i32 %4, 8, !dbg !4192
  %13 = icmp eq i32 %12, 0, !dbg !4193
  call void @llvm.dbg.value(metadata i1 %13, metadata !4133, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %0, metadata !4136, metadata !DIExpression()), !dbg !4190
  %14 = icmp eq i32 %1, 0, !dbg !4194
  br i1 %14, label %15, label %17, !dbg !4195

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4196
  br label %17, !dbg !4195

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4195
  call void @llvm.dbg.value(metadata i32 %18, metadata !4122, metadata !DIExpression()), !dbg !4190
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4197
  %20 = load i8, i8* %19, align 1, !dbg !4197
  %21 = zext i8 %20 to i32, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %21, metadata !4131, metadata !DIExpression()), !dbg !4190
  %22 = icmp ne i8 %20, 0, !dbg !4199
  %23 = and i32 %4, 1, !dbg !4200
  %24 = icmp ne i32 %23, 0, !dbg !4200
  %25 = and i1 %24, %22, !dbg !4200
  call void @llvm.dbg.value(metadata i1 %25, metadata !4135, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4190
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4201
  %27 = load i8, i8* %26, align 1, !dbg !4201
  %28 = zext i8 %27 to i32, !dbg !4202
  call void @llvm.dbg.value(metadata i32 %28, metadata !4132, metadata !DIExpression()), !dbg !4190
  %29 = icmp ne i8 %27, 0, !dbg !4203
  %30 = and i32 %4, 2, !dbg !4204
  %31 = icmp ne i32 %30, 0, !dbg !4204
  %32 = and i1 %31, %29, !dbg !4204
  call void @llvm.dbg.value(metadata i1 %32, metadata !4134, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4190
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4205
  br i1 %33, label %38, label %34, !dbg !4205

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4207
  br i1 %35, label %267, label %36, !dbg !4210

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4211
  br label %267, !dbg !4213

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4214
  %40 = zext i8 %39 to i32, !dbg !4215
  %41 = shl nuw nsw i32 %40, 2, !dbg !4216
  call void @llvm.dbg.value(metadata i32 %41, metadata !4130, metadata !DIExpression()), !dbg !4190
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4217
  %43 = bitcast i8* %42 to i8**, !dbg !4218
  %44 = load i8*, i8** %43, align 4, !dbg !4218
  call void @llvm.dbg.value(metadata i8* %44, metadata !4139, metadata !DIExpression()), !dbg !4190
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4219
  call void @llvm.dbg.value(metadata i8* %45, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 0, metadata !4141, metadata !DIExpression()), !dbg !4190
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4220
  br i1 %46, label %47, label %132, !dbg !4221

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4138, metadata !DIExpression()), !dbg !4190
  br i1 %25, label %48, label %73, !dbg !4222

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4138, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %45, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 0, metadata !4141, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 0, metadata !4142, metadata !DIExpression()), !dbg !4223
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4224

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4138, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %52, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %53, metadata !4141, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %54, metadata !4142, metadata !DIExpression()), !dbg !4223
  %55 = load i8, i8* %52, align 1, !dbg !4225
  %56 = zext i8 %55 to i32, !dbg !4226
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4226
  %58 = bitcast i32* %57 to i8**, !dbg !4227
  %59 = load i8*, i8** %58, align 4, !dbg !4227
  call void @llvm.dbg.value(metadata i8* %59, metadata !4148, metadata !DIExpression()), !dbg !4228
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4229
  call void @llvm.dbg.value(metadata i32 %60, metadata !4151, metadata !DIExpression()), !dbg !4228
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4230
  br i1 %62, label %63, label %67, !dbg !4230

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4232
  %65 = add nuw i32 %53, 1, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %65, metadata !4141, metadata !DIExpression()), !dbg !4190
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4235
  store i16 %64, i16* %66, align 2, !dbg !4236
  br label %67, !dbg !4237

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4190
  call void @llvm.dbg.value(metadata i32 %68, metadata !4141, metadata !DIExpression()), !dbg !4190
  %69 = add nsw i32 %60, %51, !dbg !4238
  call void @llvm.dbg.value(metadata i32 %69, metadata !4138, metadata !DIExpression()), !dbg !4190
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4239
  call void @llvm.dbg.value(metadata i8* %70, metadata !4140, metadata !DIExpression()), !dbg !4190
  %71 = add nuw nsw i32 %54, 1, !dbg !4240
  call void @llvm.dbg.value(metadata i32 %71, metadata !4142, metadata !DIExpression()), !dbg !4223
  %72 = icmp eq i32 %71, %21, !dbg !4241
  br i1 %72, label %79, label %50, !dbg !4224, !llvm.loop !4242

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4244
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4244
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4244
  br label %79, !dbg !4244

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4247
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4190
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4248
  call void @llvm.dbg.value(metadata i1 undef, metadata !4152, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4249
  call void @llvm.dbg.value(metadata i32 0, metadata !4153, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata i32 %82, metadata !4138, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %81, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %80, metadata !4141, metadata !DIExpression()), !dbg !4190
  %83 = icmp eq i8 %27, 0, !dbg !4251
  br i1 %83, label %267, label %84, !dbg !4252

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4253
  %86 = icmp eq i32 %85, 0, !dbg !4254
  call void @llvm.dbg.value(metadata i1 %86, metadata !4152, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4249
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4252

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4138, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8* %93, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %94, metadata !4141, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %95, metadata !4153, metadata !DIExpression()), !dbg !4250
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4255
  call void @llvm.dbg.value(metadata i8* %96, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 undef, metadata !4155, metadata !DIExpression()), !dbg !4256
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4257
  call void @llvm.dbg.value(metadata i8* %97, metadata !4140, metadata !DIExpression()), !dbg !4190
  %98 = load i8, i8* %96, align 1, !dbg !4258
  call void @llvm.dbg.value(metadata i8 %98, metadata !4158, metadata !DIExpression()), !dbg !4256
  %99 = zext i8 %98 to i32, !dbg !4259
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4259
  %101 = bitcast i32* %100 to i8**, !dbg !4260
  %102 = load i8*, i8** %101, align 4, !dbg !4260
  call void @llvm.dbg.value(metadata i8* %102, metadata !4159, metadata !DIExpression()), !dbg !4256
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4261
  call void @llvm.dbg.value(metadata i1 %103, metadata !4160, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4256
  br i1 %13, label %110, label %104, !dbg !4262

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4264
  call void @llvm.dbg.value(metadata i8 %105, metadata !4155, metadata !DIExpression()), !dbg !4256
  %106 = zext i8 %105 to i32, !dbg !4265
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !4266
  br i1 %107, label %108, label %110, !dbg !4267

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !4268
  %109 = add nsw i32 %92, -2, !dbg !4274
  call void @llvm.dbg.value(metadata i32 %109, metadata !4138, metadata !DIExpression()), !dbg !4190
  br label %127, !dbg !4275

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4276

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4277

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4279
  call void @llvm.dbg.value(metadata i32 %113, metadata !4138, metadata !DIExpression()), !dbg !4190
  br label %127, !dbg !4282

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4283

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4186), !dbg !4284
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %116, metadata !4161, metadata !DIExpression()), !dbg !4256
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4286
  br i1 %118, label %119, label %123, !dbg !4286

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4288
  %121 = add nuw i32 %94, 1, !dbg !4290
  call void @llvm.dbg.value(metadata i32 %121, metadata !4141, metadata !DIExpression()), !dbg !4190
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4291
  store i16 %120, i16* %122, align 2, !dbg !4292
  br label %123, !dbg !4293

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4190
  call void @llvm.dbg.value(metadata i32 %124, metadata !4141, metadata !DIExpression()), !dbg !4190
  %125 = add i32 %92, -1, !dbg !4294
  %126 = add i32 %125, %116, !dbg !4295
  call void @llvm.dbg.value(metadata i32 %126, metadata !4138, metadata !DIExpression()), !dbg !4190
  br label %127, !dbg !4296

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4190
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4256
  call void @llvm.dbg.value(metadata i32 %129, metadata !4138, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %128, metadata !4141, metadata !DIExpression()), !dbg !4190
  %130 = add nuw nsw i32 %95, 1, !dbg !4297
  call void @llvm.dbg.value(metadata i8* %97, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %130, metadata !4153, metadata !DIExpression()), !dbg !4250
  %131 = icmp eq i32 %130, %28, !dbg !4251
  br i1 %131, label %267, label %91, !dbg !4252, !llvm.loop !4298

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4163, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4164, metadata !DIExpression()), !dbg !4301
  br i1 %25, label %133, label %135, !dbg !4302

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4165, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 0, metadata !4166, metadata !DIExpression()), !dbg !4190
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4303
  call void @llvm.dbg.value(metadata i8* %134, metadata !4167, metadata !DIExpression()), !dbg !4190
  br label %140, !dbg !4306

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4307
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4307

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4167, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 undef, metadata !4166, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 0, metadata !4165, metadata !DIExpression()), !dbg !4190
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !4309
  br label %145, !dbg !4312

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %148, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 0, metadata !4169, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i8 %146, metadata !4166, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 %147, metadata !4165, metadata !DIExpression()), !dbg !4190
  %149 = icmp eq i8 %27, 0, !dbg !4315
  br i1 %149, label %150, label %152, !dbg !4316

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4317
  br label %157, !dbg !4316

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4316

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4317
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4318
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4319
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4190
  call void @llvm.dbg.value(metadata i8 undef, metadata !4162, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4190
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4320
  %163 = load i8, i8* %162, align 1, !dbg !4320
  %164 = zext i8 %159 to i32, !dbg !4321
  %165 = add i8 %163, %159, !dbg !4322
  call void @llvm.dbg.value(metadata i8 %165, metadata !4162, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4190
  %166 = icmp eq i32 %30, 0, !dbg !4323
  %167 = lshr i8 %160, 1, !dbg !4324
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4324
  call void @llvm.dbg.value(metadata i8 %168, metadata !4162, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4190
  %169 = icmp eq i32 %23, 0, !dbg !4325
  %170 = icmp eq i32 %158, 0, !dbg !4317
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4317
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4317
  call void @llvm.dbg.value(metadata i8 %172, metadata !4162, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4190
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4177, metadata !DIExpression()), !dbg !4326
  %173 = load i32, i32* %11, align 1, !dbg !4327
  store i8 %165, i8* %162, align 1, !dbg !4328
  store i8 %172, i8* %19, align 1, !dbg !4328
  store i8 %168, i8* %26, align 1, !dbg !4328
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !4329
  call void @llvm.dbg.value(metadata i32 %174, metadata !4168, metadata !DIExpression()), !dbg !4190
  %175 = icmp slt i32 %174, 0, !dbg !4330
  br i1 %175, label %267, label %220, !dbg !4332

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %178, metadata !4169, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i8 %179, metadata !4166, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 %180, metadata !4165, metadata !DIExpression()), !dbg !4190
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4333
  call void @llvm.dbg.value(metadata i8* %181, metadata !4140, metadata !DIExpression()), !dbg !4190
  %182 = load i8, i8* %177, align 1, !dbg !4334
  call void @llvm.dbg.value(metadata i8 %182, metadata !4171, metadata !DIExpression()), !dbg !4335
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4336
  call void @llvm.dbg.value(metadata i8* %183, metadata !4140, metadata !DIExpression()), !dbg !4190
  %184 = load i8, i8* %181, align 1, !dbg !4337
  call void @llvm.dbg.value(metadata i8 %184, metadata !4174, metadata !DIExpression()), !dbg !4335
  %185 = zext i8 %184 to i32, !dbg !4338
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4338
  %187 = bitcast i32* %186 to i8**, !dbg !4339
  %188 = load i8*, i8** %187, align 4, !dbg !4339
  call void @llvm.dbg.value(metadata i8* %188, metadata !4175, metadata !DIExpression()), !dbg !4335
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !4340
  call void @llvm.dbg.value(metadata i1 %189, metadata !4176, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4335
  br i1 %13, label %193, label %190, !dbg !4341

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4343
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !4344
  br i1 %192, label %215, label %193, !dbg !4345

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4346

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4347

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4350
  call void @llvm.dbg.value(metadata i8 %196, metadata !4165, metadata !DIExpression()), !dbg !4190
  br label %208, !dbg !4353

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4354

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4355
  call void @llvm.dbg.value(metadata i8 %199, metadata !4166, metadata !DIExpression()), !dbg !4190
  br label %208, !dbg !4358

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4359

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4361
  call void @llvm.dbg.value(metadata i8 %202, metadata !4165, metadata !DIExpression()), !dbg !4190
  br label %208, !dbg !4364

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4365
  call void @llvm.dbg.value(metadata i8 %204, metadata !4166, metadata !DIExpression()), !dbg !4190
  %205 = zext i8 %179 to i32, !dbg !4367
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4367
  store i8 %182, i8* %206, align 1, !dbg !4368
  %207 = add i8 %179, 2, !dbg !4369
  call void @llvm.dbg.value(metadata i8 %207, metadata !4166, metadata !DIExpression()), !dbg !4190
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4370
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4370
  store i8 %184, i8* %214, align 1, !dbg !4370
  br label %215, !dbg !4371

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4190
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4319
  call void @llvm.dbg.value(metadata i8 %217, metadata !4166, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i8 %216, metadata !4165, metadata !DIExpression()), !dbg !4190
  %218 = add nuw nsw i32 %178, 1, !dbg !4371
  call void @llvm.dbg.value(metadata i8* %183, metadata !4140, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 %218, metadata !4169, metadata !DIExpression()), !dbg !4314
  %219 = icmp eq i32 %218, %28, !dbg !4315
  br i1 %219, label %157, label %176, !dbg !4316, !llvm.loop !4372

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4324
  call void @llvm.dbg.value(metadata i32 %174, metadata !4138, metadata !DIExpression()), !dbg !4190
  store i32 %173, i32* %11, align 1, !dbg !4374
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4375
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !4376
  call void @llvm.dbg.value(metadata i32 %223, metadata !4168, metadata !DIExpression()), !dbg !4190
  %224 = icmp slt i32 %223, 0, !dbg !4377
  br i1 %224, label %267, label %225, !dbg !4379

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4138, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4190
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4380
  %228 = add nuw nsw i32 %41, %21, !dbg !4380
  %229 = sub i32 %227, %228, !dbg !4380
  call void @llvm.dbg.value(metadata i32 %229, metadata !4178, metadata !DIExpression()), !dbg !4190
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !4381
  call void @llvm.dbg.value(metadata i32 %230, metadata !4168, metadata !DIExpression()), !dbg !4190
  %231 = icmp slt i32 %230, 0, !dbg !4382
  br i1 %231, label %267, label %232, !dbg !4384

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4385
  call void @llvm.dbg.value(metadata i32 %233, metadata !4138, metadata !DIExpression()), !dbg !4190
  %234 = add nuw nsw i32 %233, %230, !dbg !4386
  call void @llvm.dbg.value(metadata i32 %234, metadata !4138, metadata !DIExpression()), !dbg !4190
  call void @llvm.dbg.value(metadata i32 0, metadata !4179, metadata !DIExpression()), !dbg !4387
  %235 = icmp eq i8 %159, 0, !dbg !4388
  br i1 %235, label %264, label %236, !dbg !4389

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4389

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4179, metadata !DIExpression()), !dbg !4387
  call void @llvm.dbg.value(metadata i32 %240, metadata !4138, metadata !DIExpression()), !dbg !4190
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4390
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4391
  %242 = load i8, i8* %241, align 1, !dbg !4391
  call void @llvm.dbg.value(metadata i8 %242, metadata !4181, metadata !DIExpression()), !dbg !4392
  store i8 %242, i8* %10, align 1, !dbg !4393
  %243 = zext i8 %242 to i32, !dbg !4394
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4394
  %245 = bitcast i32* %244 to i8**, !dbg !4395
  %246 = load i8*, i8** %245, align 4, !dbg !4395
  call void @llvm.dbg.value(metadata i8* %246, metadata !4184, metadata !DIExpression()), !dbg !4392
  br i1 %237, label %250, label %247, !dbg !4396

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4397
  %249 = load i16, i16* %248, align 2, !dbg !4397
  br label %250, !dbg !4396

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4396
  call void @llvm.dbg.value(metadata i32 undef, metadata !4185, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4392
  call void @llvm.dbg.value(metadata i8* %10, metadata !4181, metadata !DIExpression(DW_OP_deref)), !dbg !4392
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4398
  call void @llvm.dbg.value(metadata i32 %252, metadata !4168, metadata !DIExpression()), !dbg !4190
  %253 = icmp slt i32 %252, 0, !dbg !4399
  br i1 %253, label %257, label %254, !dbg !4401

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4185, metadata !DIExpression()), !dbg !4392
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4138, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4190
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !4402
  call void @llvm.dbg.value(metadata i32 %255, metadata !4168, metadata !DIExpression()), !dbg !4190
  %256 = icmp slt i32 %255, 0, !dbg !4403
  br i1 %256, label %257, label %259, !dbg !4405

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4138, metadata !DIExpression()), !dbg !4190
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4406
  call void @llvm.dbg.value(metadata i32 undef, metadata !4138, metadata !DIExpression()), !dbg !4190
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %260, metadata !4138, metadata !DIExpression()), !dbg !4190
  %261 = add nsw i32 %260, %255, !dbg !4408
  call void @llvm.dbg.value(metadata i32 %261, metadata !4138, metadata !DIExpression()), !dbg !4190
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4406
  %262 = add nuw nsw i32 %239, 1, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %262, metadata !4179, metadata !DIExpression()), !dbg !4387
  %263 = icmp eq i32 %262, %164, !dbg !4388
  br i1 %263, label %264, label %238, !dbg !4389, !llvm.loop !4410

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4386
  call void @llvm.dbg.value(metadata i32 %265, metadata !4138, metadata !DIExpression()), !dbg !4190
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4412
  br label %267, !dbg !4413

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4190
  ret i32 %268, !dbg !4414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4415 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4419, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.value(metadata i8* %0, metadata !4420, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.value(metadata i8* %0, metadata !4421, metadata !DIExpression()), !dbg !4427
  %2 = load i8, i8* %0, align 1, !dbg !4428
  %3 = zext i8 %2 to i32, !dbg !4428
  %4 = shl nuw nsw i32 %3, 2, !dbg !4429
  call void @llvm.dbg.value(metadata i32 %4, metadata !4422, metadata !DIExpression()), !dbg !4427
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4430
  %6 = load i8, i8* %5, align 1, !dbg !4430
  %7 = zext i8 %6 to i32, !dbg !4430
  call void @llvm.dbg.value(metadata i32 %7, metadata !4423, metadata !DIExpression()), !dbg !4427
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4431
  %9 = load i8, i8* %8, align 1, !dbg !4431
  %10 = zext i8 %9 to i32, !dbg !4431
  call void @llvm.dbg.value(metadata i32 %10, metadata !4424, metadata !DIExpression()), !dbg !4427
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4432
  call void @llvm.dbg.value(metadata i8* %11, metadata !4420, metadata !DIExpression()), !dbg !4427
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4433
  call void @llvm.dbg.value(metadata i8* %12, metadata !4420, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.value(metadata i32 0, metadata !4425, metadata !DIExpression()), !dbg !4434
  %13 = icmp eq i8 %6, 0, !dbg !4435
  br i1 %13, label %14, label %19, !dbg !4437

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4427
  %16 = ptrtoint i8* %15 to i32, !dbg !4438
  %17 = ptrtoint i8* %0 to i32, !dbg !4438
  %18 = sub i32 %16, %17, !dbg !4438
  ret i32 %18, !dbg !4439

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4425, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata i8* %21, metadata !4420, metadata !DIExpression()), !dbg !4427
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4440
  call void @llvm.dbg.value(metadata i8* %22, metadata !4420, metadata !DIExpression()), !dbg !4427
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !4442
  %24 = add i32 %23, 1, !dbg !4443
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4444
  call void @llvm.dbg.value(metadata i8* %25, metadata !4420, metadata !DIExpression()), !dbg !4427
  %26 = add nuw nsw i32 %20, 1, !dbg !4445
  call void @llvm.dbg.value(metadata i32 %26, metadata !4425, metadata !DIExpression()), !dbg !4434
  %27 = icmp eq i32 %26, %7, !dbg !4435
  br i1 %27, label %14, label %19, !dbg !4437, !llvm.loop !4446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4448 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4452, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i8* %1, metadata !4453, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i8* %2, metadata !4454, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i16 %3, metadata !4455, metadata !DIExpression()), !dbg !4456
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4457
  br i1 %5, label %6, label %9, !dbg !4459

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4460
  %8 = add i32 %7, 1, !dbg !4462
  br label %20, !dbg !4463

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4464
  br i1 %10, label %13, label %11, !dbg !4465

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4465
  br label %16, !dbg !4465

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4466
  %15 = add i32 %14, 1, !dbg !4467
  br label %16, !dbg !4465

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4465
  %18 = and i32 %17, 65535, !dbg !4468
  call void @llvm.dbg.value(metadata i32 %17, metadata !4455, metadata !DIExpression()), !dbg !4456
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !4469
  br label %20, !dbg !4470

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4456
  ret i32 %21, !dbg !4471
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4474, metadata !DIExpression()), !dbg !4475
  ret i32 0, !dbg !4476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !4477 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4481, metadata !DIExpression()), !dbg !4482
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4483
  ret void, !dbg !4484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !4485 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4488
  ret i8* %1, !dbg !4489
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4490 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4501, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i8* %0, metadata !4500, metadata !DIExpression()), !dbg !4510
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !4511
  ret void, !dbg !4513
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4518, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.value(metadata i8* %1, metadata !4519, metadata !DIExpression()), !dbg !4520
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4521
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !4521
  ret i32 %4, !dbg !4522
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4523 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4530, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4527, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8* %1, metadata !4528, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata i8* %2, metadata !4529, metadata !DIExpression()), !dbg !4531
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !4532
  ret void, !dbg !4533
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4534 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4538, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i32 %1, metadata !4539, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i32 0, metadata !4540, metadata !DIExpression()), !dbg !4541
  %3 = icmp eq i32 %1, 0, !dbg !4542
  br i1 %3, label %13, label %4, !dbg !4545

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4540, metadata !DIExpression()), !dbg !4541
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4546
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4548
  %8 = load i8, i8* %7, align 1, !dbg !4548
  %9 = zext i8 %8 to i32, !dbg !4548
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !4546
  %11 = add nuw i32 %5, 1, !dbg !4549
  call void @llvm.dbg.value(metadata i32 %11, metadata !4540, metadata !DIExpression()), !dbg !4541
  %12 = icmp eq i32 %11, %1, !dbg !4542
  br i1 %12, label %13, label %4, !dbg !4545, !llvm.loop !4550

13:                                               ; preds = %4, %2
  ret void, !dbg !4552
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4553 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4557, metadata !DIExpression()), !dbg !4559
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4560
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4560
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4558, metadata !DIExpression()), !dbg !4561
  call void @llvm.va_start(i8* nonnull %3), !dbg !4562
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4563
  %5 = load i32, i32* %4, align 4, !dbg !4563
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4563
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !4563
  call void @llvm.va_end(i8* nonnull %3), !dbg !4564
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4565
  ret void, !dbg !4565
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4566 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4570, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i32 %1, metadata !4571, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.value(metadata i8* %2, metadata !4572, metadata !DIExpression()), !dbg !4575
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4576
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !4576
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4573, metadata !DIExpression()), !dbg !4577
  call void @llvm.va_start(i8* nonnull %5), !dbg !4578
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4579
  %7 = load i32, i32* %6, align 4, !dbg !4579
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4579
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !4579
  call void @llvm.dbg.value(metadata i32 %9, metadata !4574, metadata !DIExpression()), !dbg !4575
  call void @llvm.va_end(i8* nonnull %5), !dbg !4580
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !4581
  ret i32 %9, !dbg !4582
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4583 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4590, metadata !DIExpression()), !dbg !4597
  call void @llvm.dbg.value(metadata i8* %0, metadata !4587, metadata !DIExpression()), !dbg !4597
  call void @llvm.dbg.value(metadata i32 %1, metadata !4588, metadata !DIExpression()), !dbg !4597
  call void @llvm.dbg.value(metadata i8* %2, metadata !4589, metadata !DIExpression()), !dbg !4597
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4598
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !4598
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4591, metadata !DIExpression()), !dbg !4599
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4600
  store i8* %0, i8** %7, align 4, !dbg !4600
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4600
  store i32 %1, i32* %8, align 4, !dbg !4600
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4600
  store i32 0, i32* %9, align 4, !dbg !4600
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !4601
  %10 = load i32, i32* %9, align 4, !dbg !4602
  %11 = load i32, i32* %8, align 4, !dbg !4604
  %12 = icmp slt i32 %10, %11, !dbg !4605
  br i1 %12, label %13, label %15, !dbg !4606

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4607
  store i8 0, i8* %14, align 1, !dbg !4609
  br label %15, !dbg !4610

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !4611
  ret i32 %10, !dbg !4612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4618, metadata !DIExpression()), !dbg !4620
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4619, metadata !DIExpression()), !dbg !4620
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4621
  %4 = load i8*, i8** %3, align 4, !dbg !4621
  %5 = icmp eq i8* %4, null, !dbg !4623
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4624
  br i1 %5, label %12, label %8, !dbg !4625

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4626
  %10 = load i32, i32* %9, align 4, !dbg !4626
  %11 = icmp slt i32 %7, %10, !dbg !4627
  br i1 %11, label %15, label %12, !dbg !4628

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4629
  %14 = add nsw i32 %7, 1, !dbg !4631
  store i32 %14, i32* %13, align 4, !dbg !4631
  br label %25, !dbg !4632

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4633
  %17 = icmp eq i32 %7, %16, !dbg !4635
  br i1 %17, label %18, label %21, !dbg !4636

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4637
  store i32 %19, i32* %6, align 4, !dbg !4637
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4639
  store i8 0, i8* %20, align 1, !dbg !4640
  br label %25, !dbg !4641

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4642
  %23 = add nsw i32 %7, 1, !dbg !4644
  store i32 %23, i32* %6, align 4, !dbg !4644
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4645
  store i8 %22, i8* %24, align 1, !dbg !4646
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4647
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4648 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4653, metadata !DIExpression()), !dbg !4657
  call void @llvm.dbg.value(metadata i8* %1, metadata !4654, metadata !DIExpression()), !dbg !4657
  call void @llvm.dbg.value(metadata i8* %2, metadata !4655, metadata !DIExpression()), !dbg !4657
  call void @llvm.dbg.value(metadata i8* %3, metadata !4656, metadata !DIExpression()), !dbg !4657
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !4658
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !4659
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !4660
  unreachable, !dbg !4661
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4662 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !4766
  ret %struct.k_thread* %1, !dbg !4767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4772, metadata !DIExpression()), !dbg !4773
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4774, !srcloc !4776
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !4777
  ret void, !dbg !4778
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4779 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4780, !srcloc !4782
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !4783
  ret %struct.k_thread* %1, !dbg !4784
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #12 !dbg !4785 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4796, metadata !DIExpression()), !dbg !4800
  call void @llvm.dbg.value(metadata i8* %1, metadata !4797, metadata !DIExpression()), !dbg !4800
  %3 = icmp eq i8* %1, null, !dbg !4801
  br i1 %3, label %8, label %4, !dbg !4803

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4804
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4804
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4798, metadata !DIExpression()), !dbg !4800
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4805, !range !4806
  call void @llvm.dbg.value(metadata i32 %7, metadata !4799, metadata !DIExpression()), !dbg !4800
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !4807
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4808
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !4809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !4810 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4814, metadata !DIExpression()), !dbg !4818
  call void @llvm.dbg.value(metadata i8* %1, metadata !4815, metadata !DIExpression()), !dbg !4818
  call void @llvm.dbg.value(metadata i8* %1, metadata !4816, metadata !DIExpression()), !dbg !4818
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4819
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4817, metadata !DIExpression()), !dbg !4818
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4820
  %5 = ptrtoint i8* %4 to i32, !dbg !4821
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4821
  %7 = sub i32 %5, %6, !dbg !4821
  %8 = lshr i32 %7, 3, !dbg !4822
  ret i32 %8, !dbg !4823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !4824 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4828, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata i32 %1, metadata !4829, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata i1 %2, metadata !4830, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4833
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4834
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4831, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4832, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4833
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4835
  %6 = bitcast i8* %5 to i16*, !dbg !4835
  %7 = load i16, i16* %6, align 2, !dbg !4835
  %8 = and i16 %7, -2, !dbg !4839
  %9 = zext i1 %2 to i16, !dbg !4839
  %10 = or i16 %8, %9, !dbg !4839
  store i16 %10, i16* %6, align 2, !dbg !4835
  ret void, !dbg !4840
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4841 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4845, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.value(metadata i32 %1, metadata !4846, metadata !DIExpression()), !dbg !4847
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4848
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4850
  br i1 %4, label %7, label %5, !dbg !4851

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4852
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4854
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4855
  br label %7, !dbg !4856

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4857, !range !4859
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4860
  br i1 %9, label %13, label %10, !dbg !4861

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4862
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4864, !range !4859
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !4865
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4866
  call void @llvm.dbg.value(metadata i32 %12, metadata !4846, metadata !DIExpression()), !dbg !4847
  br label %13, !dbg !4867

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4846, metadata !DIExpression()), !dbg !4847
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !4868
  ret void, !dbg !4869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4870 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4874, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.value(metadata i32 %1, metadata !4875, metadata !DIExpression()), !dbg !4876
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4877
  %4 = add i32 %3, %1, !dbg !4878
  ret i32 %4, !dbg !4879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4880 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4884, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i32 %1, metadata !4885, metadata !DIExpression()), !dbg !4886
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4887
  %4 = and i32 %3, 1, !dbg !4888
  %5 = icmp ne i32 %4, 0, !dbg !4887
  ret i1 %5, !dbg !4889
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4890 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4892, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata i32 %1, metadata !4893, metadata !DIExpression()), !dbg !4897
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4898, !range !4899
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4900
  call void @llvm.dbg.value(metadata i32 %4, metadata !4894, metadata !DIExpression()), !dbg !4901
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4902
  ret void, !dbg !4903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4904 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4908, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %1, metadata !4909, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %2, metadata !4910, metadata !DIExpression()), !dbg !4913
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4914
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4915
  %6 = add i32 %5, %4, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %6, metadata !4911, metadata !DIExpression()), !dbg !4913
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4917
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4918
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4919
  ret void, !dbg !4920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4921 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4923, metadata !DIExpression()), !dbg !4925
  call void @llvm.dbg.value(metadata i32 %1, metadata !4924, metadata !DIExpression()), !dbg !4925
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4926
  %4 = sub i32 %1, %3, !dbg !4927
  ret i32 %4, !dbg !4928
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4929 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4931, metadata !DIExpression()), !dbg !4936
  call void @llvm.dbg.value(metadata i32 %1, metadata !4932, metadata !DIExpression()), !dbg !4936
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4937, !range !4899
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %4, metadata !4933, metadata !DIExpression()), !dbg !4939
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4940
  ret void, !dbg !4941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4942 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4946, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.value(metadata i32 %1, metadata !4947, metadata !DIExpression()), !dbg !4948
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4949
  %4 = lshr i32 %3, 1, !dbg !4950
  ret i32 %4, !dbg !4951
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4952 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4956, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i32 %1, metadata !4957, metadata !DIExpression()), !dbg !4959
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !4960
  %4 = add i32 %1, 1, !dbg !4961
  %5 = sub i32 %4, %3, !dbg !4962
  call void @llvm.dbg.value(metadata i32 %5, metadata !4958, metadata !DIExpression()), !dbg !4959
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4963, !range !4964
  %7 = sub nsw i32 31, %6, !dbg !4965
  ret i32 %7, !dbg !4966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4967 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4971, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i32 %1, metadata !4972, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i32 %2, metadata !4973, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4974, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4980
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4981
  %5 = load i32, i32* %4, align 4, !dbg !4981
  %6 = icmp eq i32 %5, 0, !dbg !4982
  br i1 %6, label %7, label %12, !dbg !4983

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4984
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4986
  %10 = load i32, i32* %9, align 4, !dbg !4987
  %11 = or i32 %10, %8, !dbg !4987
  store i32 %11, i32* %9, align 4, !dbg !4987
  store i32 %1, i32* %4, align 4, !dbg !4988
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4989
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4990
  br label %14, !dbg !4991

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4976, metadata !DIExpression()), !dbg !4992
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !4993, !range !4994
  call void @llvm.dbg.value(metadata i32 %13, metadata !4979, metadata !DIExpression()), !dbg !4992
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !4995
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4996
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !4997
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !4998
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5000 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5002, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata i32 %1, metadata !5003, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.value(metadata i32 %2, metadata !5004, metadata !DIExpression()), !dbg !5005
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !5006
  ret void, !dbg !5007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5008 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5010, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata i32 %1, metadata !5011, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata i32 %2, metadata !5012, metadata !DIExpression()), !dbg !5013
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !5014
  ret void, !dbg !5015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5016 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5018, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i32 %1, metadata !5019, metadata !DIExpression()), !dbg !5020
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !5021
  ret i32 %3, !dbg !5022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !5023 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5027, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.value(metadata i32 %1, metadata !5028, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.value(metadata i32 %2, metadata !5029, metadata !DIExpression()), !dbg !5032
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5033
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5030, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5032
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5031, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5032
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5034
  call void @llvm.dbg.value(metadata i8* %5, metadata !5031, metadata !DIExpression()), !dbg !5032
  %6 = bitcast i8* %5 to i16*, !dbg !5035
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5038
  %8 = load i16, i16* %7, align 2, !dbg !5038
  %9 = zext i16 %8 to i32, !dbg !5038
  ret i32 %9, !dbg !5039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5040 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5044, metadata !DIExpression()), !dbg !5045
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5046
  ret %struct.chunk_unit_t* %2, !dbg !5047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #8 !dbg !5048 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5052, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i32 %1, metadata !5053, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i32 %2, metadata !5054, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i32 %3, metadata !5055, metadata !DIExpression()), !dbg !5058
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5059
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5056, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5057, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5058
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5060
  call void @llvm.dbg.value(metadata i8* %6, metadata !5057, metadata !DIExpression()), !dbg !5058
  %7 = trunc i32 %3 to i16, !dbg !5061
  %8 = bitcast i8* %6 to i16*, !dbg !5064
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5065
  store i16 %7, i16* %9, align 2, !dbg !5066
  ret void, !dbg !5067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5068 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5072, metadata !DIExpression()), !dbg !5073
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !5074
  ret i32 %2, !dbg !5075
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5076 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5080, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.value(metadata i32 %1, metadata !5081, metadata !DIExpression()), !dbg !5082
  %3 = add i32 %1, 4, !dbg !5083
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !5084
  ret i32 %4, !dbg !5085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5090, metadata !DIExpression()), !dbg !5091
  %2 = add i32 %0, 7, !dbg !5092
  %3 = lshr i32 %2, 3, !dbg !5093
  ret i32 %3, !dbg !5094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5095 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5099, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.value(metadata i32 %1, metadata !5100, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.value(metadata i32 %2, metadata !5101, metadata !DIExpression()), !dbg !5102
  %4 = shl i32 %2, 1, !dbg !5103
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !5104
  ret void, !dbg !5105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5106 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5108, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata i32 %1, metadata !5109, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata i32 %2, metadata !5110, metadata !DIExpression()), !dbg !5111
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !5112
  ret void, !dbg !5113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5114 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5116, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 %1, metadata !5117, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.value(metadata i32 %2, metadata !5118, metadata !DIExpression()), !dbg !5124
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5125
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !5119, metadata !DIExpression()), !dbg !5124
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5126
  %6 = icmp eq i32 %5, %1, !dbg !5127
  br i1 %6, label %7, label %14, !dbg !5128

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5129
  %9 = xor i32 %8, -1, !dbg !5131
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5132
  %11 = load i32, i32* %10, align 4, !dbg !5133
  %12 = and i32 %11, %9, !dbg !5133
  store i32 %12, i32* %10, align 4, !dbg !5133
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5134
  store i32 0, i32* %13, align 4, !dbg !5135
  br label %17, !dbg !5136

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5137
  call void @llvm.dbg.value(metadata i32 %15, metadata !5120, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32 %5, metadata !5123, metadata !DIExpression()), !dbg !5138
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5139
  store i32 %5, i32* %16, align 4, !dbg !5140
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !5141
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !5142
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5144 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5146, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.value(metadata i32 %1, metadata !5147, metadata !DIExpression()), !dbg !5148
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !5149
  ret i32 %3, !dbg !5150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #4 !dbg !5151 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5155, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.value(metadata i8* %1, metadata !5156, metadata !DIExpression()), !dbg !5162
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5163
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5163
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5157, metadata !DIExpression()), !dbg !5162
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !5164
  call void @llvm.dbg.value(metadata i32 %5, metadata !5158, metadata !DIExpression()), !dbg !5162
  %6 = ptrtoint i8* %1 to i32, !dbg !5165
  call void @llvm.dbg.value(metadata i32 %6, metadata !5159, metadata !DIExpression()), !dbg !5162
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !5166
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5166
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5167
  call void @llvm.dbg.value(metadata i32 %9, metadata !5160, metadata !DIExpression()), !dbg !5162
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !5168
  %11 = shl i32 %10, 3, !dbg !5169
  call void @llvm.dbg.value(metadata i32 %11, metadata !5161, metadata !DIExpression()), !dbg !5162
  %12 = sub i32 %9, %6, !dbg !5170
  %13 = add i32 %12, %11, !dbg !5171
  ret i32 %13, !dbg !5172
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5173 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5177, metadata !DIExpression()), !dbg !5183
  call void @llvm.dbg.value(metadata i32 %1, metadata !5178, metadata !DIExpression()), !dbg !5183
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5184
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5184
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5179, metadata !DIExpression()), !dbg !5183
  %5 = icmp eq i32 %1, 0, !dbg !5185
  br i1 %5, label %19, label %6, !dbg !5187

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5188
  br i1 %7, label %19, label %8, !dbg !5189

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5190, !range !4806
  call void @llvm.dbg.value(metadata i32 %9, metadata !5181, metadata !DIExpression()), !dbg !5183
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %10, metadata !5182, metadata !DIExpression()), !dbg !5183
  %11 = icmp eq i32 %10, 0, !dbg !5192
  br i1 %11, label %19, label %12, !dbg !5194

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5195
  %14 = icmp ugt i32 %13, %9, !dbg !5197
  br i1 %14, label %15, label %17, !dbg !5198

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5199
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !5201
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !5202
  br label %17, !dbg !5203

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !5204
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5205
  call void @llvm.dbg.value(metadata i8* %18, metadata !5180, metadata !DIExpression()), !dbg !5183
  br label %19, !dbg !5206

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5183
  ret i8* %20, !dbg !5207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5208 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5212, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata i32 %1, metadata !5213, metadata !DIExpression()), !dbg !5214
  %3 = lshr i32 %1, 3, !dbg !5215
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5216
  %5 = load i32, i32* %4, align 4, !dbg !5216
  %6 = icmp uge i32 %3, %5, !dbg !5217
  ret i1 %6, !dbg !5218
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5219 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5223, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.value(metadata i32 %1, metadata !5224, metadata !DIExpression()), !dbg !5238
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5239
  call void @llvm.dbg.value(metadata i32 %3, metadata !5225, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5226, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5238
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5240
  %5 = load i32, i32* %4, align 4, !dbg !5240
  %6 = icmp eq i32 %5, 0, !dbg !5241
  br i1 %6, label %19, label %7, !dbg !5242

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5243
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5244
  call void @llvm.dbg.value(metadata i32 %9, metadata !5230, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i32 %8, metadata !5231, metadata !DIExpression()), !dbg !5245
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5246
  %11 = icmp ult i32 %10, %1, !dbg !5248
  br i1 %11, label %13, label %12, !dbg !5249

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !5250
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5252
  store i32 %14, i32* %4, align 4, !dbg !5253
  %15 = add nsw i32 %9, -1, !dbg !5254
  call void @llvm.dbg.value(metadata i32 %15, metadata !5230, metadata !DIExpression()), !dbg !5244
  %16 = icmp eq i32 %15, 0, !dbg !5254
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5255
  br i1 %18, label %19, label %7, !dbg !5255, !llvm.loop !5256

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5259
  %21 = load i32, i32* %20, align 4, !dbg !5259
  %22 = add nsw i32 %3, 1, !dbg !5260
  %23 = shl nsw i32 -1, %22, !dbg !5260
  %24 = and i32 %21, %23, !dbg !5261
  call void @llvm.dbg.value(metadata i32 %24, metadata !5233, metadata !DIExpression()), !dbg !5238
  %25 = icmp eq i32 %24, 0, !dbg !5262
  br i1 %25, label %30, label %26, !dbg !5263

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5264, !range !4964
  call void @llvm.dbg.value(metadata i32 %27, metadata !5234, metadata !DIExpression()), !dbg !5265
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5266
  %29 = load i32, i32* %28, align 4, !dbg !5266
  call void @llvm.dbg.value(metadata i32 %29, metadata !5237, metadata !DIExpression()), !dbg !5265
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !5267
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5238
  ret i32 %31, !dbg !5268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5269 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5271, metadata !DIExpression()), !dbg !5277
  call void @llvm.dbg.value(metadata i32 %1, metadata !5272, metadata !DIExpression()), !dbg !5277
  call void @llvm.dbg.value(metadata i32 %2, metadata !5273, metadata !DIExpression()), !dbg !5277
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5278
  call void @llvm.dbg.value(metadata i32 %4, metadata !5274, metadata !DIExpression()), !dbg !5277
  %5 = sub i32 %2, %1, !dbg !5279
  call void @llvm.dbg.value(metadata i32 %5, metadata !5275, metadata !DIExpression()), !dbg !5277
  %6 = sub i32 %4, %5, !dbg !5280
  call void @llvm.dbg.value(metadata i32 %6, metadata !5276, metadata !DIExpression()), !dbg !5277
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5281
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !5282
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !5283
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !5284
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !5285
  ret void, !dbg !5286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5287 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5291, metadata !DIExpression()), !dbg !5295
  call void @llvm.dbg.value(metadata i32 %1, metadata !5292, metadata !DIExpression()), !dbg !5295
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5296
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5293, metadata !DIExpression()), !dbg !5295
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5297
  call void @llvm.dbg.value(metadata i8* %4, metadata !5294, metadata !DIExpression()), !dbg !5295
  ret i8* %4, !dbg !5298
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5299 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5303, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata i32 %1, metadata !5304, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata i32 %2, metadata !5305, metadata !DIExpression()), !dbg !5315
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5316
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5316
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5306, metadata !DIExpression()), !dbg !5315
  %6 = sub i32 0, %1, !dbg !5317
  %7 = and i32 %6, %1, !dbg !5318
  call void @llvm.dbg.value(metadata i32 %7, metadata !5308, metadata !DIExpression()), !dbg !5315
  %8 = icmp eq i32 %7, %1, !dbg !5319
  br i1 %8, label %13, label %9, !dbg !5321

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5322
  call void @llvm.dbg.value(metadata i32 %10, metadata !5304, metadata !DIExpression()), !dbg !5315
  %11 = icmp ult i32 %7, 4, !dbg !5324
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5324
  br label %17, !dbg !5324

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5325
  br i1 %14, label %15, label %17, !dbg !5328

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !5329
  br label %57, !dbg !5331

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5315
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5332
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5304, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata i32 %19, metadata !5307, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata i32 %18, metadata !5308, metadata !DIExpression()), !dbg !5315
  %21 = icmp eq i32 %2, 0, !dbg !5333
  br i1 %21, label %57, label %22, !dbg !5335

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !5336
  br i1 %23, label %57, label %24, !dbg !5337

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !5338
  %26 = add i32 %25, %20, !dbg !5339
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !5340, !range !4806
  call void @llvm.dbg.value(metadata i32 %27, metadata !5309, metadata !DIExpression()), !dbg !5315
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !5341
  call void @llvm.dbg.value(metadata i32 %28, metadata !5310, metadata !DIExpression()), !dbg !5315
  %29 = icmp eq i32 %28, 0, !dbg !5342
  br i1 %29, label %57, label %30, !dbg !5344

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !5345
  call void @llvm.dbg.value(metadata i8* %31, metadata !5311, metadata !DIExpression()), !dbg !5315
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !5346
  %33 = ptrtoint i8* %32 to i32, !dbg !5346
  %34 = add i32 %20, -1, !dbg !5346
  %35 = add i32 %34, %33, !dbg !5346
  %36 = sub i32 0, %20, !dbg !5346
  %37 = and i32 %35, %36, !dbg !5346
  %38 = inttoptr i32 %37 to i8*, !dbg !5347
  %39 = sub i32 0, %18, !dbg !5348
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !5348
  call void @llvm.dbg.value(metadata i8* %40, metadata !5311, metadata !DIExpression()), !dbg !5315
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !5349
  %42 = ptrtoint i8* %41 to i32, !dbg !5349
  %43 = add i32 %42, 7, !dbg !5349
  %44 = and i32 %43, -8, !dbg !5349
  call void @llvm.dbg.value(metadata i32 %44, metadata !5312, metadata !DIExpression()), !dbg !5315
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !5350
  call void @llvm.dbg.value(metadata i32 %45, metadata !5313, metadata !DIExpression()), !dbg !5315
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !5351
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !5352
  %48 = sub i32 %44, %47, !dbg !5352
  %49 = ashr exact i32 %48, 3, !dbg !5352
  call void @llvm.dbg.value(metadata i32 %49, metadata !5314, metadata !DIExpression()), !dbg !5315
  %50 = icmp ugt i32 %45, %28, !dbg !5353
  br i1 %50, label %51, label %52, !dbg !5355

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !5356
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !5358
  br label %52, !dbg !5359

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !5360
  %54 = icmp ugt i32 %53, %49, !dbg !5362
  br i1 %54, label %55, label %56, !dbg !5363

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !5364
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !5366
  br label %56, !dbg !5367

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !5368
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !5315
  ret i8* %58, !dbg !5369
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5370 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5374, metadata !DIExpression()), !dbg !5393
  call void @llvm.dbg.value(metadata i8* %1, metadata !5375, metadata !DIExpression()), !dbg !5393
  call void @llvm.dbg.value(metadata i32 %2, metadata !5376, metadata !DIExpression()), !dbg !5393
  call void @llvm.dbg.value(metadata i32 %3, metadata !5377, metadata !DIExpression()), !dbg !5393
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5394
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5394
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5378, metadata !DIExpression()), !dbg !5393
  %7 = icmp eq i8* %1, null, !dbg !5395
  br i1 %7, label %8, label %10, !dbg !5397

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5398
  br label %59, !dbg !5400

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5401
  br i1 %11, label %12, label %13, !dbg !5403

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5404
  br label %59, !dbg !5406

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !5407
  br i1 %14, label %59, label %15, !dbg !5409

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !5410, !range !4806
  call void @llvm.dbg.value(metadata i32 %16, metadata !5379, metadata !DIExpression()), !dbg !5393
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5411
  call void @llvm.dbg.value(metadata i32 %17, metadata !5380, metadata !DIExpression()), !dbg !5393
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5412
  %19 = ptrtoint i8* %1 to i32, !dbg !5413
  %20 = ptrtoint i8* %18 to i32, !dbg !5413
  %21 = sub i32 %19, %20, !dbg !5413
  call void @llvm.dbg.value(metadata i32 %21, metadata !5381, metadata !DIExpression()), !dbg !5393
  %22 = add i32 %21, %3, !dbg !5414
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5415
  call void @llvm.dbg.value(metadata i32 %23, metadata !5382, metadata !DIExpression()), !dbg !5393
  %24 = icmp eq i32 %2, 0, !dbg !5416
  br i1 %24, label %29, label %25, !dbg !5417

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !5418
  %27 = and i32 %26, %19, !dbg !5419
  %28 = icmp eq i32 %27, 0, !dbg !5419
  br i1 %28, label %29, label %49, !dbg !5420

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5421
  %31 = icmp eq i32 %23, %30, !dbg !5422
  br i1 %31, label %59, label %32, !dbg !5423

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !5424
  br i1 %33, label %34, label %36, !dbg !5425

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !5426
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !5428
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !5429
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !5430
  br label %59, !dbg !5431

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5432
  br i1 %37, label %49, label %38, !dbg !5433

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5434
  %40 = add i32 %39, %30, !dbg !5435
  %41 = icmp ult i32 %40, %23, !dbg !5436
  br i1 %41, label %49, label %42, !dbg !5437

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !5438
  call void @llvm.dbg.value(metadata i32 %43, metadata !5383, metadata !DIExpression()), !dbg !5439
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5440
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5441
  %45 = icmp ult i32 %43, %44, !dbg !5443
  br i1 %45, label %46, label %48, !dbg !5444

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !5445
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !5447
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !5448
  br label %48, !dbg !5449

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !5450
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !5451
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5452
  call void @llvm.dbg.value(metadata i8* %50, metadata !5389, metadata !DIExpression()), !dbg !5393
  %51 = icmp eq i8* %50, null, !dbg !5453
  br i1 %51, label %59, label %52, !dbg !5454

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5455, !range !4899
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !5456
  %55 = sub i32 %54, %21, !dbg !5457
  call void @llvm.dbg.value(metadata i32 %55, metadata !5390, metadata !DIExpression()), !dbg !5458
  %56 = icmp ult i32 %55, %3, !dbg !5459
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !5459
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #27, !dbg !5460
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5461
  br label %59, !dbg !5462

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !5393
  ret i8* %60, !dbg !5463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5464 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5468, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i32 %1, metadata !5469, metadata !DIExpression()), !dbg !5470
  %3 = shl i32 %1, 3, !dbg !5471
  %4 = add i32 %3, -4, !dbg !5472
  ret i32 %4, !dbg !5473
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5474 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5478, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i8* %1, metadata !5479, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 %2, metadata !5480, metadata !DIExpression()), !dbg !5489
  %4 = add i32 %2, -4, !dbg !5490
  call void @llvm.dbg.value(metadata i32 %4, metadata !5480, metadata !DIExpression()), !dbg !5489
  %5 = ptrtoint i8* %1 to i32, !dbg !5491
  %6 = add i32 %5, 7, !dbg !5491
  %7 = and i32 %6, -8, !dbg !5491
  call void @llvm.dbg.value(metadata i32 %7, metadata !5481, metadata !DIExpression()), !dbg !5489
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !5492
  %9 = ptrtoint i8* %8 to i32, !dbg !5492
  %10 = and i32 %9, -8, !dbg !5492
  call void @llvm.dbg.value(metadata i32 %10, metadata !5482, metadata !DIExpression()), !dbg !5489
  %11 = sub i32 %10, %7, !dbg !5493
  %12 = lshr exact i32 %11, 3, !dbg !5494
  call void @llvm.dbg.value(metadata i32 %12, metadata !5483, metadata !DIExpression()), !dbg !5489
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !5495
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !5484, metadata !DIExpression()), !dbg !5489
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5496
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !5497
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !5498
  store i32 %12, i32* %15, align 8, !dbg !5499
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !5500
  store i32 0, i32* %16, align 4, !dbg !5501
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !5502
  call void @llvm.dbg.value(metadata i32 %17, metadata !5485, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5489
  %18 = shl i32 %17, 2, !dbg !5503
  %19 = add i32 %18, 20, !dbg !5504
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !5505
  call void @llvm.dbg.value(metadata i32 %20, metadata !5486, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.value(metadata i32 0, metadata !5487, metadata !DIExpression()), !dbg !5506
  %21 = icmp slt i32 %17, 0, !dbg !5507
  br i1 %21, label %22, label %24, !dbg !5509

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !5510
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !5511
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !5512
  %23 = sub i32 %12, %20, !dbg !5513
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !5514
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !5515
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !5516
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !5517
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !5518
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !5519
  ret void, !dbg !5520

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5487, metadata !DIExpression()), !dbg !5506
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !5521
  store i32 0, i32* %26, align 4, !dbg !5523
  %27 = add nuw i32 %25, 1, !dbg !5524
  call void @llvm.dbg.value(metadata i32 %27, metadata !5487, metadata !DIExpression()), !dbg !5506
  %28 = icmp eq i32 %25, %17, !dbg !5507
  br i1 %28, label %22, label %24, !dbg !5509, !llvm.loop !5525
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5527 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5540, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5537, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i8* %1, metadata !5538, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i8* %2, metadata !5539, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %4, metadata !5541, metadata !DIExpression()), !dbg !5666
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5667
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5667
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5542, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.value(metadata i32 0, metadata !5546, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i1 undef, metadata !5548, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5666
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5669

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5669

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5670
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5540, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i8* %30, metadata !5539, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %29, metadata !5546, metadata !DIExpression()), !dbg !5666
  %31 = load i8, i8* %30, align 1, !dbg !5671
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5669

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5671
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5672
  call void @llvm.dbg.value(metadata i8* %34, metadata !5539, metadata !DIExpression()), !dbg !5666
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5672
  call void @llvm.dbg.value(metadata i32 %35, metadata !5550, metadata !DIExpression()), !dbg !5673
  %36 = icmp slt i32 %35, 0, !dbg !5674
  %37 = add i32 %29, 1, !dbg !5672
  call void @llvm.dbg.value(metadata i32 undef, metadata !5546, metadata !DIExpression()), !dbg !5666
  br i1 %36, label %365, label %28, !llvm.loop !5676

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5678
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5555, metadata !DIExpression()), !dbg !5679
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5679
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5598, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5601, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i8* %30, metadata !5604, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i32 -1, metadata !5605, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i32 -1, metadata !5606, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i8* null, metadata !5607, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i8* %14, metadata !5608, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i8 0, metadata !5609, metadata !DIExpression()), !dbg !5680
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5681
  call void @llvm.dbg.value(metadata i8* %39, metadata !5539, metadata !DIExpression()), !dbg !5666
  %40 = load i24, i24* %15, align 8, !dbg !5682
  %41 = and i24 %40, 256, !dbg !5682
  %42 = icmp eq i24 %41, 0, !dbg !5682
  br i1 %42, label %51, label %43, !dbg !5684

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5685
  call void @llvm.dbg.value(metadata i8* %44, metadata !5540, metadata !DIExpression()), !dbg !5666
  %45 = bitcast i8* %27 to i32*, !dbg !5685
  %46 = load i32, i32* %45, align 4, !dbg !5685
  call void @llvm.dbg.value(metadata i32 %46, metadata !5605, metadata !DIExpression()), !dbg !5680
  %47 = icmp slt i32 %46, 0, !dbg !5687
  br i1 %47, label %48, label %56, !dbg !5689

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5690
  store i24 %49, i24* %15, align 8, !dbg !5690
  %50 = sub nsw i32 0, %46, !dbg !5692
  call void @llvm.dbg.value(metadata i32 %50, metadata !5605, metadata !DIExpression()), !dbg !5680
  br label %56, !dbg !5693

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5694
  %53 = icmp eq i24 %52, 0, !dbg !5694
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5696
  br label %56, !dbg !5696

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5697
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5680
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5540, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %58, metadata !5605, metadata !DIExpression()), !dbg !5680
  %60 = and i24 %57, 1024, !dbg !5697
  %61 = icmp eq i24 %60, 0, !dbg !5697
  br i1 %61, label %69, label %62, !dbg !5698

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5699
  call void @llvm.dbg.value(metadata i8* %63, metadata !5540, metadata !DIExpression()), !dbg !5666
  %64 = bitcast i8* %59 to i32*, !dbg !5699
  %65 = load i32, i32* %64, align 4, !dbg !5699
  call void @llvm.dbg.value(metadata i32 %65, metadata !5610, metadata !DIExpression()), !dbg !5700
  %66 = icmp slt i32 %65, 0, !dbg !5701
  br i1 %66, label %67, label %74, !dbg !5703

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5704
  store i24 %68, i24* %15, align 8, !dbg !5704
  br label %74, !dbg !5706

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5707
  %71 = icmp eq i24 %70, 0, !dbg !5707
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5709
  br label %74, !dbg !5709

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5710
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5680
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5680
  call void @llvm.dbg.value(metadata i8* %77, metadata !5540, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %76, metadata !5606, metadata !DIExpression()), !dbg !5680
  store i32 0, i32* %16, align 4, !dbg !5711
  store i32 0, i32* %17, align 8, !dbg !5712
  %78 = lshr i24 %75, 16, !dbg !5710
  call void @llvm.dbg.value(metadata i24 %78, metadata !5613, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5680
  %79 = lshr i24 %75, 11, !dbg !5713
  %80 = and i24 %79, 15, !dbg !5713
  %81 = zext i24 %80 to i32, !dbg !5713
  call void @llvm.dbg.value(metadata i32 %81, metadata !5614, metadata !DIExpression()), !dbg !5680
  %82 = trunc i24 %78 to i3, !dbg !5714
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5714

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5715

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5718
  call void @llvm.dbg.value(metadata i8* %85, metadata !5540, metadata !DIExpression()), !dbg !5666
  %86 = bitcast i8* %77 to i32*, !dbg !5718
  %87 = load i32, i32* %86, align 4, !dbg !5718
  %88 = sext i32 %87 to i64, !dbg !5718
  store i64 %88, i64* %20, align 8, !dbg !5720
  br label %115, !dbg !5721

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5722
  call void @llvm.dbg.value(metadata i8* %90, metadata !5540, metadata !DIExpression()), !dbg !5666
  %91 = bitcast i8* %77 to i32*, !dbg !5722
  %92 = load i32, i32* %91, align 4, !dbg !5722
  %93 = sext i32 %92 to i64, !dbg !5722
  store i64 %93, i64* %20, align 8, !dbg !5725
  br label %115, !dbg !5726

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5727
  %96 = add i32 %95, 7, !dbg !5727
  %97 = and i32 %96, -8, !dbg !5727
  %98 = inttoptr i32 %97 to i8*, !dbg !5727
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5727
  call void @llvm.dbg.value(metadata i8* %99, metadata !5540, metadata !DIExpression()), !dbg !5666
  %100 = inttoptr i32 %97 to i64*, !dbg !5727
  %101 = load i64, i64* %100, align 8, !dbg !5727
  store i64 %101, i64* %20, align 8, !dbg !5728
  br label %115, !dbg !5729

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5730
  %104 = add i32 %103, 7, !dbg !5730
  %105 = and i32 %104, -8, !dbg !5730
  %106 = inttoptr i32 %105 to i8*, !dbg !5730
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5730
  call void @llvm.dbg.value(metadata i8* %107, metadata !5540, metadata !DIExpression()), !dbg !5666
  %108 = inttoptr i32 %105 to i64*, !dbg !5730
  %109 = load i64, i64* %108, align 8, !dbg !5730
  store i64 %109, i64* %20, align 8, !dbg !5731
  br label %115, !dbg !5732

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5733
  call void @llvm.dbg.value(metadata i8* %111, metadata !5540, metadata !DIExpression()), !dbg !5666
  %112 = bitcast i8* %77 to i32*, !dbg !5733
  %113 = load i32, i32* %112, align 4, !dbg !5733
  %114 = sext i32 %113 to i64, !dbg !5734
  store i64 %114, i64* %20, align 8, !dbg !5735
  br label %115, !dbg !5736

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5737
  call void @llvm.dbg.value(metadata i8* %117, metadata !5540, metadata !DIExpression()), !dbg !5666
  %118 = trunc i24 %79 to i4, !dbg !5738
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5738

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5739
  %121 = ashr exact i64 %120, 56, !dbg !5739
  store i64 %121, i64* %20, align 8, !dbg !5742
  br label %177, !dbg !5743

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5744
  %124 = ashr exact i64 %123, 48, !dbg !5744
  store i64 %124, i64* %20, align 8, !dbg !5747
  br label %177, !dbg !5748

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5749

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5752
  call void @llvm.dbg.value(metadata i8* %127, metadata !5540, metadata !DIExpression()), !dbg !5666
  %128 = bitcast i8* %77 to i32*, !dbg !5752
  %129 = load i32, i32* %128, align 4, !dbg !5752
  %130 = zext i32 %129 to i64, !dbg !5752
  store i64 %130, i64* %20, align 8, !dbg !5754
  br label %157, !dbg !5755

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5756
  call void @llvm.dbg.value(metadata i8* %132, metadata !5540, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i8* %132, metadata !5540, metadata !DIExpression()), !dbg !5666
  %133 = bitcast i8* %77 to i32*, !dbg !5756
  %134 = load i32, i32* %133, align 4, !dbg !5756
  %135 = zext i32 %134 to i64, !dbg !5756
  store i64 %135, i64* %20, align 8, !dbg !5756
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5758
  %138 = add i32 %137, 7, !dbg !5758
  %139 = and i32 %138, -8, !dbg !5758
  %140 = inttoptr i32 %139 to i8*, !dbg !5758
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5758
  call void @llvm.dbg.value(metadata i8* %141, metadata !5540, metadata !DIExpression()), !dbg !5666
  %142 = inttoptr i32 %139 to i64*, !dbg !5758
  %143 = load i64, i64* %142, align 8, !dbg !5758
  store i64 %143, i64* %20, align 8, !dbg !5759
  br label %157, !dbg !5760

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5761
  %146 = add i32 %145, 7, !dbg !5761
  %147 = and i32 %146, -8, !dbg !5761
  %148 = inttoptr i32 %147 to i8*, !dbg !5761
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5761
  call void @llvm.dbg.value(metadata i8* %149, metadata !5540, metadata !DIExpression()), !dbg !5666
  %150 = inttoptr i32 %147 to i64*, !dbg !5761
  %151 = load i64, i64* %150, align 8, !dbg !5761
  store i64 %151, i64* %20, align 8, !dbg !5762
  br label %157, !dbg !5763

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5764
  call void @llvm.dbg.value(metadata i8* %153, metadata !5540, metadata !DIExpression()), !dbg !5666
  %154 = bitcast i8* %77 to i32*, !dbg !5764
  %155 = load i32, i32* %154, align 4, !dbg !5764
  %156 = zext i32 %155 to i64, !dbg !5765
  store i64 %156, i64* %20, align 8, !dbg !5766
  br label %157, !dbg !5767

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5768
  call void @llvm.dbg.value(metadata i8* %159, metadata !5540, metadata !DIExpression()), !dbg !5666
  %160 = trunc i24 %79 to i4, !dbg !5769
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5769

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5770
  store i64 %162, i64* %20, align 8, !dbg !5773
  br label %177, !dbg !5774

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5775
  store i64 %164, i64* %20, align 8, !dbg !5778
  br label %177, !dbg !5779

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5780
  %167 = add i32 %166, 7, !dbg !5780
  %168 = and i32 %167, -8, !dbg !5780
  %169 = inttoptr i32 %168 to i8*, !dbg !5780
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5780
  call void @llvm.dbg.value(metadata i8* %170, metadata !5540, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i8* %170, metadata !5540, metadata !DIExpression()), !dbg !5666
  %171 = inttoptr i32 %168 to double*, !dbg !5780
  %172 = load double, double* %171, align 8, !dbg !5780
  store double %172, double* %19, align 8, !dbg !5780
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5784
  call void @llvm.dbg.value(metadata i8* %174, metadata !5540, metadata !DIExpression()), !dbg !5666
  %175 = bitcast i8* %77 to i8**, !dbg !5784
  %176 = load i8*, i8** %175, align 4, !dbg !5784
  store i8* %176, i8** %18, align 8, !dbg !5787
  br label %177, !dbg !5788

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5680
  call void @llvm.dbg.value(metadata i8* %178, metadata !5540, metadata !DIExpression()), !dbg !5666
  %179 = and i24 %75, 3, !dbg !5789
  %180 = icmp eq i24 %179, 0, !dbg !5789
  br i1 %180, label %185, label %181, !dbg !5789

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5790
  call void @llvm.dbg.value(metadata i32 %182, metadata !5615, metadata !DIExpression()), !dbg !5791
  %183 = icmp slt i32 %182, 0, !dbg !5792
  %184 = add i32 %182, %29, !dbg !5790
  call void @llvm.dbg.value(metadata i32 undef, metadata !5546, metadata !DIExpression()), !dbg !5666
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5794
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5795

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5796
  call void @llvm.dbg.value(metadata i32 %188, metadata !5619, metadata !DIExpression()), !dbg !5797
  %189 = icmp slt i32 %188, 0, !dbg !5798
  %190 = add i32 %29, 1, !dbg !5796
  call void @llvm.dbg.value(metadata i32 undef, metadata !5546, metadata !DIExpression()), !dbg !5666
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5800
  call void @llvm.dbg.value(metadata i8* %192, metadata !5607, metadata !DIExpression()), !dbg !5680
  %193 = icmp sgt i32 %76, -1, !dbg !5801
  br i1 %193, label %194, label %196, !dbg !5803

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5804
  call void @llvm.dbg.value(metadata i32 %195, metadata !5622, metadata !DIExpression()), !dbg !5806
  br label %241, !dbg !5807

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5808
  call void @llvm.dbg.value(metadata i32 %197, metadata !5622, metadata !DIExpression()), !dbg !5806
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5607, metadata !DIExpression()), !dbg !5680
  %199 = load i64, i64* %20, align 8, !dbg !5810
  %200 = trunc i64 %199 to i8, !dbg !5811
  store i8 %200, i8* %10, align 1, !dbg !5812
  call void @llvm.dbg.value(metadata i8* %23, metadata !5608, metadata !DIExpression()), !dbg !5680
  br label %245, !dbg !5813

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5814
  %203 = icmp eq i24 %202, 0, !dbg !5814
  %204 = trunc i24 %75 to i8, !dbg !5816
  %205 = shl i8 %204, 1, !dbg !5816
  %206 = and i8 %205, 32, !dbg !5816
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5816
  call void @llvm.dbg.value(metadata i8 %207, metadata !5609, metadata !DIExpression()), !dbg !5680
  %208 = load i64, i64* %20, align 8, !dbg !5817
  call void @llvm.dbg.value(metadata i64 %208, metadata !5547, metadata !DIExpression()), !dbg !5666
  %209 = icmp slt i64 %208, 0, !dbg !5818
  br i1 %209, label %210, label %212, !dbg !5820

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5609, metadata !DIExpression()), !dbg !5680
  %211 = sub nsw i64 0, %208, !dbg !5821
  store i64 %211, i64* %20, align 8, !dbg !5823
  br label %212, !dbg !5824

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5680
  call void @llvm.dbg.value(metadata i8 %213, metadata !5609, metadata !DIExpression()), !dbg !5680
  %214 = load i64, i64* %20, align 8, !dbg !5825
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5826
  call void @llvm.dbg.value(metadata i8* %215, metadata !5607, metadata !DIExpression()), !dbg !5680
  br label %216, !dbg !5827

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5828
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5829
  call void @llvm.dbg.value(metadata i8* %218, metadata !5607, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i8 %217, metadata !5609, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.label(metadata !5665), !dbg !5830
  %219 = icmp sgt i32 %76, -1, !dbg !5831
  br i1 %219, label %222, label %220, !dbg !5832

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5833
  br label %245, !dbg !5832

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5835
  %224 = sub i32 %22, %223, !dbg !5835
  call void @llvm.dbg.value(metadata i32 %224, metadata !5624, metadata !DIExpression()), !dbg !5836
  %225 = load i24, i24* %15, align 8, !dbg !5837
  %226 = and i24 %225, -65, !dbg !5837
  store i24 %226, i24* %15, align 8, !dbg !5837
  %227 = icmp ugt i32 %76, %224, !dbg !5838
  br i1 %227, label %228, label %245, !dbg !5840

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5841
  store i32 %229, i32* %16, align 4, !dbg !5843
  br label %245, !dbg !5844

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5845
  %232 = icmp eq i8* %231, null, !dbg !5847
  br i1 %232, label %245, label %233, !dbg !5848

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5849
  %235 = zext i32 %234 to i64, !dbg !5849
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5851
  call void @llvm.dbg.value(metadata i8* %236, metadata !5607, metadata !DIExpression()), !dbg !5680
  %237 = load i24, i24* %15, align 8, !dbg !5852
  %238 = or i24 %237, 1048576, !dbg !5852
  store i24 %238, i24* %15, align 8, !dbg !5852
  store i8 120, i8* %21, align 1, !dbg !5853
  br label %216, !dbg !5854

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5855
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5858
  br label %363, !dbg !5859

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5860
  call void @llvm.dbg.value(metadata i32 %242, metadata !5622, metadata !DIExpression()), !dbg !5806
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5861
  call void @llvm.dbg.value(metadata i32 -1, metadata !5606, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i32 %29, metadata !5546, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i8* %192, metadata !5607, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i8* %243, metadata !5608, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i8 0, metadata !5609, metadata !DIExpression()), !dbg !5680
  %244 = icmp eq i8* %192, null, !dbg !5862
  br i1 %244, label %363, label %245, !dbg !5864, !llvm.loop !5676

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5833
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5680
  call void @llvm.dbg.value(metadata i32 0, metadata !5628, metadata !DIExpression()), !dbg !5680
  %250 = zext i8 %249 to i32, !dbg !5865
  %251 = icmp eq i8 %249, 0, !dbg !5867
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5680
  call void @llvm.dbg.value(metadata i32 undef, metadata !5627, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5680
  call void @llvm.dbg.value(metadata i32 undef, metadata !5627, metadata !DIExpression()), !dbg !5680
  %252 = icmp sgt i32 %58, 0, !dbg !5868
  br i1 %252, label %253, label %302, !dbg !5869

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5833
  %255 = icmp eq i24 %254, 0, !dbg !5833
  %256 = ptrtoint i8* %248 to i32, !dbg !5870
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5680
  %257 = ptrtoint i8* %247 to i32, !dbg !5870
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5680
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5680
  %258 = xor i1 %251, true, !dbg !5871
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5680
  %259 = sext i1 %258 to i32, !dbg !5871
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5680
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5680
  %260 = lshr i24 %246, 19, !dbg !5872
  %261 = and i24 %260, 1, !dbg !5872
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5872
  %263 = zext i24 %262 to i32, !dbg !5872
  %264 = add i32 %257, %259, !dbg !5872
  %265 = add i32 %256, %263, !dbg !5872
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5680
  %266 = and i24 %246, 4194304, !dbg !5873
  %267 = icmp eq i24 %266, 0, !dbg !5873
  %268 = load i32, i32* %16, align 4, !dbg !5875
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5627, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5680
  call void @llvm.dbg.value(metadata i32 undef, metadata !5627, metadata !DIExpression()), !dbg !5680
  %269 = load i32, i32* %17, align 8, !dbg !5876
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5876
  call void @llvm.dbg.value(metadata i32 undef, metadata !5627, metadata !DIExpression()), !dbg !5680
  %271 = add i32 %264, %58, !dbg !5876
  %272 = add i32 %265, %268, !dbg !5876
  %273 = add i32 %272, %270, !dbg !5877
  %274 = sub i32 %271, %273, !dbg !5877
  call void @llvm.dbg.value(metadata i32 %274, metadata !5605, metadata !DIExpression()), !dbg !5680
  %275 = and i24 %246, 4, !dbg !5878
  %276 = icmp eq i24 %275, 0, !dbg !5878
  br i1 %276, label %277, label %302, !dbg !5879

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5629, metadata !DIExpression()), !dbg !5880
  %278 = and i24 %246, 64, !dbg !5881
  %279 = icmp eq i24 %278, 0, !dbg !5881
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5882
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5882
  %282 = select i1 %279, i32 32, i32 48, !dbg !5882
  br i1 %280, label %287, label %283, !dbg !5882

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5883
  call void @llvm.dbg.value(metadata i32 %284, metadata !5634, metadata !DIExpression()), !dbg !5884
  %285 = icmp slt i32 %284, 0, !dbg !5885
  %286 = add i32 %29, 1, !dbg !5883
  call void @llvm.dbg.value(metadata i32 undef, metadata !5546, metadata !DIExpression()), !dbg !5666
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5680
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5670
  call void @llvm.dbg.value(metadata i32 %290, metadata !5546, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i8 undef, metadata !5629, metadata !DIExpression()), !dbg !5880
  call void @llvm.dbg.value(metadata i8 %288, metadata !5609, metadata !DIExpression()), !dbg !5680
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5887
  %292 = add i32 %291, -1, !dbg !5887
  br label %293, !dbg !5887

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5888
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5670
  call void @llvm.dbg.value(metadata i32 %295, metadata !5546, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %294, metadata !5605, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i32 %294, metadata !5605, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5680
  %296 = icmp sgt i32 %294, 0, !dbg !5889
  br i1 %296, label %297, label %302, !dbg !5887

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5890
  call void @llvm.dbg.value(metadata i32 %298, metadata !5605, metadata !DIExpression()), !dbg !5680
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5891
  call void @llvm.dbg.value(metadata i32 %299, metadata !5640, metadata !DIExpression()), !dbg !5892
  %300 = icmp slt i32 %299, 0, !dbg !5893
  %301 = add i32 %295, 1, !dbg !5891
  call void @llvm.dbg.value(metadata i32 undef, metadata !5546, metadata !DIExpression()), !dbg !5666
  br i1 %300, label %361, label %293, !llvm.loop !5895

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5680
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5680
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5670
  call void @llvm.dbg.value(metadata i32 %305, metadata !5546, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %304, metadata !5605, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i8 %303, metadata !5609, metadata !DIExpression()), !dbg !5680
  %306 = icmp eq i8 %303, 0, !dbg !5897
  br i1 %306, label %312, label %307, !dbg !5898

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5899
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5900
  call void @llvm.dbg.value(metadata i32 %309, metadata !5643, metadata !DIExpression()), !dbg !5901
  %310 = icmp slt i32 %309, 0, !dbg !5902
  %311 = add i32 %305, 1, !dbg !5900
  call void @llvm.dbg.value(metadata i32 undef, metadata !5546, metadata !DIExpression()), !dbg !5666
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5670
  call void @llvm.dbg.value(metadata i32 %313, metadata !5546, metadata !DIExpression()), !dbg !5666
  %314 = lshr i24 %246, 20, !dbg !5904
  %315 = lshr i24 %246, 19, !dbg !5905
  %316 = or i24 %314, %315, !dbg !5906
  %317 = and i24 %316, 1, !dbg !5906
  %318 = icmp eq i24 %317, 0, !dbg !5906
  br i1 %318, label %323, label %319, !dbg !5907

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5908
  call void @llvm.dbg.value(metadata i32 %320, metadata !5647, metadata !DIExpression()), !dbg !5909
  %321 = icmp slt i32 %320, 0, !dbg !5910
  %322 = add i32 %313, 1, !dbg !5908
  call void @llvm.dbg.value(metadata i32 undef, metadata !5546, metadata !DIExpression()), !dbg !5666
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5670
  call void @llvm.dbg.value(metadata i32 %324, metadata !5546, metadata !DIExpression()), !dbg !5666
  %325 = and i24 %246, 1048576, !dbg !5912
  %326 = icmp eq i24 %325, 0, !dbg !5912
  br i1 %326, label %333, label %327, !dbg !5913

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5914
  %329 = zext i8 %328 to i32, !dbg !5914
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5914
  call void @llvm.dbg.value(metadata i32 %330, metadata !5653, metadata !DIExpression()), !dbg !5915
  %331 = icmp slt i32 %330, 0, !dbg !5916
  %332 = add i32 %324, 1, !dbg !5914
  call void @llvm.dbg.value(metadata i32 undef, metadata !5546, metadata !DIExpression()), !dbg !5666
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5670
  call void @llvm.dbg.value(metadata i32 %334, metadata !5546, metadata !DIExpression()), !dbg !5666
  %335 = load i32, i32* %16, align 4, !dbg !5918
  call void @llvm.dbg.value(metadata i32 %335, metadata !5628, metadata !DIExpression()), !dbg !5680
  br label %336, !dbg !5919

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5920
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5670
  call void @llvm.dbg.value(metadata i32 %338, metadata !5546, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %337, metadata !5628, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5680
  %339 = icmp sgt i32 %337, 0, !dbg !5921
  br i1 %339, label %340, label %345, !dbg !5919

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5922
  call void @llvm.dbg.value(metadata i32 %341, metadata !5628, metadata !DIExpression()), !dbg !5680
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5923
  call void @llvm.dbg.value(metadata i32 %342, metadata !5657, metadata !DIExpression()), !dbg !5924
  %343 = icmp slt i32 %342, 0, !dbg !5925
  %344 = add i32 %338, 1, !dbg !5923
  call void @llvm.dbg.value(metadata i32 undef, metadata !5546, metadata !DIExpression()), !dbg !5666
  br i1 %343, label %361, label %336, !llvm.loop !5927

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5929
  call void @llvm.dbg.value(metadata i32 %346, metadata !5660, metadata !DIExpression()), !dbg !5930
  %347 = icmp slt i32 %346, 0, !dbg !5931
  call void @llvm.dbg.value(metadata i32 undef, metadata !5546, metadata !DIExpression()), !dbg !5666
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5929
  call void @llvm.dbg.value(metadata i32 %349, metadata !5546, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %304, metadata !5605, metadata !DIExpression()), !dbg !5680
  %350 = icmp sgt i32 %304, 0, !dbg !5933
  br i1 %350, label %351, label %363, !dbg !5934

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5934
  %353 = add i32 %352, %338, !dbg !5934
  br label %354, !dbg !5934

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5546, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %355, metadata !5605, metadata !DIExpression()), !dbg !5680
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5935
  call void @llvm.dbg.value(metadata i32 %356, metadata !5662, metadata !DIExpression()), !dbg !5936
  %357 = icmp slt i32 %356, 0, !dbg !5937
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5939
  call void @llvm.dbg.value(metadata i32 undef, metadata !5546, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %359, metadata !5605, metadata !DIExpression()), !dbg !5680
  %360 = icmp sgt i32 %355, 1, !dbg !5933
  br i1 %360, label %354, label %363, !dbg !5934, !llvm.loop !5940

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5546, metadata !DIExpression()), !dbg !5666
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5677
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5670
  call void @llvm.dbg.value(metadata i32 %364, metadata !5546, metadata !DIExpression()), !dbg !5666
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5677
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5666
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5942
  ret i32 %366, !dbg !5942
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !5943 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5947, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata i8* %1, metadata !5948, metadata !DIExpression()), !dbg !5949
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5950
  store i24 0, i24* %3, align 4, !dbg !5950
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5950
  store i8 0, i8* %4, align 1, !dbg !5950
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5950
  store i32 0, i32* %5, align 4, !dbg !5950
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5950
  store i32 0, i32* %6, align 4, !dbg !5950
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5951
  call void @llvm.dbg.value(metadata i8* %7, metadata !5948, metadata !DIExpression()), !dbg !5949
  %8 = load i8, i8* %7, align 1, !dbg !5952
  %9 = icmp eq i8 %8, 37, !dbg !5954
  br i1 %9, label %10, label %12, !dbg !5955

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5956
  call void @llvm.dbg.value(metadata i8* %11, metadata !5948, metadata !DIExpression()), !dbg !5949
  store i8 37, i8* %4, align 1, !dbg !5958
  br label %18, !dbg !5959

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5960
  call void @llvm.dbg.value(metadata i8* %13, metadata !5948, metadata !DIExpression()), !dbg !5949
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5961
  call void @llvm.dbg.value(metadata i8* %14, metadata !5948, metadata !DIExpression()), !dbg !5949
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5962
  call void @llvm.dbg.value(metadata i8* %15, metadata !5948, metadata !DIExpression()), !dbg !5949
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5963
  call void @llvm.dbg.value(metadata i8* %16, metadata !5948, metadata !DIExpression()), !dbg !5949
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5964
  call void @llvm.dbg.value(metadata i8* %17, metadata !5948, metadata !DIExpression()), !dbg !5949
  br label %18, !dbg !5965

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5949
  ret i8* %19, !dbg !5966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5967 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5971, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata i8* %1, metadata !5972, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata i8* %2, metadata !5973, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata i8* %3, metadata !5974, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata i32 0, metadata !5975, metadata !DIExpression()), !dbg !5978
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5979

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5980
  call void @llvm.dbg.value(metadata i32 %9, metadata !5975, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.value(metadata i8* %8, metadata !5973, metadata !DIExpression()), !dbg !5978
  %10 = icmp ult i8* %8, %3, !dbg !5981
  br i1 %10, label %11, label %13, !dbg !5982

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5983
  br label %17, !dbg !5982

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5984

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5985
  %16 = icmp eq i8 %15, 0, !dbg !5984
  br i1 %16, label %24, label %17, !dbg !5979

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5983
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5986
  call void @llvm.dbg.value(metadata i8* %19, metadata !5973, metadata !DIExpression()), !dbg !5978
  %20 = zext i8 %18 to i32, !dbg !5987
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5988
  call void @llvm.dbg.value(metadata i32 %21, metadata !5976, metadata !DIExpression()), !dbg !5989
  %22 = icmp slt i32 %21, 0, !dbg !5990
  %23 = add i32 %9, 1, !dbg !5992
  call void @llvm.dbg.value(metadata i32 undef, metadata !5975, metadata !DIExpression()), !dbg !5978
  br i1 %22, label %24, label %7, !llvm.loop !5993

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5978
  ret i32 %25, !dbg !5995
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !5996 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6000, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6001, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.value(metadata i8* %2, metadata !6002, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.value(metadata i8* %3, metadata !6003, metadata !DIExpression()), !dbg !6010
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6011
  %6 = load i8, i8* %5, align 1, !dbg !6011
  %7 = zext i8 %6 to i32, !dbg !6012
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !6013
  %9 = icmp eq i32 %8, 0, !dbg !6013
  call void @llvm.dbg.value(metadata i1 %9, metadata !6004, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6010
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !6014
  call void @llvm.dbg.value(metadata i32 %10, metadata !6005, metadata !DIExpression()), !dbg !6010
  %11 = ptrtoint i8* %3 to i32, !dbg !6015
  %12 = ptrtoint i8* %2 to i32, !dbg !6015
  %13 = sub i32 %11, %12, !dbg !6015
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6016
  call void @llvm.dbg.value(metadata i8* %14, metadata !6007, metadata !DIExpression()), !dbg !6010
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6017

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6010
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6000, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.value(metadata i8* %18, metadata !6007, metadata !DIExpression()), !dbg !6010
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6018
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6019
  call void @llvm.dbg.value(metadata i32 %25, metadata !6008, metadata !DIExpression()), !dbg !6020
  %26 = icmp ult i32 %25, 10, !dbg !6021
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6022
  %28 = add i32 %27, %25, !dbg !6020
  %29 = trunc i32 %28 to i8, !dbg !6022
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6023
  call void @llvm.dbg.value(metadata i8* %30, metadata !6007, metadata !DIExpression()), !dbg !6010
  store i8 %29, i8* %30, align 1, !dbg !6024
  call void @llvm.dbg.value(metadata i64 %22, metadata !6000, metadata !DIExpression()), !dbg !6010
  %31 = icmp uge i64 %19, %15, !dbg !6025
  %32 = icmp ugt i8* %30, %2, !dbg !6026
  %33 = and i1 %31, %32, !dbg !6026
  br i1 %33, label %17, label %34, !dbg !6027, !llvm.loop !6028

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6030
  %36 = load i24, i24* %35, align 4, !dbg !6030
  %37 = and i24 %36, 32, !dbg !6030
  %38 = icmp eq i24 %37, 0, !dbg !6030
  br i1 %38, label %44, label %39, !dbg !6032

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6033

40:                                               ; preds = %39
  br label %41, !dbg !6035

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6039
  store i24 %43, i24* %35, align 4, !dbg !6039
  br label %44, !dbg !6040

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !6041 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6047, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.value(metadata i8* %1, metadata !6048, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.value(metadata i32 %2, metadata !6049, metadata !DIExpression()), !dbg !6050
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6051
  %5 = load i24, i24* %4, align 4, !dbg !6051
  %6 = lshr i24 %5, 11, !dbg !6051
  %7 = and i24 %6, 15, !dbg !6051
  %8 = zext i24 %7 to i32, !dbg !6051
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6052

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6053
  store i32 %2, i32* %10, align 4, !dbg !6055
  br label %28, !dbg !6056

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6057
  store i8 %12, i8* %1, align 1, !dbg !6058
  br label %28, !dbg !6059

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6060
  %15 = bitcast i8* %1 to i16*, !dbg !6061
  store i16 %14, i16* %15, align 2, !dbg !6062
  br label %28, !dbg !6063

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6064
  store i32 %2, i32* %17, align 4, !dbg !6065
  br label %28, !dbg !6066

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6067
  %20 = bitcast i8* %1 to i64*, !dbg !6068
  store i64 %19, i64* %20, align 8, !dbg !6069
  br label %28, !dbg !6070

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6071
  %23 = bitcast i8* %1 to i64*, !dbg !6072
  store i64 %22, i64* %23, align 8, !dbg !6073
  br label %28, !dbg !6074

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6075
  store i32 %2, i32* %25, align 4, !dbg !6076
  br label %28, !dbg !6077

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6078
  store i32 %2, i32* %27, align 4, !dbg !6079
  br label %28, !dbg !6080

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6081
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6085, metadata !DIExpression()), !dbg !6086
  %2 = add i32 %0, -65, !dbg !6087
  %3 = icmp ult i32 %2, 26, !dbg !6088
  %4 = zext i1 %3 to i32, !dbg !6088
  ret i32 %4, !dbg !6089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6090 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6094, metadata !DIExpression()), !dbg !6095
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6096

2:                                                ; preds = %1
  br label %4, !dbg !6097

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6099

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6100
  ret i32 %5, !dbg !6101
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6102 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6104, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i8* %1, metadata !6105, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i8 1, metadata !6106, metadata !DIExpression()), !dbg !6107
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6108

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6106, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i8* %5, metadata !6105, metadata !DIExpression()), !dbg !6107
  %6 = load i8, i8* %5, align 1, !dbg !6109
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6111

7:                                                ; preds = %4
  br label %11, !dbg !6112

8:                                                ; preds = %4
  br label %11, !dbg !6114

9:                                                ; preds = %4
  br label %11, !dbg !6115

10:                                               ; preds = %4
  br label %11, !dbg !6116

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6117
  %14 = or i24 %13, %12, !dbg !6117
  store i24 %14, i24* %3, align 4, !dbg !6117
  call void @llvm.dbg.value(metadata i8 poison, metadata !6106, metadata !DIExpression()), !dbg !6107
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6105, metadata !DIExpression()), !dbg !6107
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6106, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i8* %15, metadata !6105, metadata !DIExpression()), !dbg !6107
  %17 = load i24, i24* %3, align 4, !dbg !6118
  %18 = and i24 %17, 68, !dbg !6120
  %19 = icmp eq i24 %18, 68, !dbg !6120
  br i1 %19, label %20, label %22, !dbg !6120

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6121
  store i24 %21, i24* %3, align 4, !dbg !6121
  br label %22, !dbg !6123

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6124
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6125 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6127, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i8* %1, metadata !6128, metadata !DIExpression()), !dbg !6131
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6132
  %5 = load i24, i24* %4, align 4, !dbg !6133
  %6 = or i24 %5, 128, !dbg !6133
  store i24 %6, i24* %4, align 4, !dbg !6133
  call void @llvm.dbg.value(metadata i8* %1, metadata !6128, metadata !DIExpression()), !dbg !6131
  %7 = load i8, i8* %1, align 1, !dbg !6134
  %8 = icmp eq i8 %7, 42, !dbg !6136
  br i1 %8, label %9, label %12, !dbg !6137

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6138
  store i24 %10, i24* %4, align 4, !dbg !6138
  call void @llvm.dbg.value(metadata i8* %1, metadata !6128, metadata !DIExpression()), !dbg !6131
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6140
  call void @llvm.dbg.value(metadata i8* %11, metadata !6128, metadata !DIExpression()), !dbg !6131
  store i8* %11, i8** %3, align 4, !dbg !6140
  br label %29, !dbg !6141

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6129, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i8** %3, metadata !6128, metadata !DIExpression(DW_OP_deref)), !dbg !6131
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6142
  call void @llvm.dbg.value(metadata i32 %13, metadata !6130, metadata !DIExpression()), !dbg !6131
  %14 = load i8*, i8** %3, align 4, !dbg !6143
  call void @llvm.dbg.value(metadata i8* %14, metadata !6128, metadata !DIExpression()), !dbg !6131
  %15 = icmp eq i8* %14, %1, !dbg !6145
  br i1 %15, label %29, label %16, !dbg !6146

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6147
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6149
  store i32 %13, i32* %18, align 4, !dbg !6150
  %19 = lshr i32 %13, 31, !dbg !6151
  %20 = lshr i24 %17, 1, !dbg !6152
  %21 = and i24 %20, 1, !dbg !6152
  %22 = zext i24 %21 to i32, !dbg !6152
  %23 = or i32 %19, %22, !dbg !6152
  %24 = trunc i32 %23 to i24, !dbg !6152
  %25 = shl nuw nsw i24 %24, 1, !dbg !6152
  %26 = and i24 %17, -131, !dbg !6152
  %27 = or i24 %26, 128, !dbg !6152
  %28 = or i24 %25, %27, !dbg !6152
  store i24 %28, i24* %4, align 4, !dbg !6152
  br label %29, !dbg !6153

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6131
  ret i8* %30, !dbg !6154
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6155 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6157, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i8* %1, metadata !6158, metadata !DIExpression()), !dbg !6160
  %4 = load i8, i8* %1, align 1, !dbg !6161
  %5 = icmp eq i8 %4, 46, !dbg !6162
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6163
  %7 = load i24, i24* %6, align 4, !dbg !6164
  %8 = select i1 %5, i24 512, i24 0, !dbg !6164
  %9 = and i24 %7, -513, !dbg !6164
  %10 = or i24 %9, %8, !dbg !6164
  store i24 %10, i24* %6, align 4, !dbg !6164
  br i1 %5, label %11, label %32, !dbg !6165

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6158, metadata !DIExpression()), !dbg !6160
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6166
  call void @llvm.dbg.value(metadata i8* %12, metadata !6158, metadata !DIExpression()), !dbg !6160
  store i8* %12, i8** %3, align 4, !dbg !6166
  %13 = load i8, i8* %12, align 1, !dbg !6167
  %14 = icmp eq i8 %13, 42, !dbg !6169
  br i1 %14, label %15, label %18, !dbg !6170

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6171
  store i24 %16, i24* %6, align 4, !dbg !6171
  call void @llvm.dbg.value(metadata i8* %12, metadata !6158, metadata !DIExpression()), !dbg !6160
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6173
  call void @llvm.dbg.value(metadata i8* %17, metadata !6158, metadata !DIExpression()), !dbg !6160
  store i8* %17, i8** %3, align 4, !dbg !6173
  br label %32, !dbg !6174

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6158, metadata !DIExpression(DW_OP_deref)), !dbg !6160
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6175
  call void @llvm.dbg.value(metadata i32 %19, metadata !6159, metadata !DIExpression()), !dbg !6160
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6176
  store i32 %19, i32* %20, align 4, !dbg !6177
  %21 = lshr i32 %19, 31, !dbg !6178
  %22 = load i24, i24* %6, align 4, !dbg !6179
  %23 = lshr i24 %22, 1, !dbg !6179
  %24 = and i24 %23, 1, !dbg !6179
  %25 = zext i24 %24 to i32, !dbg !6179
  %26 = or i32 %21, %25, !dbg !6179
  %27 = trunc i32 %26 to i24, !dbg !6179
  %28 = shl nuw nsw i24 %27, 1, !dbg !6179
  %29 = and i24 %22, -3, !dbg !6179
  %30 = or i24 %28, %29, !dbg !6179
  store i24 %30, i24* %6, align 4, !dbg !6179
  %31 = load i8*, i8** %3, align 4, !dbg !6180
  call void @llvm.dbg.value(metadata i8* %31, metadata !6158, metadata !DIExpression()), !dbg !6160
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6160
  ret i8* %33, !dbg !6181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6182 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6184, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.value(metadata i8* %1, metadata !6185, metadata !DIExpression()), !dbg !6186
  %3 = load i8, i8* %1, align 1, !dbg !6187
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6188

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6189
  call void @llvm.dbg.value(metadata i8* %5, metadata !6185, metadata !DIExpression()), !dbg !6186
  %6 = load i8, i8* %5, align 1, !dbg !6192
  %7 = icmp eq i8 %6, 104, !dbg !6193
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6194
  %9 = load i24, i24* %8, align 4, !dbg !6194
  %10 = and i24 %9, -30721, !dbg !6194
  br i1 %7, label %11, label %14, !dbg !6195

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6196
  store i24 %12, i24* %8, align 4, !dbg !6196
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6198
  call void @llvm.dbg.value(metadata i8* %13, metadata !6185, metadata !DIExpression()), !dbg !6186
  br label %56, !dbg !6199

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6200
  store i24 %15, i24* %8, align 4, !dbg !6200
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6202
  call void @llvm.dbg.value(metadata i8* %17, metadata !6185, metadata !DIExpression()), !dbg !6186
  %18 = load i8, i8* %17, align 1, !dbg !6204
  %19 = icmp eq i8 %18, 108, !dbg !6205
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6206
  %21 = load i24, i24* %20, align 4, !dbg !6206
  %22 = and i24 %21, -30721, !dbg !6206
  br i1 %19, label %23, label %26, !dbg !6207

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6208
  store i24 %24, i24* %20, align 4, !dbg !6208
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6210
  call void @llvm.dbg.value(metadata i8* %25, metadata !6185, metadata !DIExpression()), !dbg !6186
  br label %56, !dbg !6211

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6212
  store i24 %27, i24* %20, align 4, !dbg !6212
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6214
  %30 = load i24, i24* %29, align 4, !dbg !6215
  %31 = and i24 %30, -30721, !dbg !6215
  %32 = or i24 %31, 10240, !dbg !6215
  store i24 %32, i24* %29, align 4, !dbg !6215
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6216
  call void @llvm.dbg.value(metadata i8* %33, metadata !6185, metadata !DIExpression()), !dbg !6186
  br label %56, !dbg !6217

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6218
  %36 = load i24, i24* %35, align 4, !dbg !6219
  %37 = and i24 %36, -30721, !dbg !6219
  %38 = or i24 %37, 12288, !dbg !6219
  store i24 %38, i24* %35, align 4, !dbg !6219
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6220
  call void @llvm.dbg.value(metadata i8* %39, metadata !6185, metadata !DIExpression()), !dbg !6186
  br label %56, !dbg !6221

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6222
  %42 = load i24, i24* %41, align 4, !dbg !6223
  %43 = and i24 %42, -30721, !dbg !6223
  %44 = or i24 %43, 14336, !dbg !6223
  store i24 %44, i24* %41, align 4, !dbg !6223
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6224
  call void @llvm.dbg.value(metadata i8* %45, metadata !6185, metadata !DIExpression()), !dbg !6186
  br label %56, !dbg !6225

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6226
  %48 = load i24, i24* %47, align 4, !dbg !6227
  %49 = and i24 %48, -30723, !dbg !6227
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6228
  call void @llvm.dbg.value(metadata i8* %50, metadata !6185, metadata !DIExpression()), !dbg !6186
  %51 = or i24 %49, 16386, !dbg !6229
  store i24 %51, i24* %47, align 4, !dbg !6229
  br label %56, !dbg !6230

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6231
  %54 = load i24, i24* %53, align 4, !dbg !6232
  %55 = and i24 %54, -30721, !dbg !6232
  store i24 %55, i24* %53, align 4, !dbg !6232
  br label %56, !dbg !6233

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6185, metadata !DIExpression()), !dbg !6186
  ret i8* %57, !dbg !6234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6235 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6237, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.value(metadata i8* %1, metadata !6238, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.value(metadata i8 0, metadata !6239, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.value(metadata i8* %1, metadata !6238, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6242
  %3 = load i8, i8* %1, align 1, !dbg !6243
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6244
  store i8 %3, i8* %4, align 1, !dbg !6245
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6246

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6247

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6248
  %9 = load i24, i24* %8, align 4, !dbg !6248
  %10 = and i24 %9, -458753, !dbg !6248
  %11 = or i24 %10, %7, !dbg !6248
  call void @llvm.dbg.label(metadata !6240), !dbg !6249
  %12 = and i24 %9, 30720, !dbg !6250
  %13 = icmp eq i24 %12, 16384, !dbg !6250
  %14 = zext i1 %13 to i24, !dbg !6252
  %15 = or i24 %11, %14, !dbg !6252
  %16 = icmp eq i8 %3, 99, !dbg !6253
  br i1 %16, label %17, label %43, !dbg !6255

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6256
  %19 = icmp ne i24 %18, 0, !dbg !6256
  call void @llvm.dbg.value(metadata i1 %19, metadata !6239, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6242
  br label %43, !dbg !6258

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6259
  %22 = load i24, i24* %21, align 4, !dbg !6260
  %23 = and i24 %22, -458753, !dbg !6260
  %24 = or i24 %23, 262144, !dbg !6260
  call void @llvm.dbg.value(metadata i8 1, metadata !6239, metadata !DIExpression()), !dbg !6242
  br label %43, !dbg !6261

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6264
  %27 = load i24, i24* %26, align 4, !dbg !6265
  %28 = and i24 %27, -458753, !dbg !6265
  %29 = or i24 %28, 196608, !dbg !6265
  %30 = and i24 %27, 30720, !dbg !6266
  %31 = icmp eq i24 %30, 16384, !dbg !6266
  br label %43, !dbg !6268

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6269
  %34 = load i24, i24* %33, align 4, !dbg !6270
  %35 = and i24 %34, -458753, !dbg !6270
  %36 = or i24 %35, 196608, !dbg !6270
  %37 = and i24 %34, 30720, !dbg !6271
  %38 = icmp ne i24 %37, 0, !dbg !6271
  br label %43, !dbg !6273

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6274
  %41 = load i24, i24* %40, align 4, !dbg !6275
  %42 = or i24 %41, 1, !dbg !6275
  br label %43, !dbg !6276

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6277
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6278
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6279
  call void @llvm.dbg.value(metadata i8* %48, metadata !6238, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.value(metadata i8 poison, metadata !6239, metadata !DIExpression()), !dbg !6242
  %49 = lshr i24 %44, 1, !dbg !6277
  %50 = and i24 %49, 1, !dbg !6277
  %51 = zext i24 %50 to i32, !dbg !6277
  %52 = or i32 %51, %47, !dbg !6277
  %53 = trunc i32 %52 to i24, !dbg !6277
  %54 = shl nuw nsw i24 %53, 1, !dbg !6277
  %55 = and i24 %44, -3, !dbg !6277
  %56 = or i24 %54, %55, !dbg !6277
  store i24 %56, i24* %46, align 4, !dbg !6277
  ret i8* %48, !dbg !6280
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6281 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6285, metadata !DIExpression()), !dbg !6288
  %2 = load i8*, i8** %0, align 4, !dbg !6289
  call void @llvm.dbg.value(metadata i8* %2, metadata !6286, metadata !DIExpression()), !dbg !6288
  call void @llvm.dbg.value(metadata i32 0, metadata !6287, metadata !DIExpression()), !dbg !6288
  %3 = load i8, i8* %2, align 1, !dbg !6290
  %4 = zext i8 %3 to i32, !dbg !6291
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6292
  %6 = icmp eq i32 %5, 0, !dbg !6293
  br i1 %6, label %19, label %7, !dbg !6293

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6287, metadata !DIExpression()), !dbg !6288
  call void @llvm.dbg.value(metadata i8* %10, metadata !6286, metadata !DIExpression()), !dbg !6288
  %11 = mul i32 %9, 10, !dbg !6294
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6296
  call void @llvm.dbg.value(metadata i8* %12, metadata !6286, metadata !DIExpression()), !dbg !6288
  %13 = add i32 %11, -48, !dbg !6297
  %14 = add i32 %13, %8, !dbg !6298
  call void @llvm.dbg.value(metadata i32 %14, metadata !6287, metadata !DIExpression()), !dbg !6288
  %15 = load i8, i8* %12, align 1, !dbg !6290
  %16 = zext i8 %15 to i32, !dbg !6291
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6292
  %18 = icmp eq i32 %17, 0, !dbg !6293
  br i1 %18, label %19, label %7, !dbg !6293, !llvm.loop !6299

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6288
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6288
  store i8* %20, i8** %0, align 4, !dbg !6301
  ret i32 %21, !dbg !6302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6305, metadata !DIExpression()), !dbg !6306
  %2 = add i32 %0, -48, !dbg !6307
  %3 = icmp ult i32 %2, 10, !dbg !6308
  %4 = zext i1 %3 to i32, !dbg !6308
  ret i32 %4, !dbg !6309
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6310 {
  tail call void asm sideeffect ".globl\09CONFIG_BM_MESSAGE_SIZE\0A\09.equ\09CONFIG_BM_MESSAGE_SIZE,256\0A\09.type\09CONFIG_BM_MESSAGE_SIZE,%object", ""() #25, !dbg !6312, !srcloc !6313
  tail call void asm sideeffect ".globl\09CONFIG_BM_ONE_TO\0A\09.equ\09CONFIG_BM_ONE_TO,8\0A\09.type\09CONFIG_BM_ONE_TO,%object", ""() #25, !dbg !6314, !srcloc !6315
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6316, !srcloc !6317
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6318, !srcloc !6319
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6320, !srcloc !6321
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,1024\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #25, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #25, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #25, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #25, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #25, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #25, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #25, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #25, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #25, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #25, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #25, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #25, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6844, !srcloc !6845
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6846, !srcloc !6847
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6848, !srcloc !6849
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6850, !srcloc !6851
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6852, !srcloc !6853
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6854, !srcloc !6855
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6856, !srcloc !6857
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6858, !srcloc !6859
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6860, !srcloc !6861
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6862, !srcloc !6863
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6864, !srcloc !6865
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6866, !srcloc !6867
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6868, !srcloc !6869
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6872, !srcloc !6873
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #25, !dbg !6874, !srcloc !6875
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #25, !dbg !6876, !srcloc !6877
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #25, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #25, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #25, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6936, !srcloc !6937
  ret void, !dbg !6938
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6939 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6941, metadata !DIExpression()), !dbg !6943
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6944, !srcloc !6953
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6944
  call void @llvm.dbg.value(metadata i32 %3, metadata !6950, metadata !DIExpression()) #25, !dbg !6954
  call void @llvm.dbg.value(metadata i32 undef, metadata !6951, metadata !DIExpression()) #25, !dbg !6954
  call void @llvm.dbg.value(metadata i32 %3, metadata !6942, metadata !DIExpression()), !dbg !6943
  call void @llvm.dbg.value(metadata i32 %3, metadata !6955, metadata !DIExpression()) #25, !dbg !6960
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6962, !srcloc !6963
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !6964
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !6965
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #26, !dbg !6966
  ret i32 0, !dbg !6967
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #16 !dbg !6968 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !6973, metadata !DIExpression()), !dbg !6975
  %2 = bitcast i32* %1 to i8*, !dbg !6976
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6976
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6974, metadata !DIExpression()), !dbg !6977
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6978
  %4 = or i32 %3, 268435456, !dbg !6978
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6978
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6979
  %6 = and i32 %5, 268435456, !dbg !6979
  store volatile i32 %6, i32* %1, align 4, !dbg !6980
  %7 = load volatile i32, i32* %1, align 4, !dbg !6981
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6982
  ret void, !dbg !6982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #17 !dbg !6983 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !6986, metadata !DIExpression()), !dbg !6987
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !6988
  %2 = and i32 %1, -6145, !dbg !6988
  %3 = or i32 %2, 2048, !dbg !6988
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !6988
  ret void, !dbg !6989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !6990 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6992, metadata !DIExpression()), !dbg !6993
  ret i32 0, !dbg !6994
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6995 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6998, metadata !DIExpression()), !dbg !7006
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7007
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7007
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6999, metadata !DIExpression()), !dbg !7008
  call void @llvm.va_start(i8* nonnull %3), !dbg !7009
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7010
  %5 = load i32, i32* %4, align 4, !dbg !7010
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7010
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7010
  call void @llvm.va_end(i8* nonnull %3), !dbg !7011
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7012
  ret void, !dbg !7012
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7013 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7018, metadata !DIExpression()), !dbg !7019
  call void @llvm.dbg.value(metadata i8* %0, metadata !7017, metadata !DIExpression()), !dbg !7019
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7020
  ret void, !dbg !7021
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7026, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i8* %1, metadata !7027, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %2, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i8* %1, metadata !7029, metadata !DIExpression()), !dbg !7030
  %4 = icmp eq i32 %2, 0, !dbg !7031
  br i1 %4, label %14, label %5, !dbg !7032

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.20(i32 noundef %0) #26, !dbg !7030
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7032

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7029, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %10, metadata !7028, metadata !DIExpression()), !dbg !7030
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i32 noundef %7) #27, !dbg !7033
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !7035
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7036
  call void @llvm.dbg.value(metadata i32 %11, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i8* %12, metadata !7029, metadata !DIExpression()), !dbg !7030
  br i1 %13, label %14, label %8, !dbg !7036, !llvm.loop !7037

14:                                               ; preds = %8, %3
  ret void, !dbg !7039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.20(i32 noundef %0) unnamed_addr #5 !dbg !7040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7042, metadata !DIExpression()), !dbg !7043
  %2 = add i32 %0, -1, !dbg !7044
  %3 = icmp ult i32 %2, 4, !dbg !7044
  %4 = shl i32 %2, 3, !dbg !7044
  %5 = lshr i32 1145657157, %4, !dbg !7044
  %6 = trunc i32 %5 to i8, !dbg !7044
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7044
  ret i8 %7, !dbg !7045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7046 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7050, metadata !DIExpression()), !dbg !7061
  call void @llvm.dbg.value(metadata i32 %1, metadata !7051, metadata !DIExpression()), !dbg !7061
  call void @llvm.dbg.value(metadata i32 0, metadata !7052, metadata !DIExpression()), !dbg !7062
  br label %4, !dbg !7063

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.22, i32 0, i32 0)) #27, !dbg !7064
  call void @llvm.dbg.value(metadata i32 0, metadata !7054, metadata !DIExpression()), !dbg !7065
  br label %16, !dbg !7066

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7052, metadata !DIExpression()), !dbg !7062
  %6 = icmp ult i32 %5, %1, !dbg !7067
  br i1 %6, label %7, label %11, !dbg !7071

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7072
  %9 = load i8, i8* %8, align 1, !dbg !7072
  %10 = zext i8 %9 to i32, !dbg !7074
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.23, i32 0, i32 0), i32 noundef %10) #27, !dbg !7075
  br label %12, !dbg !7076

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.24, i32 0, i32 0)) #27, !dbg !7077
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7079
  call void @llvm.dbg.value(metadata i32 %13, metadata !7052, metadata !DIExpression()), !dbg !7062
  %14 = icmp eq i32 %13, 8, !dbg !7080
  br i1 %14, label %3, label %4, !dbg !7063, !llvm.loop !7081

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.25, i32 0, i32 0)) #27, !dbg !7083
  ret void, !dbg !7084

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7054, metadata !DIExpression()), !dbg !7065
  %18 = icmp ult i32 %17, %1, !dbg !7085
  br i1 %18, label %19, label %26, !dbg !7086

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7087
  %21 = load i8, i8* %20, align 1, !dbg !7087
  call void @llvm.dbg.value(metadata i8 %21, metadata !7056, metadata !DIExpression()), !dbg !7088
  %22 = zext i8 %21 to i32, !dbg !7089
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !7090
  %24 = icmp eq i32 %23, 0, !dbg !7091
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7090
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.26, i32 0, i32 0), i32 noundef %25) #27, !dbg !7092
  br label %27, !dbg !7093

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.27, i32 0, i32 0)) #27, !dbg !7094
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7096
  call void @llvm.dbg.value(metadata i32 %28, metadata !7054, metadata !DIExpression()), !dbg !7065
  %29 = icmp eq i32 %28, 8, !dbg !7097
  br i1 %29, label %15, label %16, !dbg !7066, !llvm.loop !7098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7102, metadata !DIExpression()), !dbg !7103
  %2 = add i32 %0, -32, !dbg !7104
  %3 = icmp ult i32 %2, 95, !dbg !7104
  %4 = zext i1 %3 to i32, !dbg !7104
  ret i32 %4, !dbg !7105
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7155, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7156, metadata !DIExpression()), !dbg !7157
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7158
  br i1 %3, label %5, label %4, !dbg !7160

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !7161
  br label %5, !dbg !7163

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !7164
  ret void, !dbg !7165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7166 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7170, metadata !DIExpression()), !dbg !7171
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7172
  %3 = load i32, i32* %2, align 4, !dbg !7172
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7172
  %5 = load i32, i32* %4, align 4, !dbg !7172
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7172
  %7 = load i32, i32* %6, align 4, !dbg !7172
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !7172
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7177
  %9 = load i32, i32* %8, align 4, !dbg !7177
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7177
  %11 = load i32, i32* %10, align 4, !dbg !7177
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7177
  %13 = load i32, i32* %12, align 4, !dbg !7177
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.29, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !7177
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7182
  %15 = load i32, i32* %14, align 4, !dbg !7182
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.30, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !7182
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7187
  %17 = load i32, i32* %16, align 4, !dbg !7187
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.31, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7187
  ret void, !dbg !7192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7193 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7210, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7211, metadata !DIExpression()), !dbg !7213
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7214
  %4 = load i32, i32* %3, align 4, !dbg !7214
  call void @llvm.dbg.value(metadata i32 %4, metadata !7212, metadata !DIExpression()), !dbg !7213
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !7215
  ret void, !dbg !7216
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !7217 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7221, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.value(metadata i8* %0, metadata !7222, metadata !DIExpression()), !dbg !7224
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7225
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !7225
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7223, metadata !DIExpression()), !dbg !7226
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7226
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7227
  %5 = bitcast i8* %4 to i32*, !dbg !7227
  %6 = load i32, i32* %5, align 4, !dbg !7227
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7228
  store i32 %6, i32* %7, align 4, !dbg !7229
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !7230
  unreachable, !dbg !7231
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7235, metadata !DIExpression()), !dbg !7236
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !7237
  ret void, !dbg !7238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7243, metadata !DIExpression()), !dbg !7244
  %2 = icmp sgt i32 %0, -1, !dbg !7245
  br i1 %2, label %3, label %8, !dbg !7247

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7248, !srcloc !7250
  %4 = and i32 %0, 31, !dbg !7251
  %5 = shl nuw i32 1, %4, !dbg !7252
  %6 = lshr i32 %0, 5, !dbg !7253
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7254
  store volatile i32 %5, i32* %7, align 4, !dbg !7255
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7256, !srcloc !7257
  br label %8, !dbg !7258

8:                                                ; preds = %3, %1
  ret void, !dbg !7259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7260 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7262, metadata !DIExpression()), !dbg !7263
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !7264
  ret void, !dbg !7265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7268, metadata !DIExpression()), !dbg !7269
  %2 = icmp sgt i32 %0, -1, !dbg !7270
  br i1 %2, label %3, label %8, !dbg !7272

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7273
  %5 = shl nuw i32 1, %4, !dbg !7275
  %6 = lshr i32 %0, 5, !dbg !7276
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7277
  store volatile i32 %5, i32* %7, align 4, !dbg !7278
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7279, !srcloc !7283
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7284, !srcloc !7287
  br label %8, !dbg !7288

8:                                                ; preds = %3, %1
  ret void, !dbg !7289
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #18 !dbg !7290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7294, metadata !DIExpression()), !dbg !7295
  %2 = lshr i32 %0, 5, !dbg !7296
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7297
  %4 = load volatile i32, i32* %3, align 4, !dbg !7297
  %5 = and i32 %0, 31, !dbg !7298
  %6 = shl nuw i32 1, %5, !dbg !7298
  %7 = and i32 %4, %6, !dbg !7299
  ret i32 %7, !dbg !7300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !7301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7305, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.value(metadata i32 %1, metadata !7306, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.value(metadata i32 %2, metadata !7307, metadata !DIExpression()), !dbg !7308
  %4 = add i32 %1, 1, !dbg !7309
  call void @llvm.dbg.value(metadata i32 %4, metadata !7306, metadata !DIExpression()), !dbg !7308
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !7312
  ret void, !dbg !7313
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !7314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7318, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i32 %1, metadata !7319, metadata !DIExpression()), !dbg !7320
  %3 = trunc i32 %1 to i8, !dbg !7321
  %4 = shl i8 %3, 4, !dbg !7321
  %5 = and i32 %0, 15, !dbg !7323
  %6 = add nsw i32 %5, -4, !dbg !7323
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7323
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7323
  %9 = icmp slt i32 %0, 0, !dbg !7323
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7323
  store volatile i8 %4, i8* %10, align 1, !dbg !7321
  ret void, !dbg !7324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7325 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7327, metadata !DIExpression()), !dbg !7328
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !7329
  ret void, !dbg !7330
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7331 {
  tail call void @z_SysNmiOnReset() #27, !dbg !7333
  tail call void @z_arm_int_exit() #27, !dbg !7334
  ret void, !dbg !7335
}

; Function Attrs: optsize
declare !dbg !7336 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7337 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !7339 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !7341
  tail call void @z_bss_zero() #27, !dbg !7342
  tail call void @z_data_copy() #27, !dbg !7343
  tail call void @z_arm_interrupt_init() #27, !dbg !7344
  tail call void @z_cstart() #29, !dbg !7345
  unreachable, !dbg !7345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7346 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7347
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7348, !srcloc !7351
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7352, !srcloc !7355
  ret void, !dbg !7356
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7360, metadata !DIExpression()), !dbg !7361
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7362
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7363
  store i32 %0, i32* %3, align 4, !dbg !7364
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7365
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7366
  store i32 %4, i32* %5, align 4, !dbg !7367
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7368
  %7 = or i32 %6, 268435456, !dbg !7368
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7368
  call void @llvm.dbg.value(metadata i32 0, metadata !7369, metadata !DIExpression()) #25, !dbg !7372
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7374, !srcloc !7375
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7376
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7377
  %10 = load i32, i32* %9, align 4, !dbg !7377
  ret i32 %10, !dbg !7378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #8 !dbg !7379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7489, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7490, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata i8* %2, metadata !7491, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7492, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata i8* %4, metadata !7493, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata i8* %5, metadata !7494, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata i8* %6, metadata !7495, metadata !DIExpression()), !dbg !7497
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7498
  call void @llvm.dbg.value(metadata i8* %8, metadata !7496, metadata !DIExpression()), !dbg !7497
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7499
  %10 = bitcast i8* %9 to i32*, !dbg !7499
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7500
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7501
  %12 = bitcast i8* %8 to i32*, !dbg !7502
  store i32 %11, i32* %12, align 4, !dbg !7503
  %13 = ptrtoint i8* %4 to i32, !dbg !7504
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7505
  %15 = bitcast i8* %14 to i32*, !dbg !7505
  store i32 %13, i32* %15, align 4, !dbg !7506
  %16 = ptrtoint i8* %5 to i32, !dbg !7507
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7508
  %18 = bitcast i8* %17 to i32*, !dbg !7508
  store i32 %16, i32* %18, align 4, !dbg !7509
  %19 = ptrtoint i8* %6 to i32, !dbg !7510
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7511
  %21 = bitcast i8* %20 to i32*, !dbg !7511
  store i32 %19, i32* %21, align 4, !dbg !7512
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7513
  %23 = bitcast i8* %22 to i32*, !dbg !7513
  store i32 16777216, i32* %23, align 4, !dbg !7514
  %24 = ptrtoint i8* %8 to i32, !dbg !7515
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7516
  store i32 %24, i32* %25, align 8, !dbg !7517
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7518
  store i32 0, i32* %26, align 4, !dbg !7519
  ret void, !dbg !7520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !7521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7526, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata i32 %1, metadata !7527, metadata !DIExpression()), !dbg !7532
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7533
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7528, metadata !DIExpression()), !dbg !7532
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7534
  br i1 %4, label %19, label %5, !dbg !7536

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7531, metadata !DIExpression()), !dbg !7532
  %6 = icmp eq i32 %0, -22, !dbg !7537
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7537
  %8 = load i32, i32* %7, align 4, !dbg !7537
  br i1 %6, label %16, label %9, !dbg !7539

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7537
  %11 = icmp ule i32 %10, %0, !dbg !7537
  %12 = icmp ugt i32 %8, %0, !dbg !7537
  %13 = and i1 %12, %11, !dbg !7537
  %14 = icmp ugt i32 %8, %1, !dbg !7537
  %15 = and i1 %14, %13, !dbg !7537
  br i1 %15, label %18, label %19, !dbg !7537

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7537
  br i1 %17, label %18, label %19, !dbg !7539

18:                                               ; preds = %9, %16
  br label %19, !dbg !7540

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7532
  ret i32 %20, !dbg !7542
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !7543 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7547, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.value(metadata i8* %1, metadata !7548, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7549, metadata !DIExpression()), !dbg !7550
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7551
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !7552
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !7553, !srcloc !7554
  unreachable, !dbg !7555
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7556 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7574, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata i32 %1, metadata !7575, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata i32 %2, metadata !7576, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7577, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata i32 0, metadata !7578, metadata !DIExpression()), !dbg !7584
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7585
  %9 = and i32 %8, 511, !dbg !7586
  call void @llvm.dbg.value(metadata i32 %9, metadata !7579, metadata !DIExpression()), !dbg !7584
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !7587
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !7587
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7588
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !7588
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7583, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i32 0, metadata !7590, metadata !DIExpression()) #25, !dbg !7593
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7595, !srcloc !7596
  call void @llvm.dbg.value(metadata i8* %6, metadata !7581, metadata !DIExpression(DW_OP_deref)), !dbg !7584
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7597
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7582, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.value(metadata i8* %5, metadata !7580, metadata !DIExpression(DW_OP_deref)), !dbg !7584
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7598
  call void @llvm.dbg.value(metadata i32 %12, metadata !7578, metadata !DIExpression()), !dbg !7584
  %13 = load i8, i8* %5, align 1, !dbg !7599, !range !7601
  call void @llvm.dbg.value(metadata i8 %13, metadata !7580, metadata !DIExpression()), !dbg !7584
  %14 = icmp eq i8 %13, 0, !dbg !7599
  br i1 %14, label %15, label %32, !dbg !7602

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7603
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !7604
  %18 = load i8, i8* %6, align 1, !dbg !7605, !range !7601
  call void @llvm.dbg.value(metadata i8 %18, metadata !7581, metadata !DIExpression()), !dbg !7584
  %19 = icmp eq i8 %18, 0, !dbg !7605
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7607
  %21 = load i32, i32* %20, align 4, !dbg !7607
  br i1 %19, label %27, label %22, !dbg !7608

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7609
  %24 = icmp eq i32 %23, 0, !dbg !7612
  br i1 %24, label %25, label %31, !dbg !7613

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7614
  br label %29, !dbg !7616

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7617
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7607
  br label %31, !dbg !7619

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !7619
  br label %32, !dbg !7620

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !7620
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !7620
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !7620
  ret void, !dbg !7620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7626, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata i32 %1, metadata !7627, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata i32 %2, metadata !7628, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata i8* %3, metadata !7629, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata i8 0, metadata !7630, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7631, metadata !DIExpression()), !dbg !7632
  store i8 0, i8* %3, align 1, !dbg !7633
  %5 = icmp ugt i32 %2, -16777217, !dbg !7634
  br i1 %5, label %6, label %17, !dbg !7636

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7637
  %8 = icmp eq i32 %7, 8, !dbg !7637
  br i1 %8, label %9, label %10, !dbg !7637

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.45, i32 0, i32 0), i32 noundef 69) #27, !dbg !7639
  br label %17, !dbg !7645

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7646
  %12 = icmp eq i32 %11, 0, !dbg !7646
  br i1 %12, label %13, label %14, !dbg !7647

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7631, metadata !DIExpression()), !dbg !7632
  store i8 1, i8* %3, align 1, !dbg !7650
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7632
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7631, metadata !DIExpression()), !dbg !7632
  br label %17, !dbg !7653

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7632
  ret %struct.__esf* %18, !dbg !7654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7655 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7659, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata i32 %1, metadata !7660, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata i8* %2, metadata !7661, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata i32 0, metadata !7662, metadata !DIExpression()), !dbg !7663
  store i8 0, i8* %2, align 1, !dbg !7664
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7665

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7666
  call void @llvm.dbg.value(metadata i32 %5, metadata !7662, metadata !DIExpression()), !dbg !7663
  br label %12, !dbg !7668

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7669
  call void @llvm.dbg.value(metadata i32 %7, metadata !7662, metadata !DIExpression()), !dbg !7663
  br label %12, !dbg !7670

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7671
  call void @llvm.dbg.value(metadata i32 0, metadata !7662, metadata !DIExpression()), !dbg !7663
  br label %12, !dbg !7672

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7673
  call void @llvm.dbg.value(metadata i32 0, metadata !7662, metadata !DIExpression()), !dbg !7663
  br label %12, !dbg !7674

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7675
  br label %12, !dbg !7676

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !7677
  br label %12, !dbg !7678

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7663
  call void @llvm.dbg.value(metadata i32 %13, metadata !7662, metadata !DIExpression()), !dbg !7663
  ret i32 %13, !dbg !7679
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7680 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7684, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.value(metadata i8* %1, metadata !7685, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.value(metadata i32 0, metadata !7686, metadata !DIExpression()), !dbg !7687
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 69) #27, !dbg !7688
  store i8 0, i8* %1, align 1, !dbg !7693
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7694
  %4 = and i32 %3, 2, !dbg !7696
  %5 = icmp eq i32 %4, 0, !dbg !7697
  br i1 %5, label %7, label %6, !dbg !7698

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 69) #27, !dbg !7699
  br label %36, !dbg !7705

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7706
  %9 = icmp sgt i32 %8, -1, !dbg !7708
  br i1 %9, label %11, label %10, !dbg !7709

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.42, i32 0, i32 0), i32 noundef 69) #27, !dbg !7710
  br label %36, !dbg !7716

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7717
  %13 = and i32 %12, 1073741824, !dbg !7719
  %14 = icmp eq i32 %13, 0, !dbg !7720
  br i1 %14, label %36, label %15, !dbg !7721

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.43, i32 0, i32 0), i32 noundef 69) #27, !dbg !7722
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7728
  br i1 %16, label %17, label %21, !dbg !7730

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7731
  %19 = load i32, i32* %18, align 4, !dbg !7731
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.44, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !7731
  %20 = load i32, i32* %18, align 4, !dbg !7737
  call void @llvm.dbg.value(metadata i32 %20, metadata !7686, metadata !DIExpression()), !dbg !7687
  br label %36, !dbg !7738

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7739
  %23 = and i32 %22, 255, !dbg !7741
  %24 = icmp eq i32 %23, 0, !dbg !7742
  br i1 %24, label %27, label %25, !dbg !7743

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7744
  call void @llvm.dbg.value(metadata i32 %26, metadata !7686, metadata !DIExpression()), !dbg !7687
  br label %36, !dbg !7746

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7747
  %29 = and i32 %28, 65280, !dbg !7749
  %30 = icmp eq i32 %29, 0, !dbg !7750
  br i1 %30, label %32, label %31, !dbg !7751

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7752
  call void @llvm.dbg.value(metadata i32 0, metadata !7686, metadata !DIExpression()), !dbg !7687
  br label %36, !dbg !7754

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7755
  %34 = icmp ult i32 %33, 65536, !dbg !7757
  br i1 %34, label %36, label %35, !dbg !7758

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !7759
  call void @llvm.dbg.value(metadata i32 0, metadata !7686, metadata !DIExpression()), !dbg !7687
  br label %36, !dbg !7761

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7687
  call void @llvm.dbg.value(metadata i32 %37, metadata !7686, metadata !DIExpression()), !dbg !7687
  ret i32 %37, !dbg !7762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7763 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7765, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32 %1, metadata !7766, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i8* %2, metadata !7767, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32 0, metadata !7768, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32 -22, metadata !7769, metadata !DIExpression()), !dbg !7778
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.38, i32 0, i32 0), i32 noundef 69) #27, !dbg !7779
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7784
  %5 = and i32 %4, 16, !dbg !7786
  %6 = icmp eq i32 %5, 0, !dbg !7787
  br i1 %6, label %8, label %7, !dbg !7788

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.39, i32 0, i32 0), i32 noundef 69) #27, !dbg !7789
  br label %8, !dbg !7795

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7796
  %10 = and i32 %9, 8, !dbg !7798
  %11 = icmp eq i32 %10, 0, !dbg !7799
  br i1 %11, label %13, label %12, !dbg !7800

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.36, i32 0, i32 0), i32 noundef 69) #27, !dbg !7801
  br label %13, !dbg !7807

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7808
  %15 = and i32 %14, 2, !dbg !7809
  %16 = icmp eq i32 %15, 0, !dbg !7810
  br i1 %16, label %27, label %17, !dbg !7811

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i32 noundef 69) #27, !dbg !7812
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7817
  call void @llvm.dbg.value(metadata i32 %18, metadata !7770, metadata !DIExpression()), !dbg !7818
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7819
  %20 = and i32 %19, 128, !dbg !7821
  %21 = icmp eq i32 %20, 0, !dbg !7822
  br i1 %21, label %27, label %22, !dbg !7823

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7769, metadata !DIExpression()), !dbg !7778
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !7824
  %23 = icmp eq i32 %1, 0, !dbg !7830
  br i1 %23, label %27, label %24, !dbg !7832

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7833
  %26 = and i32 %25, -129, !dbg !7833
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7833
  br label %27, !dbg !7835

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7778
  call void @llvm.dbg.value(metadata i32 %28, metadata !7769, metadata !DIExpression()), !dbg !7778
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7836
  %30 = and i32 %29, 1, !dbg !7838
  %31 = icmp eq i32 %30, 0, !dbg !7839
  br i1 %31, label %33, label %32, !dbg !7840

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #27, !dbg !7841
  br label %33, !dbg !7847

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7848
  %35 = and i32 %34, 16, !dbg !7849
  %36 = icmp eq i32 %35, 0, !dbg !7849
  br i1 %36, label %37, label %41, !dbg !7850

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7851
  %39 = and i32 %38, 2, !dbg !7852
  %40 = icmp eq i32 %39, 0, !dbg !7852
  br i1 %40, label %50, label %41, !dbg !7853

41:                                               ; preds = %37, %33
  %42 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7854
  %43 = and i32 %42, 2048, !dbg !7855
  %44 = icmp eq i32 %43, 0, !dbg !7855
  br i1 %44, label %50, label %45, !dbg !7856

45:                                               ; preds = %41
  %46 = ptrtoint %struct.__esf* %0 to i32, !dbg !7857
  %47 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %46) #27, !dbg !7858
  call void @llvm.dbg.value(metadata i32 %47, metadata !7773, metadata !DIExpression()), !dbg !7859
  %48 = icmp eq i32 %47, 0, !dbg !7860
  br i1 %48, label %50, label %49, !dbg !7862

49:                                               ; preds = %45
  call void @llvm.dbg.value(metadata i32 %47, metadata !7863, metadata !DIExpression()) #25, !dbg !7866
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %47) #25, !dbg !7869, !srcloc !7870
  call void @llvm.dbg.value(metadata i32 2, metadata !7768, metadata !DIExpression()), !dbg !7778
  br label %50, !dbg !7871

50:                                               ; preds = %49, %45, %41, %37
  %51 = phi i32 [ 0, %41 ], [ 0, %37 ], [ 2, %49 ], [ 0, %45 ], !dbg !7778
  call void @llvm.dbg.value(metadata i32 %51, metadata !7768, metadata !DIExpression()), !dbg !7778
  %52 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7872
  %53 = or i32 %52, 255, !dbg !7872
  store volatile i32 %53, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7872
  store i8 0, i8* %2, align 1, !dbg !7873
  ret i32 %51, !dbg !7874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7875 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7879, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i32 %0, metadata !7880, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i8* %1, metadata !7881, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i32 0, metadata !7882, metadata !DIExpression()), !dbg !7886
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #27, !dbg !7887
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7892
  %4 = and i32 %3, 4096, !dbg !7894
  %5 = icmp eq i32 %4, 0, !dbg !7894
  br i1 %5, label %7, label %6, !dbg !7895

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #27, !dbg !7896
  br label %7, !dbg !7902

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7903
  %9 = and i32 %8, 2048, !dbg !7905
  %10 = icmp eq i32 %9, 0, !dbg !7905
  br i1 %10, label %12, label %11, !dbg !7906

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.36, i32 0, i32 0), i32 noundef 69) #27, !dbg !7907
  br label %12, !dbg !7913

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7914
  %14 = and i32 %13, 512, !dbg !7915
  %15 = icmp eq i32 %14, 0, !dbg !7915
  br i1 %15, label %26, label %16, !dbg !7916

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #27, !dbg !7917
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7922
  call void @llvm.dbg.value(metadata i32 %17, metadata !7883, metadata !DIExpression()), !dbg !7923
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7924
  %19 = and i32 %18, 32768, !dbg !7926
  %20 = icmp eq i32 %19, 0, !dbg !7927
  br i1 %20, label %26, label %21, !dbg !7928

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15.37, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7929
  %22 = icmp eq i32 %0, 0, !dbg !7935
  br i1 %22, label %26, label %23, !dbg !7937

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7938
  %25 = and i32 %24, -32769, !dbg !7938
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7938
  br label %26, !dbg !7940

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7941
  %28 = and i32 %27, 1024, !dbg !7943
  %29 = icmp eq i32 %28, 0, !dbg !7943
  br i1 %29, label %31, label %30, !dbg !7944

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #27, !dbg !7945
  br label %31, !dbg !7951

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7952
  %33 = and i32 %32, 256, !dbg !7954
  %34 = icmp eq i32 %33, 0, !dbg !7955
  br i1 %34, label %36, label %35, !dbg !7956

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #27, !dbg !7957
  br label %36, !dbg !7963

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7964
  %38 = or i32 %37, 65280, !dbg !7964
  store volatile i32 %38, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7964
  store i8 0, i8* %1, align 1, !dbg !7965
  ret void, !dbg !7966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7967 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7973, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32 0, metadata !7974, metadata !DIExpression()), !dbg !7975
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #27, !dbg !7976
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7981
  %2 = and i32 %1, 33554432, !dbg !7983
  %3 = icmp eq i32 %2, 0, !dbg !7984
  br i1 %3, label %5, label %4, !dbg !7985

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #27, !dbg !7986
  br label %5, !dbg !7992

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7993
  %7 = and i32 %6, 16777216, !dbg !7995
  %8 = icmp eq i32 %7, 0, !dbg !7996
  br i1 %8, label %10, label %9, !dbg !7997

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #27, !dbg !7998
  br label %10, !dbg !8004

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8005
  %12 = and i32 %11, 524288, !dbg !8007
  %13 = icmp eq i32 %12, 0, !dbg !8008
  br i1 %13, label %15, label %14, !dbg !8009

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21.35, i32 0, i32 0), i32 noundef 69) #27, !dbg !8010
  br label %15, !dbg !8016

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8017
  %17 = and i32 %16, 262144, !dbg !8019
  %18 = icmp eq i32 %17, 0, !dbg !8020
  br i1 %18, label %20, label %19, !dbg !8021

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #27, !dbg !8022
  br label %20, !dbg !8028

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8029
  %22 = and i32 %21, 131072, !dbg !8031
  %23 = icmp eq i32 %22, 0, !dbg !8032
  br i1 %23, label %25, label %24, !dbg !8033

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #27, !dbg !8034
  br label %25, !dbg !8040

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8041
  %27 = and i32 %26, 65536, !dbg !8043
  %28 = icmp eq i32 %27, 0, !dbg !8044
  br i1 %28, label %30, label %29, !dbg !8045

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #27, !dbg !8046
  br label %30, !dbg !8052

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8053
  %32 = or i32 %31, -65536, !dbg !8053
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8053
  ret void, !dbg !8054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8055 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8059, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.value(metadata i8* %0, metadata !8060, metadata !DIExpression()), !dbg !8061
  store i8 0, i8* %0, align 1, !dbg !8062
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #27, !dbg !8063
  ret void, !dbg !8068
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8069 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8073, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.value(metadata i32 %0, metadata !8074, metadata !DIExpression()), !dbg !8075
  %2 = icmp slt i32 %0, 16, !dbg !8076
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.28.34, i32 0, i32 0), !dbg !8076
  %4 = add nsw i32 %0, -16, !dbg !8076
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !8076
  ret void, !dbg !8081
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8082 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8086, metadata !DIExpression()), !dbg !8089
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8090
  %3 = load i32, i32* %2, align 4, !dbg !8090
  %4 = inttoptr i32 %3 to i16*, !dbg !8091
  call void @llvm.dbg.value(metadata i16* %4, metadata !8087, metadata !DIExpression()), !dbg !8089
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8092
  %6 = or i32 %5, 256, !dbg !8092
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8092
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8093, !srcloc !8096
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8097, !srcloc !8100
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8101
  %8 = load i16, i16* %7, align 2, !dbg !8102
  call void @llvm.dbg.value(metadata i16 %8, metadata !8088, metadata !DIExpression()), !dbg !8089
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8103
  %10 = and i32 %9, -257, !dbg !8103
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8103
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8104, !srcloc !8096
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8106, !srcloc !8100
  %11 = icmp eq i16 %8, -8446, !dbg !8108
  ret i1 %11, !dbg !8110
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #17 !dbg !8111 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8112
  %2 = or i32 %1, 16, !dbg !8112
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8112
  ret void, !dbg !8113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #17 !dbg !8114 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8117, metadata !DIExpression()), !dbg !8118
  br label %1, !dbg !8119

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8117, metadata !DIExpression()), !dbg !8118
  tail call fastcc void @__NVIC_SetPriority.48(i32 noundef %2) #26, !dbg !8121
  %3 = add nuw nsw i32 %2, 1, !dbg !8124
  call void @llvm.dbg.value(metadata i32 %3, metadata !8117, metadata !DIExpression()), !dbg !8118
  %4 = icmp eq i32 %3, 45, !dbg !8125
  br i1 %4, label %5, label %1, !dbg !8119, !llvm.loop !8126

5:                                                ; preds = %1
  ret void, !dbg !8128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.48(i32 noundef %0) unnamed_addr #17 !dbg !8129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8131, metadata !DIExpression()), !dbg !8133
  call void @llvm.dbg.value(metadata i32 1, metadata !8132, metadata !DIExpression()), !dbg !8133
  %2 = and i32 %0, 15, !dbg !8134
  %3 = add nsw i32 %2, -4, !dbg !8134
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8134
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8134
  %6 = icmp slt i32 %0, 0, !dbg !8134
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8134
  store volatile i8 16, i8* %7, align 1, !dbg !8135
  ret void, !dbg !8137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8138 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8244, metadata !DIExpression()), !dbg !8245
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8246
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8248
  br i1 %3, label %4, label %12, !dbg !8249

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !8250, !srcloc !8262
  call void @llvm.dbg.value(metadata i32 %5, metadata !8253, metadata !DIExpression()) #25, !dbg !8263
  %6 = icmp eq i32 %5, 0, !dbg !8264
  br i1 %6, label %12, label %7, !dbg !8265

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8266
  %9 = or i32 %8, 268435456, !dbg !8266
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8266
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8268
  %11 = and i32 %10, -32769, !dbg !8268
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8268
  br label %12, !dbg !8269

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !8270
  ret void, !dbg !8271
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8272 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !8273
  ret void, !dbg !8274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !498 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !603, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.value(metadata i8 0, metadata !604, metadata !DIExpression()), !dbg !8275
  call void @llvm.dbg.value(metadata i32 64, metadata !606, metadata !DIExpression()), !dbg !8275
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8276
  %3 = load i32, i32* %2, align 4, !dbg !8276
  %4 = add i32 %3, -64, !dbg !8278
  call void @llvm.dbg.value(metadata i32 %4, metadata !605, metadata !DIExpression()), !dbg !8275
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8279
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8280
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8281
  call void @llvm.dbg.value(metadata i8 1, metadata !604, metadata !DIExpression()), !dbg !8275
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !8282
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8284 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8285
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8286, !srcloc !8289
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8290, !srcloc !8293
  ret void, !dbg !8294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8295 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !8296, !srcloc !8299
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8300
  ret void, !dbg !8301
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8302 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8317, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.value(metadata i8 %1, metadata !8318, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.value(metadata i32 %2, metadata !8319, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.value(metadata i32 %3, metadata !8320, metadata !DIExpression()), !dbg !8321
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8322
  ret void, !dbg !8324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8325 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8330, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i8 %1, metadata !8331, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i32 undef, metadata !8332, metadata !DIExpression()), !dbg !8335
  call void @llvm.dbg.value(metadata i32 undef, metadata !8333, metadata !DIExpression()), !dbg !8335
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8336
  call void @llvm.dbg.value(metadata i8 %3, metadata !8334, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8335
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !8337
  call void @llvm.dbg.value(metadata i32 %4, metadata !8334, metadata !DIExpression()), !dbg !8335
  %5 = trunc i32 %4 to i8, !dbg !8338
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8339
  ret void, !dbg !8340
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8341 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8345, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8 %1, metadata !8346, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i8 %2, metadata !8347, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i1 %3, metadata !8348, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8351
  %5 = zext i8 %2 to i32, !dbg !8352
  call void @llvm.dbg.value(metadata i32 %5, metadata !8350, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 0, metadata !8349, metadata !DIExpression()), !dbg !8351
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8350, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 0, metadata !8349, metadata !DIExpression()), !dbg !8351
  %7 = icmp eq i8 %1, 0, !dbg !8353
  br i1 %7, label %30, label %8, !dbg !8356

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8350, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 %10, metadata !8349, metadata !DIExpression()), !dbg !8351
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8357
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8360
  %13 = load i32, i32* %12, align 4, !dbg !8360
  %14 = icmp eq i32 %13, 0, !dbg !8361
  br i1 %14, label %26, label %15, !dbg !8362

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8363

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8365
  %18 = icmp eq i32 %17, 0, !dbg !8365
  br i1 %18, label %19, label %20, !dbg !8366

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.57, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !8367
  br label %30, !dbg !8373

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8374
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8375
  call void @llvm.dbg.value(metadata i32 %22, metadata !8350, metadata !DIExpression()), !dbg !8351
  %23 = icmp eq i32 %22, -22, !dbg !8376
  br i1 %23, label %30, label %24, !dbg !8378

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8379
  call void @llvm.dbg.value(metadata i32 %25, metadata !8350, metadata !DIExpression()), !dbg !8351
  br label %26, !dbg !8380

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8351
  call void @llvm.dbg.value(metadata i32 %27, metadata !8350, metadata !DIExpression()), !dbg !8351
  %28 = add nuw nsw i32 %10, 1, !dbg !8381
  call void @llvm.dbg.value(metadata i32 %28, metadata !8349, metadata !DIExpression()), !dbg !8351
  %29 = icmp eq i32 %28, %6, !dbg !8353
  br i1 %29, label %30, label %8, !dbg !8356, !llvm.loop !8382

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8351
  ret i32 %31, !dbg !8384
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !8385 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8389, metadata !DIExpression()), !dbg !8391
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8392
  %3 = load i32, i32* %2, align 4, !dbg !8392
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8393, !range !4964
  %5 = icmp ult i32 %4, 2, !dbg !8393
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8394
  br i1 %7, label %8, label %15, !dbg !8394

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8395
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8396
  %11 = load i32, i32* %10, align 4, !dbg !8396
  %12 = and i32 %11, %9, !dbg !8397
  %13 = icmp eq i32 %12, 0, !dbg !8398
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8390, metadata !DIExpression()), !dbg !8391
  ret i32 %16, !dbg !8399
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8400 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8404, metadata !DIExpression()), !dbg !8407
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8405, metadata !DIExpression()), !dbg !8407
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8408
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !8408
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8406, metadata !DIExpression()), !dbg !8409
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8410
  %6 = load i32, i32* %5, align 4, !dbg !8410
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8411
  store i32 %6, i32* %7, align 4, !dbg !8412
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8413
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8414
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8415
  %11 = load i32, i32* %10, align 4, !dbg !8415
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !8416
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !8417
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !8418
  ret i32 %12, !dbg !8419
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #12 !dbg !8420 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !8427, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !8428, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32 undef, metadata !8429, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32 %2, metadata !8430, metadata !DIExpression()), !dbg !8431
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !8432
  %5 = load i32, i32* %4, align 4, !dbg !8432
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !8433
  %7 = or i32 %6, %5, !dbg !8434
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !8435
  store i32 %7, i32* %8, align 4, !dbg !8436
  ret void, !dbg !8437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8438 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8442, metadata !DIExpression()), !dbg !8444
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8443, metadata !DIExpression()), !dbg !8444
  %3 = zext i8 %0 to i32, !dbg !8445
  %4 = icmp ugt i8 %0, 7, !dbg !8447
  br i1 %4, label %5, label %6, !dbg !8448

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !8449
  br label %7, !dbg !8455

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !8456
  br label %7, !dbg !8457

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8444
  ret i32 %8, !dbg !8458
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #17 !dbg !8459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8463, metadata !DIExpression()), !dbg !8465
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8464, metadata !DIExpression()), !dbg !8465
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !8466
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8467
  %4 = load i32, i32* %3, align 4, !dbg !8467
  %5 = and i32 %4, -32, !dbg !8468
  %6 = or i32 %5, %0, !dbg !8469
  %7 = or i32 %6, 16, !dbg !8469
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8470
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8471
  %9 = load i32, i32* %8, align 4, !dbg !8471
  %10 = or i32 %9, 1, !dbg !8472
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8473
  ret void, !dbg !8474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #17 !dbg !8475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8478, metadata !DIExpression()), !dbg !8479
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8480
  ret void, !dbg !8481
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !8482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8486, metadata !DIExpression()), !dbg !8487
  %2 = icmp ult i32 %0, 33, !dbg !8488
  br i1 %2, label %11, label %3, !dbg !8490

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8491
  br i1 %4, label %11, label %5, !dbg !8493

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8494
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8495, !range !4964
  %8 = mul nsw i32 %7, -2, !dbg !8496
  %9 = add nsw i32 %8, 62, !dbg !8496
  %10 = and i32 %9, 62, !dbg !8497
  br label %11, !dbg !8498

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8487
  ret i32 %12, !dbg !8499
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8500 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8504, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.value(metadata i8 %1, metadata !8505, metadata !DIExpression()), !dbg !8506
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8507
  ret void, !dbg !8509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8510 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8514, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.value(metadata i8 %1, metadata !8515, metadata !DIExpression()), !dbg !8521
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8522
  call void @llvm.dbg.value(metadata i8 %3, metadata !8516, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8521
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !8523
  call void @llvm.dbg.value(metadata i32 %4, metadata !8516, metadata !DIExpression()), !dbg !8521
  %5 = icmp ne i32 %4, -22, !dbg !8524
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8525
  call void @llvm.dbg.value(metadata i32 %4, metadata !8517, metadata !DIExpression()), !dbg !8526
  br i1 %7, label %8, label %12, !dbg !8525

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8517, metadata !DIExpression()), !dbg !8526
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !8527
  %10 = add i32 %9, 1, !dbg !8530
  call void @llvm.dbg.value(metadata i32 %10, metadata !8517, metadata !DIExpression()), !dbg !8526
  %11 = icmp eq i32 %10, 8, !dbg !8531
  br i1 %11, label %12, label %8, !dbg !8532, !llvm.loop !8533

12:                                               ; preds = %8, %2
  ret void, !dbg !8535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #17 !dbg !8536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8539, metadata !DIExpression()), !dbg !8540
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8541
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8542
  ret void, !dbg !8543
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8544 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8549
  %2 = icmp ugt i32 %1, 8, !dbg !8551
  br i1 %2, label %14, label %3, !dbg !8552

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !8553
  call void @llvm.dbg.value(metadata i32 0, metadata !8548, metadata !DIExpression()), !dbg !8554
  %4 = icmp eq i32 %1, 0, !dbg !8555
  br i1 %4, label %12, label %5, !dbg !8558

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8558

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8548, metadata !DIExpression()), !dbg !8554
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8559
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !8561
  %10 = add nuw i32 %8, 1, !dbg !8562
  call void @llvm.dbg.value(metadata i32 %10, metadata !8548, metadata !DIExpression()), !dbg !8554
  %11 = icmp eq i32 %10, %1, !dbg !8555
  br i1 %11, label %12, label %7, !dbg !8558, !llvm.loop !8563

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8565
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8566
  tail call void @arm_core_mpu_enable() #26, !dbg !8567
  br label %14, !dbg !8568

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8554
  ret i32 %15, !dbg !8569
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8570 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8577, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i8* %1, metadata !8578, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i8* %0, metadata !8579, metadata !DIExpression()), !dbg !8580
  %3 = load i8, i8* %1, align 1, !dbg !8581
  %4 = icmp eq i8 %3, 0, !dbg !8582
  br i1 %4, label %13, label %5, !dbg !8583

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8577, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.value(metadata i8* %8, metadata !8578, metadata !DIExpression()), !dbg !8580
  store i8 %6, i8* %7, align 1, !dbg !8584
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8586
  call void @llvm.dbg.value(metadata i8* %9, metadata !8577, metadata !DIExpression()), !dbg !8580
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8587
  call void @llvm.dbg.value(metadata i8* %10, metadata !8578, metadata !DIExpression()), !dbg !8580
  %11 = load i8, i8* %10, align 1, !dbg !8581
  %12 = icmp eq i8 %11, 0, !dbg !8582
  br i1 %12, label %13, label %5, !dbg !8583, !llvm.loop !8588

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8590
  ret i8* %0, !dbg !8591
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8592 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8596, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i8* %1, metadata !8597, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i32 %2, metadata !8598, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i8* %0, metadata !8599, metadata !DIExpression()), !dbg !8600
  %4 = icmp eq i32 %2, 0, !dbg !8601
  br i1 %4, label %22, label %5, !dbg !8602

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8596, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i32 %7, metadata !8598, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i8* %8, metadata !8597, metadata !DIExpression()), !dbg !8600
  %9 = load i8, i8* %8, align 1, !dbg !8603
  %10 = icmp eq i8 %9, 0, !dbg !8604
  br i1 %10, label %16, label %11, !dbg !8605

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8606
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8608
  call void @llvm.dbg.value(metadata i8* %12, metadata !8597, metadata !DIExpression()), !dbg !8600
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8609
  call void @llvm.dbg.value(metadata i8* %13, metadata !8596, metadata !DIExpression()), !dbg !8600
  %14 = add i32 %7, -1, !dbg !8610
  call void @llvm.dbg.value(metadata i32 %14, metadata !8598, metadata !DIExpression()), !dbg !8600
  %15 = icmp eq i32 %14, 0, !dbg !8601
  br i1 %15, label %22, label %5, !dbg !8602, !llvm.loop !8611

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8596, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata i32 %18, metadata !8598, metadata !DIExpression()), !dbg !8600
  store i8 0, i8* %17, align 1, !dbg !8613
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8615
  call void @llvm.dbg.value(metadata i8* %19, metadata !8596, metadata !DIExpression()), !dbg !8600
  %20 = add i32 %18, -1, !dbg !8616
  call void @llvm.dbg.value(metadata i32 %20, metadata !8598, metadata !DIExpression()), !dbg !8600
  %21 = icmp eq i32 %20, 0, !dbg !8617
  br i1 %21, label %22, label %16, !dbg !8618, !llvm.loop !8619

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8621
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8622 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8626, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i32 %1, metadata !8627, metadata !DIExpression()), !dbg !8629
  call void @llvm.dbg.value(metadata i32 %1, metadata !8628, metadata !DIExpression()), !dbg !8629
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8630

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8626, metadata !DIExpression()), !dbg !8629
  %6 = load i8, i8* %5, align 1, !dbg !8631
  %7 = icmp eq i8 %6, %3, !dbg !8632
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8633
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8634
  call void @llvm.dbg.value(metadata i8* %10, metadata !8626, metadata !DIExpression()), !dbg !8629
  br i1 %9, label %11, label %4, !dbg !8633, !llvm.loop !8636

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8638
  ret i8* %12, !dbg !8639
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8640 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8642, metadata !DIExpression()), !dbg !8645
  call void @llvm.dbg.value(metadata i32 %1, metadata !8643, metadata !DIExpression()), !dbg !8645
  call void @llvm.dbg.value(metadata i8* null, metadata !8644, metadata !DIExpression()), !dbg !8645
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8646

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8645
  call void @llvm.dbg.value(metadata i8* %6, metadata !8644, metadata !DIExpression()), !dbg !8645
  call void @llvm.dbg.value(metadata i8* %5, metadata !8642, metadata !DIExpression()), !dbg !8645
  %7 = load i8, i8* %5, align 1, !dbg !8647
  %8 = icmp eq i8 %7, %3, !dbg !8650
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8651
  call void @llvm.dbg.value(metadata i8* %9, metadata !8644, metadata !DIExpression()), !dbg !8645
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8652
  call void @llvm.dbg.value(metadata i8* %10, metadata !8642, metadata !DIExpression()), !dbg !8645
  %11 = icmp eq i8 %7, 0, !dbg !8653
  br i1 %11, label %12, label %4, !dbg !8653, !llvm.loop !8654

12:                                               ; preds = %4
  ret i8* %9, !dbg !8656
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !8657 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8661, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32 0, metadata !8662, metadata !DIExpression()), !dbg !8663
  %2 = load i8, i8* %0, align 1, !dbg !8664
  %3 = icmp eq i8 %2, 0, !dbg !8665
  br i1 %3, label %11, label %4, !dbg !8666

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8662, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i8* %6, metadata !8661, metadata !DIExpression()), !dbg !8663
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8667
  call void @llvm.dbg.value(metadata i8* %7, metadata !8661, metadata !DIExpression()), !dbg !8663
  %8 = add i32 %5, 1, !dbg !8669
  call void @llvm.dbg.value(metadata i32 %8, metadata !8662, metadata !DIExpression()), !dbg !8663
  %9 = load i8, i8* %7, align 1, !dbg !8664
  %10 = icmp eq i8 %9, 0, !dbg !8665
  br i1 %10, label %11, label %4, !dbg !8666, !llvm.loop !8670

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8663
  ret i32 %12, !dbg !8672
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8673 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8677, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i32 %1, metadata !8678, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i32 0, metadata !8679, metadata !DIExpression()), !dbg !8680
  %3 = load i8, i8* %0, align 1, !dbg !8681
  %4 = icmp ne i8 %3, 0, !dbg !8682
  %5 = icmp ne i32 %1, 0, !dbg !8683
  %6 = and i1 %4, %5, !dbg !8683
  br i1 %6, label %7, label %16, !dbg !8684

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8679, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.value(metadata i8* %9, metadata !8677, metadata !DIExpression()), !dbg !8680
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8685
  call void @llvm.dbg.value(metadata i8* %10, metadata !8677, metadata !DIExpression()), !dbg !8680
  %11 = add nuw i32 %8, 1, !dbg !8687
  call void @llvm.dbg.value(metadata i32 %11, metadata !8679, metadata !DIExpression()), !dbg !8680
  %12 = load i8, i8* %10, align 1, !dbg !8681
  %13 = icmp ne i8 %12, 0, !dbg !8682
  %14 = icmp ult i32 %11, %1, !dbg !8683
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8683
  br i1 %15, label %7, label %16, !dbg !8684, !llvm.loop !8688

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8680
  ret i32 %17, !dbg !8690
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !8691 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8695, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i8* %1, metadata !8696, metadata !DIExpression()), !dbg !8697
  %3 = load i8, i8* %0, align 1, !dbg !8698
  %4 = load i8, i8* %1, align 1, !dbg !8699
  %5 = icmp ne i8 %3, %4, !dbg !8700
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8701
  br i1 %7, label %18, label %8, !dbg !8701

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8696, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata i8* %10, metadata !8695, metadata !DIExpression()), !dbg !8697
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8702
  call void @llvm.dbg.value(metadata i8* %11, metadata !8695, metadata !DIExpression()), !dbg !8697
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8704
  call void @llvm.dbg.value(metadata i8* %12, metadata !8696, metadata !DIExpression()), !dbg !8697
  %13 = load i8, i8* %11, align 1, !dbg !8698
  %14 = load i8, i8* %12, align 1, !dbg !8699
  %15 = icmp ne i8 %13, %14, !dbg !8700
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8701
  br i1 %17, label %18, label %8, !dbg !8701, !llvm.loop !8705

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8698
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8699
  %21 = zext i8 %19 to i32, !dbg !8708
  %22 = zext i8 %20 to i32, !dbg !8709
  %23 = sub nsw i32 %21, %22, !dbg !8710
  ret i32 %23, !dbg !8711
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8712 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8716, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i8* %1, metadata !8717, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 %2, metadata !8718, metadata !DIExpression()), !dbg !8719
  %4 = icmp eq i32 %2, 0, !dbg !8720
  br i1 %4, label %23, label %5, !dbg !8720

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8718, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i8* %7, metadata !8717, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i8* %8, metadata !8716, metadata !DIExpression()), !dbg !8719
  %9 = load i8, i8* %8, align 1, !dbg !8721
  %10 = load i8, i8* %7, align 1, !dbg !8722
  %11 = icmp ne i8 %9, %10, !dbg !8723
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8724
  br i1 %13, label %19, label %14, !dbg !8724

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8725
  call void @llvm.dbg.value(metadata i8* %15, metadata !8716, metadata !DIExpression()), !dbg !8719
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8727
  call void @llvm.dbg.value(metadata i8* %16, metadata !8717, metadata !DIExpression()), !dbg !8719
  %17 = add i32 %6, -1, !dbg !8728
  call void @llvm.dbg.value(metadata i32 %17, metadata !8718, metadata !DIExpression()), !dbg !8719
  %18 = icmp eq i32 %17, 0, !dbg !8720
  br i1 %18, label %23, label %5, !dbg !8720, !llvm.loop !8729

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8732
  %21 = zext i8 %10 to i32, !dbg !8733
  %22 = sub nsw i32 %20, %21, !dbg !8734
  br label %23, !dbg !8735

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8735
  ret i32 %24, !dbg !8736
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !8737 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8741, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i8* %1, metadata !8742, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata i8** %2, metadata !8743, metadata !DIExpression()), !dbg !8746
  %4 = icmp eq i8* %0, null, !dbg !8747
  br i1 %4, label %5, label %7, !dbg !8747

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8748
  br label %7, !dbg !8747

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8747
  call void @llvm.dbg.value(metadata i8* %8, metadata !8744, metadata !DIExpression()), !dbg !8746
  %9 = load i8, i8* %8, align 1, !dbg !8749
  %10 = icmp eq i8 %9, 0, !dbg !8749
  br i1 %10, label %33, label %11, !dbg !8750

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8744, metadata !DIExpression()), !dbg !8746
  %14 = zext i8 %12 to i32, !dbg !8749
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8751
  %16 = icmp eq i8* %15, null, !dbg !8750
  br i1 %16, label %21, label %17, !dbg !8752

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8753
  call void @llvm.dbg.value(metadata i8* %18, metadata !8744, metadata !DIExpression()), !dbg !8746
  %19 = load i8, i8* %18, align 1, !dbg !8749
  %20 = icmp eq i8 %19, 0, !dbg !8749
  br i1 %20, label %33, label %11, !dbg !8750, !llvm.loop !8755

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8745, metadata !DIExpression()), !dbg !8746
  %24 = zext i8 %22 to i32, !dbg !8757
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8758
  %26 = icmp eq i8* %25, null, !dbg !8759
  br i1 %26, label %27, label %31, !dbg !8760

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8761
  call void @llvm.dbg.value(metadata i8* %28, metadata !8745, metadata !DIExpression()), !dbg !8746
  %29 = load i8, i8* %28, align 1, !dbg !8757
  %30 = icmp eq i8 %29, 0, !dbg !8757
  br i1 %30, label %33, label %21, !dbg !8763, !llvm.loop !8764

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8766
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8769
  br label %33, !dbg !8770

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8746
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8746
  store i8* %34, i8** %2, align 4, !dbg !8746
  ret i8* %35, !dbg !8771
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8772 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8774, metadata !DIExpression()), !dbg !8776
  call void @llvm.dbg.value(metadata i8* %1, metadata !8775, metadata !DIExpression()), !dbg !8776
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8777
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8778
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8779
  ret i8* %0, !dbg !8780
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8781 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8783, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i8* %1, metadata !8784, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i32 %2, metadata !8785, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i8* %0, metadata !8786, metadata !DIExpression()), !dbg !8788
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8789
  call void @llvm.dbg.value(metadata i32 %4, metadata !8787, metadata !DIExpression()), !dbg !8788
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8790
  call void @llvm.dbg.value(metadata i8* %5, metadata !8783, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i8* %1, metadata !8784, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i32 %2, metadata !8785, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i32 %2, metadata !8785, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8788
  %6 = icmp eq i32 %2, 0, !dbg !8791
  br i1 %6, label %18, label %7, !dbg !8792

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8793
  call void @llvm.dbg.value(metadata i8* %9, metadata !8783, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i8* %10, metadata !8784, metadata !DIExpression()), !dbg !8788
  %12 = load i8, i8* %10, align 1, !dbg !8794
  %13 = icmp eq i8 %12, 0, !dbg !8795
  br i1 %13, label %18, label %14, !dbg !8796

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8797
  call void @llvm.dbg.value(metadata i8* %15, metadata !8784, metadata !DIExpression()), !dbg !8788
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8799
  call void @llvm.dbg.value(metadata i8* %16, metadata !8783, metadata !DIExpression()), !dbg !8788
  store i8 %12, i8* %9, align 1, !dbg !8800
  call void @llvm.dbg.value(metadata i32 %11, metadata !8785, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i32 %11, metadata !8785, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8788
  %17 = icmp eq i32 %11, 0, !dbg !8791
  br i1 %17, label %18, label %7, !dbg !8792, !llvm.loop !8801

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8788
  store i8 0, i8* %19, align 1, !dbg !8803
  ret i8* %0, !dbg !8804
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8805 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8809, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i8* %1, metadata !8810, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i32 %2, metadata !8811, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i8* %0, metadata !8812, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i8* %1, metadata !8813, metadata !DIExpression()), !dbg !8814
  %4 = icmp eq i32 %2, 0, !dbg !8815
  br i1 %4, label %31, label %5, !dbg !8817

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8813, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i8* %0, metadata !8812, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i32 %2, metadata !8811, metadata !DIExpression()), !dbg !8814
  %6 = add i32 %2, -1, !dbg !8818
  call void @llvm.dbg.value(metadata i32 %6, metadata !8811, metadata !DIExpression()), !dbg !8814
  %7 = icmp eq i32 %6, 0, !dbg !8819
  br i1 %7, label %23, label %8, !dbg !8820

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8821
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8821
  br label %11, !dbg !8821

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8813, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i8* %14, metadata !8812, metadata !DIExpression()), !dbg !8814
  %15 = load i8, i8* %14, align 1, !dbg !8822
  %16 = load i8, i8* %13, align 1, !dbg !8823
  %17 = icmp eq i8 %15, %16, !dbg !8824
  br i1 %17, label %18, label %23, !dbg !8821

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8825
  call void @llvm.dbg.value(metadata i8* %19, metadata !8812, metadata !DIExpression()), !dbg !8814
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8827
  call void @llvm.dbg.value(metadata i8* %20, metadata !8813, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i32 %12, metadata !8811, metadata !DIExpression()), !dbg !8814
  %21 = add i32 %12, -1, !dbg !8818
  call void @llvm.dbg.value(metadata i32 %21, metadata !8811, metadata !DIExpression()), !dbg !8814
  %22 = icmp eq i32 %21, 0, !dbg !8819
  br i1 %22, label %23, label %11, !dbg !8820, !llvm.loop !8828

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8814
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8814
  %26 = load i8, i8* %24, align 1, !dbg !8830
  %27 = zext i8 %26 to i32, !dbg !8830
  %28 = load i8, i8* %25, align 1, !dbg !8831
  %29 = zext i8 %28 to i32, !dbg !8831
  %30 = sub nsw i32 %27, %29, !dbg !8832
  br label %31, !dbg !8833

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8814
  ret i32 %32, !dbg !8834
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8835 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8839, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.value(metadata i8* %1, metadata !8840, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.value(metadata i32 %2, metadata !8841, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.value(metadata i8* %0, metadata !8842, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.value(metadata i8* %1, metadata !8843, metadata !DIExpression()), !dbg !8844
  %4 = ptrtoint i8* %0 to i32, !dbg !8845
  %5 = ptrtoint i8* %1 to i32, !dbg !8845
  %6 = sub i32 %4, %5, !dbg !8845
  %7 = icmp ult i32 %6, %2, !dbg !8847
  br i1 %7, label %10, label %8, !dbg !8848

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8843, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.value(metadata i8* %0, metadata !8842, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.value(metadata i32 %2, metadata !8841, metadata !DIExpression()), !dbg !8844
  %9 = icmp eq i32 %2, 0, !dbg !8849
  br i1 %9, label %26, label %17, !dbg !8851

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8841, metadata !DIExpression()), !dbg !8844
  %12 = add i32 %11, -1, !dbg !8852
  call void @llvm.dbg.value(metadata i32 %12, metadata !8841, metadata !DIExpression()), !dbg !8844
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8855
  %14 = load i8, i8* %13, align 1, !dbg !8855
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8856
  store i8 %14, i8* %15, align 1, !dbg !8857
  %16 = icmp eq i32 %12, 0, !dbg !8858
  br i1 %16, label %26, label %10, !dbg !8859, !llvm.loop !8860

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8843, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.value(metadata i8* %19, metadata !8842, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.value(metadata i32 %20, metadata !8841, metadata !DIExpression()), !dbg !8844
  %21 = load i8, i8* %18, align 1, !dbg !8862
  store i8 %21, i8* %19, align 1, !dbg !8864
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8865
  call void @llvm.dbg.value(metadata i8* %22, metadata !8842, metadata !DIExpression()), !dbg !8844
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8866
  call void @llvm.dbg.value(metadata i8* %23, metadata !8843, metadata !DIExpression()), !dbg !8844
  %24 = add i32 %20, -1, !dbg !8867
  call void @llvm.dbg.value(metadata i32 %24, metadata !8841, metadata !DIExpression()), !dbg !8844
  %25 = icmp eq i32 %24, 0, !dbg !8849
  br i1 %25, label %26, label %17, !dbg !8851, !llvm.loop !8868

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8870
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8871 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8877, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i8* %1, metadata !8878, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i32 %2, metadata !8879, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i8* %0, metadata !8880, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i8* %1, metadata !8881, metadata !DIExpression()), !dbg !8882
  %4 = icmp eq i32 %2, 0, !dbg !8883
  br i1 %4, label %14, label %5, !dbg !8884

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8881, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i8* %7, metadata !8880, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i32 %8, metadata !8879, metadata !DIExpression()), !dbg !8882
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8885
  call void @llvm.dbg.value(metadata i8* %9, metadata !8881, metadata !DIExpression()), !dbg !8882
  %10 = load i8, i8* %6, align 1, !dbg !8887
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8888
  call void @llvm.dbg.value(metadata i8* %11, metadata !8880, metadata !DIExpression()), !dbg !8882
  store i8 %10, i8* %7, align 1, !dbg !8889
  %12 = add i32 %8, -1, !dbg !8890
  call void @llvm.dbg.value(metadata i32 %12, metadata !8879, metadata !DIExpression()), !dbg !8882
  %13 = icmp eq i32 %12, 0, !dbg !8883
  br i1 %13, label %14, label %5, !dbg !8884, !llvm.loop !8891

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8893
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8894 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8898, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata i32 %1, metadata !8899, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata i32 %2, metadata !8900, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata i8* %0, metadata !8901, metadata !DIExpression()), !dbg !8903
  %4 = trunc i32 %1 to i8, !dbg !8904
  call void @llvm.dbg.value(metadata i8 %4, metadata !8902, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata i32 %2, metadata !8900, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata i8* %0, metadata !8901, metadata !DIExpression()), !dbg !8903
  %5 = icmp eq i32 %2, 0, !dbg !8905
  br i1 %5, label %12, label %6, !dbg !8906

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8900, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata i8* %8, metadata !8901, metadata !DIExpression()), !dbg !8903
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8907
  call void @llvm.dbg.value(metadata i8* %9, metadata !8901, metadata !DIExpression()), !dbg !8903
  store i8 %4, i8* %8, align 1, !dbg !8909
  %10 = add i32 %7, -1, !dbg !8910
  call void @llvm.dbg.value(metadata i32 %10, metadata !8900, metadata !DIExpression()), !dbg !8903
  %11 = icmp eq i32 %10, 0, !dbg !8905
  br i1 %11, label %12, label %6, !dbg !8906, !llvm.loop !8911

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8913
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8914 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8918, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %1, metadata !8919, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %2, metadata !8920, metadata !DIExpression()), !dbg !8924
  %4 = icmp eq i32 %2, 0, !dbg !8925
  br i1 %4, label %17, label %5, !dbg !8926

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8927

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8928
  call void @llvm.dbg.value(metadata i8* %9, metadata !8921, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i32 %8, metadata !8920, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i8* %9, metadata !8921, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8928
  %10 = load i8, i8* %9, align 1, !dbg !8929
  %11 = icmp eq i8 %10, %6, !dbg !8932
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8933
  call void @llvm.dbg.value(metadata i8* %12, metadata !8921, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.value(metadata i32 %13, metadata !8920, metadata !DIExpression()), !dbg !8924
  br i1 %15, label %16, label %7, !dbg !8933, !llvm.loop !8934

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8936

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8924
  ret i8* %19, !dbg !8937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !8938 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8940, metadata !DIExpression()), !dbg !8941
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8942
  ret void, !dbg !8943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !8944 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8946, metadata !DIExpression()), !dbg !8947
  ret i32 -1, !dbg !8948
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8953, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i32* %1, metadata !8954, metadata !DIExpression()), !dbg !8955
  %3 = ptrtoint i32* %1 to i32, !dbg !8956
  %4 = and i32 %3, -2, !dbg !8956
  %5 = icmp eq i32 %4, 2, !dbg !8956
  br i1 %5, label %6, label %9, !dbg !8956

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8957
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !8957
  br label %9, !dbg !8958

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8958
  ret i32 %10, !dbg !8959
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8962, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i32* %1, metadata !8963, metadata !DIExpression()), !dbg !8964
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8965
  ret i32 %3, !dbg !8966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8970, metadata !DIExpression()), !dbg !8972
  call void @llvm.dbg.value(metadata i32* %1, metadata !8971, metadata !DIExpression()), !dbg !8972
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8973, !srcloc !8975
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8976
  ret i32 %3, !dbg !8977
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8978 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8983, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32* %1, metadata !8984, metadata !DIExpression()), !dbg !8987
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !8988
  call void @llvm.dbg.value(metadata i32 %3, metadata !8985, metadata !DIExpression()), !dbg !8987
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !8989
  call void @llvm.dbg.value(metadata i32 %4, metadata !8986, metadata !DIExpression()), !dbg !8987
  %5 = icmp ne i32 %3, %4, !dbg !8990
  %6 = sext i1 %5 to i32, !dbg !8991
  ret i32 %6, !dbg !8992
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8993 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8997, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.value(metadata i32 %1, metadata !8998, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.value(metadata i32 %2, metadata !8999, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.value(metadata i32* %3, metadata !9000, metadata !DIExpression()), !dbg !9001
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9002
  ret i32 %5, !dbg !9003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9004 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9006, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.value(metadata i32 %1, metadata !9007, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.value(metadata i32 %2, metadata !9008, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.value(metadata i32* %3, metadata !9009, metadata !DIExpression()), !dbg !9010
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9011, !srcloc !9013
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9014
  ret i32 %5, !dbg !9015
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9016 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9018, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32 %1, metadata !9019, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32 %2, metadata !9020, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32* %3, metadata !9021, metadata !DIExpression()), !dbg !9026
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9027
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9029
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9029
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9029
  br i1 %11, label %33, label %12, !dbg !9029

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9026
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9026
  call void @llvm.dbg.value(metadata i8* %14, metadata !9024, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32 %13, metadata !9022, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32 %1, metadata !9023, metadata !DIExpression()), !dbg !9026
  br label %15, !dbg !9030

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9032
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9026
  call void @llvm.dbg.value(metadata i8* %17, metadata !9024, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32 %16, metadata !9023, metadata !DIExpression()), !dbg !9026
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9033
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9036
  call void @llvm.dbg.value(metadata i8* %19, metadata !9024, metadata !DIExpression()), !dbg !9026
  %20 = load i8, i8* %17, align 1, !dbg !9037
  %21 = zext i8 %20 to i32, !dbg !9038
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !9033
  %23 = icmp eq i32 %22, -1, !dbg !9039
  br i1 %23, label %30, label %24, !dbg !9040

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9041
  call void @llvm.dbg.value(metadata i32 %25, metadata !9023, metadata !DIExpression()), !dbg !9026
  %26 = icmp eq i32 %25, 0, !dbg !9042
  br i1 %26, label %27, label %15, !dbg !9043, !llvm.loop !9044

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9046
  call void @llvm.dbg.value(metadata i32 %28, metadata !9022, metadata !DIExpression()), !dbg !9026
  %29 = icmp eq i32 %28, 0, !dbg !9047
  br i1 %29, label %30, label %12, !dbg !9048, !llvm.loop !9049

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9026
  call void @llvm.dbg.value(metadata i32 %31, metadata !9022, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.label(metadata !9025), !dbg !9052
  %32 = sub i32 %2, %31, !dbg !9053
  br label %33, !dbg !9054

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9026
  ret i32 %34, !dbg !9055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9056 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9060, metadata !DIExpression()), !dbg !9061
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9062
  %3 = icmp eq i32 %2, -1, !dbg !9064
  br i1 %3, label %8, label %4, !dbg !9065

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9066
  %6 = icmp eq i32 %5, -1, !dbg !9067
  %7 = sext i1 %6 to i32, !dbg !9066
  br label %8, !dbg !9068

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9061
  ret i32 %9, !dbg !9069
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9070 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9072, metadata !DIExpression()), !dbg !9083
  %8 = bitcast i64* %2 to i8*, !dbg !9084
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #25, !dbg !9084
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !9073, metadata !DIExpression()), !dbg !9085
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !9085
  store i64 %9, i64* %2, align 8, !dbg !9085
  %10 = bitcast i64* %4 to i8*, !dbg !9086
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #25, !dbg !9086
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !9081, metadata !DIExpression()), !dbg !9087
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !9087
  store i64 %11, i64* %4, align 8, !dbg !9087
  %12 = bitcast i64* %6 to i8*, !dbg !9088
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #25, !dbg !9088
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !9082, metadata !DIExpression()), !dbg !9089
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !9089
  store i64 %13, i64* %6, align 8, !dbg !9089
  %14 = trunc i64 %9 to i32, !dbg !9090
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !9090
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #26, !dbg !9092
  %17 = trunc i64 %13 to i32, !dbg !9093
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !9093
  br i1 %16, label %19, label %26, !dbg !9093

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !9093
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !9093
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #26, !dbg !9094
  br i1 %22, label %23, label %26, !dbg !9095

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #26, !dbg !9096
  br i1 %24, label %25, label %26, !dbg !9097

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #26, !dbg !9098
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #26, !dbg !9099
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #26, !dbg !9100
  br label %26, !dbg !9101

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !9083
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #25, !dbg !9102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #25, !dbg !9102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #25, !dbg !9102
  ret i32 %27, !dbg !9102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !9103 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9108, metadata !DIExpression()), !dbg !9109
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9110, !srcloc !9112
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #26, !dbg !9113
  ret i1 %2, !dbg !9114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9115 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !9120, metadata !DIExpression()), !dbg !9122
  call void @llvm.dbg.value(metadata i32 %1, metadata !9121, metadata !DIExpression()), !dbg !9122
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !9123
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !9123
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !9124
  %6 = load i8, i8* %5, align 4, !dbg !9124
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !9125
  %8 = load i16, i16* %7, align 2, !dbg !9125
  %9 = zext i16 %8 to i32, !dbg !9126
  %10 = or i32 %9, %1, !dbg !9127
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #26, !dbg !9128
  ret void, !dbg !9129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !9130 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9133, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i8 %1, metadata !9134, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.value(metadata i32 %2, metadata !9135, metadata !DIExpression()), !dbg !9136
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9137, !srcloc !9139
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #26, !dbg !9140
  ret void, !dbg !9141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !9142 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9144, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i8 %1, metadata !9145, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %2, metadata !9146, metadata !DIExpression()), !dbg !9151
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9152
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !9152
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !9152
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !9147, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i8* undef, metadata !9148, metadata !DIExpression()), !dbg !9151
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9153
  %8 = bitcast i8** %7 to %struct.z_heap_bucket**, !dbg !9153
  %9 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %8, align 4, !dbg !9153
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !9150, metadata !DIExpression()), !dbg !9151
  %10 = and i32 %2, 786432
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 1048577, !dbg !9154
  %13 = icmp ne i32 %12, 1048577, !dbg !9154
  %14 = or i1 %13, %11, !dbg !9154
  %15 = xor i32 %2, 786432, !dbg !9154
  %16 = select i1 %14, i32 %2, i32 %15, !dbg !9154
  call void @llvm.dbg.value(metadata i32 %16, metadata !9146, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %16, metadata !9146, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !9151
  %17 = and i32 %16, 1, !dbg !9156
  %18 = icmp eq i32 %17, 0, !dbg !9158
  %19 = zext i8 %1 to i32, !dbg !9159
  %20 = shl nuw i32 1, %19, !dbg !9159
  br i1 %18, label %25, label %21, !dbg !9160

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %9, i32 0, i32 0, !dbg !9161
  %23 = load i32, i32* %22, align 4, !dbg !9163
  %24 = or i32 %23, %20, !dbg !9163
  store i32 %24, i32* %22, align 4, !dbg !9163
  br label %30, !dbg !9164

25:                                               ; preds = %3
  %26 = xor i32 %20, -1, !dbg !9165
  %27 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %9, i32 0, i32 0, !dbg !9167
  %28 = load i32, i32* %27, align 4, !dbg !9168
  %29 = and i32 %28, %26, !dbg !9168
  store i32 %29, i32* %27, align 4, !dbg !9168
  br label %30

30:                                               ; preds = %25, %21
  %31 = and i32 %16, -1048577, !dbg !9169
  call void @llvm.dbg.value(metadata i32 %31, metadata !9146, metadata !DIExpression()), !dbg !9151
  %32 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !9170
  %33 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %32, align 4, !dbg !9170
  %34 = tail call i32 %33(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %31) #27, !dbg !9171
  ret void, !dbg !9172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !9173 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9175, metadata !DIExpression()), !dbg !9176
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !9177
  ret i1 %2, !dbg !9178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9179 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9187, metadata !DIExpression()), !dbg !9189
  %3 = tail call i64 @sys_clock_tick_get() #27, !dbg !9190
  call void @llvm.dbg.value(metadata i64 %3, metadata !9188, metadata !DIExpression()), !dbg !9189
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9191
  %5 = sub i64 %1, %3, !dbg !9191
  store i64 %5, i64* %4, align 8, !dbg !9191
  ret void, !dbg !9192
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9193 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9343, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9341, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata i8* %1, metadata !9342, metadata !DIExpression()), !dbg !9346
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #27, !dbg !9347
  call void @llvm.dbg.value(metadata i64 %4, metadata !9345, metadata !DIExpression()), !dbg !9346
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9348
  %6 = load i1 (i8*, i32)*, i1 (i8*, i32)** %5, align 4, !dbg !9348
  %7 = icmp eq i1 (i8*, i32)* %6, null, !dbg !9350
  br i1 %7, label %13, label %8, !dbg !9351

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9352
  %10 = load i16, i16* %9, align 4, !dbg !9352
  %11 = zext i16 %10 to i32, !dbg !9353
  %12 = tail call zeroext i1 %6(i8* noundef %1, i32 noundef %11) #27, !dbg !9354
  br i1 %12, label %13, label %28, !dbg !9355

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9356
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9356
  %16 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %15, [1 x i64] %2) #26, !dbg !9357
  call void @llvm.dbg.value(metadata i32 %16, metadata !9344, metadata !DIExpression()), !dbg !9346
  %17 = icmp eq i32 %16, 0, !dbg !9358
  br i1 %17, label %18, label %28, !dbg !9360

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9361
  %20 = load i8*, i8** %19, align 4, !dbg !9361
  %21 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9362
  %22 = load i16, i16* %21, align 4, !dbg !9362
  %23 = zext i16 %22 to i32, !dbg !9363
  %24 = tail call i8* @memcpy(i8* noundef %20, i8* noundef %1, i32 noundef %23) #27, !dbg !9364
  %25 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %4) #26, !dbg !9365
  call void @llvm.dbg.value(metadata i32 %25, metadata !9344, metadata !DIExpression()), !dbg !9346
  %26 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9366
  %27 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %26) #26, !dbg !9367
  br label %28, !dbg !9368

28:                                               ; preds = %13, %8, %18
  %29 = phi i32 [ %25, %18 ], [ -35, %8 ], [ %16, %13 ], !dbg !9346
  ret i32 %29, !dbg !9369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9370 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9375, metadata !DIExpression()), !dbg !9376
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9374, metadata !DIExpression()), !dbg !9376
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9377, !srcloc !9379
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #27, !dbg !9380
  ret i32 %3, !dbg !9381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9382 {
  %3 = alloca %struct.zbus_channel*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9386, metadata !DIExpression()), !dbg !9394
  store %struct.zbus_channel* %0, %struct.zbus_channel** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9387, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata i32 0, metadata !9388, metadata !DIExpression()), !dbg !9394
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9395
  %6 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9395
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %6, metadata !9390, metadata !DIExpression()), !dbg !9396
  %7 = load %struct.zbus_observer*, %struct.zbus_observer** %6, align 4, !dbg !9397
  %8 = icmp eq %struct.zbus_observer* %7, null, !dbg !9399
  br i1 %8, label %31, label %16, !dbg !9400

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9401
  %11 = load %struct.zbus_observer*, %struct.zbus_observer** %10, align 4, !dbg !9402
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9386, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %10, metadata !9392, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata i32 0, metadata !9388, metadata !DIExpression()), !dbg !9394
  %12 = icmp eq %struct.zbus_observer* %11, null, !dbg !9405
  br i1 %12, label %31, label %13, !dbg !9406

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %33, !dbg !9406

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !9390, metadata !DIExpression()), !dbg !9396
  %19 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 0, !dbg !9407
  %20 = load i8, i8* %19, align 4, !dbg !9407, !range !7601
  %21 = icmp eq i8 %20, 0, !dbg !9407
  br i1 %21, label %27, label %22, !dbg !9410

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 2, !dbg !9411
  %24 = load void (%struct.zbus_channel*)*, void (%struct.zbus_channel*)** %23, align 4, !dbg !9411
  %25 = icmp eq void (%struct.zbus_channel*)* %24, null, !dbg !9412
  br i1 %25, label %27, label %26, !dbg !9413

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9386, metadata !DIExpression()), !dbg !9394
  tail call void %24(%struct.zbus_channel* noundef %0) #27, !dbg !9414
  br label %27, !dbg !9416

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %18, i32 1, !dbg !9417
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %28, metadata !9390, metadata !DIExpression()), !dbg !9396
  %29 = load %struct.zbus_observer*, %struct.zbus_observer** %28, align 4, !dbg !9397
  %30 = icmp eq %struct.zbus_observer* %29, null, !dbg !9399
  br i1 %30, label %9, label %16, !dbg !9400, !llvm.loop !9418

31:                                               ; preds = %51, %2, %9
  %32 = phi i32 [ 0, %9 ], [ 0, %2 ], [ %52, %51 ], !dbg !9394
  ret i32 %32, !dbg !9420

33:                                               ; preds = %13, %51
  %34 = phi %struct.zbus_observer* [ %11, %13 ], [ %54, %51 ]
  %35 = phi %struct.zbus_observer** [ %10, %13 ], [ %53, %51 ]
  %36 = phi i32 [ 0, %13 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %35, metadata !9392, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata i32 %36, metadata !9388, metadata !DIExpression()), !dbg !9394
  %37 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 0, !dbg !9421
  %38 = load i8, i8* %37, align 4, !dbg !9421, !range !7601
  %39 = icmp eq i8 %38, 0, !dbg !9421
  br i1 %39, label %51, label %40, !dbg !9424

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 1, !dbg !9425
  %42 = load %struct.k_msgq*, %struct.k_msgq** %41, align 4, !dbg !9425
  %43 = icmp eq %struct.k_msgq* %42, null, !dbg !9426
  br i1 %43, label %51, label %44, !dbg !9427

44:                                               ; preds = %40
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #26, !dbg !9428
  %45 = load i64, i64* %15, align 8, !dbg !9430
  %46 = insertvalue [1 x i64] poison, i64 %45, 0, !dbg !9430
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %3, metadata !9386, metadata !DIExpression(DW_OP_deref)), !dbg !9394
  %47 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %42, i8* noundef nonnull %14, [1 x i64] %46) #26, !dbg !9430
  call void @llvm.dbg.value(metadata i32 %47, metadata !9389, metadata !DIExpression()), !dbg !9394
  %48 = icmp eq i32 %47, 0, !dbg !9431
  br i1 %48, label %51, label %49, !dbg !9433

49:                                               ; preds = %44
  %50 = load %struct.zbus_observer*, %struct.zbus_observer** %35, align 4, !dbg !9434
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1.74, i32 0, i32 0), i32 noundef 69, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.75, i32 0, i32 0), %struct.zbus_observer* noundef %50, i32 noundef %47) #27, !dbg !9434
  call void @llvm.dbg.value(metadata i32 %47, metadata !9388, metadata !DIExpression()), !dbg !9394
  br label %51, !dbg !9440

51:                                               ; preds = %33, %40, %49, %44
  %52 = phi i32 [ %47, %49 ], [ %36, %44 ], [ %36, %40 ], [ %36, %33 ], !dbg !9394
  call void @llvm.dbg.value(metadata i32 %52, metadata !9388, metadata !DIExpression()), !dbg !9394
  %53 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %35, i32 1, !dbg !9441
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %53, metadata !9392, metadata !DIExpression()), !dbg !9404
  %54 = load %struct.zbus_observer*, %struct.zbus_observer** %53, align 4, !dbg !9402
  %55 = icmp eq %struct.zbus_observer* %54, null, !dbg !9405
  br i1 %55, label %31, label %33, !dbg !9406, !llvm.loop !9442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9444 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9448, metadata !DIExpression()), !dbg !9449
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9450, !srcloc !9452
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #27, !dbg !9453
  ret i32 %2, !dbg !9454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9455 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9461, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9459, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i8* %1, metadata !9460, metadata !DIExpression()), !dbg !9462
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9463, !srcloc !9465
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #27, !dbg !9466
  ret i32 %4, !dbg !9467
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel* nocapture noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9468 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9474, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9472, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i8* %1, metadata !9473, metadata !DIExpression()), !dbg !9476
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9477
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9477
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %2) #26, !dbg !9478
  call void @llvm.dbg.value(metadata i32 %6, metadata !9475, metadata !DIExpression()), !dbg !9476
  %7 = icmp eq i32 %6, 0, !dbg !9479
  br i1 %7, label %8, label %17, !dbg !9481

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9482
  %10 = load i8*, i8** %9, align 4, !dbg !9482
  %11 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9483
  %12 = load i16, i16* %11, align 4, !dbg !9483
  %13 = zext i16 %12 to i32, !dbg !9484
  %14 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %10, i32 noundef %13) #27, !dbg !9485
  %15 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9486
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #26, !dbg !9487
  br label %17, !dbg !9488

17:                                               ; preds = %3, %8
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ], !dbg !9476
  ret i32 %18, !dbg !9489
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9490 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9495, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9494, metadata !DIExpression()), !dbg !9498
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #27, !dbg !9499
  call void @llvm.dbg.value(metadata i64 %3, metadata !9497, metadata !DIExpression()), !dbg !9498
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9500
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9500
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %1) #26, !dbg !9501
  call void @llvm.dbg.value(metadata i32 %6, metadata !9496, metadata !DIExpression()), !dbg !9498
  %7 = icmp eq i32 %6, 0, !dbg !9502
  br i1 %7, label %8, label %12, !dbg !9504

8:                                                ; preds = %2
  %9 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %3) #26, !dbg !9505
  call void @llvm.dbg.value(metadata i32 %9, metadata !9496, metadata !DIExpression()), !dbg !9498
  %10 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9506
  %11 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %10) #26, !dbg !9507
  br label %12, !dbg !9508

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %9, %8 ], [ %6, %2 ], !dbg !9498
  ret i32 %13, !dbg !9509
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel* nocapture noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9510 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9513, metadata !DIExpression()), !dbg !9515
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9512, metadata !DIExpression()), !dbg !9515
  %3 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9516
  %4 = load %struct.k_mutex*, %struct.k_mutex** %3, align 4, !dbg !9516
  %5 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %4, [1 x i64] %1) #26, !dbg !9517
  call void @llvm.dbg.value(metadata i32 %5, metadata !9514, metadata !DIExpression()), !dbg !9515
  ret i32 %5, !dbg !9518
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9519 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9523, metadata !DIExpression()), !dbg !9525
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9526
  %3 = load %struct.k_mutex*, %struct.k_mutex** %2, align 4, !dbg !9526
  %4 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %3) #26, !dbg !9527
  call void @llvm.dbg.value(metadata i32 %4, metadata !9524, metadata !DIExpression()), !dbg !9525
  ret i32 %4, !dbg !9528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer* nocapture noundef readonly %0, %struct.zbus_channel** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9529 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9536, metadata !DIExpression()), !dbg !9537
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !9534, metadata !DIExpression()), !dbg !9537
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !9535, metadata !DIExpression()), !dbg !9537
  %4 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 1, !dbg !9538
  %5 = load %struct.k_msgq*, %struct.k_msgq** %4, align 4, !dbg !9538
  %6 = icmp eq %struct.k_msgq* %5, null, !dbg !9540
  br i1 %6, label %10, label %7, !dbg !9541

7:                                                ; preds = %3
  %8 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !9542
  %9 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %5, i8* noundef %8, [1 x i64] %2) #26, !dbg !9543
  br label %10, !dbg !9544

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ -22, %3 ], !dbg !9537
  ret i32 %11, !dbg !9545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9546 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9552, metadata !DIExpression()), !dbg !9553
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9550, metadata !DIExpression()), !dbg !9553
  call void @llvm.dbg.value(metadata i8* %1, metadata !9551, metadata !DIExpression()), !dbg !9553
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9554, !srcloc !9556
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #27, !dbg !9557
  ret i32 %4, !dbg !9558
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9559 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9561, metadata !DIExpression()), !dbg !9562
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !9563
  ret void, !dbg !9564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9569, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32 %1, metadata !9570, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9571, metadata !DIExpression()), !dbg !9575
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9576
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9576
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9576
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9572, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32 %0, metadata !9574, metadata !DIExpression()), !dbg !9575
  %7 = icmp slt i32 %0, %1, !dbg !9577
  br i1 %7, label %8, label %22, !dbg !9580

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9574, metadata !DIExpression()), !dbg !9575
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !9581
  %11 = icmp eq i32 %10, 0, !dbg !9581
  br i1 %11, label %19, label %12, !dbg !9584

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !9585
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9587
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9587
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9589
  br i1 %15, label %19, label %16, !dbg !9590

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9591
  %18 = load i8*, i8** %17, align 4, !dbg !9591
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !9592
  br label %19, !dbg !9593

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9594
  call void @llvm.dbg.value(metadata i32 %20, metadata !9574, metadata !DIExpression()), !dbg !9575
  %21 = icmp eq i32 %20, %1, !dbg !9577
  br i1 %21, label %22, label %8, !dbg !9580, !llvm.loop !9595

22:                                               ; preds = %19, %3
  ret void, !dbg !9597
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #18 !dbg !9598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9600, metadata !DIExpression()), !dbg !9601
  %2 = shl nuw i32 1, %0, !dbg !9602
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !9605
  ret i32 %3, !dbg !9606
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #17 !dbg !9607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9611, metadata !DIExpression()), !dbg !9612
  %2 = shl nuw i32 1, %0, !dbg !9613
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !9616
  ret void, !dbg !9617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9621, metadata !DIExpression()), !dbg !9622
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !9623
  ret void, !dbg !9624
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9627, metadata !DIExpression()), !dbg !9628
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !9629
  %3 = and i32 %2, %0, !dbg !9629
  %4 = icmp eq i32 %3, %0, !dbg !9630
  %5 = zext i1 %4 to i32, !dbg !9630
  ret i32 %5, !dbg !9631
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9632 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9634, metadata !DIExpression()), !dbg !9635
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !9636
  ret void, !dbg !9637
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9638 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9640, metadata !DIExpression()), !dbg !9641
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !9642
  ret void, !dbg !9643
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9644 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9646, metadata !DIExpression()), !dbg !9647
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !9648
  ret void, !dbg !9649
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9650 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9652, metadata !DIExpression()), !dbg !9653
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !9654
  ret void, !dbg !9655
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9656 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9658, metadata !DIExpression()), !dbg !9659
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !9660
  ret void, !dbg !9661
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9662 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9664, metadata !DIExpression()), !dbg !9665
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !9666
  ret void, !dbg !9667
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9668 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9670, metadata !DIExpression()), !dbg !9671
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !9672
  ret i32 0, !dbg !9673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !947 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !951, metadata !DIExpression()), !dbg !9674
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !9675
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !9677
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !9679
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !9681
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !9683
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !9685
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !9687
  ret void, !dbg !9689
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9692, metadata !DIExpression()), !dbg !9694
  call void @llvm.dbg.value(metadata i32 0, metadata !9693, metadata !DIExpression()), !dbg !9694
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9695
  %3 = load i32, i32* %2, align 4, !dbg !9695
  call void @llvm.dbg.value(metadata i32 %3, metadata !9693, metadata !DIExpression()), !dbg !9694
  %4 = shl nuw i32 1, %0, !dbg !9696
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !9697
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !9698
  ret void, !dbg !9699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9702, metadata !DIExpression()), !dbg !9703
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9704
  %3 = or i32 %2, %0, !dbg !9704
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9704
  ret void, !dbg !9705
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #17 !dbg !9706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9708, metadata !DIExpression()), !dbg !9709
  %2 = icmp slt i32 %0, 32, !dbg !9710
  br i1 %2, label %3, label %5, !dbg !9712

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9713
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !9715
  br label %5, !dbg !9716

5:                                                ; preds = %1, %3
  ret void, !dbg !9717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9720, metadata !DIExpression()), !dbg !9721
  %2 = xor i32 %0, -1, !dbg !9722
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9722
  %4 = and i32 %3, %2, !dbg !9722
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9722
  ret void, !dbg !9723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #17 !dbg !9724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9728, metadata !DIExpression()), !dbg !9730
  call void @llvm.dbg.value(metadata i32 %1, metadata !9729, metadata !DIExpression()), !dbg !9730
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9731

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9732
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !9734
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !9735
  br label %11, !dbg !9736

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9737
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !9738
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !9739
  br label %11, !dbg !9740

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9741
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !9742
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !9743
  br label %11, !dbg !9744

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9745
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !9746
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !9747
  br label %11, !dbg !9748

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9752, metadata !DIExpression()), !dbg !9753
  %2 = xor i32 %0, -1, !dbg !9754
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9754
  %4 = and i32 %3, %2, !dbg !9754
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9754
  ret void, !dbg !9755
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9758, metadata !DIExpression()), !dbg !9759
  %2 = xor i32 %0, -1, !dbg !9760
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9760
  %4 = and i32 %3, %2, !dbg !9760
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9760
  ret void, !dbg !9761
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9764, metadata !DIExpression()), !dbg !9765
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9766
  %3 = or i32 %2, %0, !dbg !9766
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9766
  ret void, !dbg !9767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9770, metadata !DIExpression()), !dbg !9771
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9772
  %3 = or i32 %2, %0, !dbg !9772
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9772
  ret void, !dbg !9773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9778, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9779, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.value(metadata i8* %2, metadata !9780, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !9781, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9783, metadata !DIExpression()), !dbg !9784
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9785
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9785
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9787
  br i1 %6, label %7, label %9, !dbg !9788

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9789
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9790
  store i8* %2, i8** %8, align 4, !dbg !9791
  br label %9, !dbg !9792

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9784
  ret i32 %10, !dbg !9793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #8 !dbg !9794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9796, metadata !DIExpression()), !dbg !9799
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !9797, metadata !DIExpression()), !dbg !9799
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9798, metadata !DIExpression()), !dbg !9799
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9800
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9801
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9802
  store i8* null, i8** %3, align 4, !dbg !9803
  ret void, !dbg !9804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #17 !dbg !9805 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9807, metadata !DIExpression()), !dbg !9812
  call void @llvm.dbg.value(metadata i8* %1, metadata !9808, metadata !DIExpression()), !dbg !9812
  call void @llvm.dbg.value(metadata i8* %1, metadata !9809, metadata !DIExpression()), !dbg !9812
  %3 = bitcast i8* %1 to i32*, !dbg !9813
  %4 = load i32, i32* %3, align 4, !dbg !9813
  %5 = add i32 %4, -37, !dbg !9813
  %6 = icmp ult i32 %5, -9, !dbg !9813
  br i1 %6, label %15, label %7, !dbg !9815

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9816
  %9 = inttoptr i32 %8 to i32*, !dbg !9817
  call void @llvm.dbg.value(metadata i32* %9, metadata !9810, metadata !DIExpression()), !dbg !9812
  %10 = load volatile i32, i32* %9, align 4, !dbg !9818
  call void @llvm.dbg.value(metadata i32 %10, metadata !9811, metadata !DIExpression()), !dbg !9812
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9819
  %12 = bitcast i8* %11 to i32*, !dbg !9819
  %13 = load i32, i32* %12, align 4, !dbg !9819
  %14 = or i32 %13, %10, !dbg !9820
  call void @llvm.dbg.value(metadata i32 %14, metadata !9811, metadata !DIExpression()), !dbg !9812
  store volatile i32 %14, i32* %9, align 4, !dbg !9821
  br label %15, !dbg !9822

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9812
  ret i32 %16, !dbg !9823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #17 !dbg !9824 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9826, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i8* %1, metadata !9827, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i8* %1, metadata !9828, metadata !DIExpression()), !dbg !9831
  %3 = bitcast i8* %1 to i32*, !dbg !9832
  %4 = load i32, i32* %3, align 4, !dbg !9832
  %5 = add i32 %4, -37, !dbg !9832
  %6 = icmp ult i32 %5, -9, !dbg !9832
  br i1 %6, label %16, label %7, !dbg !9834

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9835
  %9 = inttoptr i32 %8 to i32*, !dbg !9836
  call void @llvm.dbg.value(metadata i32* %9, metadata !9829, metadata !DIExpression()), !dbg !9831
  %10 = load volatile i32, i32* %9, align 4, !dbg !9837
  call void @llvm.dbg.value(metadata i32 %10, metadata !9830, metadata !DIExpression()), !dbg !9831
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9838
  %12 = bitcast i8* %11 to i32*, !dbg !9838
  %13 = load i32, i32* %12, align 4, !dbg !9838
  %14 = xor i32 %13, -1, !dbg !9839
  %15 = and i32 %10, %14, !dbg !9840
  call void @llvm.dbg.value(metadata i32 %15, metadata !9830, metadata !DIExpression()), !dbg !9831
  store volatile i32 %15, i32* %9, align 4, !dbg !9841
  br label %16, !dbg !9842

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9831
  ret i32 %17, !dbg !9843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #9 !dbg !9844 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9846, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i8* %1, metadata !9847, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i32* %2, metadata !9848, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i8* %1, metadata !9849, metadata !DIExpression()), !dbg !9853
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9854
  call void @llvm.dbg.value(metadata i32 %4, metadata !9850, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i32 %4, metadata !9851, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i32 %4, metadata !9852, metadata !DIExpression()), !dbg !9853
  %5 = bitcast i8* %1 to i32*, !dbg !9855
  %6 = load i32, i32* %5, align 4, !dbg !9855
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !9856

7:                                                ; preds = %3
  br label %10, !dbg !9857

8:                                                ; preds = %3
  br label %10, !dbg !9859

9:                                                ; preds = %3
  br label %10, !dbg !9860

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !9861
  br label %12, !dbg !9862

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !9853
  ret i32 %13, !dbg !9862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #17 !dbg !9863 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9865, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.value(metadata i8* %1, metadata !9866, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.value(metadata i8* %2, metadata !9867, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.value(metadata i8* %1, metadata !9868, metadata !DIExpression()), !dbg !9873
  %4 = bitcast i8* %1 to i32*, !dbg !9874
  %5 = load i32, i32* %4, align 4, !dbg !9874
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !9875
  call void @llvm.dbg.value(metadata i32 %6, metadata !9872, metadata !DIExpression()), !dbg !9873
  %7 = icmp slt i32 %6, 0, !dbg !9876
  br i1 %7, label %22, label %8, !dbg !9878

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9868, metadata !DIExpression()), !dbg !9873
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9879
  %10 = bitcast i8* %9 to i32*, !dbg !9879
  %11 = load i32, i32* %10, align 4, !dbg !9879
  %12 = lshr i32 %11, 16, !dbg !9879
  %13 = and i32 %12, 7, !dbg !9879
  %14 = lshr i32 %11, 8, !dbg !9880
  %15 = and i32 %14, 31, !dbg !9880
  %16 = shl i32 %13, %15, !dbg !9881
  call void @llvm.dbg.value(metadata i32 %16, metadata !9871, metadata !DIExpression()), !dbg !9873
  %17 = and i32 %11, 255, !dbg !9882
  %18 = or i32 %17, 1073887232, !dbg !9883
  %19 = inttoptr i32 %18 to i32*, !dbg !9884
  call void @llvm.dbg.value(metadata i32* %19, metadata !9869, metadata !DIExpression()), !dbg !9873
  %20 = load volatile i32, i32* %19, align 4, !dbg !9885
  call void @llvm.dbg.value(metadata i32 %20, metadata !9870, metadata !DIExpression()), !dbg !9873
  %21 = or i32 %16, %20, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %21, metadata !9870, metadata !DIExpression()), !dbg !9873
  store volatile i32 %21, i32* %19, align 4, !dbg !9887
  br label %22, !dbg !9888

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9873
  ret i32 %23, !dbg !9889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !9890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9894, metadata !DIExpression()), !dbg !9896
  call void @llvm.dbg.value(metadata i32 0, metadata !9895, metadata !DIExpression()), !dbg !9896
  %2 = add i32 %0, -1, !dbg !9897
  %3 = icmp ult i32 %2, 4, !dbg !9897
  br i1 %3, label %4, label %7, !dbg !9897

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9897
  %6 = load i32, i32* %5, align 4, !dbg !9897
  call void @llvm.dbg.value(metadata i32 %6, metadata !9895, metadata !DIExpression()), !dbg !9896
  br label %7, !dbg !9898

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9896
  ret i32 %8, !dbg !9899
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9900 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9902, metadata !DIExpression()), !dbg !9905
  tail call void @config_enable_default_clocks() #27, !dbg !9906
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !9907
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !9907
  %4 = lshr i32 %3, 4, !dbg !9907
  %5 = and i32 %4, 15, !dbg !9907
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9907
  %7 = load i8, i8* %6, align 1, !dbg !9907
  %8 = zext i8 %7 to i32, !dbg !9907
  %9 = lshr i32 %2, %8, !dbg !9907
  call void @llvm.dbg.value(metadata i32 %9, metadata !9903, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !9904, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9905
  %10 = icmp ult i32 %9, 32000000, !dbg !9908
  br i1 %10, label %11, label %13, !dbg !9910

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #27, !dbg !9911
  br label %13, !dbg !9913

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !9914
  tail call fastcc void @set_up_plls() #26, !dbg !9915
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !9916
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #26, !dbg !9919
  br label %14, !dbg !9920

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !9921
  %16 = icmp eq i32 %15, 12, !dbg !9922
  br i1 %16, label %17, label %14, !dbg !9920, !llvm.loop !9923

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !9925
  br i1 %18, label %19, label %21, !dbg !9927

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #27, !dbg !9928
  br label %21, !dbg !9930

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !9931
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !9932
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !9933
  ret i32 0, !dbg !9934
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #18 !dbg !9935 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9937
  %2 = and i32 %1, 240, !dbg !9937
  ret i32 %2, !dbg !9938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #17 !dbg !9939 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !9940
  %2 = icmp eq i32 %1, 1, !dbg !9944
  br i1 %2, label %7, label %3, !dbg !9945

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !9946
  br label %4, !dbg !9948

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !9949
  %6 = icmp eq i32 %5, 1, !dbg !9950
  br i1 %6, label %7, label %4, !dbg !9948, !llvm.loop !9951

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !9953
  br label %8, !dbg !9956

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !9957
  %10 = icmp eq i32 %9, 1, !dbg !9958
  br i1 %10, label %11, label %8, !dbg !9956, !llvm.loop !9959

11:                                               ; preds = %8
  ret void, !dbg !9961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9962 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !9963
  %2 = icmp eq i32 %1, 12, !dbg !9965
  br i1 %2, label %3, label %4, !dbg !9966

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !9967
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !9969
  br label %4, !dbg !9970

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !9971
  tail call void @config_pll_sysclock() #27, !dbg !9972
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !9973
  br label %5, !dbg !9974

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !9975
  %7 = icmp eq i32 %6, 1, !dbg !9976
  br i1 %7, label %8, label %5, !dbg !9974, !llvm.loop !9977

8:                                                ; preds = %5
  ret void, !dbg !9979
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #17 !dbg !9980 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9982, metadata !DIExpression()), !dbg !9983
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9984
  %2 = and i32 %1, -241, !dbg !9984
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9984
  ret void, !dbg !9985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #17 !dbg !9986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9988, metadata !DIExpression()), !dbg !9989
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9990
  %3 = and i32 %2, -4, !dbg !9990
  %4 = or i32 %3, %0, !dbg !9990
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9990
  ret void, !dbg !9991
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #18 !dbg !9992 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9993
  %2 = and i32 %1, 12, !dbg !9993
  ret i32 %2, !dbg !9994
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #17 !dbg !9995 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9997, metadata !DIExpression()), !dbg !9998
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9999
  %2 = and i32 %1, -1793, !dbg !9999
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9999
  ret void, !dbg !10000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #17 !dbg !10001 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10003, metadata !DIExpression()), !dbg !10004
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10005
  %2 = and i32 %1, -14337, !dbg !10005
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10005
  ret void, !dbg !10006
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #17 !dbg !10007 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10008
  %2 = icmp eq i32 %1, 1, !dbg !10010
  br i1 %2, label %7, label %3, !dbg !10011

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10012
  br label %4, !dbg !10014

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10015
  %6 = icmp eq i32 %5, 1, !dbg !10016
  br i1 %6, label %7, label %4, !dbg !10014, !llvm.loop !10017

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #26, !dbg !10019
  br label %8, !dbg !10020

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10021
  %10 = icmp eq i32 %9, 4, !dbg !10022
  br i1 %10, label %11, label %8, !dbg !10020, !llvm.loop !10023

11:                                               ; preds = %8
  ret void, !dbg !10025
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #17 !dbg !10026 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10027
  %2 = and i32 %1, -16777217, !dbg !10027
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10027
  ret void, !dbg !10028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #17 !dbg !10029 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10030
  %2 = or i32 %1, 16777216, !dbg !10030
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10030
  ret void, !dbg !10031
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #18 !dbg !10032 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10033
  %2 = lshr i32 %1, 25, !dbg !10034
  %3 = and i32 %2, 1, !dbg !10034
  ret i32 %3, !dbg !10035
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #18 !dbg !10036 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10037
  %2 = lshr i32 %1, 1, !dbg !10038
  %3 = and i32 %2, 1, !dbg !10038
  ret i32 %3, !dbg !10039
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #17 !dbg !10040 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10041
  %2 = or i32 %1, 1, !dbg !10041
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10041
  ret void, !dbg !10042
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #17 !dbg !10043 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10044
  %2 = or i32 %1, 1, !dbg !10044
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10044
  ret void, !dbg !10045
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #18 !dbg !10046 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10047
  %2 = lshr i32 %1, 1, !dbg !10048
  %3 = and i32 %2, 1, !dbg !10048
  ret i32 %3, !dbg !10049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10050 {
  ret i32 16000000, !dbg !10052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #17 !dbg !10055 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10056
  ret void, !dbg !10057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #17 !dbg !10058 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10062, metadata !DIExpression()), !dbg !10065
  call void @llvm.dbg.value(metadata i32 262144, metadata !10063, metadata !DIExpression()), !dbg !10065
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10064, metadata !DIExpression()), !dbg !10065
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10066
  %2 = and i32 %1, -16580609, !dbg !10066
  %3 = or i32 %2, 4456448, !dbg !10066
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10066
  ret void, !dbg !10067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #5 !dbg !10068 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !10069
  %2 = zext i8 %1 to i32, !dbg !10069
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !10069
  ret i32 %3, !dbg !10070
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #16 !dbg !10071 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #26, !dbg !10072
  ret void, !dbg !10073
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #16 !dbg !10074 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !10076, metadata !DIExpression()), !dbg !10078
  %2 = bitcast i32* %1 to i8*, !dbg !10079
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10079
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10077, metadata !DIExpression()), !dbg !10080
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10081
  %4 = or i32 %3, 1, !dbg !10081
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10081
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10082
  %6 = and i32 %5, 1, !dbg !10082
  store volatile i32 %6, i32* %1, align 4, !dbg !10083
  %7 = load volatile i32, i32* %1, align 4, !dbg !10084
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10085
  ret void, !dbg !10085
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10086 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10088, metadata !DIExpression()), !dbg !10089
  %2 = tail call fastcc zeroext i1 @device_is_ready.91() #26, !dbg !10090
  br i1 %2, label %3, label %4, !dbg !10092

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10093
  br label %4, !dbg !10094

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10089
  ret i32 %5, !dbg !10095
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.91() unnamed_addr #1 !dbg !10096 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10100, metadata !DIExpression()), !dbg !10101
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10102, !srcloc !10104
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.92() #26, !dbg !10105
  ret i1 %1, !dbg !10106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10107 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10108
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10109
  ret void, !dbg !10110
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10113, metadata !DIExpression()), !dbg !10114
  %2 = icmp eq i32 %0, 10, !dbg !10115
  br i1 %2, label %3, label %4, !dbg !10117

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10118
  br label %4, !dbg !10120

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10121
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10122
  ret i32 %0, !dbg !10123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10124 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10127, metadata !DIExpression()), !dbg !10129
  call void @llvm.dbg.value(metadata i8 %0, metadata !10128, metadata !DIExpression()), !dbg !10129
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10130, !srcloc !10132
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10133
  ret void, !dbg !10134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10135 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10137, metadata !DIExpression()), !dbg !10140
  call void @llvm.dbg.value(metadata i8 %0, metadata !10138, metadata !DIExpression()), !dbg !10140
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10141
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10139, metadata !DIExpression()), !dbg !10140
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10142
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10142
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #27, !dbg !10143
  ret void, !dbg !10144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.92() unnamed_addr #1 !dbg !10145 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10147, metadata !DIExpression()), !dbg !10148
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #27, !dbg !10149
  ret i1 %1, !dbg !10150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10151 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10198, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10199, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10200, metadata !DIExpression()), !dbg !10201
  ret void, !dbg !10202
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10203 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10205, metadata !DIExpression()), !dbg !10210
  call void @llvm.dbg.value(metadata i8 %1, metadata !10206, metadata !DIExpression()), !dbg !10210
  call void @llvm.dbg.value(metadata i32 %2, metadata !10207, metadata !DIExpression()), !dbg !10210
  %5 = bitcast i32* %4 to i8*, !dbg !10211
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10211
  call void @llvm.dbg.value(metadata i32* %4, metadata !10209, metadata !DIExpression(DW_OP_deref)), !dbg !10210
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !10212
  call void @llvm.dbg.value(metadata i32 %6, metadata !10208, metadata !DIExpression()), !dbg !10210
  %7 = icmp eq i32 %6, 0, !dbg !10213
  br i1 %7, label %8, label %31, !dbg !10215

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10208, metadata !DIExpression()), !dbg !10210
  %9 = and i32 %2, 131072, !dbg !10216
  %10 = icmp eq i32 %9, 0, !dbg !10218
  br i1 %10, label %28, label %11, !dbg !10219

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10220
  %13 = icmp eq i32 %12, 0, !dbg !10223
  br i1 %13, label %18, label %14, !dbg !10224

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10225
  %16 = shl nuw i32 1, %15, !dbg !10225
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !10227
  br label %25, !dbg !10228

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10229
  %20 = icmp eq i32 %19, 0, !dbg !10231
  %21 = zext i8 %1 to i32, !dbg !10210
  br i1 %20, label %25, label %22, !dbg !10232

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10233
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !10235
  br label %25, !dbg !10236

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10237
  %27 = load i32, i32* %4, align 4, !dbg !10238
  call void @llvm.dbg.value(metadata i32 %30, metadata !10209, metadata !DIExpression()), !dbg !10210
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !10239
  br label %31, !dbg !10240

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10237
  %30 = load i32, i32* %4, align 4, !dbg !10238
  call void @llvm.dbg.value(metadata i32 %30, metadata !10209, metadata !DIExpression()), !dbg !10210
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !10239
  call void @llvm.dbg.value(metadata i32 0, metadata !10208, metadata !DIExpression()), !dbg !10210
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10241
  ret i32 %6, !dbg !10241
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #18 !dbg !10242 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10246, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.value(metadata i32* %1, metadata !10247, metadata !DIExpression()), !dbg !10251
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10252
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10252
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10252
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10248, metadata !DIExpression()), !dbg !10251
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10253
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10253
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10253
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10250, metadata !DIExpression()), !dbg !10251
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !10254
  store i32 %9, i32* %1, align 4, !dbg !10255
  ret i32 0, !dbg !10256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #17 !dbg !10257 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10259, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata i32 %1, metadata !10260, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata i32 %2, metadata !10261, metadata !DIExpression()), !dbg !10265
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10266
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10266
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10266
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10262, metadata !DIExpression()), !dbg !10265
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10267
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10267
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10267
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10263, metadata !DIExpression()), !dbg !10265
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !10268
  call void @llvm.dbg.value(metadata i32 %10, metadata !10264, metadata !DIExpression()), !dbg !10265
  %11 = xor i32 %1, -1, !dbg !10269
  %12 = and i32 %10, %11, !dbg !10270
  %13 = and i32 %2, %1, !dbg !10271
  %14 = or i32 %12, %13, !dbg !10272
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !10273
  ret i32 0, !dbg !10274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !10275 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10277, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i32 %1, metadata !10278, metadata !DIExpression()), !dbg !10281
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10282
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10282
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10282
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10279, metadata !DIExpression()), !dbg !10281
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10283
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10283
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10283
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10280, metadata !DIExpression()), !dbg !10281
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10284
  store volatile i32 %1, i32* %9, align 4, !dbg !10284
  ret i32 0, !dbg !10285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !10286 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10288, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata i32 %1, metadata !10289, metadata !DIExpression()), !dbg !10292
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10293
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10293
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10293
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10290, metadata !DIExpression()), !dbg !10292
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10294
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10294
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10294
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10291, metadata !DIExpression()), !dbg !10292
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !10295
  ret i32 0, !dbg !10296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !10297 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10299, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata i32 %1, metadata !10300, metadata !DIExpression()), !dbg !10303
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10304
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10304
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10304
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10301, metadata !DIExpression()), !dbg !10303
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10305
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10305
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10305
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10302, metadata !DIExpression()), !dbg !10303
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10306
  %10 = load volatile i32, i32* %9, align 4, !dbg !10306
  %11 = xor i32 %10, %1, !dbg !10306
  store volatile i32 %11, i32* %9, align 4, !dbg !10306
  ret i32 0, !dbg !10307
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10308 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10310, metadata !DIExpression()), !dbg !10320
  call void @llvm.dbg.value(metadata i8 %1, metadata !10311, metadata !DIExpression()), !dbg !10320
  call void @llvm.dbg.value(metadata i32 %2, metadata !10312, metadata !DIExpression()), !dbg !10320
  call void @llvm.dbg.value(metadata i32 %3, metadata !10313, metadata !DIExpression()), !dbg !10320
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10321
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10321
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10321
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10314, metadata !DIExpression()), !dbg !10320
  call void @llvm.dbg.value(metadata i8* undef, metadata !10315, metadata !DIExpression()), !dbg !10320
  call void @llvm.dbg.value(metadata i32 0, metadata !10317, metadata !DIExpression()), !dbg !10320
  call void @llvm.dbg.value(metadata i32 0, metadata !10318, metadata !DIExpression()), !dbg !10320
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10322

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10323
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !10327
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10328
  %12 = load i32, i32* %11, align 4, !dbg !10328
  %13 = icmp eq i32 %10, %12, !dbg !10329
  br i1 %13, label %14, label %29, !dbg !10330

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !10331
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !10333
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !10334
  br label %29, !dbg !10335

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10336
  %17 = load i8*, i8** %16, align 4, !dbg !10336
  call void @llvm.dbg.value(metadata i8* %17, metadata !10315, metadata !DIExpression()), !dbg !10320
  %18 = zext i8 %1 to i32, !dbg !10337
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !10339
  %20 = icmp eq i32 %19, 0, !dbg !10340
  br i1 %20, label %21, label %29, !dbg !10341

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10342
  %23 = load i32, i32* %22, align 4, !dbg !10342
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !10343
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10344

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10317, metadata !DIExpression()), !dbg !10320
  br label %27, !dbg !10345

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10317, metadata !DIExpression()), !dbg !10320
  br label %27, !dbg !10347

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10317, metadata !DIExpression()), !dbg !10320
  br label %27, !dbg !10348

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10320
  call void @llvm.dbg.value(metadata i32 %28, metadata !10317, metadata !DIExpression()), !dbg !10320
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !10349
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !10350
  br label %29, !dbg !10350

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10320
  call void @llvm.dbg.value(metadata i32 %30, metadata !10318, metadata !DIExpression()), !dbg !10320
  call void @llvm.dbg.label(metadata !10319), !dbg !10351
  ret i32 %30, !dbg !10352
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #15 !dbg !10353 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10355, metadata !DIExpression()), !dbg !10359
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10356, metadata !DIExpression()), !dbg !10359
  call void @llvm.dbg.value(metadata i1 %2, metadata !10357, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10359
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10360
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10360
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10360
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10358, metadata !DIExpression()), !dbg !10359
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10361
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !10362
  ret i32 %8, !dbg !10363
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #15 !dbg !10364 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10370, metadata !DIExpression()), !dbg !10373
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10371, metadata !DIExpression()), !dbg !10373
  call void @llvm.dbg.value(metadata i1 %2, metadata !10372, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10373
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !10374
  br i1 %4, label %10, label %5, !dbg !10376

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10377
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !10380
  %8 = or i1 %7, %2, !dbg !10381
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10381
  br i1 %2, label %11, label %13, !dbg !10381

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10382

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10383
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !10386
  br label %13, !dbg !10387

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10373
  ret i32 %14, !dbg !10388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10389 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10393, metadata !DIExpression()), !dbg !10394
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10395
  %3 = icmp eq %struct._snode* %2, null, !dbg !10395
  ret i1 %3, !dbg !10395
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !10396 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10400, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10401, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10402, metadata !DIExpression()), !dbg !10404
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10405
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10403, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10402, metadata !DIExpression()), !dbg !10404
  %4 = icmp eq %struct._snode* %3, null, !dbg !10407
  br i1 %4, label %15, label %5, !dbg !10405

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10403, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10402, metadata !DIExpression()), !dbg !10404
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10409
  br i1 %6, label %9, label %11, !dbg !10412

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10403, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10402, metadata !DIExpression()), !dbg !10404
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10409
  br i1 %8, label %9, label %11, !dbg !10412, !llvm.loop !10413

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !10414
  br label %15, !dbg !10414

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10403, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10402, metadata !DIExpression()), !dbg !10404
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !10407
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10403, metadata !DIExpression()), !dbg !10404
  %14 = icmp eq %struct._snode* %13, null, !dbg !10407
  br i1 %14, label %15, label %7, !dbg !10405, !llvm.loop !10413

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10417 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10421, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10422, metadata !DIExpression()), !dbg !10423
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10424
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !10424
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !10424
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10425
  %5 = icmp eq %struct._snode* %4, null, !dbg !10425
  br i1 %5, label %6, label %8, !dbg !10424

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10427
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !10427
  br label %8, !dbg !10427

8:                                                ; preds = %6, %2
  ret void, !dbg !10424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10429 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10433, metadata !DIExpression()), !dbg !10434
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10435
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10435
  ret %struct._snode* %3, !dbg !10436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10437 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10441, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10442, metadata !DIExpression()), !dbg !10443
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10444
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10445
  ret void, !dbg !10446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10447 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10449, metadata !DIExpression()), !dbg !10451
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10450, metadata !DIExpression()), !dbg !10451
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10452
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10453
  ret void, !dbg !10454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10455 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10457, metadata !DIExpression()), !dbg !10458
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10459
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10459
  ret %struct._snode* %3, !dbg !10460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10461 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10463, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10464, metadata !DIExpression()), !dbg !10465
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10466
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10467
  ret void, !dbg !10468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10469 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10473, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10474, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10475, metadata !DIExpression()), !dbg !10476
  %4 = icmp eq %struct._snode* %1, null, !dbg !10477
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !10479
  br i1 %4, label %6, label %11, !dbg !10480

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !10481
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10483
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10483
  br i1 %8, label %9, label %15, !dbg !10481

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10485
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !10485
  br label %15, !dbg !10485

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !10487
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10489
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10489
  br i1 %13, label %14, label %15, !dbg !10487

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10491
  br label %15, !dbg !10491

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !10480
  ret void, !dbg !10480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !10493 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10497, metadata !DIExpression()), !dbg !10498
  %2 = icmp eq %struct._snode* %0, null, !dbg !10499
  br i1 %2, label %5, label %3, !dbg !10499

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10499
  br label %5, !dbg !10499

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10499
  ret %struct._snode* %6, !dbg !10499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10500 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10502, metadata !DIExpression()), !dbg !10503
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10504
  ret %struct._snode* %2, !dbg !10504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10505 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10507, metadata !DIExpression()), !dbg !10508
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10509
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10509
  ret %struct._snode* %3, !dbg !10510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10513, metadata !DIExpression()), !dbg !10516
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10517, !range !10518
  call void @llvm.dbg.value(metadata i32 %2, metadata !10514, metadata !DIExpression()), !dbg !10516
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10519
  call void @llvm.dbg.value(metadata i32 %3, metadata !10515, metadata !DIExpression()), !dbg !10516
  ret i32 %3, !dbg !10520
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10523, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata i8* %1, metadata !10524, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata i8* %1, metadata !10525, metadata !DIExpression()), !dbg !10526
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10527
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10527
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10528
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10528
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10528
  %8 = shl nuw i32 1, %0, !dbg !10529
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10530
  ret void, !dbg !10531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10532 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10536, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %1, metadata !10537, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10538, metadata !DIExpression()), !dbg !10542
  %4 = bitcast i64* %3 to i8*, !dbg !10543
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !10543
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !10540, metadata !DIExpression()), !dbg !10542
  store i64 4294967328, i64* %3, align 8, !dbg !10544
  call void @llvm.dbg.value(metadata i64* %3, metadata !10540, metadata !DIExpression(DW_OP_deref)), !dbg !10542
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10545
  call void @llvm.dbg.value(metadata i32 %5, metadata !10541, metadata !DIExpression()), !dbg !10542
  %6 = icmp eq i32 %5, 0, !dbg !10546
  br i1 %6, label %7, label %8, !dbg !10548

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10549
  br label %8, !dbg !10550

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !10551
  ret void, !dbg !10551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10552 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10554, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.value(metadata i8* %0, metadata !10555, metadata !DIExpression()), !dbg !10557
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10558
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10556, metadata !DIExpression()), !dbg !10557
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10559
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10559
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #27, !dbg !10560
  ret i32 %5, !dbg !10561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10564, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i32 %1, metadata !10565, metadata !DIExpression()), !dbg !10567
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10568
  call void @llvm.dbg.value(metadata i32 %3, metadata !10566, metadata !DIExpression()), !dbg !10567
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10569
  ret void, !dbg !10570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10575, metadata !DIExpression()), !dbg !10576
  %2 = sdiv i32 %0, 4, !dbg !10577
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10578
  %6 = add nsw i32 %5, 16, !dbg !10579
  %7 = shl i32 15, %6, !dbg !10580
  %8 = or i32 %7, %2, !dbg !10581
  ret i32 %8, !dbg !10582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10588, metadata !DIExpression()), !dbg !10590
  call void @llvm.dbg.value(metadata i32 %1, metadata !10589, metadata !DIExpression()), !dbg !10590
  %3 = and i32 %1, 3, !dbg !10591
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !10591
  %5 = load volatile i32, i32* %4, align 4, !dbg !10591
  %6 = lshr i32 %1, 16, !dbg !10591
  %7 = xor i32 %6, -1, !dbg !10591
  %8 = and i32 %5, %7, !dbg !10591
  call void @llvm.dbg.value(metadata i32 %6, metadata !10592, metadata !DIExpression()) #25, !dbg !10596
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !10598, !srcloc !10599
  call void @llvm.dbg.value(metadata i32 %9, metadata !10595, metadata !DIExpression()) #25, !dbg !10596
  call void @llvm.dbg.value(metadata i32 %9, metadata !10600, metadata !DIExpression()) #25, !dbg !10605
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !10607, !range !4964
  %11 = shl i32 %0, %10, !dbg !10591
  %12 = or i32 %11, %8, !dbg !10591
  store volatile i32 %12, i32* %4, align 4, !dbg !10591
  ret void, !dbg !10608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10609 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10613, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10614, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.value(metadata i32 %2, metadata !10615, metadata !DIExpression()), !dbg !10618
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10619
  %5 = icmp eq %struct._snode* %4, null, !dbg !10619
  br i1 %5, label %21, label %6, !dbg !10619

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10621
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10617, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10616, metadata !DIExpression()), !dbg !10618
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10622
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10622
  %11 = load i32, i32* %10, align 4, !dbg !10622
  %12 = and i32 %11, %2, !dbg !10626
  %13 = icmp eq i32 %12, 0, !dbg !10626
  br i1 %13, label %19, label %14, !dbg !10627

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10616, metadata !DIExpression()), !dbg !10618
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10628
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10628
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10628
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !10630
  br label %19, !dbg !10631

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10616, metadata !DIExpression()), !dbg !10618
  %20 = icmp eq %struct._snode* %8, null, !dbg !10632
  br i1 %20, label %21, label %6, !dbg !10632

21:                                               ; preds = %19, %3
  ret void, !dbg !10633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10636, metadata !DIExpression()), !dbg !10637
  %2 = and i32 %0, 3, !dbg !10638
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !10638
  %4 = load volatile i32, i32* %3, align 4, !dbg !10638
  %5 = lshr i32 %0, 16, !dbg !10638
  %6 = and i32 %4, %5, !dbg !10638
  call void @llvm.dbg.value(metadata i32 %5, metadata !10592, metadata !DIExpression()) #25, !dbg !10639
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !10641, !srcloc !10599
  call void @llvm.dbg.value(metadata i32 %7, metadata !10595, metadata !DIExpression()) #25, !dbg !10639
  call void @llvm.dbg.value(metadata i32 %7, metadata !10600, metadata !DIExpression()) #25, !dbg !10642
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !10644, !range !4964
  %9 = lshr i32 %6, %8, !dbg !10645
  ret i32 %9, !dbg !10646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10647 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10652, metadata !DIExpression()), !dbg !10654
  call void @llvm.dbg.value(metadata i32 %1, metadata !10653, metadata !DIExpression()), !dbg !10654
  %3 = shl i32 %1, 16, !dbg !10655
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10655
  store volatile i32 %3, i32* %4, align 4, !dbg !10655
  ret void, !dbg !10656
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !10657 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10661, metadata !DIExpression()), !dbg !10662
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10663
  %3 = load volatile i32, i32* %2, align 4, !dbg !10663
  ret i32 %3, !dbg !10664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10665 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10667, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.value(metadata i32 %1, metadata !10668, metadata !DIExpression()), !dbg !10669
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10670
  store volatile i32 %1, i32* %3, align 4, !dbg !10670
  ret void, !dbg !10671
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !10672 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10674, metadata !DIExpression()), !dbg !10675
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10676
  %3 = load volatile i32, i32* %2, align 4, !dbg !10676
  ret i32 %3, !dbg !10677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10682, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.value(metadata i32* %1, metadata !10683, metadata !DIExpression()), !dbg !10684
  %3 = and i32 %0, 131072, !dbg !10685
  %4 = icmp eq i32 %3, 0, !dbg !10687
  br i1 %4, label %22, label %5, !dbg !10688

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10689
  %6 = and i32 %0, 2, !dbg !10691
  %7 = icmp eq i32 %6, 0, !dbg !10693
  br i1 %7, label %11, label %8, !dbg !10694

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10695
  %10 = icmp eq i32 %9, 0, !dbg !10695
  br i1 %10, label %33, label %11, !dbg !10698

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10699
  store i32 %12, i32* %1, align 4, !dbg !10699
  %13 = and i32 %0, 16, !dbg !10700
  %14 = icmp eq i32 %13, 0, !dbg !10702
  br i1 %14, label %17, label %15, !dbg !10703

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10704
  br label %31, !dbg !10706

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10707
  %19 = icmp eq i32 %18, 0, !dbg !10709
  br i1 %19, label %33, label %20, !dbg !10710

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10711
  br label %31, !dbg !10713

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10714
  %24 = icmp eq i32 %23, 0, !dbg !10716
  br i1 %24, label %31, label %25, !dbg !10717

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10718
  %27 = icmp eq i32 %26, 0, !dbg !10721
  br i1 %27, label %28, label %31, !dbg !10722

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10723
  br label %33, !dbg !10724

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10684
  ret i32 %34, !dbg !10724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10725 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10729, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.value(metadata i32 %1, metadata !10730, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.value(metadata i32 %2, metadata !10731, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.value(metadata i32 %3, metadata !10732, metadata !DIExpression()), !dbg !10740
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10741
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10741
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10741
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10733, metadata !DIExpression()), !dbg !10740
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10742
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10742
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10742
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10734, metadata !DIExpression()), !dbg !10740
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10743
  call void @llvm.dbg.value(metadata i32 %11, metadata !10735, metadata !DIExpression()), !dbg !10740
  %12 = and i32 %2, 48, !dbg !10744
  call void @llvm.dbg.value(metadata i32 %12, metadata !10736, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.value(metadata i32 %2, metadata !10737, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10740
  call void @llvm.dbg.value(metadata i32 %2, metadata !10738, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10740
  call void @llvm.dbg.value(metadata i32 %2, metadata !10739, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10740
  %13 = lshr i32 %2, 6, !dbg !10745
  %14 = and i32 %13, 1, !dbg !10745
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10746
  %15 = lshr i32 %2, 7, !dbg !10747
  %16 = and i32 %15, 3, !dbg !10747
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10748
  %17 = lshr i32 %2, 9, !dbg !10749
  %18 = and i32 %17, 3, !dbg !10749
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10750
  %19 = icmp eq i32 %12, 32, !dbg !10751
  br i1 %19, label %20, label %24, !dbg !10753

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10754
  br i1 %21, label %22, label %23, !dbg !10757

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10758
  br label %24, !dbg !10760

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10761
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10763
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10764
  ret void, !dbg !10765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !10766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10768, metadata !DIExpression()), !dbg !10770
  %2 = shl nuw i32 1, %0, !dbg !10771
  call void @llvm.dbg.value(metadata i32 %2, metadata !10769, metadata !DIExpression()), !dbg !10770
  ret i32 %2, !dbg !10772
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !10773 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10777, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %1, metadata !10778, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata i32 %2, metadata !10779, metadata !DIExpression()), !dbg !10780
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10781
  %5 = load volatile i32, i32* %4, align 4, !dbg !10781
  %6 = xor i32 %1, -1, !dbg !10781
  %7 = and i32 %5, %6, !dbg !10781
  %8 = mul i32 %2, %1, !dbg !10781
  %9 = or i32 %7, %8, !dbg !10781
  store volatile i32 %9, i32* %4, align 4, !dbg !10781
  ret void, !dbg !10782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10783 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10785, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.value(metadata i32 %1, metadata !10786, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.value(metadata i32 %2, metadata !10787, metadata !DIExpression()), !dbg !10788
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10789
  %5 = load volatile i32, i32* %4, align 4, !dbg !10789
  call void @llvm.dbg.value(metadata i32 %1, metadata !10592, metadata !DIExpression()) #25, !dbg !10790
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10792, !srcloc !10599
  call void @llvm.dbg.value(metadata i32 %6, metadata !10595, metadata !DIExpression()) #25, !dbg !10790
  call void @llvm.dbg.value(metadata i32 %6, metadata !10600, metadata !DIExpression()) #25, !dbg !10793
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10795, !range !4964
  %8 = shl nuw nsw i32 %7, 1, !dbg !10789
  %9 = shl i32 3, %8, !dbg !10789
  %10 = xor i32 %9, -1, !dbg !10789
  %11 = and i32 %5, %10, !dbg !10789
  call void @llvm.dbg.value(metadata i32 %1, metadata !10592, metadata !DIExpression()) #25, !dbg !10796
  call void @llvm.dbg.value(metadata i32 %6, metadata !10595, metadata !DIExpression()) #25, !dbg !10796
  call void @llvm.dbg.value(metadata i32 %6, metadata !10600, metadata !DIExpression()) #25, !dbg !10798
  %12 = shl i32 %2, %8, !dbg !10789
  %13 = or i32 %11, %12, !dbg !10789
  store volatile i32 %13, i32* %4, align 4, !dbg !10789
  ret void, !dbg !10800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10801 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10803, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.value(metadata i32 %1, metadata !10804, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.value(metadata i32 %2, metadata !10805, metadata !DIExpression()), !dbg !10806
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10807
  %5 = load volatile i32, i32* %4, align 4, !dbg !10807
  call void @llvm.dbg.value(metadata i32 %1, metadata !10592, metadata !DIExpression()) #25, !dbg !10808
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10810, !srcloc !10599
  call void @llvm.dbg.value(metadata i32 %6, metadata !10595, metadata !DIExpression()) #25, !dbg !10808
  call void @llvm.dbg.value(metadata i32 %6, metadata !10600, metadata !DIExpression()) #25, !dbg !10811
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10813, !range !4964
  %8 = shl nuw nsw i32 %7, 1, !dbg !10807
  %9 = shl i32 3, %8, !dbg !10807
  %10 = xor i32 %9, -1, !dbg !10807
  %11 = and i32 %5, %10, !dbg !10807
  call void @llvm.dbg.value(metadata i32 %1, metadata !10592, metadata !DIExpression()) #25, !dbg !10814
  call void @llvm.dbg.value(metadata i32 %6, metadata !10595, metadata !DIExpression()) #25, !dbg !10814
  call void @llvm.dbg.value(metadata i32 %6, metadata !10600, metadata !DIExpression()) #25, !dbg !10816
  %12 = shl i32 %2, %8, !dbg !10807
  %13 = or i32 %11, %12, !dbg !10807
  store volatile i32 %13, i32* %4, align 4, !dbg !10807
  ret void, !dbg !10818
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10819 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10821, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %1, metadata !10822, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 %2, metadata !10823, metadata !DIExpression()), !dbg !10824
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10825
  %5 = load volatile i32, i32* %4, align 4, !dbg !10825
  call void @llvm.dbg.value(metadata i32 %1, metadata !10592, metadata !DIExpression()) #25, !dbg !10826
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10828, !srcloc !10599
  call void @llvm.dbg.value(metadata i32 %6, metadata !10595, metadata !DIExpression()) #25, !dbg !10826
  call void @llvm.dbg.value(metadata i32 %6, metadata !10600, metadata !DIExpression()) #25, !dbg !10829
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10831, !range !4964
  %8 = shl nuw nsw i32 %7, 2, !dbg !10825
  %9 = shl i32 15, %8, !dbg !10825
  %10 = xor i32 %9, -1, !dbg !10825
  %11 = and i32 %5, %10, !dbg !10825
  call void @llvm.dbg.value(metadata i32 %1, metadata !10592, metadata !DIExpression()) #25, !dbg !10832
  call void @llvm.dbg.value(metadata i32 %6, metadata !10595, metadata !DIExpression()) #25, !dbg !10832
  call void @llvm.dbg.value(metadata i32 %6, metadata !10600, metadata !DIExpression()) #25, !dbg !10834
  %12 = shl i32 %2, %8, !dbg !10825
  %13 = or i32 %11, %12, !dbg !10825
  store volatile i32 %13, i32* %4, align 4, !dbg !10825
  ret void, !dbg !10836
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10837 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10839, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.value(metadata i32 %1, metadata !10840, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.value(metadata i32 %2, metadata !10841, metadata !DIExpression()), !dbg !10842
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10843
  %5 = load volatile i32, i32* %4, align 4, !dbg !10843
  %6 = lshr i32 %1, 8, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %6, metadata !10592, metadata !DIExpression()) #25, !dbg !10844
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !10846, !srcloc !10599
  call void @llvm.dbg.value(metadata i32 %7, metadata !10595, metadata !DIExpression()) #25, !dbg !10844
  call void @llvm.dbg.value(metadata i32 %7, metadata !10600, metadata !DIExpression()) #25, !dbg !10847
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !10849, !range !4964
  %9 = shl nuw nsw i32 %8, 2, !dbg !10843
  %10 = shl i32 15, %9, !dbg !10843
  %11 = xor i32 %10, -1, !dbg !10843
  %12 = and i32 %5, %11, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %6, metadata !10592, metadata !DIExpression()) #25, !dbg !10850
  call void @llvm.dbg.value(metadata i32 %7, metadata !10595, metadata !DIExpression()) #25, !dbg !10850
  call void @llvm.dbg.value(metadata i32 %7, metadata !10600, metadata !DIExpression()) #25, !dbg !10852
  %13 = shl i32 %2, %9, !dbg !10843
  %14 = or i32 %12, %13, !dbg !10843
  store volatile i32 %14, i32* %4, align 4, !dbg !10843
  ret void, !dbg !10854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10855 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10857, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata i32 %1, metadata !10858, metadata !DIExpression()), !dbg !10860
  call void @llvm.dbg.value(metadata i32 %2, metadata !10859, metadata !DIExpression()), !dbg !10860
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10861
  %5 = load volatile i32, i32* %4, align 4, !dbg !10861
  call void @llvm.dbg.value(metadata i32 %1, metadata !10592, metadata !DIExpression()) #25, !dbg !10862
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10864, !srcloc !10599
  call void @llvm.dbg.value(metadata i32 %6, metadata !10595, metadata !DIExpression()) #25, !dbg !10862
  call void @llvm.dbg.value(metadata i32 %6, metadata !10600, metadata !DIExpression()) #25, !dbg !10865
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10867, !range !4964
  %8 = shl nuw nsw i32 %7, 1, !dbg !10861
  %9 = shl i32 3, %8, !dbg !10861
  %10 = xor i32 %9, -1, !dbg !10861
  %11 = and i32 %5, %10, !dbg !10861
  call void @llvm.dbg.value(metadata i32 %1, metadata !10592, metadata !DIExpression()) #25, !dbg !10868
  call void @llvm.dbg.value(metadata i32 %6, metadata !10595, metadata !DIExpression()) #25, !dbg !10868
  call void @llvm.dbg.value(metadata i32 %6, metadata !10600, metadata !DIExpression()) #25, !dbg !10870
  %12 = shl i32 %2, %8, !dbg !10861
  %13 = or i32 %11, %12, !dbg !10861
  store volatile i32 %13, i32* %4, align 4, !dbg !10861
  ret void, !dbg !10872
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10873 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10875, metadata !DIExpression()), !dbg !10878
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10879
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10879
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10879
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10876, metadata !DIExpression()), !dbg !10878
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10880
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10881
  %6 = tail call fastcc zeroext i1 @device_is_ready.104() #26, !dbg !10882
  br i1 %6, label %7, label %11, !dbg !10884

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10885
  call void @llvm.dbg.value(metadata i32 %8, metadata !10877, metadata !DIExpression()), !dbg !10878
  %9 = icmp slt i32 %8, 0, !dbg !10886
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10888
  br label %11, !dbg !10888

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10878
  ret i32 %12, !dbg !10889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.104() unnamed_addr #1 !dbg !10890 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10894, metadata !DIExpression()), !dbg !10895
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10896, !srcloc !10898
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.105() #26, !dbg !10899
  ret i1 %1, !dbg !10900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10901 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10905, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i8 1, metadata !10906, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10907, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i32 0, metadata !10908, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10909, metadata !DIExpression()), !dbg !10910
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10911
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10911
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10911
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10907, metadata !DIExpression()), !dbg !10910
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10912
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10915
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10916
  call void @llvm.dbg.value(metadata i32 %7, metadata !10908, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i32 %7, metadata !10908, metadata !DIExpression()), !dbg !10910
  ret i32 %7, !dbg !10917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.105() unnamed_addr #1 !dbg !10918 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10920, metadata !DIExpression()), !dbg !10921
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #27, !dbg !10922
  ret i1 %1, !dbg !10923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10924 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10928, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.value(metadata i32 %1, metadata !10929, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.value(metadata i32 %2, metadata !10930, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.value(metadata i32 %3, metadata !10931, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.value(metadata i32 0, metadata !10932, metadata !DIExpression()), !dbg !10936
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10937
  %5 = icmp eq i32 %3, 17, !dbg !10938
  br i1 %5, label %6, label %14, !dbg !10939

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %7, metadata !10933, metadata !DIExpression()), !dbg !10941
  %8 = icmp eq i32 %7, 0, !dbg !10942
  %9 = shl nuw i32 1, %1, !dbg !10944
  br i1 %8, label %12, label %10, !dbg !10945

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10946
  br label %14, !dbg !10948

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10949
  br label %14, !dbg !10952

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10953
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #16 !dbg !10954 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10956, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.value(metadata i8* %1, metadata !10957, metadata !DIExpression()), !dbg !10960
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10961
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10961
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10961
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10958, metadata !DIExpression()), !dbg !10960
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10962
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10962
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !10964
  %9 = icmp eq i32 %8, 0, !dbg !10964
  br i1 %9, label %12, label %10, !dbg !10965

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10966
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !10968
  br label %12, !dbg !10969

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10970
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10972
  %15 = icmp eq i32 %14, 0, !dbg !10972
  br i1 %15, label %19, label %16, !dbg !10973

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10974
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !10975
  store i8 %18, i8* %1, align 1, !dbg !10976
  br label %19, !dbg !10977

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10960
  ret i32 %20, !dbg !10978
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10979 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10981, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i8 %1, metadata !10982, metadata !DIExpression()), !dbg !10985
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10986
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10986
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10986
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10983, metadata !DIExpression()), !dbg !10985
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10987

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10988
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10991
  %10 = icmp eq i32 %9, 0, !dbg !10991
  br i1 %10, label %18, label %11, !dbg !10992

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10993, !srcloc !11000
  call void @llvm.dbg.value(metadata i32 undef, metadata !10996, metadata !DIExpression()) #25, !dbg !11001
  call void @llvm.dbg.value(metadata i32 undef, metadata !10997, metadata !DIExpression()) #25, !dbg !11001
  call void @llvm.dbg.value(metadata i32 undef, metadata !10984, metadata !DIExpression()), !dbg !10985
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11002
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !11004
  %15 = icmp eq i32 %14, 0, !dbg !11004
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10993
  br i1 %15, label %17, label %19, !dbg !11005

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10996, metadata !DIExpression()) #25, !dbg !11001
  call void @llvm.dbg.value(metadata i32 %16, metadata !10984, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i32 undef, metadata !11006, metadata !DIExpression()) #25, !dbg !11009
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !11011, !srcloc !11012
  br label %18, !dbg !11013

18:                                               ; preds = %17, %7
  br label %7, !dbg !10988, !llvm.loop !11014

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10993
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11016
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !11017
  call void @llvm.dbg.value(metadata i32 %20, metadata !11006, metadata !DIExpression()) #25, !dbg !11018
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !11020, !srcloc !11012
  ret void, !dbg !11021
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #16 !dbg !11022 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11024, metadata !DIExpression()), !dbg !11027
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11028
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11028
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11028
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11025, metadata !DIExpression()), !dbg !11027
  call void @llvm.dbg.value(metadata i32 0, metadata !11026, metadata !DIExpression()), !dbg !11027
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11029
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11029
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !11031
  %8 = icmp ne i32 %7, 0, !dbg !11031
  %9 = zext i1 %8 to i32, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %9, metadata !11026, metadata !DIExpression()), !dbg !11027
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11033
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !11035
  %12 = icmp eq i32 %11, 0, !dbg !11035
  %13 = or i32 %9, 2, !dbg !11036
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11036
  call void @llvm.dbg.value(metadata i32 %14, metadata !11026, metadata !DIExpression()), !dbg !11027
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11037
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !11039
  %17 = icmp eq i32 %16, 0, !dbg !11039
  %18 = or i32 %14, 4, !dbg !11040
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11040
  call void @llvm.dbg.value(metadata i32 %19, metadata !11026, metadata !DIExpression()), !dbg !11027
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11041
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !11043
  %22 = icmp eq i32 %21, 0, !dbg !11043
  %23 = or i32 %19, 8, !dbg !11044
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11044
  call void @llvm.dbg.value(metadata i32 %24, metadata !11026, metadata !DIExpression()), !dbg !11027
  %25 = and i32 %24, 8, !dbg !11045
  %26 = icmp eq i32 %25, 0, !dbg !11045
  br i1 %26, label %29, label %27, !dbg !11047

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11048
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !11050
  br label %29, !dbg !11051

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11052
  %31 = icmp eq i32 %30, 0, !dbg !11052
  br i1 %31, label %34, label %32, !dbg !11054

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11055
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !11057
  br label %34, !dbg !11058

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11059
  %36 = icmp eq i32 %35, 0, !dbg !11059
  br i1 %36, label %39, label %37, !dbg !11061

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11062
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !11064
  br label %39, !dbg !11065

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11066
  %41 = icmp eq i32 %40, 0, !dbg !11066
  br i1 %41, label %44, label %42, !dbg !11068

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11069
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !11071
  br label %44, !dbg !11072

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11073
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !11074
  ret i32 %24, !dbg !11075
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11076 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11078, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11079, metadata !DIExpression()), !dbg !11087
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11088
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11088
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11088
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11080, metadata !DIExpression()), !dbg !11087
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11089
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11089
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11089
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11081, metadata !DIExpression()), !dbg !11087
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11090
  %10 = load i8, i8* %9, align 4, !dbg !11090
  %11 = zext i8 %10 to i32, !dbg !11091
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !11092
  call void @llvm.dbg.value(metadata i32 %12, metadata !11083, metadata !DIExpression()), !dbg !11087
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11093
  %14 = load i8, i8* %13, align 1, !dbg !11093
  %15 = zext i8 %14 to i32, !dbg !11094
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !11095
  call void @llvm.dbg.value(metadata i32 %16, metadata !11084, metadata !DIExpression()), !dbg !11087
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11096
  %18 = load i8, i8* %17, align 2, !dbg !11096
  %19 = zext i8 %18 to i32, !dbg !11097
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !11098
  call void @llvm.dbg.value(metadata i32 %20, metadata !11085, metadata !DIExpression()), !dbg !11087
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11099
  %22 = load i8, i8* %21, align 1, !dbg !11099
  %23 = zext i8 %22 to i32, !dbg !11100
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !11101
  call void @llvm.dbg.value(metadata i32 %24, metadata !11086, metadata !DIExpression()), !dbg !11087
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11102

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11104
  br i1 %26, label %69, label %27, !dbg !11106

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11107

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11108
  br i1 %29, label %65, label %30, !dbg !11108

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11110
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11087
  br i1 %31, label %38, label %34, !dbg !11112

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11113
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !11113

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11116
  br i1 %37, label %38, label %69, !dbg !11117

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11118
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !11119
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !11120
  %41 = icmp eq i32 %12, %40, !dbg !11122
  br i1 %41, label %43, label %42, !dbg !11123

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !11124
  br label %43, !dbg !11126

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !11127
  %45 = icmp eq i32 %16, %44, !dbg !11129
  br i1 %45, label %47, label %46, !dbg !11130

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !11131
  br label %47, !dbg !11133

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !11134
  %49 = icmp eq i32 %20, %48, !dbg !11136
  br i1 %49, label %51, label %50, !dbg !11137

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !11138
  br label %51, !dbg !11140

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !11141
  %53 = icmp eq i32 %24, %52, !dbg !11143
  br i1 %53, label %55, label %54, !dbg !11144

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !11145
  br label %55, !dbg !11147

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11148
  %57 = load i32, i32* %56, align 4, !dbg !11148
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11150
  %59 = load i32, i32* %58, align 4, !dbg !11150
  %60 = icmp eq i32 %57, %59, !dbg !11151
  br i1 %60, label %63, label %61, !dbg !11152

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !11153
  %62 = load i32, i32* %56, align 4, !dbg !11155
  store i32 %62, i32* %58, align 4, !dbg !11156
  br label %63, !dbg !11157

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11158
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !11159
  br label %69, !dbg !11160

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11108
  %67 = and i8 %66, 1, !dbg !11108
  %68 = icmp eq i8 %67, 0, !dbg !11108
  br i1 %68, label %30, label %69, !dbg !11108

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11087
  ret i32 %70, !dbg !11161
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !11162 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11164, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11165, metadata !DIExpression()), !dbg !11167
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11168
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11168
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11168
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11166, metadata !DIExpression()), !dbg !11167
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11169
  %7 = load i32, i32* %6, align 4, !dbg !11169
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11170
  store i32 %7, i32* %8, align 4, !dbg !11171
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !11172, !range !11173
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !11174
  %11 = trunc i32 %10 to i8, !dbg !11174
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11175
  store i8 %11, i8* %12, align 4, !dbg !11176
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !11177, !range !11178
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !11179
  %15 = trunc i32 %14 to i8, !dbg !11179
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11180
  store i8 %15, i8* %16, align 1, !dbg !11181
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !11182
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !11183, !range !11173
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !11184
  %20 = trunc i32 %19 to i8, !dbg !11184
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11185
  store i8 %20, i8* %21, align 2, !dbg !11186
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !11187, !range !11188
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !11189
  %24 = trunc i32 %23 to i8, !dbg !11189
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11190
  store i8 %24, i8* %25, align 1, !dbg !11191
  ret i32 0, !dbg !11192
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11193 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11197, metadata !DIExpression()), !dbg !11199
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11200
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11200
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11200
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11198, metadata !DIExpression()), !dbg !11199
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11201
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11201
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11202
  ret i32 %7, !dbg !11203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11208, metadata !DIExpression()), !dbg !11209
  %2 = icmp eq i32 %0, 1024, !dbg !11210
  %3 = select i1 %2, i32 2, i32 0, !dbg !11210
  %4 = icmp eq i32 %0, 1536, !dbg !11210
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11210
  ret i32 %5, !dbg !11211
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11212 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11214, metadata !DIExpression()), !dbg !11216
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11217
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11217
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11217
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11215, metadata !DIExpression()), !dbg !11216
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11218
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11218
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11219
  ret i32 %7, !dbg !11220
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11225, metadata !DIExpression()), !dbg !11226
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11227
  %3 = icmp ult i32 %2, 4, !dbg !11227
  br i1 %3, label %4, label %7, !dbg !11227

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11227
  %6 = load i32, i32* %5, align 4, !dbg !11227
  br label %7, !dbg !11227

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11228
  ret i32 %8, !dbg !11230
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11231 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11233, metadata !DIExpression()), !dbg !11235
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11236
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11236
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11236
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11234, metadata !DIExpression()), !dbg !11235
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11237
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11237
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11238
  ret i32 %7, !dbg !11239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11244, metadata !DIExpression()), !dbg !11246
  call void @llvm.dbg.value(metadata i32 %1, metadata !11245, metadata !DIExpression()), !dbg !11246
  %3 = icmp eq i32 %0, 4096, !dbg !11247
  %4 = icmp eq i32 %1, 0, !dbg !11247
  %5 = select i1 %4, i32 4, i32 3, !dbg !11247
  %6 = select i1 %4, i32 3, i32 2, !dbg !11247
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11247
  ret i32 %7, !dbg !11248
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11249 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11251, metadata !DIExpression()), !dbg !11253
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11254
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11254
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11254
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11252, metadata !DIExpression()), !dbg !11253
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11255
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11255
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11256
  ret i32 %7, !dbg !11257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11262, metadata !DIExpression()), !dbg !11263
  %2 = icmp eq i32 %0, 768, !dbg !11264
  %3 = zext i1 %2 to i32, !dbg !11263
  ret i32 %3, !dbg !11266
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11267 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11272, metadata !DIExpression()), !dbg !11273
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11274
  %3 = load volatile i32, i32* %2, align 4, !dbg !11274
  %4 = and i32 %3, 768, !dbg !11274
  ret i32 %4, !dbg !11275
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11276 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11278, metadata !DIExpression()), !dbg !11279
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11280
  %3 = load volatile i32, i32* %2, align 4, !dbg !11280
  %4 = and i32 %3, 4096, !dbg !11280
  ret i32 %4, !dbg !11281
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11282 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11284, metadata !DIExpression()), !dbg !11285
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11286
  %3 = load volatile i32, i32* %2, align 4, !dbg !11286
  %4 = and i32 %3, 12288, !dbg !11286
  ret i32 %4, !dbg !11287
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11288 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11290, metadata !DIExpression()), !dbg !11291
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11292
  %3 = load volatile i32, i32* %2, align 4, !dbg !11292
  %4 = and i32 %3, 1536, !dbg !11292
  ret i32 %4, !dbg !11293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11298, metadata !DIExpression()), !dbg !11299
  %2 = icmp eq i32 %0, 2, !dbg !11300
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11300
  %4 = icmp eq i32 %0, 1, !dbg !11300
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11300
  ret i32 %5, !dbg !11301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11306, metadata !DIExpression()), !dbg !11307
  %2 = icmp ult i32 %0, 3, !dbg !11308
  br i1 %2, label %3, label %6, !dbg !11308

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11308
  %5 = load i32, i32* %4, align 4, !dbg !11308
  br label %6, !dbg !11308

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11309
  ret i32 %7, !dbg !11311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11312 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11316, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.value(metadata i32 %1, metadata !11317, metadata !DIExpression()), !dbg !11318
  %3 = icmp eq i32 %0, 4, !dbg !11319
  %4 = icmp eq i32 %1, 0, !dbg !11319
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11319
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11319
  ret i32 %6, !dbg !11320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11325, metadata !DIExpression()), !dbg !11326
  %2 = icmp eq i32 %0, 1, !dbg !11327
  %3 = select i1 %2, i32 768, i32 0, !dbg !11326
  ret i32 %3, !dbg !11329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11330 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11334, metadata !DIExpression()), !dbg !11335
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11336
  %3 = load volatile i32, i32* %2, align 4, !dbg !11336
  %4 = and i32 %3, -8193, !dbg !11336
  store volatile i32 %4, i32* %2, align 4, !dbg !11336
  ret void, !dbg !11337
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11338 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11342, metadata !DIExpression()), !dbg !11345
  call void @llvm.dbg.value(metadata i32 %1, metadata !11343, metadata !DIExpression()), !dbg !11345
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11346
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11346
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11346
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11344, metadata !DIExpression()), !dbg !11345
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11347
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11347
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11348
  ret void, !dbg !11349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11350 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11352, metadata !DIExpression()), !dbg !11355
  call void @llvm.dbg.value(metadata i32 %1, metadata !11353, metadata !DIExpression()), !dbg !11355
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11356
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11356
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11356
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11354, metadata !DIExpression()), !dbg !11355
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11357
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11357
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11358
  ret void, !dbg !11359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11360 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11362, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.value(metadata i32 %1, metadata !11363, metadata !DIExpression()), !dbg !11365
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11366
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11366
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11366
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11364, metadata !DIExpression()), !dbg !11365
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11367
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11367
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11368
  ret void, !dbg !11369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11370 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11372, metadata !DIExpression()), !dbg !11375
  call void @llvm.dbg.value(metadata i32 %1, metadata !11373, metadata !DIExpression()), !dbg !11375
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11376
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11376
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11376
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11374, metadata !DIExpression()), !dbg !11375
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11377
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11377
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11378
  ret void, !dbg !11379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11380 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11382, metadata !DIExpression()), !dbg !11387
  call void @llvm.dbg.value(metadata i32 %1, metadata !11383, metadata !DIExpression()), !dbg !11387
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11388
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11388
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11388
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11384, metadata !DIExpression()), !dbg !11387
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11389
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11389
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11389
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11385, metadata !DIExpression()), !dbg !11387
  %10 = bitcast i32* %3 to i8*, !dbg !11390
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !11390
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11391
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11391
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11395
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11395
  %15 = load i8*, i8** %14, align 4, !dbg !11395
  call void @llvm.dbg.value(metadata i32* %3, metadata !11386, metadata !DIExpression(DW_OP_deref)), !dbg !11387
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11396
  %17 = icmp slt i32 %16, 0, !dbg !11397
  br i1 %17, label %18, label %21, !dbg !11398

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.108(i32 noundef 1) #26, !dbg !11399
  %20 = zext i8 %19 to i32, !dbg !11399
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.109, i32 0, i32 0), i32 noundef %20) #27, !dbg !11399
  br label %26, !dbg !11405

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11406
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11406
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !11407
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11408
  %25 = load i32, i32* %3, align 4, !dbg !11409
  call void @llvm.dbg.value(metadata i32 %25, metadata !11386, metadata !DIExpression()), !dbg !11387
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !11410
  br label %26, !dbg !11411

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !11411
  ret void, !dbg !11411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11412 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11414, metadata !DIExpression()), !dbg !11415
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11416
  %3 = load volatile i32, i32* %2, align 4, !dbg !11416
  %4 = or i32 %3, 8192, !dbg !11416
  store volatile i32 %4, i32* %2, align 4, !dbg !11416
  ret void, !dbg !11417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11418 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11420, metadata !DIExpression()), !dbg !11424
  call void @llvm.dbg.value(metadata i8* %1, metadata !11421, metadata !DIExpression()), !dbg !11424
  call void @llvm.dbg.value(metadata i32* %2, metadata !11422, metadata !DIExpression()), !dbg !11424
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11425
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11425
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11425
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11423, metadata !DIExpression()), !dbg !11424
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11426
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11426
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11428
  br i1 %9, label %12, label %10, !dbg !11429

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !11430
  br label %12, !dbg !11431

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11424
  ret i32 %13, !dbg !11432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.108(i32 noundef %0) unnamed_addr #5 !dbg !11433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11435, metadata !DIExpression()), !dbg !11436
  %2 = icmp eq i32 %0, 2, !dbg !11437
  %3 = select i1 %2, i8 87, i8 63, !dbg !11437
  %4 = icmp eq i32 %0, 1, !dbg !11437
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11437
  ret i8 %5, !dbg !11438
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11439 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11443, metadata !DIExpression()), !dbg !11445
  call void @llvm.dbg.value(metadata i32 0, metadata !11444, metadata !DIExpression()), !dbg !11445
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11446
  %3 = load volatile i32, i32* %2, align 4, !dbg !11446
  %4 = and i32 %3, -32769, !dbg !11446
  store volatile i32 %4, i32* %2, align 4, !dbg !11446
  ret void, !dbg !11447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !11448 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11452, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i32 %1, metadata !11453, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i32 0, metadata !11454, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.value(metadata i32 %2, metadata !11455, metadata !DIExpression()), !dbg !11456
  %4 = mul i32 %1, 25, !dbg !11457
  %5 = shl i32 %2, 2, !dbg !11457
  %6 = udiv i32 %4, %5, !dbg !11457
  %7 = udiv i32 %6, 100, !dbg !11457
  %8 = shl nuw nsw i32 %7, 4, !dbg !11457
  %9 = mul i32 %7, -100, !dbg !11457
  %10 = add i32 %9, %6, !dbg !11457
  %11 = shl i32 %10, 4, !dbg !11457
  %12 = add i32 %11, 50, !dbg !11457
  %13 = udiv i32 %12, 100, !dbg !11457
  %14 = and i32 %13, 240, !dbg !11457
  %15 = add nuw nsw i32 %14, %8, !dbg !11457
  %16 = and i32 %13, 15, !dbg !11457
  %17 = and i32 %15, 65520, !dbg !11460
  %18 = or i32 %17, %16, !dbg !11460
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11461
  store volatile i32 %18, i32* %19, align 4, !dbg !11462
  ret void, !dbg !11463
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11464 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11466, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata i32 %1, metadata !11467, metadata !DIExpression()), !dbg !11468
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11469
  %4 = load volatile i32, i32* %3, align 4, !dbg !11469
  %5 = and i32 %4, -769, !dbg !11469
  %6 = or i32 %5, %1, !dbg !11469
  store volatile i32 %6, i32* %3, align 4, !dbg !11469
  ret void, !dbg !11470
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11471 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11473, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata i32 %1, metadata !11474, metadata !DIExpression()), !dbg !11475
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11476
  %4 = load volatile i32, i32* %3, align 4, !dbg !11476
  %5 = and i32 %4, -4097, !dbg !11476
  %6 = or i32 %5, %1, !dbg !11476
  store volatile i32 %6, i32* %3, align 4, !dbg !11476
  ret void, !dbg !11477
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11478 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11480, metadata !DIExpression()), !dbg !11482
  call void @llvm.dbg.value(metadata i32 %1, metadata !11481, metadata !DIExpression()), !dbg !11482
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11483
  %4 = load volatile i32, i32* %3, align 4, !dbg !11483
  %5 = and i32 %4, -12289, !dbg !11483
  %6 = or i32 %5, %1, !dbg !11483
  store volatile i32 %6, i32* %3, align 4, !dbg !11483
  ret void, !dbg !11484
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11485 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11487, metadata !DIExpression()), !dbg !11489
  call void @llvm.dbg.value(metadata i32 %1, metadata !11488, metadata !DIExpression()), !dbg !11489
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11490
  %4 = load volatile i32, i32* %3, align 4, !dbg !11490
  %5 = and i32 %4, -1537, !dbg !11490
  %6 = or i32 %5, %1, !dbg !11490
  store volatile i32 %6, i32* %3, align 4, !dbg !11490
  ret void, !dbg !11491
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11492 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11494, metadata !DIExpression()), !dbg !11495
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11496
  %3 = load volatile i32, i32* %2, align 4, !dbg !11496
  %4 = lshr i32 %3, 3, !dbg !11497
  %5 = and i32 %4, 1, !dbg !11497
  ret i32 %5, !dbg !11498
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11499 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11501, metadata !DIExpression()), !dbg !11502
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11503
  %3 = load volatile i32, i32* %2, align 4, !dbg !11503
  %4 = and i32 %3, 1, !dbg !11503
  ret i32 %4, !dbg !11504
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11505 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11507, metadata !DIExpression()), !dbg !11508
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11509
  %3 = load volatile i32, i32* %2, align 4, !dbg !11509
  %4 = lshr i32 %3, 1, !dbg !11510
  %5 = and i32 %4, 1, !dbg !11510
  ret i32 %5, !dbg !11511
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11512 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11514, metadata !DIExpression()), !dbg !11515
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11516
  %3 = load volatile i32, i32* %2, align 4, !dbg !11516
  %4 = lshr i32 %3, 8, !dbg !11517
  %5 = and i32 %4, 1, !dbg !11517
  ret i32 %5, !dbg !11518
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11519 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11521, metadata !DIExpression()), !dbg !11522
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11523
  store volatile i32 -257, i32* %2, align 4, !dbg !11523
  ret void, !dbg !11524
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11525 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11527, metadata !DIExpression()), !dbg !11529
  %3 = bitcast i32* %2 to i8*, !dbg !11530
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11530
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11528, metadata !DIExpression()), !dbg !11531
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11532
  %5 = load volatile i32, i32* %4, align 4, !dbg !11532
  store volatile i32 %5, i32* %2, align 4, !dbg !11533
  %6 = load volatile i32, i32* %2, align 4, !dbg !11534
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11535
  %8 = load volatile i32, i32* %7, align 4, !dbg !11535
  store volatile i32 %8, i32* %2, align 4, !dbg !11536
  %9 = load volatile i32, i32* %2, align 4, !dbg !11537
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11538
  ret void, !dbg !11538
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11539 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11541, metadata !DIExpression()), !dbg !11543
  %3 = bitcast i32* %2 to i8*, !dbg !11544
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11544
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11542, metadata !DIExpression()), !dbg !11545
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11546
  %5 = load volatile i32, i32* %4, align 4, !dbg !11546
  store volatile i32 %5, i32* %2, align 4, !dbg !11547
  %6 = load volatile i32, i32* %2, align 4, !dbg !11548
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11549
  %8 = load volatile i32, i32* %7, align 4, !dbg !11549
  store volatile i32 %8, i32* %2, align 4, !dbg !11550
  %9 = load volatile i32, i32* %2, align 4, !dbg !11551
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11552
  ret void, !dbg !11552
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11553 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11555, metadata !DIExpression()), !dbg !11557
  %3 = bitcast i32* %2 to i8*, !dbg !11558
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11558
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11556, metadata !DIExpression()), !dbg !11559
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11560
  %5 = load volatile i32, i32* %4, align 4, !dbg !11560
  store volatile i32 %5, i32* %2, align 4, !dbg !11561
  %6 = load volatile i32, i32* %2, align 4, !dbg !11562
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11563
  %8 = load volatile i32, i32* %7, align 4, !dbg !11563
  store volatile i32 %8, i32* %2, align 4, !dbg !11564
  %9 = load volatile i32, i32* %2, align 4, !dbg !11565
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11566
  ret void, !dbg !11566
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11567 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11569, metadata !DIExpression()), !dbg !11571
  %3 = bitcast i32* %2 to i8*, !dbg !11572
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11572
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11570, metadata !DIExpression()), !dbg !11573
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11574
  %5 = load volatile i32, i32* %4, align 4, !dbg !11574
  store volatile i32 %5, i32* %2, align 4, !dbg !11575
  %6 = load volatile i32, i32* %2, align 4, !dbg !11576
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11577
  %8 = load volatile i32, i32* %7, align 4, !dbg !11577
  store volatile i32 %8, i32* %2, align 4, !dbg !11578
  %9 = load volatile i32, i32* %2, align 4, !dbg !11579
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11580
  ret void, !dbg !11580
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11581 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11583, metadata !DIExpression()), !dbg !11584
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11585
  %3 = load volatile i32, i32* %2, align 4, !dbg !11585
  %4 = lshr i32 %3, 7, !dbg !11586
  %5 = and i32 %4, 1, !dbg !11586
  ret i32 %5, !dbg !11587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !11588 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11592, metadata !DIExpression()), !dbg !11594
  call void @llvm.dbg.value(metadata i8 %1, metadata !11593, metadata !DIExpression()), !dbg !11594
  %3 = zext i8 %1 to i32, !dbg !11595
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11596
  store volatile i32 %3, i32* %4, align 4, !dbg !11597
  ret void, !dbg !11598
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11599 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11601, metadata !DIExpression()), !dbg !11602
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11603
  %3 = load volatile i32, i32* %2, align 4, !dbg !11603
  %4 = lshr i32 %3, 5, !dbg !11604
  %5 = and i32 %4, 1, !dbg !11604
  ret i32 %5, !dbg !11605
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11606 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11610, metadata !DIExpression()), !dbg !11611
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11612
  %3 = load volatile i32, i32* %2, align 4, !dbg !11612
  %4 = trunc i32 %3 to i8, !dbg !11613
  ret i8 %4, !dbg !11614
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11615 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11617, metadata !DIExpression()), !dbg !11623
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11624
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11624
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11624
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11618, metadata !DIExpression()), !dbg !11623
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11625
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11625
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11625
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11619, metadata !DIExpression()), !dbg !11623
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11626
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11627
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11627
  %10 = tail call fastcc zeroext i1 @device_is_ready.114(%struct.device* noundef %9) #26, !dbg !11629
  br i1 %10, label %14, label %11, !dbg !11630

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.108(i32 noundef 1) #26, !dbg !11631
  %13 = zext i8 %12 to i32, !dbg !11631
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.115, i32 0, i32 0), i32 noundef %13) #27, !dbg !11631
  br label %62, !dbg !11637

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11638
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11639
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11639
  %18 = load i8*, i8** %17, align 4, !dbg !11639
  %19 = tail call fastcc i32 @clock_control_on.116(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %19, metadata !11622, metadata !DIExpression()), !dbg !11623
  %20 = icmp eq i32 %19, 0, !dbg !11641
  br i1 %20, label %24, label %21, !dbg !11643

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.108(i32 noundef 1) #26, !dbg !11644
  %23 = zext i8 %22 to i32, !dbg !11644
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.117, i32 0, i32 0), i32 noundef %23) #27, !dbg !11644
  br label %62, !dbg !11650

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11651
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11651
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !11652
  call void @llvm.dbg.value(metadata i32 %27, metadata !11622, metadata !DIExpression()), !dbg !11623
  %28 = icmp slt i32 %27, 0, !dbg !11653
  br i1 %28, label %62, label %29, !dbg !11655

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11656
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11656
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !11657
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11658
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !11659
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11660
  %34 = load i32, i32* %33, align 4, !dbg !11660
  %35 = icmp ult i32 %34, 3, !dbg !11662
  br i1 %35, label %39, label %36, !dbg !11662

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.108(i32 noundef 2) #26, !dbg !11663
  %38 = zext i8 %37 to i32, !dbg !11663
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6.118, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !11663
  call void @llvm.dbg.value(metadata i32 0, metadata !11620, metadata !DIExpression()), !dbg !11623
  call void @llvm.dbg.value(metadata i32 0, metadata !11621, metadata !DIExpression()), !dbg !11623
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11662
  %41 = load i32, i32* %40, align 4, !dbg !11662
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.7, i32 0, i32 %34, !dbg !11662
  %43 = load i32, i32* %42, align 4, !dbg !11662
  br label %44, !dbg !11662

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11672
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11672
  call void @llvm.dbg.value(metadata i32 %46, metadata !11621, metadata !DIExpression()), !dbg !11623
  call void @llvm.dbg.value(metadata i32 %45, metadata !11620, metadata !DIExpression()), !dbg !11623
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11673
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !11674
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11675
  %49 = load i8, i8* %48, align 4, !dbg !11675, !range !7601
  %50 = icmp eq i8 %49, 0, !dbg !11675
  br i1 %50, label %52, label %51, !dbg !11677

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11678
  br label %52, !dbg !11680

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11681
  %54 = load i32, i32* %53, align 4, !dbg !11681
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !11682
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11683
  %56 = load i8, i8* %55, align 4, !dbg !11683, !range !7601
  %57 = icmp eq i8 %56, 0, !dbg !11683
  br i1 %57, label %60, label %58, !dbg !11685

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11686
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !11688
  br label %60, !dbg !11689

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11690
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !11691
  br label %62, !dbg !11692

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11623
  ret i32 %63, !dbg !11693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11694 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11698, metadata !DIExpression()), !dbg !11702
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11703
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11703
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11703
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11699, metadata !DIExpression()), !dbg !11702
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11700, metadata !DIExpression()), !dbg !11702
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11704
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11705
  ret void, !dbg !11706
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.114(%struct.device* noundef %0) unnamed_addr #1 !dbg !11707 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11711, metadata !DIExpression()), !dbg !11712
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11713, !srcloc !11715
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.119(%struct.device* noundef %0) #26, !dbg !11716
  ret i1 %2, !dbg !11717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.116(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11718 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11720, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.value(metadata i8* %1, metadata !11721, metadata !DIExpression()), !dbg !11723
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11724
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11724
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11724
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11722, metadata !DIExpression()), !dbg !11723
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11725
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11725
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !11726
  ret i32 %8, !dbg !11727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11728 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11732, metadata !DIExpression()), !dbg !11736
  call void @llvm.dbg.value(metadata i8 0, metadata !11733, metadata !DIExpression()), !dbg !11736
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11737
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !11737
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11735, metadata !DIExpression(DW_OP_deref)), !dbg !11736
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !11738
  call void @llvm.dbg.value(metadata i32 %4, metadata !11734, metadata !DIExpression()), !dbg !11736
  %5 = icmp slt i32 %4, 0, !dbg !11739
  br i1 %5, label %9, label %6, !dbg !11741

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11742
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11735, metadata !DIExpression()), !dbg !11736
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11743
  br label %9, !dbg !11744

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11736
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !11745
  ret i32 %10, !dbg !11745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11746 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11748, metadata !DIExpression()), !dbg !11750
  call void @llvm.dbg.value(metadata i32 12, metadata !11749, metadata !DIExpression()), !dbg !11750
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11751
  %3 = load volatile i32, i32* %2, align 4, !dbg !11751
  %4 = or i32 %3, 12, !dbg !11751
  store volatile i32 %4, i32* %2, align 4, !dbg !11751
  ret void, !dbg !11752
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !11753 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11755, metadata !DIExpression()), !dbg !11759
  call void @llvm.dbg.value(metadata i32 %1, metadata !11756, metadata !DIExpression()), !dbg !11759
  call void @llvm.dbg.value(metadata i32 %2, metadata !11757, metadata !DIExpression()), !dbg !11759
  call void @llvm.dbg.value(metadata i32 0, metadata !11758, metadata !DIExpression()), !dbg !11759
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11760
  %5 = load volatile i32, i32* %4, align 4, !dbg !11760
  %6 = and i32 %5, -5633, !dbg !11760
  %7 = or i32 %2, %1, !dbg !11760
  %8 = or i32 %7, %6, !dbg !11760
  store volatile i32 %8, i32* %4, align 4, !dbg !11760
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11761
  %10 = load volatile i32, i32* %9, align 4, !dbg !11761
  %11 = and i32 %10, -12289, !dbg !11761
  store volatile i32 %11, i32* %9, align 4, !dbg !11761
  ret void, !dbg !11762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11763 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11765, metadata !DIExpression()), !dbg !11766
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11767
  %3 = load volatile i32, i32* %2, align 4, !dbg !11767
  %4 = or i32 %3, 8, !dbg !11767
  store volatile i32 %4, i32* %2, align 4, !dbg !11767
  ret void, !dbg !11768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11769 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11773, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11774, metadata !DIExpression()), !dbg !11776
  call void @llvm.dbg.value(metadata i32 0, metadata !11775, metadata !DIExpression()), !dbg !11776
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11777
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11777
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11778
  %5 = load i8, i8* %4, align 4, !dbg !11778
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !11779
  ret i32 %6, !dbg !11780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.119(%struct.device* noundef %0) unnamed_addr #1 !dbg !11781 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11783, metadata !DIExpression()), !dbg !11784
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !11785
  ret i1 %2, !dbg !11786
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #17 !dbg !11787 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11789, metadata !DIExpression()), !dbg !11790
  tail call fastcc void @__NVIC_SetPriority.121() #26, !dbg !11791
  store i32 3199, i32* @last_load, align 4, !dbg !11792
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11793
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11794
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11795
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11796
  %3 = or i32 %2, 7, !dbg !11796
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11796
  ret i32 0, !dbg !11797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.121() unnamed_addr #17 !dbg !11798 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11800, metadata !DIExpression()), !dbg !11802
  call void @llvm.dbg.value(metadata i32 1, metadata !11801, metadata !DIExpression()), !dbg !11802
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11803
  ret void, !dbg !11806
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11807 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11809, metadata !DIExpression()), !dbg !11811
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11812
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11813
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11814
  %5 = add i32 %4, %3, !dbg !11814
  store i32 %5, i32* @cycle_count, align 4, !dbg !11814
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11815
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11816
  %7 = sub i32 %5, %6, !dbg !11819
  %8 = udiv i32 %7, 3200, !dbg !11820
  call void @llvm.dbg.value(metadata i32 %8, metadata !11810, metadata !DIExpression()), !dbg !11811
  %9 = mul nuw i32 %8, 3200, !dbg !11821
  %10 = add i32 %9, %6, !dbg !11822
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11822
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !11823
  tail call void @z_arm_int_exit() #27, !dbg !11824
  ret void, !dbg !11825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #17 !dbg !11826 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11831
  call void @llvm.dbg.value(metadata i32 %1, metadata !11828, metadata !DIExpression()), !dbg !11832
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11833
  call void @llvm.dbg.value(metadata i32 %2, metadata !11829, metadata !DIExpression()), !dbg !11832
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11834
  call void @llvm.dbg.value(metadata i32 %3, metadata !11830, metadata !DIExpression()), !dbg !11832
  %4 = and i32 %2, 65536, !dbg !11835
  %5 = icmp ne i32 %4, 0, !dbg !11835
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11837
  %8 = load i32, i32* @last_load, align 4, !dbg !11832
  br i1 %7, label %9, label %13, !dbg !11837

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11838
  %11 = add i32 %10, %8, !dbg !11838
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11838
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11840
  br label %13, !dbg !11841

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11842
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11843
  %16 = add i32 %14, %15, !dbg !11844
  ret i32 %16, !dbg !11845
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11850, metadata !DIExpression()), !dbg !11863
  call void @llvm.dbg.value(metadata i1 %1, metadata !11851, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11863
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11864
  br i1 %4, label %5, label %8, !dbg !11864

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11866
  %7 = and i32 %6, -2, !dbg !11866
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11866
  store i32 -16777216, i32* @last_load, align 4, !dbg !11868
  br label %54, !dbg !11869

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11870
  call void @llvm.dbg.value(metadata i32 %9, metadata !11855, metadata !DIExpression()), !dbg !11863
  br i1 %3, label %18, label %10, !dbg !11871

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11871
  call void @llvm.dbg.value(metadata i32 undef, metadata !11850, metadata !DIExpression()), !dbg !11863
  %12 = icmp slt i32 %11, 1, !dbg !11872
  br i1 %12, label %18, label %13, !dbg !11872

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !11872
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !11872
  %16 = mul nuw nsw i32 %15, 3200, !dbg !11872
  %17 = add nuw nsw i32 %16, 3199, !dbg !11872
  br label %18, !dbg !11872

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11850, metadata !DIExpression()), !dbg !11863
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11873, metadata !DIExpression()) #25, !dbg !11880
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11882, !srcloc !11888
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11882
  call void @llvm.dbg.value(metadata i32 %21, metadata !11885, metadata !DIExpression()) #25, !dbg !11889
  call void @llvm.dbg.value(metadata i32 undef, metadata !11886, metadata !DIExpression()) #25, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %21, metadata !11879, metadata !DIExpression()) #25, !dbg !11880
  call void @llvm.dbg.value(metadata i32 %21, metadata !11856, metadata !DIExpression()), !dbg !11863
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11890
  call void @llvm.dbg.value(metadata i32 %22, metadata !11861, metadata !DIExpression()), !dbg !11863
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11891
  call void @llvm.dbg.value(metadata i32 %23, metadata !11853, metadata !DIExpression()), !dbg !11863
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11892
  %25 = add i32 %24, %22, !dbg !11892
  store i32 %25, i32* @cycle_count, align 4, !dbg !11892
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11893
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11894
  %27 = sub i32 %25, %26, !dbg !11895
  call void @llvm.dbg.value(metadata i32 %27, metadata !11862, metadata !DIExpression()), !dbg !11863
  %28 = icmp slt i32 %27, 0, !dbg !11896
  br i1 %28, label %38, label %29, !dbg !11898

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11852, metadata !DIExpression()), !dbg !11863
  call void @llvm.dbg.value(metadata i32 undef, metadata !11852, metadata !DIExpression()), !dbg !11863
  %30 = add nuw i32 %19, %27, !dbg !11899
  %31 = urem i32 %30, 3200, !dbg !11901
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11852, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11863
  %32 = sub nuw nsw i32 %19, %31, !dbg !11902
  call void @llvm.dbg.value(metadata i32 %32, metadata !11852, metadata !DIExpression()), !dbg !11863
  %33 = icmp ugt i32 %32, 1024, !dbg !11903
  br i1 %33, label %34, label %36, !dbg !11903

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11852, metadata !DIExpression()), !dbg !11863
  %35 = icmp ugt i32 %32, 16771200, !dbg !11904
  br i1 %35, label %38, label %36, !dbg !11906

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16771200, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11907
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11908
  call void @llvm.dbg.value(metadata i32 %40, metadata !11854, metadata !DIExpression()), !dbg !11863
  %41 = add nsw i32 %39, -1, !dbg !11909
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11910
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11911
  %42 = icmp ult i32 %23, %40, !dbg !11912
  br i1 %42, label %43, label %48, !dbg !11914

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11915
  %45 = add i32 %23, %9, !dbg !11917
  %46 = sub i32 %45, %40, !dbg !11918
  %47 = add i32 %46, %44, !dbg !11915
  br label %52, !dbg !11919

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11920
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11922
  %51 = add i32 %49, %50, !dbg !11922
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11923
  store i32 %53, i32* @cycle_count, align 4, !dbg !11923
  call void @llvm.dbg.value(metadata i32 %21, metadata !11924, metadata !DIExpression()) #25, !dbg !11930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11929, metadata !DIExpression()) #25, !dbg !11930
  call void @llvm.dbg.value(metadata i32 %21, metadata !11932, metadata !DIExpression()) #25, !dbg !11935
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !11937, !srcloc !11938
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11939
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11940 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11873, metadata !DIExpression()) #25, !dbg !11944
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11946, !srcloc !11888
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11946
  call void @llvm.dbg.value(metadata i32 %2, metadata !11885, metadata !DIExpression()) #25, !dbg !11948
  call void @llvm.dbg.value(metadata i32 undef, metadata !11886, metadata !DIExpression()) #25, !dbg !11948
  call void @llvm.dbg.value(metadata i32 %2, metadata !11879, metadata !DIExpression()) #25, !dbg !11944
  call void @llvm.dbg.value(metadata i32 %2, metadata !11942, metadata !DIExpression()), !dbg !11949
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11950
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11951
  %5 = add i32 %4, %3, !dbg !11952
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11953
  %7 = sub i32 %5, %6, !dbg !11954
  call void @llvm.dbg.value(metadata i32 %7, metadata !11943, metadata !DIExpression()), !dbg !11949
  call void @llvm.dbg.value(metadata i32 %2, metadata !11924, metadata !DIExpression()) #25, !dbg !11955
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11929, metadata !DIExpression()) #25, !dbg !11955
  call void @llvm.dbg.value(metadata i32 %2, metadata !11932, metadata !DIExpression()) #25, !dbg !11957
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !11959, !srcloc !11938
  %8 = udiv i32 %7, 3200, !dbg !11960
  ret i32 %8, !dbg !11961
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11962 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11873, metadata !DIExpression()) #25, !dbg !11966
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11968, !srcloc !11888
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11968
  call void @llvm.dbg.value(metadata i32 %2, metadata !11885, metadata !DIExpression()) #25, !dbg !11970
  call void @llvm.dbg.value(metadata i32 undef, metadata !11886, metadata !DIExpression()) #25, !dbg !11970
  call void @llvm.dbg.value(metadata i32 %2, metadata !11879, metadata !DIExpression()) #25, !dbg !11966
  call void @llvm.dbg.value(metadata i32 %2, metadata !11964, metadata !DIExpression()), !dbg !11971
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11972
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11973
  %5 = add i32 %4, %3, !dbg !11974
  call void @llvm.dbg.value(metadata i32 %5, metadata !11965, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.value(metadata i32 %2, metadata !11924, metadata !DIExpression()) #25, !dbg !11975
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11929, metadata !DIExpression()) #25, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %2, metadata !11932, metadata !DIExpression()) #25, !dbg !11977
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !11979, !srcloc !11938
  ret i32 %5, !dbg !11980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #17 !dbg !11981 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11982
  %2 = icmp eq i32 %1, -16777216, !dbg !11984
  br i1 %2, label %3, label %6, !dbg !11985

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11986
  %5 = or i32 %4, 1, !dbg !11986
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11986
  br label %6, !dbg !11988

6:                                                ; preds = %3, %0
  ret void, !dbg !11989
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #17 !dbg !11990 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11991
  %2 = and i32 %1, -2, !dbg !11991
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11991
  ret void, !dbg !11992
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !11993 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12019, metadata !DIExpression()), !dbg !12022
  call void @llvm.dbg.value(metadata i8 %1, metadata !12020, metadata !DIExpression()), !dbg !12022
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12021, metadata !DIExpression()), !dbg !12022
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12023
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12023
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12022
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12024
  %8 = load i8, i8* %6, align 4, !dbg !12025
  %9 = zext i8 %8 to i32, !dbg !12026
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12026
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12027
  br i1 %11, label %18, label %24, !dbg !12028

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12022
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12024
  %14 = load i8, i8* %6, align 4, !dbg !12025
  %15 = zext i8 %14 to i32, !dbg !12026
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12026
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12027
  br i1 %17, label %18, label %24, !dbg !12028, !llvm.loop !12029

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12031
  %21 = load i8, i8* %20, align 1, !dbg !12031
  %22 = icmp eq i8 %21, %1, !dbg !12034
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12035
  br i1 %22, label %24, label %12, !dbg !12036

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12022
  ret i32 %25, !dbg !12037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12038 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12049, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i8 %1, metadata !12050, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 %2, metadata !12051, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 0, metadata !12054, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 0, metadata !12055, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i8 0, metadata !12056, metadata !DIExpression()), !dbg !12066
  %4 = icmp eq i8 %1, 0, !dbg !12067
  br i1 %4, label %35, label %5, !dbg !12068

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12067
  br label %9, !dbg !12068

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12056, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.value(metadata i32 %29, metadata !12054, metadata !DIExpression()), !dbg !12065
  %8 = icmp eq i32 %34, %6, !dbg !12067
  br i1 %8, label %35, label %9, !dbg !12068, !llvm.loop !12069

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12056, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.value(metadata i32 %11, metadata !12054, metadata !DIExpression()), !dbg !12065
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12071
  %13 = load i32, i32* %12, align 4, !dbg !12071
  call void @llvm.dbg.value(metadata i32 %13, metadata !12053, metadata !DIExpression()), !dbg !12065
  %14 = and i32 %13, 31, !dbg !12072
  %15 = icmp ult i32 %14, 16, !dbg !12073
  br i1 %15, label %16, label %20, !dbg !12074

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12075
  %18 = load i32, i32* %17, align 4, !dbg !12075
  %19 = or i32 %18, 32, !dbg !12077
  call void @llvm.dbg.value(metadata i32 %19, metadata !12054, metadata !DIExpression()), !dbg !12065
  br label %28, !dbg !12078

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12079

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12080
  %23 = load i32, i32* %22, align 4, !dbg !12080
  call void @llvm.dbg.value(metadata i32 %23, metadata !12058, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12081
  %24 = lshr i32 %23, 7, !dbg !12082
  %25 = and i32 %24, 16, !dbg !12082
  %26 = or i32 %25, %23, !dbg !12082
  call void @llvm.dbg.value(metadata i32 %26, metadata !12054, metadata !DIExpression()), !dbg !12065
  br label %28, !dbg !12083

27:                                               ; preds = %20
  br label %28, !dbg !12084

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12065
  call void @llvm.dbg.value(metadata i32 %29, metadata !12054, metadata !DIExpression()), !dbg !12065
  %30 = lshr i32 %13, 5, !dbg !12084
  %31 = and i32 %30, 255, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %31, metadata !12052, metadata !DIExpression()), !dbg !12065
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !12085
  call void @llvm.dbg.value(metadata i32 %32, metadata !12055, metadata !DIExpression()), !dbg !12065
  %33 = icmp slt i32 %32, 0, !dbg !12086
  %34 = add nuw nsw i32 %10, 1, !dbg !12088
  call void @llvm.dbg.value(metadata i32 %34, metadata !12056, metadata !DIExpression()), !dbg !12066
  br i1 %33, label %35, label %7, !dbg !12089

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12090
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12095, metadata !DIExpression()), !dbg !12099
  call void @llvm.dbg.value(metadata i32 %1, metadata !12096, metadata !DIExpression()), !dbg !12099
  call void @llvm.dbg.value(metadata i32 %2, metadata !12097, metadata !DIExpression()), !dbg !12099
  %4 = icmp ugt i32 %0, 175, !dbg !12100
  br i1 %4, label %17, label %5, !dbg !12102

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12103
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12104
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12104
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12098, metadata !DIExpression()), !dbg !12099
  %9 = lshr i32 1888, %6, !dbg !12105
  %10 = and i32 %9, 1, !dbg !12105
  %11 = icmp eq i32 %10, 0, !dbg !12105
  br i1 %11, label %12, label %17, !dbg !12107

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.126(%struct.device* noundef %8) #26, !dbg !12108
  br i1 %13, label %14, label %17, !dbg !12109

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !12110
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #27, !dbg !12111
  br label %17, !dbg !12112

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !12099
  ret i32 %18, !dbg !12113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.126(%struct.device* noundef %0) unnamed_addr #1 !dbg !12114 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12118, metadata !DIExpression()), !dbg !12119
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12120, !srcloc !12122
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.127(%struct.device* noundef %0) #26, !dbg !12123
  ret i1 %2, !dbg !12124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.127(%struct.device* noundef %0) unnamed_addr #1 !dbg !12125 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12127, metadata !DIExpression()), !dbg !12128
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12129
  ret i1 %2, !dbg !12130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12131 {
  ret void, !dbg !12132
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #18 !dbg !12133 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12135, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.value(metadata i32 0, metadata !12136, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.value(metadata i32 0, metadata !12137, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.value(metadata i32 0, metadata !12138, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.value(metadata i32 0, metadata !12139, metadata !DIExpression()), !dbg !12140
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12141
  call void @llvm.dbg.value(metadata i32 %1, metadata !12135, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !12140
  %2 = lshr i32 %1, 2, !dbg !12142
  %3 = and i32 %2, 3, !dbg !12142
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !12142

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12143
  %6 = lshr i32 %5, 13, !dbg !12145
  %7 = and i32 %6, 7, !dbg !12145
  call void @llvm.dbg.value(metadata i32 %7, metadata !12139, metadata !DIExpression()), !dbg !12140
  %8 = shl nuw nsw i32 65536, %7, !dbg !12146
  br label %31, !dbg !12147

9:                                                ; preds = %0
  br label %31, !dbg !12148

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12149
  call void @llvm.dbg.value(metadata i32 %11, metadata !12136, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !12140
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12150
  call void @llvm.dbg.value(metadata i32 %12, metadata !12137, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !12140
  %13 = lshr i32 %11, 18, !dbg !12151
  %14 = and i32 %13, 15, !dbg !12151
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !12152
  %16 = load i8, i8* %15, align 1, !dbg !12152
  %17 = zext i8 %16 to i32, !dbg !12152
  call void @llvm.dbg.value(metadata i32 %17, metadata !12136, metadata !DIExpression()), !dbg !12140
  %18 = lshr i32 %12, 22, !dbg !12153
  %19 = and i32 %18, 3, !dbg !12153
  %20 = add nuw nsw i32 %19, 1, !dbg !12154
  call void @llvm.dbg.value(metadata i32 %20, metadata !12137, metadata !DIExpression()), !dbg !12140
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12155
  %22 = and i32 %21, 65536, !dbg !12156
  call void @llvm.dbg.value(metadata i32 %22, metadata !12138, metadata !DIExpression()), !dbg !12140
  %23 = icmp eq i32 %22, 0, !dbg !12157
  br i1 %23, label %24, label %27, !dbg !12159

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !12160
  %26 = udiv i32 %25, %20, !dbg !12162
  br label %31, !dbg !12163

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !12164
  %29 = udiv i32 %28, %20, !dbg !12166
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !12167
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12168
  %34 = lshr i32 %33, 4, !dbg !12169
  %35 = and i32 %34, 15, !dbg !12169
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !12170
  %37 = load i8, i8* %36, align 1, !dbg !12170
  %38 = zext i8 %37 to i32, !dbg !12170
  call void @llvm.dbg.value(metadata i32 %38, metadata !12135, metadata !DIExpression()), !dbg !12140
  %39 = lshr i32 %32, %38, !dbg !12171
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !12171
  ret void, !dbg !12172
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12173 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12181
  %2 = and i32 %1, 16711935, !dbg !12181
  %3 = or i32 %2, 45056, !dbg !12181
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12181
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12182
  %5 = or i32 %4, 256, !dbg !12182
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12182
  %6 = tail call i32 @HAL_GetTick() #27, !dbg !12183
  call void @llvm.dbg.value(metadata i32 %6, metadata !12179, metadata !DIExpression()), !dbg !12184
  br label %7, !dbg !12185

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12186
  %9 = and i32 %8, 512, !dbg !12186
  %10 = icmp eq i32 %9, 0, !dbg !12187
  br i1 %10, label %11, label %15, !dbg !12185

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #27, !dbg !12188
  %13 = sub i32 %12, %6, !dbg !12191
  %14 = icmp ugt i32 %13, 2, !dbg !12192
  br i1 %14, label %47, label %7, !dbg !12193, !llvm.loop !12194

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12196
  %17 = and i32 %16, -4, !dbg !12196
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12196
  br label %18, !dbg !12197

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12198
  %20 = and i32 %19, 12, !dbg !12198
  %21 = icmp eq i32 %20, 0, !dbg !12199
  br i1 %21, label %26, label %22, !dbg !12197

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #27, !dbg !12200
  %24 = sub i32 %23, %6, !dbg !12203
  %25 = icmp ugt i32 %24, 5000, !dbg !12204
  br i1 %25, label %47, label %18, !dbg !12205, !llvm.loop !12206

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !12208
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !12209
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #27, !dbg !12210
  call void @llvm.dbg.value(metadata i32 %28, metadata !12180, metadata !DIExpression()), !dbg !12184
  %29 = icmp eq i32 %28, 0, !dbg !12211
  br i1 %29, label %30, label %47, !dbg !12213

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12214
  %32 = and i32 %31, -285278210, !dbg !12214
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12214
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12215
  %34 = and i32 %33, -262145, !dbg !12215
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12215
  %35 = tail call i32 @HAL_GetTick() #27, !dbg !12216
  call void @llvm.dbg.value(metadata i32 %35, metadata !12179, metadata !DIExpression()), !dbg !12184
  br label %36, !dbg !12217

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12218
  %38 = and i32 %37, 33554432, !dbg !12218
  %39 = icmp eq i32 %38, 0, !dbg !12219
  br i1 %39, label %44, label %40, !dbg !12217

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #27, !dbg !12220
  %42 = sub i32 %41, %35, !dbg !12223
  %43 = icmp ugt i32 %42, 2, !dbg !12224
  br i1 %43, label %47, label %36, !dbg !12225, !llvm.loop !12226

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12228
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12229
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12230
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12231
  %46 = or i32 %45, 16777216, !dbg !12231
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12231
  br label %47, !dbg !12232

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !12184
  ret i32 %48, !dbg !12233
}

; Function Attrs: optsize
declare !dbg !12234 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !12236 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12239 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12265, metadata !DIExpression()), !dbg !12278
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12279
  br i1 %3, label %385, label %4, !dbg !12281

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12282
  %6 = and i32 %5, 12, !dbg !12282
  call void @llvm.dbg.value(metadata i32 %6, metadata !12268, metadata !DIExpression()), !dbg !12278
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12283
  %8 = and i32 %7, 65536, !dbg !12283
  call void @llvm.dbg.value(metadata i32 %8, metadata !12269, metadata !DIExpression()), !dbg !12278
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12284
  %10 = load i32, i32* %9, align 4, !dbg !12284
  %11 = and i32 %10, 1, !dbg !12286
  %12 = icmp eq i32 %11, 0, !dbg !12287
  br i1 %12, label %69, label %13, !dbg !12288

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !12289
  br i1 %14, label %19, label %15, !dbg !12292

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !12293
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !12294
  br i1 %18, label %19, label %27, !dbg !12294

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12295
  %21 = and i32 %20, 131072, !dbg !12295
  %22 = icmp eq i32 %21, 0, !dbg !12298
  br i1 %22, label %69, label %23, !dbg !12299

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12300
  %25 = load i32, i32* %24, align 4, !dbg !12300
  %26 = icmp eq i32 %25, 0, !dbg !12301
  br i1 %26, label %385, label %69, !dbg !12302

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12303
  %29 = load i32, i32* %28, align 4, !dbg !12303
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !12307

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12308
  %32 = or i32 %31, 65536, !dbg !12308
  br label %48, !dbg !12308

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12310
  %35 = and i32 %34, -65537, !dbg !12310
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12310
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12310
  %37 = and i32 %36, -262145, !dbg !12310
  br label %48, !dbg !12310

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12313
  %40 = or i32 %39, 262144, !dbg !12313
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12313
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12313
  %42 = or i32 %41, 65536, !dbg !12313
  br label %48, !dbg !12313

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12316
  %45 = and i32 %44, -65537, !dbg !12316
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12316
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12316
  %47 = and i32 %46, -262145, !dbg !12316
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12318
  %50 = load i32, i32* %28, align 4, !dbg !12319
  %51 = icmp eq i32 %50, 0, !dbg !12321
  %52 = tail call i32 @HAL_GetTick() #27, !dbg !12322
  call void @llvm.dbg.value(metadata i32 %52, metadata !12266, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 %52, metadata !12266, metadata !DIExpression()), !dbg !12278
  br i1 %51, label %61, label %53, !dbg !12323

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12324
  %55 = and i32 %54, 131072, !dbg !12324
  %56 = icmp eq i32 %55, 0, !dbg !12326
  br i1 %56, label %57, label %69, !dbg !12327

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #27, !dbg !12328
  %59 = sub i32 %58, %52, !dbg !12331
  %60 = icmp ugt i32 %59, 100, !dbg !12332
  br i1 %60, label %385, label %53, !dbg !12333, !llvm.loop !12334

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12336
  %63 = and i32 %62, 131072, !dbg !12336
  %64 = icmp eq i32 %63, 0, !dbg !12338
  br i1 %64, label %69, label %65, !dbg !12339

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #27, !dbg !12340
  %67 = sub i32 %66, %52, !dbg !12343
  %68 = icmp ugt i32 %67, 100, !dbg !12344
  br i1 %68, label %385, label %61, !dbg !12345, !llvm.loop !12346

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !12348
  %71 = and i32 %70, 2, !dbg !12350
  %72 = icmp eq i32 %71, 0, !dbg !12351
  br i1 %72, label %118, label %73, !dbg !12352

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !12353
  br i1 %74, label %79, label %75, !dbg !12356

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !12357
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !12358
  br i1 %78, label %79, label %87, !dbg !12358

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12359
  %81 = and i32 %80, 2, !dbg !12359
  %82 = icmp eq i32 %81, 0, !dbg !12362
  br i1 %82, label %111, label %83, !dbg !12363

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12364
  %85 = load i32, i32* %84, align 4, !dbg !12364
  %86 = icmp eq i32 %85, 1, !dbg !12365
  br i1 %86, label %111, label %385, !dbg !12366

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12367
  %89 = load i32, i32* %88, align 4, !dbg !12367
  %90 = icmp eq i32 %89, 0, !dbg !12370
  br i1 %90, label %101, label %91, !dbg !12371

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12372
  %92 = tail call i32 @HAL_GetTick() #27, !dbg !12374
  call void @llvm.dbg.value(metadata i32 %92, metadata !12266, metadata !DIExpression()), !dbg !12278
  br label %93, !dbg !12375

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12376
  %95 = and i32 %94, 2, !dbg !12376
  %96 = icmp eq i32 %95, 0, !dbg !12377
  br i1 %96, label %97, label %111, !dbg !12375

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #27, !dbg !12378
  %99 = sub i32 %98, %92, !dbg !12381
  %100 = icmp ugt i32 %99, 2, !dbg !12382
  br i1 %100, label %385, label %93, !dbg !12383, !llvm.loop !12384

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12386
  %102 = tail call i32 @HAL_GetTick() #27, !dbg !12388
  call void @llvm.dbg.value(metadata i32 %102, metadata !12266, metadata !DIExpression()), !dbg !12278
  br label %103, !dbg !12389

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12390
  %105 = and i32 %104, 2, !dbg !12390
  %106 = icmp eq i32 %105, 0, !dbg !12391
  br i1 %106, label %118, label %107, !dbg !12389

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #27, !dbg !12392
  %109 = sub i32 %108, %102, !dbg !12395
  %110 = icmp ugt i32 %109, 2, !dbg !12396
  br i1 %110, label %385, label %103, !dbg !12397, !llvm.loop !12398

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12400
  %113 = and i32 %112, -7937, !dbg !12400
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12400
  %115 = load i32, i32* %114, align 4, !dbg !12400
  %116 = shl i32 %115, 8, !dbg !12400
  %117 = or i32 %116, %113, !dbg !12400
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12400
  br label %118, !dbg !12401

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !12401
  %120 = and i32 %119, 16, !dbg !12403
  %121 = icmp eq i32 %120, 0, !dbg !12404
  br i1 %121, label %215, label %122, !dbg !12405

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !12406
  br i1 %123, label %124, label %179, !dbg !12409

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12410
  %126 = and i32 %125, 512, !dbg !12410
  %127 = icmp eq i32 %126, 0, !dbg !12413
  br i1 %127, label %132, label %128, !dbg !12414

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12415
  %130 = load i32, i32* %129, align 4, !dbg !12415
  %131 = icmp eq i32 %130, 0, !dbg !12416
  br i1 %131, label %385, label %132, !dbg !12417

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12418
  %134 = load i32, i32* %133, align 4, !dbg !12418
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12421
  %136 = and i32 %135, 57344, !dbg !12421
  %137 = icmp ugt i32 %134, %136, !dbg !12422
  br i1 %137, label %138, label %152, !dbg !12423

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #26, !dbg !12424
  %140 = icmp eq i32 %139, 0, !dbg !12427
  br i1 %140, label %141, label %385, !dbg !12428

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12429
  %143 = and i32 %142, -57345, !dbg !12429
  %144 = load i32, i32* %133, align 4, !dbg !12429
  %145 = or i32 %143, %144, !dbg !12429
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12429
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12430
  %147 = and i32 %146, 16777215, !dbg !12430
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12430
  %149 = load i32, i32* %148, align 4, !dbg !12430
  %150 = shl i32 %149, 24, !dbg !12430
  %151 = or i32 %150, %147, !dbg !12430
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12430
  br label %165, !dbg !12431

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12432
  %154 = and i32 %153, -57345, !dbg !12432
  %155 = or i32 %154, %134, !dbg !12432
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12432
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12434
  %157 = and i32 %156, 16777215, !dbg !12434
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12434
  %159 = load i32, i32* %158, align 4, !dbg !12434
  %160 = shl i32 %159, 24, !dbg !12434
  %161 = or i32 %160, %157, !dbg !12434
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12434
  %162 = load i32, i32* %133, align 4, !dbg !12435
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #26, !dbg !12437
  %164 = icmp eq i32 %163, 0, !dbg !12438
  br i1 %164, label %165, label %385, !dbg !12439

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !12440
  %167 = lshr i32 %166, 13, !dbg !12441
  %168 = shl i32 65536, %167, !dbg !12442
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12443
  %170 = lshr i32 %169, 4, !dbg !12444
  %171 = and i32 %170, 15, !dbg !12444
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !12445
  %173 = load i8, i8* %172, align 1, !dbg !12445
  %174 = zext i8 %173 to i32, !dbg !12445
  %175 = lshr i32 %168, %174, !dbg !12446
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !12447
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !12448
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #27, !dbg !12449
  call void @llvm.dbg.value(metadata i32 %177, metadata !12267, metadata !DIExpression()), !dbg !12278
  %178 = icmp eq i32 %177, 0, !dbg !12450
  br i1 %178, label %215, label %385, !dbg !12452

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12453
  %181 = load i32, i32* %180, align 4, !dbg !12453
  %182 = icmp eq i32 %181, 0, !dbg !12456
  br i1 %182, label %205, label %183, !dbg !12457

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12458
  %184 = tail call i32 @HAL_GetTick() #27, !dbg !12460
  call void @llvm.dbg.value(metadata i32 %184, metadata !12266, metadata !DIExpression()), !dbg !12278
  br label %185, !dbg !12461

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12462
  %187 = and i32 %186, 512, !dbg !12462
  %188 = icmp eq i32 %187, 0, !dbg !12463
  br i1 %188, label %189, label %193, !dbg !12461

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #27, !dbg !12464
  %191 = sub i32 %190, %184, !dbg !12467
  %192 = icmp ugt i32 %191, 2, !dbg !12468
  br i1 %192, label %385, label %185, !dbg !12469, !llvm.loop !12470

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12472
  %195 = and i32 %194, -57345, !dbg !12472
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12472
  %197 = load i32, i32* %196, align 4, !dbg !12472
  %198 = or i32 %195, %197, !dbg !12472
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12472
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12473
  %200 = and i32 %199, 16777215, !dbg !12473
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12473
  %202 = load i32, i32* %201, align 4, !dbg !12473
  %203 = shl i32 %202, 24, !dbg !12473
  %204 = or i32 %203, %200, !dbg !12473
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12473
  br label %215, !dbg !12474

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12475
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !12477
  call void @llvm.dbg.value(metadata i32 %206, metadata !12266, metadata !DIExpression()), !dbg !12278
  br label %207, !dbg !12478

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12479
  %209 = and i32 %208, 512, !dbg !12479
  %210 = icmp eq i32 %209, 0, !dbg !12480
  br i1 %210, label %215, label %211, !dbg !12478

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #27, !dbg !12481
  %213 = sub i32 %212, %206, !dbg !12484
  %214 = icmp ugt i32 %213, 2, !dbg !12485
  br i1 %214, label %385, label %207, !dbg !12486, !llvm.loop !12487

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !12489
  %217 = and i32 %216, 8, !dbg !12491
  %218 = icmp eq i32 %217, 0, !dbg !12492
  br i1 %218, label %243, label %219, !dbg !12493

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12494
  %221 = load i32, i32* %220, align 4, !dbg !12494
  %222 = icmp eq i32 %221, 0, !dbg !12497
  br i1 %222, label %233, label %223, !dbg !12498

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12499
  %224 = tail call i32 @HAL_GetTick() #27, !dbg !12501
  call void @llvm.dbg.value(metadata i32 %224, metadata !12266, metadata !DIExpression()), !dbg !12278
  br label %225, !dbg !12502

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12503
  %227 = and i32 %226, 2, !dbg !12503
  %228 = icmp eq i32 %227, 0, !dbg !12504
  br i1 %228, label %229, label %243, !dbg !12502

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #27, !dbg !12505
  %231 = sub i32 %230, %224, !dbg !12508
  %232 = icmp ugt i32 %231, 2, !dbg !12509
  br i1 %232, label %385, label %225, !dbg !12510, !llvm.loop !12511

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12513
  %234 = tail call i32 @HAL_GetTick() #27, !dbg !12515
  call void @llvm.dbg.value(metadata i32 %234, metadata !12266, metadata !DIExpression()), !dbg !12278
  br label %235, !dbg !12516

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12517
  %237 = and i32 %236, 2, !dbg !12517
  %238 = icmp eq i32 %237, 0, !dbg !12518
  br i1 %238, label %243, label %239, !dbg !12516

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #27, !dbg !12519
  %241 = sub i32 %240, %234, !dbg !12522
  %242 = icmp ugt i32 %241, 2, !dbg !12523
  br i1 %242, label %385, label %235, !dbg !12524, !llvm.loop !12525

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !12527
  %245 = and i32 %244, 4, !dbg !12528
  %246 = icmp eq i32 %245, 0, !dbg !12529
  br i1 %246, label %320, label %247, !dbg !12530

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !12270, metadata !DIExpression()), !dbg !12531
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12532
  %249 = and i32 %248, 268435456, !dbg !12532
  %250 = icmp eq i32 %249, 0, !dbg !12532
  br i1 %250, label %251, label %258, !dbg !12533

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !12534
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !12534
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12274, metadata !DIExpression()), !dbg !12534
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12534
  %254 = or i32 %253, 268435456, !dbg !12534
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12534
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12534
  %256 = and i32 %255, 268435456, !dbg !12534
  store volatile i32 %256, i32* %2, align 4, !dbg !12534
  %257 = load volatile i32, i32* %2, align 4, !dbg !12534
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !12535
  call void @llvm.dbg.value(metadata i32 1, metadata !12270, metadata !DIExpression()), !dbg !12531
  br label %258, !dbg !12536

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !12270, metadata !DIExpression()), !dbg !12531
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12537
  %260 = and i32 %259, 256, !dbg !12537
  %261 = icmp eq i32 %260, 0, !dbg !12537
  br i1 %261, label %262, label %274, !dbg !12539

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12540
  %264 = or i32 %263, 256, !dbg !12540
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12540
  %265 = tail call i32 @HAL_GetTick() #27, !dbg !12542
  call void @llvm.dbg.value(metadata i32 %265, metadata !12266, metadata !DIExpression()), !dbg !12278
  br label %266, !dbg !12543

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12544
  %268 = and i32 %267, 256, !dbg !12544
  %269 = icmp eq i32 %268, 0, !dbg !12544
  br i1 %269, label %270, label %274, !dbg !12543

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #27, !dbg !12545
  %272 = sub i32 %271, %265, !dbg !12548
  %273 = icmp ugt i32 %272, 100, !dbg !12549
  br i1 %273, label %385, label %266, !dbg !12550, !llvm.loop !12551

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12553
  %276 = load i32, i32* %275, align 4, !dbg !12553
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !12556

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12557
  %279 = or i32 %278, 256, !dbg !12557
  br label %295, !dbg !12557

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12559
  %282 = and i32 %281, -257, !dbg !12559
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12559
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12559
  %284 = and i32 %283, -1025, !dbg !12559
  br label %295, !dbg !12559

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12562
  %287 = or i32 %286, 1024, !dbg !12562
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12562
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12562
  %289 = or i32 %288, 256, !dbg !12562
  br label %295, !dbg !12562

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12565
  %292 = and i32 %291, -257, !dbg !12565
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12565
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12565
  %294 = and i32 %293, -1025, !dbg !12565
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12567
  %297 = load i32, i32* %275, align 4, !dbg !12568
  %298 = icmp eq i32 %297, 0, !dbg !12570
  %299 = tail call i32 @HAL_GetTick() #27, !dbg !12571
  call void @llvm.dbg.value(metadata i32 %299, metadata !12266, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 %299, metadata !12266, metadata !DIExpression()), !dbg !12278
  br i1 %298, label %308, label %300, !dbg !12572

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12573
  %302 = and i32 %301, 512, !dbg !12573
  %303 = icmp eq i32 %302, 0, !dbg !12575
  br i1 %303, label %304, label %316, !dbg !12576

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #27, !dbg !12577
  %306 = sub i32 %305, %299, !dbg !12580
  %307 = icmp ugt i32 %306, 5000, !dbg !12581
  br i1 %307, label %385, label %300, !dbg !12582, !llvm.loop !12583

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12585
  %310 = and i32 %309, 512, !dbg !12585
  %311 = icmp eq i32 %310, 0, !dbg !12587
  br i1 %311, label %316, label %312, !dbg !12588

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #27, !dbg !12589
  %314 = sub i32 %313, %299, !dbg !12592
  %315 = icmp ugt i32 %314, 5000, !dbg !12593
  br i1 %315, label %385, label %308, !dbg !12594, !llvm.loop !12595

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !12597

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12598
  %319 = and i32 %318, -268435457, !dbg !12598
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12598
  br label %320, !dbg !12601

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !12602
  %322 = load i32, i32* %321, align 4, !dbg !12602
  %323 = icmp eq i32 %322, 0, !dbg !12604
  br i1 %323, label %384, label %324, !dbg !12605

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !12606
  br i1 %325, label %366, label %326, !dbg !12609

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !12610
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12613
  %328 = tail call i32 @HAL_GetTick() #27, !dbg !12613
  call void @llvm.dbg.value(metadata i32 %328, metadata !12266, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 %328, metadata !12266, metadata !DIExpression()), !dbg !12278
  br i1 %327, label %329, label %358, !dbg !12614

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12615
  %331 = and i32 %330, 33554432, !dbg !12615
  %332 = icmp eq i32 %331, 0, !dbg !12617
  br i1 %332, label %337, label %333, !dbg !12618

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #27, !dbg !12619
  %335 = sub i32 %334, %328, !dbg !12622
  %336 = icmp ugt i32 %335, 2, !dbg !12623
  br i1 %336, label %385, label %329, !dbg !12624, !llvm.loop !12625

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12627
  %339 = and i32 %338, -16580609, !dbg !12627
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12627
  %341 = load i32, i32* %340, align 4, !dbg !12627
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12627
  %343 = load i32, i32* %342, align 4, !dbg !12627
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12627
  %345 = load i32, i32* %344, align 4, !dbg !12627
  %346 = or i32 %339, %341, !dbg !12627
  %347 = or i32 %346, %343, !dbg !12627
  %348 = or i32 %347, %345, !dbg !12627
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12627
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12628
  %349 = tail call i32 @HAL_GetTick() #27, !dbg !12629
  call void @llvm.dbg.value(metadata i32 %349, metadata !12266, metadata !DIExpression()), !dbg !12278
  br label %350, !dbg !12630

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12631
  %352 = and i32 %351, 33554432, !dbg !12631
  %353 = icmp eq i32 %352, 0, !dbg !12632
  br i1 %353, label %354, label %384, !dbg !12630

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #27, !dbg !12633
  %356 = sub i32 %355, %349, !dbg !12636
  %357 = icmp ugt i32 %356, 2, !dbg !12637
  br i1 %357, label %385, label %350, !dbg !12638, !llvm.loop !12639

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12641
  %360 = and i32 %359, 33554432, !dbg !12641
  %361 = icmp eq i32 %360, 0, !dbg !12643
  br i1 %361, label %384, label %362, !dbg !12644

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #27, !dbg !12645
  %364 = sub i32 %363, %328, !dbg !12648
  %365 = icmp ugt i32 %364, 2, !dbg !12649
  br i1 %365, label %385, label %358, !dbg !12650, !llvm.loop !12651

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !12653
  br i1 %367, label %385, label %368, !dbg !12656

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12657
  call void @llvm.dbg.value(metadata i32 %369, metadata !12269, metadata !DIExpression()), !dbg !12278
  %370 = and i32 %369, 65536, !dbg !12659
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12661
  %372 = load i32, i32* %371, align 4, !dbg !12661
  %373 = icmp eq i32 %370, %372, !dbg !12662
  br i1 %373, label %374, label %385, !dbg !12663

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !12664
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12665
  %377 = load i32, i32* %376, align 4, !dbg !12665
  %378 = icmp eq i32 %375, %377, !dbg !12666
  br i1 %378, label %379, label %385, !dbg !12667

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !12668
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12669
  %382 = load i32, i32* %381, align 4, !dbg !12669
  %383 = icmp eq i32 %380, %382, !dbg !12670
  br i1 %383, label %384, label %385, !dbg !12671

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !12672

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !12278
  ret i32 %386, !dbg !12673
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #16 !dbg !12674 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12676, metadata !DIExpression()), !dbg !12685
  call void @llvm.dbg.value(metadata i32 0, metadata !12678, metadata !DIExpression()), !dbg !12685
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12686
  %4 = and i32 %3, 240, !dbg !12686
  %5 = icmp eq i32 %4, 0, !dbg !12687
  br i1 %5, label %6, label %31, !dbg !12688

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12689
  %8 = and i32 %7, 268435456, !dbg !12689
  %9 = icmp eq i32 %8, 0, !dbg !12689
  br i1 %9, label %12, label %10, !dbg !12690

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12691
  call void @llvm.dbg.value(metadata i32 %11, metadata !12677, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12685
  br label %22, !dbg !12693

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !12694
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !12694
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12679, metadata !DIExpression()), !dbg !12694
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12694
  %15 = or i32 %14, 268435456, !dbg !12694
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12694
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12694
  %17 = and i32 %16, 268435456, !dbg !12694
  store volatile i32 %17, i32* %2, align 4, !dbg !12694
  %18 = load volatile i32, i32* %2, align 4, !dbg !12694
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !12695
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12696
  call void @llvm.dbg.value(metadata i32 %19, metadata !12677, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12685
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12697
  %21 = and i32 %20, -268435457, !dbg !12697
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12697
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !12698
  call void @llvm.dbg.value(metadata i32 %24, metadata !12677, metadata !DIExpression()), !dbg !12685
  %25 = icmp eq i32 %24, 6144, !dbg !12699
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !12701
  call void @llvm.dbg.value(metadata i32 undef, metadata !12678, metadata !DIExpression()), !dbg !12685
  br i1 %27, label %28, label %31, !dbg !12702

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12704
  %30 = or i32 %29, 4, !dbg !12704
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12704
  br label %31, !dbg !12704

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12702
  %34 = and i32 %33, -2, !dbg !12702
  %35 = or i32 %34, %32, !dbg !12702
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12702
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12707
  %37 = and i32 %36, 1, !dbg !12707
  %38 = xor i32 %37, %32, !dbg !12685
  ret i32 %38, !dbg !12709
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12710 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12723, metadata !DIExpression()), !dbg !12727
  call void @llvm.dbg.value(metadata i32 %1, metadata !12724, metadata !DIExpression()), !dbg !12727
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12728
  br i1 %3, label %136, label %4, !dbg !12730

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12731
  %6 = and i32 %5, 1, !dbg !12731
  %7 = icmp ult i32 %6, %1, !dbg !12733
  br i1 %7, label %8, label %20, !dbg !12734

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !12735
  br i1 %9, label %10, label %13, !dbg !12739

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12740
  %12 = or i32 %11, 4, !dbg !12740
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12740
  br label %13, !dbg !12740

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12739
  %15 = and i32 %14, -2, !dbg !12739
  %16 = or i32 %15, %1, !dbg !12739
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12739
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12742
  %18 = and i32 %17, 1, !dbg !12742
  %19 = icmp eq i32 %18, %1, !dbg !12744
  br i1 %19, label %20, label %136, !dbg !12745

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12746
  %22 = load i32, i32* %21, align 4, !dbg !12746
  %23 = and i32 %22, 2, !dbg !12748
  %24 = icmp eq i32 %23, 0, !dbg !12749
  br i1 %24, label %32, label %25, !dbg !12750

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12751
  %27 = and i32 %26, -241, !dbg !12751
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12751
  %29 = load i32, i32* %28, align 4, !dbg !12751
  %30 = or i32 %27, %29, !dbg !12751
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12751
  %31 = load i32, i32* %21, align 4, !dbg !12753
  br label %32, !dbg !12755

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !12753
  %34 = and i32 %33, 1, !dbg !12756
  %35 = icmp eq i32 %34, 0, !dbg !12757
  br i1 %35, label %93, label %36, !dbg !12758

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12759
  %38 = load i32, i32* %37, align 4, !dbg !12759
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !12762

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12763
  %41 = and i32 %40, 131072, !dbg !12763
  %42 = icmp eq i32 %41, 0, !dbg !12766
  br i1 %42, label %136, label %55, !dbg !12767

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12768
  %45 = and i32 %44, 33554432, !dbg !12768
  %46 = icmp eq i32 %45, 0, !dbg !12772
  br i1 %46, label %136, label %55, !dbg !12773

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12774
  %49 = and i32 %48, 2, !dbg !12774
  %50 = icmp eq i32 %49, 0, !dbg !12778
  br i1 %50, label %136, label %55, !dbg !12779

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12780
  %53 = and i32 %52, 512, !dbg !12780
  %54 = icmp eq i32 %53, 0, !dbg !12783
  br i1 %54, label %136, label %55, !dbg !12784

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12785
  %57 = and i32 %56, -4, !dbg !12785
  %58 = or i32 %57, %38, !dbg !12785
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12785
  %59 = tail call i32 @HAL_GetTick() #27, !dbg !12786
  call void @llvm.dbg.value(metadata i32 %59, metadata !12725, metadata !DIExpression()), !dbg !12727
  %60 = load i32, i32* %37, align 4, !dbg !12787
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !12789

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12790
  %63 = and i32 %62, 12, !dbg !12790
  %64 = icmp eq i32 %63, 8, !dbg !12792
  br i1 %64, label %93, label %65, !dbg !12793

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #27, !dbg !12794
  %67 = sub i32 %66, %59, !dbg !12797
  %68 = icmp ugt i32 %67, 5000, !dbg !12798
  br i1 %68, label %136, label %61, !dbg !12799, !llvm.loop !12800

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12802
  %71 = and i32 %70, 12, !dbg !12802
  %72 = icmp eq i32 %71, 12, !dbg !12805
  br i1 %72, label %93, label %73, !dbg !12806

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #27, !dbg !12807
  %75 = sub i32 %74, %59, !dbg !12810
  %76 = icmp ugt i32 %75, 5000, !dbg !12811
  br i1 %76, label %136, label %69, !dbg !12812, !llvm.loop !12813

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12815
  %79 = and i32 %78, 12, !dbg !12815
  %80 = icmp eq i32 %79, 4, !dbg !12818
  br i1 %80, label %93, label %81, !dbg !12819

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #27, !dbg !12820
  %83 = sub i32 %82, %59, !dbg !12823
  %84 = icmp ugt i32 %83, 5000, !dbg !12824
  br i1 %84, label %136, label %77, !dbg !12825, !llvm.loop !12826

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12828
  %87 = and i32 %86, 12, !dbg !12828
  %88 = icmp eq i32 %87, 0, !dbg !12830
  br i1 %88, label %93, label %89, !dbg !12831

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #27, !dbg !12832
  %91 = sub i32 %90, %59, !dbg !12835
  %92 = icmp ugt i32 %91, 5000, !dbg !12836
  br i1 %92, label %136, label %85, !dbg !12837, !llvm.loop !12838

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12840
  %95 = and i32 %94, 1, !dbg !12840
  %96 = icmp ugt i32 %95, %1, !dbg !12842
  br i1 %96, label %97, label %103, !dbg !12843

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12844
  %99 = and i32 %98, -2, !dbg !12844
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12844
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12847
  %101 = and i32 %100, 1, !dbg !12847
  %102 = icmp eq i32 %101, 0, !dbg !12849
  br i1 %102, label %103, label %136, !dbg !12850

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !12851
  %105 = and i32 %104, 4, !dbg !12853
  %106 = icmp eq i32 %105, 0, !dbg !12854
  br i1 %106, label %114, label %107, !dbg !12855

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12856
  %109 = and i32 %108, -1793, !dbg !12856
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12856
  %111 = load i32, i32* %110, align 4, !dbg !12856
  %112 = or i32 %109, %111, !dbg !12856
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12856
  %113 = load i32, i32* %21, align 4, !dbg !12858
  br label %114, !dbg !12860

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !12858
  %116 = and i32 %115, 8, !dbg !12861
  %117 = icmp eq i32 %116, 0, !dbg !12862
  br i1 %117, label %125, label %118, !dbg !12863

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12864
  %120 = and i32 %119, -14337, !dbg !12864
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12864
  %122 = load i32, i32* %121, align 4, !dbg !12864
  %123 = shl i32 %122, 3, !dbg !12864
  %124 = or i32 %123, %120, !dbg !12864
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12864
  br label %125, !dbg !12866

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12867
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12868
  %128 = lshr i32 %127, 4, !dbg !12869
  %129 = and i32 %128, 15, !dbg !12869
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !12870
  %131 = load i8, i8* %130, align 1, !dbg !12870
  %132 = zext i8 %131 to i32, !dbg !12870
  %133 = lshr i32 %126, %132, !dbg !12871
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !12872
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !12873
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #27, !dbg !12874
  call void @llvm.dbg.value(metadata i32 %135, metadata !12726, metadata !DIExpression()), !dbg !12727
  br label %136, !dbg !12875

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !12727
  ret i32 %137, !dbg !12876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #18 !dbg !12877 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12885
  call void @llvm.dbg.value(metadata i32 %1, metadata !12879, metadata !DIExpression()), !dbg !12886
  %2 = lshr i32 %1, 2, !dbg !12887
  %3 = and i32 %2, 3, !dbg !12887
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !12887

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12884, metadata !DIExpression()), !dbg !12886
  br label %26, !dbg !12888

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !12891
  %7 = and i32 %6, 15, !dbg !12891
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !12893
  %9 = load i8, i8* %8, align 1, !dbg !12893
  call void @llvm.dbg.value(metadata i8 %9, metadata !12880, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12886
  %10 = lshr i32 %1, 22, !dbg !12894
  %11 = and i32 %10, 3, !dbg !12894
  %12 = add nuw nsw i32 %11, 1, !dbg !12895
  call void @llvm.dbg.value(metadata i32 %12, metadata !12881, metadata !DIExpression()), !dbg !12886
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12896
  %14 = and i32 %13, 65536, !dbg !12896
  %15 = icmp eq i32 %14, 0, !dbg !12898
  %16 = zext i8 %9 to i32, !dbg !12899
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !12899
  %18 = mul nuw i32 %17, %16, !dbg !12899
  %19 = udiv i32 %18, %12, !dbg !12900
  call void @llvm.dbg.value(metadata i32 %19, metadata !12882, metadata !DIExpression()), !dbg !12886
  call void @llvm.dbg.value(metadata i32 %19, metadata !12884, metadata !DIExpression()), !dbg !12886
  br label %26, !dbg !12901

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12902
  %23 = lshr i32 %22, 13, !dbg !12904
  %24 = and i32 %23, 7, !dbg !12904
  call void @llvm.dbg.value(metadata i32 %24, metadata !12883, metadata !DIExpression()), !dbg !12886
  %25 = shl nuw nsw i32 65536, %24, !dbg !12905
  call void @llvm.dbg.value(metadata i32 %25, metadata !12884, metadata !DIExpression()), !dbg !12886
  br label %26, !dbg !12906

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !12907
  call void @llvm.dbg.value(metadata i32 %27, metadata !12884, metadata !DIExpression()), !dbg !12886
  ret i32 %27, !dbg !12908
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12909 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12911, metadata !DIExpression()), !dbg !12926
  call void @llvm.dbg.value(metadata i32 %1, metadata !12912, metadata !DIExpression()), !dbg !12926
  call void @llvm.dbg.value(metadata i32 %2, metadata !12913, metadata !DIExpression()), !dbg !12926
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12927
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #25, !dbg !12927
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12914, metadata !DIExpression()), !dbg !12928
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12929
  store i32 2, i32* %7, align 4, !dbg !12930
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12931
  store i32 2, i32* %8, align 4, !dbg !12932
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12933
  store i32 0, i32* %9, align 4, !dbg !12934
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12935
  store i32 256, i32* %10, align 4, !dbg !12936
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12937
  store i32 0, i32* %11, align 4, !dbg !12938
  %12 = bitcast i32* %5 to i8*, !dbg !12939
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !12939
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12924, metadata !DIExpression()), !dbg !12939
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12939
  %14 = or i32 %13, 1, !dbg !12939
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12939
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12939
  %16 = and i32 %15, 1, !dbg !12939
  store volatile i32 %16, i32* %5, align 4, !dbg !12939
  %17 = load volatile i32, i32* %5, align 4, !dbg !12939
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !12940
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !12941
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12942
  %19 = and i32 %18, -1996488705, !dbg !12942
  %20 = or i32 %2, %1, !dbg !12942
  %21 = or i32 %20, %19, !dbg !12942
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12942
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #25, !dbg !12943
  ret void, !dbg !12943
}

; Function Attrs: optsize
declare !dbg !12944 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #17 !dbg !12948 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12949
  ret void, !dbg !12950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #17 !dbg !12951 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12952
  ret void, !dbg !12953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #4 !dbg !12954 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12955
  ret i32 %1, !dbg !12956
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #18 !dbg !12957 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12958
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12959
  %3 = lshr i32 %2, 8, !dbg !12960
  %4 = and i32 %3, 7, !dbg !12960
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12961
  %6 = load i8, i8* %5, align 1, !dbg !12961
  %7 = zext i8 %6 to i32, !dbg !12961
  %8 = lshr i32 %1, %7, !dbg !12962
  ret i32 %8, !dbg !12963
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #18 !dbg !12964 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12965
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12966
  %3 = lshr i32 %2, 11, !dbg !12967
  %4 = and i32 %3, 7, !dbg !12967
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12968
  %6 = load i8, i8* %5, align 1, !dbg !12968
  %7 = zext i8 %6 to i32, !dbg !12968
  %8 = lshr i32 %1, %7, !dbg !12969
  ret i32 %8, !dbg !12970
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #18 !dbg !12971 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12975, metadata !DIExpression()), !dbg !12976
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12977
  store i32 31, i32* %2, align 4, !dbg !12978
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12979
  %4 = and i32 %3, 262144, !dbg !12981
  %5 = icmp eq i32 %4, 0, !dbg !12982
  br i1 %5, label %8, label %6, !dbg !12983

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12984
  store i32 5, i32* %7, align 4, !dbg !12986
  br label %15, !dbg !12987

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12988
  %10 = and i32 %9, 65536, !dbg !12990
  %11 = icmp eq i32 %10, 0, !dbg !12991
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12992
  br i1 %11, label %14, label %13, !dbg !12993

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !12994
  br label %15, !dbg !12996

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12997
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12999
  %17 = and i32 %16, 1, !dbg !13001
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13002
  store i32 %17, i32* %18, align 4, !dbg !13004
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13005
  %20 = lshr i32 %19, 8, !dbg !13006
  %21 = and i32 %20, 31, !dbg !13006
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13007
  store i32 %21, i32* %22, align 4, !dbg !13008
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13009
  %24 = lshr i32 %23, 8, !dbg !13011
  %25 = and i32 %24, 1, !dbg !13011
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !13012
  store i32 %25, i32* %26, align 4, !dbg !13014
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13015
  %28 = lshr i32 %27, 24, !dbg !13016
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13017
  store i32 %28, i32* %29, align 4, !dbg !13018
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13019
  %31 = and i32 %30, 57344, !dbg !13020
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !13021
  store i32 %31, i32* %32, align 4, !dbg !13022
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13023
  %34 = and i32 %33, 1024, !dbg !13025
  %35 = icmp eq i32 %34, 0, !dbg !13026
  br i1 %35, label %38, label %36, !dbg !13027

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13028
  store i32 5, i32* %37, align 4, !dbg !13030
  br label %45, !dbg !13031

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13032
  %40 = and i32 %39, 256, !dbg !13034
  %41 = icmp eq i32 %40, 0, !dbg !13035
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13036
  br i1 %41, label %44, label %43, !dbg !13037

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !13038
  br label %45, !dbg !13040

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !13041
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13043
  %47 = and i32 %46, 1, !dbg !13045
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13046
  store i32 %47, i32* %48, align 4, !dbg !13048
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13049
  %50 = and i32 %49, 16777216, !dbg !13051
  %51 = icmp eq i32 %50, 0, !dbg !13052
  %52 = select i1 %51, i32 1, i32 2, !dbg !13053
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !13054
  store i32 %52, i32* %53, align 4, !dbg !13056
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13057
  %55 = and i32 %54, 65536, !dbg !13058
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !13059
  store i32 %55, i32* %56, align 4, !dbg !13060
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13061
  %58 = and i32 %57, 3932160, !dbg !13062
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !13063
  store i32 %58, i32* %59, align 4, !dbg !13064
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13065
  %61 = and i32 %60, 12582912, !dbg !13066
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !13067
  store i32 %61, i32* %62, align 4, !dbg !13068
  ret void, !dbg !13069
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #18 !dbg !13070 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13074, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata i32* %1, metadata !13075, metadata !DIExpression()), !dbg !13076
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13077
  store i32 15, i32* %3, align 4, !dbg !13078
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13079
  %5 = and i32 %4, 3, !dbg !13080
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13081
  store i32 %5, i32* %6, align 4, !dbg !13082
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13083
  %8 = and i32 %7, 240, !dbg !13084
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13085
  store i32 %8, i32* %9, align 4, !dbg !13086
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13087
  %11 = and i32 %10, 1792, !dbg !13088
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13089
  store i32 %11, i32* %12, align 4, !dbg !13090
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13091
  %14 = lshr i32 %13, 3, !dbg !13092
  %15 = and i32 %14, 1792, !dbg !13092
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13093
  store i32 %15, i32* %16, align 4, !dbg !13094
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13095
  %18 = and i32 %17, 1, !dbg !13095
  store i32 %18, i32* %1, align 4, !dbg !13096
  ret void, !dbg !13097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13098 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13099
  %2 = and i32 %1, 128, !dbg !13099
  %3 = icmp eq i32 %2, 0, !dbg !13099
  br i1 %3, label %5, label %4, !dbg !13101

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !13102
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13104
  br label %5, !dbg !13105

5:                                                ; preds = %4, %0
  ret void, !dbg !13106
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13107 {
  ret void, !dbg !13108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #17 !dbg !13109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13112, metadata !DIExpression()), !dbg !13113
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !13114
  ret void, !dbg !13115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #17 !dbg !13116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13119, metadata !DIExpression()), !dbg !13121
  call void @llvm.dbg.value(metadata i32 1000, metadata !13120, metadata !DIExpression()), !dbg !13121
  %2 = udiv i32 %0, 1000, !dbg !13122
  %3 = add nsw i32 %2, -1, !dbg !13123
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13124
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13125
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13126
  ret void, !dbg !13127
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #16 !dbg !13128 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13130, metadata !DIExpression()), !dbg !13133
  %3 = bitcast i32* %2 to i8*, !dbg !13134
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13134
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13131, metadata !DIExpression()), !dbg !13135
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13136
  store volatile i32 %4, i32* %2, align 4, !dbg !13135
  call void @llvm.dbg.value(metadata i32 %0, metadata !13132, metadata !DIExpression()), !dbg !13133
  %5 = load volatile i32, i32* %2, align 4, !dbg !13137
  %6 = icmp eq i32 %0, -1, !dbg !13138
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13132, metadata !DIExpression()), !dbg !13133
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13133
  call void @llvm.dbg.value(metadata i32 %8, metadata !13132, metadata !DIExpression()), !dbg !13133
  br label %9, !dbg !13140

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13132, metadata !DIExpression()), !dbg !13133
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13141
  call void @llvm.dbg.value(metadata i32 undef, metadata !13132, metadata !DIExpression()), !dbg !13133
  %12 = shl i32 %11, 15, !dbg !13133
  %13 = ashr i32 %12, 31, !dbg !13133
  %14 = add i32 %13, %10, !dbg !13133
  call void @llvm.dbg.value(metadata i32 %14, metadata !13132, metadata !DIExpression()), !dbg !13133
  %15 = icmp eq i32 %14, 0, !dbg !13144
  br i1 %15, label %16, label %9, !dbg !13140

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13145
  ret void, !dbg !13145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #8 !dbg !13146 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13148, metadata !DIExpression()), !dbg !13149
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13150
  ret void, !dbg !13151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #17 !dbg !13152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13157, metadata !DIExpression()), !dbg !13160
  call void @llvm.dbg.value(metadata i32 0, metadata !13158, metadata !DIExpression()), !dbg !13160
  call void @llvm.dbg.value(metadata i32 0, metadata !13159, metadata !DIExpression()), !dbg !13160
  %2 = add i32 %0, -32000001, !dbg !13161
  %3 = icmp ult i32 %2, -32000000, !dbg !13161
  br i1 %3, label %22, label %4, !dbg !13161

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13163
  %6 = icmp eq i32 %5, 2048, !dbg !13166
  br i1 %6, label %7, label %9, !dbg !13167

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !13168
  call void @llvm.dbg.value(metadata i32 undef, metadata !13159, metadata !DIExpression()), !dbg !13160
  br i1 %8, label %16, label %17, !dbg !13171

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13172
  %11 = icmp eq i32 %10, 4096, !dbg !13174
  br i1 %11, label %12, label %14, !dbg !13175

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !13176
  call void @llvm.dbg.value(metadata i32 undef, metadata !13159, metadata !DIExpression()), !dbg !13160
  br i1 %13, label %16, label %17, !dbg !13171

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !13179
  call void @llvm.dbg.value(metadata i32 undef, metadata !13159, metadata !DIExpression()), !dbg !13160
  br i1 %15, label %16, label %17, !dbg !13171

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #26, !dbg !13182
  br label %17, !dbg !13185

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #26, !dbg !13186
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !13187
  %20 = icmp ne i32 %19, %18, !dbg !13189
  %21 = zext i1 %20 to i32, !dbg !13190
  br label %22, !dbg !13190

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !13160
  call void @llvm.dbg.value(metadata i32 %23, metadata !13158, metadata !DIExpression()), !dbg !13160
  ret i32 %23, !dbg !13191
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #18 !dbg !13192 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13193
  %2 = and i32 %1, 6144, !dbg !13193
  ret i32 %2, !dbg !13194
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #17 !dbg !13195 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13196
  %2 = or i32 %1, 4, !dbg !13196
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13196
  ret void, !dbg !13197
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #17 !dbg !13198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13200, metadata !DIExpression()), !dbg !13201
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13202
  %3 = and i32 %2, -2, !dbg !13202
  %4 = or i32 %3, %0, !dbg !13202
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13202
  ret void, !dbg !13203
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #18 !dbg !13204 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13205
  %2 = and i32 %1, 1, !dbg !13205
  ret i32 %2, !dbg !13206
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !13207 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !13224, metadata !DIExpression()), !dbg !13228
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13225, metadata !DIExpression()), !dbg !13228
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13229
  %4 = icmp eq i32 %3, 0, !dbg !13231
  br i1 %4, label %5, label %19, !dbg !13232

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #26, !dbg !13233
  call void @llvm.dbg.value(metadata i32 %6, metadata !13227, metadata !DIExpression()), !dbg !13228
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.138() #26, !dbg !13235
  %8 = icmp eq i32 %7, 1, !dbg !13237
  br i1 %8, label %13, label %9, !dbg !13238

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.139() #26, !dbg !13239
  br label %10, !dbg !13241

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.138() #26, !dbg !13242
  %12 = icmp eq i32 %11, 1, !dbg !13243
  br i1 %12, label %13, label %10, !dbg !13241, !llvm.loop !13244

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !13246
  %15 = load i32, i32* %14, align 4, !dbg !13246
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !13247
  %17 = load i32, i32* %16, align 4, !dbg !13247
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.140(i32 noundef 0, i32 noundef %15, i32 noundef %17) #26, !dbg !13248
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !13249
  call void @llvm.dbg.value(metadata i32 %18, metadata !13226, metadata !DIExpression()), !dbg !13228
  br label %19, !dbg !13250

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !13251
  call void @llvm.dbg.value(metadata i32 %20, metadata !13226, metadata !DIExpression()), !dbg !13228
  ret i32 %20, !dbg !13252
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #18 !dbg !13253 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13257, metadata !DIExpression()), !dbg !13258
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.142() #26, !dbg !13259
  %2 = icmp ne i32 %1, 0, !dbg !13261
  %3 = zext i1 %2 to i32, !dbg !13262
  call void @llvm.dbg.value(metadata i32 %3, metadata !13257, metadata !DIExpression()), !dbg !13258
  ret i32 %3, !dbg !13263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #4 !dbg !13264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13268, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !13269, metadata !DIExpression()), !dbg !13271
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !13272
  %4 = load i32, i32* %3, align 4, !dbg !13272
  %5 = lshr i32 %4, 18, !dbg !13273
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !13274
  %7 = load i8, i8* %6, align 1, !dbg !13274
  %8 = zext i8 %7 to i32, !dbg !13275
  %9 = mul i32 %8, %0, !dbg !13276
  call void @llvm.dbg.value(metadata i32 %9, metadata !13270, metadata !DIExpression()), !dbg !13271
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !13277
  %11 = load i32, i32* %10, align 4, !dbg !13277
  %12 = lshr i32 %11, 22, !dbg !13278
  %13 = add nuw nsw i32 %12, 1, !dbg !13279
  %14 = udiv i32 %9, %13, !dbg !13280
  call void @llvm.dbg.value(metadata i32 %14, metadata !13270, metadata !DIExpression()), !dbg !13271
  ret i32 %14, !dbg !13281
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.138() unnamed_addr #18 !dbg !13282 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13283
  %2 = lshr i32 %1, 1, !dbg !13284
  %3 = and i32 %2, 1, !dbg !13284
  ret i32 %3, !dbg !13285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.139() unnamed_addr #17 !dbg !13286 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13287
  %2 = or i32 %1, 1, !dbg !13287
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13287
  ret void, !dbg !13288
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.140(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !13289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13291, metadata !DIExpression()), !dbg !13294
  call void @llvm.dbg.value(metadata i32 %1, metadata !13292, metadata !DIExpression()), !dbg !13294
  call void @llvm.dbg.value(metadata i32 %2, metadata !13293, metadata !DIExpression()), !dbg !13294
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13295
  %5 = and i32 %4, -16580609, !dbg !13295
  %6 = or i32 %1, %0, !dbg !13295
  %7 = or i32 %6, %2, !dbg !13295
  %8 = or i32 %7, %5, !dbg !13295
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13295
  ret void, !dbg !13296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #17 !dbg !13297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13301, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13302, metadata !DIExpression()), !dbg !13305
  call void @llvm.dbg.value(metadata i32 0, metadata !13303, metadata !DIExpression()), !dbg !13305
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13306
  %4 = load i32, i32* %3, align 4, !dbg !13306
  %5 = lshr i32 %4, 4, !dbg !13306
  %6 = and i32 %5, 15, !dbg !13306
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13306
  %8 = load i8, i8* %7, align 1, !dbg !13306
  %9 = zext i8 %8 to i32, !dbg !13306
  %10 = lshr i32 %0, %9, !dbg !13306
  call void @llvm.dbg.value(metadata i32 %10, metadata !13304, metadata !DIExpression()), !dbg !13305
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13307
  %12 = icmp ult i32 %11, %10, !dbg !13309
  br i1 %12, label %13, label %16, !dbg !13310

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13311
  call void @llvm.dbg.value(metadata i32 %14, metadata !13303, metadata !DIExpression()), !dbg !13305
  %15 = icmp eq i32 %14, 0, !dbg !13313
  br i1 %15, label %16, label %30, !dbg !13315

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.141() #26, !dbg !13316
  br label %17, !dbg !13318

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.142() #26, !dbg !13319
  %19 = icmp eq i32 %18, 1, !dbg !13320
  br i1 %19, label %20, label %17, !dbg !13318, !llvm.loop !13321

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13323
  tail call fastcc void @LL_RCC_SetAHBPrescaler.143(i32 noundef %21) #26, !dbg !13324
  tail call fastcc void @LL_RCC_SetSysClkSource.144() #26, !dbg !13325
  br label %22, !dbg !13326

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.145() #26, !dbg !13327
  %24 = icmp eq i32 %23, 12, !dbg !13328
  br i1 %24, label %25, label %22, !dbg !13326, !llvm.loop !13329

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13331
  %27 = load i32, i32* %26, align 4, !dbg !13331
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.146(i32 noundef %27) #26, !dbg !13332
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13333
  %29 = load i32, i32* %28, align 4, !dbg !13333
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.147(i32 noundef %29) #26, !dbg !13334
  br label %30, !dbg !13335

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13336
  %33 = icmp ugt i32 %32, %10, !dbg !13338
  br i1 %33, label %34, label %36, !dbg !13339

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13340
  call void @llvm.dbg.value(metadata i32 %35, metadata !13303, metadata !DIExpression()), !dbg !13305
  br label %36, !dbg !13342

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13305
  call void @llvm.dbg.value(metadata i32 %37, metadata !13303, metadata !DIExpression()), !dbg !13305
  %38 = icmp eq i32 %37, 0, !dbg !13343
  br i1 %38, label %39, label %40, !dbg !13345

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13346
  br label %40, !dbg !13348

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.141() unnamed_addr #17 !dbg !13350 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13351
  %2 = or i32 %1, 16777216, !dbg !13351
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13351
  ret void, !dbg !13352
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.142() unnamed_addr #18 !dbg !13353 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13354
  %2 = lshr i32 %1, 25, !dbg !13355
  %3 = and i32 %2, 1, !dbg !13355
  ret i32 %3, !dbg !13356
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.143(i32 noundef %0) unnamed_addr #17 !dbg !13357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13359, metadata !DIExpression()), !dbg !13360
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13361
  %3 = and i32 %2, -241, !dbg !13361
  %4 = or i32 %3, %0, !dbg !13361
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13361
  ret void, !dbg !13362
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.144() unnamed_addr #17 !dbg !13363 {
  call void @llvm.dbg.value(metadata i32 3, metadata !13365, metadata !DIExpression()), !dbg !13366
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13367
  %2 = or i32 %1, 3, !dbg !13367
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13367
  ret void, !dbg !13368
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.145() unnamed_addr #18 !dbg !13369 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13370
  %2 = and i32 %1, 12, !dbg !13370
  ret i32 %2, !dbg !13371
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.146(i32 noundef %0) unnamed_addr #17 !dbg !13372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13374, metadata !DIExpression()), !dbg !13375
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13376
  %3 = and i32 %2, -1793, !dbg !13376
  %4 = or i32 %3, %0, !dbg !13376
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13376
  ret void, !dbg !13377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.147(i32 noundef %0) unnamed_addr #17 !dbg !13378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13380, metadata !DIExpression()), !dbg !13381
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13382
  %3 = and i32 %2, -14337, !dbg !13382
  %4 = or i32 %3, %0, !dbg !13382
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13382
  ret void, !dbg !13383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #17 !dbg !13384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13388, metadata !DIExpression()), !dbg !13394
  call void @llvm.dbg.value(metadata i32 %1, metadata !13389, metadata !DIExpression()), !dbg !13394
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !13390, metadata !DIExpression()), !dbg !13394
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13391, metadata !DIExpression()), !dbg !13394
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13395
  %6 = icmp eq i32 %5, 0, !dbg !13397
  br i1 %6, label %7, label %25, !dbg !13398

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #26, !dbg !13399
  call void @llvm.dbg.value(metadata i32 %8, metadata !13393, metadata !DIExpression()), !dbg !13394
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !13401
  %10 = icmp eq i32 %9, 1, !dbg !13403
  br i1 %10, label %19, label %11, !dbg !13404

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13405
  br i1 %12, label %13, label %14, !dbg !13408

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13409
  br label %15, !dbg !13411

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !13412
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !13414
  br label %16, !dbg !13415

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !13416
  %18 = icmp eq i32 %17, 1, !dbg !13417
  br i1 %18, label %19, label %16, !dbg !13415, !llvm.loop !13418

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !13420
  %21 = load i32, i32* %20, align 4, !dbg !13420
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !13421
  %23 = load i32, i32* %22, align 4, !dbg !13421
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.140(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #26, !dbg !13422
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13423
  call void @llvm.dbg.value(metadata i32 %24, metadata !13392, metadata !DIExpression()), !dbg !13394
  br label %25, !dbg !13424

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !13425
  call void @llvm.dbg.value(metadata i32 %26, metadata !13392, metadata !DIExpression()), !dbg !13394
  ret i32 %26, !dbg !13426
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #18 !dbg !13427 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13428
  %2 = lshr i32 %1, 17, !dbg !13429
  %3 = and i32 %2, 1, !dbg !13429
  ret i32 %3, !dbg !13430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #17 !dbg !13431 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13432
  %2 = or i32 %1, 262144, !dbg !13432
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13432
  ret void, !dbg !13433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #17 !dbg !13434 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13435
  %2 = and i32 %1, -262145, !dbg !13435
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13435
  ret void, !dbg !13436
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #17 !dbg !13437 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13438
  %2 = or i32 %1, 65536, !dbg !13438
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13438
  ret void, !dbg !13439
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13440 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13443, metadata !DIExpression()), !dbg !13459
  call void @llvm.dbg.value(metadata i32 undef, metadata !13443, metadata !DIExpression()), !dbg !13459
  call void @llvm.dbg.value(metadata i32 undef, metadata !13443, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13459
  ret void, !dbg !13460
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13461 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13465, metadata !DIExpression()), !dbg !13467
  %2 = icmp eq i8* %0, null, !dbg !13468
  br i1 %2, label %29, label %3, !dbg !13470

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13471
  %5 = icmp eq i8 %4, 0, !dbg !13472
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13473
  br i1 %6, label %29, label %8, !dbg !13473

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13466, metadata !DIExpression()), !dbg !13467
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13474

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13466, metadata !DIExpression()), !dbg !13467
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13476
  br i1 %10, label %11, label %15, !dbg !13481

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13482
  %13 = load i8*, i8** %12, align 4, !dbg !13482
  %14 = icmp eq i8* %13, %0, !dbg !13483
  br i1 %14, label %29, label %15, !dbg !13484

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13485
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13466, metadata !DIExpression()), !dbg !13467
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13486
  br i1 %17, label %7, label %8, !dbg !13487, !llvm.loop !13488

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13466, metadata !DIExpression()), !dbg !13467
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13490
  br i1 %20, label %21, label %26, !dbg !13494

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13495
  %23 = load i8*, i8** %22, align 4, !dbg !13495
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !13496
  %25 = icmp eq i32 %24, 0, !dbg !13497
  br i1 %25, label %29, label %26, !dbg !13498

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13499
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13466, metadata !DIExpression()), !dbg !13467
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13500
  br i1 %28, label %29, label %18, !dbg !13474, !llvm.loop !13501

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13467
  ret %struct.device* %30, !dbg !13503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !13504 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13508, metadata !DIExpression()), !dbg !13509
  %2 = icmp eq %struct.device* %0, null, !dbg !13510
  br i1 %2, label %14, label %3, !dbg !13512

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13513
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13513
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13514
  %7 = load i8, i8* %6, align 1, !dbg !13514
  %8 = and i8 %7, 1, !dbg !13514
  %9 = icmp eq i8 %8, 0, !dbg !13514
  br i1 %9, label %14, label %10, !dbg !13515

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13516
  %12 = load i8, i8* %11, align 1, !dbg !13516
  %13 = icmp eq i8 %12, 0, !dbg !13517
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13509
  ret i1 %15, !dbg !13518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !13519 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13524, metadata !DIExpression()), !dbg !13525
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13526
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13527
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13528 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13536, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13537, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i8* %2, metadata !13538, metadata !DIExpression()), !dbg !13541
  %5 = bitcast i32* %4 to i8*, !dbg !13542
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13542
  call void @llvm.dbg.value(metadata i32 0, metadata !13539, metadata !DIExpression()), !dbg !13541
  store i32 0, i32* %4, align 4, !dbg !13543
  call void @llvm.dbg.value(metadata i32* %4, metadata !13539, metadata !DIExpression(DW_OP_deref)), !dbg !13541
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13544
  call void @llvm.dbg.value(metadata i16* %6, metadata !13540, metadata !DIExpression()), !dbg !13541
  %7 = load i32, i32* %4, align 4, !dbg !13545
  call void @llvm.dbg.value(metadata i32 %7, metadata !13539, metadata !DIExpression()), !dbg !13541
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13546
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13547
  ret i32 %8, !dbg !13548
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !13549 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13553, metadata !DIExpression()), !dbg !13559
  call void @llvm.dbg.value(metadata i32* %1, metadata !13554, metadata !DIExpression()), !dbg !13559
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13560
  %4 = load i16*, i16** %3, align 4, !dbg !13560
  call void @llvm.dbg.value(metadata i16* %4, metadata !13555, metadata !DIExpression()), !dbg !13559
  %5 = icmp eq i16* %4, null, !dbg !13561
  br i1 %5, label %14, label %6, !dbg !13562

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13563
  call void @llvm.dbg.value(metadata i32 %7, metadata !13556, metadata !DIExpression()), !dbg !13563
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13564
  %9 = load i16, i16* %8, align 2, !dbg !13564
  %10 = add i16 %9, -32767, !dbg !13565
  %11 = icmp ult i16 %10, 2, !dbg !13565
  %12 = add i32 %7, 1, !dbg !13566
  call void @llvm.dbg.value(metadata i32 %12, metadata !13556, metadata !DIExpression()), !dbg !13563
  br i1 %11, label %13, label %6, !dbg !13565, !llvm.loop !13568

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13571
  br label %14, !dbg !13572

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13574 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13578, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i32 %1, metadata !13579, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13580, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i8* %3, metadata !13581, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata i32 0, metadata !13582, metadata !DIExpression()), !dbg !13590
  %5 = icmp eq i32 %1, 0, !dbg !13591
  br i1 %5, label %16, label %8, !dbg !13592

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13582, metadata !DIExpression()), !dbg !13590
  %7 = icmp eq i32 %15, %1, !dbg !13591
  br i1 %7, label %16, label %8, !dbg !13592, !llvm.loop !13593

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13582, metadata !DIExpression()), !dbg !13590
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13595
  %11 = load i16, i16* %10, align 2, !dbg !13595
  call void @llvm.dbg.value(metadata i16 %11, metadata !13584, metadata !DIExpression()), !dbg !13596
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13597
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13587, metadata !DIExpression()), !dbg !13596
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !13598
  call void @llvm.dbg.value(metadata i32 %13, metadata !13588, metadata !DIExpression()), !dbg !13596
  %14 = icmp slt i32 %13, 0, !dbg !13599
  %15 = add nuw i32 %9, 1, !dbg !13601
  call void @llvm.dbg.value(metadata i32 %15, metadata !13582, metadata !DIExpression()), !dbg !13590
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !13603 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13607, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13608, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13609, metadata !DIExpression()), !dbg !13610
  %2 = sext i16 %0 to i32, !dbg !13611
  %3 = icmp slt i16 %0, 1, !dbg !13613
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13614
  %6 = add nsw i32 %2, -1, !dbg !13614
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13614
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13614
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13608, metadata !DIExpression()), !dbg !13610
  ret %struct.device* %8, !dbg !13615
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13616 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13618, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13619, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i8* %2, metadata !13620, metadata !DIExpression()), !dbg !13623
  %5 = bitcast i32* %4 to i8*, !dbg !13624
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13624
  call void @llvm.dbg.value(metadata i32 0, metadata !13621, metadata !DIExpression()), !dbg !13623
  store i32 0, i32* %4, align 4, !dbg !13625
  call void @llvm.dbg.value(metadata i32* %4, metadata !13621, metadata !DIExpression(DW_OP_deref)), !dbg !13623
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13626
  call void @llvm.dbg.value(metadata i16* %6, metadata !13622, metadata !DIExpression()), !dbg !13623
  %7 = load i32, i32* %4, align 4, !dbg !13627
  call void @llvm.dbg.value(metadata i32 %7, metadata !13621, metadata !DIExpression()), !dbg !13623
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13628
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13629
  ret i32 %8, !dbg !13630
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !13631 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13633, metadata !DIExpression()), !dbg !13638
  call void @llvm.dbg.value(metadata i32* %1, metadata !13634, metadata !DIExpression()), !dbg !13638
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13639
  %4 = load i16*, i16** %3, align 4, !dbg !13639
  call void @llvm.dbg.value(metadata i16* %4, metadata !13635, metadata !DIExpression()), !dbg !13638
  call void @llvm.dbg.value(metadata i32 0, metadata !13636, metadata !DIExpression()), !dbg !13638
  call void @llvm.dbg.value(metadata i32 0, metadata !13637, metadata !DIExpression()), !dbg !13638
  %5 = icmp eq i16* %4, null, !dbg !13640
  br i1 %5, label %22, label %6, !dbg !13642

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13636, metadata !DIExpression()), !dbg !13638
  call void @llvm.dbg.value(metadata i16* %8, metadata !13635, metadata !DIExpression()), !dbg !13638
  %9 = load i16, i16* %8, align 2, !dbg !13643
  %10 = icmp eq i16 %9, -32768, !dbg !13647
  call void @llvm.dbg.value(metadata i32 undef, metadata !13636, metadata !DIExpression()), !dbg !13638
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13648
  call void @llvm.dbg.value(metadata i16* %11, metadata !13635, metadata !DIExpression()), !dbg !13638
  %12 = zext i1 %10 to i32, !dbg !13649
  %13 = add i32 %7, %12, !dbg !13649
  call void @llvm.dbg.value(metadata i32 %13, metadata !13636, metadata !DIExpression()), !dbg !13638
  %14 = icmp eq i32 %13, 2, !dbg !13650
  br i1 %14, label %15, label %6, !dbg !13651

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13638
  call void @llvm.dbg.value(metadata i32 %16, metadata !13637, metadata !DIExpression()), !dbg !13638
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13652
  %18 = load i16, i16* %17, align 2, !dbg !13652
  %19 = icmp eq i16 %18, 32767, !dbg !13653
  %20 = add i32 %16, 1, !dbg !13654
  call void @llvm.dbg.value(metadata i32 %20, metadata !13637, metadata !DIExpression()), !dbg !13638
  br i1 %19, label %21, label %15, !dbg !13656, !llvm.loop !13657

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13659
  br label %22, !dbg !13660

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13661
  call void @llvm.dbg.value(metadata i16* %23, metadata !13635, metadata !DIExpression()), !dbg !13638
  ret i16* %23, !dbg !13662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !13663 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13666
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13667
  ret i32* %2, !dbg !13668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !13669 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13817, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13818, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13819, metadata !DIExpression()), !dbg !13820
  ret void, !dbg !13821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13826, metadata !DIExpression()), !dbg !13828
  call void @llvm.dbg.value(metadata i32 %1, metadata !13827, metadata !DIExpression()), !dbg !13828
  ret void, !dbg !13829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13830 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13834, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i32 %1, metadata !13835, metadata !DIExpression()), !dbg !13836
  ret void, !dbg !13837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13842, metadata !DIExpression()), !dbg !13844
  call void @llvm.dbg.value(metadata i8* %1, metadata !13843, metadata !DIExpression()), !dbg !13844
  ret i32 -134, !dbg !13845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13850, metadata !DIExpression()), !dbg !13852
  call void @llvm.dbg.value(metadata i8* %1, metadata !13851, metadata !DIExpression()), !dbg !13852
  ret i32 -134, !dbg !13853
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13857, metadata !DIExpression()), !dbg !13858
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13859, !srcloc !13865
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #25, !dbg !13866
  call void @llvm.dbg.value(metadata i32 undef, metadata !13863, metadata !DIExpression()) #25, !dbg !13866
  br label %3, !dbg !13867

3:                                                ; preds = %3, %1
  br label %3, !dbg !13868, !llvm.loop !13871
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13878, metadata !DIExpression()), !dbg !13880
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13879, metadata !DIExpression()), !dbg !13880
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i32 0, i32 0), i32 noundef 69) #27, !dbg !13881
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !13886
  unreachable, !dbg !13886
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13889, metadata !DIExpression()), !dbg !13890
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !13891
  unreachable, !dbg !13891
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13892 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13894, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13895, metadata !DIExpression()), !dbg !13898
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13899, !srcloc !13865
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #25, !dbg !13901
  call void @llvm.dbg.value(metadata i32 undef, metadata !13863, metadata !DIExpression()) #25, !dbg !13901
  call void @llvm.dbg.value(metadata i32 undef, metadata !13896, metadata !DIExpression()), !dbg !13898
  %4 = tail call fastcc %struct.k_thread* @k_current_get.155() #28, !dbg !13902
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13897, metadata !DIExpression()), !dbg !13898
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !13903
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.156, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !13903
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13908
  br i1 %6, label %15, label %7, !dbg !13910

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13911, metadata !DIExpression()), !dbg !13916
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13918
  %9 = load i32, i32* %8, align 4, !dbg !13918
  %10 = and i32 %9, 511, !dbg !13919
  %11 = icmp eq i32 %10, 0, !dbg !13920
  br i1 %11, label %13, label %12, !dbg !13921

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !13922
  br label %13, !dbg !13928

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !13929
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.158, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !13929
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13934
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13911, metadata !DIExpression()), !dbg !13935
  br label %17, !dbg !13940

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !13929
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.158, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !13929
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13934
  br label %17, !dbg !13941

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13899
  call void @llvm.dbg.value(metadata i32 %18, metadata !13862, metadata !DIExpression()) #25, !dbg !13901
  call void @llvm.dbg.value(metadata i32 %18, metadata !13896, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.value(metadata i32 undef, metadata !13942, metadata !DIExpression()) #25, !dbg !13945
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !13947, !srcloc !13948
  tail call fastcc void @k_thread_abort.159(%struct.k_thread* noundef %4) #26, !dbg !13949
  ret void, !dbg !13952
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.155() unnamed_addr #11 !dbg !13953 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.167() #28, !dbg !13957
  ret %struct.k_thread* %1, !dbg !13958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !13959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13963, metadata !DIExpression()), !dbg !13964
  %2 = icmp ult i32 %0, 5, !dbg !13965
  br i1 %2, label %3, label %6, !dbg !13965

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13965
  %5 = load i8*, i8** %4, align 4, !dbg !13965
  br label %6, !dbg !13965

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.161, i32 0, i32 0), %1 ], !dbg !13966
  ret i8* %7, !dbg !13968
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13969 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13973, metadata !DIExpression()), !dbg !13975
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13976
  br i1 %2, label %9, label %3, !dbg !13977

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !13978
  call void @llvm.dbg.value(metadata i8* %4, metadata !13974, metadata !DIExpression()), !dbg !13975
  %5 = icmp eq i8* %4, null, !dbg !13979
  br i1 %5, label %9, label %6, !dbg !13981

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13982
  %8 = icmp eq i8 %7, 0, !dbg !13983
  br i1 %8, label %9, label %10, !dbg !13984

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.160, i32 0, i32 0), metadata !13974, metadata !DIExpression()), !dbg !13975
  br label %10, !dbg !13985

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.160, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13975
  call void @llvm.dbg.value(metadata i8* %11, metadata !13974, metadata !DIExpression()), !dbg !13975
  ret i8* %11, !dbg !13987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.159(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13988 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13992, metadata !DIExpression()), !dbg !13993
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13994, !srcloc !13996
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !13997
  ret void, !dbg !13998
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.167() unnamed_addr #11 !dbg !13999 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14000, !srcloc !14002
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !14003
  ret %struct.k_thread* %1, !dbg !14004
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14005 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14009, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata i32 %1, metadata !14010, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata i32 %2, metadata !14011, metadata !DIExpression()), !dbg !14012
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !14013
  ret void, !dbg !14014
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14015 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14019, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata i8* %1, metadata !14020, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata i32 %2, metadata !14021, metadata !DIExpression()), !dbg !14022
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !14023
  ret void, !dbg !14024
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14025 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !14026
  ret void, !dbg !14027
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14028 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14030, metadata !DIExpression()), !dbg !14031
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !14032
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14033
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14034
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14035
  %4 = trunc i32 %0 to i8, !dbg !14036
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14037
  store i8 %4, i8* %5, align 4, !dbg !14038
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14039
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !14040
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14041
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14042
  store i8* %8, i8** %9, align 4, !dbg !14043
  ret void, !dbg !14044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14047, metadata !DIExpression()), !dbg !14053
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14054
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14048, metadata !DIExpression()), !dbg !14053
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14055
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14049, metadata !DIExpression()), !dbg !14053
  call void @llvm.dbg.value(metadata i8* null, metadata !14052, metadata !DIExpression()), !dbg !14053
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14056
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14057
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !14058
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !14059
  ret void, !dbg !14060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14061 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14065, metadata !DIExpression()), !dbg !14066
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14067
  ret i8* %2, !dbg !14068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14074, metadata !DIExpression()), !dbg !14075
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14076
  %3 = load i8, i8* %2, align 1, !dbg !14077
  %4 = and i8 %3, -5, !dbg !14077
  store i8 %4, i8* %2, align 1, !dbg !14077
  ret void, !dbg !14078
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !14079 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !14082
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !14083
  %3 = ptrtoint i8* %2 to i32, !dbg !14092
  %4 = add i32 %3, 2048, !dbg !14093
  call void @llvm.dbg.value(metadata i32 %4, metadata !14087, metadata !DIExpression()) #25, !dbg !14094
  call void @llvm.dbg.value(metadata i32 %4, metadata !14095, metadata !DIExpression()) #25, !dbg !14098
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !14100, !srcloc !14101
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14102
  %6 = or i32 %5, 512, !dbg !14102
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14102
  tail call fastcc void @__NVIC_SetPriority.176(i32 noundef -2, i32 noundef 255) #27, !dbg !14103
  tail call fastcc void @__NVIC_SetPriority.176(i32 noundef -5, i32 noundef 0) #27, !dbg !14106
  tail call fastcc void @__NVIC_SetPriority.176(i32 noundef -12, i32 noundef 0) #27, !dbg !14107
  tail call fastcc void @__NVIC_SetPriority.176(i32 noundef -11, i32 noundef 0) #27, !dbg !14108
  tail call fastcc void @__NVIC_SetPriority.176(i32 noundef -10, i32 noundef 0) #27, !dbg !14109
  tail call fastcc void @__NVIC_SetPriority.176(i32 noundef -4, i32 noundef 0) #27, !dbg !14110
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14111
  %8 = or i32 %7, 458752, !dbg !14111
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14111
  tail call void @z_arm_fault_init() #27, !dbg !14112
  tail call void @z_arm_cpu_idle_init() #27, !dbg !14113
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14114
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14117
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !14118
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !14119
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14120
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !14120
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14081, metadata !DIExpression()), !dbg !14121
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !14122
  call void @z_device_state_init() #27, !dbg !14123
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !14124
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !14125
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !14126
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !14127
  unreachable, !dbg !14127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2174, metadata !DIExpression()), !dbg !14128
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14129
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14129
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2175, metadata !DIExpression()), !dbg !14128
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2175, metadata !DIExpression()), !dbg !14128
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14130
  br i1 %7, label %8, label %35, !dbg !14131

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2175, metadata !DIExpression()), !dbg !14128
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14132
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14132
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2185, metadata !DIExpression()), !dbg !14133
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14134
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14134
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !14135
  call void @llvm.dbg.value(metadata i32 %14, metadata !2189, metadata !DIExpression()), !dbg !14133
  %15 = icmp eq %struct.device* %11, null, !dbg !14136
  br i1 %15, label %32, label %16, !dbg !14138

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14139
  br i1 %17, label %26, label %18, !dbg !14142

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14143
  call void @llvm.dbg.value(metadata i32 %19, metadata !2189, metadata !DIExpression()), !dbg !14133
  %20 = icmp ult i32 %19, 255, !dbg !14145
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14145
  call void @llvm.dbg.value(metadata i32 %21, metadata !2189, metadata !DIExpression()), !dbg !14133
  %22 = trunc i32 %21 to i8, !dbg !14146
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14147
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14147
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14148
  store i8 %22, i8* %25, align 1, !dbg !14149
  br label %26, !dbg !14150

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14151
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14151
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14152
  %30 = load i8, i8* %29, align 1, !dbg !14153
  %31 = or i8 %30, 1, !dbg !14153
  store i8 %31, i8* %29, align 1, !dbg !14153
  br label %32, !dbg !14154

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14155
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2175, metadata !DIExpression()), !dbg !14128
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14130
  br i1 %34, label %8, label %35, !dbg !14131, !llvm.loop !14156

35:                                               ; preds = %32, %1
  ret void, !dbg !14158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.176(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !14159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14161, metadata !DIExpression()), !dbg !14163
  call void @llvm.dbg.value(metadata i32 %1, metadata !14162, metadata !DIExpression()), !dbg !14163
  %3 = trunc i32 %1 to i8, !dbg !14164
  %4 = shl i8 %3, 4, !dbg !14164
  %5 = and i32 %0, 15, !dbg !14167
  %6 = add nsw i32 %5, -4, !dbg !14168
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14169
  store volatile i8 %4, i8* %7, align 1, !dbg !14170
  ret void, !dbg !14171
}

; Function Attrs: optsize
declare !dbg !14172 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14173 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14176, metadata !DIExpression()), !dbg !14177
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14178
  store i8 1, i8* %2, align 1, !dbg !14179
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14180
  store i8 1, i8* %3, align 4, !dbg !14181
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14182
  store i32 0, i32* %4, align 4, !dbg !14183
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14184
  store i32 0, i32* %5, align 4, !dbg !14185
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #27, !dbg !14186
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14187
  ret void, !dbg !14188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14189 {
  tail call void @z_sched_init() #27, !dbg !14194
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14195
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.177, i32 0, i32 0)) #27, !dbg !14196
  call void @llvm.dbg.value(metadata i8* %1, metadata !14193, metadata !DIExpression()), !dbg !14197
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !14198
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14199
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !14200
  ret i8* %1, !dbg !14201
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !14202 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14206, metadata !DIExpression()), !dbg !14207
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !14208
  unreachable, !dbg !14209
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14210 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14212, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata i8* %1, metadata !14213, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.value(metadata i8* %2, metadata !14214, metadata !DIExpression()), !dbg !14215
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14216
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !14217
  tail call void @boot_banner() #27, !dbg !14218
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !14219
  tail call void @z_init_static_threads() #27, !dbg !14220
  tail call void @main() #27, !dbg !14221
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14222
  %5 = and i8 %4, -2, !dbg !14222
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14222
  ret void, !dbg !14223
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14224 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14234, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata i8* %1, metadata !14235, metadata !DIExpression()), !dbg !14236
  ret void, !dbg !14237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14238 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14240, metadata !DIExpression()), !dbg !14242
  call void @llvm.dbg.value(metadata i8* %1, metadata !14241, metadata !DIExpression()), !dbg !14242
  ret void, !dbg !14243
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14244 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14245, !srcloc !14252
  call void @llvm.dbg.value(metadata i32 %1, metadata !14248, metadata !DIExpression()) #25, !dbg !14253
  %2 = icmp ne i32 %1, 0, !dbg !14254
  ret i1 %2, !dbg !14255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !14256 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14257
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14258
  %3 = load i8, i8* %2, align 4, !dbg !14259
  %4 = or i8 %3, 1, !dbg !14259
  store i8 %4, i8* %2, align 4, !dbg !14259
  ret void, !dbg !14260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !14261 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14262
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14263
  %3 = load i8, i8* %2, align 4, !dbg !14264
  %4 = and i8 %3, -2, !dbg !14264
  store i8 %4, i8* %2, align 4, !dbg !14264
  ret void, !dbg !14265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !14266 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14267
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14268
  %3 = load i8, i8* %2, align 4, !dbg !14268
  %4 = and i8 %3, 1, !dbg !14269
  %5 = icmp ne i8 %4, 0, !dbg !14270
  ret i1 %5, !dbg !14271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14272 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14276, metadata !DIExpression()), !dbg !14278
  call void @llvm.dbg.value(metadata i8* %1, metadata !14277, metadata !DIExpression()), !dbg !14278
  ret i32 -88, !dbg !14279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14280 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14284, metadata !DIExpression()), !dbg !14285
  ret i8* null, !dbg !14286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14287 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14291, metadata !DIExpression()), !dbg !14294
  call void @llvm.dbg.value(metadata i8* %1, metadata !14292, metadata !DIExpression()), !dbg !14294
  call void @llvm.dbg.value(metadata i32 %2, metadata !14293, metadata !DIExpression()), !dbg !14294
  ret i32 -88, !dbg !14295
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2198 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2312, metadata !DIExpression()), !dbg !14296
  call void @llvm.dbg.value(metadata i8* %1, metadata !2313, metadata !DIExpression()), !dbg !14296
  call void @llvm.dbg.value(metadata i32 %2, metadata !2314, metadata !DIExpression()), !dbg !14296
  call void @llvm.dbg.value(metadata i32 0, metadata !2315, metadata !DIExpression()), !dbg !14296
  call void @llvm.dbg.value(metadata i8 undef, metadata !2317, metadata !DIExpression()), !dbg !14296
  %4 = icmp eq i8* %1, null, !dbg !14297
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14299
  br i1 %6, label %46, label %7, !dbg !14299

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14300
  %9 = load i8, i8* %8, align 1, !dbg !14300
  call void @llvm.dbg.value(metadata i8 %9, metadata !2317, metadata !DIExpression()), !dbg !14296
  %10 = add i32 %2, -1, !dbg !14301
  call void @llvm.dbg.value(metadata i32 %10, metadata !2314, metadata !DIExpression()), !dbg !14296
  call void @llvm.dbg.value(metadata i8 0, metadata !2318, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata i8 %9, metadata !2317, metadata !DIExpression()), !dbg !14296
  call void @llvm.dbg.value(metadata i32 0, metadata !2315, metadata !DIExpression()), !dbg !14296
  %11 = icmp eq i8 %9, 0, !dbg !14303
  br i1 %11, label %12, label %15, !dbg !14305

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14306
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14307
  store i8 0, i8* %14, align 1, !dbg !14308
  br label %46, !dbg !14309

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2318, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata i8 %17, metadata !2317, metadata !DIExpression()), !dbg !14296
  call void @llvm.dbg.value(metadata i32 %18, metadata !2315, metadata !DIExpression()), !dbg !14296
  %19 = zext i8 %17 to i32, !dbg !14310
  %20 = zext i8 %16 to i32, !dbg !14311
  %21 = shl nuw i32 1, %20, !dbg !14311
  call void @llvm.dbg.value(metadata i32 %21, metadata !2316, metadata !DIExpression()), !dbg !14296
  %22 = and i32 %21, %19, !dbg !14313
  %23 = icmp eq i32 %22, 0, !dbg !14315
  br i1 %23, label %42, label %24, !dbg !14316

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14317
  %26 = sub i32 %10, %18, !dbg !14318
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14319
  %28 = load i8*, i8** %27, align 4, !dbg !14319
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14320
  %30 = load i32, i32* %29, align 4, !dbg !14320
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !14321
  %32 = add i32 %31, %18, !dbg !14322
  call void @llvm.dbg.value(metadata i32 %32, metadata !2315, metadata !DIExpression()), !dbg !14296
  %33 = trunc i32 %21 to i8, !dbg !14323
  %34 = xor i8 %33, -1, !dbg !14323
  %35 = and i8 %17, %34, !dbg !14323
  call void @llvm.dbg.value(metadata i8 %35, metadata !2317, metadata !DIExpression()), !dbg !14296
  %36 = icmp eq i8 %35, 0, !dbg !14324
  br i1 %36, label %12, label %37, !dbg !14326

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14327
  %39 = sub i32 %10, %32, !dbg !14329
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.180, i32 0, i32 0), i32 noundef 1) #26, !dbg !14330
  %41 = add i32 %40, %32, !dbg !14331
  call void @llvm.dbg.value(metadata i32 %41, metadata !2315, metadata !DIExpression()), !dbg !14296
  br label %42, !dbg !14332

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14296
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14296
  call void @llvm.dbg.value(metadata i8 %44, metadata !2317, metadata !DIExpression()), !dbg !14296
  call void @llvm.dbg.value(metadata i32 %43, metadata !2315, metadata !DIExpression()), !dbg !14296
  %45 = add i8 %16, 1, !dbg !14333
  call void @llvm.dbg.value(metadata i8 %45, metadata !2318, metadata !DIExpression()), !dbg !14302
  br label %15, !dbg !14305

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.181, i32 0, i32 0), %3 ], !dbg !14296
  ret i8* %47, !dbg !14334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14335 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14339, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 %1, metadata !14340, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i8* %2, metadata !14341, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 %3, metadata !14342, metadata !DIExpression()), !dbg !14344
  %5 = icmp ult i32 %1, %3, !dbg !14345
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14345
  call void @llvm.dbg.value(metadata i32 %6, metadata !14343, metadata !DIExpression()), !dbg !14344
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !14346
  ret i32 %6, !dbg !14347
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14352, metadata !DIExpression()), !dbg !14353
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !14354
  ret void, !dbg !14355
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14356 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14365, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14366, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i32 %2, metadata !14367, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14368, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i8* %4, metadata !14369, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i8* %5, metadata !14370, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i8* %6, metadata !14371, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i32 %7, metadata !14372, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i32 %8, metadata !14373, metadata !DIExpression()), !dbg !14376
  call void @llvm.dbg.value(metadata i8* undef, metadata !14374, metadata !DIExpression()), !dbg !14376
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14377
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #26, !dbg !14378
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14379
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14380
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14381
  call void @llvm.dbg.value(metadata i8* %13, metadata !14375, metadata !DIExpression()), !dbg !14376
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !14382
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14383
  store i8* null, i8** %14, align 4, !dbg !14384
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14385
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14385
  br i1 %16, label %20, label %17, !dbg !14387

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14388
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14388
  br label %20, !dbg !14389

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14376
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14390
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14392
  ret i8* %13, !dbg !14393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14394 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14399, metadata !DIExpression()), !dbg !14400
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14401
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14402
  ret void, !dbg !14403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !14404 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14409, metadata !DIExpression()), !dbg !14413
  call void @llvm.dbg.value(metadata i32 %1, metadata !14410, metadata !DIExpression()), !dbg !14413
  call void @llvm.dbg.value(metadata i32 %2, metadata !14411, metadata !DIExpression()), !dbg !14413
  call void @llvm.dbg.value(metadata i32 %3, metadata !14412, metadata !DIExpression()), !dbg !14413
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14414
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14415
  %6 = trunc i32 %3 to i8, !dbg !14416
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14417
  store i8 %6, i8* %7, align 4, !dbg !14418
  %8 = trunc i32 %2 to i8, !dbg !14419
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14420
  store i8 %8, i8* %9, align 1, !dbg !14421
  %10 = trunc i32 %1 to i8, !dbg !14422
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14423
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14423
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14423
  store i8 %10, i8* %13, align 2, !dbg !14424
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14425
  store i8 0, i8* %14, align 1, !dbg !14426
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14427
  ret void, !dbg !14428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !14429 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14433, metadata !DIExpression()), !dbg !14441
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14434, metadata !DIExpression()), !dbg !14441
  call void @llvm.dbg.value(metadata i32 %2, metadata !14435, metadata !DIExpression()), !dbg !14441
  call void @llvm.dbg.value(metadata i32 0, metadata !14440, metadata !DIExpression()), !dbg !14441
  %4 = add i32 %2, 7, !dbg !14442
  %5 = and i32 %4, -8, !dbg !14442
  %6 = add i32 %5, 64, !dbg !14442
  call void @llvm.dbg.value(metadata i32 %6, metadata !14436, metadata !DIExpression()), !dbg !14441
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.191(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14444
  call void @llvm.dbg.value(metadata i8* %7, metadata !14439, metadata !DIExpression()), !dbg !14441
  call void @llvm.dbg.value(metadata i32 %5, metadata !14437, metadata !DIExpression()), !dbg !14441
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14445
  call void @llvm.dbg.value(metadata i8* %8, metadata !14438, metadata !DIExpression()), !dbg !14441
  call void @llvm.dbg.value(metadata i32 0, metadata !14440, metadata !DIExpression()), !dbg !14441
  %9 = ptrtoint i8* %7 to i32, !dbg !14446
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14447
  store i32 %9, i32* %10, align 4, !dbg !14448
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14449
  store i32 %5, i32* %11, align 4, !dbg !14450
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14451
  store i32 0, i32* %12, align 4, !dbg !14452
  call void @llvm.dbg.value(metadata i8* %8, metadata !14438, metadata !DIExpression()), !dbg !14441
  ret i8* %8, !dbg !14453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.191(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14454 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14458, metadata !DIExpression()), !dbg !14459
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14460
  ret i8* %2, !dbg !14461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14462 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14467, metadata !DIExpression()), !dbg !14468
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14469
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14470
  ret void, !dbg !14471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14472 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14474, metadata !DIExpression()), !dbg !14475
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14476
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14477
  ret void, !dbg !14478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !14479 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14483, metadata !DIExpression()), !dbg !14484
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14485
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14486
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14487
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14488
  ret void, !dbg !14489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14490 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14495, metadata !DIExpression()), !dbg !14496
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14497
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14498
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14499
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14500
  ret void, !dbg !14501
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14502 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14519, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14510, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14511, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata i32 %2, metadata !14512, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14513, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata i8* %4, metadata !14514, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata i8* %5, metadata !14515, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata i8* %6, metadata !14516, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata i32 %7, metadata !14517, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.value(metadata i32 %8, metadata !14518, metadata !DIExpression()), !dbg !14520
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14521
  %13 = icmp eq i64 %11, -1, !dbg !14522
  br i1 %13, label %15, label %14, !dbg !14524

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14525
  br label %15, !dbg !14527

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14528
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14529 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14534, metadata !DIExpression()), !dbg !14535
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14533, metadata !DIExpression()), !dbg !14535
  %4 = icmp eq i64 %3, 0, !dbg !14536
  br i1 %4, label %5, label %6, !dbg !14538

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14539
  br label %7, !dbg !14541

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14542
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14545 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14549, metadata !DIExpression()), !dbg !14550
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14551, !srcloc !14553
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14554
  ret void, !dbg !14555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14556 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14559, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14558, metadata !DIExpression()), !dbg !14560
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14561
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14562
  ret void, !dbg !14563
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14564 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14566, metadata !DIExpression()), !dbg !14585
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14586

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !14587
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14583, metadata !DIExpression()), !dbg !14588
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14589

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14566, metadata !DIExpression()), !dbg !14585
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14590
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14590
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14593
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14593
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14594
  %9 = load i32, i32* %8, align 4, !dbg !14594
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14595
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14595
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14596
  %13 = load i8*, i8** %12, align 4, !dbg !14596
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14597
  %15 = load i8*, i8** %14, align 4, !dbg !14597
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14598
  %17 = load i8*, i8** %16, align 4, !dbg !14598
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14599
  %19 = load i32, i32* %18, align 4, !dbg !14599
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14600
  %21 = load i32, i32* %20, align 4, !dbg !14600
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14601
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14602
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14603
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14604
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14604
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14605
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14566, metadata !DIExpression()), !dbg !14585
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14606
  br i1 %27, label %2, label %1, !dbg !14586, !llvm.loop !14608

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !14587
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14583, metadata !DIExpression()), !dbg !14588
  br label %29, !dbg !14589

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !14610
  ret void, !dbg !14611

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14583, metadata !DIExpression()), !dbg !14588
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14612
  %33 = load i32, i32* %32, align 4, !dbg !14612
  %34 = icmp eq i32 %33, -1, !dbg !14616
  br i1 %34, label %43, label %35, !dbg !14617

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14618
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14618
  %38 = icmp sgt i32 %33, 0, !dbg !14620
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14620
  %40 = zext i32 %39 to i64, !dbg !14620
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.194(i64 noundef %40) #26, !dbg !14620
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14621
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14621
  br label %43, !dbg !14622

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14623
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14583, metadata !DIExpression()), !dbg !14588
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14624
  br i1 %45, label %30, label %29, !dbg !14589, !llvm.loop !14626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.194(i64 noundef %0) unnamed_addr #5 !dbg !14628 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14630, metadata !DIExpression()), !dbg !14631
  call void @llvm.dbg.value(metadata i64 %0, metadata !14632, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i32 1000, metadata !14635, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i32 10000, metadata !14636, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i8 1, metadata !14637, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i8 0, metadata !14638, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i8 1, metadata !14639, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i8 0, metadata !14640, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i8 1, metadata !14641, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i8 0, metadata !14642, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i64 0, metadata !14643, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.value(metadata i64 0, metadata !14643, metadata !DIExpression()), !dbg !14647
  %2 = mul i64 %0, 10, !dbg !14649
  ret i64 %2, !dbg !14655
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14656 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14658, metadata !DIExpression()), !dbg !14662
  call void @llvm.dbg.value(metadata i8* %1, metadata !14659, metadata !DIExpression()), !dbg !14662
  call void @llvm.dbg.value(metadata i8* %2, metadata !14660, metadata !DIExpression()), !dbg !14662
  call void @llvm.dbg.value(metadata i8* %3, metadata !14661, metadata !DIExpression()), !dbg !14662
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14663
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14664
  %7 = load i8, i8* %6, align 4, !dbg !14665
  %8 = or i8 %7, 4, !dbg !14665
  store i8 %8, i8* %6, align 4, !dbg !14665
  tail call void @z_thread_essential_clear() #26, !dbg !14666
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !14667
  unreachable, !dbg !14667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14668 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14672, metadata !DIExpression()), !dbg !14673
  ret i32 -134, !dbg !14674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14675 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14679, metadata !DIExpression()), !dbg !14681
  call void @llvm.dbg.value(metadata i32 %1, metadata !14680, metadata !DIExpression()), !dbg !14681
  ret i32 -134, !dbg !14682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #5 !dbg !14683 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14690, metadata !DIExpression()), !dbg !14692
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14691, metadata !DIExpression()), !dbg !14692
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14693
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14695
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14692
  ret i32 %6, !dbg !14696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #5 !dbg !14697 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14701, metadata !DIExpression()), !dbg !14702
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14703
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14702
  ret i32 %3, !dbg !14705
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14706 {
  tail call void @sys_clock_idle_exit() #27, !dbg !14708
  ret void, !dbg !14709
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14710 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14712, metadata !DIExpression()), !dbg !14715
  call void @llvm.dbg.value(metadata i8* %1, metadata !14713, metadata !DIExpression()), !dbg !14715
  call void @llvm.dbg.value(metadata i8* %2, metadata !14714, metadata !DIExpression()), !dbg !14715
  br label %4, !dbg !14716

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14717, !srcloc !14724
  call void @llvm.dbg.value(metadata i32 undef, metadata !14720, metadata !DIExpression()) #25, !dbg !14725
  call void @llvm.dbg.value(metadata i32 undef, metadata !14721, metadata !DIExpression()) #25, !dbg !14725
  tail call fastcc void @k_cpu_idle() #26, !dbg !14726
  br label %4, !dbg !14716, !llvm.loop !14727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14729 {
  tail call void @arch_cpu_idle() #27, !dbg !14730
  ret void, !dbg !14731
}

; Function Attrs: optsize
declare !dbg !14732 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !14733 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14751, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.value(metadata i8* %1, metadata !14752, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.value(metadata i32 %2, metadata !14753, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.value(metadata i32 %3, metadata !14754, metadata !DIExpression()), !dbg !14755
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14756
  store i32 %2, i32* %5, align 4, !dbg !14757
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14758
  store i32 %3, i32* %6, align 4, !dbg !14759
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14760
  store i8* %1, i8** %7, align 4, !dbg !14761
  %8 = mul i32 %3, %2, !dbg !14762
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !14763
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14764
  store i8* %9, i8** %10, align 4, !dbg !14765
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14766
  store i8* %1, i8** %11, align 4, !dbg !14767
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14768
  store i8* %1, i8** %12, align 4, !dbg !14769
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14770
  store i32 0, i32* %13, align 4, !dbg !14771
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14772
  store i8 0, i8* %14, align 4, !dbg !14773
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14774
  tail call fastcc void @z_waitq_init.197(%struct._wait_q_t* noundef %15) #26, !dbg !14775
  ret void, !dbg !14776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.197(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14777 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14781, metadata !DIExpression()), !dbg !14782
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14783
  tail call fastcc void @sys_dlist_init.198(%struct._dnode* noundef %2) #26, !dbg !14784
  ret void, !dbg !14785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.198(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14786 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14791, metadata !DIExpression()), !dbg !14792
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14793
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14794
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14795
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14796
  ret void, !dbg !14797
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14798 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14802, metadata !DIExpression()), !dbg !14808
  call void @llvm.dbg.value(metadata i32 %1, metadata !14803, metadata !DIExpression()), !dbg !14808
  call void @llvm.dbg.value(metadata i32 %2, metadata !14804, metadata !DIExpression()), !dbg !14808
  %5 = bitcast i32* %4 to i8*, !dbg !14809
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14809
  call void @llvm.dbg.value(metadata i32* %4, metadata !14807, metadata !DIExpression(DW_OP_deref)), !dbg !14808
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !14810
  br i1 %6, label %13, label %7, !dbg !14812

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !14813
  call void @llvm.dbg.value(metadata i32 %8, metadata !14807, metadata !DIExpression()), !dbg !14808
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !14815
  call void @llvm.dbg.value(metadata i8* %9, metadata !14805, metadata !DIExpression()), !dbg !14808
  %10 = icmp eq i8* %9, null, !dbg !14816
  br i1 %10, label %13, label %11, !dbg !14818

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !14819
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14821
  store i8 1, i8* %12, align 4, !dbg !14822
  call void @llvm.dbg.value(metadata i32 0, metadata !14806, metadata !DIExpression()), !dbg !14808
  br label %13, !dbg !14823

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !14824
  call void @llvm.dbg.value(metadata i32 %14, metadata !14806, metadata !DIExpression()), !dbg !14808
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14825
  ret i32 %14, !dbg !14826
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !14827 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14832, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata i32 %1, metadata !14833, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata i32* %2, metadata !14834, metadata !DIExpression()), !dbg !14835
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !14836
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !14836
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !14836
  store i32 %6, i32* %2, align 4, !dbg !14836
  ret i1 %5, !dbg !14837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !14838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14842, metadata !DIExpression()), !dbg !14843
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !14844
  ret i8* %2, !dbg !14845
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !14846 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14850, metadata !DIExpression()), !dbg !14851
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14852
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #26, !dbg !14852
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !14852
  br i1 %4, label %5, label %15, !dbg !14854

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14855
  %7 = load i8, i8* %6, align 4, !dbg !14855
  %8 = and i8 %7, 1, !dbg !14857
  %9 = icmp eq i8 %8, 0, !dbg !14858
  br i1 %9, label %15, label %10, !dbg !14859

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14860
  %12 = load i8*, i8** %11, align 4, !dbg !14860
  tail call void @k_free(i8* noundef %12) #27, !dbg !14862
  %13 = load i8, i8* %6, align 4, !dbg !14863
  %14 = and i8 %13, -2, !dbg !14863
  store i8 %14, i8* %6, align 4, !dbg !14863
  br label %15, !dbg !14864

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !14851
  ret i32 %16, !dbg !14865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !14866 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14870, metadata !DIExpression()), !dbg !14871
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14872
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !14873
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14874
  ret %struct.k_thread* %4, !dbg !14875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14876 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14880, metadata !DIExpression()), !dbg !14881
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14882
  br i1 %2, label %6, label %3, !dbg !14882

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14883
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14883
  br label %6, !dbg !14882

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14882
  ret %struct._dnode* %7, !dbg !14884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14885 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14889, metadata !DIExpression()), !dbg !14890
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14891
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14891
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14892
  ret i1 %4, !dbg !14893
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14894 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14904, metadata !DIExpression()), !dbg !14912
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14902, metadata !DIExpression()), !dbg !14912
  call void @llvm.dbg.value(metadata i8* %1, metadata !14903, metadata !DIExpression()), !dbg !14912
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14913
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14914, metadata !DIExpression()) #25, !dbg !14921
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14923, !srcloc !14929
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !14923
  call void @llvm.dbg.value(metadata i32 %6, metadata !14926, metadata !DIExpression()) #25, !dbg !14930
  call void @llvm.dbg.value(metadata i32 undef, metadata !14927, metadata !DIExpression()) #25, !dbg !14930
  call void @llvm.dbg.value(metadata i32 %6, metadata !14920, metadata !DIExpression()) #25, !dbg !14921
  call void @llvm.dbg.value(metadata i32 %6, metadata !14906, metadata !DIExpression()), !dbg !14912
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14931
  %8 = load i32, i32* %7, align 4, !dbg !14931
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14933
  %10 = load i32, i32* %9, align 4, !dbg !14933
  %11 = icmp ult i32 %8, %10, !dbg !14934
  br i1 %11, label %12, label %42, !dbg !14935

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14936
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #27, !dbg !14938
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14905, metadata !DIExpression()), !dbg !14912
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !14939
  br i1 %15, label %24, label %16, !dbg !14941

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !14942
  %18 = load i8*, i8** %17, align 4, !dbg !14942
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14944
  %20 = load i32, i32* %19, align 4, !dbg !14944
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #27, !dbg !14945
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14946, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i32 0, metadata !14951, metadata !DIExpression()), !dbg !14952
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !14954
  store i32 0, i32* %22, align 4, !dbg !14955
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #27, !dbg !14956
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14957
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #27, !dbg !14957
  br label %53, !dbg !14958

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14959
  %26 = load i8*, i8** %25, align 4, !dbg !14959
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14961
  %28 = load i32, i32* %27, align 4, !dbg !14961
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #27, !dbg !14962
  %30 = load i32, i32* %27, align 4, !dbg !14963
  %31 = load i8*, i8** %25, align 4, !dbg !14964
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !14964
  store i8* %32, i8** %25, align 4, !dbg !14964
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14965
  %34 = load i8*, i8** %33, align 4, !dbg !14965
  %35 = icmp eq i8* %32, %34, !dbg !14967
  br i1 %35, label %36, label %39, !dbg !14968

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14969
  %38 = load i8*, i8** %37, align 4, !dbg !14969
  store i8* %38, i8** %25, align 4, !dbg !14971
  br label %39, !dbg !14972

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !14973
  %41 = add i32 %40, 1, !dbg !14973
  store i32 %41, i32* %7, align 4, !dbg !14973
  call void @llvm.dbg.value(metadata i32 0, metadata !14911, metadata !DIExpression()), !dbg !14912
  br label %51, !dbg !14974

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !14904, metadata !DIExpression()), !dbg !14912
  %44 = icmp eq i64 %43, 0, !dbg !14975
  br i1 %44, label %51, label %45, !dbg !14977

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14978
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !14980
  store i8* %1, i8** %47, align 4, !dbg !14981
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14982
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14983
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #27, !dbg !14983
  call void @llvm.dbg.value(metadata i32 %50, metadata !14911, metadata !DIExpression()), !dbg !14912
  br label %53, !dbg !14984

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !14985
  call void @llvm.dbg.value(metadata i32 %52, metadata !14911, metadata !DIExpression()), !dbg !14912
  call void @llvm.dbg.value(metadata i32 %6, metadata !14986, metadata !DIExpression()) #25, !dbg !14992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14991, metadata !DIExpression()) #25, !dbg !14992
  call void @llvm.dbg.value(metadata i32 %6, metadata !14994, metadata !DIExpression()) #25, !dbg !14997
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14999, !srcloc !15000
  br label %53, !dbg !15001

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !14912
  ret i32 %54, !dbg !15002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !15003 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15013, metadata !DIExpression()), !dbg !15015
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15014, metadata !DIExpression()), !dbg !15015
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15016
  %4 = load i32, i32* %3, align 4, !dbg !15016
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15017
  store i32 %4, i32* %5, align 4, !dbg !15018
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15019
  %7 = load i32, i32* %6, align 4, !dbg !15019
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15020
  store i32 %7, i32* %8, align 4, !dbg !15021
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15022
  %10 = load i32, i32* %9, align 4, !dbg !15022
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15023
  store i32 %10, i32* %11, align 4, !dbg !15024
  ret void, !dbg !15025
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15026 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15032, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15030, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i8* %1, metadata !15031, metadata !DIExpression()), !dbg !15036
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15037
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14914, metadata !DIExpression()) #25, !dbg !15038
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15040, !srcloc !14929
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !15040
  call void @llvm.dbg.value(metadata i32 %6, metadata !14926, metadata !DIExpression()) #25, !dbg !15042
  call void @llvm.dbg.value(metadata i32 undef, metadata !14927, metadata !DIExpression()) #25, !dbg !15042
  call void @llvm.dbg.value(metadata i32 %6, metadata !14920, metadata !DIExpression()) #25, !dbg !15038
  call void @llvm.dbg.value(metadata i32 %6, metadata !15033, metadata !DIExpression()), !dbg !15036
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15043
  %8 = load i32, i32* %7, align 4, !dbg !15043
  %9 = icmp eq i32 %8, 0, !dbg !15045
  br i1 %9, label %51, label %10, !dbg !15046

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15047
  %12 = load i8*, i8** %11, align 4, !dbg !15047
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15049
  %14 = load i32, i32* %13, align 4, !dbg !15049
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #27, !dbg !15050
  %16 = load i32, i32* %13, align 4, !dbg !15051
  %17 = load i8*, i8** %11, align 4, !dbg !15052
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !15052
  store i8* %18, i8** %11, align 4, !dbg !15052
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15053
  %20 = load i8*, i8** %19, align 4, !dbg !15053
  %21 = icmp eq i8* %18, %20, !dbg !15055
  br i1 %21, label %22, label %25, !dbg !15056

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15057
  %24 = load i8*, i8** %23, align 4, !dbg !15057
  store i8* %24, i8** %11, align 4, !dbg !15059
  br label %25, !dbg !15060

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !15061
  %27 = add i32 %26, -1, !dbg !15061
  store i32 %27, i32* %7, align 4, !dbg !15061
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15062
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #27, !dbg !15063
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !15034, metadata !DIExpression()), !dbg !15036
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !15064
  br i1 %30, label %60, label %31, !dbg !15066

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15067
  %33 = load i8*, i8** %32, align 4, !dbg !15067
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !15069
  %35 = load i8*, i8** %34, align 4, !dbg !15069
  %36 = load i32, i32* %13, align 4, !dbg !15070
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #27, !dbg !15071
  %38 = load i32, i32* %13, align 4, !dbg !15072
  %39 = load i8*, i8** %32, align 4, !dbg !15073
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !15073
  store i8* %40, i8** %32, align 4, !dbg !15073
  %41 = load i8*, i8** %19, align 4, !dbg !15074
  %42 = icmp eq i8* %40, %41, !dbg !15076
  br i1 %42, label %43, label %46, !dbg !15077

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15078
  %45 = load i8*, i8** %44, align 4, !dbg !15078
  store i8* %45, i8** %32, align 4, !dbg !15080
  br label %46, !dbg !15081

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !15082
  %48 = add i32 %47, 1, !dbg !15082
  store i32 %48, i32* %7, align 4, !dbg !15082
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !14946, metadata !DIExpression()), !dbg !15083
  call void @llvm.dbg.value(metadata i32 0, metadata !14951, metadata !DIExpression()), !dbg !15083
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !15085
  store i32 0, i32* %49, align 4, !dbg !15086
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #27, !dbg !15087
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15088
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #27, !dbg !15088
  br label %62, !dbg !15089

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !15032, metadata !DIExpression()), !dbg !15036
  %53 = icmp eq i64 %52, 0, !dbg !15090
  br i1 %53, label %60, label %54, !dbg !15092

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15093
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !15095
  store i8* %1, i8** %56, align 4, !dbg !15096
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15097
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15098
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #27, !dbg !15098
  call void @llvm.dbg.value(metadata i32 %59, metadata !15035, metadata !DIExpression()), !dbg !15036
  br label %62, !dbg !15099

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !15100
  call void @llvm.dbg.value(metadata i32 %61, metadata !15035, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 %6, metadata !14986, metadata !DIExpression()) #25, !dbg !15101
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14991, metadata !DIExpression()) #25, !dbg !15101
  call void @llvm.dbg.value(metadata i32 %6, metadata !14994, metadata !DIExpression()) #25, !dbg !15103
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !15105, !srcloc !15000
  br label %62, !dbg !15106

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !15036
  ret i32 %63, !dbg !15107
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15108 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15112, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata i8* %1, metadata !15113, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14914, metadata !DIExpression()) #25, !dbg !15117
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15119, !srcloc !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14926, metadata !DIExpression()) #25, !dbg !15121
  call void @llvm.dbg.value(metadata i32 undef, metadata !14927, metadata !DIExpression()) #25, !dbg !15121
  call void @llvm.dbg.value(metadata i32 undef, metadata !14920, metadata !DIExpression()) #25, !dbg !15117
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()), !dbg !15116
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15122
  %5 = load i32, i32* %4, align 4, !dbg !15122
  %6 = icmp eq i32 %5, 0, !dbg !15124
  br i1 %6, label %13, label %7, !dbg !15125

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15126
  %9 = load i8*, i8** %8, align 4, !dbg !15126
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15128
  %11 = load i32, i32* %10, align 4, !dbg !15128
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #27, !dbg !15129
  call void @llvm.dbg.value(metadata i32 0, metadata !15115, metadata !DIExpression()), !dbg !15116
  br label %13, !dbg !15130

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !15131
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15119
  call void @llvm.dbg.value(metadata i32 %15, metadata !14926, metadata !DIExpression()) #25, !dbg !15121
  call void @llvm.dbg.value(metadata i32 %15, metadata !14920, metadata !DIExpression()) #25, !dbg !15117
  call void @llvm.dbg.value(metadata i32 %15, metadata !15114, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata i32 %14, metadata !15115, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata i32 undef, metadata !14986, metadata !DIExpression()) #25, !dbg !15132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14991, metadata !DIExpression()) #25, !dbg !15132
  call void @llvm.dbg.value(metadata i32 undef, metadata !14994, metadata !DIExpression()) #25, !dbg !15134
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !15136, !srcloc !15000
  ret i32 %14, !dbg !15137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15138 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15142, metadata !DIExpression()), !dbg !15145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14914, metadata !DIExpression()) #25, !dbg !15146
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15148, !srcloc !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14926, metadata !DIExpression()) #25, !dbg !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !14927, metadata !DIExpression()) #25, !dbg !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !14920, metadata !DIExpression()) #25, !dbg !15146
  call void @llvm.dbg.value(metadata i32 undef, metadata !15143, metadata !DIExpression()), !dbg !15145
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !15151
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15144, metadata !DIExpression()), !dbg !15145
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15152
  br i1 %5, label %11, label %6, !dbg !15153

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14946, metadata !DIExpression()), !dbg !15154
  call void @llvm.dbg.value(metadata i32 -35, metadata !14951, metadata !DIExpression()), !dbg !15154
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15157
  store i32 -35, i32* %8, align 4, !dbg !15158
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !15159
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !15151
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15144, metadata !DIExpression()), !dbg !15145
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15152
  br i1 %10, label %11, label %6, !dbg !15153, !llvm.loop !15160

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !15148
  call void @llvm.dbg.value(metadata i32 %12, metadata !14926, metadata !DIExpression()) #25, !dbg !15150
  call void @llvm.dbg.value(metadata i32 %12, metadata !14920, metadata !DIExpression()) #25, !dbg !15146
  call void @llvm.dbg.value(metadata i32 %12, metadata !15143, metadata !DIExpression()), !dbg !15145
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15162
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15163
  store i32 0, i32* %14, align 4, !dbg !15164
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15165
  %16 = load i8*, i8** %15, align 4, !dbg !15165
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15166
  store i8* %16, i8** %17, align 4, !dbg !15167
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15168
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #27, !dbg !15168
  ret void, !dbg !15169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #8 !dbg !15170 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15181, metadata !DIExpression()), !dbg !15182
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15183
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !15184
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15185
  store i32 0, i32* %3, align 4, !dbg !15186
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15187
  tail call fastcc void @z_waitq_init.203(%struct._wait_q_t* noundef %4) #26, !dbg !15188
  ret i32 0, !dbg !15189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.203(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !15190 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15194, metadata !DIExpression()), !dbg !15195
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15196
  tail call fastcc void @sys_dlist_init.204(%struct._dnode* noundef %2) #26, !dbg !15197
  ret void, !dbg !15198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.204(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15199 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15204, metadata !DIExpression()), !dbg !15205
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15206
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15207
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15208
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15209
  ret void, !dbg !15210
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15211 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15220, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15219, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.value(metadata i8 0, metadata !15227, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15233, metadata !DIExpression()) #25, !dbg !15240
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15242, !srcloc !15248
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15242
  call void @llvm.dbg.value(metadata i32 %5, metadata !15245, metadata !DIExpression()) #25, !dbg !15249
  call void @llvm.dbg.value(metadata i32 undef, metadata !15246, metadata !DIExpression()) #25, !dbg !15249
  call void @llvm.dbg.value(metadata i32 %5, metadata !15239, metadata !DIExpression()) #25, !dbg !15240
  call void @llvm.dbg.value(metadata i32 %5, metadata !15222, metadata !DIExpression()), !dbg !15232
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15250
  %7 = load i32, i32* %6, align 4, !dbg !15250
  %8 = icmp eq i32 %7, 0, !dbg !15250
  br i1 %8, label %14, label %9, !dbg !15250

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15250
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15250
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15250
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15250
  br i1 %13, label %20, label %29, !dbg !15252, !prof !15253

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15254
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !15256
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !15256
  %18 = load i8, i8* %17, align 2, !dbg !15256
  %19 = sext i8 %18 to i32, !dbg !15254
  br label %23, !dbg !15257

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15258
  %22 = load i32, i32* %21, align 4, !dbg !15258
  br label %23, !dbg !15257

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !15259
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !15257
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15260
  store i32 %25, i32* %26, align 4, !dbg !15261
  %27 = add i32 %7, 1, !dbg !15262
  store i32 %27, i32* %6, align 4, !dbg !15262
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15263
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !15264
  call void @llvm.dbg.value(metadata i32 %5, metadata !15265, metadata !DIExpression()) #25, !dbg !15271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15270, metadata !DIExpression()) #25, !dbg !15271
  call void @llvm.dbg.value(metadata i32 %5, metadata !15273, metadata !DIExpression()) #25, !dbg !15276
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15278, !srcloc !15279
  br label %78, !dbg !15280

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !15281
  br i1 %30, label %31, label %32, !dbg !15283, !prof !15284

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !15265, metadata !DIExpression()) #25, !dbg !15285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15270, metadata !DIExpression()) #25, !dbg !15285
  call void @llvm.dbg.value(metadata i32 %5, metadata !15273, metadata !DIExpression()) #25, !dbg !15288
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15290, !srcloc !15279
  br label %78, !dbg !15291

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !15292
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !15292
  %35 = load i8, i8* %34, align 2, !dbg !15292
  %36 = sext i8 %35 to i32, !dbg !15293
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !15294
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !15294
  %39 = load i8, i8* %38, align 2, !dbg !15294
  %40 = sext i8 %39 to i32, !dbg !15295
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #26, !dbg !15296
  call void @llvm.dbg.value(metadata i32 %41, metadata !15221, metadata !DIExpression()), !dbg !15232
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #26, !dbg !15297
  br i1 %42, label %43, label %45, !dbg !15299

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #26, !dbg !15300
  call void @llvm.dbg.value(metadata i1 %44, metadata !15227, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15232
  br label %45, !dbg !15302

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !15227, metadata !DIExpression()), !dbg !15232
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15303
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !15304
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %48, %struct._wait_q_t* noundef %47, [1 x i64] %1) #27, !dbg !15304
  call void @llvm.dbg.value(metadata i32 %49, metadata !15228, metadata !DIExpression()), !dbg !15232
  %50 = icmp eq i32 %49, 0, !dbg !15305
  br i1 %50, label %78, label %51, !dbg !15307

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15233, metadata !DIExpression()) #25, !dbg !15308
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15310, !srcloc !15248
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !15310
  call void @llvm.dbg.value(metadata i32 %53, metadata !15245, metadata !DIExpression()) #25, !dbg !15312
  call void @llvm.dbg.value(metadata i32 undef, metadata !15246, metadata !DIExpression()) #25, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %53, metadata !15239, metadata !DIExpression()) #25, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %53, metadata !15222, metadata !DIExpression()), !dbg !15232
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15313
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !15313
  br i1 %55, label %74, label %56, !dbg !15314, !prof !15284

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head.207(%struct._wait_q_t* noundef nonnull %47) #26, !dbg !15315
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !15229, metadata !DIExpression()), !dbg !15316
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !15317
  br i1 %58, label %67, label %59, !dbg !15318

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !15319
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !15319
  %62 = load i8, i8* %61, align 2, !dbg !15319
  %63 = sext i8 %62 to i32, !dbg !15320
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15321
  %65 = load i32, i32* %64, align 4, !dbg !15321
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #26, !dbg !15322
  br label %70, !dbg !15318

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15323
  %69 = load i32, i32* %68, align 4, !dbg !15323
  br label %70, !dbg !15318

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !15318
  call void @llvm.dbg.value(metadata i32 %71, metadata !15221, metadata !DIExpression()), !dbg !15232
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #26, !dbg !15324
  %73 = select i1 %72, i1 true, i1 %46, !dbg !15325
  call void @llvm.dbg.value(metadata i1 %73, metadata !15227, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15232
  call void @llvm.dbg.value(metadata i8 poison, metadata !15227, metadata !DIExpression()), !dbg !15232
  br i1 %73, label %75, label %77, !dbg !15326

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !15227, metadata !DIExpression()), !dbg !15232
  br i1 %46, label %75, label %77, !dbg !15326

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !15327
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %76) #27, !dbg !15327
  br label %78, !dbg !15330

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !15265, metadata !DIExpression()) #25, !dbg !15331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15270, metadata !DIExpression()) #25, !dbg !15331
  call void @llvm.dbg.value(metadata i32 %53, metadata !15273, metadata !DIExpression()) #25, !dbg !15334
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #25, !dbg !15336, !srcloc !15279
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !15232
  ret i32 %79, !dbg !15337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15342, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata i32 %1, metadata !15343, metadata !DIExpression()), !dbg !15345
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #26, !dbg !15346
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !15346
  call void @llvm.dbg.value(metadata i32 %4, metadata !15344, metadata !DIExpression()), !dbg !15345
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #26, !dbg !15347
  call void @llvm.dbg.value(metadata i32 %5, metadata !15344, metadata !DIExpression()), !dbg !15345
  ret i32 %5, !dbg !15348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15353, metadata !DIExpression()), !dbg !15355
  call void @llvm.dbg.value(metadata i32 %1, metadata !15354, metadata !DIExpression()), !dbg !15355
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15356
  ret i1 %3, !dbg !15357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !15358 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15362, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.value(metadata i32 %1, metadata !15363, metadata !DIExpression()), !dbg !15364
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15365
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !15365
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15367
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15367
  %7 = load i8, i8* %6, align 2, !dbg !15367
  %8 = sext i8 %7 to i32, !dbg !15368
  %9 = icmp eq i32 %8, %1, !dbg !15369
  br i1 %9, label %12, label %10, !dbg !15370

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #27, !dbg !15371
  br label %12, !dbg !15373

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !15364
  ret i1 %13, !dbg !15374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.207(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !15375 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15379, metadata !DIExpression()), !dbg !15380
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15381
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.208(%struct._dnode* noundef %2) #26, !dbg !15382
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15383
  ret %struct.k_thread* %4, !dbg !15384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.208(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15385 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15389, metadata !DIExpression()), !dbg !15390
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.209(%struct._dnode* noundef %0) #26, !dbg !15391
  br i1 %2, label %6, label %3, !dbg !15391

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15392
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15392
  br label %6, !dbg !15391

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15391
  ret %struct._dnode* %7, !dbg !15393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.209(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15394 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15398, metadata !DIExpression()), !dbg !15399
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15400
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15400
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15401
  ret i1 %4, !dbg !15402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15405, metadata !DIExpression()), !dbg !15407
  call void @llvm.dbg.value(metadata i32 %1, metadata !15406, metadata !DIExpression()), !dbg !15407
  %3 = icmp slt i32 %0, %1, !dbg !15408
  ret i1 %3, !dbg !15409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15412, metadata !DIExpression()), !dbg !15413
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #26, !dbg !15414
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !15414
  ret i32 %3, !dbg !15415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15420, metadata !DIExpression()), !dbg !15421
  %2 = icmp sgt i32 %0, -128, !dbg !15422
  ret i1 %2, !dbg !15423
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !15424 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15426, metadata !DIExpression()), !dbg !15430
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15431
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !15431
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15431
  br i1 %4, label %31, label %5, !dbg !15433

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15434
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !15434
  br i1 %7, label %8, label %31, !dbg !15436

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15437
  %10 = load i32, i32* %9, align 4, !dbg !15437
  %11 = icmp ugt i32 %10, 1, !dbg !15439
  br i1 %11, label %12, label %14, !dbg !15440

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !15441
  store i32 %13, i32* %9, align 4, !dbg !15441
  br label %31, !dbg !15443

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15233, metadata !DIExpression()) #25, !dbg !15444
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15446, !srcloc !15248
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15446
  call void @llvm.dbg.value(metadata i32 %16, metadata !15245, metadata !DIExpression()) #25, !dbg !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15246, metadata !DIExpression()) #25, !dbg !15448
  call void @llvm.dbg.value(metadata i32 %16, metadata !15239, metadata !DIExpression()) #25, !dbg !15444
  call void @llvm.dbg.value(metadata i32 %16, metadata !15428, metadata !DIExpression()), !dbg !15430
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15449
  %18 = load i32, i32* %17, align 4, !dbg !15449
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #26, !dbg !15450
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15451
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %20) #27, !dbg !15452
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15427, metadata !DIExpression()), !dbg !15430
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !15453
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !15454
  br i1 %22, label %30, label %23, !dbg !15456

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !15457
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !15457
  %26 = load i8, i8* %25, align 2, !dbg !15457
  %27 = sext i8 %26 to i32, !dbg !15459
  store i32 %27, i32* %17, align 4, !dbg !15460
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15461, metadata !DIExpression()), !dbg !15467
  call void @llvm.dbg.value(metadata i32 0, metadata !15466, metadata !DIExpression()), !dbg !15467
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 7, i32 1, !dbg !15469
  store i32 0, i32* %28, align 4, !dbg !15470
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #27, !dbg !15471
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15472
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %29) #27, !dbg !15472
  br label %31, !dbg !15473

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !15474
  call void @llvm.dbg.value(metadata i32 %16, metadata !15265, metadata !DIExpression()) #25, !dbg !15476
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15270, metadata !DIExpression()) #25, !dbg !15476
  call void @llvm.dbg.value(metadata i32 %16, metadata !15273, metadata !DIExpression()) #25, !dbg !15478
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !15480, !srcloc !15279
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !15430
  ret i32 %32, !dbg !15481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !15482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15486, metadata !DIExpression()), !dbg !15490
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15487, metadata !DIExpression()), !dbg !15490
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15491
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15491
  %5 = load i8, i8* %4, align 2, !dbg !15491
  call void @llvm.dbg.value(metadata i8 %5, metadata !15488, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15490
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15492
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15492
  %8 = load i8, i8* %7, align 2, !dbg !15492
  call void @llvm.dbg.value(metadata i8 %8, metadata !15489, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15490
  %9 = icmp eq i8 %8, %5, !dbg !15493
  %10 = sext i8 %5 to i32, !dbg !15495
  %11 = sext i8 %8 to i32, !dbg !15495
  %12 = sub nsw i32 %11, %10, !dbg !15495
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15495
  ret i32 %13, !dbg !15496
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15501, metadata !DIExpression()), !dbg !15502
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15503
  %3 = icmp eq i32 %2, 0, !dbg !15505
  br i1 %3, label %8, label %4, !dbg !15506

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15507
  %6 = add i32 %5, %2, !dbg !15509
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15510
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15511
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15512
  br label %8, !dbg !15513

8:                                                ; preds = %4, %1
  ret void, !dbg !15514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !15515 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15519, metadata !DIExpression()), !dbg !15521
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15522
  call void @llvm.dbg.value(metadata i32 %1, metadata !15520, metadata !DIExpression()), !dbg !15521
  ret i32 %1, !dbg !15523
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15528, metadata !DIExpression()), !dbg !15537
  call void @llvm.dbg.value(metadata i32 %1, metadata !15529, metadata !DIExpression()), !dbg !15537
  call void @llvm.dbg.value(metadata i32 0, metadata !15530, metadata !DIExpression()), !dbg !15538
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !15546
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15548, !srcloc !15554
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15548
  call void @llvm.dbg.value(metadata i32 %4, metadata !15551, metadata !DIExpression()) #25, !dbg !15555
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !15555
  call void @llvm.dbg.value(metadata i32 %4, metadata !15545, metadata !DIExpression()) #25, !dbg !15546
  call void @llvm.dbg.value(metadata i32 %4, metadata !15536, metadata !DIExpression()), !dbg !15538
  call void @llvm.dbg.value(metadata i32 undef, metadata !15530, metadata !DIExpression()), !dbg !15538
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15556
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15559
  %6 = icmp sgt i32 %0, 0, !dbg !15560
  %7 = icmp sgt i32 %5, 2, !dbg !15562
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15562
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15562
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15563
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15564
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15565
  call void @llvm.dbg.value(metadata i32 %4, metadata !15566, metadata !DIExpression()) #25, !dbg !15572
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !15572
  call void @llvm.dbg.value(metadata i32 %4, metadata !15574, metadata !DIExpression()) #25, !dbg !15577
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15579, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 1, metadata !15530, metadata !DIExpression()), !dbg !15538
  call void @llvm.dbg.value(metadata i32 undef, metadata !15530, metadata !DIExpression()), !dbg !15538
  ret void, !dbg !15581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !15582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15584, metadata !DIExpression()), !dbg !15585
  call void @llvm.dbg.value(metadata i32 %0, metadata !15586, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15601
  call void @llvm.dbg.value(metadata i32 1000, metadata !15589, metadata !DIExpression()), !dbg !15601
  call void @llvm.dbg.value(metadata i32 10000, metadata !15590, metadata !DIExpression()), !dbg !15601
  call void @llvm.dbg.value(metadata i8 1, metadata !15591, metadata !DIExpression()), !dbg !15601
  call void @llvm.dbg.value(metadata i1 true, metadata !15592, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15601
  call void @llvm.dbg.value(metadata i1 true, metadata !15593, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15601
  call void @llvm.dbg.value(metadata i8 0, metadata !15594, metadata !DIExpression()), !dbg !15601
  call void @llvm.dbg.value(metadata i1 true, metadata !15595, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15601
  call void @llvm.dbg.value(metadata i1 false, metadata !15596, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15601
  call void @llvm.dbg.value(metadata i64 0, metadata !15597, metadata !DIExpression()), !dbg !15601
  call void @llvm.dbg.value(metadata i64 0, metadata !15597, metadata !DIExpression()), !dbg !15601
  %2 = mul i32 %0, 10, !dbg !15603
  ret i32 %2, !dbg !15609
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15612, metadata !DIExpression()), !dbg !15614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !15615
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15617, !srcloc !15554
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15617
  call void @llvm.dbg.value(metadata i32 %3, metadata !15551, metadata !DIExpression()) #25, !dbg !15619
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !15619
  call void @llvm.dbg.value(metadata i32 %3, metadata !15545, metadata !DIExpression()) #25, !dbg !15615
  call void @llvm.dbg.value(metadata i32 %3, metadata !15613, metadata !DIExpression()), !dbg !15614
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15620
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15622
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15623
  br i1 %6, label %7, label %8, !dbg !15624

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15625
  call void @llvm.dbg.value(metadata i32 %3, metadata !15566, metadata !DIExpression()) #25, !dbg !15627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !15627
  call void @llvm.dbg.value(metadata i32 %3, metadata !15574, metadata !DIExpression()) #25, !dbg !15629
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15631, !srcloc !15580
  br label %24, !dbg !15632

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15633
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15634
  %10 = icmp eq i32 %9, 0, !dbg !15634
  br i1 %10, label %21, label %11, !dbg !15636

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15637
  br i1 %12, label %13, label %21, !dbg !15638

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15639
  %15 = icmp sgt i32 %14, %0, !dbg !15642
  br i1 %15, label %19, label %16, !dbg !15643

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15644
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15644
  call void @llvm.dbg.value(metadata i32 %18, metadata !15613, metadata !DIExpression()), !dbg !15614
  br label %22, !dbg !15646

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15647
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15647
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15649
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15614
  call void @llvm.dbg.value(metadata i32 %23, metadata !15613, metadata !DIExpression()), !dbg !15614
  call void @llvm.dbg.value(metadata i32 %23, metadata !15566, metadata !DIExpression()) #25, !dbg !15651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !15651
  call void @llvm.dbg.value(metadata i32 %23, metadata !15574, metadata !DIExpression()) #25, !dbg !15653
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !15655, !srcloc !15580
  br label %24, !dbg !15656

24:                                               ; preds = %22, %7
  ret void, !dbg !15656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !15657 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15661, metadata !DIExpression()), !dbg !15663
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !15664
  %3 = icmp eq i32 %2, 0, !dbg !15664
  br i1 %3, label %16, label %4, !dbg !15665

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15666
  br i1 %5, label %16, label %6, !dbg !15667

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15668
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15668
  %9 = load i8, i8* %8, align 2, !dbg !15668
  %10 = sext i8 %9 to i32, !dbg !15669
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15670
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.215(i32 noundef %10, i32 noundef %11) #26, !dbg !15671
  br i1 %12, label %16, label %13, !dbg !15672

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !15673
  %15 = xor i1 %14, true, !dbg !15674
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15663
  call void @llvm.dbg.value(metadata i1 %17, metadata !15662, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15663
  ret i1 %17, !dbg !15675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15676 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15680, metadata !DIExpression()), !dbg !15682
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15683
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15681, metadata !DIExpression()), !dbg !15682
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !15684
  br i1 %3, label %5, label %4, !dbg !15686

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !15687
  br label %5, !dbg !15689

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15680, metadata !DIExpression()), !dbg !15682
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15690
  ret i32 %6, !dbg !15691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15692 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15694, metadata !DIExpression()), !dbg !15696
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15697
  %3 = load i8, i8* %2, align 1, !dbg !15697
  call void @llvm.dbg.value(metadata i8 %3, metadata !15695, metadata !DIExpression()), !dbg !15696
  %4 = and i8 %3, 31, !dbg !15698
  %5 = icmp ne i8 %4, 0, !dbg !15699
  ret i1 %5, !dbg !15700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15703, metadata !DIExpression()), !dbg !15704
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15705
  br i1 %2, label %3, label %7, !dbg !15707

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15708, metadata !DIExpression()) #25, !dbg !15711
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15714
  %5 = load i8, i8* %4, align 1, !dbg !15715
  %6 = and i8 %5, 127, !dbg !15715
  store i8 %6, i8* %4, align 1, !dbg !15715
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15716, metadata !DIExpression()) #25, !dbg !15719
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15723
  br label %7, !dbg !15724

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15725, metadata !DIExpression()) #25, !dbg !15728
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15730
  %9 = load i8, i8* %8, align 1, !dbg !15731
  %10 = or i8 %9, -128, !dbg !15731
  store i8 %10, i8* %8, align 1, !dbg !15731
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15732, metadata !DIExpression()) #25, !dbg !15735
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15739, metadata !DIExpression()) #25, !dbg !15747
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15745, metadata !DIExpression()) #25, !dbg !15747
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15749
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15746, metadata !DIExpression()) #25, !dbg !15747
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15751
  br i1 %12, label %23, label %13, !dbg !15749

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15746, metadata !DIExpression()) #25, !dbg !15747
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15753
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15746, metadata !DIExpression()) #25, !dbg !15747
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !15754
  %17 = icmp sgt i32 %16, 0, !dbg !15757
  br i1 %17, label %18, label %20, !dbg !15758

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15759
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !15761
  br label %25, !dbg !15762

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !15751
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15746, metadata !DIExpression()) #25, !dbg !15747
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15751
  br i1 %22, label %23, label %13, !dbg !15749, !llvm.loop !15763

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15765
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !15766
  br label %25, !dbg !15767

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15768
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15769
  %28 = zext i1 %27 to i32, !dbg !15769
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !15770
  ret void, !dbg !15771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15772 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15774, metadata !DIExpression()), !dbg !15775
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !15776
  ret i1 %2, !dbg !15777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #9 !dbg !15778 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15780, metadata !DIExpression()), !dbg !15782
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15781, metadata !DIExpression()), !dbg !15782
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15783
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15784
  ret void, !dbg !15785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15786 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15790, metadata !DIExpression()), !dbg !15791
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.213(%struct._dnode* noundef %0) #26, !dbg !15792
  br i1 %2, label %6, label %3, !dbg !15792

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15793
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15793
  br label %6, !dbg !15792

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15792
  ret %struct._dnode* %7, !dbg !15794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15795 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15799, metadata !DIExpression()), !dbg !15803
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15800, metadata !DIExpression()), !dbg !15803
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15804
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15804
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15801, metadata !DIExpression()), !dbg !15803
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15805
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15806
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15807
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15808
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15809
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15810
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15811
  ret void, !dbg !15812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !15813 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15817, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15818, metadata !DIExpression()), !dbg !15819
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15820
  br i1 %3, label %6, label %4, !dbg !15821

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15822
  br label %6, !dbg !15821

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15821
  ret %struct._dnode* %7, !dbg !15823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15824 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15828, metadata !DIExpression()), !dbg !15831
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15829, metadata !DIExpression()), !dbg !15831
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15832
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15832
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15830, metadata !DIExpression()), !dbg !15831
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15833
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15834
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15835
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15836
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15837
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15838
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15839
  ret void, !dbg !15840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15843, metadata !DIExpression()), !dbg !15845
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15846
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15853, metadata !DIExpression()) #25, !dbg !15855
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15856
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15857
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15857
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15844, metadata !DIExpression()), !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15858, metadata !DIExpression()) #25, !dbg !15864
  call void @llvm.dbg.value(metadata i32 %0, metadata !15863, metadata !DIExpression()) #25, !dbg !15864
  %6 = icmp eq i32 %0, 0, !dbg !15867
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15869
  br i1 %6, label %8, label %15, !dbg !15870

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !15871
  br i1 %9, label %15, label %10, !dbg !15873

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !15874
  br i1 %11, label %15, label %12, !dbg !15876

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !15877
  %14 = icmp eq i32 %13, 0, !dbg !15877
  br i1 %14, label %18, label %15, !dbg !15879

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15880
  br i1 %16, label %18, label %17, !dbg !15883

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15884
  br label %18, !dbg !15886

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15869
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15869
  ret void, !dbg !15887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !15888 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15892, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15893, metadata !DIExpression()), !dbg !15895
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef %0) #26, !dbg !15896
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15894, metadata !DIExpression()), !dbg !15895
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15893, metadata !DIExpression()), !dbg !15895
  ret %struct.k_thread* %3, !dbg !15897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15898 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15900, metadata !DIExpression()), !dbg !15901
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15902
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15903
  %4 = xor i1 %3, true, !dbg !15904
  ret i1 %4, !dbg !15905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15906 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15908, metadata !DIExpression()), !dbg !15909
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15910
  %3 = load i16, i16* %2, align 2, !dbg !15910
  %4 = icmp ult i16 %3, 128, !dbg !15911
  %5 = zext i1 %4 to i32, !dbg !15911
  ret i32 %5, !dbg !15912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15913 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15919, metadata !DIExpression()), !dbg !15920
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15921
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15922
  %4 = xor i1 %3, true, !dbg !15923
  ret i1 %4, !dbg !15924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15925 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15931, metadata !DIExpression()), !dbg !15932
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15933
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15933
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15934
  ret i1 %4, !dbg !15935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !15936 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15938, metadata !DIExpression()), !dbg !15940
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15939, metadata !DIExpression()), !dbg !15940
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15941
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15941
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15942
  br i1 %5, label %9, label %6, !dbg !15943

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15944
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15944
  br label %9, !dbg !15943

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15943
  ret %struct._dnode* %10, !dbg !15945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.213(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15946 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15950, metadata !DIExpression()), !dbg !15951
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15952
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15952
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15953
  ret i1 %4, !dbg !15954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15955 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15959, metadata !DIExpression()), !dbg !15962
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15963
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15963
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15960, metadata !DIExpression()), !dbg !15962
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15964
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15964
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15961, metadata !DIExpression()), !dbg !15962
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15965
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15966
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15967
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15968
  tail call fastcc void @sys_dnode_init.214(%struct._dnode* noundef %0) #26, !dbg !15969
  ret void, !dbg !15970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.214(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !15971 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15973, metadata !DIExpression()), !dbg !15974
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15975
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15976
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15977
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15978
  ret void, !dbg !15979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !15980 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15984, metadata !DIExpression()), !dbg !15986
  call void @llvm.dbg.value(metadata i32 128, metadata !15985, metadata !DIExpression()), !dbg !15986
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15987
  %3 = load i8, i8* %2, align 1, !dbg !15987
  %4 = icmp slt i8 %3, 0, !dbg !15988
  ret i1 %4, !dbg !15989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.215(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15992, metadata !DIExpression()), !dbg !15994
  call void @llvm.dbg.value(metadata i32 %1, metadata !15993, metadata !DIExpression()), !dbg !15994
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.216(i32 noundef %0, i32 noundef %1) #26, !dbg !15995
  ret i1 %3, !dbg !15996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !15997 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15999, metadata !DIExpression()), !dbg !16000
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16001
  ret i1 %2, !dbg !16002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.216(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16005, metadata !DIExpression()), !dbg !16007
  call void @llvm.dbg.value(metadata i32 %1, metadata !16006, metadata !DIExpression()), !dbg !16007
  %3 = icmp slt i32 %0, %1, !dbg !16008
  ret i1 %3, !dbg !16009
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16010 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16012, metadata !DIExpression()), !dbg !16016
  call void @llvm.dbg.value(metadata i32 0, metadata !16013, metadata !DIExpression()), !dbg !16017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16018
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16020, !srcloc !15554
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16020
  call void @llvm.dbg.value(metadata i32 %3, metadata !15551, metadata !DIExpression()) #25, !dbg !16022
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16022
  call void @llvm.dbg.value(metadata i32 %3, metadata !15545, metadata !DIExpression()) #25, !dbg !16018
  call void @llvm.dbg.value(metadata i32 %3, metadata !16015, metadata !DIExpression()), !dbg !16017
  call void @llvm.dbg.value(metadata i32 undef, metadata !16013, metadata !DIExpression()), !dbg !16017
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16023
  call void @llvm.dbg.value(metadata i32 %3, metadata !15566, metadata !DIExpression()) #25, !dbg !16028
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16028
  call void @llvm.dbg.value(metadata i32 %3, metadata !15574, metadata !DIExpression()) #25, !dbg !16030
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16032, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 1, metadata !16013, metadata !DIExpression()), !dbg !16017
  call void @llvm.dbg.value(metadata i32 undef, metadata !16013, metadata !DIExpression()), !dbg !16017
  ret void, !dbg !16033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16034 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16036, metadata !DIExpression()), !dbg !16037
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16038
  br i1 %2, label %24, label %3, !dbg !16040

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16041
  br i1 %4, label %5, label %24, !dbg !16042

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15725, metadata !DIExpression()) #25, !dbg !16043
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16046
  %7 = load i8, i8* %6, align 1, !dbg !16047
  %8 = or i8 %7, -128, !dbg !16047
  store i8 %8, i8* %6, align 1, !dbg !16047
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15732, metadata !DIExpression()) #25, !dbg !16048
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15739, metadata !DIExpression()) #25, !dbg !16050
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15745, metadata !DIExpression()) #25, !dbg !16050
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16052
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15746, metadata !DIExpression()) #25, !dbg !16050
  %10 = icmp eq %struct._dnode* %9, null, !dbg !16053
  br i1 %10, label %21, label %11, !dbg !16052

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15746, metadata !DIExpression()) #25, !dbg !16050
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !16054
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15746, metadata !DIExpression()) #25, !dbg !16050
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !16055
  %15 = icmp sgt i32 %14, 0, !dbg !16056
  br i1 %15, label %16, label %18, !dbg !16057

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16058
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !16059
  br label %23, !dbg !16060

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !16053
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15746, metadata !DIExpression()) #25, !dbg !16050
  %20 = icmp eq %struct._dnode* %19, null, !dbg !16053
  br i1 %20, label %21, label %11, !dbg !16052, !llvm.loop !16061

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16063
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !16064
  br label %23, !dbg !16065

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16066
  br label %24, !dbg !16067

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !16068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16071, metadata !DIExpression()), !dbg !16072
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !16073
  br i1 %2, label %6, label %3, !dbg !16074

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !16075
  %5 = xor i1 %4, true, !dbg !16074
  br label %6, !dbg !16074

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16076
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16077 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16079, metadata !DIExpression()), !dbg !16083
  call void @llvm.dbg.value(metadata i32 0, metadata !16080, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16085
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16087, !srcloc !15554
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16087
  call void @llvm.dbg.value(metadata i32 %3, metadata !15551, metadata !DIExpression()) #25, !dbg !16089
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16089
  call void @llvm.dbg.value(metadata i32 %3, metadata !15545, metadata !DIExpression()) #25, !dbg !16085
  call void @llvm.dbg.value(metadata i32 %3, metadata !16082, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.value(metadata i32 undef, metadata !16080, metadata !DIExpression()), !dbg !16084
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !16090
  call void @llvm.dbg.value(metadata i32 %3, metadata !15566, metadata !DIExpression()) #25, !dbg !16093
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16093
  call void @llvm.dbg.value(metadata i32 %3, metadata !15574, metadata !DIExpression()) #25, !dbg !16095
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16097, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 1, metadata !16080, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.value(metadata i32 undef, metadata !16080, metadata !DIExpression()), !dbg !16084
  ret void, !dbg !16098
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16099 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16101, metadata !DIExpression()), !dbg !16103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16104
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16106, !srcloc !15554
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16106
  call void @llvm.dbg.value(metadata i32 %3, metadata !15551, metadata !DIExpression()) #25, !dbg !16108
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16108
  call void @llvm.dbg.value(metadata i32 %3, metadata !15545, metadata !DIExpression()) #25, !dbg !16104
  call void @llvm.dbg.value(metadata i32 %3, metadata !16102, metadata !DIExpression()), !dbg !16103
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !16109
  br i1 %4, label %5, label %6, !dbg !16111

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15566, metadata !DIExpression()) #25, !dbg !16112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16112
  call void @llvm.dbg.value(metadata i32 %3, metadata !15574, metadata !DIExpression()) #25, !dbg !16115
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16117, !srcloc !15580
  br label %8, !dbg !16118

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.221(%struct.k_thread* noundef %0) #26, !dbg !16119
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16120
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16121
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16121
  br label %8, !dbg !16122

8:                                                ; preds = %6, %5
  ret void, !dbg !16122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16123 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16125, metadata !DIExpression()), !dbg !16126
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16127
  %3 = load i8, i8* %2, align 1, !dbg !16127
  %4 = and i8 %3, 4, !dbg !16128
  %5 = icmp eq i8 %4, 0, !dbg !16129
  ret i1 %5, !dbg !16130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.221(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16131 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16133, metadata !DIExpression()), !dbg !16134
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16135
  %3 = load i8, i8* %2, align 1, !dbg !16136
  %4 = and i8 %3, -5, !dbg !16136
  store i8 %4, i8* %2, align 1, !dbg !16136
  ret void, !dbg !16137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16138 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16141, metadata !DIExpression()), !dbg !16142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16140, metadata !DIExpression()), !dbg !16142
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16143
  br i1 %4, label %5, label %9, !dbg !16145

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16146
  br i1 %6, label %7, label %9, !dbg !16147

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16148, metadata !DIExpression()) #25, !dbg !16154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16153, metadata !DIExpression()) #25, !dbg !16154
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16157
  br label %10, !dbg !16158

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15566, metadata !DIExpression()) #25, !dbg !16159
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16159
  call void @llvm.dbg.value(metadata i32 %3, metadata !15574, metadata !DIExpression()) #25, !dbg !16162
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16164, !srcloc !15580
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16170, metadata !DIExpression()), !dbg !16171
  call void @llvm.dbg.value(metadata i32 %0, metadata !16172, metadata !DIExpression()), !dbg !16177
  %2 = icmp eq i32 %0, 0, !dbg !16179
  br i1 %2, label %3, label %6, !dbg !16180

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16181, !srcloc !16188
  call void @llvm.dbg.value(metadata i32 %4, metadata !16184, metadata !DIExpression()) #25, !dbg !16189
  %5 = icmp eq i32 %4, 0, !dbg !16190
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16171
  ret i1 %7, !dbg !16191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !16192 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16195
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16194, metadata !DIExpression()), !dbg !16196
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16197
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16198
  ret i1 %3, !dbg !16199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16202, metadata !DIExpression()), !dbg !16204
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16205
  call void @llvm.dbg.value(metadata i32 %2, metadata !16203, metadata !DIExpression()), !dbg !16204
  ret i32 %2, !dbg !16206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16207 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16209, metadata !DIExpression()), !dbg !16213
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16214
  call void @llvm.dbg.value(metadata i32 0, metadata !16210, metadata !DIExpression()), !dbg !16215
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16216
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16218, !srcloc !15554
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16218
  call void @llvm.dbg.value(metadata i32 %4, metadata !15551, metadata !DIExpression()) #25, !dbg !16220
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16220
  call void @llvm.dbg.value(metadata i32 %4, metadata !15545, metadata !DIExpression()) #25, !dbg !16216
  call void @llvm.dbg.value(metadata i32 %4, metadata !16212, metadata !DIExpression()), !dbg !16215
  call void @llvm.dbg.value(metadata i32 undef, metadata !16210, metadata !DIExpression()), !dbg !16215
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16221
  br i1 %5, label %6, label %10, !dbg !16225

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15708, metadata !DIExpression()) #25, !dbg !16226
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16229
  %8 = load i8, i8* %7, align 1, !dbg !16230
  %9 = and i8 %8, 127, !dbg !16230
  store i8 %9, i8* %7, align 1, !dbg !16230
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15716, metadata !DIExpression()) #25, !dbg !16231
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16233
  br label %10, !dbg !16234

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16235
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16236
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16237
  %13 = zext i1 %12 to i32, !dbg !16237
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16238
  call void @llvm.dbg.value(metadata i32 %4, metadata !15566, metadata !DIExpression()) #25, !dbg !16239
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16239
  call void @llvm.dbg.value(metadata i32 %4, metadata !15574, metadata !DIExpression()) #25, !dbg !16241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16243, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 1, metadata !16210, metadata !DIExpression()), !dbg !16215
  call void @llvm.dbg.value(metadata i32 undef, metadata !16210, metadata !DIExpression()), !dbg !16215
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16244
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16246
  br i1 %15, label %16, label %17, !dbg !16247

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16248
  br label %17, !dbg !16250

17:                                               ; preds = %16, %10
  ret void, !dbg !16251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16252 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16254, metadata !DIExpression()), !dbg !16255
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16256
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16257
  ret i32 %3, !dbg !16258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16259 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16261, metadata !DIExpression()), !dbg !16262
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16263
  %3 = load i8, i8* %2, align 1, !dbg !16264
  %4 = or i8 %3, 16, !dbg !16264
  store i8 %4, i8* %2, align 1, !dbg !16264
  ret void, !dbg !16265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16266 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16267, !srcloc !15554
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16267
  call void @llvm.dbg.value(metadata i32 %2, metadata !15551, metadata !DIExpression()) #25, !dbg !16269
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16269
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16270
  ret void, !dbg !16271
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16274, metadata !DIExpression()), !dbg !16275
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16276
  br i1 %2, label %3, label %5, !dbg !16278

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16279
  br label %6, !dbg !16281

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15574, metadata !DIExpression()) #25, !dbg !16282
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !16285, !srcloc !15580
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16286
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16287 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16289, metadata !DIExpression()), !dbg !16291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16292
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16294, !srcloc !15554
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16294
  call void @llvm.dbg.value(metadata i32 %3, metadata !15551, metadata !DIExpression()) #25, !dbg !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16296
  call void @llvm.dbg.value(metadata i32 %3, metadata !15545, metadata !DIExpression()) #25, !dbg !16292
  call void @llvm.dbg.value(metadata i32 %3, metadata !16290, metadata !DIExpression()), !dbg !16291
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16297
  br i1 %4, label %6, label %5, !dbg !16299

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15566, metadata !DIExpression()) #25, !dbg !16300
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16300
  call void @llvm.dbg.value(metadata i32 %3, metadata !15574, metadata !DIExpression()) #25, !dbg !16303
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16305, !srcloc !15580
  br label %8, !dbg !16306

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16307
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16308
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16309
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16309
  br label %8, !dbg !16310

8:                                                ; preds = %6, %5
  ret void, !dbg !16310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16311 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16313, metadata !DIExpression()), !dbg !16314
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16315
  %3 = load i8, i8* %2, align 1, !dbg !16315
  %4 = and i8 %3, 16, !dbg !16316
  %5 = icmp ne i8 %4, 0, !dbg !16317
  ret i1 %5, !dbg !16318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16319 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16321, metadata !DIExpression()), !dbg !16322
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16323
  %3 = load i8, i8* %2, align 1, !dbg !16324
  %4 = and i8 %3, -17, !dbg !16324
  store i8 %4, i8* %2, align 1, !dbg !16324
  ret void, !dbg !16325
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16326 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16336, metadata !DIExpression()), !dbg !16340
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16334, metadata !DIExpression()), !dbg !16340
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16335, metadata !DIExpression()), !dbg !16340
  call void @llvm.dbg.value(metadata i32 0, metadata !16337, metadata !DIExpression()), !dbg !16341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16342
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16344, !srcloc !15554
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16344
  call void @llvm.dbg.value(metadata i32 %5, metadata !15551, metadata !DIExpression()) #25, !dbg !16346
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16346
  call void @llvm.dbg.value(metadata i32 %5, metadata !15545, metadata !DIExpression()) #25, !dbg !16342
  call void @llvm.dbg.value(metadata i32 %5, metadata !16339, metadata !DIExpression()), !dbg !16341
  call void @llvm.dbg.value(metadata i32 undef, metadata !16337, metadata !DIExpression()), !dbg !16341
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !16347
  call void @llvm.dbg.value(metadata i32 %5, metadata !15566, metadata !DIExpression()) #25, !dbg !16350
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16350
  call void @llvm.dbg.value(metadata i32 %5, metadata !15574, metadata !DIExpression()) #25, !dbg !16352
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !16354, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 1, metadata !16337, metadata !DIExpression()), !dbg !16341
  call void @llvm.dbg.value(metadata i32 undef, metadata !16337, metadata !DIExpression()), !dbg !16341
  ret void, !dbg !16355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16356 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16360, metadata !DIExpression()), !dbg !16361
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16358, metadata !DIExpression()), !dbg !16361
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16359, metadata !DIExpression()), !dbg !16361
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !16362
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16363
  ret void, !dbg !16364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !16365 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16369, metadata !DIExpression()), !dbg !16371
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16370, metadata !DIExpression()), !dbg !16371
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16372
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16373
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !16374
  br i1 %3, label %21, label %4, !dbg !16376

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16377
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !16379
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !16380
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15739, metadata !DIExpression()) #25, !dbg !16381
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15745, metadata !DIExpression()) #25, !dbg !16381
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef nonnull %6) #27, !dbg !16383
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15746, metadata !DIExpression()) #25, !dbg !16381
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16384
  br i1 %8, label %19, label %9, !dbg !16383

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15746, metadata !DIExpression()) #25, !dbg !16381
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16385
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15746, metadata !DIExpression()) #25, !dbg !16381
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !16386
  %13 = icmp sgt i32 %12, 0, !dbg !16387
  br i1 %13, label %14, label %16, !dbg !16388

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16389
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !16390
  br label %21, !dbg !16391

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !16384
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15746, metadata !DIExpression()) #25, !dbg !16381
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16384
  br i1 %18, label %19, label %9, !dbg !16383, !llvm.loop !16392

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16394
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !16395
  br label %21, !dbg !16396

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16398 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16403, metadata !DIExpression()), !dbg !16404
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16402, metadata !DIExpression()), !dbg !16404
  %4 = icmp eq i64 %3, -1, !dbg !16405
  br i1 %4, label %6, label %5, !dbg !16407

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.224(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16408
  br label %6, !dbg !16410

6:                                                ; preds = %5, %2
  ret void, !dbg !16411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.224(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16412 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16415, metadata !DIExpression()), !dbg !16416
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16414, metadata !DIExpression()), !dbg !16416
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16417
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16418
  ret void, !dbg !16419
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16420 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16422, metadata !DIExpression()), !dbg !16430
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16431
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16431
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16423, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata i32 0, metadata !16424, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16433
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16435, !srcloc !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15551, metadata !DIExpression()) #25, !dbg !16437
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16437
  call void @llvm.dbg.value(metadata i32 undef, metadata !15545, metadata !DIExpression()) #25, !dbg !16433
  call void @llvm.dbg.value(metadata i32 undef, metadata !16426, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.value(metadata i32 undef, metadata !16424, metadata !DIExpression()), !dbg !16432
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16438
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16439
  %7 = load i8, i8* %6, align 1, !dbg !16439
  %8 = and i8 %7, 40, !dbg !16440
  %9 = icmp eq i8 %8, 0, !dbg !16440
  call void @llvm.dbg.value(metadata i1 %9, metadata !16427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16441
  br i1 %9, label %10, label %17, !dbg !16442

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16443
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !16443
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !16443
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !16447
  br i1 %14, label %16, label %15, !dbg !16448

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16449
  br label %16, !dbg !16451

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.221(%struct.k_thread* noundef nonnull %3) #26, !dbg !16452
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16453
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16454
  br label %17, !dbg !16455

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16435
  call void @llvm.dbg.value(metadata i32 %18, metadata !15551, metadata !DIExpression()) #25, !dbg !16437
  call void @llvm.dbg.value(metadata i32 %18, metadata !15545, metadata !DIExpression()) #25, !dbg !16433
  call void @llvm.dbg.value(metadata i32 %18, metadata !16426, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.value(metadata i32 undef, metadata !15566, metadata !DIExpression()) #25, !dbg !16456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16456
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()) #25, !dbg !16458
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16460, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 1, metadata !16424, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.value(metadata i32 undef, metadata !16424, metadata !DIExpression()), !dbg !16432
  ret void, !dbg !16461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16462 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16464, metadata !DIExpression()), !dbg !16465
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16466
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16467
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16468
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !16469
  ret void, !dbg !16470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16473, metadata !DIExpression()), !dbg !16474
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16475
  %3 = load i8, i8* %2, align 1, !dbg !16476
  %4 = and i8 %3, -3, !dbg !16476
  store i8 %4, i8* %2, align 1, !dbg !16476
  ret void, !dbg !16477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16478 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16480, metadata !DIExpression()), !dbg !16481
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16482
  br i1 %2, label %3, label %7, !dbg !16484

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15708, metadata !DIExpression()) #25, !dbg !16485
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16488
  %5 = load i8, i8* %4, align 1, !dbg !16489
  %6 = and i8 %5, 127, !dbg !16489
  store i8 %6, i8* %4, align 1, !dbg !16489
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15716, metadata !DIExpression()) #25, !dbg !16490
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16492
  br label %7, !dbg !16493

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16494
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16495
  %10 = zext i1 %9 to i32, !dbg !16495
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16496
  ret void, !dbg !16497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16498 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16500, metadata !DIExpression()), !dbg !16501
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16502
  %3 = load i8, i8* %2, align 1, !dbg !16503
  %4 = or i8 %3, 2, !dbg !16503
  store i8 %4, i8* %2, align 1, !dbg !16503
  ret void, !dbg !16504
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !16505 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16507, metadata !DIExpression()), !dbg !16511
  call void @llvm.dbg.value(metadata i32 0, metadata !16508, metadata !DIExpression()), !dbg !16512
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16513
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16515, !srcloc !15554
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16515
  call void @llvm.dbg.value(metadata i32 %3, metadata !15551, metadata !DIExpression()) #25, !dbg !16517
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16517
  call void @llvm.dbg.value(metadata i32 %3, metadata !15545, metadata !DIExpression()) #25, !dbg !16513
  call void @llvm.dbg.value(metadata i32 %3, metadata !16510, metadata !DIExpression()), !dbg !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16508, metadata !DIExpression()), !dbg !16512
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16518
  call void @llvm.dbg.value(metadata i32 %3, metadata !15566, metadata !DIExpression()) #25, !dbg !16521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16521
  call void @llvm.dbg.value(metadata i32 %3, metadata !15574, metadata !DIExpression()) #25, !dbg !16523
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16525, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 1, metadata !16508, metadata !DIExpression()), !dbg !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16508, metadata !DIExpression()), !dbg !16512
  ret void, !dbg !16526
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16527 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16533, metadata !DIExpression()), !dbg !16538
  call void @llvm.dbg.value(metadata i32 %0, metadata !16531, metadata !DIExpression()), !dbg !16538
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16532, metadata !DIExpression()), !dbg !16538
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16539
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !16540
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16541
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16542
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16543
  call void @llvm.dbg.value(metadata i32 %6, metadata !16534, metadata !DIExpression()), !dbg !16538
  call void @llvm.dbg.value(metadata i32 0, metadata !16535, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16545
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16547, !srcloc !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15551, metadata !DIExpression()) #25, !dbg !16549
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16549
  call void @llvm.dbg.value(metadata i32 undef, metadata !15545, metadata !DIExpression()) #25, !dbg !16545
  call void @llvm.dbg.value(metadata i32 undef, metadata !16537, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata i32 undef, metadata !16535, metadata !DIExpression()), !dbg !16544
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16550
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16554
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16555
  br i1 %10, label %11, label %12, !dbg !16556

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16557
  br label %12, !dbg !16559

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16547
  call void @llvm.dbg.value(metadata i32 %13, metadata !15551, metadata !DIExpression()) #25, !dbg !16549
  call void @llvm.dbg.value(metadata i32 %13, metadata !15545, metadata !DIExpression()) #25, !dbg !16545
  call void @llvm.dbg.value(metadata i32 %13, metadata !16537, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata i32 undef, metadata !15566, metadata !DIExpression()) #25, !dbg !16560
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16560
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()) #25, !dbg !16562
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !16564, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 1, metadata !16535, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata i32 undef, metadata !16535, metadata !DIExpression()), !dbg !16544
  ret i32 %6, !dbg !16565
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16566 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16571, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i64 undef, metadata !16573, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16570, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16572, metadata !DIExpression()), !dbg !16574
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16575
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16576
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16577
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16579, !srcloc !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15551, metadata !DIExpression()) #25, !dbg !16581
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16581
  call void @llvm.dbg.value(metadata i32 undef, metadata !15545, metadata !DIExpression()) #25, !dbg !16577
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16582
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !16583
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16148, metadata !DIExpression()) #25, !dbg !16584
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16153, metadata !DIExpression()) #25, !dbg !16584
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !16586
  ret i32 %9, !dbg !16587
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16588 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16592, metadata !DIExpression()), !dbg !16597
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16593, metadata !DIExpression()), !dbg !16597
  call void @llvm.dbg.value(metadata i32 0, metadata !16594, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16599
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16601, !srcloc !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15551, metadata !DIExpression()) #25, !dbg !16603
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16603
  call void @llvm.dbg.value(metadata i32 undef, metadata !15545, metadata !DIExpression()) #25, !dbg !16599
  call void @llvm.dbg.value(metadata i32 undef, metadata !16596, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16593, metadata !DIExpression()), !dbg !16597
  call void @llvm.dbg.value(metadata i32 undef, metadata !16594, metadata !DIExpression()), !dbg !16598
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16604
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16593, metadata !DIExpression()), !dbg !16597
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16607
  br i1 %5, label %7, label %6, !dbg !16609

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16610
  br label %7, !dbg !16612

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16601
  call void @llvm.dbg.value(metadata i32 %8, metadata !15551, metadata !DIExpression()) #25, !dbg !16603
  call void @llvm.dbg.value(metadata i32 %8, metadata !15545, metadata !DIExpression()) #25, !dbg !16599
  call void @llvm.dbg.value(metadata i32 %8, metadata !16596, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.value(metadata i32 undef, metadata !15566, metadata !DIExpression()) #25, !dbg !16613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16613
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()) #25, !dbg !16615
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16617, !srcloc !15580
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16593, metadata !DIExpression()), !dbg !16597
  call void @llvm.dbg.value(metadata i32 undef, metadata !16594, metadata !DIExpression()), !dbg !16598
  ret %struct.k_thread* %4, !dbg !16618
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16619 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16621, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16622, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i32 0, metadata !16623, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16628
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16630, !srcloc !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15551, metadata !DIExpression()) #25, !dbg !16632
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16632
  call void @llvm.dbg.value(metadata i32 undef, metadata !15545, metadata !DIExpression()) #25, !dbg !16628
  call void @llvm.dbg.value(metadata i32 undef, metadata !16625, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16622, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i32 undef, metadata !16623, metadata !DIExpression()), !dbg !16627
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16633
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16622, metadata !DIExpression()), !dbg !16626
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16636
  br i1 %5, label %8, label %6, !dbg !16638

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16639
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16641
  br label %8, !dbg !16642

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16630
  call void @llvm.dbg.value(metadata i32 %9, metadata !15551, metadata !DIExpression()) #25, !dbg !16632
  call void @llvm.dbg.value(metadata i32 %9, metadata !15545, metadata !DIExpression()) #25, !dbg !16628
  call void @llvm.dbg.value(metadata i32 %9, metadata !16625, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.value(metadata i32 undef, metadata !15566, metadata !DIExpression()) #25, !dbg !16643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16643
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()) #25, !dbg !16645
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16647, !srcloc !15580
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16622, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i32 undef, metadata !16623, metadata !DIExpression()), !dbg !16627
  ret %struct.k_thread* %4, !dbg !16648
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16651, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16507, metadata !DIExpression()) #25, !dbg !16653
  call void @llvm.dbg.value(metadata i32 0, metadata !16508, metadata !DIExpression()) #25, !dbg !16655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16656
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16658, !srcloc !15554
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16658
  call void @llvm.dbg.value(metadata i32 %3, metadata !15551, metadata !DIExpression()) #25, !dbg !16660
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16660
  call void @llvm.dbg.value(metadata i32 %3, metadata !15545, metadata !DIExpression()) #25, !dbg !16656
  call void @llvm.dbg.value(metadata i32 %3, metadata !16510, metadata !DIExpression()) #25, !dbg !16655
  call void @llvm.dbg.value(metadata i32 undef, metadata !16508, metadata !DIExpression()) #25, !dbg !16655
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16661
  call void @llvm.dbg.value(metadata i32 %3, metadata !15566, metadata !DIExpression()) #25, !dbg !16662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16662
  call void @llvm.dbg.value(metadata i32 %3, metadata !15574, metadata !DIExpression()) #25, !dbg !16664
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16666, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 1, metadata !16508, metadata !DIExpression()) #25, !dbg !16655
  call void @llvm.dbg.value(metadata i32 undef, metadata !16508, metadata !DIExpression()) #25, !dbg !16655
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16667
  ret void, !dbg !16668
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16669 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16671, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i32 %1, metadata !16672, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i8 0, metadata !16673, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i32 0, metadata !16674, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16679
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16681, !srcloc !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15551, metadata !DIExpression()) #25, !dbg !16683
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16683
  call void @llvm.dbg.value(metadata i32 undef, metadata !15545, metadata !DIExpression()) #25, !dbg !16679
  call void @llvm.dbg.value(metadata i32 undef, metadata !16676, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.value(metadata i8 poison, metadata !16673, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16674, metadata !DIExpression()), !dbg !16678
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16684
  call void @llvm.dbg.value(metadata i1 %6, metadata !16673, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16677
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16687

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15708, metadata !DIExpression()) #25, !dbg !16688
  %11 = load i8, i8* %4, align 1, !dbg !16694
  %12 = and i8 %11, 127, !dbg !16694
  store i8 %12, i8* %4, align 1, !dbg !16694
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15716, metadata !DIExpression()) #25, !dbg !16695
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16697
  store i8 %9, i8* %8, align 2, !dbg !16698
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15725, metadata !DIExpression()) #25, !dbg !16699
  %13 = load i8, i8* %4, align 1, !dbg !16701
  %14 = or i8 %13, -128, !dbg !16701
  store i8 %14, i8* %4, align 1, !dbg !16701
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15732, metadata !DIExpression()) #25, !dbg !16702
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15739, metadata !DIExpression()) #25, !dbg !16704
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15745, metadata !DIExpression()) #25, !dbg !16704
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16706
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15746, metadata !DIExpression()) #25, !dbg !16704
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16707
  br i1 %16, label %26, label %17, !dbg !16706

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15746, metadata !DIExpression()) #25, !dbg !16704
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16708
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15746, metadata !DIExpression()) #25, !dbg !16704
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !16709
  %21 = icmp sgt i32 %20, 0, !dbg !16710
  br i1 %21, label %22, label %23, !dbg !16711

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !16712
  br label %27, !dbg !16713

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !16707
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15746, metadata !DIExpression()) #25, !dbg !16704
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16707
  br i1 %25, label %26, label %17, !dbg !16706, !llvm.loop !16714

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !16716
  br label %27, !dbg !16717

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16718
  br label %29, !dbg !16719

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16720
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16681
  call void @llvm.dbg.value(metadata i32 %30, metadata !15551, metadata !DIExpression()) #25, !dbg !16683
  call void @llvm.dbg.value(metadata i32 %30, metadata !15545, metadata !DIExpression()) #25, !dbg !16679
  call void @llvm.dbg.value(metadata i32 %30, metadata !16676, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.value(metadata i32 undef, metadata !15566, metadata !DIExpression()) #25, !dbg !16722
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16722
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()) #25, !dbg !16724
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !16726, !srcloc !15580
  call void @llvm.dbg.value(metadata i8 poison, metadata !16673, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16674, metadata !DIExpression()), !dbg !16678
  ret i1 %6, !dbg !16727
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16728 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16732, metadata !DIExpression()), !dbg !16735
  call void @llvm.dbg.value(metadata i32 %1, metadata !16733, metadata !DIExpression()), !dbg !16735
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16736
  call void @llvm.dbg.value(metadata i1 %3, metadata !16734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16735
  br i1 %3, label %4, label %12, !dbg !16737

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16739
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16740
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16740
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16740
  %9 = load i8, i8* %8, align 1, !dbg !16740
  %10 = icmp eq i8 %9, 0, !dbg !16741
  br i1 %10, label %11, label %12, !dbg !16742

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16743
  br label %12, !dbg !16745

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16747 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16749, metadata !DIExpression()), !dbg !16752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16753
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16755, !srcloc !15554
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16755
  call void @llvm.dbg.value(metadata i32 %2, metadata !15551, metadata !DIExpression()) #25, !dbg !16757
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16757
  call void @llvm.dbg.value(metadata i32 %2, metadata !15545, metadata !DIExpression()) #25, !dbg !16753
  call void @llvm.dbg.value(metadata i32 %2, metadata !16751, metadata !DIExpression()), !dbg !16752
  call void @llvm.dbg.value(metadata i32 undef, metadata !16749, metadata !DIExpression()), !dbg !16752
  tail call fastcc void @z_sched_lock() #26, !dbg !16758
  call void @llvm.dbg.value(metadata i32 %2, metadata !15566, metadata !DIExpression()) #25, !dbg !16761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16761
  call void @llvm.dbg.value(metadata i32 %2, metadata !15574, metadata !DIExpression()) #25, !dbg !16763
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16765, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 1, metadata !16749, metadata !DIExpression()), !dbg !16752
  call void @llvm.dbg.value(metadata i32 undef, metadata !16749, metadata !DIExpression()), !dbg !16752
  ret void, !dbg !16766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16767 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16768
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16769
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16769
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16769
  %5 = load i8, i8* %4, align 1, !dbg !16770
  %6 = add i8 %5, -1, !dbg !16770
  store i8 %6, i8* %4, align 1, !dbg !16770
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16771, !srcloc !16773
  ret void, !dbg !16774
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16775 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16777, metadata !DIExpression()), !dbg !16780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !16781
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16783, !srcloc !15554
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16783
  call void @llvm.dbg.value(metadata i32 %2, metadata !15551, metadata !DIExpression()) #25, !dbg !16785
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !16785
  call void @llvm.dbg.value(metadata i32 %2, metadata !15545, metadata !DIExpression()) #25, !dbg !16781
  call void @llvm.dbg.value(metadata i32 %2, metadata !16779, metadata !DIExpression()), !dbg !16780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()), !dbg !16780
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16786
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16789
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16789
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16789
  %7 = load i8, i8* %6, align 1, !dbg !16790
  %8 = add i8 %7, 1, !dbg !16790
  store i8 %8, i8* %6, align 1, !dbg !16790
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16791
  call void @llvm.dbg.value(metadata i32 %2, metadata !15566, metadata !DIExpression()) #25, !dbg !16792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !16792
  call void @llvm.dbg.value(metadata i32 %2, metadata !15574, metadata !DIExpression()) #25, !dbg !16794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16796, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 1, metadata !16777, metadata !DIExpression()), !dbg !16780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16777, metadata !DIExpression()), !dbg !16780
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16797
  ret void, !dbg !16798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !16799 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16800
  ret %struct.k_thread* %1, !dbg !16801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !16802 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16806, metadata !DIExpression()), !dbg !16811
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16807, metadata !DIExpression()), !dbg !16811
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16812
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16808, metadata !DIExpression()), !dbg !16811
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16813
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16809, metadata !DIExpression()), !dbg !16811
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16814
  call void @llvm.dbg.value(metadata i32 %5, metadata !16810, metadata !DIExpression()), !dbg !16811
  %6 = icmp sgt i32 %5, 0, !dbg !16815
  br i1 %6, label %17, label %7, !dbg !16817

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16818
  br i1 %8, label %17, label %9, !dbg !16820

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16821
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16821
  %12 = load i32, i32* %11, align 8, !dbg !16821
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16823
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16823
  %15 = load i32, i32* %14, align 8, !dbg !16823
  %16 = icmp ult i32 %12, %15, !dbg !16824
  br label %17, !dbg !16825

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16826
  ret i1 %18, !dbg !16827
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16828 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16845, metadata !DIExpression()), !dbg !16860
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16846, metadata !DIExpression()), !dbg !16860
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16861
  %5 = load i32, i32* %4, align 4, !dbg !16862
  %6 = add nsw i32 %5, 1, !dbg !16862
  store i32 %6, i32* %4, align 4, !dbg !16862
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16863
  store i32 %5, i32* %7, align 8, !dbg !16864
  %8 = load i32, i32* %4, align 4, !dbg !16865
  %9 = icmp eq i32 %8, 0, !dbg !16866
  br i1 %9, label %10, label %32, !dbg !16867

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16868
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !16868
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16848, metadata !DIExpression()), !dbg !16868
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16868
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16868
  %14 = load i32, i32* %13, align 4, !dbg !16868
  %15 = shl i32 %14, 2, !dbg !16868
  %16 = alloca i8, i32 %15, align 8, !dbg !16868
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16868
  store i8* %16, i8** %17, align 4, !dbg !16868
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16868
  %19 = alloca i8, i32 %14, align 8, !dbg !16868
  store i8* %19, i8** %18, align 4, !dbg !16868
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16868
  store i32 -1, i32* %20, align 4, !dbg !16868
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !16869
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16857, metadata !DIExpression()), !dbg !16870
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16847, metadata !DIExpression()), !dbg !16860
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16871
  br i1 %22, label %23, label %24, !dbg !16868

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !16871
  br label %32, !dbg !16872

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16847, metadata !DIExpression()), !dbg !16860
  %26 = load i32, i32* %4, align 4, !dbg !16873
  %27 = add nsw i32 %26, 1, !dbg !16873
  store i32 %27, i32* %4, align 4, !dbg !16873
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16875
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16875
  store i32 %26, i32* %29, align 8, !dbg !16876
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !16869
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16857, metadata !DIExpression()), !dbg !16870
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16847, metadata !DIExpression()), !dbg !16860
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16871
  br i1 %31, label %23, label %24, !dbg !16868, !llvm.loop !16877

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16879
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16880
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !16881
  ret void, !dbg !16882
}

; Function Attrs: optsize
declare !dbg !16883 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16888 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16891 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16893, metadata !DIExpression()), !dbg !16895
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16894, metadata !DIExpression()), !dbg !16895
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16896
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16897
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !16898
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16899
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16899
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16901
  br i1 %7, label %8, label %10, !dbg !16902

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16903
  store i32 0, i32* %9, align 4, !dbg !16905
  br label %10, !dbg !16906

10:                                               ; preds = %8, %2
  ret void, !dbg !16907
}

; Function Attrs: optsize
declare !dbg !16908 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16909 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16913, metadata !DIExpression()), !dbg !16916
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16914, metadata !DIExpression()), !dbg !16916
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16917
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16918
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16915, metadata !DIExpression()), !dbg !16916
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16914, metadata !DIExpression()), !dbg !16916
  ret %struct.k_thread* %4, !dbg !16919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16920 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16924, metadata !DIExpression()), !dbg !16925
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !16926
  ret %struct.rbnode* %2, !dbg !16927
}

; Function Attrs: optsize
declare !dbg !16928 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !16931 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16941, metadata !DIExpression()), !dbg !16945
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16946
  %3 = load i32, i32* %2, align 4, !dbg !16946
  %4 = icmp eq i32 %3, 0, !dbg !16948
  br i1 %4, label %10, label %5, !dbg !16949

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16942, metadata !DIExpression()), !dbg !16945
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16950, !range !4964
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16951
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16943, metadata !DIExpression()), !dbg !16945
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef %7) #26, !dbg !16952
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16944, metadata !DIExpression()), !dbg !16945
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16942, metadata !DIExpression()), !dbg !16945
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16945
  ret %struct.k_thread* %11, !dbg !16953
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16954 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16958, metadata !DIExpression()), !dbg !16961
  call void @llvm.dbg.value(metadata i32 0, metadata !16959, metadata !DIExpression()), !dbg !16961
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.237(%struct._wait_q_t* noundef %0) #26, !dbg !16962
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16960, metadata !DIExpression()), !dbg !16961
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16963
  br i1 %3, label %8, label %4, !dbg !16964

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16965
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16967
  call void @llvm.dbg.value(metadata i32 1, metadata !16959, metadata !DIExpression()), !dbg !16961
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.237(%struct._wait_q_t* noundef %0) #26, !dbg !16962
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16960, metadata !DIExpression()), !dbg !16961
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16963
  br i1 %7, label %8, label %4, !dbg !16964, !llvm.loop !16968

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16961
  ret i32 %9, !dbg !16970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.237(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !16971 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16973, metadata !DIExpression()), !dbg !16974
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16975
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef %2) #26, !dbg !16976
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16977
  ret %struct.k_thread* %4, !dbg !16978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #8 !dbg !16979 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16988, metadata !DIExpression()), !dbg !16989
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16990
  tail call fastcc void @sys_dlist_init.238(%struct._dnode* noundef nonnull %2) #26, !dbg !16991
  ret void, !dbg !16992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.238(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16993 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16997, metadata !DIExpression()), !dbg !16998
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16999
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17000
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17001
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17002
  ret void, !dbg !17003
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17004 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !17005
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !17006
  ret void, !dbg !17007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !17008 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17013, metadata !DIExpression()), !dbg !17014
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17015
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17015
  %4 = load i8, i8* %3, align 2, !dbg !17015
  %5 = sext i8 %4 to i32, !dbg !17016
  ret i32 %5, !dbg !17017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17018 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17022, metadata !DIExpression()), !dbg !17025
  call void @llvm.dbg.value(metadata i32 %1, metadata !17023, metadata !DIExpression()), !dbg !17025
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17024, metadata !DIExpression()), !dbg !17025
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17026
  ret void, !dbg !17027
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17028 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !17029
  br i1 %1, label %8, label %2, !dbg !17030

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17031
  br i1 %3, label %8, label %4, !dbg !17032

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17033
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !17034
  %7 = xor i1 %6, true, !dbg !17032
  br label %8, !dbg !17032

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !17036 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17037, !range !7601
  %2 = icmp eq i8 %1, 0, !dbg !17037
  ret i1 %2, !dbg !17038
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17039 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !17042
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17044, !srcloc !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15551, metadata !DIExpression()) #25, !dbg !17046
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !17046
  call void @llvm.dbg.value(metadata i32 undef, metadata !15545, metadata !DIExpression()) #25, !dbg !17042
  call void @llvm.dbg.value(metadata i32 undef, metadata !17041, metadata !DIExpression()), !dbg !17047
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17048
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15708, metadata !DIExpression()) #25, !dbg !17051
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !17053
  %4 = load i8, i8* %3, align 1, !dbg !17054
  %5 = and i8 %4, 127, !dbg !17054
  store i8 %5, i8* %3, align 1, !dbg !17054
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15716, metadata !DIExpression()) #25, !dbg !17055
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !17057
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17058
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15725, metadata !DIExpression()) #25, !dbg !17059
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !17061
  %8 = load i8, i8* %7, align 1, !dbg !17062
  %9 = or i8 %8, -128, !dbg !17062
  store i8 %9, i8* %7, align 1, !dbg !17062
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15732, metadata !DIExpression()) #25, !dbg !17063
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15739, metadata !DIExpression()) #25, !dbg !17065
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15745, metadata !DIExpression()) #25, !dbg !17065
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17067
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15746, metadata !DIExpression()) #25, !dbg !17065
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17068
  br i1 %11, label %22, label %12, !dbg !17067

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15746, metadata !DIExpression()) #25, !dbg !17065
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17069
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15746, metadata !DIExpression()) #25, !dbg !17065
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !17070
  %16 = icmp sgt i32 %15, 0, !dbg !17071
  br i1 %16, label %17, label %19, !dbg !17072

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17073
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !17074
  br label %24, !dbg !17075

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !17068
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15746, metadata !DIExpression()) #25, !dbg !17065
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17068
  br i1 %21, label %22, label %12, !dbg !17067, !llvm.loop !17076

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17078
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !17079
  br label %24, !dbg !17080

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !17044
  call void @llvm.dbg.value(metadata i32 %25, metadata !15551, metadata !DIExpression()) #25, !dbg !17046
  call void @llvm.dbg.value(metadata i32 %25, metadata !15545, metadata !DIExpression()) #25, !dbg !17042
  call void @llvm.dbg.value(metadata i32 %25, metadata !17041, metadata !DIExpression()), !dbg !17047
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17081
  call void @llvm.dbg.value(metadata i32 undef, metadata !16148, metadata !DIExpression()) #25, !dbg !17082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16153, metadata !DIExpression()) #25, !dbg !17082
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !17084
  ret void, !dbg !17085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17086 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17090, metadata !DIExpression()), !dbg !17093
  %3 = icmp eq i64 %2, -1, !dbg !17094
  br i1 %3, label %4, label %6, !dbg !17096

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17097
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !17099
  br label %11, !dbg !17100

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17091, metadata !DIExpression()), !dbg !17093
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !17101
  %8 = sext i32 %7 to i64, !dbg !17101
  call void @llvm.dbg.value(metadata i64 %8, metadata !17091, metadata !DIExpression()), !dbg !17093
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64.241(i64 noundef %8) #26, !dbg !17102
  %10 = trunc i64 %9 to i32, !dbg !17102
  call void @llvm.dbg.value(metadata i32 %10, metadata !17092, metadata !DIExpression()), !dbg !17093
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !17093
  ret i32 %12, !dbg !17103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17108, metadata !DIExpression()), !dbg !17109
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17110, !srcloc !17112
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !17113
  ret void, !dbg !17114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17115 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17119, metadata !DIExpression()), !dbg !17123
  %2 = icmp eq i64 %0, 0, !dbg !17124
  br i1 %2, label %3, label %4, !dbg !17126

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17127
  br label %29, !dbg !17129

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17121, metadata !DIExpression()), !dbg !17123
  %5 = icmp sgt i64 %0, -3, !dbg !17130
  br i1 %5, label %6, label %10, !dbg !17132

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17133
  %8 = trunc i64 %0 to i32, !dbg !17135
  %9 = add i32 %7, %8, !dbg !17135
  call void @llvm.dbg.value(metadata i32 %9, metadata !17120, metadata !DIExpression()), !dbg !17123
  br label %13, !dbg !17136

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17137
  %12 = sub i32 -2, %11, !dbg !17137
  call void @llvm.dbg.value(metadata i32 %12, metadata !17120, metadata !DIExpression()), !dbg !17123
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17139
  call void @llvm.dbg.value(metadata i32 %14, metadata !17120, metadata !DIExpression()), !dbg !17123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !17140
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17142, !srcloc !15554
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17142
  call void @llvm.dbg.value(metadata i32 %16, metadata !15551, metadata !DIExpression()) #25, !dbg !17144
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !17144
  call void @llvm.dbg.value(metadata i32 %16, metadata !15545, metadata !DIExpression()) #25, !dbg !17140
  call void @llvm.dbg.value(metadata i32 %16, metadata !17122, metadata !DIExpression()), !dbg !17123
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17145
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17146
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17147
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17148
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17149
  tail call fastcc void @z_add_thread_timeout.224(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17149
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17150
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17151
  call void @llvm.dbg.value(metadata i32 %16, metadata !16148, metadata !DIExpression()) #25, !dbg !17152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16153, metadata !DIExpression()) #25, !dbg !17152
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !17154
  %22 = zext i32 %14 to i64, !dbg !17155
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17156
  %24 = zext i32 %23 to i64, !dbg !17156
  %25 = sub nsw i64 %22, %24, !dbg !17157
  call void @llvm.dbg.value(metadata i64 %25, metadata !17119, metadata !DIExpression()), !dbg !17123
  %26 = icmp sgt i64 %25, 0, !dbg !17158
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17158
  %28 = trunc i64 %27 to i32, !dbg !17158
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17123
  ret i32 %30, !dbg !17159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.241(i64 noundef %0) unnamed_addr #5 !dbg !17160 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17162, metadata !DIExpression()), !dbg !17163
  call void @llvm.dbg.value(metadata i64 %0, metadata !15586, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i32 10000, metadata !15589, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i32 1000, metadata !15590, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i8 1, metadata !15591, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i1 false, metadata !15592, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17164
  call void @llvm.dbg.value(metadata i1 false, metadata !15593, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17164
  call void @llvm.dbg.value(metadata i8 0, metadata !15594, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i1 false, metadata !15595, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17164
  call void @llvm.dbg.value(metadata i1 true, metadata !15596, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17164
  call void @llvm.dbg.value(metadata i64 0, metadata !15597, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i64 0, metadata !15597, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata i64 %0, metadata !15586, metadata !DIExpression()), !dbg !17164
  %2 = udiv i64 %0, 10, !dbg !17166
  ret i64 %2, !dbg !17170
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17171 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17172, !srcloc !17174
  tail call void @z_impl_k_yield() #26, !dbg !17175
  ret void, !dbg !17176
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17181, metadata !DIExpression()), !dbg !17183
  %2 = sext i32 %0 to i64, !dbg !17184
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17185
  call void @llvm.dbg.value(metadata i64 %3, metadata !17182, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17183
  %4 = shl i64 %3, 32, !dbg !17186
  %5 = ashr exact i64 %4, 32, !dbg !17186
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17187
  call void @llvm.dbg.value(metadata i32 %6, metadata !17182, metadata !DIExpression()), !dbg !17183
  %7 = sext i32 %6 to i64, !dbg !17188
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17189
  %9 = trunc i64 %8 to i32, !dbg !17189
  ret i32 %9, !dbg !17190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17191 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17193, metadata !DIExpression()), !dbg !17194
  call void @llvm.dbg.value(metadata i64 %0, metadata !15586, metadata !DIExpression()), !dbg !17195
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15589, metadata !DIExpression()), !dbg !17195
  call void @llvm.dbg.value(metadata i32 10000, metadata !15590, metadata !DIExpression()), !dbg !17195
  call void @llvm.dbg.value(metadata i8 1, metadata !15591, metadata !DIExpression()), !dbg !17195
  call void @llvm.dbg.value(metadata i1 false, metadata !15592, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17195
  call void @llvm.dbg.value(metadata i1 true, metadata !15593, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17195
  call void @llvm.dbg.value(metadata i8 0, metadata !15594, metadata !DIExpression()), !dbg !17195
  call void @llvm.dbg.value(metadata i1 false, metadata !15595, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17195
  call void @llvm.dbg.value(metadata i1 true, metadata !15596, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17195
  call void @llvm.dbg.value(metadata i64 0, metadata !15597, metadata !DIExpression()), !dbg !17195
  call void @llvm.dbg.value(metadata i64 0, metadata !15597, metadata !DIExpression()), !dbg !17195
  %2 = add i64 %0, 99, !dbg !17197
  call void @llvm.dbg.value(metadata i64 %2, metadata !15586, metadata !DIExpression()), !dbg !17195
  %3 = udiv i64 %2, 100, !dbg !17198
  ret i64 %3, !dbg !17199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17200 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17202, metadata !DIExpression()), !dbg !17203
  call void @llvm.dbg.value(metadata i64 %0, metadata !15586, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata i32 10000, metadata !15589, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15590, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata i8 1, metadata !15591, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata i1 false, metadata !15592, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17204
  call void @llvm.dbg.value(metadata i1 false, metadata !15593, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17204
  call void @llvm.dbg.value(metadata i8 0, metadata !15594, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata i1 true, metadata !15595, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17204
  call void @llvm.dbg.value(metadata i1 false, metadata !15596, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17204
  call void @llvm.dbg.value(metadata i64 0, metadata !15597, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.value(metadata i64 0, metadata !15597, metadata !DIExpression()), !dbg !17204
  %2 = mul i64 %0, 100, !dbg !17206
  ret i64 %2, !dbg !17208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17211, metadata !DIExpression()), !dbg !17212
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17213
  br i1 %2, label %14, label %3, !dbg !17215

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17216
  %5 = icmp slt i32 %4, 0, !dbg !17218
  br i1 %5, label %6, label %10, !dbg !17219

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17220
  %8 = load i8, i8* %7, align 1, !dbg !17220
  %9 = icmp eq i8 %8, 16, !dbg !17223
  br i1 %9, label %10, label %14, !dbg !17224

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17225
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17226
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17227, !srcloc !16188
  call void @llvm.dbg.value(metadata i32 %11, metadata !16184, metadata !DIExpression()) #25, !dbg !17231
  %12 = icmp eq i32 %11, 0, !dbg !17232
  br i1 %12, label %13, label %14, !dbg !17233

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17234
  br label %14, !dbg !17236

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17238 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17240, metadata !DIExpression()), !dbg !17241
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17242
  %3 = load i8, i8* %2, align 1, !dbg !17242
  %4 = and i8 %3, 2, !dbg !17243
  %5 = icmp ne i8 %4, 0, !dbg !17244
  ret i1 %5, !dbg !17245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !17246 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17251
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17250, metadata !DIExpression()), !dbg !17252
  ret %struct.k_thread* %1, !dbg !17253
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17254 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17255, !srcloc !16188
  call void @llvm.dbg.value(metadata i32 %1, metadata !16184, metadata !DIExpression()) #25, !dbg !17258
  %2 = icmp eq i32 %1, 0, !dbg !17259
  br i1 %2, label %3, label %8, !dbg !17260

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17261
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17262
  %6 = icmp ne i32 %5, 0, !dbg !17260
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17264 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17266, metadata !DIExpression()), !dbg !17268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !17269
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17271, !srcloc !15554
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17271
  call void @llvm.dbg.value(metadata i32 %3, metadata !15551, metadata !DIExpression()) #25, !dbg !17273
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !17273
  call void @llvm.dbg.value(metadata i32 %3, metadata !15545, metadata !DIExpression()) #25, !dbg !17269
  call void @llvm.dbg.value(metadata i32 %3, metadata !17267, metadata !DIExpression()), !dbg !17268
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17274
  %5 = load i8, i8* %4, align 4, !dbg !17274
  %6 = and i8 %5, 1, !dbg !17276
  %7 = icmp eq i8 %6, 0, !dbg !17277
  br i1 %7, label %9, label %8, !dbg !17278

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15566, metadata !DIExpression()) #25, !dbg !17279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !17279
  call void @llvm.dbg.value(metadata i32 %3, metadata !15574, metadata !DIExpression()) #25, !dbg !17282
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17284, !srcloc !15580
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !17285, !srcloc !17287
  br label %24, !dbg !17288

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17289
  %11 = load i8, i8* %10, align 1, !dbg !17289
  %12 = and i8 %11, 8, !dbg !17291
  %13 = icmp eq i8 %12, 0, !dbg !17292
  br i1 %13, label %15, label %14, !dbg !17293

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15566, metadata !DIExpression()) #25, !dbg !17294
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !17294
  call void @llvm.dbg.value(metadata i32 %3, metadata !15574, metadata !DIExpression()) #25, !dbg !17297
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17299, !srcloc !15580
  br label %24, !dbg !17300

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17301
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17302
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17304
  br i1 %17, label %18, label %23, !dbg !17305

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17306, !srcloc !16188
  call void @llvm.dbg.value(metadata i32 %19, metadata !16184, metadata !DIExpression()) #25, !dbg !17309
  %20 = icmp eq i32 %19, 0, !dbg !17310
  br i1 %20, label %21, label %23, !dbg !17311

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16148, metadata !DIExpression()) #25, !dbg !17312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16153, metadata !DIExpression()) #25, !dbg !17312
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17315
  br label %23, !dbg !17316

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15566, metadata !DIExpression()) #25, !dbg !17317
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !17317
  call void @llvm.dbg.value(metadata i32 %3, metadata !15574, metadata !DIExpression()) #25, !dbg !17319
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17321, !srcloc !15580
  br label %24, !dbg !17322

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17323 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17325, metadata !DIExpression()), !dbg !17326
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17327
  %3 = load i8, i8* %2, align 1, !dbg !17327
  %4 = and i8 %3, 8, !dbg !17329
  %5 = icmp eq i8 %4, 0, !dbg !17330
  br i1 %5, label %6, label %20, !dbg !17331

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17332
  %8 = or i8 %7, 8, !dbg !17332
  store i8 %8, i8* %2, align 1, !dbg !17332
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17334
  br i1 %9, label %10, label %12, !dbg !17336

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15708, metadata !DIExpression()) #25, !dbg !17337
  %11 = and i8 %8, 95, !dbg !17340
  store i8 %11, i8* %2, align 1, !dbg !17340
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15716, metadata !DIExpression()) #25, !dbg !17341
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17343
  br label %12, !dbg !17344

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17345
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !17345
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !17347
  br i1 %15, label %17, label %16, !dbg !17348

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17349
  br label %17, !dbg !17351

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17352
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17353
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !17354
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17355
  br label %20, !dbg !17356

20:                                               ; preds = %17, %1
  ret void, !dbg !17357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !17358 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17362, metadata !DIExpression()), !dbg !17364
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.237(%struct._wait_q_t* noundef %0) #26, !dbg !17365
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17363, metadata !DIExpression()), !dbg !17364
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17366
  br i1 %3, label %10, label %4, !dbg !17367

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17368
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17370
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17371, metadata !DIExpression()), !dbg !17377
  call void @llvm.dbg.value(metadata i32 0, metadata !17376, metadata !DIExpression()), !dbg !17377
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17379
  store i32 0, i32* %7, align 4, !dbg !17380
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17381
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.237(%struct._wait_q_t* noundef %0) #26, !dbg !17365
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17363, metadata !DIExpression()), !dbg !17364
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17366
  br i1 %9, label %10, label %4, !dbg !17367, !llvm.loop !17382

10:                                               ; preds = %4, %1
  ret void, !dbg !17384
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17385 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17390, metadata !DIExpression()), !dbg !17393
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17389, metadata !DIExpression()), !dbg !17393
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !17394
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17396, !srcloc !15554
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17396
  call void @llvm.dbg.value(metadata i32 %4, metadata !15551, metadata !DIExpression()) #25, !dbg !17398
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !17398
  call void @llvm.dbg.value(metadata i32 %4, metadata !15545, metadata !DIExpression()) #25, !dbg !17394
  call void @llvm.dbg.value(metadata i32 %4, metadata !17391, metadata !DIExpression()), !dbg !17393
  call void @llvm.dbg.value(metadata i32 0, metadata !17392, metadata !DIExpression()), !dbg !17393
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17399
  %6 = load i8, i8* %5, align 1, !dbg !17399
  %7 = and i8 %6, 8, !dbg !17401
  %8 = icmp eq i8 %7, 0, !dbg !17402
  br i1 %8, label %9, label %24, !dbg !17403

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17390, metadata !DIExpression()), !dbg !17393
  %11 = icmp eq i64 %10, 0, !dbg !17404
  br i1 %11, label %24, label %12, !dbg !17406

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17407
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17409
  br i1 %14, label %24, label %15, !dbg !17410

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17411
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !17411
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17412
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !17413
  br i1 %19, label %24, label %20, !dbg !17414

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17415
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #26, !dbg !17417
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17418
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17419
  call void @llvm.dbg.value(metadata i32 %4, metadata !16148, metadata !DIExpression()) #25, !dbg !17420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16153, metadata !DIExpression()) #25, !dbg !17420
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !17422
  call void @llvm.dbg.value(metadata i32 %23, metadata !17392, metadata !DIExpression()), !dbg !17393
  br label %26, !dbg !17423

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17424
  call void @llvm.dbg.value(metadata i32 %25, metadata !17392, metadata !DIExpression()), !dbg !17393
  call void @llvm.dbg.value(metadata i32 %4, metadata !15566, metadata !DIExpression()) #25, !dbg !17425
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !17425
  call void @llvm.dbg.value(metadata i32 %4, metadata !15574, metadata !DIExpression()) #25, !dbg !17427
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17429, !srcloc !15580
  br label %26, !dbg !17430

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17393
  ret i32 %27, !dbg !17431
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17432 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17436, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i32 %1, metadata !17437, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i8* %2, metadata !17438, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i8 0, metadata !17440, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i32 0, metadata !17441, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15539, metadata !DIExpression()) #25, !dbg !17446
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17448, !srcloc !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15551, metadata !DIExpression()) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i32 undef, metadata !15545, metadata !DIExpression()) #25, !dbg !17446
  call void @llvm.dbg.value(metadata i32 undef, metadata !17443, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata i8 poison, metadata !17440, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i32 undef, metadata !17441, metadata !DIExpression()), !dbg !17445
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17451
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17439, metadata !DIExpression()), !dbg !17444
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17454
  br i1 %7, label %12, label %8, !dbg !17456

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17457, metadata !DIExpression()), !dbg !17464
  call void @llvm.dbg.value(metadata i32 %1, metadata !17462, metadata !DIExpression()), !dbg !17464
  call void @llvm.dbg.value(metadata i8* %2, metadata !17463, metadata !DIExpression()), !dbg !17464
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17371, metadata !DIExpression()), !dbg !17467
  call void @llvm.dbg.value(metadata i32 %1, metadata !17376, metadata !DIExpression()), !dbg !17467
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17469
  store i32 %1, i32* %9, align 4, !dbg !17470
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17471
  store i8* %2, i8** %10, align 4, !dbg !17472
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17473
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17474
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17475
  call void @llvm.dbg.value(metadata i8 1, metadata !17440, metadata !DIExpression()), !dbg !17444
  br label %12, !dbg !17476

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17448
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17448
  call void @llvm.dbg.value(metadata i32 %14, metadata !15551, metadata !DIExpression()) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i32 %14, metadata !15545, metadata !DIExpression()) #25, !dbg !17446
  call void @llvm.dbg.value(metadata i32 %14, metadata !17443, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata i8 poison, metadata !17440, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i32 undef, metadata !15566, metadata !DIExpression()) #25, !dbg !17477
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15571, metadata !DIExpression()) #25, !dbg !17477
  call void @llvm.dbg.value(metadata i32 undef, metadata !15574, metadata !DIExpression()) #25, !dbg !17479
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17481, !srcloc !15580
  call void @llvm.dbg.value(metadata i32 undef, metadata !17441, metadata !DIExpression()), !dbg !17445
  ret i1 %13, !dbg !17482
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17483 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17489, metadata !DIExpression()), !dbg !17494
  call void @llvm.dbg.value(metadata i64 undef, metadata !17491, metadata !DIExpression()), !dbg !17494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17488, metadata !DIExpression()), !dbg !17494
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17490, metadata !DIExpression()), !dbg !17494
  call void @llvm.dbg.value(metadata i8** %4, metadata !17492, metadata !DIExpression()), !dbg !17494
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !17495
  call void @llvm.dbg.value(metadata i32 %6, metadata !17493, metadata !DIExpression()), !dbg !17494
  %7 = icmp eq i8** %4, null, !dbg !17496
  br i1 %7, label %12, label %8, !dbg !17498

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17499
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17501
  %11 = load i8*, i8** %10, align 4, !dbg !17501
  store i8* %11, i8** %4, align 4, !dbg !17502
  br label %12, !dbg !17503

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17504
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17505 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !17507
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !17508
  ret void, !dbg !17509
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17510 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17520, metadata !DIExpression()), !dbg !17537
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17518, metadata !DIExpression()), !dbg !17537
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17519, metadata !DIExpression()), !dbg !17537
  %5 = icmp eq i64 %4, -1, !dbg !17538
  br i1 %5, label %55, label %6, !dbg !17540

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17541
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17542
  call void @llvm.dbg.value(metadata i32 0, metadata !17521, metadata !DIExpression()), !dbg !17543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17544, metadata !DIExpression()) #25, !dbg !17551
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17553, !srcloc !17559
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17553
  call void @llvm.dbg.value(metadata i32 %9, metadata !17556, metadata !DIExpression()) #25, !dbg !17560
  call void @llvm.dbg.value(metadata i32 undef, metadata !17557, metadata !DIExpression()) #25, !dbg !17560
  call void @llvm.dbg.value(metadata i32 %9, metadata !17550, metadata !DIExpression()) #25, !dbg !17551
  call void @llvm.dbg.value(metadata i32 %9, metadata !17527, metadata !DIExpression()), !dbg !17543
  call void @llvm.dbg.value(metadata i32 undef, metadata !17521, metadata !DIExpression()), !dbg !17543
  %10 = icmp slt i64 %4, -1, !dbg !17561
  br i1 %10, label %11, label %17, !dbg !17562

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17563
  %13 = add i64 %4, %12, !dbg !17564
  %14 = sub i64 -2, %13, !dbg !17564
  call void @llvm.dbg.value(metadata i64 %14, metadata !17531, metadata !DIExpression()), !dbg !17565
  %15 = icmp sgt i64 %14, 1, !dbg !17566
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17566
  br label %22, !dbg !17567

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17568
  %19 = tail call fastcc i32 @elapsed.250() #26, !dbg !17570
  %20 = sext i32 %19 to i64, !dbg !17570
  %21 = add nsw i64 %18, %20, !dbg !17571
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17572
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17573
  store i64 %23, i64* %24, align 8, !dbg !17574
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17575
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17528, metadata !DIExpression()), !dbg !17577
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17578
  br i1 %26, label %42, label %27, !dbg !17578

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17579
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17528, metadata !DIExpression()), !dbg !17577
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17583
  %31 = load i64, i64* %30, align 8, !dbg !17583
  %32 = icmp slt i64 %28, %31, !dbg !17584
  br i1 %32, label %33, label %38, !dbg !17585

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17583
  %35 = sub nsw i64 %31, %28, !dbg !17586
  store i64 %35, i64* %34, align 8, !dbg !17586
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17588
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17589
  tail call fastcc void @sys_dlist_insert.251(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17590
  br label %44, !dbg !17591

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17592
  store i64 %39, i64* %24, align 8, !dbg !17592
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17593
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17528, metadata !DIExpression()), !dbg !17577
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17578
  br i1 %41, label %42, label %27, !dbg !17578, !llvm.loop !17594

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17596
  tail call fastcc void @sys_dlist_append.252(%struct._dnode* noundef %43) #26, !dbg !17599
  br label %44, !dbg !17600

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17601
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17602
  br i1 %46, label %47, label %54, !dbg !17603

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17604
  call void @llvm.dbg.value(metadata i32 %48, metadata !17534, metadata !DIExpression()), !dbg !17605
  %49 = icmp ne i32 %48, 0, !dbg !17606
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17608
  br i1 %52, label %54, label %53, !dbg !17608

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !17609
  br label %54, !dbg !17611

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17612, metadata !DIExpression()) #25, !dbg !17618
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17617, metadata !DIExpression()) #25, !dbg !17618
  call void @llvm.dbg.value(metadata i32 %9, metadata !17620, metadata !DIExpression()) #25, !dbg !17623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17625, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 undef, metadata !17521, metadata !DIExpression()), !dbg !17543
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.250() unnamed_addr #1 !dbg !17628 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17631
  %2 = icmp eq i32 %1, 0, !dbg !17632
  br i1 %2, label %3, label %5, !dbg !17631

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !17633
  br label %5, !dbg !17631

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17631
  ret i32 %6, !dbg !17634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !17635 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.255() #26, !dbg !17641
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17639, metadata !DIExpression()), !dbg !17642
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17643
  ret %struct._timeout* %2, !dbg !17644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.251(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17645 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17649, metadata !DIExpression()), !dbg !17653
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17650, metadata !DIExpression()), !dbg !17653
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17654
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17654
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17651, metadata !DIExpression()), !dbg !17653
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17655
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17656
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17657
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17658
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17659
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17660
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17661
  ret void, !dbg !17662
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !17663 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17667, metadata !DIExpression()), !dbg !17669
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17670
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.253(%struct._dnode* noundef %2) #26, !dbg !17671
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17668, metadata !DIExpression()), !dbg !17669
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17672
  ret %struct._timeout* %4, !dbg !17673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.252(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17674 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17679, metadata !DIExpression()), !dbg !17682
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17680, metadata !DIExpression()), !dbg !17682
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17683
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17681, metadata !DIExpression()), !dbg !17682
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17684
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17685
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17686
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17687
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17688
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17689
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17690
  ret void, !dbg !17691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17692 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !17697
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17694, metadata !DIExpression()), !dbg !17698
  %2 = tail call fastcc i32 @elapsed.250() #26, !dbg !17699
  call void @llvm.dbg.value(metadata i32 %2, metadata !17695, metadata !DIExpression()), !dbg !17698
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17700
  br i1 %3, label %14, label %4, !dbg !17702

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17703
  %6 = load i64, i64* %5, align 8, !dbg !17703
  %7 = sext i32 %2 to i64, !dbg !17704
  %8 = sub nsw i64 %6, %7, !dbg !17705
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17706
  br i1 %9, label %14, label %10, !dbg !17707

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17708
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17708
  %13 = trunc i64 %12 to i32, !dbg !17708
  call void @llvm.dbg.value(metadata i32 %13, metadata !17696, metadata !DIExpression()), !dbg !17698
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17710
  call void @llvm.dbg.value(metadata i32 %15, metadata !17696, metadata !DIExpression()), !dbg !17698
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17711
  %17 = icmp ne i32 %16, 0, !dbg !17713
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17714
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17714
  call void @llvm.dbg.value(metadata i32 %20, metadata !17696, metadata !DIExpression()), !dbg !17698
  ret i32 %20, !dbg !17715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.253(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !17716 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17720, metadata !DIExpression()), !dbg !17722
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17721, metadata !DIExpression()), !dbg !17722
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17723
  br i1 %2, label %5, label %3, !dbg !17724

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.254(%struct._dnode* noundef nonnull %0) #26, !dbg !17725
  br label %5, !dbg !17724

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17724
  ret %struct._dnode* %6, !dbg !17726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.254(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !17727 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17729, metadata !DIExpression()), !dbg !17731
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17730, metadata !DIExpression()), !dbg !17731
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17732
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17733
  br i1 %3, label %7, label %4, !dbg !17734

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17735
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17735
  br label %7, !dbg !17734

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17734
  ret %struct._dnode* %8, !dbg !17736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.255() unnamed_addr #4 !dbg !17737 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17741, metadata !DIExpression()), !dbg !17742
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.256() #26, !dbg !17743
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17743
  ret %struct._dnode* %3, !dbg !17744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.256() unnamed_addr #4 !dbg !17745 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17749, metadata !DIExpression()), !dbg !17750
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17751
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17752
  ret i1 %2, !dbg !17753
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17754 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17758, metadata !DIExpression()), !dbg !17763
  call void @llvm.dbg.value(metadata i32 -22, metadata !17759, metadata !DIExpression()), !dbg !17763
  call void @llvm.dbg.value(metadata i32 0, metadata !17760, metadata !DIExpression()), !dbg !17764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17544, metadata !DIExpression()) #25, !dbg !17765
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17767, !srcloc !17559
  call void @llvm.dbg.value(metadata i32 undef, metadata !17556, metadata !DIExpression()) #25, !dbg !17769
  call void @llvm.dbg.value(metadata i32 undef, metadata !17557, metadata !DIExpression()) #25, !dbg !17769
  call void @llvm.dbg.value(metadata i32 undef, metadata !17550, metadata !DIExpression()) #25, !dbg !17765
  call void @llvm.dbg.value(metadata i32 undef, metadata !17762, metadata !DIExpression()), !dbg !17764
  call void @llvm.dbg.value(metadata i32 -22, metadata !17759, metadata !DIExpression()), !dbg !17763
  call void @llvm.dbg.value(metadata i32 undef, metadata !17760, metadata !DIExpression()), !dbg !17764
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17759, metadata !DIExpression()), !dbg !17763
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.259(%struct._dnode* noundef %3) #26, !dbg !17770
  br i1 %4, label %5, label %6, !dbg !17774

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17775
  call void @llvm.dbg.value(metadata i32 0, metadata !17759, metadata !DIExpression()), !dbg !17763
  br label %6, !dbg !17777

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17763
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17767
  call void @llvm.dbg.value(metadata i32 %8, metadata !17556, metadata !DIExpression()) #25, !dbg !17769
  call void @llvm.dbg.value(metadata i32 %8, metadata !17550, metadata !DIExpression()) #25, !dbg !17765
  call void @llvm.dbg.value(metadata i32 %8, metadata !17762, metadata !DIExpression()), !dbg !17764
  call void @llvm.dbg.value(metadata i32 %7, metadata !17759, metadata !DIExpression()), !dbg !17763
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !17778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17617, metadata !DIExpression()) #25, !dbg !17778
  call void @llvm.dbg.value(metadata i32 undef, metadata !17620, metadata !DIExpression()) #25, !dbg !17780
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17782, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 undef, metadata !17760, metadata !DIExpression()), !dbg !17764
  ret i32 %7, !dbg !17783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.259(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17784 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17790, metadata !DIExpression()), !dbg !17791
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17792
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17792
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17793
  ret i1 %4, !dbg !17794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17795 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17797, metadata !DIExpression()), !dbg !17798
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17799
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17801
  br i1 %3, label %10, label %4, !dbg !17802

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17803
  %6 = load i64, i64* %5, align 8, !dbg !17803
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17805
  %8 = load i64, i64* %7, align 8, !dbg !17806
  %9 = add nsw i64 %8, %6, !dbg !17806
  store i64 %9, i64* %7, align 8, !dbg !17806
  br label %10, !dbg !17807

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17808
  tail call fastcc void @sys_dlist_remove.260(%struct._dnode* noundef %11) #26, !dbg !17809
  ret void, !dbg !17810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.260(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17811 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17815, metadata !DIExpression()), !dbg !17818
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17819
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17819
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17816, metadata !DIExpression()), !dbg !17818
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17820
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17820
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17817, metadata !DIExpression()), !dbg !17818
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17821
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17822
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17823
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17824
  tail call fastcc void @sys_dnode_init.261(%struct._dnode* noundef %0) #26, !dbg !17825
  ret void, !dbg !17826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.261(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !17827 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17829, metadata !DIExpression()), !dbg !17830
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17831
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17832
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17833
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17834
  ret void, !dbg !17835
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17836 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17842, metadata !DIExpression()), !dbg !17847
  call void @llvm.dbg.value(metadata i64 0, metadata !17843, metadata !DIExpression()), !dbg !17847
  call void @llvm.dbg.value(metadata i32 0, metadata !17844, metadata !DIExpression()), !dbg !17848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17544, metadata !DIExpression()) #25, !dbg !17849
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17851, !srcloc !17559
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17851
  call void @llvm.dbg.value(metadata i32 %3, metadata !17556, metadata !DIExpression()) #25, !dbg !17853
  call void @llvm.dbg.value(metadata i32 undef, metadata !17557, metadata !DIExpression()) #25, !dbg !17853
  call void @llvm.dbg.value(metadata i32 %3, metadata !17550, metadata !DIExpression()) #25, !dbg !17849
  call void @llvm.dbg.value(metadata i32 %3, metadata !17846, metadata !DIExpression()), !dbg !17848
  call void @llvm.dbg.value(metadata i64 0, metadata !17843, metadata !DIExpression()), !dbg !17847
  call void @llvm.dbg.value(metadata i32 undef, metadata !17844, metadata !DIExpression()), !dbg !17848
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17854
  call void @llvm.dbg.value(metadata i64 %4, metadata !17843, metadata !DIExpression()), !dbg !17847
  call void @llvm.dbg.value(metadata i32 %3, metadata !17612, metadata !DIExpression()) #25, !dbg !17857
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17617, metadata !DIExpression()) #25, !dbg !17857
  call void @llvm.dbg.value(metadata i32 %3, metadata !17620, metadata !DIExpression()) #25, !dbg !17859
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17861, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 undef, metadata !17844, metadata !DIExpression()), !dbg !17848
  ret i64 %4, !dbg !17862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17863 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17865, metadata !DIExpression()), !dbg !17869
  call void @llvm.dbg.value(metadata i64 0, metadata !17866, metadata !DIExpression()), !dbg !17869
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.262(%struct._timeout* noundef %0) #26, !dbg !17870
  br i1 %2, label %21, label %3, !dbg !17872

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17873
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17867, metadata !DIExpression()), !dbg !17874
  call void @llvm.dbg.value(metadata i64 0, metadata !17866, metadata !DIExpression()), !dbg !17869
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17875
  br i1 %5, label %16, label %6, !dbg !17877

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17867, metadata !DIExpression()), !dbg !17874
  call void @llvm.dbg.value(metadata i64 %8, metadata !17866, metadata !DIExpression()), !dbg !17869
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17878
  %10 = load i64, i64* %9, align 8, !dbg !17878
  %11 = add nsw i64 %10, %8, !dbg !17880
  call void @llvm.dbg.value(metadata i64 %11, metadata !17866, metadata !DIExpression()), !dbg !17869
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17881
  br i1 %12, label %16, label %13, !dbg !17883

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17884
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17867, metadata !DIExpression()), !dbg !17874
  call void @llvm.dbg.value(metadata i64 %11, metadata !17866, metadata !DIExpression()), !dbg !17869
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17875
  br i1 %15, label %16, label %6, !dbg !17877, !llvm.loop !17885

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17869
  call void @llvm.dbg.value(metadata i64 %17, metadata !17866, metadata !DIExpression()), !dbg !17869
  %18 = tail call fastcc i32 @elapsed.250() #26, !dbg !17887
  %19 = sext i32 %18 to i64, !dbg !17887
  %20 = sub nsw i64 %17, %19, !dbg !17888
  br label %21, !dbg !17889

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17869
  ret i64 %22, !dbg !17890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.262(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17891 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17895, metadata !DIExpression()), !dbg !17896
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17897
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.259(%struct._dnode* noundef %2) #26, !dbg !17898
  %4 = xor i1 %3, true, !dbg !17899
  ret i1 %4, !dbg !17900
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17901 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17903, metadata !DIExpression()), !dbg !17908
  call void @llvm.dbg.value(metadata i64 0, metadata !17904, metadata !DIExpression()), !dbg !17908
  call void @llvm.dbg.value(metadata i32 0, metadata !17905, metadata !DIExpression()), !dbg !17909
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17544, metadata !DIExpression()) #25, !dbg !17910
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17912, !srcloc !17559
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17912
  call void @llvm.dbg.value(metadata i32 %3, metadata !17556, metadata !DIExpression()) #25, !dbg !17914
  call void @llvm.dbg.value(metadata i32 undef, metadata !17557, metadata !DIExpression()) #25, !dbg !17914
  call void @llvm.dbg.value(metadata i32 %3, metadata !17550, metadata !DIExpression()) #25, !dbg !17910
  call void @llvm.dbg.value(metadata i32 %3, metadata !17907, metadata !DIExpression()), !dbg !17909
  call void @llvm.dbg.value(metadata i64 0, metadata !17904, metadata !DIExpression()), !dbg !17908
  call void @llvm.dbg.value(metadata i32 undef, metadata !17905, metadata !DIExpression()), !dbg !17909
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17915
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17918
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17904, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17908
  call void @llvm.dbg.value(metadata i32 %3, metadata !17612, metadata !DIExpression()) #25, !dbg !17919
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17617, metadata !DIExpression()) #25, !dbg !17919
  call void @llvm.dbg.value(metadata i32 %3, metadata !17620, metadata !DIExpression()) #25, !dbg !17921
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17923, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 undef, metadata !17905, metadata !DIExpression()), !dbg !17909
  %6 = add i64 %5, %4, !dbg !17924
  ret i64 %6, !dbg !17925
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17926 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17928, metadata !DIExpression()), !dbg !17932
  call void @llvm.dbg.value(metadata i32 0, metadata !17929, metadata !DIExpression()), !dbg !17933
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17544, metadata !DIExpression()) #25, !dbg !17934
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17936, !srcloc !17559
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17936
  call void @llvm.dbg.value(metadata i32 %2, metadata !17556, metadata !DIExpression()) #25, !dbg !17938
  call void @llvm.dbg.value(metadata i32 undef, metadata !17557, metadata !DIExpression()) #25, !dbg !17938
  call void @llvm.dbg.value(metadata i32 %2, metadata !17550, metadata !DIExpression()) #25, !dbg !17934
  call void @llvm.dbg.value(metadata i32 %2, metadata !17931, metadata !DIExpression()), !dbg !17933
  call void @llvm.dbg.value(metadata i32 -1, metadata !17928, metadata !DIExpression()), !dbg !17932
  call void @llvm.dbg.value(metadata i32 undef, metadata !17929, metadata !DIExpression()), !dbg !17933
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17939
  call void @llvm.dbg.value(metadata i32 %3, metadata !17928, metadata !DIExpression()), !dbg !17932
  call void @llvm.dbg.value(metadata i32 %2, metadata !17612, metadata !DIExpression()) #25, !dbg !17942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17617, metadata !DIExpression()) #25, !dbg !17942
  call void @llvm.dbg.value(metadata i32 %2, metadata !17620, metadata !DIExpression()) #25, !dbg !17944
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17946, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 undef, metadata !17929, metadata !DIExpression()), !dbg !17933
  ret i32 %3, !dbg !17947
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17950, metadata !DIExpression()), !dbg !17960
  call void @llvm.dbg.value(metadata i1 %1, metadata !17951, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17960
  call void @llvm.dbg.value(metadata i32 0, metadata !17952, metadata !DIExpression()), !dbg !17961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17544, metadata !DIExpression()) #25, !dbg !17962
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17964, !srcloc !17559
  call void @llvm.dbg.value(metadata i32 undef, metadata !17556, metadata !DIExpression()) #25, !dbg !17966
  call void @llvm.dbg.value(metadata i32 undef, metadata !17557, metadata !DIExpression()) #25, !dbg !17966
  call void @llvm.dbg.value(metadata i32 undef, metadata !17550, metadata !DIExpression()) #25, !dbg !17962
  call void @llvm.dbg.value(metadata i32 undef, metadata !17954, metadata !DIExpression()), !dbg !17961
  call void @llvm.dbg.value(metadata i32 undef, metadata !17952, metadata !DIExpression()), !dbg !17961
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17967
  call void @llvm.dbg.value(metadata i32 %4, metadata !17955, metadata !DIExpression()), !dbg !17968
  call void @llvm.dbg.value(metadata i1 undef, metadata !17958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17968
  %5 = icmp slt i32 %4, 2, !dbg !17969
  call void @llvm.dbg.value(metadata i1 %5, metadata !17959, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17968
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17970
  call void @llvm.dbg.value(metadata i1 %6, metadata !17958, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17968
  br i1 %7, label %11, label %8, !dbg !17970

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17972
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17972
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !17974
  br label %11, !dbg !17975

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17964
  call void @llvm.dbg.value(metadata i32 %12, metadata !17556, metadata !DIExpression()) #25, !dbg !17966
  call void @llvm.dbg.value(metadata i32 %12, metadata !17550, metadata !DIExpression()) #25, !dbg !17962
  call void @llvm.dbg.value(metadata i32 %12, metadata !17954, metadata !DIExpression()), !dbg !17961
  call void @llvm.dbg.value(metadata i32 undef, metadata !17612, metadata !DIExpression()) #25, !dbg !17976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17617, metadata !DIExpression()) #25, !dbg !17976
  call void @llvm.dbg.value(metadata i32 undef, metadata !17620, metadata !DIExpression()) #25, !dbg !17978
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !17980, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 1, metadata !17952, metadata !DIExpression()), !dbg !17961
  call void @llvm.dbg.value(metadata i32 undef, metadata !17952, metadata !DIExpression()), !dbg !17961
  ret void, !dbg !17981
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17986, metadata !DIExpression()), !dbg !17991
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !17992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17544, metadata !DIExpression()) #25, !dbg !17993
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17995, !srcloc !17559
  call void @llvm.dbg.value(metadata i32 undef, metadata !17556, metadata !DIExpression()) #25, !dbg !17997
  call void @llvm.dbg.value(metadata i32 undef, metadata !17557, metadata !DIExpression()) #25, !dbg !17997
  call void @llvm.dbg.value(metadata i32 undef, metadata !17550, metadata !DIExpression()) #25, !dbg !17993
  call void @llvm.dbg.value(metadata i32 undef, metadata !17987, metadata !DIExpression()), !dbg !17991
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17991
  call void @llvm.dbg.value(metadata i32 undef, metadata !17987, metadata !DIExpression()), !dbg !17991
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17998
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17999
  br i1 %4, label %28, label %5, !dbg !18000

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !18001
  %10 = load i64, i64* %9, align 8, !dbg !18001
  %11 = sext i32 %8 to i64, !dbg !18002
  %12 = icmp sgt i64 %10, %11, !dbg !18003
  br i1 %12, label %26, label %13, !dbg !18004

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17991
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17988, metadata !DIExpression()), !dbg !18005
  %15 = trunc i64 %10 to i32, !dbg !18006
  call void @llvm.dbg.value(metadata i32 %15, metadata !17990, metadata !DIExpression()), !dbg !18005
  %16 = sext i32 %15 to i64, !dbg !18007
  %17 = load i64, i64* @curr_tick, align 8, !dbg !18008
  %18 = add i64 %17, %16, !dbg !18008
  store i64 %18, i64* @curr_tick, align 8, !dbg !18008
  store i64 0, i64* %9, align 8, !dbg !18009
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !18010
  call void @llvm.dbg.value(metadata i32 %14, metadata !17612, metadata !DIExpression()) #25, !dbg !18011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17617, metadata !DIExpression()) #25, !dbg !18011
  call void @llvm.dbg.value(metadata i32 %14, metadata !17620, metadata !DIExpression()) #25, !dbg !18013
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18015, !srcloc !17626
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !18016
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !18016
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !18017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17544, metadata !DIExpression()) #25, !dbg !18018
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18020, !srcloc !17559
  call void @llvm.dbg.value(metadata i32 undef, metadata !17556, metadata !DIExpression()) #25, !dbg !18022
  call void @llvm.dbg.value(metadata i32 undef, metadata !17557, metadata !DIExpression()) #25, !dbg !18022
  call void @llvm.dbg.value(metadata i32 undef, metadata !17550, metadata !DIExpression()) #25, !dbg !18018
  call void @llvm.dbg.value(metadata i32 undef, metadata !17987, metadata !DIExpression()), !dbg !17991
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !18023
  %23 = sub nsw i32 %22, %15, !dbg !18023
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17991
  call void @llvm.dbg.value(metadata i32 undef, metadata !17987, metadata !DIExpression()), !dbg !17991
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17998
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17999
  br i1 %25, label %28, label %5, !dbg !18000, !llvm.loop !18024

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !18026
  store i64 %27, i64* %9, align 8, !dbg !18026
  br label %32, !dbg !18029

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17991
  %31 = sext i32 %30 to i64, !dbg !18030
  br label %32, !dbg !18030

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !18030
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17991
  %36 = load i64, i64* @curr_tick, align 8, !dbg !18031
  %37 = add i64 %36, %33, !dbg !18031
  store i64 %37, i64* @curr_tick, align 8, !dbg !18031
  store i32 0, i32* @announce_remaining, align 4, !dbg !18032
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !18033
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !18034
  call void @llvm.dbg.value(metadata i32 %35, metadata !17612, metadata !DIExpression()) #25, !dbg !18035
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17617, metadata !DIExpression()) #25, !dbg !18035
  call void @llvm.dbg.value(metadata i32 %35, metadata !17620, metadata !DIExpression()) #25, !dbg !18037
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !18039, !srcloc !17626
  ret void, !dbg !18040
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18041 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18043, metadata !DIExpression()), !dbg !18047
  call void @llvm.dbg.value(metadata i32 0, metadata !18044, metadata !DIExpression()), !dbg !18048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17544, metadata !DIExpression()) #25, !dbg !18049
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18051, !srcloc !17559
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18051
  call void @llvm.dbg.value(metadata i32 %2, metadata !17556, metadata !DIExpression()) #25, !dbg !18053
  call void @llvm.dbg.value(metadata i32 undef, metadata !17557, metadata !DIExpression()) #25, !dbg !18053
  call void @llvm.dbg.value(metadata i32 %2, metadata !17550, metadata !DIExpression()) #25, !dbg !18049
  call void @llvm.dbg.value(metadata i32 %2, metadata !18046, metadata !DIExpression()), !dbg !18048
  call void @llvm.dbg.value(metadata i64 0, metadata !18043, metadata !DIExpression()), !dbg !18047
  call void @llvm.dbg.value(metadata i32 undef, metadata !18044, metadata !DIExpression()), !dbg !18048
  %3 = load i64, i64* @curr_tick, align 8, !dbg !18054
  %4 = tail call fastcc i32 @elapsed.250() #26, !dbg !18057
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !18043, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18047
  call void @llvm.dbg.value(metadata i32 %2, metadata !17612, metadata !DIExpression()) #25, !dbg !18058
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17617, metadata !DIExpression()) #25, !dbg !18058
  call void @llvm.dbg.value(metadata i32 %2, metadata !17620, metadata !DIExpression()) #25, !dbg !18060
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18062, !srcloc !17626
  call void @llvm.dbg.value(metadata i32 undef, metadata !18044, metadata !DIExpression()), !dbg !18048
  %5 = sext i32 %4 to i64, !dbg !18057
  %6 = add i64 %3, %5, !dbg !18063
  ret i64 %6, !dbg !18064
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18065 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18066
  %2 = trunc i64 %1 to i32, !dbg !18067
  ret i32 %2, !dbg !18068
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18069 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18070
  ret i64 %1, !dbg !18071
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18074, metadata !DIExpression()), !dbg !18081
  %2 = icmp eq i32 %0, 0, !dbg !18082
  br i1 %2, label %10, label %3, !dbg !18084

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18085
  call void @llvm.dbg.value(metadata i32 %4, metadata !18075, metadata !DIExpression()), !dbg !18081
  %5 = shl i32 %0, 5, !dbg !18086
  call void @llvm.dbg.value(metadata i32 %5, metadata !18076, metadata !DIExpression()), !dbg !18081
  br label %6, !dbg !18087

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18088
  call void @llvm.dbg.value(metadata i32 %7, metadata !18077, metadata !DIExpression()), !dbg !18089
  %8 = sub i32 %7, %4, !dbg !18090
  %9 = icmp ult i32 %8, %5, !dbg !18092
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18093
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18094 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !18095
  ret i32 %1, !dbg !18096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18097 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18099
  ret i32 %1, !dbg !18100
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18101 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18105, metadata !DIExpression()), !dbg !18107
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18108

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !18109
  br label %14, !dbg !18113

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18106, metadata !DIExpression()), !dbg !18107
  %6 = icmp slt i64 %2, -1, !dbg !18114
  br i1 %6, label %7, label %9, !dbg !18117

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18118
  br label %14, !dbg !18119

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18121
  %11 = icmp ugt i64 %2, 1, !dbg !18122
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18122
  %13 = add nsw i64 %10, %12, !dbg !18123
  br label %14, !dbg !18124

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18125
  ret i64 %15, !dbg !18126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !18127 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18129, metadata !DIExpression()), !dbg !18133
  %2 = icmp eq i8* %0, null, !dbg !18134
  br i1 %2, label %7, label %3, !dbg !18136

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !18130, metadata !DIExpression()), !dbg !18133
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !18137
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !18137
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !18130, metadata !DIExpression()), !dbg !18133
  call void @llvm.dbg.value(metadata i8* %4, metadata !18129, metadata !DIExpression()), !dbg !18133
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !18139
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #27, !dbg !18140
  br label %7, !dbg !18141

7:                                                ; preds = %3, %1
  ret void, !dbg !18142
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18147, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.value(metadata i32 %1, metadata !18148, metadata !DIExpression()), !dbg !18150
  %3 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #26, !dbg !18151
  call void @llvm.dbg.value(metadata i8* %3, metadata !18149, metadata !DIExpression()), !dbg !18150
  ret i8* %3, !dbg !18152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !18153 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18157, metadata !DIExpression()), !dbg !18163
  call void @llvm.dbg.value(metadata i32 %1, metadata !18158, metadata !DIExpression()), !dbg !18163
  call void @llvm.dbg.value(metadata i32 %2, metadata !18159, metadata !DIExpression()), !dbg !18163
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !18159, metadata !DIExpression(DW_OP_deref)), !dbg !18163
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !18164
  br i1 %5, label %14, label %6, !dbg !18166

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !18167
  call void @llvm.dbg.value(metadata i32 %7, metadata !18162, metadata !DIExpression()), !dbg !18163
  %8 = load i32, i32* %4, align 4, !dbg !18168
  call void @llvm.dbg.value(metadata i32 %8, metadata !18159, metadata !DIExpression()), !dbg !18163
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #27, !dbg !18169
  call void @llvm.dbg.value(metadata i8* %9, metadata !18160, metadata !DIExpression()), !dbg !18163
  %10 = icmp eq i8* %9, null, !dbg !18170
  br i1 %10, label %14, label %11, !dbg !18172

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !18173
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !18161, metadata !DIExpression()), !dbg !18163
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !18174
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !18175
  call void @llvm.dbg.value(metadata i8* %13, metadata !18161, metadata !DIExpression()), !dbg !18163
  call void @llvm.dbg.value(metadata i8* %13, metadata !18160, metadata !DIExpression()), !dbg !18163
  br label %14, !dbg !18176

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !18163
  ret i8* %15, !dbg !18177
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #23 !dbg !18178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18180, metadata !DIExpression()), !dbg !18183
  call void @llvm.dbg.value(metadata i32 4, metadata !18181, metadata !DIExpression()), !dbg !18183
  call void @llvm.dbg.value(metadata i32* %1, metadata !18182, metadata !DIExpression()), !dbg !18183
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !18184
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !18184
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !18184
  store i32 %5, i32* %1, align 4, !dbg !18184
  ret i1 %4, !dbg !18185
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !18186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18188, metadata !DIExpression()), !dbg !18190
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #26, !dbg !18191
  call void @llvm.dbg.value(metadata i8* %2, metadata !18189, metadata !DIExpression()), !dbg !18190
  ret i8* %2, !dbg !18192
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18193 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !18195, metadata !DIExpression()), !dbg !18199
  call void @llvm.dbg.value(metadata i32 %1, metadata !18196, metadata !DIExpression()), !dbg !18199
  %4 = bitcast i32* %3 to i8*, !dbg !18200
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !18200
  call void @llvm.dbg.value(metadata i32* %3, metadata !18198, metadata !DIExpression(DW_OP_deref)), !dbg !18199
  %5 = call fastcc zeroext i1 @size_mul_overflow.280(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #26, !dbg !18201
  br i1 %5, label %12, label %6, !dbg !18203

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !18204
  call void @llvm.dbg.value(metadata i32 %7, metadata !18198, metadata !DIExpression()), !dbg !18199
  %8 = tail call i8* @k_malloc(i32 noundef %7) #26, !dbg !18205
  call void @llvm.dbg.value(metadata i8* %8, metadata !18197, metadata !DIExpression()), !dbg !18199
  %9 = icmp eq i8* %8, null, !dbg !18206
  br i1 %9, label %12, label %10, !dbg !18208

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !18198, metadata !DIExpression()), !dbg !18199
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #27, !dbg !18209
  br label %12, !dbg !18211

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !18199
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !18212
  ret i8* %13, !dbg !18212
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow.280(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !18213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18215, metadata !DIExpression()), !dbg !18218
  call void @llvm.dbg.value(metadata i32 %1, metadata !18216, metadata !DIExpression()), !dbg !18218
  call void @llvm.dbg.value(metadata i32* %2, metadata !18217, metadata !DIExpression()), !dbg !18218
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !18219
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !18219
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !18219
  store i32 %6, i32* %2, align 4, !dbg !18219
  ret i1 %5, !dbg !18220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !18221 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18295, metadata !DIExpression()), !dbg !18296
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !18297
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !18298
  ret void, !dbg !18299
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18302, metadata !DIExpression()), !dbg !18306
  call void @llvm.dbg.value(metadata i32 %1, metadata !18303, metadata !DIExpression()), !dbg !18306
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !18307
  br i1 %3, label %9, label %4, !dbg !18309

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18310
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !18312
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !18312
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !18305, metadata !DIExpression()), !dbg !18306
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !18313
  br i1 %8, label %12, label %9, !dbg !18315

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #26, !dbg !18316
  call void @llvm.dbg.value(metadata i8* %11, metadata !18304, metadata !DIExpression()), !dbg !18306
  br label %12, !dbg !18318

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !18319
  call void @llvm.dbg.value(metadata i8* %13, metadata !18304, metadata !DIExpression()), !dbg !18306
  ret i8* %13, !dbg !18320
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !18321 {
  tail call void asm sideeffect "nop", ""() #25, !dbg !18323, !srcloc !18326
  ret void, !dbg !18327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18328 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.289, i32 0, i32 0)) #27, !dbg !18330
  ret void, !dbg !18331
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18332 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18334, metadata !DIExpression()), !dbg !18354
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18335, metadata !DIExpression()), !dbg !18355
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !18356

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !18357

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18335, metadata !DIExpression()), !dbg !18355
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18358
  %6 = load i8*, i8** %5, align 4, !dbg !18358
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18362
  %8 = load i32, i32* %7, align 4, !dbg !18362
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !18363
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18364
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !18335, metadata !DIExpression()), !dbg !18355
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18365
  br i1 %10, label %3, label %2, !dbg !18356, !llvm.loop !18367
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18369 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18373, metadata !DIExpression()), !dbg !18376
  call void @llvm.dbg.value(metadata i8* %1, metadata !18374, metadata !DIExpression()), !dbg !18376
  call void @llvm.dbg.value(metadata i32 %2, metadata !18375, metadata !DIExpression()), !dbg !18376
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18377
  tail call fastcc void @z_waitq_init.291(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !18378
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18379
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !18380
  ret void, !dbg !18381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.291(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !18382 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18387, metadata !DIExpression()), !dbg !18388
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18389
  tail call fastcc void @sys_dlist_init.292(%struct._dnode* noundef %2) #26, !dbg !18390
  ret void, !dbg !18391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.292(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !18392 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18397, metadata !DIExpression()), !dbg !18398
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18399
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18400
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18401
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18402
  ret void, !dbg !18403
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18404 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18415, metadata !DIExpression()), !dbg !18425
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18412, metadata !DIExpression()), !dbg !18425
  call void @llvm.dbg.value(metadata i32 %1, metadata !18413, metadata !DIExpression()), !dbg !18425
  call void @llvm.dbg.value(metadata i32 %2, metadata !18414, metadata !DIExpression()), !dbg !18425
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !18426
  call void @llvm.dbg.value(metadata i64 %6, metadata !18417, metadata !DIExpression()), !dbg !18425
  call void @llvm.dbg.value(metadata i8* null, metadata !18418, metadata !DIExpression()), !dbg !18425
  %7 = icmp eq i64 %5, -1, !dbg !18427
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18427
  call void @llvm.dbg.value(metadata i64 %8, metadata !18417, metadata !DIExpression()), !dbg !18425
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18428
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18429, metadata !DIExpression()) #25, !dbg !18436
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18438, !srcloc !18444
  call void @llvm.dbg.value(metadata i32 undef, metadata !18441, metadata !DIExpression()) #25, !dbg !18445
  call void @llvm.dbg.value(metadata i32 undef, metadata !18442, metadata !DIExpression()) #25, !dbg !18445
  call void @llvm.dbg.value(metadata i32 undef, metadata !18435, metadata !DIExpression()) #25, !dbg !18436
  call void @llvm.dbg.value(metadata i32 undef, metadata !18419, metadata !DIExpression()), !dbg !18425
  call void @llvm.dbg.value(metadata i8 0, metadata !18424, metadata !DIExpression()), !dbg !18425
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18418, metadata !DIExpression()), !dbg !18425
  call void @llvm.dbg.value(metadata i8 0, metadata !18424, metadata !DIExpression()), !dbg !18425
  call void @llvm.dbg.value(metadata i32 undef, metadata !18419, metadata !DIExpression()), !dbg !18425
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !18446
  call void @llvm.dbg.value(metadata i8* %12, metadata !18418, metadata !DIExpression()), !dbg !18425
  %13 = tail call i64 @sys_clock_tick_get() #27, !dbg !18448
  call void @llvm.dbg.value(metadata i64 %13, metadata !18416, metadata !DIExpression()), !dbg !18425
  %14 = icmp eq i8* %12, null, !dbg !18449
  br i1 %14, label %15, label %31, !dbg !18451

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18419, metadata !DIExpression()), !dbg !18425
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !18451

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18424, metadata !DIExpression()), !dbg !18425
  %20 = sub nsw i64 %8, %18, !dbg !18452
  %21 = icmp slt i64 %20, 1, !dbg !18453
  br i1 %21, label %31, label %22, !dbg !18454

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !18425
  call void @llvm.dbg.value(metadata i8 undef, metadata !18424, metadata !DIExpression()), !dbg !18425
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !18455
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !18455
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #27, !dbg !18455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18429, metadata !DIExpression()) #25, !dbg !18456
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18458, !srcloc !18444
  call void @llvm.dbg.value(metadata i32 undef, metadata !18441, metadata !DIExpression()) #25, !dbg !18460
  call void @llvm.dbg.value(metadata i32 undef, metadata !18442, metadata !DIExpression()) #25, !dbg !18460
  call void @llvm.dbg.value(metadata i32 undef, metadata !18435, metadata !DIExpression()) #25, !dbg !18456
  call void @llvm.dbg.value(metadata i32 undef, metadata !18419, metadata !DIExpression()), !dbg !18425
  call void @llvm.dbg.value(metadata i8* null, metadata !18418, metadata !DIExpression()), !dbg !18425
  call void @llvm.dbg.value(metadata i32 undef, metadata !18419, metadata !DIExpression()), !dbg !18425
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !18446
  call void @llvm.dbg.value(metadata i8* %28, metadata !18418, metadata !DIExpression()), !dbg !18425
  %29 = tail call i64 @sys_clock_tick_get() #27, !dbg !18448
  call void @llvm.dbg.value(metadata i64 %29, metadata !18416, metadata !DIExpression()), !dbg !18425
  %30 = icmp eq i8* %28, null, !dbg !18449
  br i1 %30, label %17, label %31, !dbg !18451, !llvm.loop !18461

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !18446
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !18425
  call void @llvm.dbg.value(metadata i8* %33, metadata !18418, metadata !DIExpression()), !dbg !18425
  call void @llvm.dbg.value(metadata i32 %34, metadata !18464, metadata !DIExpression()) #25, !dbg !18470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18469, metadata !DIExpression()) #25, !dbg !18470
  call void @llvm.dbg.value(metadata i32 %34, metadata !18472, metadata !DIExpression()) #25, !dbg !18475
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !18477, !srcloc !18478
  ret i8* %33, !dbg !18479
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18480 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18486, metadata !DIExpression()), !dbg !18488
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18484, metadata !DIExpression()), !dbg !18488
  call void @llvm.dbg.value(metadata i32 %1, metadata !18485, metadata !DIExpression()), !dbg !18488
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !18489
  call void @llvm.dbg.value(metadata i8* %4, metadata !18487, metadata !DIExpression()), !dbg !18488
  ret i8* %4, !dbg !18490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !18491 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18495, metadata !DIExpression()), !dbg !18498
  call void @llvm.dbg.value(metadata i8* %1, metadata !18496, metadata !DIExpression()), !dbg !18498
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18429, metadata !DIExpression()) #25, !dbg !18499
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18501, !srcloc !18444
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !18501
  call void @llvm.dbg.value(metadata i32 %4, metadata !18441, metadata !DIExpression()) #25, !dbg !18503
  call void @llvm.dbg.value(metadata i32 undef, metadata !18442, metadata !DIExpression()) #25, !dbg !18503
  call void @llvm.dbg.value(metadata i32 %4, metadata !18435, metadata !DIExpression()) #25, !dbg !18499
  call void @llvm.dbg.value(metadata i32 %4, metadata !18497, metadata !DIExpression()), !dbg !18498
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18504
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #27, !dbg !18505
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18506
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #27, !dbg !18508
  %8 = icmp eq i32 %7, 0, !dbg !18509
  br i1 %8, label %12, label %9, !dbg !18510

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18511
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !18512
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #27, !dbg !18512
  br label %13, !dbg !18514

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !18464, metadata !DIExpression()) #25, !dbg !18515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18469, metadata !DIExpression()) #25, !dbg !18515
  call void @llvm.dbg.value(metadata i32 %4, metadata !18472, metadata !DIExpression()) #25, !dbg !18518
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !18520, !srcloc !18478
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !18521
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!975, !2, !2656, !27, !366, !390, !2658, !2660, !2693, !2727, !400, !463, !2729, !2732, !2743, !2789, !2791, !2819, !2847, !2890, !2961, !3006, !492, !632, !3034, !668, !678, !703, !811, !823, !1005, !3039, !1123, !1189, !1456, !1696, !3060, !1809, !1896, !3062, !3133, !3182, !1931, !3185, !1938, !2303, !3203, !3205, !2323, !2431, !3309, !2546, !2585, !3312, !3314, !2625}
!llvm.ident = !{!3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316, !3316}
!llvm.module.flags = !{!3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_mutex_bm_channel", scope: !27, file: !114, line: 16, type: !136, isLocal: true, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !290, !292, !294, !296, !298, !300, !302, !304, !306, !339, !343, !348, !350, !357, !362}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "bm_channel", scope: !27, file: !114, line: 16, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !123, !125, !126, !134, !259}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !116, file: !117, line: 35, baseType: !120, size: 16)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !122)
!122 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !116, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !116, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !116, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!131, !13, !132}
!131 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !133, line: 214, baseType: !32)
!133 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!134 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !116, file: !117, line: 56, baseType: !135, size: 32, offset: 128)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !160, !257, !258}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !136, file: !137, line: 2722, baseType: !140, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !143)
!143 = !{!144}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !142, file: !141, line: 232, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !147)
!146 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !148)
!148 = !{!149, !155}
!149 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 38, baseType: !150, size: 32)
!150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 38, size: 32, elements: !151)
!151 = !{!152, !154}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !150, file: !146, line: 39, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !150, file: !146, line: 40, baseType: !153, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 42, baseType: !156, size: 32, offset: 32)
!156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 42, size: 32, elements: !157)
!157 = !{!158, !159}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !156, file: !146, line: 43, baseType: !153, size: 32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !156, file: !146, line: 44, baseType: !153, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !136, file: !137, line: 2724, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = !{!165, !212, !225, !226, !227, !228, !234, !252}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !162, file: !163, line: 247, baseType: !166, size: 384)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !167)
!167 = !{!168, !182, !184, !187, !188, !199, !200, !201}
!168 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 60, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 60, size: 64, elements: !170)
!170 = !{!171, !173}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !169, file: !163, line: 61, baseType: !172, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !147)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !169, file: !163, line: 62, baseType: !174, size: 64)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !176)
!175 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!176 = !{!177}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !174, file: !175, line: 50, baseType: !178, size: 64)
!178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 64, elements: !180)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!180 = !{!181}
!181 = !DISubrange(count: 2)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !166, file: !163, line: 68, baseType: !183, size: 32, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !166, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !166, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !163, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !163, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !163, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !163, line: 100, baseType: !121, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !166, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !166, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !166, file: !163, line: 131, baseType: !202, size: 192, offset: 192)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !203)
!203 = !{!204, !205, !211}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !202, file: !141, line: 245, baseType: !172, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !202, file: !141, line: 246, baseType: !206, size: 32, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !207)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!208 = !DISubroutineType(types: !209)
!209 = !{null, !210}
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !202, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !162, file: !163, line: 250, baseType: !213, size: 288, offset: 384)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !215)
!214 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!215 = !{!216, !217, !218, !219, !220, !221, !222, !223, !224}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !213, file: !214, line: 26, baseType: !108, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !213, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !213, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !213, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !213, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !213, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !213, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !213, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !213, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !162, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !162, file: !163, line: 256, baseType: !140, size: 64, offset: 704)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !162, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !162, file: !163, line: 300, baseType: !229, size: 96, offset: 800)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !230)
!230 = !{!231, !232, !233}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !229, file: !163, line: 153, baseType: !22, size: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !229, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !229, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !162, file: !163, line: 325, baseType: !235, size: 32, offset: 896)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !237)
!237 = !{!238, !247, !248}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !236, file: !137, line: 5074, baseType: !239, size: 96)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !241)
!240 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !{!242, !245, !246}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !240, line: 57, baseType: !243, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !240, line: 57, flags: DIFlagFwdDecl)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !239, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !239, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !236, file: !137, line: 5075, baseType: !140, size: 64, offset: 96)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !236, file: !137, line: 5076, baseType: !249, offset: 160)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!250 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!251 = !{}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !162, file: !163, line: 343, baseType: !253, size: 64, offset: 928)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !254)
!254 = !{!255, !256}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !253, file: !214, line: 63, baseType: !108, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !253, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !136, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !136, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !116, file: !117, line: 67, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !265)
!265 = !{!266, !267, !284}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !264, file: !117, line: 91, baseType: !131, size: 8)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !264, file: !117, line: 93, baseType: !268, size: 32, offset: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !271)
!271 = !{!272, !273, !274, !275, !276, !279, !280, !281, !282, !283}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !270, file: !137, line: 4206, baseType: !140, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !270, file: !137, line: 4208, baseType: !249, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !270, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !270, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !270, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !270, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !270, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !270, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !270, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !270, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !264, file: !117, line: 96, baseType: !285, size: 32, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 32)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "s1", scope: !27, file: !114, line: 126, type: !264, isLocal: false, isDefinition: true, align: 32)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "s2", scope: !27, file: !114, line: 129, type: !264, isLocal: false, isDefinition: true, align: 32)
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "s3", scope: !27, file: !114, line: 131, type: !264, isLocal: false, isDefinition: true, align: 32)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(name: "s4", scope: !27, file: !114, line: 132, type: !264, isLocal: false, isDefinition: true, align: 32)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(name: "s5", scope: !27, file: !114, line: 134, type: !264, isLocal: false, isDefinition: true, align: 32)
!300 = !DIGlobalVariableExpression(var: !301, expr: !DIExpression())
!301 = distinct !DIGlobalVariable(name: "s6", scope: !27, file: !114, line: 135, type: !264, isLocal: false, isDefinition: true, align: 32)
!302 = !DIGlobalVariableExpression(var: !303, expr: !DIExpression())
!303 = distinct !DIGlobalVariable(name: "s7", scope: !27, file: !114, line: 136, type: !264, isLocal: false, isDefinition: true, align: 32)
!304 = !DIGlobalVariableExpression(var: !305, expr: !DIExpression())
!305 = distinct !DIGlobalVariable(name: "s8", scope: !27, file: !114, line: 137, type: !264, isLocal: false, isDefinition: true, align: 32)
!306 = !DIGlobalVariableExpression(var: !307, expr: !DIExpression())
!307 = distinct !DIGlobalVariable(name: "_k_thread_data_producer_thread_id", scope: !27, file: !114, line: 216, type: !308, isLocal: false, isDefinition: true, align: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !309)
!309 = !{!310, !311, !319, !320, !325, !326, !327, !328, !329, !330, !332, !336}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !308, file: !137, line: 621, baseType: !161, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !308, file: !137, line: 622, baseType: !312, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 32)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !315)
!314 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{!318}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !315, file: !316, line: 48, baseType: !278, size: 8)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !308, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !308, file: !137, line: 624, baseType: !321, size: 32, offset: 96)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !314, line: 46, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!323 = !DISubroutineType(types: !324)
!324 = !{null, !102, !102, !102}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !308, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !308, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !308, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !308, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !308, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !308, file: !137, line: 630, baseType: !331, size: 32, offset: 288)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !308, file: !137, line: 631, baseType: !333, size: 32, offset: 320)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DISubroutineType(types: !335)
!335 = !{null}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !308, file: !137, line: 632, baseType: !337, size: 32, offset: 352)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "producer_thread_id", scope: !27, file: !114, line: 216, type: !341, isLocal: false, isDefinition: true)
!341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !161)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "_k_thread_stack_producer_thread_id", scope: !27, file: !114, line: 216, type: !345, isLocal: false, isDefinition: true, align: 512)
!345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 8704, elements: !346)
!346 = !{!347}
!347 = !DISubrange(count: 1088)
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "_k_thread_obj_producer_thread_id", scope: !27, file: !114, line: 216, type: !162, isLocal: false, isDefinition: true)
!350 = !DIGlobalVariableExpression(var: !351, expr: !DIExpression())
!351 = distinct !DIGlobalVariable(name: "_zbus_message_bm_channel", scope: !27, file: !114, line: 16, type: !352, isLocal: true, isDefinition: true)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !353, line: 10, size: 64, elements: !354)
!353 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!354 = !{!355, !356}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !352, file: !353, line: 11, baseType: !102, size: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !352, file: !353, line: 12, baseType: !132, size: 32, offset: 32)
!357 = !DIGlobalVariableExpression(var: !358, expr: !DIExpression())
!358 = distinct !DIGlobalVariable(name: "_zbus_observers_bm_channel", scope: !27, file: !114, line: 16, type: !359, isLocal: true, isDefinition: true)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 288, elements: !360)
!360 = !{!361}
!361 = !DISubrange(count: 9)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !114, line: 44, type: !109, isLocal: true, isDefinition: true)
!364 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression())
!365 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !366, file: !381, line: 18, type: !382, isLocal: false, isDefinition: true)
!366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !368, globals: !380, splitDebugInlining: false, nameTableKind: None)
!367 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!368 = !{!22, !102, !24, !369, !371, !373, !132, !103, !374, !375, !377, !378, !277, !379, !121, !337}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!380 = !{!364}
!381 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !385)
!384 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !{!386, !387}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !383, file: !384, line: 17, baseType: !337, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !383, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(name: "_char_out", scope: !390, file: !394, line: 54, type: !395, isLocal: false, isDefinition: true)
!390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !391, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !393, splitDebugInlining: false, nameTableKind: None)
!391 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!392 = !{!102, !103}
!393 = !{!388}
!394 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{!103, !103}
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !400, file: !430, line: 60, type: !431, isLocal: true, isDefinition: true, align: 32)
!400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !402, globals: !429, splitDebugInlining: false, nameTableKind: None)
!401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!402 = !{!403, !423}
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 386, baseType: !406)
!405 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 370, size: 448, elements: !407)
!407 = !{!408, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !406, file: !405, line: 372, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !406, file: !405, line: 373, baseType: !409, size: 32, offset: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !406, file: !405, line: 374, baseType: !409, size: 32, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !406, file: !405, line: 375, baseType: !409, size: 32, offset: 96)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !406, file: !405, line: 376, baseType: !409, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !406, file: !405, line: 377, baseType: !409, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !406, file: !405, line: 378, baseType: !409, size: 32, offset: 192)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !406, file: !405, line: 379, baseType: !409, size: 32, offset: 224)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !406, file: !405, line: 380, baseType: !409, size: 32, offset: 256)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !406, file: !405, line: 381, baseType: !409, size: 32, offset: 288)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !406, file: !405, line: 382, baseType: !409, size: 32, offset: 320)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !406, file: !405, line: 383, baseType: !409, size: 32, offset: 352)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !406, file: !405, line: 384, baseType: !409, size: 32, offset: 384)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !406, file: !405, line: 385, baseType: !409, size: 32, offset: 416)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 364, baseType: !425)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 360, size: 64, elements: !426)
!426 = !{!427, !428}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !425, file: !405, line: 362, baseType: !409, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !425, file: !405, line: 363, baseType: !409, size: 32, offset: 32)
!429 = !{!398}
!430 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !432)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !433, line: 51, size: 64, elements: !434)
!433 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!434 = !{!435, !460}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !432, file: !433, line: 60, baseType: !436, size: 32)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 32)
!437 = !DISubroutineType(types: !438)
!438 = !{!103, !439}
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !441)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 378, size: 192, elements: !443)
!442 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!443 = !{!444, !445, !446, !447, !453, !454}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !441, file: !442, line: 380, baseType: !337, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !441, file: !442, line: 382, baseType: !13, size: 32, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !441, file: !442, line: 384, baseType: !13, size: 32, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !441, file: !442, line: 386, baseType: !448, size: 32, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !442, line: 351, size: 16, elements: !450)
!450 = !{!451, !452}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !449, file: !442, line: 359, baseType: !185, size: 8)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !449, file: !442, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !441, file: !442, line: 388, baseType: !102, size: 32, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !441, file: !442, line: 396, baseType: !455, size: 32, offset: 160)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !457)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !442, line: 43, baseType: !458)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !459)
!459 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !432, file: !433, line: 65, baseType: !439, size: 32, offset: 32)
!461 = !DIGlobalVariableExpression(var: !462, expr: !DIExpression())
!462 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !463, file: !466, line: 71, type: !467, isLocal: true, isDefinition: true, align: 32)
!463 = distinct !DICompileUnit(language: DW_LANG_C99, file: !464, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !465, splitDebugInlining: false, nameTableKind: None)
!464 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!465 = !{!461}
!466 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !433, line: 51, size: 64, elements: !469)
!469 = !{!470, !489}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !468, file: !433, line: 60, baseType: !471, size: 32)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 32)
!472 = !DISubroutineType(types: !473)
!473 = !{!103, !474}
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !476)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 378, size: 192, elements: !477)
!477 = !{!478, !479, !480, !481, !487, !488}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !476, file: !442, line: 380, baseType: !337, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !476, file: !442, line: 382, baseType: !13, size: 32, offset: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !476, file: !442, line: 384, baseType: !13, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !476, file: !442, line: 386, baseType: !482, size: 32, offset: 96)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 32)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !442, line: 351, size: 16, elements: !484)
!484 = !{!485, !486}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !483, file: !442, line: 359, baseType: !185, size: 8)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !483, file: !442, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !476, file: !442, line: 388, baseType: !102, size: 32, offset: 128)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !476, file: !442, line: 396, baseType: !455, size: 32, offset: 160)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !468, file: !433, line: 65, baseType: !474, size: 32, offset: 32)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !492, file: !499, line: 17, type: !625, isLocal: false, isDefinition: true)
!492 = distinct !DICompileUnit(language: DW_LANG_C99, file: !493, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !494, globals: !495, splitDebugInlining: false, nameTableKind: None)
!493 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!494 = !{!132, !103, !108, !102}
!495 = !{!490, !496, !621}
!496 = !DIGlobalVariableExpression(var: !497, expr: !DIExpression())
!497 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !498, file: !499, line: 198, type: !607, isLocal: true, isDefinition: true)
!498 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !499, file: !499, line: 175, type: !500, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !602)
!499 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !DISubroutineType(types: !501)
!501 = !{null, !502}
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 32)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !504)
!504 = !{!505, !563, !575, !576, !577, !578, !584, !597}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !503, file: !163, line: 247, baseType: !506, size: 384)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !507)
!507 = !{!508, !532, !539, !540, !541, !550, !551, !552}
!508 = !DIDerivedType(tag: DW_TAG_member, scope: !506, file: !163, line: 60, baseType: !509, size: 64)
!509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !506, file: !163, line: 60, size: 64, elements: !510)
!510 = !{!511, !526}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !509, file: !163, line: 61, baseType: !512, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !513)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !514)
!514 = !{!515, !521}
!515 = !DIDerivedType(tag: DW_TAG_member, scope: !513, file: !146, line: 38, baseType: !516, size: 32)
!516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !513, file: !146, line: 38, size: 32, elements: !517)
!517 = !{!518, !520}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !516, file: !146, line: 39, baseType: !519, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !516, file: !146, line: 40, baseType: !519, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, scope: !513, file: !146, line: 42, baseType: !522, size: 32, offset: 32)
!522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !513, file: !146, line: 42, size: 32, elements: !523)
!523 = !{!524, !525}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !522, file: !146, line: 43, baseType: !519, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !522, file: !146, line: 44, baseType: !519, size: 32)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !509, file: !163, line: 62, baseType: !527, size: 64)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !528)
!528 = !{!529}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !527, file: !175, line: 50, baseType: !530, size: 64)
!530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 64, elements: !180)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !506, file: !163, line: 68, baseType: !533, size: 32, offset: 64)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !536)
!536 = !{!537}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !535, file: !141, line: 232, baseType: !538, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !513)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !506, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !506, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!541 = !DIDerivedType(tag: DW_TAG_member, scope: !506, file: !163, line: 90, baseType: !542, size: 16, offset: 112)
!542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !506, file: !163, line: 90, size: 16, elements: !543)
!543 = !{!544, !549}
!544 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !163, line: 91, baseType: !545, size: 16)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !542, file: !163, line: 91, size: 16, elements: !546)
!546 = !{!547, !548}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !545, file: !163, line: 96, baseType: !195, size: 8)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !545, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !542, file: !163, line: 100, baseType: !121, size: 16)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !506, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !506, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !506, file: !163, line: 131, baseType: !553, size: 192, offset: 192)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !554)
!554 = !{!555, !556, !562}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !553, file: !141, line: 245, baseType: !512, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !553, file: !141, line: 246, baseType: !557, size: 32, offset: 64)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !558)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 32)
!559 = !DISubroutineType(types: !560)
!560 = !{null, !561}
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !553, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !503, file: !163, line: 250, baseType: !564, size: 288, offset: 384)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !565)
!565 = !{!566, !567, !568, !569, !570, !571, !572, !573, !574}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !564, file: !214, line: 26, baseType: !108, size: 32)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !564, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !564, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !564, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !564, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !564, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !564, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !564, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !564, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !503, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !503, file: !163, line: 256, baseType: !534, size: 64, offset: 704)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !503, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !503, file: !163, line: 300, baseType: !579, size: 96, offset: 800)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !580)
!580 = !{!581, !582, !583}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !579, file: !163, line: 153, baseType: !22, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !579, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !579, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !503, file: !163, line: 325, baseType: !585, size: 32, offset: 896)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !587)
!587 = !{!588, !594, !595}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !586, file: !137, line: 5074, baseType: !589, size: 96)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !590)
!590 = !{!591, !592, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !589, file: !240, line: 57, baseType: !243, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !589, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !589, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !586, file: !137, line: 5075, baseType: !534, size: 64, offset: 96)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !586, file: !137, line: 5076, baseType: !596, offset: 160)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !503, file: !163, line: 343, baseType: !598, size: 64, offset: 928)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !599)
!599 = !{!600, !601}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !598, file: !214, line: 63, baseType: !108, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !598, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!602 = !{!603, !604, !605, !606}
!603 = !DILocalVariable(name: "thread", arg: 1, scope: !498, file: !499, line: 175, type: !502)
!604 = !DILocalVariable(name: "region_num", scope: !498, file: !499, line: 200, type: !185)
!605 = !DILocalVariable(name: "guard_start", scope: !498, file: !499, line: 265, type: !22)
!606 = !DILocalVariable(name: "guard_size", scope: !498, file: !499, line: 266, type: !132)
!607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !608, size: 96, elements: !619)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !609, line: 52, size: 96, elements: !610)
!609 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!610 = !{!611, !612, !613}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !608, file: !609, line: 53, baseType: !22, size: 32)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !608, file: !609, line: 54, baseType: !132, size: 32, offset: 32)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !608, file: !609, line: 55, baseType: !614, size: 32, offset: 64)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !615, line: 151, baseType: !616)
!615 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !615, line: 149, size: 32, elements: !617)
!617 = !{!618}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !616, file: !615, line: 150, baseType: !108, size: 32)
!619 = !{!620}
!620 = !DISubrange(count: 1)
!621 = !DIGlobalVariableExpression(var: !622, expr: !DIExpression())
!622 = distinct !DIGlobalVariable(name: "static_regions", scope: !492, file: !499, line: 62, type: !623, isLocal: true, isDefinition: true)
!623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !624, size: 96, elements: !619)
!624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !608)
!625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !626)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !627)
!627 = !{!628, !629}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !626, file: !384, line: 17, baseType: !337, size: 32)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !626, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!630 = !DIGlobalVariableExpression(var: !631, expr: !DIExpression())
!631 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !632, file: !665, line: 39, type: !185, isLocal: true, isDefinition: true)
!632 = distinct !DICompileUnit(language: DW_LANG_C99, file: !633, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !634, globals: !664, splitDebugInlining: false, nameTableKind: None)
!633 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!634 = !{!635, !102, !103, !652, !185}
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !637, line: 1168, baseType: !638)
!637 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 1155, size: 352, elements: !639)
!639 = !{!640, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !638, file: !637, line: 1157, baseType: !641, size: 32)
!641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !638, file: !637, line: 1158, baseType: !409, size: 32, offset: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !638, file: !637, line: 1159, baseType: !409, size: 32, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !638, file: !637, line: 1160, baseType: !409, size: 32, offset: 96)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !638, file: !637, line: 1161, baseType: !409, size: 32, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !638, file: !637, line: 1162, baseType: !409, size: 32, offset: 160)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !638, file: !637, line: 1163, baseType: !409, size: 32, offset: 192)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !638, file: !637, line: 1164, baseType: !409, size: 32, offset: 224)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !638, file: !637, line: 1165, baseType: !409, size: 32, offset: 256)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !638, file: !637, line: 1166, baseType: !409, size: 32, offset: 288)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !638, file: !637, line: 1167, baseType: !409, size: 32, offset: 320)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 32)
!653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !654)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !655, line: 27, size: 96, elements: !656)
!655 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!656 = !{!657, !658, !659}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !654, file: !655, line: 29, baseType: !108, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !654, file: !655, line: 31, baseType: !337, size: 32, offset: 32)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !654, file: !655, line: 37, baseType: !660, size: 32, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !615, line: 146, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !615, line: 141, size: 32, elements: !662)
!662 = !{!663}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !661, file: !615, line: 143, baseType: !108, size: 32)
!664 = !{!630}
!665 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!666 = !DIGlobalVariableExpression(var: !667, expr: !DIExpression())
!667 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !668, file: !675, line: 21, type: !395, isLocal: true, isDefinition: true)
!668 = distinct !DICompileUnit(language: DW_LANG_C99, file: !669, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !670, globals: !674, splitDebugInlining: false, nameTableKind: None)
!669 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!670 = !{!671, !103, !102}
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !673, line: 22, baseType: !103)
!673 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!674 = !{!666}
!675 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!676 = !DIGlobalVariableExpression(var: !677, expr: !DIExpression())
!677 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !678, file: !683, line: 13, type: !700, isLocal: true, isDefinition: true)
!678 = distinct !DICompileUnit(language: DW_LANG_C99, file: !679, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !680, splitDebugInlining: false, nameTableKind: None)
!679 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!680 = !{!681, !676}
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "mpu_config", scope: !678, file: !683, line: 37, type: !684, isLocal: false, isDefinition: true)
!683 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !655, line: 41, size: 64, elements: !686)
!686 = !{!687, !688}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !685, file: !655, line: 43, baseType: !108, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !685, file: !655, line: 45, baseType: !689, size: 32, offset: 32)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !655, line: 27, size: 96, elements: !692)
!692 = !{!693, !694, !695}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !691, file: !655, line: 29, baseType: !108, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !691, file: !655, line: 31, baseType: !337, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !691, file: !655, line: 37, baseType: !696, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !615, line: 146, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !615, line: 141, size: 32, elements: !698)
!698 = !{!699}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !697, file: !615, line: 143, baseType: !108, size: 32)
!700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 192, elements: !180)
!701 = !DIGlobalVariableExpression(var: !702, expr: !DIExpression())
!702 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !703, file: !800, line: 36, type: !801, isLocal: true, isDefinition: true, align: 32)
!703 = distinct !DICompileUnit(language: DW_LANG_C99, file: !704, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !705, retainedTypes: !717, globals: !799, splitDebugInlining: false, nameTableKind: None)
!704 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!705 = !{!706, !712}
!706 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !707, line: 506, baseType: !32, size: 32, elements: !708)
!707 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!708 = !{!709, !710, !711}
!709 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!710 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!711 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !707, line: 512, baseType: !32, size: 32, elements: !713)
!713 = !{!714, !715, !716}
!714 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!715 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!716 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!717 = !{!718, !788, !793, !753, !712, !706, !798, !102}
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 32)
!719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !720)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !707, line: 523, size: 288, elements: !721)
!721 = !{!722, !743, !749, !754, !758, !759, !760, !764, !784}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !720, file: !707, line: 524, baseType: !723, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 32)
!724 = !DISubroutineType(types: !725)
!725 = !{!103, !726, !741, !742}
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 378, size: 192, elements: !729)
!729 = !{!730, !731, !732, !733, !739, !740}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !728, file: !442, line: 380, baseType: !337, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !728, file: !442, line: 382, baseType: !13, size: 32, offset: 32)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !728, file: !442, line: 384, baseType: !13, size: 32, offset: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !728, file: !442, line: 386, baseType: !734, size: 32, offset: 96)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 32)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !442, line: 351, size: 16, elements: !736)
!736 = !{!737, !738}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !735, file: !442, line: 359, baseType: !185, size: 8)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !735, file: !442, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !728, file: !442, line: 388, baseType: !102, size: 32, offset: 128)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !728, file: !442, line: 396, baseType: !455, size: 32, offset: 160)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !707, line: 237, baseType: !185)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !707, line: 257, baseType: !108)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !720, file: !707, line: 530, baseType: !744, size: 32, offset: 32)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 32)
!745 = !DISubroutineType(types: !746)
!746 = !{!103, !726, !747}
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !707, line: 229, baseType: !108)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !720, file: !707, line: 532, baseType: !750, size: 32, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 32)
!751 = !DISubroutineType(types: !752)
!752 = !{!103, !726, !753, !748}
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !707, line: 216, baseType: !108)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !720, file: !707, line: 535, baseType: !755, size: 32, offset: 96)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 32)
!756 = !DISubroutineType(types: !757)
!757 = !{!103, !726, !753}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !720, file: !707, line: 537, baseType: !755, size: 32, offset: 128)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !720, file: !707, line: 539, baseType: !755, size: 32, offset: 160)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !720, file: !707, line: 541, baseType: !761, size: 32, offset: 192)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32)
!762 = !DISubroutineType(types: !763)
!763 = !{!103, !726, !741, !706, !712}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !720, file: !707, line: 544, baseType: !765, size: 32, offset: 224)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 32)
!766 = !DISubroutineType(types: !767)
!767 = !{!103, !726, !768, !131}
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 32)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !707, line: 478, size: 96, elements: !770)
!770 = !{!771, !778, !783}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !769, file: !707, line: 482, baseType: !772, size: 32)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !773, line: 33, baseType: !774)
!773 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !773, line: 29, size: 32, elements: !775)
!775 = !{!776}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !774, file: !773, line: 30, baseType: !777, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !769, file: !707, line: 485, baseType: !779, size: 32, offset: 32)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !707, line: 464, baseType: !780)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 32)
!781 = !DISubroutineType(types: !782)
!782 = !{null, !726, !768, !753}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !769, file: !707, line: 493, baseType: !753, size: 32, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !720, file: !707, line: 547, baseType: !785, size: 32, offset: 256)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = !DISubroutineType(types: !787)
!787 = !{!108, !726}
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !790)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !707, line: 428, size: 32, elements: !791)
!791 = !{!792}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !790, file: !707, line: 434, baseType: !753, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !707, line: 441, size: 32, elements: !796)
!796 = !{!797}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !795, file: !707, line: 447, baseType: !753, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!799 = !{!701}
!800 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !802)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !433, line: 51, size: 64, elements: !803)
!803 = !{!804, !808}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !802, file: !433, line: 60, baseType: !805, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 32)
!806 = !DISubroutineType(types: !807)
!807 = !{!103, !726}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !802, file: !433, line: 65, baseType: !726, size: 32, offset: 32)
!809 = !DIGlobalVariableExpression(var: !810, expr: !DIExpression())
!810 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !811, file: !815, line: 10, type: !816, isLocal: false, isDefinition: true)
!811 = distinct !DICompileUnit(language: DW_LANG_C99, file: !812, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !813, globals: !814, splitDebugInlining: false, nameTableKind: None)
!812 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!813 = !{!104, !102, !103}
!814 = !{!809}
!815 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !817)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !818)
!818 = !{!819, !820}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !817, file: !384, line: 17, baseType: !337, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !817, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !823, file: !895, line: 48, type: !970, isLocal: true, isDefinition: true)
!823 = distinct !DICompileUnit(language: DW_LANG_C99, file: !824, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !825, retainedTypes: !881, globals: !892, splitDebugInlining: false, nameTableKind: None)
!824 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!825 = !{!30, !826}
!826 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 69, baseType: !103, size: 32, elements: !827)
!827 = !{!828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880}
!828 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!829 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!830 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!831 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!832 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!833 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!834 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!835 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!836 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!837 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!838 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!839 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!840 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!841 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!842 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!843 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!844 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!845 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!846 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!847 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!848 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!849 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!850 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!851 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!852 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!853 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!854 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!855 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!856 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!857 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!858 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!859 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!860 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!861 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!862 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!863 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!864 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!865 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!866 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!867 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!868 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!869 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!870 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!871 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!872 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!873 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!874 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!875 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!876 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!877 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!878 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!879 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!880 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!881 = !{!132, !103, !102, !882}
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !405, line: 270, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 262, size: 192, elements: !885)
!885 = !{!886, !887, !888, !889, !890, !891}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !884, file: !405, line: 264, baseType: !409, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !884, file: !405, line: 265, baseType: !409, size: 32, offset: 32)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !884, file: !405, line: 266, baseType: !409, size: 32, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !884, file: !405, line: 267, baseType: !409, size: 32, offset: 96)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !884, file: !405, line: 268, baseType: !409, size: 32, offset: 128)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !884, file: !405, line: 269, baseType: !409, size: 32, offset: 160)
!892 = !{!893, !899, !915, !926, !943, !821, !945, !958, !960, !962, !964, !966, !968}
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !823, file: !895, line: 424, type: !896, isLocal: false, isDefinition: true, align: 16)
!895 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 64, elements: !897)
!897 = !{!898}
!898 = !DISubrange(count: 4)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !823, file: !895, line: 424, type: !901, isLocal: false, isDefinition: true, align: 32)
!901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 378, size: 192, elements: !903)
!903 = !{!904, !905, !906, !907, !913, !914}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !902, file: !442, line: 380, baseType: !337, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !902, file: !442, line: 382, baseType: !13, size: 32, offset: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !902, file: !442, line: 384, baseType: !13, size: 32, offset: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !902, file: !442, line: 386, baseType: !908, size: 32, offset: 96)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !442, line: 351, size: 16, elements: !910)
!910 = !{!911, !912}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !909, file: !442, line: 359, baseType: !185, size: 8)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !909, file: !442, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !902, file: !442, line: 388, baseType: !102, size: 32, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !902, file: !442, line: 396, baseType: !455, size: 32, offset: 160)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !823, file: !895, line: 424, type: !917, isLocal: true, isDefinition: true, align: 32)
!917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !433, line: 51, size: 64, elements: !919)
!919 = !{!920, !925}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !918, file: !433, line: 60, baseType: !921, size: 32)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DISubroutineType(types: !923)
!923 = !{!103, !924}
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 32)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !918, file: !433, line: 65, baseType: !924, size: 32, offset: 32)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "exti_data", scope: !823, file: !895, line: 423, type: !928, isLocal: true, isDefinition: true)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !895, line: 107, size: 1024, elements: !929)
!929 = !{!930}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !928, file: !895, line: 109, baseType: !931, size: 1024)
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !932, size: 1024, elements: !941)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !895, line: 101, size: 64, elements: !933)
!933 = !{!934, !940}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !932, file: !895, line: 102, baseType: !935, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !936, line: 63, baseType: !937)
!936 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{null, !103, !102}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !932, file: !895, line: 103, baseType: !102, size: 32, offset: 32)
!941 = !{!942}
!942 = !DISubrange(count: 16)
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !823, file: !895, line: 424, type: !909, isLocal: true, isDefinition: true, align: 8)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !947, file: !895, line: 493, type: !952, isLocal: true, isDefinition: true, align: 32)
!947 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !895, file: !895, line: 460, type: !948, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !950)
!948 = !DISubroutineType(types: !949)
!949 = !{null, !924}
!950 = !{!951}
!951 = !DILocalVariable(name: "dev", arg: 1, scope: !947, file: !895, line: 460, type: !924)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !953)
!953 = !{!954, !955, !956, !957}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !952, file: !10, line: 55, baseType: !331, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !952, file: !10, line: 57, baseType: !331, size: 32, offset: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !952, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !952, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !947, file: !895, line: 497, type: !952, isLocal: true, isDefinition: true, align: 32)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !947, file: !895, line: 507, type: !952, isLocal: true, isDefinition: true, align: 32)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !947, file: !895, line: 512, type: !952, isLocal: true, isDefinition: true, align: 32)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !947, file: !895, line: 516, type: !952, isLocal: true, isDefinition: true, align: 32)
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !947, file: !895, line: 523, type: !952, isLocal: true, isDefinition: true, align: 32)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !947, file: !895, line: 527, type: !952, isLocal: true, isDefinition: true, align: 32)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 512, elements: !941)
!971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !405, line: 127, baseType: !826)
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !975, file: !980, line: 21, type: !1000, isLocal: false, isDefinition: true, align: 16)
!975 = distinct !DICompileUnit(language: DW_LANG_C99, file: !976, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !977, splitDebugInlining: false, nameTableKind: None)
!976 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!977 = !{!978, !973, !984, !986, !988, !990, !992, !994, !996, !998}
!978 = !DIGlobalVariableExpression(var: !979, expr: !DIExpression())
!979 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !975, file: !980, line: 16, type: !981, isLocal: false, isDefinition: true, align: 16)
!980 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 176, elements: !982)
!982 = !{!983}
!983 = !DISubrange(count: 11)
!984 = !DIGlobalVariableExpression(var: !985, expr: !DIExpression())
!985 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !975, file: !980, line: 28, type: !896, isLocal: false, isDefinition: true, align: 16)
!986 = !DIGlobalVariableExpression(var: !987, expr: !DIExpression())
!987 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !975, file: !980, line: 35, type: !896, isLocal: false, isDefinition: true, align: 16)
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !975, file: !980, line: 42, type: !896, isLocal: false, isDefinition: true, align: 16)
!990 = !DIGlobalVariableExpression(var: !991, expr: !DIExpression())
!991 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !975, file: !980, line: 49, type: !896, isLocal: false, isDefinition: true, align: 16)
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !975, file: !980, line: 56, type: !896, isLocal: false, isDefinition: true, align: 16)
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !975, file: !980, line: 63, type: !896, isLocal: false, isDefinition: true, align: 16)
!996 = !DIGlobalVariableExpression(var: !997, expr: !DIExpression())
!997 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !975, file: !980, line: 70, type: !896, isLocal: false, isDefinition: true, align: 16)
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !975, file: !980, line: 77, type: !896, isLocal: false, isDefinition: true, align: 16)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 48, elements: !1001)
!1001 = !{!1002}
!1002 = !DISubrange(count: 3)
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1005, file: !1049, line: 398, type: !1082, isLocal: true, isDefinition: true)
!1005 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1006, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1007, retainedTypes: !1020, globals: !1046, splitDebugInlining: false, nameTableKind: None)
!1006 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!1007 = !{!1008, !30, !1013}
!1008 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1009, line: 190, baseType: !32, size: 32, elements: !1010)
!1009 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1010 = !{!1011, !1012}
!1011 = !DIEnumerator(name: "SUCCESS", value: 0)
!1012 = !DIEnumerator(name: "ERROR", value: 1)
!1013 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1014, line: 44, baseType: !32, size: 32, elements: !1015)
!1014 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1015 = !{!1016, !1017, !1018, !1019}
!1016 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1017 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1018 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1019 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1020 = !{!102, !103, !108, !1021, !1039, !1045}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 386, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 370, size: 448, elements: !1024)
!1024 = !{!1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1023, file: !405, line: 372, baseType: !409, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1023, file: !405, line: 373, baseType: !409, size: 32, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1023, file: !405, line: 374, baseType: !409, size: 32, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1023, file: !405, line: 375, baseType: !409, size: 32, offset: 96)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1023, file: !405, line: 376, baseType: !409, size: 32, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1023, file: !405, line: 377, baseType: !409, size: 32, offset: 160)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1023, file: !405, line: 378, baseType: !409, size: 32, offset: 192)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1023, file: !405, line: 379, baseType: !409, size: 32, offset: 224)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1023, file: !405, line: 380, baseType: !409, size: 32, offset: 256)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1023, file: !405, line: 381, baseType: !409, size: 32, offset: 288)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1023, file: !405, line: 382, baseType: !409, size: 32, offset: 320)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1023, file: !405, line: 383, baseType: !409, size: 32, offset: 352)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1023, file: !405, line: 384, baseType: !409, size: 32, offset: 384)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1023, file: !405, line: 385, baseType: !409, size: 32, offset: 416)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1041, line: 343, size: 64, elements: !1042)
!1041 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1042 = !{!1043, !1044}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1040, file: !1041, line: 344, baseType: !108, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1040, file: !1041, line: 345, baseType: !108, size: 32, offset: 32)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1046 = !{!1047, !1053, !1069, !1080, !1003}
!1047 = !DIGlobalVariableExpression(var: !1048, expr: !DIExpression())
!1048 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1005, file: !1049, line: 752, type: !1050, isLocal: false, isDefinition: true, align: 16)
!1049 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 512, elements: !1051)
!1051 = !{!1052}
!1052 = !DISubrange(count: 32)
!1053 = !DIGlobalVariableExpression(var: !1054, expr: !DIExpression())
!1054 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !1005, file: !1049, line: 752, type: !1055, isLocal: false, isDefinition: true, align: 32)
!1055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1056)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 378, size: 192, elements: !1057)
!1057 = !{!1058, !1059, !1060, !1061, !1067, !1068}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1056, file: !442, line: 380, baseType: !337, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1056, file: !442, line: 382, baseType: !13, size: 32, offset: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1056, file: !442, line: 384, baseType: !13, size: 32, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1056, file: !442, line: 386, baseType: !1062, size: 32, offset: 96)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !442, line: 351, size: 16, elements: !1064)
!1064 = !{!1065, !1066}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1063, file: !442, line: 359, baseType: !185, size: 8)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1063, file: !442, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1056, file: !442, line: 388, baseType: !102, size: 32, offset: 128)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1056, file: !442, line: 396, baseType: !455, size: 32, offset: 160)
!1069 = !DIGlobalVariableExpression(var: !1070, expr: !DIExpression())
!1070 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !1005, file: !1049, line: 752, type: !1071, isLocal: true, isDefinition: true, align: 32)
!1071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1072)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !433, line: 51, size: 64, elements: !1073)
!1073 = !{!1074, !1079}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1072, file: !433, line: 60, baseType: !1075, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!103, !1078}
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1072, file: !433, line: 65, baseType: !1078, size: 32, offset: 32)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !1005, file: !1049, line: 752, type: !1063, isLocal: true, isDefinition: true, align: 8)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1014, line: 100, size: 224, elements: !1083)
!1083 = !{!1084, !1090, !1091, !1100, !1105, !1110, !1116}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1082, file: !1014, line: 101, baseType: !1085, size: 32)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1014, line: 76, baseType: !1086)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!103, !1078, !1089}
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1014, line: 56, baseType: !102)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1082, file: !1014, line: 102, baseType: !1085, size: 32, offset: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1082, file: !1014, line: 103, baseType: !1092, size: 32, offset: 64)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1014, line: 83, baseType: !1093)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!103, !1078, !1089, !1096, !102}
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1014, line: 72, baseType: !1097)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{null, !1078, !1089, !102}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1082, file: !1014, line: 104, baseType: !1101, size: 32, offset: 96)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1014, line: 79, baseType: !1102)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!103, !1078, !1089, !1045}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1082, file: !1014, line: 105, baseType: !1106, size: 32, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1014, line: 88, baseType: !1107)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!1013, !1078, !1089}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1082, file: !1014, line: 106, baseType: !1111, size: 32, offset: 160)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1014, line: 92, baseType: !1112)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!103, !1078, !1089, !1115}
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1014, line: 64, baseType: !102)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1082, file: !1014, line: 107, baseType: !1117, size: 32, offset: 192)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1014, line: 96, baseType: !1118)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!103, !1078, !1089, !102}
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1123, file: !1180, line: 603, type: !1182, isLocal: true, isDefinition: true, align: 32)
!1123 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1124, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1125, globals: !1177, splitDebugInlining: false, nameTableKind: None)
!1124 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!1125 = !{!102, !103, !1126}
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1129, line: 336, size: 160, elements: !1130)
!1129 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1130 = !{!1131, !1151, !1155, !1159, !1172}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1128, file: !1129, line: 365, baseType: !1132, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!103, !1135, !1150}
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 378, size: 192, elements: !1138)
!1138 = !{!1139, !1140, !1141, !1142, !1148, !1149}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1137, file: !442, line: 380, baseType: !337, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1137, file: !442, line: 382, baseType: !13, size: 32, offset: 32)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1137, file: !442, line: 384, baseType: !13, size: 32, offset: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1137, file: !442, line: 386, baseType: !1143, size: 32, offset: 96)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !442, line: 351, size: 16, elements: !1145)
!1145 = !{!1146, !1147}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1144, file: !442, line: 359, baseType: !185, size: 8)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1144, file: !442, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1137, file: !442, line: 388, baseType: !102, size: 32, offset: 128)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1137, file: !442, line: 396, baseType: !455, size: 32, offset: 160)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1128, file: !1129, line: 366, baseType: !1152, size: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!1153 = !DISubroutineType(types: !1154)
!1154 = !{null, !1135, !186}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1128, file: !1129, line: 374, baseType: !1156, size: 32, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 32)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!103, !1135}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1128, file: !1129, line: 377, baseType: !1160, size: 32, offset: 96)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!103, !1135, !1163}
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1129, line: 122, size: 64, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170, !1171}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1165, file: !1129, line: 123, baseType: !108, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1165, file: !1129, line: 124, baseType: !185, size: 8, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1165, file: !1129, line: 125, baseType: !185, size: 8, offset: 40)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1165, file: !1129, line: 126, baseType: !185, size: 8, offset: 48)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1165, file: !1129, line: 127, baseType: !185, size: 8, offset: 56)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1128, file: !1129, line: 379, baseType: !1173, size: 32, offset: 128)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!103, !1135, !1176}
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 32)
!1177 = !{!1121, !1178}
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1123, file: !1180, line: 38, type: !1181, isLocal: true, isDefinition: true)
!1180 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1135)
!1182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !433, line: 51, size: 64, elements: !1184)
!1184 = !{!1185, !1186}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1183, file: !433, line: 60, baseType: !1156, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1183, file: !433, line: 65, baseType: !1135, size: 32, offset: 32)
!1187 = !DIGlobalVariableExpression(var: !1188, expr: !DIExpression())
!1188 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1189, file: !1339, line: 762, type: !1435, isLocal: true, isDefinition: true)
!1189 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1190, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1191, retainedTypes: !1198, globals: !1336, splitDebugInlining: false, nameTableKind: None)
!1190 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!1191 = !{!30, !706, !712, !1192, !1013}
!1192 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !936, line: 43, baseType: !32, size: 32, elements: !1193)
!1193 = !{!1194, !1195, !1196, !1197}
!1194 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1195 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1196 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1197 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1198 = !{!102, !103, !1199, !1263, !1268, !753, !712, !706, !1273, !1274, !108, !1288, !1244, !277, !1296, !1297}
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !707, line: 523, size: 288, elements: !1202)
!1202 = !{!1203, !1222, !1226, !1230, !1234, !1235, !1236, !1240, !1259}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1201, file: !707, line: 524, baseType: !1204, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!103, !1207, !741, !742}
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 378, size: 192, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1220, !1221}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1209, file: !442, line: 380, baseType: !337, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1209, file: !442, line: 382, baseType: !13, size: 32, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1209, file: !442, line: 384, baseType: !13, size: 32, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1209, file: !442, line: 386, baseType: !1215, size: 32, offset: 96)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 32)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !442, line: 351, size: 16, elements: !1217)
!1217 = !{!1218, !1219}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1216, file: !442, line: 359, baseType: !185, size: 8)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1216, file: !442, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1209, file: !442, line: 388, baseType: !102, size: 32, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1209, file: !442, line: 396, baseType: !455, size: 32, offset: 160)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1201, file: !707, line: 530, baseType: !1223, size: 32, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!103, !1207, !747}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1201, file: !707, line: 532, baseType: !1227, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!103, !1207, !753, !748}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1201, file: !707, line: 535, baseType: !1231, size: 32, offset: 96)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!103, !1207, !753}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1201, file: !707, line: 537, baseType: !1231, size: 32, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1201, file: !707, line: 539, baseType: !1231, size: 32, offset: 160)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1201, file: !707, line: 541, baseType: !1237, size: 32, offset: 192)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!103, !1207, !741, !706, !712}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1201, file: !707, line: 544, baseType: !1241, size: 32, offset: 224)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!103, !1207, !1244, !131}
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !707, line: 478, size: 96, elements: !1246)
!1246 = !{!1247, !1253, !1258}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1245, file: !707, line: 482, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !773, line: 33, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !773, line: 29, size: 32, elements: !1250)
!1250 = !{!1251}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1249, file: !773, line: 30, baseType: !1252, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1245, file: !707, line: 485, baseType: !1254, size: 32, offset: 32)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !707, line: 464, baseType: !1255)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{null, !1207, !1244, !753}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1245, file: !707, line: 493, baseType: !753, size: 32, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1201, file: !707, line: 547, baseType: !1260, size: 32, offset: 256)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!108, !1207}
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1265)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !707, line: 428, size: 32, elements: !1266)
!1266 = !{!1267}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1265, file: !707, line: 434, baseType: !753, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !707, line: 441, size: 32, elements: !1271)
!1271 = !{!1272}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1270, file: !707, line: 447, baseType: !753, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !405, line: 314, baseType: !1276)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 303, size: 320, elements: !1277)
!1277 = !{!1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1276, file: !405, line: 305, baseType: !409, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1276, file: !405, line: 306, baseType: !409, size: 32, offset: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1276, file: !405, line: 307, baseType: !409, size: 32, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1276, file: !405, line: 308, baseType: !409, size: 32, offset: 96)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1276, file: !405, line: 309, baseType: !409, size: 32, offset: 128)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1276, file: !405, line: 310, baseType: !409, size: 32, offset: 160)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1276, file: !405, line: 311, baseType: !409, size: 32, offset: 192)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1276, file: !405, line: 312, baseType: !409, size: 32, offset: 224)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1276, file: !405, line: 313, baseType: !1287, size: 64, offset: 256)
!1287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 64, elements: !180)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !405, line: 325, baseType: !1290)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 320, size: 192, elements: !1291)
!1291 = !{!1292, !1293, !1294}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1290, file: !405, line: 322, baseType: !409, size: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1290, file: !405, line: 323, baseType: !409, size: 32, offset: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1290, file: !405, line: 324, baseType: !1295, size: 128, offset: 64)
!1295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 128, elements: !897)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1299)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1014, line: 100, size: 224, elements: !1300)
!1300 = !{!1301, !1306, !1307, !1316, !1321, !1326, !1331}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1299, file: !1014, line: 101, baseType: !1302, size: 32)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1014, line: 76, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!103, !1207, !1089}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1299, file: !1014, line: 102, baseType: !1302, size: 32, offset: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1299, file: !1014, line: 103, baseType: !1308, size: 32, offset: 64)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1014, line: 83, baseType: !1309)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 32)
!1310 = !DISubroutineType(types: !1311)
!1311 = !{!103, !1207, !1089, !1312, !102}
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1014, line: 72, baseType: !1313)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 32)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{null, !1207, !1089, !102}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1299, file: !1014, line: 104, baseType: !1317, size: 32, offset: 96)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1014, line: 79, baseType: !1318)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!103, !1207, !1089, !1045}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1299, file: !1014, line: 105, baseType: !1322, size: 32, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1014, line: 88, baseType: !1323)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 32)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!1013, !1207, !1089}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1299, file: !1014, line: 106, baseType: !1327, size: 32, offset: 160)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1014, line: 92, baseType: !1328)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 32)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!103, !1207, !1089, !1115}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1299, file: !1014, line: 107, baseType: !1332, size: 32, offset: 192)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1014, line: 96, baseType: !1333)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 32)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!103, !1207, !1089, !102}
!1336 = !{!1337, !1343, !1345, !1355, !1358, !1360, !1362, !1367, !1369, !1371, !1376, !1378, !1380, !1382, !1384, !1386, !1391, !1393, !1395, !1409, !1411, !1413, !1415, !1417, !1419, !1421, !1423, !1425, !1427, !1429, !1187, !1431, !1433, !1446, !1448, !1450, !1452}
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1189, file: !1339, line: 762, type: !1340, isLocal: false, isDefinition: true, align: 16)
!1339 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 128, elements: !1341)
!1341 = !{!1342}
!1342 = !DISubrange(count: 8)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1189, file: !1339, line: 762, type: !1208, isLocal: false, isDefinition: true, align: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1189, file: !1339, line: 762, type: !1347, isLocal: true, isDefinition: true, align: 32)
!1347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1348)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !433, line: 51, size: 64, elements: !1349)
!1349 = !{!1350, !1354}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1348, file: !433, line: 60, baseType: !1351, size: 32)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 32)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!103, !1207}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1348, file: !433, line: 65, baseType: !1207, size: 32, offset: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1189, file: !1339, line: 766, type: !1357, isLocal: false, isDefinition: true, align: 16)
!1357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 144, elements: !360)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1189, file: !1339, line: 766, type: !1208, isLocal: false, isDefinition: true, align: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1189, file: !1339, line: 766, type: !1347, isLocal: true, isDefinition: true, align: 32)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1189, file: !1339, line: 770, type: !1364, isLocal: false, isDefinition: true, align: 16)
!1364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 96, elements: !1365)
!1365 = !{!1366}
!1366 = !DISubrange(count: 6)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1189, file: !1339, line: 770, type: !1208, isLocal: false, isDefinition: true, align: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1189, file: !1339, line: 770, type: !1347, isLocal: true, isDefinition: true, align: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1189, file: !1339, line: 774, type: !1373, isLocal: false, isDefinition: true, align: 16)
!1373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 80, elements: !1374)
!1374 = !{!1375}
!1375 = !DISubrange(count: 5)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1189, file: !1339, line: 774, type: !1208, isLocal: false, isDefinition: true, align: 32)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1189, file: !1339, line: 774, type: !1347, isLocal: true, isDefinition: true, align: 32)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1189, file: !1339, line: 778, type: !1373, isLocal: false, isDefinition: true, align: 16)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1189, file: !1339, line: 778, type: !1208, isLocal: false, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1189, file: !1339, line: 778, type: !1347, isLocal: true, isDefinition: true, align: 32)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1189, file: !1339, line: 790, type: !1388, isLocal: false, isDefinition: true, align: 16)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 112, elements: !1389)
!1389 = !{!1390}
!1390 = !DISubrange(count: 7)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1189, file: !1339, line: 790, type: !1208, isLocal: false, isDefinition: true, align: 32)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1189, file: !1339, line: 790, type: !1347, isLocal: true, isDefinition: true, align: 32)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1189, file: !1339, line: 762, type: !1397, isLocal: true, isDefinition: true)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1398, line: 237, size: 128, elements: !1399)
!1398 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1399 = !{!1400, !1401, !1402}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1397, file: !1398, line: 239, baseType: !1270, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1397, file: !1398, line: 241, baseType: !1207, size: 32, offset: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1397, file: !1398, line: 243, baseType: !1403, size: 64, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !773, line: 40, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !773, line: 35, size: 64, elements: !1405)
!1405 = !{!1406, !1408}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1404, file: !773, line: 36, baseType: !1407, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1404, file: !773, line: 37, baseType: !1407, size: 32, offset: 32)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1189, file: !1339, line: 762, type: !1216, isLocal: true, isDefinition: true, align: 8)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1189, file: !1339, line: 766, type: !1397, isLocal: true, isDefinition: true)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1189, file: !1339, line: 766, type: !1216, isLocal: true, isDefinition: true, align: 8)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1189, file: !1339, line: 770, type: !1397, isLocal: true, isDefinition: true)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1189, file: !1339, line: 770, type: !1216, isLocal: true, isDefinition: true, align: 8)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1189, file: !1339, line: 774, type: !1397, isLocal: true, isDefinition: true)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1189, file: !1339, line: 774, type: !1216, isLocal: true, isDefinition: true, align: 8)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1189, file: !1339, line: 778, type: !1397, isLocal: true, isDefinition: true)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1189, file: !1339, line: 778, type: !1216, isLocal: true, isDefinition: true, align: 8)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1189, file: !1339, line: 790, type: !1397, isLocal: true, isDefinition: true)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1189, file: !1339, line: 790, type: !1216, isLocal: true, isDefinition: true, align: 8)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1189, file: !1339, line: 656, type: !1200, isLocal: true, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1189, file: !1339, line: 766, type: !1435, isLocal: true, isDefinition: true)
!1435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1436)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1398, line: 224, size: 160, elements: !1437)
!1437 = !{!1438, !1439, !1440, !1441}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1436, file: !1398, line: 226, baseType: !1265, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1436, file: !1398, line: 228, baseType: !1045, size: 32, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1436, file: !1398, line: 230, baseType: !103, size: 32, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1436, file: !1398, line: 231, baseType: !1442, size: 64, offset: 96)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1041, line: 343, size: 64, elements: !1443)
!1443 = !{!1444, !1445}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1442, file: !1041, line: 344, baseType: !108, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1442, file: !1041, line: 345, baseType: !108, size: 32, offset: 32)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1189, file: !1339, line: 770, type: !1435, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1189, file: !1339, line: 774, type: !1435, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1189, file: !1339, line: 778, type: !1435, isLocal: true, isDefinition: true)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1189, file: !1339, line: 790, type: !1435, isLocal: true, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1456, file: !1594, line: 44, type: !1689, isLocal: false, isDefinition: true)
!1456 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1457, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1458, retainedTypes: !1491, globals: !1591, splitDebugInlining: false, nameTableKind: None)
!1457 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!1458 = !{!30, !1459, !1466, !1473, !1480, !1486, !1013}
!1459 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1129, line: 47, baseType: !32, size: 32, elements: !1460)
!1460 = !{!1461, !1462, !1463, !1464, !1465}
!1461 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1462 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1463 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1464 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1465 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1466 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1129, line: 75, baseType: !32, size: 32, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472}
!1468 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1469 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1470 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1471 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1472 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1129, line: 92, baseType: !32, size: 32, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478, !1479}
!1475 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1476 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1477 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1478 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1479 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1480 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1129, line: 84, baseType: !32, size: 32, elements: !1481)
!1481 = !{!1482, !1483, !1484, !1485}
!1482 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1483 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1484 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1485 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1486 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1129, line: 107, baseType: !32, size: 32, elements: !1487)
!1487 = !{!1488, !1489, !1490}
!1488 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1489 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1490 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1491 = !{!102, !103, !1492, !186, !185, !1541, !108, !1089, !1552, !121}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1494)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1129, line: 336, size: 160, elements: !1495)
!1495 = !{!1496, !1515, !1519, !1523, !1536}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1494, file: !1129, line: 365, baseType: !1497, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!103, !1500, !1150}
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 378, size: 192, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1513, !1514}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1502, file: !442, line: 380, baseType: !337, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1502, file: !442, line: 382, baseType: !13, size: 32, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1502, file: !442, line: 384, baseType: !13, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1502, file: !442, line: 386, baseType: !1508, size: 32, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !442, line: 351, size: 16, elements: !1510)
!1510 = !{!1511, !1512}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1509, file: !442, line: 359, baseType: !185, size: 8)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1509, file: !442, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1502, file: !442, line: 388, baseType: !102, size: 32, offset: 128)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1502, file: !442, line: 396, baseType: !455, size: 32, offset: 160)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1494, file: !1129, line: 366, baseType: !1516, size: 32, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{null, !1500, !186}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1494, file: !1129, line: 374, baseType: !1520, size: 32, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!103, !1500}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1494, file: !1129, line: 377, baseType: !1524, size: 32, offset: 96)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!103, !1500, !1527}
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1129, line: 122, size: 64, elements: !1530)
!1530 = !{!1531, !1532, !1533, !1534, !1535}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1529, file: !1129, line: 123, baseType: !108, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1529, file: !1129, line: 124, baseType: !185, size: 8, offset: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1529, file: !1129, line: 125, baseType: !185, size: 8, offset: 40)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1529, file: !1129, line: 126, baseType: !185, size: 8, offset: 48)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1529, file: !1129, line: 127, baseType: !185, size: 8, offset: 56)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1494, file: !1129, line: 379, baseType: !1537, size: 32, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!103, !1500, !1540}
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !405, line: 505, baseType: !1543)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 496, size: 224, elements: !1544)
!1544 = !{!1545, !1546, !1547, !1548, !1549, !1550, !1551}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1543, file: !405, line: 498, baseType: !409, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1543, file: !405, line: 499, baseType: !409, size: 32, offset: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1543, file: !405, line: 500, baseType: !409, size: 32, offset: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1543, file: !405, line: 501, baseType: !409, size: 32, offset: 96)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1543, file: !405, line: 502, baseType: !409, size: 32, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1543, file: !405, line: 503, baseType: !409, size: 32, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1543, file: !405, line: 504, baseType: !409, size: 32, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1014, line: 100, size: 224, elements: !1555)
!1555 = !{!1556, !1561, !1562, !1571, !1576, !1581, !1586}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1554, file: !1014, line: 101, baseType: !1557, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1014, line: 76, baseType: !1558)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!103, !1500, !1089}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1554, file: !1014, line: 102, baseType: !1557, size: 32, offset: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1554, file: !1014, line: 103, baseType: !1563, size: 32, offset: 64)
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1014, line: 83, baseType: !1564)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!103, !1500, !1089, !1567, !102}
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1014, line: 72, baseType: !1568)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{null, !1500, !1089, !102}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1554, file: !1014, line: 104, baseType: !1572, size: 32, offset: 96)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1014, line: 79, baseType: !1573)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!103, !1500, !1089, !1045}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1554, file: !1014, line: 105, baseType: !1577, size: 32, offset: 128)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1014, line: 88, baseType: !1578)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!1013, !1500, !1089}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1554, file: !1014, line: 106, baseType: !1582, size: 32, offset: 160)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1014, line: 92, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!103, !1500, !1089, !1115}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1554, file: !1014, line: 107, baseType: !1587, size: 32, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1014, line: 96, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!103, !1500, !1089, !102}
!1591 = !{!1454, !1592, !1595, !1597, !1604, !1606, !1608, !1610, !1612, !1614, !1658, !1661, !1663, !1666, !1669, !1671, !1677, !1679, !1681, !1683, !1685, !1687}
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1456, file: !1594, line: 1914, type: !1340, isLocal: false, isDefinition: true, align: 16)
!1594 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1456, file: !1594, line: 1914, type: !1501, isLocal: false, isDefinition: true, align: 32)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1456, file: !1594, line: 1914, type: !1599, isLocal: true, isDefinition: true, align: 32)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !433, line: 51, size: 64, elements: !1601)
!1601 = !{!1602, !1603}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1600, file: !433, line: 60, baseType: !1520, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1600, file: !433, line: 65, baseType: !1500, size: 32, offset: 32)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1456, file: !1594, line: 1914, type: !1340, isLocal: false, isDefinition: true, align: 16)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1456, file: !1594, line: 1914, type: !1501, isLocal: false, isDefinition: true, align: 32)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1456, file: !1594, line: 1914, type: !1599, isLocal: true, isDefinition: true, align: 32)
!1610 = !DIGlobalVariableExpression(var: !1611, expr: !DIExpression())
!1611 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1456, file: !1594, line: 1914, type: !1509, isLocal: true, isDefinition: true, align: 8)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1456, file: !1594, line: 1914, type: !1509, isLocal: true, isDefinition: true, align: 8)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1456, file: !1594, line: 1914, type: !1616, isLocal: true, isDefinition: true)
!1616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1618, line: 22, size: 224, elements: !1619)
!1618 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1619 = !{!1620, !1621, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1617, file: !1618, line: 24, baseType: !1541, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1617, file: !1618, line: 26, baseType: !1622, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1624)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1041, line: 343, size: 64, elements: !1625)
!1625 = !{!1626, !1627}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1624, file: !1041, line: 344, baseType: !108, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1624, file: !1041, line: 345, baseType: !108, size: 32, offset: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1617, file: !1618, line: 28, baseType: !132, size: 32, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1617, file: !1618, line: 30, baseType: !131, size: 8, offset: 96)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1617, file: !1618, line: 32, baseType: !103, size: 32, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1617, file: !1618, line: 34, baseType: !131, size: 8, offset: 160)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1617, file: !1618, line: 36, baseType: !131, size: 8, offset: 168)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1617, file: !1618, line: 38, baseType: !131, size: 8, offset: 176)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1617, file: !1618, line: 40, baseType: !131, size: 8, offset: 184)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1617, file: !1618, line: 41, baseType: !1636, size: 32, offset: 192)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1639, line: 60, size: 64, elements: !1640)
!1639 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1640 = !{!1641, !1657}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1638, file: !1639, line: 69, baseType: !1642, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1639, line: 50, size: 64, elements: !1645)
!1645 = !{!1646, !1655, !1656}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1644, file: !1639, line: 52, baseType: !1647, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1649)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1650, line: 37, baseType: !1651)
!1650 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1650, line: 32, size: 64, elements: !1652)
!1652 = !{!1653, !1654}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1651, file: !1650, line: 34, baseType: !108, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1651, file: !1650, line: 36, baseType: !108, size: 32, offset: 32)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1644, file: !1639, line: 54, baseType: !185, size: 8, offset: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1644, file: !1639, line: 56, baseType: !185, size: 8, offset: 40)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1638, file: !1639, line: 71, baseType: !185, size: 8, offset: 32)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1456, file: !1594, line: 1914, type: !1660, isLocal: true, isDefinition: true)
!1660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1623, size: 64, elements: !619)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1456, file: !1594, line: 1914, type: !1637, isLocal: true, isDefinition: true)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1456, file: !1594, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1643, size: 64, elements: !619)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1456, file: !1594, line: 1914, type: !1668, isLocal: true, isDefinition: true)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1648, size: 128, elements: !180)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1456, file: !1594, line: 1539, type: !1493, isLocal: true, isDefinition: true)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1456, file: !1594, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1618, line: 74, size: 64, elements: !1674)
!1674 = !{!1675, !1676}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1673, file: !1618, line: 76, baseType: !108, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1673, file: !1618, line: 78, baseType: !1500, size: 32, offset: 32)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1456, file: !1594, line: 1914, type: !1616, isLocal: true, isDefinition: true)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1456, file: !1594, line: 1914, type: !1660, isLocal: true, isDefinition: true)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1456, file: !1594, line: 1914, type: !1637, isLocal: true, isDefinition: true)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1456, file: !1594, line: 1914, type: !1665, isLocal: true, isDefinition: true)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1456, file: !1594, line: 1914, type: !1668, isLocal: true, isDefinition: true)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1456, file: !1594, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1690)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !1691)
!1691 = !{!1692, !1693}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1690, file: !384, line: 17, baseType: !337, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1690, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1696, file: !1774, line: 65, type: !409, isLocal: true, isDefinition: true)
!1696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1698, retainedTypes: !1699, globals: !1771, splitDebugInlining: false, nameTableKind: None)
!1697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!1698 = !{!826}
!1699 = !{!104, !1700, !331, !185, !108, !1708, !1739}
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !637, line: 712, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 706, size: 128, elements: !1703)
!1703 = !{!1704, !1705, !1706, !1707}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1702, file: !637, line: 708, baseType: !409, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1702, file: !637, line: 709, baseType: !409, size: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1702, file: !637, line: 710, baseType: !409, size: 32, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1702, file: !637, line: 711, baseType: !641, size: 32, offset: 96)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !637, line: 360, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 345, size: 28704, elements: !1711)
!1711 = !{!1712, !1714, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1729, !1734, !1738}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1710, file: !637, line: 347, baseType: !1713, size: 256)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 256, elements: !1341)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1710, file: !637, line: 348, baseType: !1715, size: 768, offset: 256)
!1715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !1716)
!1716 = !{!1717}
!1717 = !DISubrange(count: 24)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1710, file: !637, line: 349, baseType: !1713, size: 256, offset: 1024)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1710, file: !637, line: 350, baseType: !1715, size: 768, offset: 1280)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1710, file: !637, line: 351, baseType: !1713, size: 256, offset: 2048)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1710, file: !637, line: 352, baseType: !1715, size: 768, offset: 2304)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1710, file: !637, line: 353, baseType: !1713, size: 256, offset: 3072)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1710, file: !637, line: 354, baseType: !1715, size: 768, offset: 3328)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1710, file: !637, line: 355, baseType: !1713, size: 256, offset: 4096)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1710, file: !637, line: 356, baseType: !1726, size: 1792, offset: 4352)
!1726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !1727)
!1727 = !{!1728}
!1728 = !DISubrange(count: 56)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1710, file: !637, line: 357, baseType: !1730, size: 1920, offset: 6144)
!1730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1731, size: 1920, elements: !1732)
!1731 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1732 = !{!1733}
!1733 = !DISubrange(count: 240)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1710, file: !637, line: 358, baseType: !1735, size: 20608, offset: 8064)
!1735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !1736)
!1736 = !{!1737}
!1737 = !DISubrange(count: 644)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1710, file: !637, line: 359, baseType: !409, size: 32, offset: 28672)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !637, line: 402, baseType: !1741)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 379, size: 1120, elements: !1742)
!1742 = !{!1743, !1744, !1745, !1746, !1747, !1748, !1749, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1762, !1763, !1764, !1766, !1768, !1770}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1741, file: !637, line: 381, baseType: !641, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1741, file: !637, line: 382, baseType: !409, size: 32, offset: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1741, file: !637, line: 383, baseType: !409, size: 32, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1741, file: !637, line: 384, baseType: !409, size: 32, offset: 96)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1741, file: !637, line: 385, baseType: !409, size: 32, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1741, file: !637, line: 386, baseType: !409, size: 32, offset: 160)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1741, file: !637, line: 387, baseType: !1750, size: 96, offset: 192)
!1750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1731, size: 96, elements: !1751)
!1751 = !{!1752}
!1752 = !DISubrange(count: 12)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1741, file: !637, line: 388, baseType: !409, size: 32, offset: 288)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1741, file: !637, line: 389, baseType: !409, size: 32, offset: 320)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1741, file: !637, line: 390, baseType: !409, size: 32, offset: 352)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1741, file: !637, line: 391, baseType: !409, size: 32, offset: 384)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1741, file: !637, line: 392, baseType: !409, size: 32, offset: 416)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1741, file: !637, line: 393, baseType: !409, size: 32, offset: 448)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1741, file: !637, line: 394, baseType: !409, size: 32, offset: 480)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1741, file: !637, line: 395, baseType: !1761, size: 64, offset: 512)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, size: 64, elements: !180)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1741, file: !637, line: 396, baseType: !641, size: 32, offset: 576)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1741, file: !637, line: 397, baseType: !641, size: 32, offset: 608)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1741, file: !637, line: 398, baseType: !1765, size: 128, offset: 640)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, size: 128, elements: !897)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1741, file: !637, line: 399, baseType: !1767, size: 160, offset: 768)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, size: 160, elements: !1374)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1741, file: !637, line: 400, baseType: !1769, size: 160, offset: 928)
!1769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !1374)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1741, file: !637, line: 401, baseType: !409, size: 32, offset: 1088)
!1771 = !{!1772, !1798, !1801, !1803, !1805, !1694}
!1772 = !DIGlobalVariableExpression(var: !1773, expr: !DIExpression())
!1773 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1696, file: !1774, line: 285, type: !1775, isLocal: true, isDefinition: true, align: 32)
!1774 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !433, line: 51, size: 64, elements: !1777)
!1777 = !{!1778, !1797}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1776, file: !433, line: 60, baseType: !1779, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 32)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!103, !1782}
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1784)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 378, size: 192, elements: !1785)
!1785 = !{!1786, !1787, !1788, !1789, !1795, !1796}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1784, file: !442, line: 380, baseType: !337, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1784, file: !442, line: 382, baseType: !13, size: 32, offset: 32)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1784, file: !442, line: 384, baseType: !13, size: 32, offset: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1784, file: !442, line: 386, baseType: !1790, size: 32, offset: 96)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !442, line: 351, size: 16, elements: !1792)
!1792 = !{!1793, !1794}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1791, file: !442, line: 359, baseType: !185, size: 8)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1791, file: !442, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1784, file: !442, line: 388, baseType: !102, size: 32, offset: 128)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1784, file: !442, line: 396, baseType: !455, size: 32, offset: 160)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1776, file: !433, line: 65, baseType: !1782, size: 32, offset: 32)
!1798 = !DIGlobalVariableExpression(var: !1799, expr: !DIExpression())
!1799 = distinct !DIGlobalVariable(name: "lock", scope: !1696, file: !1774, line: 34, type: !1800, isLocal: true, isDefinition: true)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "last_load", scope: !1696, file: !1774, line: 36, type: !108, isLocal: true, isDefinition: true)
!1803 = !DIGlobalVariableExpression(var: !1804, expr: !DIExpression())
!1804 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1696, file: !1774, line: 48, type: !108, isLocal: true, isDefinition: true)
!1805 = !DIGlobalVariableExpression(var: !1806, expr: !DIExpression())
!1806 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1696, file: !1774, line: 54, type: !108, isLocal: true, isDefinition: true)
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1809, file: !1890, line: 22, type: !1892, isLocal: true, isDefinition: true)
!1809 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1810, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !705, retainedTypes: !1811, globals: !1887, splitDebugInlining: false, nameTableKind: None)
!1810 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!1811 = !{!1812, !1876, !1881, !753, !712, !706, !1886, !102}
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !707, line: 523, size: 288, elements: !1815)
!1815 = !{!1816, !1835, !1839, !1843, !1847, !1848, !1849, !1853, !1872}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1814, file: !707, line: 524, baseType: !1817, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!103, !1820, !741, !742}
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 378, size: 192, elements: !1823)
!1823 = !{!1824, !1825, !1826, !1827, !1833, !1834}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1822, file: !442, line: 380, baseType: !337, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1822, file: !442, line: 382, baseType: !13, size: 32, offset: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1822, file: !442, line: 384, baseType: !13, size: 32, offset: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1822, file: !442, line: 386, baseType: !1828, size: 32, offset: 96)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !442, line: 351, size: 16, elements: !1830)
!1830 = !{!1831, !1832}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1829, file: !442, line: 359, baseType: !185, size: 8)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1829, file: !442, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1822, file: !442, line: 388, baseType: !102, size: 32, offset: 128)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1822, file: !442, line: 396, baseType: !455, size: 32, offset: 160)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1814, file: !707, line: 530, baseType: !1836, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!103, !1820, !747}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1814, file: !707, line: 532, baseType: !1840, size: 32, offset: 64)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!103, !1820, !753, !748}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1814, file: !707, line: 535, baseType: !1844, size: 32, offset: 96)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!103, !1820, !753}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1814, file: !707, line: 537, baseType: !1844, size: 32, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1814, file: !707, line: 539, baseType: !1844, size: 32, offset: 160)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1814, file: !707, line: 541, baseType: !1850, size: 32, offset: 192)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!103, !1820, !741, !706, !712}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1814, file: !707, line: 544, baseType: !1854, size: 32, offset: 224)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 32)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!103, !1820, !1857, !131}
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !707, line: 478, size: 96, elements: !1859)
!1859 = !{!1860, !1866, !1871}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1858, file: !707, line: 482, baseType: !1861, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !773, line: 33, baseType: !1862)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !773, line: 29, size: 32, elements: !1863)
!1863 = !{!1864}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1862, file: !773, line: 30, baseType: !1865, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1858, file: !707, line: 485, baseType: !1867, size: 32, offset: 32)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !707, line: 464, baseType: !1868)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{null, !1820, !1857, !753}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1858, file: !707, line: 493, baseType: !753, size: 32, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1814, file: !707, line: 547, baseType: !1873, size: 32, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!108, !1820}
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !707, line: 428, size: 32, elements: !1879)
!1879 = !{!1880}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1878, file: !707, line: 434, baseType: !753, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1883)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !707, line: 441, size: 32, elements: !1884)
!1884 = !{!1885}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1883, file: !707, line: 447, baseType: !753, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1887 = !{!1888, !1807}
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1889 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1809, file: !1890, line: 37, type: !1891, isLocal: true, isDefinition: true)
!1890 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!1892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1893, size: 352, elements: !982)
!1893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression())
!1895 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1896, file: !1920, line: 129, type: !1928, isLocal: false, isDefinition: true)
!1896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1898, globals: !1917, splitDebugInlining: false, nameTableKind: None)
!1897 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!1898 = !{!1899}
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 386, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 370, size: 448, elements: !1902)
!1902 = !{!1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1901, file: !405, line: 372, baseType: !409, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1901, file: !405, line: 373, baseType: !409, size: 32, offset: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1901, file: !405, line: 374, baseType: !409, size: 32, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1901, file: !405, line: 375, baseType: !409, size: 32, offset: 96)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1901, file: !405, line: 376, baseType: !409, size: 32, offset: 128)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1901, file: !405, line: 377, baseType: !409, size: 32, offset: 160)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1901, file: !405, line: 378, baseType: !409, size: 32, offset: 192)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1901, file: !405, line: 379, baseType: !409, size: 32, offset: 224)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1901, file: !405, line: 380, baseType: !409, size: 32, offset: 256)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1901, file: !405, line: 381, baseType: !409, size: 32, offset: 288)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1901, file: !405, line: 382, baseType: !409, size: 32, offset: 320)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1901, file: !405, line: 383, baseType: !409, size: 32, offset: 352)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1901, file: !405, line: 384, baseType: !409, size: 32, offset: 384)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1901, file: !405, line: 385, baseType: !409, size: 32, offset: 416)
!1917 = !{!1918, !1921, !1925, !1894}
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1896, file: !1920, line: 126, type: !108, isLocal: false, isDefinition: true)
!1920 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1921 = !DIGlobalVariableExpression(var: !1922, expr: !DIExpression())
!1922 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1896, file: !1920, line: 127, type: !1923, isLocal: false, isDefinition: true)
!1923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1924, size: 72, elements: !360)
!1924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1925 = !DIGlobalVariableExpression(var: !1926, expr: !DIExpression())
!1926 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1896, file: !1920, line: 128, type: !1927, isLocal: false, isDefinition: true)
!1927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1924, size: 128, elements: !941)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1924, size: 64, elements: !1341)
!1929 = !DIGlobalVariableExpression(var: !1930, expr: !DIExpression())
!1930 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1931, file: !1934, line: 23, type: !1935, isLocal: false, isDefinition: true)
!1931 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1932, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !1933, splitDebugInlining: false, nameTableKind: None)
!1932 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!1933 = !{!1929}
!1934 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1938, file: !1942, line: 37, type: !2191, isLocal: false, isDefinition: true)
!1938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1939, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1940, retainedTypes: !1949, globals: !2022, splitDebugInlining: false, nameTableKind: None)
!1939 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!1940 = !{!1941, !30, !826}
!1941 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1942, line: 63, baseType: !32, size: 32, elements: !1943)
!1942 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1943 = !{!1944, !1945, !1946, !1947, !1948}
!1944 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1945 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1946 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1947 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1948 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1949 = !{!132, !102, !103, !1950, !277, !108, !1980, !331, !185, !2005}
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1953, line: 51, size: 64, elements: !1954)
!1953 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1954 = !{!1955, !1975}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1952, file: !1953, line: 52, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1953, line: 38, baseType: !1957)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 32)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{!103, !1960, !379, !121}
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1962)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 378, size: 192, elements: !1963)
!1963 = !{!1964, !1965, !1966, !1967, !1973, !1974}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1962, file: !442, line: 380, baseType: !337, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1962, file: !442, line: 382, baseType: !13, size: 32, offset: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1962, file: !442, line: 384, baseType: !13, size: 32, offset: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1962, file: !442, line: 386, baseType: !1968, size: 32, offset: 96)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !442, line: 351, size: 16, elements: !1970)
!1970 = !{!1971, !1972}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1969, file: !442, line: 359, baseType: !185, size: 8)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1969, file: !442, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1962, file: !442, line: 388, baseType: !102, size: 32, offset: 128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1962, file: !442, line: 396, baseType: !455, size: 32, offset: 160)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1952, file: !1953, line: 53, baseType: !1976, size: 32, offset: 32)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1953, line: 47, baseType: !1977)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{!103, !1960, !379, !121, !108}
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !637, line: 402, baseType: !1982)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 379, size: 1120, elements: !1983)
!1983 = !{!1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1982, file: !637, line: 381, baseType: !641, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1982, file: !637, line: 382, baseType: !409, size: 32, offset: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1982, file: !637, line: 383, baseType: !409, size: 32, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1982, file: !637, line: 384, baseType: !409, size: 32, offset: 96)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1982, file: !637, line: 385, baseType: !409, size: 32, offset: 128)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1982, file: !637, line: 386, baseType: !409, size: 32, offset: 160)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1982, file: !637, line: 387, baseType: !1750, size: 96, offset: 192)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1982, file: !637, line: 388, baseType: !409, size: 32, offset: 288)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1982, file: !637, line: 389, baseType: !409, size: 32, offset: 320)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1982, file: !637, line: 390, baseType: !409, size: 32, offset: 352)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1982, file: !637, line: 391, baseType: !409, size: 32, offset: 384)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1982, file: !637, line: 392, baseType: !409, size: 32, offset: 416)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1982, file: !637, line: 393, baseType: !409, size: 32, offset: 448)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1982, file: !637, line: 394, baseType: !409, size: 32, offset: 480)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1982, file: !637, line: 395, baseType: !1761, size: 64, offset: 512)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1982, file: !637, line: 396, baseType: !641, size: 32, offset: 576)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1982, file: !637, line: 397, baseType: !641, size: 32, offset: 608)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1982, file: !637, line: 398, baseType: !1765, size: 128, offset: 640)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1982, file: !637, line: 399, baseType: !1767, size: 160, offset: 768)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1982, file: !637, line: 400, baseType: !1769, size: 160, offset: 928)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1982, file: !637, line: 401, baseType: !409, size: 32, offset: 1088)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !637, line: 360, baseType: !2007)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 345, size: 28704, elements: !2008)
!2008 = !{!2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2007, file: !637, line: 347, baseType: !1713, size: 256)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2007, file: !637, line: 348, baseType: !1715, size: 768, offset: 256)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2007, file: !637, line: 349, baseType: !1713, size: 256, offset: 1024)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2007, file: !637, line: 350, baseType: !1715, size: 768, offset: 1280)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2007, file: !637, line: 351, baseType: !1713, size: 256, offset: 2048)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2007, file: !637, line: 352, baseType: !1715, size: 768, offset: 2304)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2007, file: !637, line: 353, baseType: !1713, size: 256, offset: 3072)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2007, file: !637, line: 354, baseType: !1715, size: 768, offset: 3328)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2007, file: !637, line: 355, baseType: !1713, size: 256, offset: 4096)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2007, file: !637, line: 356, baseType: !1726, size: 1792, offset: 4352)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2007, file: !637, line: 357, baseType: !1730, size: 1920, offset: 6144)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2007, file: !637, line: 358, baseType: !1735, size: 20608, offset: 8064)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2007, file: !637, line: 359, baseType: !409, size: 32, offset: 28672)
!2022 = !{!1936, !2023, !2145, !2151, !2153, !2156, !2161, !2163, !2168}
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "_kernel", scope: !1938, file: !1942, line: 40, type: !2025, isLocal: false, isDefinition: true)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !141, line: 158, size: 288, elements: !2026)
!2026 = !{!2027, !2140}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2025, file: !141, line: 159, baseType: !2028, size: 192)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2029, size: 192, elements: !619)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !141, line: 100, size: 192, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2134, !2135, !2136, !2137}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2029, file: !141, line: 102, baseType: !108, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2029, file: !141, line: 105, baseType: !277, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2029, file: !141, line: 108, baseType: !2034, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2036)
!2036 = !{!2037, !2095, !2107, !2108, !2109, !2110, !2116, !2129}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2035, file: !163, line: 247, baseType: !2038, size: 384)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2039)
!2039 = !{!2040, !2064, !2071, !2072, !2073, !2082, !2083, !2084}
!2040 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !163, line: 60, baseType: !2041, size: 64)
!2041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !163, line: 60, size: 64, elements: !2042)
!2042 = !{!2043, !2058}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2041, file: !163, line: 61, baseType: !2044, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2046)
!2046 = !{!2047, !2053}
!2047 = !DIDerivedType(tag: DW_TAG_member, scope: !2045, file: !146, line: 38, baseType: !2048, size: 32)
!2048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2045, file: !146, line: 38, size: 32, elements: !2049)
!2049 = !{!2050, !2052}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2048, file: !146, line: 39, baseType: !2051, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2048, file: !146, line: 40, baseType: !2051, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, scope: !2045, file: !146, line: 42, baseType: !2054, size: 32, offset: 32)
!2054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2045, file: !146, line: 42, size: 32, elements: !2055)
!2055 = !{!2056, !2057}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2054, file: !146, line: 43, baseType: !2051, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2054, file: !146, line: 44, baseType: !2051, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2041, file: !163, line: 62, baseType: !2059, size: 64)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2060)
!2060 = !{!2061}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2059, file: !175, line: 50, baseType: !2062, size: 64)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2063, size: 64, elements: !180)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2038, file: !163, line: 68, baseType: !2065, size: 32, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2067)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2068)
!2068 = !{!2069}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2067, file: !141, line: 232, baseType: !2070, size: 64)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2045)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2038, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2038, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !163, line: 90, baseType: !2074, size: 16, offset: 112)
!2074 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !163, line: 90, size: 16, elements: !2075)
!2075 = !{!2076, !2081}
!2076 = !DIDerivedType(tag: DW_TAG_member, scope: !2074, file: !163, line: 91, baseType: !2077, size: 16)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2074, file: !163, line: 91, size: 16, elements: !2078)
!2078 = !{!2079, !2080}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2077, file: !163, line: 96, baseType: !195, size: 8)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2077, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2074, file: !163, line: 100, baseType: !121, size: 16)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2038, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2038, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2038, file: !163, line: 131, baseType: !2085, size: 192, offset: 192)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2086)
!2086 = !{!2087, !2088, !2094}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2085, file: !141, line: 245, baseType: !2044, size: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2085, file: !141, line: 246, baseType: !2089, size: 32, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2090)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{null, !2093}
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2085, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2035, file: !163, line: 250, baseType: !2096, size: 288, offset: 384)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2097)
!2097 = !{!2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2096, file: !214, line: 26, baseType: !108, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2096, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2096, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2096, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2096, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2096, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2096, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2096, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2096, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2035, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2035, file: !163, line: 256, baseType: !2066, size: 64, offset: 704)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2035, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2035, file: !163, line: 300, baseType: !2111, size: 96, offset: 800)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2112)
!2112 = !{!2113, !2114, !2115}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2111, file: !163, line: 153, baseType: !22, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2111, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2111, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2035, file: !163, line: 325, baseType: !2117, size: 32, offset: 896)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 32)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2119)
!2119 = !{!2120, !2126, !2127}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2118, file: !137, line: 5074, baseType: !2121, size: 96)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2122)
!2122 = !{!2123, !2124, !2125}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2121, file: !240, line: 57, baseType: !243, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2121, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2121, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2118, file: !137, line: 5075, baseType: !2066, size: 64, offset: 96)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2118, file: !137, line: 5076, baseType: !2128, offset: 160)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2035, file: !163, line: 343, baseType: !2130, size: 64, offset: 928)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2131)
!2131 = !{!2132, !2133}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2130, file: !214, line: 63, baseType: !108, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2130, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2029, file: !141, line: 111, baseType: !2034, size: 32, offset: 96)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2029, file: !141, line: 124, baseType: !103, size: 32, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2029, file: !141, line: 127, baseType: !185, size: 8, offset: 160)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2029, file: !141, line: 153, baseType: !2138, offset: 168)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2139, line: 33, elements: !251)
!2139 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2025, file: !141, line: 170, baseType: !2141, size: 96, offset: 192)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !2142)
!2142 = !{!2143, !2144}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2141, file: !141, line: 86, baseType: !2034, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2141, file: !141, line: 90, baseType: !2070, size: 64, offset: 32)
!2145 = !DIGlobalVariableExpression(var: !2146, expr: !DIExpression())
!2146 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1938, file: !1942, line: 43, type: !2147, isLocal: false, isDefinition: true, align: 512)
!2147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2148, size: 8704, elements: !346)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !2149)
!2149 = !{!2150}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2148, file: !316, line: 48, baseType: !278, size: 8)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1938, file: !1942, line: 44, type: !2035, isLocal: false, isDefinition: true)
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1938, file: !1942, line: 48, type: !2155, isLocal: false, isDefinition: true)
!2155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2035, size: 1024, elements: !619)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1938, file: !1942, line: 86, type: !2158, isLocal: false, isDefinition: true, align: 512)
!2158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2148, size: 16896, elements: !2159)
!2159 = !{!620, !2160}
!2160 = !DISubrange(count: 2112)
!2161 = !DIGlobalVariableExpression(var: !2162, expr: !DIExpression())
!2162 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1938, file: !1942, line: 217, type: !131, isLocal: false, isDefinition: true)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1938, file: !1942, line: 50, type: !2165, isLocal: true, isDefinition: true, align: 512)
!2165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2148, size: 2560, elements: !2166)
!2166 = !{!620, !2167}
!2167 = !DISubrange(count: 320)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "levels", scope: !2170, file: !1942, line: 232, type: !2190, isLocal: true, isDefinition: true)
!2170 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1942, file: !1942, line: 230, type: !2171, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !2173)
!2171 = !DISubroutineType(types: !2172)
!2172 = !{null, !1941}
!2173 = !{!2174, !2175, !2185, !2189}
!2174 = !DILocalVariable(name: "level", arg: 1, scope: !2170, file: !1942, line: 230, type: !1941)
!2175 = !DILocalVariable(name: "entry", scope: !2170, file: !1942, line: 244, type: !2176)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !433, line: 51, size: 64, elements: !2179)
!2179 = !{!2180, !2184}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2178, file: !433, line: 60, baseType: !2181, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 32)
!2182 = !DISubroutineType(types: !2183)
!2183 = !{!103, !1960}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2178, file: !433, line: 65, baseType: !1960, size: 32, offset: 32)
!2185 = !DILocalVariable(name: "dev", scope: !2186, file: !1942, line: 247, type: !1960)
!2186 = distinct !DILexicalBlock(scope: !2187, file: !1942, line: 246, column: 64)
!2187 = distinct !DILexicalBlock(scope: !2188, file: !1942, line: 246, column: 2)
!2188 = distinct !DILexicalBlock(scope: !2170, file: !1942, line: 246, column: 2)
!2189 = !DILocalVariable(name: "rc", scope: !2186, file: !1942, line: 248, type: !103)
!2190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2176, size: 192, elements: !1365)
!2191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !2193)
!2193 = !{!2194, !2195}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2192, file: !384, line: 17, baseType: !337, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2192, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(name: "states_str", scope: !2198, file: !2199, line: 276, type: !2320, isLocal: true, isDefinition: true)
!2198 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2199, file: !2199, line: 271, type: !2200, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2311)
!2199 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2200 = !DISubroutineType(types: !2201)
!2201 = !{!337, !2202, !277, !132}
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2203)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2205)
!2205 = !{!2206, !2264, !2276, !2277, !2278, !2279, !2285, !2298}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2204, file: !163, line: 247, baseType: !2207, size: 384)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2208)
!2208 = !{!2209, !2233, !2240, !2241, !2242, !2251, !2252, !2253}
!2209 = !DIDerivedType(tag: DW_TAG_member, scope: !2207, file: !163, line: 60, baseType: !2210, size: 64)
!2210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2207, file: !163, line: 60, size: 64, elements: !2211)
!2211 = !{!2212, !2227}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2210, file: !163, line: 61, baseType: !2213, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2215)
!2215 = !{!2216, !2222}
!2216 = !DIDerivedType(tag: DW_TAG_member, scope: !2214, file: !146, line: 38, baseType: !2217, size: 32)
!2217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2214, file: !146, line: 38, size: 32, elements: !2218)
!2218 = !{!2219, !2221}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2217, file: !146, line: 39, baseType: !2220, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2217, file: !146, line: 40, baseType: !2220, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, scope: !2214, file: !146, line: 42, baseType: !2223, size: 32, offset: 32)
!2223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2214, file: !146, line: 42, size: 32, elements: !2224)
!2224 = !{!2225, !2226}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2223, file: !146, line: 43, baseType: !2220, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2223, file: !146, line: 44, baseType: !2220, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2210, file: !163, line: 62, baseType: !2228, size: 64)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2229)
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2228, file: !175, line: 50, baseType: !2231, size: 64)
!2231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2232, size: 64, elements: !180)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2207, file: !163, line: 68, baseType: !2234, size: 32, offset: 64)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2236)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2237)
!2237 = !{!2238}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2236, file: !141, line: 232, baseType: !2239, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2214)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2207, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2207, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2242 = !DIDerivedType(tag: DW_TAG_member, scope: !2207, file: !163, line: 90, baseType: !2243, size: 16, offset: 112)
!2243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2207, file: !163, line: 90, size: 16, elements: !2244)
!2244 = !{!2245, !2250}
!2245 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !163, line: 91, baseType: !2246, size: 16)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2243, file: !163, line: 91, size: 16, elements: !2247)
!2247 = !{!2248, !2249}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2246, file: !163, line: 96, baseType: !195, size: 8)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2246, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2243, file: !163, line: 100, baseType: !121, size: 16)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2207, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2207, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2207, file: !163, line: 131, baseType: !2254, size: 192, offset: 192)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2255)
!2255 = !{!2256, !2257, !2263}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2254, file: !141, line: 245, baseType: !2213, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2254, file: !141, line: 246, baseType: !2258, size: 32, offset: 64)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2259)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{null, !2262}
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2254, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2204, file: !163, line: 250, baseType: !2265, size: 288, offset: 384)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2266)
!2266 = !{!2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2265, file: !214, line: 26, baseType: !108, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2265, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2265, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2265, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2265, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2265, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2265, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2265, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2265, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2204, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2204, file: !163, line: 256, baseType: !2235, size: 64, offset: 704)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2204, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2204, file: !163, line: 300, baseType: !2280, size: 96, offset: 800)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2281)
!2281 = !{!2282, !2283, !2284}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2280, file: !163, line: 153, baseType: !22, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2280, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2280, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2204, file: !163, line: 325, baseType: !2286, size: 32, offset: 896)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 32)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2288)
!2288 = !{!2289, !2295, !2296}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2287, file: !137, line: 5074, baseType: !2290, size: 96)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2291)
!2291 = !{!2292, !2293, !2294}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2290, file: !240, line: 57, baseType: !243, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2290, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2290, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2287, file: !137, line: 5075, baseType: !2235, size: 64, offset: 96)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2287, file: !137, line: 5076, baseType: !2297, offset: 160)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2204, file: !163, line: 343, baseType: !2299, size: 64, offset: 928)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2300)
!2300 = !{!2301, !2302}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2299, file: !214, line: 63, baseType: !108, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2299, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2303 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2304, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2305, globals: !2307, splitDebugInlining: false, nameTableKind: None)
!2304 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2305 = !{!102, !337, !104, !185, !103, !2306, !24, !132, !277, !22, !108, !109}
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2307 = !{!2196, !2308}
!2308 = !DIGlobalVariableExpression(var: !2309, expr: !DIExpression())
!2309 = distinct !DIGlobalVariable(name: "states_sz", scope: !2198, file: !2199, line: 279, type: !2310, isLocal: true, isDefinition: true)
!2310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 256, elements: !1341)
!2311 = !{!2312, !2313, !2314, !2315, !2316, !2317, !2318}
!2312 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2198, file: !2199, line: 271, type: !2202)
!2313 = !DILocalVariable(name: "buf", arg: 2, scope: !2198, file: !2199, line: 271, type: !277)
!2314 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2198, file: !2199, line: 271, type: !132)
!2315 = !DILocalVariable(name: "off", scope: !2198, file: !2199, line: 273, type: !132)
!2316 = !DILocalVariable(name: "bit", scope: !2198, file: !2199, line: 274, type: !185)
!2317 = !DILocalVariable(name: "thread_state", scope: !2198, file: !2199, line: 275, type: !185)
!2318 = !DILocalVariable(name: "index", scope: !2319, file: !2199, line: 293, type: !185)
!2319 = distinct !DILexicalBlock(scope: !2198, file: !2199, line: 293, column: 2)
!2320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 256, elements: !1341)
!2321 = !DIGlobalVariableExpression(var: !2322, expr: !DIExpression())
!2322 = distinct !DIGlobalVariable(name: "lock", scope: !2323, file: !2428, line: 47, type: !2421, isLocal: true, isDefinition: true)
!2323 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2324, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2325, globals: !2427, splitDebugInlining: false, nameTableKind: None)
!2324 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2325 = !{!131, !102, !103, !2326, !2341}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2328)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2329)
!2329 = !{!2330, !2336}
!2330 = !DIDerivedType(tag: DW_TAG_member, scope: !2328, file: !146, line: 38, baseType: !2331, size: 32)
!2331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2328, file: !146, line: 38, size: 32, elements: !2332)
!2332 = !{!2333, !2335}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2331, file: !146, line: 39, baseType: !2334, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2331, file: !146, line: 40, baseType: !2334, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, scope: !2328, file: !146, line: 42, baseType: !2337, size: 32, offset: 32)
!2337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2328, file: !146, line: 42, size: 32, elements: !2338)
!2338 = !{!2339, !2340}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2337, file: !146, line: 43, baseType: !2334, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2337, file: !146, line: 44, baseType: !2334, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2343)
!2343 = !{!2344, !2388, !2400, !2401, !2402, !2403, !2409, !2422}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2342, file: !163, line: 247, baseType: !2345, size: 384)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2346)
!2346 = !{!2347, !2357, !2364, !2365, !2366, !2375, !2376, !2377}
!2347 = !DIDerivedType(tag: DW_TAG_member, scope: !2345, file: !163, line: 60, baseType: !2348, size: 64)
!2348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2345, file: !163, line: 60, size: 64, elements: !2349)
!2349 = !{!2350, !2351}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2348, file: !163, line: 61, baseType: !2327, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2348, file: !163, line: 62, baseType: !2352, size: 64)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2353)
!2353 = !{!2354}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2352, file: !175, line: 50, baseType: !2355, size: 64)
!2355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2356, size: 64, elements: !180)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2345, file: !163, line: 68, baseType: !2358, size: 32, offset: 64)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2360)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2361)
!2361 = !{!2362}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2360, file: !141, line: 232, baseType: !2363, size: 64)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2328)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2345, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2345, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2366 = !DIDerivedType(tag: DW_TAG_member, scope: !2345, file: !163, line: 90, baseType: !2367, size: 16, offset: 112)
!2367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2345, file: !163, line: 90, size: 16, elements: !2368)
!2368 = !{!2369, !2374}
!2369 = !DIDerivedType(tag: DW_TAG_member, scope: !2367, file: !163, line: 91, baseType: !2370, size: 16)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2367, file: !163, line: 91, size: 16, elements: !2371)
!2371 = !{!2372, !2373}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2370, file: !163, line: 96, baseType: !195, size: 8)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2370, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2367, file: !163, line: 100, baseType: !121, size: 16)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2345, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2345, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2345, file: !163, line: 131, baseType: !2378, size: 192, offset: 192)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2379)
!2379 = !{!2380, !2381, !2387}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2378, file: !141, line: 245, baseType: !2327, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2378, file: !141, line: 246, baseType: !2382, size: 32, offset: 64)
!2382 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2383)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2384 = !DISubroutineType(types: !2385)
!2385 = !{null, !2386}
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2378, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2342, file: !163, line: 250, baseType: !2389, size: 288, offset: 384)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2390)
!2390 = !{!2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2389, file: !214, line: 26, baseType: !108, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2389, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2389, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2389, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2389, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2389, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2389, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2389, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2389, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2342, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2342, file: !163, line: 256, baseType: !2359, size: 64, offset: 704)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2342, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2342, file: !163, line: 300, baseType: !2404, size: 96, offset: 800)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2405)
!2405 = !{!2406, !2407, !2408}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2404, file: !163, line: 153, baseType: !22, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2404, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2404, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2342, file: !163, line: 325, baseType: !2410, size: 32, offset: 896)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 32)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2412)
!2412 = !{!2413, !2419, !2420}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2411, file: !137, line: 5074, baseType: !2414, size: 96)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2415)
!2415 = !{!2416, !2417, !2418}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2414, file: !240, line: 57, baseType: !243, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2414, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2414, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2411, file: !137, line: 5075, baseType: !2359, size: 64, offset: 96)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2411, file: !137, line: 5076, baseType: !2421, offset: 160)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2342, file: !163, line: 343, baseType: !2423, size: 64, offset: 928)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2424)
!2424 = !{!2425, !2426}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2423, file: !214, line: 63, baseType: !108, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2423, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2427 = !{!2321}
!2428 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2429 = !DIGlobalVariableExpression(var: !2430, expr: !DIExpression())
!2430 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2431, file: !2539, line: 56, type: !2528, isLocal: false, isDefinition: true)
!2431 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2432, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2433, globals: !2536, splitDebugInlining: false, nameTableKind: None)
!2432 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2433 = !{!2434, !277, !102, !2534, !379, !104, !331, !103, !108, !109, !2535}
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2436)
!2436 = !{!2437, !2495, !2507, !2508, !2509, !2510, !2516, !2529}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2435, file: !163, line: 247, baseType: !2438, size: 384)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2439)
!2439 = !{!2440, !2464, !2471, !2472, !2473, !2482, !2483, !2484}
!2440 = !DIDerivedType(tag: DW_TAG_member, scope: !2438, file: !163, line: 60, baseType: !2441, size: 64)
!2441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2438, file: !163, line: 60, size: 64, elements: !2442)
!2442 = !{!2443, !2458}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2441, file: !163, line: 61, baseType: !2444, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2445)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2446)
!2446 = !{!2447, !2453}
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !146, line: 38, baseType: !2448, size: 32)
!2448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2445, file: !146, line: 38, size: 32, elements: !2449)
!2449 = !{!2450, !2452}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2448, file: !146, line: 39, baseType: !2451, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2448, file: !146, line: 40, baseType: !2451, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, scope: !2445, file: !146, line: 42, baseType: !2454, size: 32, offset: 32)
!2454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2445, file: !146, line: 42, size: 32, elements: !2455)
!2455 = !{!2456, !2457}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2454, file: !146, line: 43, baseType: !2451, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2454, file: !146, line: 44, baseType: !2451, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2441, file: !163, line: 62, baseType: !2459, size: 64)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2460)
!2460 = !{!2461}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2459, file: !175, line: 50, baseType: !2462, size: 64)
!2462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2463, size: 64, elements: !180)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2438, file: !163, line: 68, baseType: !2465, size: 32, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2467)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2468)
!2468 = !{!2469}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2467, file: !141, line: 232, baseType: !2470, size: 64)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2445)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2438, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2438, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2473 = !DIDerivedType(tag: DW_TAG_member, scope: !2438, file: !163, line: 90, baseType: !2474, size: 16, offset: 112)
!2474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2438, file: !163, line: 90, size: 16, elements: !2475)
!2475 = !{!2476, !2481}
!2476 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !163, line: 91, baseType: !2477, size: 16)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2474, file: !163, line: 91, size: 16, elements: !2478)
!2478 = !{!2479, !2480}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2477, file: !163, line: 96, baseType: !195, size: 8)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2477, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2474, file: !163, line: 100, baseType: !121, size: 16)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2438, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2438, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2438, file: !163, line: 131, baseType: !2485, size: 192, offset: 192)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2486)
!2486 = !{!2487, !2488, !2494}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2485, file: !141, line: 245, baseType: !2444, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2485, file: !141, line: 246, baseType: !2489, size: 32, offset: 64)
!2489 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2490)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 32)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{null, !2493}
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2485, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2435, file: !163, line: 250, baseType: !2496, size: 288, offset: 384)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2497)
!2497 = !{!2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2496, file: !214, line: 26, baseType: !108, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2496, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2496, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2496, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2496, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2496, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2496, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2496, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2496, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2435, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2435, file: !163, line: 256, baseType: !2466, size: 64, offset: 704)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2435, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2435, file: !163, line: 300, baseType: !2511, size: 96, offset: 800)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2512)
!2512 = !{!2513, !2514, !2515}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2511, file: !163, line: 153, baseType: !22, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2511, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2511, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2435, file: !163, line: 325, baseType: !2517, size: 32, offset: 896)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 32)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2519)
!2519 = !{!2520, !2526, !2527}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2518, file: !137, line: 5074, baseType: !2521, size: 96)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2522)
!2522 = !{!2523, !2524, !2525}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2521, file: !240, line: 57, baseType: !243, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2521, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2521, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2518, file: !137, line: 5075, baseType: !2466, size: 64, offset: 96)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2518, file: !137, line: 5076, baseType: !2528, offset: 160)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2435, file: !163, line: 343, baseType: !2530, size: 64, offset: 928)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2531)
!2531 = !{!2532, !2533}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2530, file: !214, line: 63, baseType: !108, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2530, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32)
!2536 = !{!2429, !2537, !2540, !2542}
!2537 = !DIGlobalVariableExpression(var: !2538, expr: !DIExpression())
!2538 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2431, file: !2539, line: 404, type: !103, isLocal: true, isDefinition: true)
!2539 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2540 = !DIGlobalVariableExpression(var: !2541, expr: !DIExpression())
!2541 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2431, file: !2539, line: 405, type: !103, isLocal: true, isDefinition: true)
!2542 = !DIGlobalVariableExpression(var: !2543, expr: !DIExpression())
!2543 = distinct !DIGlobalVariable(name: "pending_current", scope: !2431, file: !2539, line: 425, type: !2434, isLocal: true, isDefinition: true)
!2544 = !DIGlobalVariableExpression(var: !2545, expr: !DIExpression())
!2545 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2546, file: !2576, line: 15, type: !109, isLocal: true, isDefinition: true)
!2546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2548, globals: !2573, splitDebugInlining: false, nameTableKind: None)
!2547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2548 = !{!104, !102, !331, !108, !109, !103, !2549, !277, !106}
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2551)
!2551 = !{!2552, !2567, !2572}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2550, file: !141, line: 245, baseType: !2553, size: 64)
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2554)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2555)
!2555 = !{!2556, !2562}
!2556 = !DIDerivedType(tag: DW_TAG_member, scope: !2554, file: !146, line: 38, baseType: !2557, size: 32)
!2557 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2554, file: !146, line: 38, size: 32, elements: !2558)
!2558 = !{!2559, !2561}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2557, file: !146, line: 39, baseType: !2560, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2557, file: !146, line: 40, baseType: !2560, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, scope: !2554, file: !146, line: 42, baseType: !2563, size: 32, offset: 32)
!2563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2554, file: !146, line: 42, size: 32, elements: !2564)
!2564 = !{!2565, !2566}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2563, file: !146, line: 43, baseType: !2560, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2563, file: !146, line: 44, baseType: !2560, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2550, file: !141, line: 246, baseType: !2568, size: 32, offset: 64)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2569)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 32)
!2570 = !DISubroutineType(types: !2571)
!2571 = !{null, !2549}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2550, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2573 = !{!2544, !2574, !2578, !2580}
!2574 = !DIGlobalVariableExpression(var: !2575, expr: !DIExpression())
!2575 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2546, file: !2576, line: 19, type: !2577, isLocal: true, isDefinition: true)
!2576 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2578 = !DIGlobalVariableExpression(var: !2579, expr: !DIExpression())
!2579 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2546, file: !2576, line: 25, type: !103, isLocal: true, isDefinition: true)
!2580 = !DIGlobalVariableExpression(var: !2581, expr: !DIExpression())
!2581 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2546, file: !2576, line: 17, type: !2582, isLocal: true, isDefinition: true)
!2582 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2554)
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2585, file: !2590, line: 61, type: !2620, isLocal: false, isDefinition: true, align: 64)
!2585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2586, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !2587, splitDebugInlining: false, nameTableKind: None)
!2586 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2587 = !{!2588, !2583}
!2588 = !DIGlobalVariableExpression(var: !2589, expr: !DIExpression())
!2589 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2585, file: !2590, line: 61, type: !2591, isLocal: false, isDefinition: true, align: 32)
!2590 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2592)
!2592 = !{!2593, !2599, !2618}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2591, file: !137, line: 5074, baseType: !2594, size: 96)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2595)
!2595 = !{!2596, !2597, !2598}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2594, file: !240, line: 57, baseType: !243, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2594, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2594, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2591, file: !137, line: 5075, baseType: !2600, size: 64, offset: 96)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2601)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2602)
!2602 = !{!2603}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2601, file: !141, line: 232, baseType: !2604, size: 64)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2605)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2606)
!2606 = !{!2607, !2613}
!2607 = !DIDerivedType(tag: DW_TAG_member, scope: !2605, file: !146, line: 38, baseType: !2608, size: 32)
!2608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2605, file: !146, line: 38, size: 32, elements: !2609)
!2609 = !{!2610, !2612}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2608, file: !146, line: 39, baseType: !2611, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2608, file: !146, line: 40, baseType: !2611, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, scope: !2605, file: !146, line: 42, baseType: !2614, size: 32, offset: 32)
!2614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2605, file: !146, line: 42, size: 32, elements: !2615)
!2615 = !{!2616, !2617}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2614, file: !146, line: 43, baseType: !2611, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2614, file: !146, line: 44, baseType: !2611, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2591, file: !137, line: 5076, baseType: !2619, offset: 160)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 8192, elements: !2621)
!2621 = !{!2622}
!2622 = !DISubrange(count: 1024)
!2623 = !DIGlobalVariableExpression(var: !2624, expr: !DIExpression())
!2624 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2625, file: !2644, line: 55, type: !2645, isLocal: true, isDefinition: true, align: 32)
!2625 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2626, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2627, globals: !2643, splitDebugInlining: false, nameTableKind: None)
!2626 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2627 = !{!102, !104, !103, !2628}
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2630)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2631)
!2631 = !{!2632, !2638}
!2632 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !146, line: 38, baseType: !2633, size: 32)
!2633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !146, line: 38, size: 32, elements: !2634)
!2634 = !{!2635, !2637}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2633, file: !146, line: 39, baseType: !2636, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2633, file: !146, line: 40, baseType: !2636, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, scope: !2630, file: !146, line: 42, baseType: !2639, size: 32, offset: 32)
!2639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2630, file: !146, line: 42, size: 32, elements: !2640)
!2640 = !{!2641, !2642}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2639, file: !146, line: 43, baseType: !2636, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2639, file: !146, line: 44, baseType: !2636, size: 32)
!2643 = !{!2623}
!2644 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2646)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !433, line: 51, size: 64, elements: !2647)
!2647 = !{!2648, !2655}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2646, file: !433, line: 60, baseType: !2649, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 32)
!2650 = !DISubroutineType(types: !2651)
!2651 = !{!103, !2652}
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2654)
!2654 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !433, line: 48, flags: DIFlagFwdDecl)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2646, file: !433, line: 65, baseType: !2652, size: 32, offset: 32)
!2656 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2657, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2657 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2658 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2659, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2659 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2660 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2661, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2662, retainedTypes: !2670, splitDebugInlining: false, nameTableKind: None)
!2661 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2662 = !{!30, !2663}
!2663 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2664, line: 54, baseType: !32, size: 32, elements: !2665)
!2664 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2665 = !{!2666, !2667, !2668, !2669}
!2666 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2667 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2668 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2669 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2670 = !{!102, !132, !379, !24, !2671, !22, !2677, !103, !1045, !2692}
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2664, line: 58, baseType: !2673)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2664, line: 58, size: 64, elements: !2674)
!2674 = !{!2675}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2673, file: !2664, line: 58, baseType: !2676, size: 64)
!2676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 64, elements: !1341)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 32)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2664, line: 68, size: 128, elements: !2679)
!2679 = !{!2680, !2683, !2684, !2685}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2678, file: !2664, line: 69, baseType: !2681, size: 64)
!2681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2682, size: 64, elements: !180)
!2682 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2664, line: 61, baseType: !108)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2678, file: !2664, line: 70, baseType: !2682, size: 32, offset: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2678, file: !2664, line: 71, baseType: !108, size: 32, offset: 96)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2678, file: !2664, line: 77, baseType: !2686, offset: 128)
!2686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2687, elements: !2690)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2664, line: 64, size: 32, elements: !2688)
!2688 = !{!2689}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2687, file: !2664, line: 65, baseType: !2682, size: 32)
!2690 = !{!2691}
!2691 = !DISubrange(count: 0)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!2693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2694, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2695, retainedTypes: !2715, splitDebugInlining: false, nameTableKind: None)
!2694 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2695 = !{!2696, !2704}
!2696 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2697, line: 69, baseType: !32, size: 32, elements: !2698)
!2697 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2698 = !{!2699, !2700, !2701, !2702, !2703}
!2699 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2700 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2701 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2702 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2703 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2704 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2697, line: 56, baseType: !32, size: 32, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714}
!2706 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2707 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2708 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2709 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2710 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2711 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2712 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2713 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2714 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2715 = !{!103, !2696, !2704, !2716, !196, !459, !2718, !2719, !186, !122, !337, !132, !102, !22, !32, !374, !2721, !2722, !376, !375, !107, !377, !2717, !2723, !2724, !2725, !2726}
!2716 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2697, line: 31, baseType: !2717)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2718 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !133, line: 329, baseType: !32)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2697, line: 32, baseType: !2720)
!2720 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !133, line: 145, baseType: !103)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 32)
!2727 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2728, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2728 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2729 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2730, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2731, splitDebugInlining: false, nameTableKind: None)
!2730 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2731 = !{!337, !186, !103, !32}
!2732 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2733, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2734, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2733 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2734 = !{!2735, !30}
!2735 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2736, line: 27, baseType: !32, size: 32, elements: !2737)
!2736 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2737 = !{!2738, !2739, !2740, !2741, !2742}
!2738 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2739 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2740 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2741 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2742 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2743 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2744, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2745, retainedTypes: !2746, splitDebugInlining: false, nameTableKind: None)
!2744 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2745 = !{!826, !2735, !30}
!2746 = !{!972, !2747, !102, !103, !331, !108, !185, !2764}
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !637, line: 360, baseType: !2749)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 345, size: 28704, elements: !2750)
!2750 = !{!2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2749, file: !637, line: 347, baseType: !1713, size: 256)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2749, file: !637, line: 348, baseType: !1715, size: 768, offset: 256)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2749, file: !637, line: 349, baseType: !1713, size: 256, offset: 1024)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2749, file: !637, line: 350, baseType: !1715, size: 768, offset: 1280)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2749, file: !637, line: 351, baseType: !1713, size: 256, offset: 2048)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2749, file: !637, line: 352, baseType: !1715, size: 768, offset: 2304)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2749, file: !637, line: 353, baseType: !1713, size: 256, offset: 3072)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2749, file: !637, line: 354, baseType: !1715, size: 768, offset: 3328)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2749, file: !637, line: 355, baseType: !1713, size: 256, offset: 4096)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2749, file: !637, line: 356, baseType: !1726, size: 1792, offset: 4352)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2749, file: !637, line: 357, baseType: !1730, size: 1920, offset: 6144)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2749, file: !637, line: 358, baseType: !1735, size: 20608, offset: 8064)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2749, file: !637, line: 359, baseType: !409, size: 32, offset: 28672)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !637, line: 402, baseType: !2766)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 379, size: 1120, elements: !2767)
!2767 = !{!2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2766, file: !637, line: 381, baseType: !641, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2766, file: !637, line: 382, baseType: !409, size: 32, offset: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2766, file: !637, line: 383, baseType: !409, size: 32, offset: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2766, file: !637, line: 384, baseType: !409, size: 32, offset: 96)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2766, file: !637, line: 385, baseType: !409, size: 32, offset: 128)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2766, file: !637, line: 386, baseType: !409, size: 32, offset: 160)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2766, file: !637, line: 387, baseType: !1750, size: 96, offset: 192)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2766, file: !637, line: 388, baseType: !409, size: 32, offset: 288)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2766, file: !637, line: 389, baseType: !409, size: 32, offset: 320)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2766, file: !637, line: 390, baseType: !409, size: 32, offset: 352)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2766, file: !637, line: 391, baseType: !409, size: 32, offset: 384)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2766, file: !637, line: 392, baseType: !409, size: 32, offset: 416)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2766, file: !637, line: 393, baseType: !409, size: 32, offset: 448)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2766, file: !637, line: 394, baseType: !409, size: 32, offset: 480)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2766, file: !637, line: 395, baseType: !1761, size: 64, offset: 512)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2766, file: !637, line: 396, baseType: !641, size: 32, offset: 576)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2766, file: !637, line: 397, baseType: !641, size: 32, offset: 608)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2766, file: !637, line: 398, baseType: !1765, size: 128, offset: 640)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2766, file: !637, line: 399, baseType: !1767, size: 160, offset: 768)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2766, file: !637, line: 400, baseType: !1769, size: 160, offset: 928)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2766, file: !637, line: 401, baseType: !409, size: 32, offset: 1088)
!2789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2790, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2790 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2792, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2793, splitDebugInlining: false, nameTableKind: None)
!2792 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2793 = !{!102, !103, !22, !2794}
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !637, line: 402, baseType: !2796)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 379, size: 1120, elements: !2797)
!2797 = !{!2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2796, file: !637, line: 381, baseType: !641, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2796, file: !637, line: 382, baseType: !409, size: 32, offset: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2796, file: !637, line: 383, baseType: !409, size: 32, offset: 64)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2796, file: !637, line: 384, baseType: !409, size: 32, offset: 96)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2796, file: !637, line: 385, baseType: !409, size: 32, offset: 128)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2796, file: !637, line: 386, baseType: !409, size: 32, offset: 160)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2796, file: !637, line: 387, baseType: !1750, size: 96, offset: 192)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2796, file: !637, line: 388, baseType: !409, size: 32, offset: 288)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2796, file: !637, line: 389, baseType: !409, size: 32, offset: 320)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2796, file: !637, line: 390, baseType: !409, size: 32, offset: 352)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2796, file: !637, line: 391, baseType: !409, size: 32, offset: 384)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2796, file: !637, line: 392, baseType: !409, size: 32, offset: 416)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2796, file: !637, line: 393, baseType: !409, size: 32, offset: 448)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2796, file: !637, line: 394, baseType: !409, size: 32, offset: 480)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2796, file: !637, line: 395, baseType: !1761, size: 64, offset: 512)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2796, file: !637, line: 396, baseType: !641, size: 32, offset: 576)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2796, file: !637, line: 397, baseType: !641, size: 32, offset: 608)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2796, file: !637, line: 398, baseType: !1765, size: 128, offset: 640)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2796, file: !637, line: 399, baseType: !1767, size: 160, offset: 768)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2796, file: !637, line: 400, baseType: !1769, size: 160, offset: 928)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2796, file: !637, line: 401, baseType: !409, size: 32, offset: 1088)
!2819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2820, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2821, splitDebugInlining: false, nameTableKind: None)
!2820 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2821 = !{!2822, !102, !103}
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !637, line: 402, baseType: !2824)
!2824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 379, size: 1120, elements: !2825)
!2825 = !{!2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2824, file: !637, line: 381, baseType: !641, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2824, file: !637, line: 382, baseType: !409, size: 32, offset: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2824, file: !637, line: 383, baseType: !409, size: 32, offset: 64)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2824, file: !637, line: 384, baseType: !409, size: 32, offset: 96)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2824, file: !637, line: 385, baseType: !409, size: 32, offset: 128)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2824, file: !637, line: 386, baseType: !409, size: 32, offset: 160)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2824, file: !637, line: 387, baseType: !1750, size: 96, offset: 192)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2824, file: !637, line: 388, baseType: !409, size: 32, offset: 288)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2824, file: !637, line: 389, baseType: !409, size: 32, offset: 320)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2824, file: !637, line: 390, baseType: !409, size: 32, offset: 352)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2824, file: !637, line: 391, baseType: !409, size: 32, offset: 384)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2824, file: !637, line: 392, baseType: !409, size: 32, offset: 416)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2824, file: !637, line: 393, baseType: !409, size: 32, offset: 448)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2824, file: !637, line: 394, baseType: !409, size: 32, offset: 480)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2824, file: !637, line: 395, baseType: !1761, size: 64, offset: 512)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2824, file: !637, line: 396, baseType: !641, size: 32, offset: 576)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2824, file: !637, line: 397, baseType: !641, size: 32, offset: 608)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2824, file: !637, line: 398, baseType: !1765, size: 128, offset: 640)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2824, file: !637, line: 399, baseType: !1767, size: 160, offset: 768)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2824, file: !637, line: 400, baseType: !1769, size: 160, offset: 928)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2824, file: !637, line: 401, baseType: !409, size: 32, offset: 1088)
!2847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2848, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2849, splitDebugInlining: false, nameTableKind: None)
!2848 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2849 = !{!2850, !108, !102, !103}
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 32)
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2852, line: 98, size: 256, elements: !2853)
!2852 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2853 = !{!2854, !2859, !2864, !2869, !2874, !2879, !2884, !2889}
!2854 = !DIDerivedType(tag: DW_TAG_member, scope: !2851, file: !2852, line: 99, baseType: !2855, size: 32)
!2855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2851, file: !2852, line: 99, size: 32, elements: !2856)
!2856 = !{!2857, !2858}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2855, file: !2852, line: 99, baseType: !108, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2855, file: !2852, line: 99, baseType: !108, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, scope: !2851, file: !2852, line: 100, baseType: !2860, size: 32, offset: 32)
!2860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2851, file: !2852, line: 100, size: 32, elements: !2861)
!2861 = !{!2862, !2863}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2860, file: !2852, line: 100, baseType: !108, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2860, file: !2852, line: 100, baseType: !108, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, scope: !2851, file: !2852, line: 101, baseType: !2865, size: 32, offset: 64)
!2865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2851, file: !2852, line: 101, size: 32, elements: !2866)
!2866 = !{!2867, !2868}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2865, file: !2852, line: 101, baseType: !108, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2865, file: !2852, line: 101, baseType: !108, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, scope: !2851, file: !2852, line: 102, baseType: !2870, size: 32, offset: 96)
!2870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2851, file: !2852, line: 102, size: 32, elements: !2871)
!2871 = !{!2872, !2873}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2870, file: !2852, line: 102, baseType: !108, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2870, file: !2852, line: 102, baseType: !108, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, scope: !2851, file: !2852, line: 103, baseType: !2875, size: 32, offset: 128)
!2875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2851, file: !2852, line: 103, size: 32, elements: !2876)
!2876 = !{!2877, !2878}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2875, file: !2852, line: 103, baseType: !108, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2875, file: !2852, line: 103, baseType: !108, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, scope: !2851, file: !2852, line: 104, baseType: !2880, size: 32, offset: 160)
!2880 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2851, file: !2852, line: 104, size: 32, elements: !2881)
!2881 = !{!2882, !2883}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2880, file: !2852, line: 104, baseType: !108, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2880, file: !2852, line: 104, baseType: !108, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, scope: !2851, file: !2852, line: 105, baseType: !2885, size: 32, offset: 192)
!2885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2851, file: !2852, line: 105, size: 32, elements: !2886)
!2886 = !{!2887, !2888}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2885, file: !2852, line: 105, baseType: !108, size: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2885, file: !2852, line: 105, baseType: !108, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2851, file: !2852, line: 106, baseType: !108, size: 32, offset: 224)
!2890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2734, retainedTypes: !2892, splitDebugInlining: false, nameTableKind: None)
!2891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2892 = !{!2893, !102, !103, !2918, !2692, !108}
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !637, line: 402, baseType: !2895)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 379, size: 1120, elements: !2896)
!2896 = !{!2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2895, file: !637, line: 381, baseType: !641, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2895, file: !637, line: 382, baseType: !409, size: 32, offset: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2895, file: !637, line: 383, baseType: !409, size: 32, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2895, file: !637, line: 384, baseType: !409, size: 32, offset: 96)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2895, file: !637, line: 385, baseType: !409, size: 32, offset: 128)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2895, file: !637, line: 386, baseType: !409, size: 32, offset: 160)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2895, file: !637, line: 387, baseType: !1750, size: 96, offset: 192)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2895, file: !637, line: 388, baseType: !409, size: 32, offset: 288)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2895, file: !637, line: 389, baseType: !409, size: 32, offset: 320)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2895, file: !637, line: 390, baseType: !409, size: 32, offset: 352)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2895, file: !637, line: 391, baseType: !409, size: 32, offset: 384)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2895, file: !637, line: 392, baseType: !409, size: 32, offset: 416)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2895, file: !637, line: 393, baseType: !409, size: 32, offset: 448)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2895, file: !637, line: 394, baseType: !409, size: 32, offset: 480)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2895, file: !637, line: 395, baseType: !1761, size: 64, offset: 512)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2895, file: !637, line: 396, baseType: !641, size: 32, offset: 576)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2895, file: !637, line: 397, baseType: !641, size: 32, offset: 608)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2895, file: !637, line: 398, baseType: !1765, size: 128, offset: 640)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2895, file: !637, line: 399, baseType: !1767, size: 160, offset: 768)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2895, file: !637, line: 400, baseType: !1769, size: 160, offset: 928)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2895, file: !637, line: 401, baseType: !409, size: 32, offset: 1088)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2852, line: 141, baseType: !2920)
!2920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2852, line: 97, size: 256, elements: !2921)
!2921 = !{!2922}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2920, file: !2852, line: 107, baseType: !2923, size: 256)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2852, line: 98, size: 256, elements: !2924)
!2924 = !{!2925, !2930, !2935, !2940, !2945, !2950, !2955, !2960}
!2925 = !DIDerivedType(tag: DW_TAG_member, scope: !2923, file: !2852, line: 99, baseType: !2926, size: 32)
!2926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2923, file: !2852, line: 99, size: 32, elements: !2927)
!2927 = !{!2928, !2929}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2926, file: !2852, line: 99, baseType: !108, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2926, file: !2852, line: 99, baseType: !108, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, scope: !2923, file: !2852, line: 100, baseType: !2931, size: 32, offset: 32)
!2931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2923, file: !2852, line: 100, size: 32, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2931, file: !2852, line: 100, baseType: !108, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2931, file: !2852, line: 100, baseType: !108, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, scope: !2923, file: !2852, line: 101, baseType: !2936, size: 32, offset: 64)
!2936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2923, file: !2852, line: 101, size: 32, elements: !2937)
!2937 = !{!2938, !2939}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2936, file: !2852, line: 101, baseType: !108, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2936, file: !2852, line: 101, baseType: !108, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, scope: !2923, file: !2852, line: 102, baseType: !2941, size: 32, offset: 96)
!2941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2923, file: !2852, line: 102, size: 32, elements: !2942)
!2942 = !{!2943, !2944}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2941, file: !2852, line: 102, baseType: !108, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2941, file: !2852, line: 102, baseType: !108, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, scope: !2923, file: !2852, line: 103, baseType: !2946, size: 32, offset: 128)
!2946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2923, file: !2852, line: 103, size: 32, elements: !2947)
!2947 = !{!2948, !2949}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2946, file: !2852, line: 103, baseType: !108, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2946, file: !2852, line: 103, baseType: !108, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, scope: !2923, file: !2852, line: 104, baseType: !2951, size: 32, offset: 160)
!2951 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2923, file: !2852, line: 104, size: 32, elements: !2952)
!2952 = !{!2953, !2954}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2951, file: !2852, line: 104, baseType: !108, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2951, file: !2852, line: 104, baseType: !108, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, scope: !2923, file: !2852, line: 105, baseType: !2956, size: 32, offset: 192)
!2956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2923, file: !2852, line: 105, size: 32, elements: !2957)
!2957 = !{!2958, !2959}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2956, file: !2852, line: 105, baseType: !108, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2956, file: !2852, line: 105, baseType: !108, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2923, file: !2852, line: 106, baseType: !108, size: 32, offset: 224)
!2961 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2962, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1698, retainedTypes: !2963, splitDebugInlining: false, nameTableKind: None)
!2962 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!2963 = !{!972, !331, !185, !108, !2964, !2981}
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !637, line: 360, baseType: !2966)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 345, size: 28704, elements: !2967)
!2967 = !{!2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2966, file: !637, line: 347, baseType: !1713, size: 256)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2966, file: !637, line: 348, baseType: !1715, size: 768, offset: 256)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2966, file: !637, line: 349, baseType: !1713, size: 256, offset: 1024)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2966, file: !637, line: 350, baseType: !1715, size: 768, offset: 1280)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2966, file: !637, line: 351, baseType: !1713, size: 256, offset: 2048)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2966, file: !637, line: 352, baseType: !1715, size: 768, offset: 2304)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2966, file: !637, line: 353, baseType: !1713, size: 256, offset: 3072)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2966, file: !637, line: 354, baseType: !1715, size: 768, offset: 3328)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2966, file: !637, line: 355, baseType: !1713, size: 256, offset: 4096)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2966, file: !637, line: 356, baseType: !1726, size: 1792, offset: 4352)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2966, file: !637, line: 357, baseType: !1730, size: 1920, offset: 6144)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2966, file: !637, line: 358, baseType: !1735, size: 20608, offset: 8064)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2966, file: !637, line: 359, baseType: !409, size: 32, offset: 28672)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 32)
!2982 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !637, line: 402, baseType: !2983)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 379, size: 1120, elements: !2984)
!2984 = !{!2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2983, file: !637, line: 381, baseType: !641, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2983, file: !637, line: 382, baseType: !409, size: 32, offset: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2983, file: !637, line: 383, baseType: !409, size: 32, offset: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2983, file: !637, line: 384, baseType: !409, size: 32, offset: 96)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2983, file: !637, line: 385, baseType: !409, size: 32, offset: 128)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2983, file: !637, line: 386, baseType: !409, size: 32, offset: 160)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2983, file: !637, line: 387, baseType: !1750, size: 96, offset: 192)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2983, file: !637, line: 388, baseType: !409, size: 32, offset: 288)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2983, file: !637, line: 389, baseType: !409, size: 32, offset: 320)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2983, file: !637, line: 390, baseType: !409, size: 32, offset: 352)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2983, file: !637, line: 391, baseType: !409, size: 32, offset: 384)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2983, file: !637, line: 392, baseType: !409, size: 32, offset: 416)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2983, file: !637, line: 393, baseType: !409, size: 32, offset: 448)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2983, file: !637, line: 394, baseType: !409, size: 32, offset: 480)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2983, file: !637, line: 395, baseType: !1761, size: 64, offset: 512)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2983, file: !637, line: 396, baseType: !641, size: 32, offset: 576)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2983, file: !637, line: 397, baseType: !641, size: 32, offset: 608)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2983, file: !637, line: 398, baseType: !1765, size: 128, offset: 640)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2983, file: !637, line: 399, baseType: !1767, size: 160, offset: 768)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2983, file: !637, line: 400, baseType: !1769, size: 160, offset: 928)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2983, file: !637, line: 401, baseType: !409, size: 32, offset: 1088)
!3006 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3007, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3008, splitDebugInlining: false, nameTableKind: None)
!3007 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3008 = !{!3009, !102, !103}
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !637, line: 402, baseType: !3011)
!3011 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 379, size: 1120, elements: !3012)
!3012 = !{!3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3011, file: !637, line: 381, baseType: !641, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3011, file: !637, line: 382, baseType: !409, size: 32, offset: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3011, file: !637, line: 383, baseType: !409, size: 32, offset: 64)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3011, file: !637, line: 384, baseType: !409, size: 32, offset: 96)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3011, file: !637, line: 385, baseType: !409, size: 32, offset: 128)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3011, file: !637, line: 386, baseType: !409, size: 32, offset: 160)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3011, file: !637, line: 387, baseType: !1750, size: 96, offset: 192)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3011, file: !637, line: 388, baseType: !409, size: 32, offset: 288)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3011, file: !637, line: 389, baseType: !409, size: 32, offset: 320)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3011, file: !637, line: 390, baseType: !409, size: 32, offset: 352)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3011, file: !637, line: 391, baseType: !409, size: 32, offset: 384)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3011, file: !637, line: 392, baseType: !409, size: 32, offset: 416)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3011, file: !637, line: 393, baseType: !409, size: 32, offset: 448)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3011, file: !637, line: 394, baseType: !409, size: 32, offset: 480)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3011, file: !637, line: 395, baseType: !1761, size: 64, offset: 512)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3011, file: !637, line: 396, baseType: !641, size: 32, offset: 576)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3011, file: !637, line: 397, baseType: !641, size: 32, offset: 608)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3011, file: !637, line: 398, baseType: !1765, size: 128, offset: 640)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3011, file: !637, line: 399, baseType: !1767, size: 160, offset: 768)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3011, file: !637, line: 400, baseType: !1769, size: 160, offset: 928)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3011, file: !637, line: 401, baseType: !409, size: 32, offset: 1088)
!3034 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3035, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3036, splitDebugInlining: false, nameTableKind: None)
!3035 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3036 = !{!278, !277, !132, !1150, !3037, !186, !102}
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 32)
!3038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!3039 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3040, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3041, splitDebugInlining: false, nameTableKind: None)
!3040 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3041 = !{!3042}
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 32)
!3043 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 386, baseType: !3044)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 370, size: 448, elements: !3045)
!3045 = !{!3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3044, file: !405, line: 372, baseType: !409, size: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3044, file: !405, line: 373, baseType: !409, size: 32, offset: 32)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3044, file: !405, line: 374, baseType: !409, size: 32, offset: 64)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3044, file: !405, line: 375, baseType: !409, size: 32, offset: 96)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3044, file: !405, line: 376, baseType: !409, size: 32, offset: 128)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3044, file: !405, line: 377, baseType: !409, size: 32, offset: 160)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3044, file: !405, line: 378, baseType: !409, size: 32, offset: 192)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3044, file: !405, line: 379, baseType: !409, size: 32, offset: 224)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3044, file: !405, line: 380, baseType: !409, size: 32, offset: 256)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3044, file: !405, line: 381, baseType: !409, size: 32, offset: 288)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3044, file: !405, line: 382, baseType: !409, size: 32, offset: 320)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3044, file: !405, line: 383, baseType: !409, size: 32, offset: 352)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3044, file: !405, line: 384, baseType: !409, size: 32, offset: 384)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3044, file: !405, line: 385, baseType: !409, size: 32, offset: 416)
!3060 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3061, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3061 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3062 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3063, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3064, retainedTypes: !3080, splitDebugInlining: false, nameTableKind: None)
!3063 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3064 = !{!3065, !3072, !3076}
!3065 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3066, line: 39, baseType: !32, size: 32, elements: !3067)
!3066 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3067 = !{!3068, !3069, !3070, !3071}
!3068 = !DIEnumerator(name: "HAL_OK", value: 0)
!3069 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3070 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3071 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3072 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1009, line: 183, baseType: !32, size: 32, elements: !3073)
!3073 = !{!3074, !3075}
!3074 = !DIEnumerator(name: "DISABLE", value: 0)
!3075 = !DIEnumerator(name: "ENABLE", value: 1)
!3076 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1009, line: 177, baseType: !32, size: 32, elements: !3077)
!3077 = !{!3078, !3079}
!3078 = !DIEnumerator(name: "RESET", value: 0)
!3079 = !DIEnumerator(name: "SET", value: 1)
!3080 = !{!3081, !102, !108, !185, !3099, !3100, !3106, !121, !3119, !109, !3132}
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 386, baseType: !3083)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 370, size: 448, elements: !3084)
!3084 = !{!3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3083, file: !405, line: 372, baseType: !409, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3083, file: !405, line: 373, baseType: !409, size: 32, offset: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3083, file: !405, line: 374, baseType: !409, size: 32, offset: 64)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3083, file: !405, line: 375, baseType: !409, size: 32, offset: 96)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3083, file: !405, line: 376, baseType: !409, size: 32, offset: 128)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3083, file: !405, line: 377, baseType: !409, size: 32, offset: 160)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3083, file: !405, line: 378, baseType: !409, size: 32, offset: 192)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3083, file: !405, line: 379, baseType: !409, size: 32, offset: 224)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3083, file: !405, line: 380, baseType: !409, size: 32, offset: 256)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3083, file: !405, line: 381, baseType: !409, size: 32, offset: 288)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3083, file: !405, line: 382, baseType: !409, size: 32, offset: 320)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3083, file: !405, line: 383, baseType: !409, size: 32, offset: 352)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3083, file: !405, line: 384, baseType: !409, size: 32, offset: 384)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3083, file: !405, line: 385, baseType: !409, size: 32, offset: 416)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 32)
!3101 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 364, baseType: !3102)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 360, size: 64, elements: !3103)
!3103 = !{!3104, !3105}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3102, file: !405, line: 362, baseType: !409, size: 32)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3102, file: !405, line: 363, baseType: !409, size: 32, offset: 32)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 286, baseType: !3108)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 275, size: 288, elements: !3109)
!3109 = !{!3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3108, file: !405, line: 277, baseType: !409, size: 32)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3108, file: !405, line: 278, baseType: !409, size: 32, offset: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3108, file: !405, line: 279, baseType: !409, size: 32, offset: 64)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3108, file: !405, line: 280, baseType: !409, size: 32, offset: 96)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3108, file: !405, line: 281, baseType: !409, size: 32, offset: 128)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3108, file: !405, line: 282, baseType: !409, size: 32, offset: 160)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3108, file: !405, line: 283, baseType: !409, size: 32, offset: 192)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3108, file: !405, line: 284, baseType: !409, size: 32, offset: 224)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3108, file: !405, line: 285, baseType: !409, size: 32, offset: 256)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !405, line: 314, baseType: !3121)
!3121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 303, size: 320, elements: !3122)
!3122 = !{!3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3121, file: !405, line: 305, baseType: !409, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3121, file: !405, line: 306, baseType: !409, size: 32, offset: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3121, file: !405, line: 307, baseType: !409, size: 32, offset: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3121, file: !405, line: 308, baseType: !409, size: 32, offset: 96)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3121, file: !405, line: 309, baseType: !409, size: 32, offset: 128)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3121, file: !405, line: 310, baseType: !409, size: 32, offset: 160)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3121, file: !405, line: 311, baseType: !409, size: 32, offset: 192)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3121, file: !405, line: 312, baseType: !409, size: 32, offset: 224)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3121, file: !405, line: 313, baseType: !1287, size: 64, offset: 256)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!3133 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3134, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3135, retainedTypes: !3136, splitDebugInlining: false, nameTableKind: None)
!3134 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3135 = !{!1008}
!3136 = !{!3137, !108, !3145, !3151, !3164}
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !637, line: 712, baseType: !3139)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !637, line: 706, size: 128, elements: !3140)
!3140 = !{!3141, !3142, !3143, !3144}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3139, file: !637, line: 708, baseType: !409, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3139, file: !637, line: 709, baseType: !409, size: 32, offset: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3139, file: !637, line: 710, baseType: !409, size: 32, offset: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3139, file: !637, line: 711, baseType: !641, size: 32, offset: 96)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 32)
!3146 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 364, baseType: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 360, size: 64, elements: !3148)
!3148 = !{!3149, !3150}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3147, file: !405, line: 362, baseType: !409, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3147, file: !405, line: 363, baseType: !409, size: 32, offset: 32)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 286, baseType: !3153)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 275, size: 288, elements: !3154)
!3154 = !{!3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3153, file: !405, line: 277, baseType: !409, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3153, file: !405, line: 278, baseType: !409, size: 32, offset: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3153, file: !405, line: 279, baseType: !409, size: 32, offset: 64)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3153, file: !405, line: 280, baseType: !409, size: 32, offset: 96)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3153, file: !405, line: 281, baseType: !409, size: 32, offset: 128)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3153, file: !405, line: 282, baseType: !409, size: 32, offset: 160)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3153, file: !405, line: 283, baseType: !409, size: 32, offset: 192)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3153, file: !405, line: 284, baseType: !409, size: 32, offset: 224)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3153, file: !405, line: 285, baseType: !409, size: 32, offset: 256)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 32)
!3165 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 386, baseType: !3166)
!3166 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 370, size: 448, elements: !3167)
!3167 = !{!3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3166, file: !405, line: 372, baseType: !409, size: 32)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3166, file: !405, line: 373, baseType: !409, size: 32, offset: 32)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3166, file: !405, line: 374, baseType: !409, size: 32, offset: 64)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3166, file: !405, line: 375, baseType: !409, size: 32, offset: 96)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3166, file: !405, line: 376, baseType: !409, size: 32, offset: 128)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3166, file: !405, line: 377, baseType: !409, size: 32, offset: 160)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3166, file: !405, line: 378, baseType: !409, size: 32, offset: 192)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3166, file: !405, line: 379, baseType: !409, size: 32, offset: 224)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3166, file: !405, line: 380, baseType: !409, size: 32, offset: 256)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3166, file: !405, line: 381, baseType: !409, size: 32, offset: 288)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3166, file: !405, line: 382, baseType: !409, size: 32, offset: 320)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3166, file: !405, line: 383, baseType: !409, size: 32, offset: 352)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3166, file: !405, line: 384, baseType: !409, size: 32, offset: 384)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3166, file: !405, line: 385, baseType: !409, size: 32, offset: 416)
!3182 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3183, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3184, splitDebugInlining: false, nameTableKind: None)
!3183 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3184 = !{!102, !132}
!3185 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3186, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3187, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3186 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3187 = !{!3188, !3195, !30}
!3188 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3189, line: 14, baseType: !32, size: 32, elements: !3190)
!3189 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3190 = !{!3191, !3192, !3193, !3194}
!3191 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3192 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3193 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3194 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3189, line: 42, baseType: !32, size: 32, elements: !3196)
!3196 = !{!3197, !3198, !3199, !3200, !3201, !3202}
!3197 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3198 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3199 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3200 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3201 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3202 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3204, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3204 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3205 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3206, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3207, splitDebugInlining: false, nameTableKind: None)
!3206 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3207 = !{!102, !103, !3208, !3223}
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !3210)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !3211)
!3211 = !{!3212, !3218}
!3212 = !DIDerivedType(tag: DW_TAG_member, scope: !3210, file: !146, line: 38, baseType: !3213, size: 32)
!3213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3210, file: !146, line: 38, size: 32, elements: !3214)
!3214 = !{!3215, !3217}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3213, file: !146, line: 39, baseType: !3216, size: 32)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3213, file: !146, line: 40, baseType: !3216, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, scope: !3210, file: !146, line: 42, baseType: !3219, size: 32, offset: 32)
!3219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3210, file: !146, line: 42, size: 32, elements: !3220)
!3220 = !{!3221, !3222}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3219, file: !146, line: 43, baseType: !3216, size: 32)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3219, file: !146, line: 44, baseType: !3216, size: 32)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 32)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !3225)
!3225 = !{!3226, !3270, !3282, !3283, !3284, !3285, !3291, !3304}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3224, file: !163, line: 247, baseType: !3227, size: 384)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !3228)
!3228 = !{!3229, !3239, !3246, !3247, !3248, !3257, !3258, !3259}
!3229 = !DIDerivedType(tag: DW_TAG_member, scope: !3227, file: !163, line: 60, baseType: !3230, size: 64)
!3230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3227, file: !163, line: 60, size: 64, elements: !3231)
!3231 = !{!3232, !3233}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3230, file: !163, line: 61, baseType: !3209, size: 64)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3230, file: !163, line: 62, baseType: !3234, size: 64)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !3235)
!3235 = !{!3236}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3234, file: !175, line: 50, baseType: !3237, size: 64)
!3237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3238, size: 64, elements: !180)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3227, file: !163, line: 68, baseType: !3240, size: 32, offset: 64)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 32)
!3241 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !3242)
!3242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !3243)
!3243 = !{!3244}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3242, file: !141, line: 232, baseType: !3245, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !3210)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3227, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3227, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!3248 = !DIDerivedType(tag: DW_TAG_member, scope: !3227, file: !163, line: 90, baseType: !3249, size: 16, offset: 112)
!3249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3227, file: !163, line: 90, size: 16, elements: !3250)
!3250 = !{!3251, !3256}
!3251 = !DIDerivedType(tag: DW_TAG_member, scope: !3249, file: !163, line: 91, baseType: !3252, size: 16)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3249, file: !163, line: 91, size: 16, elements: !3253)
!3253 = !{!3254, !3255}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3252, file: !163, line: 96, baseType: !195, size: 8)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3252, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3249, file: !163, line: 100, baseType: !121, size: 16)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3227, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3227, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3227, file: !163, line: 131, baseType: !3260, size: 192, offset: 192)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !3261)
!3261 = !{!3262, !3263, !3269}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3260, file: !141, line: 245, baseType: !3209, size: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3260, file: !141, line: 246, baseType: !3264, size: 32, offset: 64)
!3264 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !3265)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 32)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{null, !3268}
!3268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 32)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3260, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3224, file: !163, line: 250, baseType: !3271, size: 288, offset: 384)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !3272)
!3272 = !{!3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3271, file: !214, line: 26, baseType: !108, size: 32)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3271, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3271, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3271, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3271, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3271, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3271, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3271, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3271, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3224, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3224, file: !163, line: 256, baseType: !3241, size: 64, offset: 704)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3224, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3224, file: !163, line: 300, baseType: !3286, size: 96, offset: 800)
!3286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !3287)
!3287 = !{!3288, !3289, !3290}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3286, file: !163, line: 153, baseType: !22, size: 32)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3286, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3286, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3224, file: !163, line: 325, baseType: !3292, size: 32, offset: 896)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 32)
!3293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !3294)
!3294 = !{!3295, !3301, !3302}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3293, file: !137, line: 5074, baseType: !3296, size: 96)
!3296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !3297)
!3297 = !{!3298, !3299, !3300}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3296, file: !240, line: 57, baseType: !243, size: 32)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3296, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3296, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3293, file: !137, line: 5075, baseType: !3241, size: 64, offset: 96)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3293, file: !137, line: 5076, baseType: !3303, offset: 160)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3224, file: !163, line: 343, baseType: !3305, size: 64, offset: 928)
!3305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !3306)
!3306 = !{!3307, !3308}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3305, file: !214, line: 63, baseType: !108, size: 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3305, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!3309 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3310, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3311, splitDebugInlining: false, nameTableKind: None)
!3310 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3311 = !{!22, !102, !103}
!3312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3313, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3313 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3314 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3315, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3315 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3316 = !{!"Ubuntu clang version 14.0.6"}
!3317 = !{i32 7, !"Dwarf Version", i32 4}
!3318 = !{i32 2, !"Debug Info Version", i32 3}
!3319 = !{i32 1, !"wchar_size", i32 4}
!3320 = !{i32 1, !"min_enum_size", i32 4}
!3321 = !{i32 1, !"branch-target-enforcement", i32 0}
!3322 = !{i32 1, !"sign-return-address", i32 0}
!3323 = !{i32 1, !"sign-return-address-all", i32 0}
!3324 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3325 = !{i32 7, !"frame-pointer", i32 2}
!3326 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3327, file: !3327, line: 26, type: !334, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2656, retainedNodes: !251)
!3327 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3328 = !DILocation(line: 28, column: 1, scope: !3326)
!3329 = !{i64 2152484510, i64 2152484530, i64 2152484593}
!3330 = !DILocation(line: 29, column: 1, scope: !3326)
!3331 = !{i64 2152484925, i64 2152484945, i64 2152485008}
!3332 = !DILocation(line: 30, column: 1, scope: !3326)
!3333 = !{i64 2152489405, i64 2152489425, i64 2152489488}
!3334 = !DILocation(line: 31, column: 1, scope: !3326)
!3335 = !{i64 2152489824, i64 2152489844, i64 2152489907}
!3336 = !DILocation(line: 33, column: 1, scope: !3326)
!3337 = !{i64 2152490116, i64 2152490136, i64 2152490199}
!3338 = !DILocation(line: 35, column: 1, scope: !3326)
!3339 = !{i64 2152490441, i64 2152490461, i64 2152490524}
!3340 = !DILocation(line: 50, column: 1, scope: !3326)
!3341 = !{i64 2152490868, i64 2152490888, i64 2152490951}
!3342 = !DILocation(line: 54, column: 1, scope: !3326)
!3343 = !{i64 2152491307, i64 2152491327, i64 2152491390}
!3344 = !DILocation(line: 61, column: 1, scope: !3326)
!3345 = !{i64 2152491624, i64 2152491644, i64 2152491707}
!3346 = !DILocation(line: 63, column: 1, scope: !3326)
!3347 = !{i64 2152492004, i64 2152492024, i64 2152492087}
!3348 = !DILocation(line: 64, column: 1, scope: !3326)
!3349 = !{i64 2152492526, i64 2152492546, i64 2152492609}
!3350 = !DILocation(line: 65, column: 1, scope: !3326)
!3351 = !{i64 2152493024, i64 2152493044, i64 2152493107}
!3352 = !DILocation(line: 66, column: 1, scope: !3326)
!3353 = !{i64 2152493506, i64 2152493526, i64 2152493589}
!3354 = !DILocation(line: 67, column: 1, scope: !3326)
!3355 = !{i64 2152494013, i64 2152494033, i64 2152494096}
!3356 = !DILocation(line: 68, column: 1, scope: !3326)
!3357 = !{i64 2152494501, i64 2152494521, i64 2152494584}
!3358 = !DILocation(line: 70, column: 1, scope: !3326)
!3359 = !{i64 2152494969, i64 2152494989, i64 2152495052}
!3360 = !DILocation(line: 71, column: 1, scope: !3326)
!3361 = !{i64 2152495411, i64 2152495431, i64 2152495494}
!3362 = !DILocation(line: 72, column: 1, scope: !3326)
!3363 = !{i64 2152495869, i64 2152495889, i64 2152495952}
!3364 = !DILocation(line: 79, column: 1, scope: !3326)
!3365 = !{i64 2152496323, i64 2152496343, i64 2152496406}
!3366 = !DILocation(line: 80, column: 1, scope: !3326)
!3367 = !{i64 2152496834, i64 2152496854, i64 2152496917}
!3368 = !DILocation(line: 82, column: 1, scope: !3326)
!3369 = !{i64 2152497325, i64 2152497345, i64 2152497408}
!3370 = !DILocation(line: 97, column: 1, scope: !3326)
!3371 = !{i64 2152497662, i64 2152497682, i64 2152497745}
!3372 = !DILocation(line: 99, column: 1, scope: !3326)
!3373 = !{i64 2152497880, i64 2152497900, i64 2152497963}
!3374 = !DILocation(line: 102, column: 1, scope: !3326)
!3375 = !{i64 2152498137, i64 2152498157, i64 2152498220}
!3376 = !DILocation(line: 105, column: 1, scope: !3326)
!3377 = !{i64 2152498377, i64 2152498397, i64 2152498460}
!3378 = !DILocation(line: 115, column: 1, scope: !3326)
!3379 = !{i64 2152498716, i64 2152498736, i64 2152498799}
!3380 = !DILocation(line: 118, column: 1, scope: !3326)
!3381 = !{i64 2152503121, i64 2152503141, i64 2152503204}
!3382 = !DILocation(line: 32, column: 1, scope: !3383)
!3383 = !DILexicalBlockFile(scope: !3326, file: !3384, discriminator: 0)
!3384 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3385 = !{i64 2152503477, i64 2152503497, i64 2152503560}
!3386 = !DILocation(line: 33, column: 1, scope: !3383)
!3387 = !{i64 2152503989, i64 2152504009, i64 2152504072}
!3388 = !DILocation(line: 53, column: 1, scope: !3383)
!3389 = !{i64 2152504497, i64 2152504517, i64 2152504580}
!3390 = !DILocation(line: 54, column: 1, scope: !3383)
!3391 = !{i64 2152504915, i64 2152504935, i64 2152504998}
!3392 = !DILocation(line: 55, column: 1, scope: !3383)
!3393 = !{i64 2152505333, i64 2152505353, i64 2152505416}
!3394 = !DILocation(line: 56, column: 1, scope: !3383)
!3395 = !{i64 2152505751, i64 2152505771, i64 2152505834}
!3396 = !DILocation(line: 57, column: 1, scope: !3383)
!3397 = !{i64 2152506169, i64 2152506189, i64 2152506252}
!3398 = !DILocation(line: 58, column: 1, scope: !3383)
!3399 = !{i64 2152506587, i64 2152506607, i64 2152506670}
!3400 = !DILocation(line: 59, column: 1, scope: !3383)
!3401 = !{i64 2152507005, i64 2152507025, i64 2152507088}
!3402 = !DILocation(line: 60, column: 1, scope: !3383)
!3403 = !{i64 2152507429, i64 2152507449, i64 2152507512}
!3404 = !DILocation(line: 61, column: 1, scope: !3383)
!3405 = !{i64 2152507746, i64 2152507766, i64 2152507829}
!3406 = !DILocation(line: 70, column: 1, scope: !3383)
!3407 = !{i64 2152507975, i64 2152507995, i64 2152508058}
!3408 = !DILocation(line: 72, column: 1, scope: !3383)
!3409 = !{i64 2152508307, i64 2152508327, i64 2152508390}
!3410 = !DILocation(line: 73, column: 1, scope: !3383)
!3411 = !{i64 2152508757, i64 2152508777, i64 2152508840}
!3412 = !DILocation(line: 74, column: 1, scope: !3383)
!3413 = !{i64 2152509207, i64 2152509227, i64 2152509290}
!3414 = !DILocation(line: 75, column: 1, scope: !3383)
!3415 = !{i64 2152509657, i64 2152509677, i64 2152509740}
!3416 = !DILocation(line: 76, column: 1, scope: !3383)
!3417 = !{i64 2152510107, i64 2152510127, i64 2152510190}
!3418 = !DILocation(line: 77, column: 1, scope: !3383)
!3419 = !{i64 2152510557, i64 2152510577, i64 2152510640}
!3420 = !DILocation(line: 78, column: 1, scope: !3383)
!3421 = !{i64 2152511007, i64 2152511027, i64 2152511090}
!3422 = !DILocation(line: 79, column: 1, scope: !3383)
!3423 = !{i64 2152511457, i64 2152511477, i64 2152511540}
!3424 = !DILocation(line: 80, column: 1, scope: !3383)
!3425 = !{i64 2152511910, i64 2152511930, i64 2152511993}
!3426 = !DILocation(line: 84, column: 1, scope: !3383)
!3427 = !{i64 2152516303, i64 2152516323, i64 2152516386}
!3428 = !DILocation(line: 91, column: 1, scope: !3383)
!3429 = !{i64 2152516700, i64 2152516720, i64 2152516783}
!3430 = !DILocation(line: 93, column: 1, scope: !3383)
!3431 = !{i64 2152517067, i64 2152517087, i64 2152517150}
!3432 = !DILocation(line: 106, column: 1, scope: !3383)
!3433 = !{i64 2152517337, i64 2152517357, i64 2152517420}
!3434 = !DILocation(line: 11, column: 1, scope: !3435)
!3435 = !DILexicalBlockFile(scope: !3326, file: !3436, discriminator: 0)
!3436 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3437 = distinct !DISubprogram(name: "s_cb", scope: !114, file: !114, line: 152, type: !287, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3438)
!3438 = !{!3439, !3440, !3447}
!3439 = !DILocalVariable(name: "chan", arg: 1, scope: !3437, file: !114, line: 152, type: !289)
!3440 = !DILocalVariable(name: "msg_received", scope: !3437, file: !114, line: 154, type: !3441)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bm_msg", file: !353, line: 15, size: 2048, elements: !3442)
!3442 = !{!3443}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3441, file: !353, line: 16, baseType: !3444, size: 2048)
!3444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 2048, elements: !3445)
!3445 = !{!3446}
!3446 = !DISubrange(count: 256)
!3447 = !DILocalVariable(name: "actual_message_data", scope: !3437, file: !114, line: 155, type: !3448)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 32)
!3449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!3450 = !DILocation(line: 0, scope: !3437)
!3451 = !DILocation(line: 154, column: 2, scope: !3437)
!3452 = !DILocation(line: 154, column: 16, scope: !3437)
!3453 = !DILocation(line: 155, column: 56, scope: !3437)
!3454 = !DILocation(line: 157, column: 45, scope: !3437)
!3455 = !DILocation(line: 157, column: 2, scope: !3437)
!3456 = !DILocation(line: 159, column: 8, scope: !3437)
!3457 = !DILocation(line: 160, column: 1, scope: !3437)
!3458 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !117, file: !117, line: 416, type: !3459, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3461)
!3459 = !DISubroutineType(types: !3460)
!3460 = !{!13, !289}
!3461 = !{!3462}
!3462 = !DILocalVariable(name: "chan", arg: 1, scope: !3458, file: !117, line: 416, type: !289)
!3463 = !DILocation(line: 0, scope: !3458)
!3464 = !DILocation(line: 420, column: 15, scope: !3458)
!3465 = !DILocation(line: 420, column: 2, scope: !3458)
!3466 = distinct !DISubprogram(name: "producer_thread", scope: !114, file: !114, line: 164, type: !334, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3467)
!3467 = !{!3468, !3469, !3471, !3473, !3474, !3476, !3477, !3478}
!3468 = !DILocalVariable(name: "msg", scope: !3466, file: !114, line: 169, type: !3441)
!3469 = !DILocalVariable(name: "actual_message_data", scope: !3466, file: !114, line: 170, type: !3470)
!3470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!3471 = !DILocalVariable(name: "i", scope: !3472, file: !114, line: 172, type: !109)
!3472 = distinct !DILexicalBlock(scope: !3466, file: !114, line: 172, column: 2)
!3473 = !DILocalVariable(name: "start", scope: !3466, file: !114, line: 186, type: !108)
!3474 = !DILocalVariable(name: "internal_count", scope: !3475, file: !114, line: 188, type: !109)
!3475 = distinct !DILexicalBlock(scope: !3466, file: !114, line: 188, column: 2)
!3476 = !DILocalVariable(name: "duration", scope: !3466, file: !114, line: 200, type: !108)
!3477 = !DILocalVariable(name: "i", scope: !3466, file: !114, line: 206, type: !109)
!3478 = !DILocalVariable(name: "f", scope: !3466, file: !114, line: 207, type: !109)
!3479 = !DILocation(line: 166, column: 2, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !114, line: 166, column: 2)
!3481 = distinct !DILexicalBlock(scope: !3482, file: !114, line: 166, column: 2)
!3482 = distinct !DILexicalBlock(scope: !3483, file: !114, line: 166, column: 2)
!3483 = distinct !DILexicalBlock(scope: !3466, file: !114, line: 166, column: 2)
!3484 = !DILocation(line: 169, column: 2, scope: !3466)
!3485 = !DILocation(line: 169, column: 16, scope: !3466)
!3486 = !DILocation(line: 0, scope: !3472)
!3487 = !DILocation(line: 172, column: 2, scope: !3472)
!3488 = !DILocation(line: 176, column: 2, scope: !3466)
!3489 = !DILocation(line: 0, scope: !3466)
!3490 = !DILocation(line: 179, column: 35, scope: !3466)
!3491 = !DILocation(line: 179, column: 33, scope: !3466)
!3492 = !DILocation(line: 181, column: 28, scope: !3466)
!3493 = !DILocation(line: 184, column: 2, scope: !3466)
!3494 = !DILocation(line: 186, column: 19, scope: !3466)
!3495 = !DILocation(line: 0, scope: !3475)
!3496 = !DILocation(line: 188, column: 2, scope: !3475)
!3497 = !DILocation(line: 173, column: 18, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !114, line: 172, column: 62)
!3499 = distinct !DILexicalBlock(scope: !3472, file: !114, line: 172, column: 2)
!3500 = !DILocation(line: 173, column: 3, scope: !3498)
!3501 = !DILocation(line: 173, column: 16, scope: !3498)
!3502 = !DILocation(line: 172, column: 57, scope: !3499)
!3503 = !DILocation(line: 172, column: 52, scope: !3499)
!3504 = distinct !{!3504, !3487, !3505}
!3505 = !DILocation(line: 174, column: 2, scope: !3472)
!3506 = !DILocation(line: 200, column: 23, scope: !3466)
!3507 = !DILocation(line: 200, column: 41, scope: !3466)
!3508 = !DILocation(line: 202, column: 15, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3466, file: !114, line: 202, column: 6)
!3510 = !DILocation(line: 202, column: 6, scope: !3466)
!3511 = !DILocation(line: 190, column: 3, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !114, line: 189, column: 49)
!3513 = distinct !DILexicalBlock(scope: !3475, file: !114, line: 188, column: 2)
!3514 = !DILocation(line: 194, column: 31, scope: !3512)
!3515 = !DILocation(line: 194, column: 3, scope: !3512)
!3516 = !DILocation(line: 196, column: 3, scope: !3512)
!3517 = !DILocation(line: 198, column: 33, scope: !3512)
!3518 = !DILocation(line: 198, column: 3, scope: !3512)
!3519 = !DILocation(line: 189, column: 22, scope: !3513)
!3520 = !DILocation(line: 188, column: 85, scope: !3513)
!3521 = distinct !{!3521, !3496, !3522}
!3522 = !DILocation(line: 199, column: 2, scope: !3475)
!3523 = !DILocation(line: 203, column: 3, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !114, line: 203, column: 3)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !114, line: 203, column: 3)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !114, line: 203, column: 3)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !114, line: 203, column: 3)
!3528 = distinct !DILexicalBlock(scope: !3509, file: !114, line: 202, column: 21)
!3529 = !DILocation(line: 204, column: 3, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3528, file: !114, line: 204, column: 3)
!3531 = !{i64 2152967618, i64 2152967634, i64 2152967660, i64 2152967688, i64 2152967708}
!3532 = !DILocation(line: 205, column: 2, scope: !3528)
!3533 = !DILocation(line: 206, column: 43, scope: !3466)
!3534 = !DILocation(line: 206, column: 41, scope: !3466)
!3535 = !DILocation(line: 207, column: 44, scope: !3466)
!3536 = !DILocation(line: 207, column: 56, scope: !3466)
!3537 = !DILocation(line: 209, column: 2, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !114, line: 209, column: 2)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !114, line: 209, column: 2)
!3540 = distinct !DILexicalBlock(scope: !3541, file: !114, line: 209, column: 2)
!3541 = distinct !DILexicalBlock(scope: !3466, file: !114, line: 209, column: 2)
!3542 = !DILocation(line: 210, column: 2, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !114, line: 210, column: 2)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !114, line: 210, column: 2)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !114, line: 210, column: 2)
!3546 = distinct !DILexicalBlock(scope: !3466, file: !114, line: 210, column: 2)
!3547 = !DILocation(line: 211, column: 2, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !114, line: 211, column: 2)
!3549 = distinct !DILexicalBlock(scope: !3550, file: !114, line: 211, column: 2)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !114, line: 211, column: 2)
!3551 = distinct !DILexicalBlock(scope: !3466, file: !114, line: 211, column: 2)
!3552 = !DILocation(line: 213, column: 2, scope: !3466)
!3553 = !DILocation(line: 214, column: 1, scope: !3466)
!3554 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3555, file: !3555, line: 175, type: !3556, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3558)
!3555 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!278, !103}
!3558 = !{!3559}
!3559 = !DILocalVariable(name: "level", arg: 1, scope: !3554, file: !3555, line: 175, type: !103)
!3560 = !DILocation(line: 0, scope: !3554)
!3561 = !DILocation(line: 177, column: 2, scope: !3554)
!3562 = !DILocation(line: 189, column: 1, scope: !3554)
!3563 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !137, file: !137, line: 1640, type: !3564, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{!108}
!3566 = !DILocation(line: 1642, column: 19, scope: !3563)
!3567 = !DILocation(line: 1642, column: 9, scope: !3563)
!3568 = !DILocation(line: 1642, column: 2, scope: !3563)
!3569 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3570, file: !3570, line: 403, type: !3571, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3573)
!3570 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3571 = !DISubroutineType(types: !3572)
!3572 = !{!109, !109}
!3573 = !{!3574}
!3574 = !DILocalVariable(name: "t", arg: 1, scope: !3569, file: !3570, line: 403, type: !109)
!3575 = !DILocation(line: 0, scope: !3569)
!3576 = !DILocation(line: 406, column: 2, scope: !3569)
!3577 = distinct !DISubprogram(name: "k_uptime_get", scope: !137, file: !137, line: 1616, type: !3578, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{!106}
!3580 = !DILocation(line: 1618, column: 31, scope: !3577)
!3581 = !DILocation(line: 1618, column: 9, scope: !3577)
!3582 = !DILocation(line: 1618, column: 2, scope: !3577)
!3583 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3584, file: !3584, line: 564, type: !3578, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3584 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!3585 = !DILocation(line: 573, column: 2, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3583, file: !3584, line: 573, column: 2)
!3587 = !{i64 2152234560}
!3588 = !DILocation(line: 574, column: 9, scope: !3583)
!3589 = !DILocation(line: 574, column: 2, scope: !3583)
!3590 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3570, file: !3570, line: 1103, type: !3571, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3591)
!3591 = !{!3592}
!3592 = !DILocalVariable(name: "t", arg: 1, scope: !3590, file: !3570, line: 1103, type: !109)
!3593 = !DILocation(line: 0, scope: !3590)
!3594 = !DILocalVariable(name: "t", arg: 1, scope: !3595, file: !3570, line: 102, type: !109)
!3595 = distinct !DISubprogram(name: "z_tmcvt", scope: !3570, file: !3570, line: 102, type: !3596, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3598)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{!109, !109, !108, !108, !131, !131, !131, !131}
!3598 = !{!3594, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3608}
!3599 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3595, file: !3570, line: 102, type: !108)
!3600 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3595, file: !3570, line: 103, type: !108)
!3601 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3595, file: !3570, line: 103, type: !131)
!3602 = !DILocalVariable(name: "result32", arg: 5, scope: !3595, file: !3570, line: 104, type: !131)
!3603 = !DILocalVariable(name: "round_up", arg: 6, scope: !3595, file: !3570, line: 104, type: !131)
!3604 = !DILocalVariable(name: "round_off", arg: 7, scope: !3595, file: !3570, line: 105, type: !131)
!3605 = !DILocalVariable(name: "mul_ratio", scope: !3595, file: !3570, line: 107, type: !131)
!3606 = !DILocalVariable(name: "div_ratio", scope: !3595, file: !3570, line: 109, type: !131)
!3607 = !DILocalVariable(name: "off", scope: !3595, file: !3570, line: 116, type: !109)
!3608 = !DILocalVariable(name: "rdivisor", scope: !3609, file: !3570, line: 119, type: !108)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !3570, line: 118, column: 18)
!3610 = distinct !DILexicalBlock(scope: !3595, file: !3570, line: 118, column: 6)
!3611 = !DILocation(line: 0, scope: !3595, inlinedAt: !3612)
!3612 = distinct !DILocation(line: 1106, column: 9, scope: !3590)
!3613 = !DILocation(line: 139, column: 13, scope: !3614, inlinedAt: !3612)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !3570, line: 138, column: 10)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !3570, line: 136, column: 7)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !3570, line: 134, column: 17)
!3617 = distinct !DILexicalBlock(scope: !3595, file: !3570, line: 134, column: 6)
!3618 = !DILocation(line: 1106, column: 2, scope: !3590)
!3619 = distinct !DISubprogram(name: "cbvprintf_package", scope: !381, file: !381, line: 233, type: !3620, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3629)
!3620 = !DISubroutineType(types: !3621)
!3621 = !{!103, !102, !132, !108, !337, !3622}
!3622 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3623, line: 99, baseType: !3624)
!3623 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3624 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3623, line: 40, baseType: !3625)
!3625 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !381, baseType: !3626)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3627)
!3627 = !{!3628}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3626, file: !381, line: 18, baseType: !102, size: 32)
!3629 = !{!3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3665, !3674, !3677, !3678, !3681, !3684, !3687, !3690, !3696}
!3630 = !DILocalVariable(name: "packaged", arg: 1, scope: !3619, file: !381, line: 233, type: !102)
!3631 = !DILocalVariable(name: "len", arg: 2, scope: !3619, file: !381, line: 233, type: !132)
!3632 = !DILocalVariable(name: "flags", arg: 3, scope: !3619, file: !381, line: 233, type: !108)
!3633 = !DILocalVariable(name: "fmt", arg: 4, scope: !3619, file: !381, line: 234, type: !337)
!3634 = !DILocalVariable(name: "ap", arg: 5, scope: !3619, file: !381, line: 234, type: !3622)
!3635 = !DILocalVariable(name: "buf0", scope: !3619, file: !381, line: 247, type: !379)
!3636 = !DILocalVariable(name: "buf", scope: !3619, file: !381, line: 248, type: !379)
!3637 = !DILocalVariable(name: "size", scope: !3619, file: !381, line: 249, type: !32)
!3638 = !DILocalVariable(name: "align", scope: !3619, file: !381, line: 250, type: !32)
!3639 = !DILocalVariable(name: "str_ptr_pos", scope: !3619, file: !381, line: 251, type: !3640)
!3640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !941)
!3641 = !DILocalVariable(name: "str_ptr_arg", scope: !3619, file: !381, line: 252, type: !3640)
!3642 = !DILocalVariable(name: "s_idx", scope: !3619, file: !381, line: 253, type: !32)
!3643 = !DILocalVariable(name: "s_rw_cnt", scope: !3619, file: !381, line: 254, type: !32)
!3644 = !DILocalVariable(name: "s_ro_cnt", scope: !3619, file: !381, line: 255, type: !32)
!3645 = !DILocalVariable(name: "arg_idx", scope: !3619, file: !381, line: 256, type: !103)
!3646 = !DILocalVariable(name: "i", scope: !3619, file: !381, line: 257, type: !32)
!3647 = !DILocalVariable(name: "s", scope: !3619, file: !381, line: 258, type: !337)
!3648 = !DILocalVariable(name: "parsing", scope: !3619, file: !381, line: 259, type: !131)
!3649 = !DILocalVariable(name: "rws_pos_en", scope: !3619, file: !381, line: 263, type: !131)
!3650 = !DILocalVariable(name: "fros_cnt", scope: !3619, file: !381, line: 268, type: !103)
!3651 = !DILocalVariable(name: "is_str_arg", scope: !3619, file: !381, line: 269, type: !131)
!3652 = !DILocalVariable(name: "pkg_hdr", scope: !3619, file: !381, line: 270, type: !3653)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 32)
!3654 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3655, line: 78, size: 32, elements: !3656)
!3655 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3656 = !{!3657, !3664}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3654, file: !3655, line: 80, baseType: !3658, size: 32)
!3658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3655, line: 45, size: 32, elements: !3659)
!3659 = !{!3660, !3661, !3662, !3663}
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3658, file: !3655, line: 47, baseType: !185, size: 8)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3658, file: !3655, line: 50, baseType: !185, size: 8, offset: 8)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3658, file: !3655, line: 53, baseType: !185, size: 8, offset: 16)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3658, file: !3655, line: 56, baseType: !185, size: 8, offset: 24)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3654, file: !3655, line: 82, baseType: !102, size: 32)
!3665 = !DILocalVariable(name: "v", scope: !3666, file: !381, line: 567, type: !3670)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !381, line: 562, column: 14)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !381, line: 481, column: 18)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !381, line: 466, column: 3)
!3669 = distinct !DILexicalBlock(scope: !3619, file: !381, line: 343, column: 15)
!3670 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3619, file: !381, line: 567, size: 64, elements: !3671)
!3671 = !{!3672, !3673}
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3670, file: !381, line: 567, baseType: !372, size: 64)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3670, file: !381, line: 567, baseType: !370, size: 64)
!3674 = !DILocalVariable(name: "is_ro", scope: !3675, file: !381, line: 620, type: !131)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !381, line: 613, column: 19)
!3676 = distinct !DILexicalBlock(scope: !3669, file: !381, line: 613, column: 7)
!3677 = !DILocalVariable(name: "do_ro", scope: !3675, file: !381, line: 621, type: !131)
!3678 = !DILocalVariable(name: "s_ptr_idx", scope: !3679, file: !381, line: 626, type: !108)
!3679 = distinct !DILexicalBlock(scope: !3680, file: !381, line: 625, column: 11)
!3680 = distinct !DILexicalBlock(scope: !3675, file: !381, line: 623, column: 8)
!3681 = !DILocalVariable(name: "v", scope: !3682, file: !381, line: 684, type: !103)
!3682 = distinct !DILexicalBlock(scope: !3683, file: !381, line: 683, column: 35)
!3683 = distinct !DILexicalBlock(scope: !3676, file: !381, line: 683, column: 14)
!3684 = !DILocalVariable(name: "v", scope: !3685, file: !381, line: 691, type: !376)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !381, line: 690, column: 36)
!3686 = distinct !DILexicalBlock(scope: !3683, file: !381, line: 690, column: 14)
!3687 = !DILocalVariable(name: "v", scope: !3688, file: !381, line: 698, type: !107)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !381, line: 697, column: 41)
!3689 = distinct !DILexicalBlock(scope: !3686, file: !381, line: 697, column: 14)
!3690 = !DILocalVariable(name: "pos", scope: !3691, file: !381, line: 762, type: !185)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !381, line: 757, column: 31)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !381, line: 757, column: 3)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !381, line: 757, column: 3)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !381, line: 756, column: 16)
!3695 = distinct !DILexicalBlock(scope: !3619, file: !381, line: 756, column: 6)
!3696 = !DILabel(scope: !3675, name: "process_string", file: !381, line: 615)
!3697 = !DILocation(line: 0, scope: !3619)
!3698 = !DILocation(line: 251, column: 2, scope: !3619)
!3699 = !DILocation(line: 251, column: 10, scope: !3619)
!3700 = !DILocation(line: 252, column: 2, scope: !3619)
!3701 = !DILocation(line: 252, column: 10, scope: !3619)
!3702 = !DILocation(line: 263, column: 29, scope: !3619)
!3703 = !DILocation(line: 263, column: 21, scope: !3619)
!3704 = !DILocation(line: 268, column: 21, scope: !3619)
!3705 = !DILocation(line: 268, column: 19, scope: !3619)
!3706 = !DILocation(line: 273, column: 6, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3619, file: !381, line: 273, column: 6)
!3708 = !DILocation(line: 273, column: 26, scope: !3707)
!3709 = !DILocation(line: 273, column: 6, scope: !3619)
!3710 = !DILocation(line: 297, column: 6, scope: !3619)
!3711 = !DILocation(line: 305, column: 11, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3619, file: !381, line: 305, column: 6)
!3713 = !DILocation(line: 305, column: 6, scope: !3619)
!3714 = !DILocation(line: 327, column: 19, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3619, file: !381, line: 327, column: 6)
!3716 = !DILocation(line: 327, column: 22, scope: !3715)
!3717 = !DILocation(line: 327, column: 33, scope: !3715)
!3718 = !DILocation(line: 327, column: 50, scope: !3715)
!3719 = !DILocation(line: 327, column: 6, scope: !3619)
!3720 = !DILocation(line: 338, column: 9, scope: !3619)
!3721 = !DILocation(line: 341, column: 2, scope: !3619)
!3722 = !DILocation(line: 472, column: 8, scope: !3668)
!3723 = !DILocation(line: 473, column: 14, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3725, file: !381, line: 473, column: 9)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !381, line: 472, column: 18)
!3726 = distinct !DILexicalBlock(scope: !3668, file: !381, line: 472, column: 8)
!3727 = !DILocation(line: 473, column: 9, scope: !3725)
!3728 = !DILocation(line: 479, column: 5, scope: !3725)
!3729 = !DILocation(line: 468, column: 9, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3668, file: !381, line: 468, column: 8)
!3731 = !DILocation(line: 468, column: 8, scope: !3730)
!3732 = !DILocation(line: 468, column: 15, scope: !3730)
!3733 = !DILocation(line: 468, column: 8, scope: !3668)
!3734 = distinct !{!3734, !3735, !3736}
!3735 = !DILocation(line: 343, column: 2, scope: !3619)
!3736 = !DILocation(line: 712, column: 2, scope: !3619)
!3737 = !DILocation(line: 481, column: 4, scope: !3668)
!3738 = !DILocation(line: 484, column: 12, scope: !3667)
!3739 = !DILocation(line: 485, column: 5, scope: !3667)
!3740 = !DILocation(line: 505, column: 5, scope: !3667)
!3741 = !DILocation(line: 518, column: 5, scope: !3667)
!3742 = !DILocation(line: 523, column: 5, scope: !3667)
!3743 = !DILocation(line: 532, column: 9, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3667, file: !381, line: 532, column: 9)
!3745 = !DILocation(line: 532, column: 17, scope: !3744)
!3746 = !DILocation(line: 532, column: 9, scope: !3667)
!3747 = !DILocation(line: 533, column: 10, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !381, line: 533, column: 10)
!3749 = distinct !DILexicalBlock(scope: !3744, file: !381, line: 532, column: 25)
!3750 = !DILocation(line: 533, column: 18, scope: !3748)
!3751 = !DILocation(line: 0, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3666, file: !381, line: 569, column: 9)
!3753 = !DILocation(line: 0, scope: !3666)
!3754 = !DILocation(line: 579, column: 20, scope: !3666)
!3755 = !DILocation(line: 579, column: 11, scope: !3666)
!3756 = !DILocation(line: 580, column: 9, scope: !3666)
!3757 = !DILocation(line: 582, column: 21, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !381, line: 582, column: 10)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !381, line: 580, column: 23)
!3760 = distinct !DILexicalBlock(scope: !3666, file: !381, line: 580, column: 9)
!3761 = !DILocation(line: 582, column: 28, scope: !3758)
!3762 = !DILocation(line: 582, column: 10, scope: !3759)
!3763 = !DILocation(line: 0, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !381, line: 587, column: 17)
!3765 = distinct !DILexicalBlock(scope: !3759, file: !381, line: 585, column: 10)
!3766 = !DILocation(line: 593, column: 9, scope: !3666)
!3767 = !DILocation(line: 600, column: 5, scope: !3667)
!3768 = !DILocation(line: 605, column: 18, scope: !3669)
!3769 = !DILocation(line: 605, column: 9, scope: !3669)
!3770 = !DILocation(line: 608, column: 20, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3669, file: !381, line: 608, column: 7)
!3772 = !DILocation(line: 608, column: 23, scope: !3771)
!3773 = !DILocation(line: 608, column: 34, scope: !3771)
!3774 = !DILocation(line: 608, column: 41, scope: !3771)
!3775 = !DILocation(line: 608, column: 7, scope: !3669)
!3776 = !DILocation(line: 613, column: 7, scope: !3669)
!3777 = !DILocation(line: 614, column: 8, scope: !3675)
!3778 = !DILocation(line: 614, column: 4, scope: !3675)
!3779 = !DILocation(line: 255, column: 15, scope: !3619)
!3780 = !DILocation(line: 256, column: 6, scope: !3619)
!3781 = !DILocation(line: 254, column: 15, scope: !3619)
!3782 = !DILocation(line: 253, column: 15, scope: !3619)
!3783 = !DILocation(line: 320, column: 7, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3712, file: !381, line: 305, column: 20)
!3785 = !DILocation(line: 615, column: 1, scope: !3675)
!3786 = !DILocation(line: 616, column: 8, scope: !3675)
!3787 = !DILocation(line: 617, column: 5, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !381, line: 616, column: 22)
!3789 = distinct !DILexicalBlock(scope: !3675, file: !381, line: 616, column: 8)
!3790 = !DILocation(line: 617, column: 25, scope: !3788)
!3791 = !DILocation(line: 618, column: 4, scope: !3788)
!3792 = !DILocation(line: 620, column: 26, scope: !3675)
!3793 = !DILocation(line: 620, column: 29, scope: !3675)
!3794 = !DILocation(line: 620, column: 17, scope: !3675)
!3795 = !DILocation(line: 620, column: 43, scope: !3675)
!3796 = !DILocation(line: 0, scope: !3675)
!3797 = !DILocation(line: 623, column: 14, scope: !3680)
!3798 = !DILocation(line: 626, column: 26, scope: !3679)
!3799 = !DILocation(line: 626, column: 37, scope: !3679)
!3800 = !DILocation(line: 0, scope: !3679)
!3801 = !DILocation(line: 634, column: 15, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3679, file: !381, line: 634, column: 9)
!3803 = !DILocation(line: 644, column: 9, scope: !3679)
!3804 = !DILocation(line: 649, column: 27, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3806, file: !381, line: 644, column: 23)
!3806 = distinct !DILexicalBlock(scope: !3679, file: !381, line: 644, column: 9)
!3807 = !DILocation(line: 649, column: 6, scope: !3805)
!3808 = !DILocation(line: 649, column: 25, scope: !3805)
!3809 = !DILocation(line: 650, column: 27, scope: !3805)
!3810 = !DILocation(line: 650, column: 6, scope: !3805)
!3811 = !DILocation(line: 650, column: 25, scope: !3805)
!3812 = !DILocation(line: 651, column: 10, scope: !3805)
!3813 = !DILocation(line: 653, column: 26, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !381, line: 651, column: 17)
!3815 = distinct !DILexicalBlock(scope: !3805, file: !381, line: 651, column: 10)
!3816 = !DILocation(line: 654, column: 15, scope: !3814)
!3817 = !DILocation(line: 655, column: 6, scope: !3814)
!3818 = !DILocation(line: 656, column: 15, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3815, file: !381, line: 655, column: 13)
!3820 = !DILocation(line: 658, column: 16, scope: !3806)
!3821 = !DILocation(line: 663, column: 10, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3823, file: !381, line: 658, column: 23)
!3823 = distinct !DILexicalBlock(scope: !3806, file: !381, line: 658, column: 16)
!3824 = !DILocation(line: 664, column: 5, scope: !3822)
!3825 = !DILocation(line: 664, column: 16, scope: !3823)
!3826 = !DILocation(line: 669, column: 10, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !381, line: 664, column: 28)
!3828 = distinct !DILexicalBlock(scope: !3823, file: !381, line: 664, column: 16)
!3829 = !DILocation(line: 670, column: 5, scope: !3827)
!3830 = !DILocation(line: 675, column: 13, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3828, file: !381, line: 670, column: 12)
!3832 = !DILocation(line: 675, column: 27, scope: !3831)
!3833 = !DILocation(line: 675, column: 10, scope: !3831)
!3834 = !DILocation(line: 678, column: 10, scope: !3679)
!3835 = !DILocation(line: 680, column: 8, scope: !3675)
!3836 = !DILocation(line: 683, column: 14, scope: !3676)
!3837 = !DILocation(line: 684, column: 12, scope: !3682)
!3838 = !DILocation(line: 0, scope: !3682)
!3839 = !DILocation(line: 686, column: 8, scope: !3682)
!3840 = !DILocation(line: 687, column: 5, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !381, line: 686, column: 22)
!3842 = distinct !DILexicalBlock(scope: !3682, file: !381, line: 686, column: 8)
!3843 = !DILocation(line: 687, column: 17, scope: !3841)
!3844 = !DILocation(line: 688, column: 4, scope: !3841)
!3845 = !DILocation(line: 698, column: 18, scope: !3688)
!3846 = !DILocation(line: 0, scope: !3688)
!3847 = !DILocation(line: 700, column: 8, scope: !3688)
!3848 = !DILocation(line: 704, column: 6, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !381, line: 703, column: 12)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !381, line: 701, column: 9)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !381, line: 700, column: 22)
!3852 = distinct !DILexicalBlock(scope: !3688, file: !381, line: 700, column: 8)
!3853 = !DILocation(line: 704, column: 24, scope: !3849)
!3854 = !DILocation(line: 706, column: 4, scope: !3851)
!3855 = !DILocation(line: 0, scope: !3683)
!3856 = !DILocation(line: 0, scope: !3669)
!3857 = !DILocation(line: 720, column: 6, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3619, file: !381, line: 720, column: 6)
!3859 = !DILocation(line: 720, column: 17, scope: !3858)
!3860 = !DILocation(line: 720, column: 31, scope: !3858)
!3861 = !DILocation(line: 720, column: 6, scope: !3619)
!3862 = !DILocation(line: 729, column: 6, scope: !3619)
!3863 = !DILocation(line: 730, column: 21, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !381, line: 729, column: 20)
!3865 = distinct !DILexicalBlock(scope: !3619, file: !381, line: 729, column: 6)
!3866 = !DILocation(line: 730, column: 27, scope: !3864)
!3867 = !DILocation(line: 730, column: 3, scope: !3864)
!3868 = !DILocation(line: 737, column: 22, scope: !3619)
!3869 = !DILocation(line: 737, column: 20, scope: !3619)
!3870 = !DILocation(line: 0, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3619, file: !381, line: 739, column: 6)
!3872 = !DILocation(line: 745, column: 17, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3871, file: !381, line: 743, column: 9)
!3874 = !DILocation(line: 745, column: 25, scope: !3873)
!3875 = !DILocation(line: 746, column: 17, scope: !3873)
!3876 = !DILocation(line: 746, column: 28, scope: !3873)
!3877 = !DILocation(line: 749, column: 29, scope: !3619)
!3878 = !DILocation(line: 749, column: 16, scope: !3619)
!3879 = !DILocation(line: 749, column: 27, scope: !3619)
!3880 = !DILocation(line: 756, column: 6, scope: !3695)
!3881 = !DILocation(line: 756, column: 6, scope: !3619)
!3882 = !DILocation(line: 757, column: 3, scope: !3693)
!3883 = !DILocation(line: 758, column: 10, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3691, file: !381, line: 758, column: 8)
!3885 = !DILocation(line: 758, column: 25, scope: !3884)
!3886 = !DILocation(line: 758, column: 8, scope: !3691)
!3887 = !DILocation(line: 0, scope: !3691)
!3888 = !DILocation(line: 765, column: 8, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3691, file: !381, line: 765, column: 8)
!3890 = !DILocation(line: 765, column: 19, scope: !3889)
!3891 = !DILocation(line: 765, column: 23, scope: !3889)
!3892 = !DILocation(line: 765, column: 8, scope: !3691)
!3893 = !DILocation(line: 762, column: 33, scope: !3691)
!3894 = !DILocation(line: 769, column: 8, scope: !3691)
!3895 = !DILocation(line: 769, column: 11, scope: !3691)
!3896 = !DILocation(line: 757, column: 27, scope: !3692)
!3897 = !DILocation(line: 757, column: 17, scope: !3692)
!3898 = distinct !{!3898, !3882, !3899}
!3899 = !DILocation(line: 770, column: 3, scope: !3693)
!3900 = !DILocation(line: 774, column: 16, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3902, file: !381, line: 774, column: 2)
!3902 = distinct !DILexicalBlock(scope: !3619, file: !381, line: 774, column: 2)
!3903 = !DILocation(line: 774, column: 2, scope: !3902)
!3904 = !DILocation(line: 776, column: 16, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !381, line: 776, column: 7)
!3906 = distinct !DILexicalBlock(scope: !3901, file: !381, line: 774, column: 30)
!3907 = !DILocation(line: 776, column: 19, scope: !3905)
!3908 = !DILocation(line: 776, column: 34, scope: !3905)
!3909 = !DILocation(line: 776, column: 7, scope: !3906)
!3910 = !DILocation(line: 780, column: 7, scope: !3906)
!3911 = !DILocation(line: 782, column: 13, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !381, line: 780, column: 19)
!3913 = distinct !DILexicalBlock(scope: !3906, file: !381, line: 780, column: 7)
!3914 = !DILocation(line: 782, column: 8, scope: !3912)
!3915 = !DILocation(line: 782, column: 11, scope: !3912)
!3916 = !DILocation(line: 783, column: 3, scope: !3912)
!3917 = !DILocation(line: 785, column: 26, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3913, file: !381, line: 783, column: 10)
!3919 = !DILocation(line: 785, column: 41, scope: !3918)
!3920 = !DILocation(line: 785, column: 24, scope: !3918)
!3921 = !DILocation(line: 785, column: 8, scope: !3918)
!3922 = !DILocation(line: 787, column: 52, scope: !3918)
!3923 = !DILocation(line: 789, column: 11, scope: !3918)
!3924 = !DILocation(line: 789, column: 21, scope: !3918)
!3925 = !DILocation(line: 0, scope: !3913)
!3926 = !DILocation(line: 793, column: 7, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3906, file: !381, line: 793, column: 7)
!3928 = !DILocation(line: 793, column: 18, scope: !3927)
!3929 = !DILocation(line: 793, column: 22, scope: !3927)
!3930 = !DILocation(line: 793, column: 29, scope: !3927)
!3931 = !DILocation(line: 793, column: 7, scope: !3906)
!3932 = !DILocation(line: 797, column: 12, scope: !3906)
!3933 = !DILocation(line: 797, column: 7, scope: !3906)
!3934 = !DILocation(line: 797, column: 10, scope: !3906)
!3935 = !DILocation(line: 799, column: 3, scope: !3906)
!3936 = !DILocation(line: 800, column: 7, scope: !3906)
!3937 = !DILocation(line: 801, column: 2, scope: !3906)
!3938 = !DILocation(line: 338, column: 4, scope: !3619)
!3939 = !DILocation(line: 774, column: 26, scope: !3901)
!3940 = distinct !{!3940, !3903, !3941}
!3941 = !DILocation(line: 801, column: 2, scope: !3902)
!3942 = !DILocation(line: 808, column: 9, scope: !3619)
!3943 = !DILocation(line: 808, column: 2, scope: !3619)
!3944 = !DILocation(line: 813, column: 1, scope: !3619)
!3945 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !381, file: !381, line: 33, type: !3946, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3948)
!3946 = !DISubroutineType(types: !3947)
!3947 = !{!131, !337}
!3948 = !{!3949}
!3949 = !DILocalVariable(name: "addr", arg: 1, scope: !3945, file: !381, line: 33, type: !337)
!3950 = !DILocation(line: 0, scope: !3945)
!3951 = !DILocation(line: 41, column: 9, scope: !3945)
!3952 = !DILocation(line: 41, column: 2, scope: !3945)
!3953 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3954, file: !3954, line: 24, type: !3955, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3957)
!3954 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3955 = !DISubroutineType(types: !3956)
!3956 = !{!131, !13}
!3957 = !{!3958}
!3958 = !DILocalVariable(name: "addr", arg: 1, scope: !3953, file: !3954, line: 24, type: !13)
!3959 = !DILocation(line: 0, scope: !3953)
!3960 = !DILocation(line: 49, column: 30, scope: !3953)
!3961 = !DILocation(line: 49, column: 57, scope: !3953)
!3962 = !DILocation(line: 49, column: 2, scope: !3953)
!3963 = distinct !DISubprogram(name: "cbprintf_package", scope: !381, file: !381, line: 815, type: !3964, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3966)
!3964 = !DISubroutineType(types: !3965)
!3965 = !{!103, !102, !132, !108, !337, null}
!3966 = !{!3967, !3968, !3969, !3970, !3971, !3972}
!3967 = !DILocalVariable(name: "packaged", arg: 1, scope: !3963, file: !381, line: 815, type: !102)
!3968 = !DILocalVariable(name: "len", arg: 2, scope: !3963, file: !381, line: 815, type: !132)
!3969 = !DILocalVariable(name: "flags", arg: 3, scope: !3963, file: !381, line: 815, type: !108)
!3970 = !DILocalVariable(name: "format", arg: 4, scope: !3963, file: !381, line: 816, type: !337)
!3971 = !DILocalVariable(name: "ap", scope: !3963, file: !381, line: 818, type: !3622)
!3972 = !DILocalVariable(name: "ret", scope: !3963, file: !381, line: 819, type: !103)
!3973 = !DILocation(line: 0, scope: !3963)
!3974 = !DILocation(line: 818, column: 2, scope: !3963)
!3975 = !DILocation(line: 818, column: 10, scope: !3963)
!3976 = !DILocation(line: 821, column: 2, scope: !3963)
!3977 = !DILocation(line: 822, column: 8, scope: !3963)
!3978 = !DILocation(line: 823, column: 2, scope: !3963)
!3979 = !DILocation(line: 825, column: 1, scope: !3963)
!3980 = !DILocation(line: 824, column: 2, scope: !3963)
!3981 = distinct !DISubprogram(name: "cbpprintf_external", scope: !381, file: !381, line: 827, type: !3982, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3992)
!3982 = !DISubroutineType(types: !3983)
!3983 = !{!103, !3984, !3988, !102, !102}
!3984 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3655, line: 297, baseType: !3985)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 32)
!3986 = !DISubroutineType(types: !3987)
!3987 = !{!103, null}
!3988 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3655, line: 328, baseType: !3989)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 32)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!103, !3984, !102, !337, !3622}
!3992 = !{!3993, !3994, !3995, !3996, !3997, !3998, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011}
!3993 = !DILocalVariable(name: "out", arg: 1, scope: !3981, file: !381, line: 827, type: !3984)
!3994 = !DILocalVariable(name: "formatter", arg: 2, scope: !3981, file: !381, line: 828, type: !3988)
!3995 = !DILocalVariable(name: "ctx", arg: 3, scope: !3981, file: !381, line: 829, type: !102)
!3996 = !DILocalVariable(name: "packaged", arg: 4, scope: !3981, file: !381, line: 829, type: !102)
!3997 = !DILocalVariable(name: "buf", scope: !3981, file: !381, line: 831, type: !379)
!3998 = !DILocalVariable(name: "hdr", scope: !3981, file: !381, line: 832, type: !3999)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 32)
!4000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3655, line: 96, size: 64, elements: !4001)
!4001 = !{!4002, !4003}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4000, file: !3655, line: 98, baseType: !3654, size: 32)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4000, file: !3655, line: 101, baseType: !277, size: 32, offset: 32)
!4004 = !DILocalVariable(name: "s", scope: !3981, file: !381, line: 833, type: !277)
!4005 = !DILocalVariable(name: "ps", scope: !3981, file: !381, line: 833, type: !378)
!4006 = !DILocalVariable(name: "i", scope: !3981, file: !381, line: 834, type: !32)
!4007 = !DILocalVariable(name: "args_size", scope: !3981, file: !381, line: 834, type: !32)
!4008 = !DILocalVariable(name: "s_nbr", scope: !3981, file: !381, line: 834, type: !32)
!4009 = !DILocalVariable(name: "ros_nbr", scope: !3981, file: !381, line: 834, type: !32)
!4010 = !DILocalVariable(name: "rws_nbr", scope: !3981, file: !381, line: 834, type: !32)
!4011 = !DILocalVariable(name: "s_idx", scope: !3981, file: !381, line: 834, type: !32)
!4012 = !DILocation(line: 0, scope: !3981)
!4013 = !DILocation(line: 836, column: 10, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !3981, file: !381, line: 836, column: 6)
!4015 = !DILocation(line: 836, column: 6, scope: !3981)
!4016 = !DILocation(line: 842, column: 28, scope: !3981)
!4017 = !DILocation(line: 842, column: 14, scope: !3981)
!4018 = !DILocation(line: 852, column: 16, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4020, file: !381, line: 852, column: 2)
!4020 = distinct !DILexicalBlock(scope: !3981, file: !381, line: 852, column: 2)
!4021 = !DILocation(line: 852, column: 2, scope: !4020)
!4022 = !DILocation(line: 841, column: 28, scope: !3981)
!4023 = !DILocation(line: 841, column: 14, scope: !3981)
!4024 = !DILocation(line: 841, column: 32, scope: !3981)
!4025 = !DILocation(line: 847, column: 19, scope: !3981)
!4026 = !DILocation(line: 843, column: 28, scope: !3981)
!4027 = !DILocation(line: 843, column: 14, scope: !3981)
!4028 = !DILocation(line: 847, column: 31, scope: !3981)
!4029 = !DILocation(line: 844, column: 28, scope: !3981)
!4030 = !DILocation(line: 844, column: 14, scope: !3981)
!4031 = !DILocation(line: 847, column: 45, scope: !3981)
!4032 = !DILocation(line: 847, column: 41, scope: !3981)
!4033 = !DILocation(line: 854, column: 24, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4019, file: !381, line: 852, column: 30)
!4035 = !DILocation(line: 854, column: 11, scope: !4034)
!4036 = !DILocation(line: 855, column: 30, scope: !4034)
!4037 = !DILocation(line: 855, column: 22, scope: !4034)
!4038 = !DILocation(line: 855, column: 8, scope: !4034)
!4039 = !DILocation(line: 857, column: 7, scope: !4034)
!4040 = !DILocation(line: 859, column: 8, scope: !4034)
!4041 = !DILocation(line: 859, column: 18, scope: !4034)
!4042 = !DILocation(line: 859, column: 5, scope: !4034)
!4043 = !DILocation(line: 852, column: 26, scope: !4019)
!4044 = distinct !{!4044, !4021, !4045}
!4045 = !DILocation(line: 860, column: 2, scope: !4020)
!4046 = !DILocation(line: 863, column: 6, scope: !3981)
!4047 = !DILocation(line: 866, column: 56, scope: !3981)
!4048 = !DILocation(line: 866, column: 9, scope: !3981)
!4049 = !DILocation(line: 866, column: 2, scope: !3981)
!4050 = !DILocation(line: 867, column: 1, scope: !3981)
!4051 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !381, file: !381, line: 179, type: !4052, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4054)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{!103, !3984, !3988, !102, !337, !102}
!4054 = !{!4055, !4056, !4057, !4058, !4059, !4060}
!4055 = !DILocalVariable(name: "out", arg: 1, scope: !4051, file: !381, line: 179, type: !3984)
!4056 = !DILocalVariable(name: "formatter", arg: 2, scope: !4051, file: !381, line: 180, type: !3988)
!4057 = !DILocalVariable(name: "ctx", arg: 3, scope: !4051, file: !381, line: 181, type: !102)
!4058 = !DILocalVariable(name: "fmt", arg: 4, scope: !4051, file: !381, line: 182, type: !337)
!4059 = !DILocalVariable(name: "buf", arg: 5, scope: !4051, file: !381, line: 182, type: !102)
!4060 = !DILocalVariable(name: "u", scope: !4051, file: !381, line: 187, type: !4061)
!4061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4051, file: !381, line: 184, size: 32, elements: !4062)
!4062 = !{!4063, !4064}
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4061, file: !381, line: 185, baseType: !3622, size: 32)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4061, file: !381, line: 186, baseType: !102, size: 32)
!4065 = !DILocation(line: 0, scope: !4051)
!4066 = !DILocation(line: 191, column: 9, scope: !4051)
!4067 = !DILocation(line: 191, column: 2, scope: !4051)
!4068 = distinct !DISubprogram(name: "is_ptr", scope: !381, file: !381, line: 881, type: !4069, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4071)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!131, !337, !103}
!4071 = !{!4072, !4073, !4074, !4075, !4076}
!4072 = !DILocalVariable(name: "fmt", arg: 1, scope: !4068, file: !381, line: 881, type: !337)
!4073 = !DILocalVariable(name: "n", arg: 2, scope: !4068, file: !381, line: 881, type: !103)
!4074 = !DILocalVariable(name: "c", scope: !4068, file: !381, line: 883, type: !278)
!4075 = !DILocalVariable(name: "mod", scope: !4068, file: !381, line: 884, type: !131)
!4076 = !DILocalVariable(name: "cnt", scope: !4068, file: !381, line: 885, type: !103)
!4077 = !DILocation(line: 0, scope: !4068)
!4078 = !DILocation(line: 887, column: 14, scope: !4068)
!4079 = !DILocation(line: 887, column: 22, scope: !4068)
!4080 = !DILocation(line: 887, column: 2, scope: !4068)
!4081 = !DILocation(line: 887, column: 18, scope: !4068)
!4082 = !DILocation(line: 888, column: 7, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4068, file: !381, line: 887, column: 31)
!4084 = !DILocation(line: 889, column: 12, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !381, line: 889, column: 8)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !381, line: 888, column: 12)
!4087 = distinct !DILexicalBlock(scope: !4083, file: !381, line: 888, column: 7)
!4088 = !DILocation(line: 889, column: 8, scope: !4086)
!4089 = !DILocation(line: 890, column: 11, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4091, file: !381, line: 890, column: 9)
!4091 = distinct !DILexicalBlock(scope: !4085, file: !381, line: 889, column: 18)
!4092 = !DILocation(line: 890, column: 9, scope: !4091)
!4093 = !DILocation(line: 892, column: 16, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4090, file: !381, line: 892, column: 16)
!4095 = !DILocation(line: 892, column: 16, scope: !4090)
!4096 = !DILocation(line: 895, column: 15, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4085, file: !381, line: 895, column: 15)
!4098 = !DILocation(line: 895, column: 15, scope: !4085)
!4099 = !DILocation(line: 900, column: 9, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4083, file: !381, line: 900, column: 7)
!4101 = !DILocation(line: 900, column: 7, scope: !4083)
!4102 = distinct !{!4102, !4080, !4103}
!4103 = !DILocation(line: 903, column: 2, scope: !4068)
!4104 = !DILocation(line: 906, column: 1, scope: !4068)
!4105 = distinct !DISubprogram(name: "is_fmt_spec", scope: !381, file: !381, line: 873, type: !4106, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4108)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!131, !278}
!4108 = !{!4109}
!4109 = !DILocalVariable(name: "c", arg: 1, scope: !4105, file: !381, line: 873, type: !278)
!4110 = !DILocation(line: 0, scope: !4105)
!4111 = !DILocation(line: 875, column: 19, scope: !4105)
!4112 = !DILocation(line: 875, column: 2, scope: !4105)
!4113 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !381, file: !381, line: 908, type: !4114, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4120)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!103, !102, !132, !4116, !102, !108, !2692, !132}
!4116 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3655, line: 308, baseType: !4117)
!4117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4118, size: 32)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{!103, !13, !132, !102}
!4120 = !{!4121, !4122, !4123, !4124, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4138, !4139, !4140, !4141, !4142, !4148, !4151, !4152, !4153, !4155, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4171, !4174, !4175, !4176, !4177, !4178, !4179, !4181, !4184, !4185, !4186}
!4121 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4113, file: !381, line: 908, type: !102)
!4122 = !DILocalVariable(name: "in_len", arg: 2, scope: !4113, file: !381, line: 909, type: !132)
!4123 = !DILocalVariable(name: "cb", arg: 3, scope: !4113, file: !381, line: 910, type: !4116)
!4124 = !DILocalVariable(name: "ctx", arg: 4, scope: !4113, file: !381, line: 911, type: !102)
!4125 = !DILocalVariable(name: "flags", arg: 5, scope: !4113, file: !381, line: 912, type: !108)
!4126 = !DILocalVariable(name: "strl", arg: 6, scope: !4113, file: !381, line: 913, type: !2692)
!4127 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4113, file: !381, line: 914, type: !132)
!4128 = !DILocalVariable(name: "buf", scope: !4113, file: !381, line: 918, type: !379)
!4129 = !DILocalVariable(name: "buf32", scope: !4113, file: !381, line: 919, type: !1045)
!4130 = !DILocalVariable(name: "args_size", scope: !4113, file: !381, line: 920, type: !32)
!4131 = !DILocalVariable(name: "ros_nbr", scope: !4113, file: !381, line: 920, type: !32)
!4132 = !DILocalVariable(name: "rws_nbr", scope: !4113, file: !381, line: 920, type: !32)
!4133 = !DILocalVariable(name: "fmt_present", scope: !4113, file: !381, line: 921, type: !131)
!4134 = !DILocalVariable(name: "rw_cpy", scope: !4113, file: !381, line: 922, type: !131)
!4135 = !DILocalVariable(name: "ro_cpy", scope: !4113, file: !381, line: 923, type: !131)
!4136 = !DILocalVariable(name: "in_desc", scope: !4113, file: !381, line: 924, type: !4137)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3658, size: 32)
!4138 = !DILocalVariable(name: "out_len", scope: !4113, file: !381, line: 960, type: !103)
!4139 = !DILocalVariable(name: "fmt", scope: !4113, file: !381, line: 965, type: !337)
!4140 = !DILocalVariable(name: "str_pos", scope: !4113, file: !381, line: 966, type: !379)
!4141 = !DILocalVariable(name: "strl_cnt", scope: !4113, file: !381, line: 967, type: !132)
!4142 = !DILocalVariable(name: "i", scope: !4143, file: !381, line: 973, type: !103)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !381, line: 973, column: 4)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !381, line: 972, column: 15)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !381, line: 972, column: 7)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !381, line: 970, column: 18)
!4147 = distinct !DILexicalBlock(scope: !4113, file: !381, line: 970, column: 6)
!4148 = !DILocalVariable(name: "str", scope: !4149, file: !381, line: 974, type: !337)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !381, line: 973, column: 38)
!4150 = distinct !DILexicalBlock(scope: !4143, file: !381, line: 973, column: 4)
!4151 = !DILocalVariable(name: "len", scope: !4149, file: !381, line: 975, type: !103)
!4152 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4146, file: !381, line: 990, type: !131)
!4153 = !DILocalVariable(name: "i", scope: !4154, file: !381, line: 995, type: !103)
!4154 = distinct !DILexicalBlock(scope: !4146, file: !381, line: 995, column: 3)
!4155 = !DILocalVariable(name: "arg_idx", scope: !4156, file: !381, line: 996, type: !185)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !381, line: 995, column: 37)
!4157 = distinct !DILexicalBlock(scope: !4154, file: !381, line: 995, column: 3)
!4158 = !DILocalVariable(name: "arg_pos", scope: !4156, file: !381, line: 997, type: !185)
!4159 = !DILocalVariable(name: "str", scope: !4156, file: !381, line: 998, type: !337)
!4160 = !DILocalVariable(name: "is_ro", scope: !4156, file: !381, line: 999, type: !131)
!4161 = !DILocalVariable(name: "len", scope: !4156, file: !381, line: 1000, type: !103)
!4162 = !DILocalVariable(name: "out_desc", scope: !4113, file: !381, line: 1038, type: !3658)
!4163 = !DILocalVariable(name: "cpy_str_pos", scope: !4113, file: !381, line: 1040, type: !3640)
!4164 = !DILocalVariable(name: "keep_str_pos", scope: !4113, file: !381, line: 1042, type: !3640)
!4165 = !DILocalVariable(name: "scpy_cnt", scope: !4113, file: !381, line: 1043, type: !185)
!4166 = !DILocalVariable(name: "keep_cnt", scope: !4113, file: !381, line: 1044, type: !185)
!4167 = !DILocalVariable(name: "dst", scope: !4113, file: !381, line: 1045, type: !379)
!4168 = !DILocalVariable(name: "rv", scope: !4113, file: !381, line: 1046, type: !103)
!4169 = !DILocalVariable(name: "i", scope: !4170, file: !381, line: 1074, type: !103)
!4170 = distinct !DILexicalBlock(scope: !4113, file: !381, line: 1074, column: 2)
!4171 = !DILocalVariable(name: "arg_idx", scope: !4172, file: !381, line: 1075, type: !185)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !381, line: 1074, column: 36)
!4173 = distinct !DILexicalBlock(scope: !4170, file: !381, line: 1074, column: 2)
!4174 = !DILocalVariable(name: "arg_pos", scope: !4172, file: !381, line: 1076, type: !185)
!4175 = !DILocalVariable(name: "str", scope: !4172, file: !381, line: 1077, type: !337)
!4176 = !DILocalVariable(name: "is_ro", scope: !4172, file: !381, line: 1078, type: !131)
!4177 = !DILocalVariable(name: "in_desc_backup", scope: !4113, file: !381, line: 1114, type: !3658)
!4178 = !DILocalVariable(name: "strs_len", scope: !4113, file: !381, line: 1134, type: !132)
!4179 = !DILocalVariable(name: "i", scope: !4180, file: !381, line: 1143, type: !103)
!4180 = distinct !DILexicalBlock(scope: !4113, file: !381, line: 1143, column: 2)
!4181 = !DILocalVariable(name: "loc", scope: !4182, file: !381, line: 1144, type: !185)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !381, line: 1143, column: 37)
!4183 = distinct !DILexicalBlock(scope: !4180, file: !381, line: 1143, column: 2)
!4184 = !DILocalVariable(name: "str", scope: !4182, file: !381, line: 1145, type: !337)
!4185 = !DILocalVariable(name: "str_len", scope: !4182, file: !381, line: 1146, type: !121)
!4186 = !DILabel(scope: !4187, name: "calculate_string_length", file: !381, line: 1021)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !381, line: 1020, column: 56)
!4188 = distinct !DILexicalBlock(scope: !4189, file: !381, line: 1020, column: 15)
!4189 = distinct !DILexicalBlock(scope: !4156, file: !381, line: 1014, column: 8)
!4190 = !DILocation(line: 0, scope: !4113)
!4191 = !DILocation(line: 919, column: 20, scope: !4113)
!4192 = !DILocation(line: 921, column: 27, scope: !4113)
!4193 = !DILocation(line: 921, column: 21, scope: !4113)
!4194 = !DILocation(line: 926, column: 18, scope: !4113)
!4195 = !DILocation(line: 926, column: 11, scope: !4113)
!4196 = !DILocation(line: 926, column: 34, scope: !4113)
!4197 = !DILocation(line: 931, column: 21, scope: !4113)
!4198 = !DILocation(line: 931, column: 12, scope: !4113)
!4199 = !DILocation(line: 932, column: 11, scope: !4113)
!4200 = !DILocation(line: 932, column: 19, scope: !4113)
!4201 = !DILocation(line: 938, column: 21, scope: !4113)
!4202 = !DILocation(line: 938, column: 12, scope: !4113)
!4203 = !DILocation(line: 939, column: 19, scope: !4113)
!4204 = !DILocation(line: 939, column: 23, scope: !4113)
!4205 = !DILocation(line: 946, column: 14, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4113, file: !381, line: 946, column: 6)
!4207 = !DILocation(line: 947, column: 7, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4209, file: !381, line: 947, column: 7)
!4209 = distinct !DILexicalBlock(scope: !4206, file: !381, line: 946, column: 26)
!4210 = !DILocation(line: 947, column: 7, scope: !4209)
!4211 = !DILocation(line: 948, column: 4, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4208, file: !381, line: 947, column: 11)
!4213 = !DILocation(line: 949, column: 3, scope: !4212)
!4214 = !DILocation(line: 958, column: 23, scope: !4113)
!4215 = !DILocation(line: 958, column: 14, scope: !4113)
!4216 = !DILocation(line: 958, column: 27, scope: !4113)
!4217 = !DILocation(line: 965, column: 41, scope: !4113)
!4218 = !DILocation(line: 965, column: 20, scope: !4113)
!4219 = !DILocation(line: 966, column: 22, scope: !4113)
!4220 = !DILocation(line: 970, column: 9, scope: !4147)
!4221 = !DILocation(line: 970, column: 6, scope: !4113)
!4222 = !DILocation(line: 972, column: 7, scope: !4146)
!4223 = !DILocation(line: 0, scope: !4143)
!4224 = !DILocation(line: 973, column: 4, scope: !4143)
!4225 = !DILocation(line: 974, column: 46, scope: !4149)
!4226 = !DILocation(line: 974, column: 40, scope: !4149)
!4227 = !DILocation(line: 974, column: 23, scope: !4149)
!4228 = !DILocation(line: 0, scope: !4149)
!4229 = !DILocation(line: 975, column: 15, scope: !4149)
!4230 = !DILocation(line: 978, column: 14, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4149, file: !381, line: 978, column: 9)
!4232 = !DILocation(line: 979, column: 25, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4231, file: !381, line: 978, column: 38)
!4234 = !DILocation(line: 979, column: 19, scope: !4233)
!4235 = !DILocation(line: 979, column: 6, scope: !4233)
!4236 = !DILocation(line: 979, column: 23, scope: !4233)
!4237 = !DILocation(line: 980, column: 5, scope: !4233)
!4238 = !DILocation(line: 981, column: 13, scope: !4149)
!4239 = !DILocation(line: 982, column: 12, scope: !4149)
!4240 = !DILocation(line: 973, column: 34, scope: !4150)
!4241 = !DILocation(line: 973, column: 22, scope: !4150)
!4242 = distinct !{!4242, !4224, !4243}
!4243 = !DILocation(line: 983, column: 4, scope: !4143)
!4244 = !DILocation(line: 985, column: 16, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !381, line: 985, column: 8)
!4246 = distinct !DILexicalBlock(scope: !4145, file: !381, line: 984, column: 10)
!4247 = !DILocation(line: 967, column: 9, scope: !4113)
!4248 = !DILocation(line: 971, column: 11, scope: !4146)
!4249 = !DILocation(line: 0, scope: !4146)
!4250 = !DILocation(line: 0, scope: !4154)
!4251 = !DILocation(line: 995, column: 21, scope: !4157)
!4252 = !DILocation(line: 995, column: 3, scope: !4154)
!4253 = !DILocation(line: 990, column: 34, scope: !4146)
!4254 = !DILocation(line: 990, column: 26, scope: !4146)
!4255 = !DILocation(line: 996, column: 30, scope: !4156)
!4256 = !DILocation(line: 0, scope: !4156)
!4257 = !DILocation(line: 997, column: 30, scope: !4156)
!4258 = !DILocation(line: 997, column: 22, scope: !4156)
!4259 = !DILocation(line: 998, column: 39, scope: !4156)
!4260 = !DILocation(line: 998, column: 22, scope: !4156)
!4261 = !DILocation(line: 999, column: 17, scope: !4156)
!4262 = !DILocation(line: 1002, column: 20, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4156, file: !381, line: 1002, column: 8)
!4264 = !DILocation(line: 996, column: 22, scope: !4156)
!4265 = !DILocation(line: 1002, column: 35, scope: !4263)
!4266 = !DILocation(line: 1002, column: 23, scope: !4263)
!4267 = !DILocation(line: 1002, column: 8, scope: !4156)
!4268 = !DILocation(line: 1003, column: 5, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !381, line: 1003, column: 5)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !381, line: 1003, column: 5)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !381, line: 1003, column: 5)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !381, line: 1003, column: 5)
!4273 = distinct !DILexicalBlock(scope: !4263, file: !381, line: 1002, column: 45)
!4274 = !DILocation(line: 1010, column: 13, scope: !4273)
!4275 = !DILocation(line: 1011, column: 5, scope: !4273)
!4276 = !DILocation(line: 1014, column: 8, scope: !4156)
!4277 = !DILocation(line: 1015, column: 9, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4189, file: !381, line: 1014, column: 15)
!4279 = !DILocation(line: 1018, column: 14, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !381, line: 1017, column: 12)
!4281 = distinct !DILexicalBlock(scope: !4278, file: !381, line: 1015, column: 9)
!4282 = !DILocation(line: 1020, column: 4, scope: !4278)
!4283 = !DILocation(line: 1020, column: 15, scope: !4189)
!4284 = !DILocation(line: 1021, column: 1, scope: !4187)
!4285 = !DILocation(line: 1022, column: 11, scope: !4187)
!4286 = !DILocation(line: 1025, column: 14, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4187, file: !381, line: 1025, column: 9)
!4288 = !DILocation(line: 1026, column: 25, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4287, file: !381, line: 1025, column: 38)
!4290 = !DILocation(line: 1026, column: 19, scope: !4289)
!4291 = !DILocation(line: 1026, column: 6, scope: !4289)
!4292 = !DILocation(line: 1026, column: 23, scope: !4289)
!4293 = !DILocation(line: 1027, column: 5, scope: !4289)
!4294 = !DILocation(line: 1031, column: 21, scope: !4187)
!4295 = !DILocation(line: 1031, column: 13, scope: !4187)
!4296 = !DILocation(line: 1032, column: 4, scope: !4187)
!4297 = !DILocation(line: 995, column: 33, scope: !4157)
!4298 = distinct !{!4298, !4252, !4299}
!4299 = !DILocation(line: 1033, column: 3, scope: !4154)
!4300 = !DILocation(line: 1040, column: 10, scope: !4113)
!4301 = !DILocation(line: 1042, column: 10, scope: !4113)
!4302 = !DILocation(line: 1052, column: 6, scope: !4113)
!4303 = !DILocation(line: 1055, column: 9, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4305, file: !381, line: 1052, column: 14)
!4305 = distinct !DILexicalBlock(scope: !4113, file: !381, line: 1052, column: 6)
!4306 = !DILocation(line: 1056, column: 2, scope: !4304)
!4307 = !DILocation(line: 1056, column: 21, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4305, file: !381, line: 1056, column: 13)
!4309 = !DILocation(line: 1066, column: 3, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4311, file: !381, line: 1065, column: 11)
!4311 = distinct !DILexicalBlock(scope: !4113, file: !381, line: 1065, column: 6)
!4312 = !DILocation(line: 1067, column: 2, scope: !4310)
!4313 = !DILocation(line: 1068, column: 10, scope: !4113)
!4314 = !DILocation(line: 0, scope: !4170)
!4315 = !DILocation(line: 1074, column: 20, scope: !4173)
!4316 = !DILocation(line: 1074, column: 2, scope: !4170)
!4317 = !DILocation(line: 1110, column: 24, scope: !4113)
!4318 = !DILocation(line: 1053, column: 12, scope: !4304)
!4319 = !DILocation(line: 1054, column: 12, scope: !4304)
!4320 = !DILocation(line: 1108, column: 30, scope: !4113)
!4321 = !DILocation(line: 1108, column: 40, scope: !4113)
!4322 = !DILocation(line: 1108, column: 38, scope: !4113)
!4323 = !DILocation(line: 1109, column: 31, scope: !4113)
!4324 = !DILocation(line: 1109, column: 24, scope: !4113)
!4325 = !DILocation(line: 1110, column: 31, scope: !4113)
!4326 = !DILocation(line: 1114, column: 31, scope: !4113)
!4327 = !DILocation(line: 1114, column: 48, scope: !4113)
!4328 = !DILocation(line: 1115, column: 13, scope: !4113)
!4329 = !DILocation(line: 1118, column: 7, scope: !4113)
!4330 = !DILocation(line: 1119, column: 9, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4113, file: !381, line: 1119, column: 6)
!4332 = !DILocation(line: 1119, column: 6, scope: !4113)
!4333 = !DILocation(line: 1075, column: 29, scope: !4172)
!4334 = !DILocation(line: 1075, column: 21, scope: !4172)
!4335 = !DILocation(line: 0, scope: !4172)
!4336 = !DILocation(line: 1076, column: 29, scope: !4172)
!4337 = !DILocation(line: 1076, column: 21, scope: !4172)
!4338 = !DILocation(line: 1077, column: 38, scope: !4172)
!4339 = !DILocation(line: 1077, column: 21, scope: !4172)
!4340 = !DILocation(line: 1078, column: 16, scope: !4172)
!4341 = !DILocation(line: 1080, column: 19, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4172, file: !381, line: 1080, column: 7)
!4343 = !DILocation(line: 1080, column: 34, scope: !4342)
!4344 = !DILocation(line: 1080, column: 22, scope: !4342)
!4345 = !DILocation(line: 1080, column: 7, scope: !4172)
!4346 = !DILocation(line: 1084, column: 7, scope: !4172)
!4347 = !DILocation(line: 1085, column: 8, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !381, line: 1084, column: 14)
!4349 = distinct !DILexicalBlock(scope: !4172, file: !381, line: 1084, column: 7)
!4350 = !DILocation(line: 1087, column: 25, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !381, line: 1085, column: 49)
!4352 = distinct !DILexicalBlock(scope: !4348, file: !381, line: 1085, column: 8)
!4353 = !DILocation(line: 1088, column: 4, scope: !4351)
!4354 = !DILocation(line: 1088, column: 15, scope: !4352)
!4355 = !DILocation(line: 1090, column: 26, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4357, file: !381, line: 1088, column: 61)
!4357 = distinct !DILexicalBlock(scope: !4352, file: !381, line: 1088, column: 15)
!4358 = !DILocation(line: 1091, column: 4, scope: !4356)
!4359 = !DILocation(line: 1095, column: 8, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4349, file: !381, line: 1094, column: 10)
!4361 = !DILocation(line: 1097, column: 25, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !381, line: 1095, column: 49)
!4363 = distinct !DILexicalBlock(scope: !4360, file: !381, line: 1095, column: 8)
!4364 = !DILocation(line: 1098, column: 4, scope: !4362)
!4365 = !DILocation(line: 1100, column: 26, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4363, file: !381, line: 1098, column: 11)
!4367 = !DILocation(line: 1100, column: 5, scope: !4366)
!4368 = !DILocation(line: 1100, column: 30, scope: !4366)
!4369 = !DILocation(line: 1101, column: 26, scope: !4366)
!4370 = !DILocation(line: 0, scope: !4349)
!4371 = !DILocation(line: 1074, column: 32, scope: !4173)
!4372 = distinct !{!4372, !4316, !4373}
!4373 = !DILocation(line: 1104, column: 2, scope: !4170)
!4374 = !DILocation(line: 1124, column: 13, scope: !4113)
!4375 = !DILocation(line: 1127, column: 10, scope: !4113)
!4376 = !DILocation(line: 1127, column: 7, scope: !4113)
!4377 = !DILocation(line: 1128, column: 9, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4113, file: !381, line: 1128, column: 6)
!4379 = !DILocation(line: 1128, column: 6, scope: !4113)
!4380 = !DILocation(line: 1134, column: 27, scope: !4113)
!4381 = !DILocation(line: 1136, column: 7, scope: !4113)
!4382 = !DILocation(line: 1137, column: 9, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4113, file: !381, line: 1137, column: 6)
!4384 = !DILocation(line: 1137, column: 6, scope: !4113)
!4385 = !DILocation(line: 1131, column: 10, scope: !4113)
!4386 = !DILocation(line: 1140, column: 10, scope: !4113)
!4387 = !DILocation(line: 0, scope: !4180)
!4388 = !DILocation(line: 1143, column: 20, scope: !4183)
!4389 = !DILocation(line: 1143, column: 2, scope: !4180)
!4390 = !DILocation(line: 1144, column: 3, scope: !4182)
!4391 = !DILocation(line: 1144, column: 17, scope: !4182)
!4392 = !DILocation(line: 0, scope: !4182)
!4393 = !DILocation(line: 1144, column: 11, scope: !4182)
!4394 = !DILocation(line: 1145, column: 38, scope: !4182)
!4395 = !DILocation(line: 1145, column: 21, scope: !4182)
!4396 = !DILocation(line: 1146, column: 22, scope: !4182)
!4397 = !DILocation(line: 1146, column: 29, scope: !4182)
!4398 = !DILocation(line: 1148, column: 8, scope: !4182)
!4399 = !DILocation(line: 1149, column: 10, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4182, file: !381, line: 1149, column: 7)
!4401 = !DILocation(line: 1149, column: 7, scope: !4182)
!4402 = !DILocation(line: 1154, column: 8, scope: !4182)
!4403 = !DILocation(line: 1155, column: 10, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4182, file: !381, line: 1155, column: 7)
!4405 = !DILocation(line: 1155, column: 7, scope: !4182)
!4406 = !DILocation(line: 1159, column: 2, scope: !4183)
!4407 = !DILocation(line: 1152, column: 11, scope: !4182)
!4408 = !DILocation(line: 1158, column: 11, scope: !4182)
!4409 = !DILocation(line: 1143, column: 33, scope: !4183)
!4410 = distinct !{!4410, !4389, !4411}
!4411 = !DILocation(line: 1159, column: 2, scope: !4180)
!4412 = !DILocation(line: 1162, column: 8, scope: !4113)
!4413 = !DILocation(line: 1164, column: 2, scope: !4113)
!4414 = !DILocation(line: 1165, column: 1, scope: !4113)
!4415 = distinct !DISubprogram(name: "get_package_len", scope: !381, file: !381, line: 196, type: !4416, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4418)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!132, !102}
!4418 = !{!4419, !4420, !4421, !4422, !4423, !4424, !4425}
!4419 = !DILocalVariable(name: "packaged", arg: 1, scope: !4415, file: !381, line: 196, type: !102)
!4420 = !DILocalVariable(name: "buf", scope: !4415, file: !381, line: 200, type: !379)
!4421 = !DILocalVariable(name: "start", scope: !4415, file: !381, line: 201, type: !379)
!4422 = !DILocalVariable(name: "args_size", scope: !4415, file: !381, line: 202, type: !32)
!4423 = !DILocalVariable(name: "s_nbr", scope: !4415, file: !381, line: 202, type: !32)
!4424 = !DILocalVariable(name: "ros_nbr", scope: !4415, file: !381, line: 202, type: !32)
!4425 = !DILocalVariable(name: "i", scope: !4426, file: !381, line: 215, type: !103)
!4426 = distinct !DILexicalBlock(scope: !4415, file: !381, line: 215, column: 2)
!4427 = !DILocation(line: 0, scope: !4415)
!4428 = !DILocation(line: 204, column: 14, scope: !4415)
!4429 = !DILocation(line: 204, column: 21, scope: !4415)
!4430 = !DILocation(line: 205, column: 14, scope: !4415)
!4431 = !DILocation(line: 206, column: 14, scope: !4415)
!4432 = !DILocation(line: 209, column: 6, scope: !4415)
!4433 = !DILocation(line: 212, column: 6, scope: !4415)
!4434 = !DILocation(line: 0, scope: !4426)
!4435 = !DILocation(line: 215, column: 20, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4426, file: !381, line: 215, column: 2)
!4437 = !DILocation(line: 215, column: 2, scope: !4426)
!4438 = !DILocation(line: 220, column: 33, scope: !4415)
!4439 = !DILocation(line: 220, column: 2, scope: !4415)
!4440 = !DILocation(line: 216, column: 6, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4436, file: !381, line: 215, column: 34)
!4442 = !DILocation(line: 217, column: 10, scope: !4441)
!4443 = !DILocation(line: 217, column: 36, scope: !4441)
!4444 = !DILocation(line: 217, column: 7, scope: !4441)
!4445 = !DILocation(line: 215, column: 30, scope: !4436)
!4446 = distinct !{!4446, !4437, !4447}
!4447 = !DILocation(line: 218, column: 2, scope: !4426)
!4448 = distinct !DISubprogram(name: "append_string", scope: !381, file: !381, line: 223, type: !4449, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4451)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{!103, !4116, !102, !337, !121}
!4451 = !{!4452, !4453, !4454, !4455}
!4452 = !DILocalVariable(name: "cb", arg: 1, scope: !4448, file: !381, line: 223, type: !4116)
!4453 = !DILocalVariable(name: "ctx", arg: 2, scope: !4448, file: !381, line: 223, type: !102)
!4454 = !DILocalVariable(name: "str", arg: 3, scope: !4448, file: !381, line: 223, type: !337)
!4455 = !DILocalVariable(name: "strl", arg: 4, scope: !4448, file: !381, line: 223, type: !121)
!4456 = !DILocation(line: 0, scope: !4448)
!4457 = !DILocation(line: 225, column: 9, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4448, file: !381, line: 225, column: 6)
!4459 = !DILocation(line: 225, column: 6, scope: !4448)
!4460 = !DILocation(line: 226, column: 14, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4458, file: !381, line: 225, column: 18)
!4462 = !DILocation(line: 226, column: 12, scope: !4461)
!4463 = !DILocation(line: 226, column: 3, scope: !4461)
!4464 = !DILocation(line: 229, column: 14, scope: !4448)
!4465 = !DILocation(line: 229, column: 9, scope: !4448)
!4466 = !DILocation(line: 229, column: 27, scope: !4448)
!4467 = !DILocation(line: 229, column: 39, scope: !4448)
!4468 = !DILocation(line: 230, column: 17, scope: !4448)
!4469 = !DILocation(line: 230, column: 9, scope: !4448)
!4470 = !DILocation(line: 230, column: 2, scope: !4448)
!4471 = !DILocation(line: 231, column: 1, scope: !4448)
!4472 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !394, file: !394, line: 45, type: !396, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4473)
!4473 = !{!4474}
!4474 = !DILocalVariable(name: "c", arg: 1, scope: !4472, file: !394, line: 45, type: !103)
!4475 = !DILocation(line: 0, scope: !4472)
!4476 = !DILocation(line: 50, column: 2, scope: !4472)
!4477 = distinct !DISubprogram(name: "__printk_hook_install", scope: !394, file: !394, line: 63, type: !4478, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4480)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{null, !395}
!4480 = !{!4481}
!4481 = !DILocalVariable(name: "fn", arg: 1, scope: !4477, file: !394, line: 63, type: !395)
!4482 = !DILocation(line: 0, scope: !4477)
!4483 = !DILocation(line: 65, column: 12, scope: !4477)
!4484 = !DILocation(line: 66, column: 1, scope: !4477)
!4485 = distinct !DISubprogram(name: "__printk_get_hook", scope: !394, file: !394, line: 76, type: !4486, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !251)
!4486 = !DISubroutineType(types: !4487)
!4487 = !{!102}
!4488 = !DILocation(line: 78, column: 9, scope: !4485)
!4489 = !DILocation(line: 78, column: 2, scope: !4485)
!4490 = distinct !DISubprogram(name: "vprintk", scope: !394, file: !394, line: 113, type: !4491, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4499)
!4491 = !DISubroutineType(types: !4492)
!4492 = !{null, !337, !4493}
!4493 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3623, line: 99, baseType: !4494)
!4494 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3623, line: 40, baseType: !4495)
!4495 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !394, baseType: !4496)
!4496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4497)
!4497 = !{!4498}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4496, file: !394, line: 79, baseType: !102, size: 32)
!4499 = !{!4500, !4501, !4502}
!4500 = !DILocalVariable(name: "fmt", arg: 1, scope: !4490, file: !394, line: 113, type: !337)
!4501 = !DILocalVariable(name: "ap", arg: 2, scope: !4490, file: !394, line: 113, type: !4493)
!4502 = !DILocalVariable(name: "ctx", scope: !4503, file: !394, line: 121, type: !4505)
!4503 = distinct !DILexicalBlock(scope: !4504, file: !394, line: 120, column: 27)
!4504 = distinct !DILexicalBlock(scope: !4490, file: !394, line: 120, column: 6)
!4505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !394, line: 81, size: 32, elements: !4506)
!4506 = !{!4507, !4508}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4505, file: !394, line: 85, baseType: !32, size: 32)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4505, file: !394, line: 86, baseType: !4509, offset: 32)
!4509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, elements: !2690)
!4510 = !DILocation(line: 0, scope: !4490)
!4511 = !DILocation(line: 148, column: 3, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4504, file: !394, line: 138, column: 9)
!4513 = !DILocation(line: 155, column: 1, scope: !4490)
!4514 = distinct !DISubprogram(name: "char_out", scope: !394, file: !394, line: 107, type: !4515, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4517)
!4515 = !DISubroutineType(types: !4516)
!4516 = !{!103, !103, !102}
!4517 = !{!4518, !4519}
!4518 = !DILocalVariable(name: "c", arg: 1, scope: !4514, file: !394, line: 107, type: !103)
!4519 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4514, file: !394, line: 107, type: !102)
!4520 = !DILocation(line: 0, scope: !4514)
!4521 = !DILocation(line: 110, column: 9, scope: !4514)
!4522 = !DILocation(line: 110, column: 2, scope: !4514)
!4523 = distinct !DISubprogram(name: "cbvprintf", scope: !3655, file: !3655, line: 739, type: !4524, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4526)
!4524 = !DISubroutineType(types: !4525)
!4525 = !{!103, !3984, !102, !337, !4493}
!4526 = !{!4527, !4528, !4529, !4530}
!4527 = !DILocalVariable(name: "out", arg: 1, scope: !4523, file: !3655, line: 739, type: !3984)
!4528 = !DILocalVariable(name: "ctx", arg: 2, scope: !4523, file: !3655, line: 739, type: !102)
!4529 = !DILocalVariable(name: "format", arg: 3, scope: !4523, file: !3655, line: 739, type: !337)
!4530 = !DILocalVariable(name: "ap", arg: 4, scope: !4523, file: !3655, line: 739, type: !4493)
!4531 = !DILocation(line: 0, scope: !4523)
!4532 = !DILocation(line: 741, column: 9, scope: !4523)
!4533 = !DILocation(line: 741, column: 2, scope: !4523)
!4534 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !394, file: !394, line: 157, type: !4535, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4537)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{null, !277, !132}
!4537 = !{!4538, !4539, !4540}
!4538 = !DILocalVariable(name: "c", arg: 1, scope: !4534, file: !394, line: 157, type: !277)
!4539 = !DILocalVariable(name: "n", arg: 2, scope: !4534, file: !394, line: 157, type: !132)
!4540 = !DILocalVariable(name: "i", scope: !4534, file: !394, line: 159, type: !132)
!4541 = !DILocation(line: 0, scope: !4534)
!4542 = !DILocation(line: 164, column: 16, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !394, line: 164, column: 2)
!4544 = distinct !DILexicalBlock(scope: !4534, file: !394, line: 164, column: 2)
!4545 = !DILocation(line: 164, column: 2, scope: !4544)
!4546 = !DILocation(line: 165, column: 3, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4543, file: !394, line: 164, column: 26)
!4548 = !DILocation(line: 165, column: 13, scope: !4547)
!4549 = !DILocation(line: 164, column: 22, scope: !4543)
!4550 = distinct !{!4550, !4545, !4551}
!4551 = !DILocation(line: 166, column: 2, scope: !4544)
!4552 = !DILocation(line: 171, column: 1, scope: !4534)
!4553 = distinct !DISubprogram(name: "printk", scope: !394, file: !394, line: 203, type: !4554, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4556)
!4554 = !DISubroutineType(types: !4555)
!4555 = !{null, !337, null}
!4556 = !{!4557, !4558}
!4557 = !DILocalVariable(name: "fmt", arg: 1, scope: !4553, file: !394, line: 203, type: !337)
!4558 = !DILocalVariable(name: "ap", scope: !4553, file: !394, line: 205, type: !4493)
!4559 = !DILocation(line: 0, scope: !4553)
!4560 = !DILocation(line: 205, column: 2, scope: !4553)
!4561 = !DILocation(line: 205, column: 10, scope: !4553)
!4562 = !DILocation(line: 207, column: 2, scope: !4553)
!4563 = !DILocation(line: 209, column: 2, scope: !4553)
!4564 = !DILocation(line: 211, column: 2, scope: !4553)
!4565 = !DILocation(line: 212, column: 1, scope: !4553)
!4566 = distinct !DISubprogram(name: "snprintk", scope: !394, file: !394, line: 239, type: !4567, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4569)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{!103, !277, !132, !337, null}
!4569 = !{!4570, !4571, !4572, !4573, !4574}
!4570 = !DILocalVariable(name: "str", arg: 1, scope: !4566, file: !394, line: 239, type: !277)
!4571 = !DILocalVariable(name: "size", arg: 2, scope: !4566, file: !394, line: 239, type: !132)
!4572 = !DILocalVariable(name: "fmt", arg: 3, scope: !4566, file: !394, line: 239, type: !337)
!4573 = !DILocalVariable(name: "ap", scope: !4566, file: !394, line: 241, type: !4493)
!4574 = !DILocalVariable(name: "ret", scope: !4566, file: !394, line: 242, type: !103)
!4575 = !DILocation(line: 0, scope: !4566)
!4576 = !DILocation(line: 241, column: 2, scope: !4566)
!4577 = !DILocation(line: 241, column: 10, scope: !4566)
!4578 = !DILocation(line: 244, column: 2, scope: !4566)
!4579 = !DILocation(line: 245, column: 8, scope: !4566)
!4580 = !DILocation(line: 246, column: 2, scope: !4566)
!4581 = !DILocation(line: 249, column: 1, scope: !4566)
!4582 = !DILocation(line: 248, column: 2, scope: !4566)
!4583 = distinct !DISubprogram(name: "vsnprintk", scope: !394, file: !394, line: 251, type: !4584, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4586)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{!103, !277, !132, !337, !4493}
!4586 = !{!4587, !4588, !4589, !4590, !4591}
!4587 = !DILocalVariable(name: "str", arg: 1, scope: !4583, file: !394, line: 251, type: !277)
!4588 = !DILocalVariable(name: "size", arg: 2, scope: !4583, file: !394, line: 251, type: !132)
!4589 = !DILocalVariable(name: "fmt", arg: 3, scope: !4583, file: !394, line: 251, type: !337)
!4590 = !DILocalVariable(name: "ap", arg: 4, scope: !4583, file: !394, line: 251, type: !4493)
!4591 = !DILocalVariable(name: "ctx", scope: !4583, file: !394, line: 253, type: !4592)
!4592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !394, line: 217, size: 96, elements: !4593)
!4593 = !{!4594, !4595, !4596}
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4592, file: !394, line: 218, baseType: !277, size: 32)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4592, file: !394, line: 219, baseType: !103, size: 32, offset: 32)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4592, file: !394, line: 220, baseType: !103, size: 32, offset: 64)
!4597 = !DILocation(line: 0, scope: !4583)
!4598 = !DILocation(line: 253, column: 2, scope: !4583)
!4599 = !DILocation(line: 253, column: 21, scope: !4583)
!4600 = !DILocation(line: 253, column: 27, scope: !4583)
!4601 = !DILocation(line: 255, column: 2, scope: !4583)
!4602 = !DILocation(line: 257, column: 10, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4583, file: !394, line: 257, column: 6)
!4604 = !DILocation(line: 257, column: 22, scope: !4603)
!4605 = !DILocation(line: 257, column: 16, scope: !4603)
!4606 = !DILocation(line: 257, column: 6, scope: !4583)
!4607 = !DILocation(line: 258, column: 3, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4603, file: !394, line: 257, column: 27)
!4609 = !DILocation(line: 258, column: 18, scope: !4608)
!4610 = !DILocation(line: 259, column: 2, scope: !4608)
!4611 = !DILocation(line: 262, column: 1, scope: !4583)
!4612 = !DILocation(line: 261, column: 2, scope: !4583)
!4613 = distinct !DISubprogram(name: "str_out", scope: !394, file: !394, line: 223, type: !4614, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4617)
!4614 = !DISubroutineType(types: !4615)
!4615 = !{!103, !103, !4616}
!4616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4592, size: 32)
!4617 = !{!4618, !4619}
!4618 = !DILocalVariable(name: "c", arg: 1, scope: !4613, file: !394, line: 223, type: !103)
!4619 = !DILocalVariable(name: "ctx", arg: 2, scope: !4613, file: !394, line: 223, type: !4616)
!4620 = !DILocation(line: 0, scope: !4613)
!4621 = !DILocation(line: 225, column: 11, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4613, file: !394, line: 225, column: 6)
!4623 = !DILocation(line: 225, column: 15, scope: !4622)
!4624 = !DILocation(line: 0, scope: !4622)
!4625 = !DILocation(line: 225, column: 23, scope: !4622)
!4626 = !DILocation(line: 225, column: 45, scope: !4622)
!4627 = !DILocation(line: 225, column: 37, scope: !4622)
!4628 = !DILocation(line: 225, column: 6, scope: !4613)
!4629 = !DILocation(line: 226, column: 8, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4622, file: !394, line: 225, column: 50)
!4631 = !DILocation(line: 226, column: 13, scope: !4630)
!4632 = !DILocation(line: 227, column: 3, scope: !4630)
!4633 = !DILocation(line: 230, column: 29, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4613, file: !394, line: 230, column: 6)
!4635 = !DILocation(line: 230, column: 17, scope: !4634)
!4636 = !DILocation(line: 230, column: 6, scope: !4613)
!4637 = !DILocation(line: 231, column: 22, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4634, file: !394, line: 230, column: 34)
!4639 = !DILocation(line: 231, column: 3, scope: !4638)
!4640 = !DILocation(line: 231, column: 26, scope: !4638)
!4641 = !DILocation(line: 232, column: 2, scope: !4638)
!4642 = !DILocation(line: 233, column: 28, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4634, file: !394, line: 232, column: 9)
!4644 = !DILocation(line: 233, column: 22, scope: !4643)
!4645 = !DILocation(line: 233, column: 3, scope: !4643)
!4646 = !DILocation(line: 233, column: 26, scope: !4643)
!4647 = !DILocation(line: 237, column: 1, scope: !4613)
!4648 = distinct !DISubprogram(name: "z_thread_entry", scope: !4649, file: !4649, line: 30, type: !4650, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !4652)
!4649 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4650 = !DISubroutineType(types: !4651)
!4651 = !{null, !321, !102, !102, !102}
!4652 = !{!4653, !4654, !4655, !4656}
!4653 = !DILocalVariable(name: "entry", arg: 1, scope: !4648, file: !4649, line: 30, type: !321)
!4654 = !DILocalVariable(name: "p1", arg: 2, scope: !4648, file: !4649, line: 31, type: !102)
!4655 = !DILocalVariable(name: "p2", arg: 3, scope: !4648, file: !4649, line: 31, type: !102)
!4656 = !DILocalVariable(name: "p3", arg: 4, scope: !4648, file: !4649, line: 31, type: !102)
!4657 = !DILocation(line: 0, scope: !4648)
!4658 = !DILocation(line: 36, column: 2, scope: !4648)
!4659 = !DILocation(line: 38, column: 17, scope: !4648)
!4660 = !DILocation(line: 38, column: 2, scope: !4648)
!4661 = !DILocation(line: 45, column: 2, scope: !4648)
!4662 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !4663, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !251)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{!4665}
!4665 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !4666)
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4667, size: 32)
!4667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !4668)
!4668 = !{!4669, !4727, !4739, !4740, !4741, !4742, !4748, !4761}
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4667, file: !163, line: 247, baseType: !4670, size: 384)
!4670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !4671)
!4671 = !{!4672, !4696, !4703, !4704, !4705, !4714, !4715, !4716}
!4672 = !DIDerivedType(tag: DW_TAG_member, scope: !4670, file: !163, line: 60, baseType: !4673, size: 64)
!4673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4670, file: !163, line: 60, size: 64, elements: !4674)
!4674 = !{!4675, !4690}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4673, file: !163, line: 61, baseType: !4676, size: 64)
!4676 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !4677)
!4677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !4678)
!4678 = !{!4679, !4685}
!4679 = !DIDerivedType(tag: DW_TAG_member, scope: !4677, file: !146, line: 38, baseType: !4680, size: 32)
!4680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4677, file: !146, line: 38, size: 32, elements: !4681)
!4681 = !{!4682, !4684}
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4680, file: !146, line: 39, baseType: !4683, size: 32)
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4677, size: 32)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4680, file: !146, line: 40, baseType: !4683, size: 32)
!4685 = !DIDerivedType(tag: DW_TAG_member, scope: !4677, file: !146, line: 42, baseType: !4686, size: 32, offset: 32)
!4686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4677, file: !146, line: 42, size: 32, elements: !4687)
!4687 = !{!4688, !4689}
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4686, file: !146, line: 43, baseType: !4683, size: 32)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4686, file: !146, line: 44, baseType: !4683, size: 32)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4673, file: !163, line: 62, baseType: !4691, size: 64)
!4691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !4692)
!4692 = !{!4693}
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4691, file: !175, line: 50, baseType: !4694, size: 64)
!4694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4695, size: 64, elements: !180)
!4695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4691, size: 32)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4670, file: !163, line: 68, baseType: !4697, size: 32, offset: 64)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 32)
!4698 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !4699)
!4699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !4700)
!4700 = !{!4701}
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4699, file: !141, line: 232, baseType: !4702, size: 64)
!4702 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !4677)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4670, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4670, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!4705 = !DIDerivedType(tag: DW_TAG_member, scope: !4670, file: !163, line: 90, baseType: !4706, size: 16, offset: 112)
!4706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4670, file: !163, line: 90, size: 16, elements: !4707)
!4707 = !{!4708, !4713}
!4708 = !DIDerivedType(tag: DW_TAG_member, scope: !4706, file: !163, line: 91, baseType: !4709, size: 16)
!4709 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4706, file: !163, line: 91, size: 16, elements: !4710)
!4710 = !{!4711, !4712}
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4709, file: !163, line: 96, baseType: !195, size: 8)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4709, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4706, file: !163, line: 100, baseType: !121, size: 16)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4670, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4670, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4670, file: !163, line: 131, baseType: !4717, size: 192, offset: 192)
!4717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !4718)
!4718 = !{!4719, !4720, !4726}
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4717, file: !141, line: 245, baseType: !4676, size: 64)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4717, file: !141, line: 246, baseType: !4721, size: 32, offset: 64)
!4721 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !4722)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 32)
!4723 = !DISubroutineType(types: !4724)
!4724 = !{null, !4725}
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4717, size: 32)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4717, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4667, file: !163, line: 250, baseType: !4728, size: 288, offset: 384)
!4728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !4729)
!4729 = !{!4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4738}
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4728, file: !214, line: 26, baseType: !108, size: 32)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4728, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4728, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4728, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4728, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4728, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4728, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4728, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4728, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4667, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4667, file: !163, line: 256, baseType: !4698, size: 64, offset: 704)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4667, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4667, file: !163, line: 300, baseType: !4743, size: 96, offset: 800)
!4743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !4744)
!4744 = !{!4745, !4746, !4747}
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4743, file: !163, line: 153, baseType: !22, size: 32)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4743, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4743, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4667, file: !163, line: 325, baseType: !4749, size: 32, offset: 896)
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 32)
!4750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !4751)
!4751 = !{!4752, !4758, !4759}
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4750, file: !137, line: 5074, baseType: !4753, size: 96)
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !4754)
!4754 = !{!4755, !4756, !4757}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4753, file: !240, line: 57, baseType: !243, size: 32)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4753, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4753, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4750, file: !137, line: 5075, baseType: !4698, size: 64, offset: 96)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4750, file: !137, line: 5076, baseType: !4760, offset: 160)
!4760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4667, file: !163, line: 343, baseType: !4762, size: 64, offset: 928)
!4762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !4763)
!4763 = !{!4764, !4765}
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4762, file: !214, line: 63, baseType: !108, size: 32)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4762, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!4766 = !DILocation(line: 535, column: 9, scope: !4662)
!4767 = !DILocation(line: 535, column: 2, scope: !4662)
!4768 = distinct !DISubprogram(name: "k_thread_abort", scope: !3584, file: !3584, line: 188, type: !4769, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !4771)
!4769 = !DISubroutineType(types: !4770)
!4770 = !{null, !4665}
!4771 = !{!4772}
!4772 = !DILocalVariable(name: "thread", arg: 1, scope: !4768, file: !3584, line: 188, type: !4665)
!4773 = !DILocation(line: 0, scope: !4768)
!4774 = !DILocation(line: 197, column: 2, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4768, file: !3584, line: 197, column: 2)
!4776 = !{i64 2152213826}
!4777 = !DILocation(line: 198, column: 2, scope: !4768)
!4778 = !DILocation(line: 199, column: 1, scope: !4768)
!4779 = distinct !DISubprogram(name: "z_current_get", scope: !3584, file: !3584, line: 173, type: !4663, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2658, retainedNodes: !251)
!4780 = !DILocation(line: 180, column: 2, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4779, file: !3584, line: 180, column: 2)
!4782 = !{i64 2152213758}
!4783 = !DILocation(line: 181, column: 9, scope: !4779)
!4784 = !DILocation(line: 181, column: 2, scope: !4779)
!4785 = distinct !DISubprogram(name: "sys_heap_free", scope: !4786, file: !4786, line: 163, type: !4787, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4795)
!4786 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4787 = !DISubroutineType(types: !4788)
!4788 = !{null, !4789, !102}
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 32)
!4790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !4791)
!4791 = !{!4792, !4793, !4794}
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4790, file: !240, line: 57, baseType: !2677, size: 32)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4790, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4790, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!4795 = !{!4796, !4797, !4798, !4799}
!4796 = !DILocalVariable(name: "heap", arg: 1, scope: !4785, file: !4786, line: 163, type: !4789)
!4797 = !DILocalVariable(name: "mem", arg: 2, scope: !4785, file: !4786, line: 163, type: !102)
!4798 = !DILocalVariable(name: "h", scope: !4785, file: !4786, line: 168, type: !2677)
!4799 = !DILocalVariable(name: "c", scope: !4785, file: !4786, line: 169, type: !2682)
!4800 = !DILocation(line: 0, scope: !4785)
!4801 = !DILocation(line: 165, column: 10, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4785, file: !4786, line: 165, column: 6)
!4803 = !DILocation(line: 165, column: 6, scope: !4785)
!4804 = !DILocation(line: 168, column: 27, scope: !4785)
!4805 = !DILocation(line: 169, column: 16, scope: !4785)
!4806 = !{i32 0, i32 536870912}
!4807 = !DILocation(line: 187, column: 2, scope: !4785)
!4808 = !DILocation(line: 197, column: 2, scope: !4785)
!4809 = !DILocation(line: 198, column: 1, scope: !4785)
!4810 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4786, file: !4786, line: 157, type: !4811, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4813)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!2682, !2677, !102}
!4813 = !{!4814, !4815, !4816, !4817}
!4814 = !DILocalVariable(name: "h", arg: 1, scope: !4810, file: !4786, line: 157, type: !2677)
!4815 = !DILocalVariable(name: "p", arg: 2, scope: !4810, file: !4786, line: 157, type: !102)
!4816 = !DILocalVariable(name: "mem", scope: !4810, file: !4786, line: 159, type: !379)
!4817 = !DILocalVariable(name: "base", scope: !4810, file: !4786, line: 159, type: !379)
!4818 = !DILocation(line: 0, scope: !4810)
!4819 = !DILocation(line: 159, column: 39, scope: !4810)
!4820 = !DILocation(line: 160, column: 14, scope: !4810)
!4821 = !DILocation(line: 160, column: 38, scope: !4810)
!4822 = !DILocation(line: 160, column: 46, scope: !4810)
!4823 = !DILocation(line: 160, column: 2, scope: !4810)
!4824 = distinct !DISubprogram(name: "set_chunk_used", scope: !2664, file: !2664, line: 147, type: !4825, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4827)
!4825 = !DISubroutineType(types: !4826)
!4826 = !{null, !2677, !2682, !131}
!4827 = !{!4828, !4829, !4830, !4831, !4832}
!4828 = !DILocalVariable(name: "h", arg: 1, scope: !4824, file: !2664, line: 147, type: !2677)
!4829 = !DILocalVariable(name: "c", arg: 2, scope: !4824, file: !2664, line: 147, type: !2682)
!4830 = !DILocalVariable(name: "used", arg: 3, scope: !4824, file: !2664, line: 147, type: !131)
!4831 = !DILocalVariable(name: "buf", scope: !4824, file: !2664, line: 149, type: !2671)
!4832 = !DILocalVariable(name: "cmem", scope: !4824, file: !2664, line: 150, type: !102)
!4833 = !DILocation(line: 0, scope: !4824)
!4834 = !DILocation(line: 149, column: 22, scope: !4824)
!4835 = !DILocation(line: 0, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4837, file: !2664, line: 159, column: 7)
!4837 = distinct !DILexicalBlock(scope: !4838, file: !2664, line: 158, column: 9)
!4838 = distinct !DILexicalBlock(scope: !4824, file: !2664, line: 152, column: 6)
!4839 = !DILocation(line: 159, column: 7, scope: !4837)
!4840 = !DILocation(line: 165, column: 1, scope: !4824)
!4841 = distinct !DISubprogram(name: "free_chunk", scope: !4786, file: !4786, line: 133, type: !4842, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4844)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{null, !2677, !2682}
!4844 = !{!4845, !4846}
!4845 = !DILocalVariable(name: "h", arg: 1, scope: !4841, file: !4786, line: 133, type: !2677)
!4846 = !DILocalVariable(name: "c", arg: 2, scope: !4841, file: !4786, line: 133, type: !2682)
!4847 = !DILocation(line: 0, scope: !4841)
!4848 = !DILocation(line: 136, column: 21, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4841, file: !4786, line: 136, column: 6)
!4850 = !DILocation(line: 136, column: 7, scope: !4849)
!4851 = !DILocation(line: 136, column: 6, scope: !4841)
!4852 = !DILocation(line: 137, column: 3, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4849, file: !4786, line: 136, column: 41)
!4854 = !DILocation(line: 138, column: 22, scope: !4853)
!4855 = !DILocation(line: 138, column: 3, scope: !4853)
!4856 = !DILocation(line: 139, column: 2, scope: !4853)
!4857 = !DILocation(line: 142, column: 21, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4841, file: !4786, line: 142, column: 6)
!4859 = !{i32 -65535, i32 536903678}
!4860 = !DILocation(line: 142, column: 7, scope: !4858)
!4861 = !DILocation(line: 142, column: 6, scope: !4841)
!4862 = !DILocation(line: 143, column: 3, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4858, file: !4786, line: 142, column: 40)
!4864 = !DILocation(line: 144, column: 19, scope: !4863)
!4865 = !DILocation(line: 144, column: 3, scope: !4863)
!4866 = !DILocation(line: 145, column: 7, scope: !4863)
!4867 = !DILocation(line: 146, column: 2, scope: !4863)
!4868 = !DILocation(line: 148, column: 2, scope: !4841)
!4869 = !DILocation(line: 149, column: 1, scope: !4841)
!4870 = distinct !DISubprogram(name: "right_chunk", scope: !2664, file: !2664, line: 204, type: !4871, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4873)
!4871 = !DISubroutineType(types: !4872)
!4872 = !{!2682, !2677, !2682}
!4873 = !{!4874, !4875}
!4874 = !DILocalVariable(name: "h", arg: 1, scope: !4870, file: !2664, line: 204, type: !2677)
!4875 = !DILocalVariable(name: "c", arg: 2, scope: !4870, file: !2664, line: 204, type: !2682)
!4876 = !DILocation(line: 0, scope: !4870)
!4877 = !DILocation(line: 206, column: 13, scope: !4870)
!4878 = !DILocation(line: 206, column: 11, scope: !4870)
!4879 = !DILocation(line: 206, column: 2, scope: !4870)
!4880 = distinct !DISubprogram(name: "chunk_used", scope: !2664, file: !2664, line: 137, type: !4881, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4883)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{!131, !2677, !2682}
!4883 = !{!4884, !4885}
!4884 = !DILocalVariable(name: "h", arg: 1, scope: !4880, file: !2664, line: 137, type: !2677)
!4885 = !DILocalVariable(name: "c", arg: 2, scope: !4880, file: !2664, line: 137, type: !2682)
!4886 = !DILocation(line: 0, scope: !4880)
!4887 = !DILocation(line: 139, column: 9, scope: !4880)
!4888 = !DILocation(line: 139, column: 42, scope: !4880)
!4889 = !DILocation(line: 139, column: 2, scope: !4880)
!4890 = distinct !DISubprogram(name: "free_list_remove", scope: !4786, file: !4786, line: 60, type: !4842, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4891)
!4891 = !{!4892, !4893, !4894}
!4892 = !DILocalVariable(name: "h", arg: 1, scope: !4890, file: !4786, line: 60, type: !2677)
!4893 = !DILocalVariable(name: "c", arg: 2, scope: !4890, file: !4786, line: 60, type: !2682)
!4894 = !DILocalVariable(name: "bidx", scope: !4895, file: !4786, line: 63, type: !103)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !4786, line: 62, column: 31)
!4896 = distinct !DILexicalBlock(scope: !4890, file: !4786, line: 62, column: 6)
!4897 = !DILocation(line: 0, scope: !4890)
!4898 = !DILocation(line: 63, column: 28, scope: !4895)
!4899 = !{i32 0, i32 32768}
!4900 = !DILocation(line: 63, column: 14, scope: !4895)
!4901 = !DILocation(line: 0, scope: !4895)
!4902 = !DILocation(line: 64, column: 3, scope: !4895)
!4903 = !DILocation(line: 66, column: 1, scope: !4890)
!4904 = distinct !DISubprogram(name: "merge_chunks", scope: !4786, file: !4786, line: 125, type: !4905, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4907)
!4905 = !DISubroutineType(types: !4906)
!4906 = !{null, !2677, !2682, !2682}
!4907 = !{!4908, !4909, !4910, !4911}
!4908 = !DILocalVariable(name: "h", arg: 1, scope: !4904, file: !4786, line: 125, type: !2677)
!4909 = !DILocalVariable(name: "lc", arg: 2, scope: !4904, file: !4786, line: 125, type: !2682)
!4910 = !DILocalVariable(name: "rc", arg: 3, scope: !4904, file: !4786, line: 125, type: !2682)
!4911 = !DILocalVariable(name: "newsz", scope: !4904, file: !4786, line: 127, type: !4912)
!4912 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2664, line: 62, baseType: !108)
!4913 = !DILocation(line: 0, scope: !4904)
!4914 = !DILocation(line: 127, column: 20, scope: !4904)
!4915 = !DILocation(line: 127, column: 40, scope: !4904)
!4916 = !DILocation(line: 127, column: 38, scope: !4904)
!4917 = !DILocation(line: 129, column: 2, scope: !4904)
!4918 = !DILocation(line: 130, column: 25, scope: !4904)
!4919 = !DILocation(line: 130, column: 2, scope: !4904)
!4920 = !DILocation(line: 131, column: 1, scope: !4904)
!4921 = distinct !DISubprogram(name: "left_chunk", scope: !2664, file: !2664, line: 199, type: !4871, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4922)
!4922 = !{!4923, !4924}
!4923 = !DILocalVariable(name: "h", arg: 1, scope: !4921, file: !2664, line: 199, type: !2677)
!4924 = !DILocalVariable(name: "c", arg: 2, scope: !4921, file: !2664, line: 199, type: !2682)
!4925 = !DILocation(line: 0, scope: !4921)
!4926 = !DILocation(line: 201, column: 13, scope: !4921)
!4927 = !DILocation(line: 201, column: 11, scope: !4921)
!4928 = !DILocation(line: 201, column: 2, scope: !4921)
!4929 = distinct !DISubprogram(name: "free_list_add", scope: !4786, file: !4786, line: 98, type: !4842, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4930)
!4930 = !{!4931, !4932, !4933}
!4931 = !DILocalVariable(name: "h", arg: 1, scope: !4929, file: !4786, line: 98, type: !2677)
!4932 = !DILocalVariable(name: "c", arg: 2, scope: !4929, file: !4786, line: 98, type: !2682)
!4933 = !DILocalVariable(name: "bidx", scope: !4934, file: !4786, line: 101, type: !103)
!4934 = distinct !DILexicalBlock(scope: !4935, file: !4786, line: 100, column: 31)
!4935 = distinct !DILexicalBlock(scope: !4929, file: !4786, line: 100, column: 6)
!4936 = !DILocation(line: 0, scope: !4929)
!4937 = !DILocation(line: 101, column: 28, scope: !4934)
!4938 = !DILocation(line: 101, column: 14, scope: !4934)
!4939 = !DILocation(line: 0, scope: !4934)
!4940 = !DILocation(line: 102, column: 3, scope: !4934)
!4941 = !DILocation(line: 104, column: 1, scope: !4929)
!4942 = distinct !DISubprogram(name: "chunk_size", scope: !2664, file: !2664, line: 142, type: !4943, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4945)
!4943 = !DISubroutineType(types: !4944)
!4944 = !{!4912, !2677, !2682}
!4945 = !{!4946, !4947}
!4946 = !DILocalVariable(name: "h", arg: 1, scope: !4942, file: !2664, line: 142, type: !2677)
!4947 = !DILocalVariable(name: "c", arg: 2, scope: !4942, file: !2664, line: 142, type: !2682)
!4948 = !DILocation(line: 0, scope: !4942)
!4949 = !DILocation(line: 144, column: 9, scope: !4942)
!4950 = !DILocation(line: 144, column: 42, scope: !4942)
!4951 = !DILocation(line: 144, column: 2, scope: !4942)
!4952 = distinct !DISubprogram(name: "bucket_idx", scope: !2664, file: !2664, line: 250, type: !4953, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4955)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{!103, !2677, !4912}
!4955 = !{!4956, !4957, !4958}
!4956 = !DILocalVariable(name: "h", arg: 1, scope: !4952, file: !2664, line: 250, type: !2677)
!4957 = !DILocalVariable(name: "sz", arg: 2, scope: !4952, file: !2664, line: 250, type: !4912)
!4958 = !DILocalVariable(name: "usable_sz", scope: !4952, file: !2664, line: 252, type: !32)
!4959 = !DILocation(line: 0, scope: !4952)
!4960 = !DILocation(line: 252, column: 32, scope: !4952)
!4961 = !DILocation(line: 252, column: 30, scope: !4952)
!4962 = !DILocation(line: 252, column: 50, scope: !4952)
!4963 = !DILocation(line: 253, column: 14, scope: !4952)
!4964 = !{i32 0, i32 33}
!4965 = !DILocation(line: 253, column: 12, scope: !4952)
!4966 = !DILocation(line: 253, column: 2, scope: !4952)
!4967 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4786, file: !4786, line: 68, type: !4968, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !4970)
!4968 = !DISubroutineType(types: !4969)
!4969 = !{null, !2677, !2682, !103}
!4970 = !{!4971, !4972, !4973, !4974, !4976, !4979}
!4971 = !DILocalVariable(name: "h", arg: 1, scope: !4967, file: !4786, line: 68, type: !2677)
!4972 = !DILocalVariable(name: "c", arg: 2, scope: !4967, file: !4786, line: 68, type: !2682)
!4973 = !DILocalVariable(name: "bidx", arg: 3, scope: !4967, file: !4786, line: 68, type: !103)
!4974 = !DILocalVariable(name: "b", scope: !4967, file: !4786, line: 70, type: !4975)
!4975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 32)
!4976 = !DILocalVariable(name: "second", scope: !4977, file: !4786, line: 84, type: !2682)
!4977 = distinct !DILexicalBlock(scope: !4978, file: !4786, line: 80, column: 9)
!4978 = distinct !DILexicalBlock(scope: !4967, file: !4786, line: 72, column: 6)
!4979 = !DILocalVariable(name: "first", scope: !4977, file: !4786, line: 85, type: !2682)
!4980 = !DILocation(line: 0, scope: !4967)
!4981 = !DILocation(line: 72, column: 9, scope: !4978)
!4982 = !DILocation(line: 72, column: 14, scope: !4978)
!4983 = !DILocation(line: 72, column: 6, scope: !4967)
!4984 = !DILocation(line: 76, column: 23, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4978, file: !4786, line: 72, column: 21)
!4986 = !DILocation(line: 76, column: 6, scope: !4985)
!4987 = !DILocation(line: 76, column: 20, scope: !4985)
!4988 = !DILocation(line: 77, column: 11, scope: !4985)
!4989 = !DILocation(line: 78, column: 3, scope: !4985)
!4990 = !DILocation(line: 79, column: 3, scope: !4985)
!4991 = !DILocation(line: 80, column: 2, scope: !4985)
!4992 = !DILocation(line: 0, scope: !4977)
!4993 = !DILocation(line: 85, column: 21, scope: !4977)
!4994 = !{i32 0, i32 65536}
!4995 = !DILocation(line: 87, column: 3, scope: !4977)
!4996 = !DILocation(line: 88, column: 3, scope: !4977)
!4997 = !DILocation(line: 89, column: 3, scope: !4977)
!4998 = !DILocation(line: 90, column: 3, scope: !4977)
!4999 = !DILocation(line: 96, column: 1, scope: !4967)
!5000 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2664, file: !2664, line: 187, type: !4905, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5001)
!5001 = !{!5002, !5003, !5004}
!5002 = !DILocalVariable(name: "h", arg: 1, scope: !5000, file: !2664, line: 187, type: !2677)
!5003 = !DILocalVariable(name: "c", arg: 2, scope: !5000, file: !2664, line: 187, type: !2682)
!5004 = !DILocalVariable(name: "prev", arg: 3, scope: !5000, file: !2664, line: 188, type: !2682)
!5005 = !DILocation(line: 0, scope: !5000)
!5006 = !DILocation(line: 190, column: 2, scope: !5000)
!5007 = !DILocation(line: 191, column: 1, scope: !5000)
!5008 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2664, file: !2664, line: 193, type: !4905, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5009)
!5009 = !{!5010, !5011, !5012}
!5010 = !DILocalVariable(name: "h", arg: 1, scope: !5008, file: !2664, line: 193, type: !2677)
!5011 = !DILocalVariable(name: "c", arg: 2, scope: !5008, file: !2664, line: 193, type: !2682)
!5012 = !DILocalVariable(name: "next", arg: 3, scope: !5008, file: !2664, line: 194, type: !2682)
!5013 = !DILocation(line: 0, scope: !5008)
!5014 = !DILocation(line: 196, column: 2, scope: !5008)
!5015 = !DILocation(line: 197, column: 1, scope: !5008)
!5016 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2664, file: !2664, line: 177, type: !4871, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5017)
!5017 = !{!5018, !5019}
!5018 = !DILocalVariable(name: "h", arg: 1, scope: !5016, file: !2664, line: 177, type: !2677)
!5019 = !DILocalVariable(name: "c", arg: 2, scope: !5016, file: !2664, line: 177, type: !2682)
!5020 = !DILocation(line: 0, scope: !5016)
!5021 = !DILocation(line: 179, column: 9, scope: !5016)
!5022 = !DILocation(line: 179, column: 2, scope: !5016)
!5023 = distinct !DISubprogram(name: "chunk_field", scope: !2664, file: !2664, line: 107, type: !5024, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5026)
!5024 = !DISubroutineType(types: !5025)
!5025 = !{!2682, !2677, !2682, !2663}
!5026 = !{!5027, !5028, !5029, !5030, !5031}
!5027 = !DILocalVariable(name: "h", arg: 1, scope: !5023, file: !2664, line: 107, type: !2677)
!5028 = !DILocalVariable(name: "c", arg: 2, scope: !5023, file: !2664, line: 107, type: !2682)
!5029 = !DILocalVariable(name: "f", arg: 3, scope: !5023, file: !2664, line: 108, type: !2663)
!5030 = !DILocalVariable(name: "buf", scope: !5023, file: !2664, line: 110, type: !2671)
!5031 = !DILocalVariable(name: "cmem", scope: !5023, file: !2664, line: 111, type: !102)
!5032 = !DILocation(line: 0, scope: !5023)
!5033 = !DILocation(line: 110, column: 22, scope: !5023)
!5034 = !DILocation(line: 111, column: 15, scope: !5023)
!5035 = !DILocation(line: 116, column: 11, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5037, file: !2664, line: 115, column: 9)
!5037 = distinct !DILexicalBlock(scope: !5023, file: !2664, line: 113, column: 6)
!5038 = !DILocation(line: 116, column: 10, scope: !5036)
!5039 = !DILocation(line: 118, column: 1, scope: !5023)
!5040 = distinct !DISubprogram(name: "chunk_buf", scope: !2664, file: !2664, line: 101, type: !5041, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5043)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{!2671, !2677}
!5043 = !{!5044}
!5044 = !DILocalVariable(name: "h", arg: 1, scope: !5040, file: !2664, line: 101, type: !2677)
!5045 = !DILocation(line: 0, scope: !5040)
!5046 = !DILocation(line: 104, column: 9, scope: !5040)
!5047 = !DILocation(line: 104, column: 2, scope: !5040)
!5048 = distinct !DISubprogram(name: "chunk_set", scope: !2664, file: !2664, line: 120, type: !5049, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5051)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{null, !2677, !2682, !2663, !2682}
!5051 = !{!5052, !5053, !5054, !5055, !5056, !5057}
!5052 = !DILocalVariable(name: "h", arg: 1, scope: !5048, file: !2664, line: 120, type: !2677)
!5053 = !DILocalVariable(name: "c", arg: 2, scope: !5048, file: !2664, line: 120, type: !2682)
!5054 = !DILocalVariable(name: "f", arg: 3, scope: !5048, file: !2664, line: 121, type: !2663)
!5055 = !DILocalVariable(name: "val", arg: 4, scope: !5048, file: !2664, line: 121, type: !2682)
!5056 = !DILocalVariable(name: "buf", scope: !5048, file: !2664, line: 125, type: !2671)
!5057 = !DILocalVariable(name: "cmem", scope: !5048, file: !2664, line: 126, type: !102)
!5058 = !DILocation(line: 0, scope: !5048)
!5059 = !DILocation(line: 125, column: 22, scope: !5048)
!5060 = !DILocation(line: 126, column: 15, scope: !5048)
!5061 = !DILocation(line: 133, column: 27, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5063, file: !2664, line: 131, column: 9)
!5063 = distinct !DILexicalBlock(scope: !5048, file: !2664, line: 128, column: 6)
!5064 = !DILocation(line: 133, column: 4, scope: !5062)
!5065 = !DILocation(line: 133, column: 3, scope: !5062)
!5066 = !DILocation(line: 133, column: 25, scope: !5062)
!5067 = !DILocation(line: 135, column: 1, scope: !5048)
!5068 = distinct !DISubprogram(name: "min_chunk_size", scope: !2664, file: !2664, line: 240, type: !5069, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5071)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!4912, !2677}
!5071 = !{!5072}
!5072 = !DILocalVariable(name: "h", arg: 1, scope: !5068, file: !2664, line: 240, type: !2677)
!5073 = !DILocation(line: 0, scope: !5068)
!5074 = !DILocation(line: 242, column: 9, scope: !5068)
!5075 = !DILocation(line: 242, column: 2, scope: !5068)
!5076 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2664, file: !2664, line: 235, type: !5077, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5079)
!5077 = !DISubroutineType(types: !5078)
!5078 = !{!4912, !2677, !132}
!5079 = !{!5080, !5081}
!5080 = !DILocalVariable(name: "h", arg: 1, scope: !5076, file: !2664, line: 235, type: !2677)
!5081 = !DILocalVariable(name: "bytes", arg: 2, scope: !5076, file: !2664, line: 235, type: !132)
!5082 = !DILocation(line: 0, scope: !5076)
!5083 = !DILocation(line: 237, column: 39, scope: !5076)
!5084 = !DILocation(line: 237, column: 9, scope: !5076)
!5085 = !DILocation(line: 237, column: 2, scope: !5076)
!5086 = distinct !DISubprogram(name: "chunksz", scope: !2664, file: !2664, line: 230, type: !5087, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5089)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!4912, !132}
!5089 = !{!5090}
!5090 = !DILocalVariable(name: "bytes", arg: 1, scope: !5086, file: !2664, line: 230, type: !132)
!5091 = !DILocation(line: 0, scope: !5086)
!5092 = !DILocation(line: 232, column: 29, scope: !5086)
!5093 = !DILocation(line: 232, column: 35, scope: !5086)
!5094 = !DILocation(line: 232, column: 2, scope: !5086)
!5095 = distinct !DISubprogram(name: "set_chunk_size", scope: !2664, file: !2664, line: 172, type: !5096, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5098)
!5096 = !DISubroutineType(types: !5097)
!5097 = !{null, !2677, !2682, !4912}
!5098 = !{!5099, !5100, !5101}
!5099 = !DILocalVariable(name: "h", arg: 1, scope: !5095, file: !2664, line: 172, type: !2677)
!5100 = !DILocalVariable(name: "c", arg: 2, scope: !5095, file: !2664, line: 172, type: !2682)
!5101 = !DILocalVariable(name: "size", arg: 3, scope: !5095, file: !2664, line: 172, type: !4912)
!5102 = !DILocation(line: 0, scope: !5095)
!5103 = !DILocation(line: 174, column: 38, scope: !5095)
!5104 = !DILocation(line: 174, column: 2, scope: !5095)
!5105 = !DILocation(line: 175, column: 1, scope: !5095)
!5106 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2664, file: !2664, line: 209, type: !5096, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5107)
!5107 = !{!5108, !5109, !5110}
!5108 = !DILocalVariable(name: "h", arg: 1, scope: !5106, file: !2664, line: 209, type: !2677)
!5109 = !DILocalVariable(name: "c", arg: 2, scope: !5106, file: !2664, line: 209, type: !2682)
!5110 = !DILocalVariable(name: "size", arg: 3, scope: !5106, file: !2664, line: 210, type: !4912)
!5111 = !DILocation(line: 0, scope: !5106)
!5112 = !DILocation(line: 212, column: 2, scope: !5106)
!5113 = !DILocation(line: 213, column: 1, scope: !5106)
!5114 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4786, file: !4786, line: 34, type: !4968, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5115)
!5115 = !{!5116, !5117, !5118, !5119, !5120, !5123}
!5116 = !DILocalVariable(name: "h", arg: 1, scope: !5114, file: !4786, line: 34, type: !2677)
!5117 = !DILocalVariable(name: "c", arg: 2, scope: !5114, file: !4786, line: 34, type: !2682)
!5118 = !DILocalVariable(name: "bidx", arg: 3, scope: !5114, file: !4786, line: 34, type: !103)
!5119 = !DILocalVariable(name: "b", scope: !5114, file: !4786, line: 36, type: !4975)
!5120 = !DILocalVariable(name: "first", scope: !5121, file: !4786, line: 47, type: !2682)
!5121 = distinct !DILexicalBlock(scope: !5122, file: !4786, line: 46, column: 9)
!5122 = distinct !DILexicalBlock(scope: !5114, file: !4786, line: 42, column: 6)
!5123 = !DILocalVariable(name: "second", scope: !5121, file: !4786, line: 48, type: !2682)
!5124 = !DILocation(line: 0, scope: !5114)
!5125 = !DILocation(line: 36, column: 29, scope: !5114)
!5126 = !DILocation(line: 42, column: 6, scope: !5122)
!5127 = !DILocation(line: 42, column: 28, scope: !5122)
!5128 = !DILocation(line: 42, column: 6, scope: !5114)
!5129 = !DILocation(line: 44, column: 24, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5122, file: !4786, line: 42, column: 34)
!5131 = !DILocation(line: 44, column: 23, scope: !5130)
!5132 = !DILocation(line: 44, column: 6, scope: !5130)
!5133 = !DILocation(line: 44, column: 20, scope: !5130)
!5134 = !DILocation(line: 45, column: 6, scope: !5130)
!5135 = !DILocation(line: 45, column: 11, scope: !5130)
!5136 = !DILocation(line: 46, column: 2, scope: !5130)
!5137 = !DILocation(line: 47, column: 21, scope: !5121)
!5138 = !DILocation(line: 0, scope: !5121)
!5139 = !DILocation(line: 50, column: 6, scope: !5121)
!5140 = !DILocation(line: 50, column: 11, scope: !5121)
!5141 = !DILocation(line: 51, column: 3, scope: !5121)
!5142 = !DILocation(line: 52, column: 3, scope: !5121)
!5143 = !DILocation(line: 58, column: 1, scope: !5114)
!5144 = distinct !DISubprogram(name: "next_free_chunk", scope: !2664, file: !2664, line: 182, type: !4871, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5145)
!5145 = !{!5146, !5147}
!5146 = !DILocalVariable(name: "h", arg: 1, scope: !5144, file: !2664, line: 182, type: !2677)
!5147 = !DILocalVariable(name: "c", arg: 2, scope: !5144, file: !2664, line: 182, type: !2682)
!5148 = !DILocation(line: 0, scope: !5144)
!5149 = !DILocation(line: 184, column: 9, scope: !5144)
!5150 = !DILocation(line: 184, column: 2, scope: !5144)
!5151 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4786, file: !4786, line: 200, type: !5152, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5154)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{!132, !4789, !102}
!5154 = !{!5155, !5156, !5157, !5158, !5159, !5160, !5161}
!5155 = !DILocalVariable(name: "heap", arg: 1, scope: !5151, file: !4786, line: 200, type: !4789)
!5156 = !DILocalVariable(name: "mem", arg: 2, scope: !5151, file: !4786, line: 200, type: !102)
!5157 = !DILocalVariable(name: "h", scope: !5151, file: !4786, line: 202, type: !2677)
!5158 = !DILocalVariable(name: "c", scope: !5151, file: !4786, line: 203, type: !2682)
!5159 = !DILocalVariable(name: "addr", scope: !5151, file: !4786, line: 204, type: !132)
!5160 = !DILocalVariable(name: "chunk_base", scope: !5151, file: !4786, line: 205, type: !132)
!5161 = !DILocalVariable(name: "chunk_sz", scope: !5151, file: !4786, line: 206, type: !132)
!5162 = !DILocation(line: 0, scope: !5151)
!5163 = !DILocation(line: 202, column: 27, scope: !5151)
!5164 = !DILocation(line: 203, column: 16, scope: !5151)
!5165 = !DILocation(line: 204, column: 16, scope: !5151)
!5166 = !DILocation(line: 205, column: 31, scope: !5151)
!5167 = !DILocation(line: 205, column: 22, scope: !5151)
!5168 = !DILocation(line: 206, column: 20, scope: !5151)
!5169 = !DILocation(line: 206, column: 37, scope: !5151)
!5170 = !DILocation(line: 208, column: 26, scope: !5151)
!5171 = !DILocation(line: 208, column: 18, scope: !5151)
!5172 = !DILocation(line: 208, column: 2, scope: !5151)
!5173 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4786, file: !4786, line: 263, type: !5174, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5176)
!5174 = !DISubroutineType(types: !5175)
!5175 = !{!102, !4789, !132}
!5176 = !{!5177, !5178, !5179, !5180, !5181, !5182}
!5177 = !DILocalVariable(name: "heap", arg: 1, scope: !5173, file: !4786, line: 263, type: !4789)
!5178 = !DILocalVariable(name: "bytes", arg: 2, scope: !5173, file: !4786, line: 263, type: !132)
!5179 = !DILocalVariable(name: "h", scope: !5173, file: !4786, line: 265, type: !2677)
!5180 = !DILocalVariable(name: "mem", scope: !5173, file: !4786, line: 266, type: !102)
!5181 = !DILocalVariable(name: "chunk_sz", scope: !5173, file: !4786, line: 272, type: !4912)
!5182 = !DILocalVariable(name: "c", scope: !5173, file: !4786, line: 273, type: !2682)
!5183 = !DILocation(line: 0, scope: !5173)
!5184 = !DILocation(line: 265, column: 27, scope: !5173)
!5185 = !DILocation(line: 268, column: 12, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5173, file: !4786, line: 268, column: 6)
!5187 = !DILocation(line: 268, column: 18, scope: !5186)
!5188 = !DILocation(line: 268, column: 21, scope: !5186)
!5189 = !DILocation(line: 268, column: 6, scope: !5173)
!5190 = !DILocation(line: 272, column: 23, scope: !5173)
!5191 = !DILocation(line: 273, column: 16, scope: !5173)
!5192 = !DILocation(line: 274, column: 8, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5173, file: !4786, line: 274, column: 6)
!5194 = !DILocation(line: 274, column: 6, scope: !5173)
!5195 = !DILocation(line: 279, column: 6, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5173, file: !4786, line: 279, column: 6)
!5197 = !DILocation(line: 279, column: 23, scope: !5196)
!5198 = !DILocation(line: 279, column: 6, scope: !5173)
!5199 = !DILocation(line: 280, column: 24, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5196, file: !4786, line: 279, column: 35)
!5201 = !DILocation(line: 280, column: 3, scope: !5200)
!5202 = !DILocation(line: 281, column: 3, scope: !5200)
!5203 = !DILocation(line: 282, column: 2, scope: !5200)
!5204 = !DILocation(line: 284, column: 2, scope: !5173)
!5205 = !DILocation(line: 286, column: 8, scope: !5173)
!5206 = !DILocation(line: 298, column: 2, scope: !5173)
!5207 = !DILocation(line: 299, column: 1, scope: !5173)
!5208 = distinct !DISubprogram(name: "size_too_big", scope: !2664, file: !2664, line: 256, type: !5209, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5211)
!5209 = !DISubroutineType(types: !5210)
!5210 = !{!131, !2677, !132}
!5211 = !{!5212, !5213}
!5212 = !DILocalVariable(name: "h", arg: 1, scope: !5208, file: !2664, line: 256, type: !2677)
!5213 = !DILocalVariable(name: "bytes", arg: 2, scope: !5208, file: !2664, line: 256, type: !132)
!5214 = !DILocation(line: 0, scope: !5208)
!5215 = !DILocation(line: 262, column: 16, scope: !5208)
!5216 = !DILocation(line: 262, column: 36, scope: !5208)
!5217 = !DILocation(line: 262, column: 30, scope: !5208)
!5218 = !DILocation(line: 262, column: 2, scope: !5208)
!5219 = distinct !DISubprogram(name: "alloc_chunk", scope: !4786, file: !4786, line: 211, type: !5220, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5222)
!5220 = !DISubroutineType(types: !5221)
!5221 = !{!2682, !2677, !4912}
!5222 = !{!5223, !5224, !5225, !5226, !5227, !5230, !5231, !5233, !5234, !5237}
!5223 = !DILocalVariable(name: "h", arg: 1, scope: !5219, file: !4786, line: 211, type: !2677)
!5224 = !DILocalVariable(name: "sz", arg: 2, scope: !5219, file: !4786, line: 211, type: !4912)
!5225 = !DILocalVariable(name: "bi", scope: !5219, file: !4786, line: 213, type: !103)
!5226 = !DILocalVariable(name: "b", scope: !5219, file: !4786, line: 214, type: !4975)
!5227 = !DILocalVariable(name: "first", scope: !5228, file: !4786, line: 233, type: !2682)
!5228 = distinct !DILexicalBlock(scope: !5229, file: !4786, line: 232, column: 15)
!5229 = distinct !DILexicalBlock(scope: !5219, file: !4786, line: 232, column: 6)
!5230 = !DILocalVariable(name: "i", scope: !5228, file: !4786, line: 234, type: !103)
!5231 = !DILocalVariable(name: "c", scope: !5232, file: !4786, line: 236, type: !2682)
!5232 = distinct !DILexicalBlock(scope: !5228, file: !4786, line: 235, column: 6)
!5233 = !DILocalVariable(name: "bmask", scope: !5219, file: !4786, line: 249, type: !108)
!5234 = !DILocalVariable(name: "minbucket", scope: !5235, file: !4786, line: 252, type: !103)
!5235 = distinct !DILexicalBlock(scope: !5236, file: !4786, line: 251, column: 19)
!5236 = distinct !DILexicalBlock(scope: !5219, file: !4786, line: 251, column: 6)
!5237 = !DILocalVariable(name: "c", scope: !5235, file: !4786, line: 253, type: !2682)
!5238 = !DILocation(line: 0, scope: !5219)
!5239 = !DILocation(line: 213, column: 11, scope: !5219)
!5240 = !DILocation(line: 232, column: 9, scope: !5229)
!5241 = !DILocation(line: 232, column: 6, scope: !5229)
!5242 = !DILocation(line: 232, column: 6, scope: !5219)
!5243 = !DILocation(line: 236, column: 21, scope: !5232)
!5244 = !DILocation(line: 0, scope: !5228)
!5245 = !DILocation(line: 0, scope: !5232)
!5246 = !DILocation(line: 237, column: 8, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5232, file: !4786, line: 237, column: 8)
!5248 = !DILocation(line: 237, column: 25, scope: !5247)
!5249 = !DILocation(line: 237, column: 8, scope: !5232)
!5250 = !DILocation(line: 238, column: 5, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5247, file: !4786, line: 237, column: 32)
!5252 = !DILocation(line: 241, column: 14, scope: !5232)
!5253 = !DILocation(line: 241, column: 12, scope: !5232)
!5254 = !DILocation(line: 243, column: 12, scope: !5228)
!5255 = !DILocation(line: 243, column: 16, scope: !5228)
!5256 = distinct !{!5256, !5257, !5258}
!5257 = !DILocation(line: 235, column: 3, scope: !5228)
!5258 = !DILocation(line: 243, column: 35, scope: !5228)
!5259 = !DILocation(line: 249, column: 22, scope: !5219)
!5260 = !DILocation(line: 249, column: 39, scope: !5219)
!5261 = !DILocation(line: 249, column: 36, scope: !5219)
!5262 = !DILocation(line: 251, column: 12, scope: !5236)
!5263 = !DILocation(line: 251, column: 6, scope: !5219)
!5264 = !DILocation(line: 252, column: 19, scope: !5235)
!5265 = !DILocation(line: 0, scope: !5235)
!5266 = !DILocation(line: 253, column: 39, scope: !5235)
!5267 = !DILocation(line: 255, column: 3, scope: !5235)
!5268 = !DILocation(line: 261, column: 1, scope: !5219)
!5269 = distinct !DISubprogram(name: "split_chunks", scope: !4786, file: !4786, line: 109, type: !4905, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5270)
!5270 = !{!5271, !5272, !5273, !5274, !5275, !5276}
!5271 = !DILocalVariable(name: "h", arg: 1, scope: !5269, file: !4786, line: 109, type: !2677)
!5272 = !DILocalVariable(name: "lc", arg: 2, scope: !5269, file: !4786, line: 109, type: !2682)
!5273 = !DILocalVariable(name: "rc", arg: 3, scope: !5269, file: !4786, line: 109, type: !2682)
!5274 = !DILocalVariable(name: "sz0", scope: !5269, file: !4786, line: 114, type: !4912)
!5275 = !DILocalVariable(name: "lsz", scope: !5269, file: !4786, line: 115, type: !4912)
!5276 = !DILocalVariable(name: "rsz", scope: !5269, file: !4786, line: 116, type: !4912)
!5277 = !DILocation(line: 0, scope: !5269)
!5278 = !DILocation(line: 114, column: 18, scope: !5269)
!5279 = !DILocation(line: 115, column: 21, scope: !5269)
!5280 = !DILocation(line: 116, column: 22, scope: !5269)
!5281 = !DILocation(line: 118, column: 2, scope: !5269)
!5282 = !DILocation(line: 119, column: 2, scope: !5269)
!5283 = !DILocation(line: 120, column: 2, scope: !5269)
!5284 = !DILocation(line: 121, column: 25, scope: !5269)
!5285 = !DILocation(line: 121, column: 2, scope: !5269)
!5286 = !DILocation(line: 122, column: 1, scope: !5269)
!5287 = distinct !DISubprogram(name: "chunk_mem", scope: !4786, file: !4786, line: 24, type: !5288, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5290)
!5288 = !DISubroutineType(types: !5289)
!5289 = !{!102, !2677, !2682}
!5290 = !{!5291, !5292, !5293, !5294}
!5291 = !DILocalVariable(name: "h", arg: 1, scope: !5287, file: !4786, line: 24, type: !2677)
!5292 = !DILocalVariable(name: "c", arg: 2, scope: !5287, file: !4786, line: 24, type: !2682)
!5293 = !DILocalVariable(name: "buf", scope: !5287, file: !4786, line: 26, type: !2671)
!5294 = !DILocalVariable(name: "ret", scope: !5287, file: !4786, line: 27, type: !379)
!5295 = !DILocation(line: 0, scope: !5287)
!5296 = !DILocation(line: 26, column: 22, scope: !5287)
!5297 = !DILocation(line: 27, column: 38, scope: !5287)
!5298 = !DILocation(line: 31, column: 2, scope: !5287)
!5299 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4786, file: !4786, line: 301, type: !5300, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5302)
!5300 = !DISubroutineType(types: !5301)
!5301 = !{!102, !4789, !132, !132}
!5302 = !{!5303, !5304, !5305, !5306, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314}
!5303 = !DILocalVariable(name: "heap", arg: 1, scope: !5299, file: !4786, line: 301, type: !4789)
!5304 = !DILocalVariable(name: "align", arg: 2, scope: !5299, file: !4786, line: 301, type: !132)
!5305 = !DILocalVariable(name: "bytes", arg: 3, scope: !5299, file: !4786, line: 301, type: !132)
!5306 = !DILocalVariable(name: "h", scope: !5299, file: !4786, line: 303, type: !2677)
!5307 = !DILocalVariable(name: "gap", scope: !5299, file: !4786, line: 304, type: !132)
!5308 = !DILocalVariable(name: "rew", scope: !5299, file: !4786, line: 304, type: !132)
!5309 = !DILocalVariable(name: "padded_sz", scope: !5299, file: !4786, line: 335, type: !4912)
!5310 = !DILocalVariable(name: "c0", scope: !5299, file: !4786, line: 336, type: !2682)
!5311 = !DILocalVariable(name: "mem", scope: !5299, file: !4786, line: 341, type: !379)
!5312 = !DILocalVariable(name: "end", scope: !5299, file: !4786, line: 345, type: !2671)
!5313 = !DILocalVariable(name: "c", scope: !5299, file: !4786, line: 348, type: !2682)
!5314 = !DILocalVariable(name: "c_end", scope: !5299, file: !4786, line: 349, type: !2682)
!5315 = !DILocation(line: 0, scope: !5299)
!5316 = !DILocation(line: 303, column: 27, scope: !5299)
!5317 = !DILocation(line: 313, column: 16, scope: !5299)
!5318 = !DILocation(line: 313, column: 14, scope: !5299)
!5319 = !DILocation(line: 314, column: 12, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5299, file: !4786, line: 314, column: 6)
!5321 = !DILocation(line: 314, column: 6, scope: !5299)
!5322 = !DILocation(line: 315, column: 9, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5320, file: !4786, line: 314, column: 20)
!5324 = !DILocation(line: 316, column: 9, scope: !5323)
!5325 = !DILocation(line: 318, column: 13, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5327, file: !4786, line: 318, column: 7)
!5327 = distinct !DILexicalBlock(scope: !5320, file: !4786, line: 317, column: 9)
!5328 = !DILocation(line: 318, column: 7, scope: !5327)
!5329 = !DILocation(line: 319, column: 11, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5326, file: !4786, line: 318, column: 39)
!5331 = !DILocation(line: 319, column: 4, scope: !5330)
!5332 = !DILocation(line: 0, scope: !5320)
!5333 = !DILocation(line: 326, column: 12, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5299, file: !4786, line: 326, column: 6)
!5335 = !DILocation(line: 326, column: 17, scope: !5334)
!5336 = !DILocation(line: 326, column: 20, scope: !5334)
!5337 = !DILocation(line: 326, column: 6, scope: !5299)
!5338 = !DILocation(line: 335, column: 50, scope: !5299)
!5339 = !DILocation(line: 335, column: 58, scope: !5299)
!5340 = !DILocation(line: 335, column: 24, scope: !5299)
!5341 = !DILocation(line: 336, column: 17, scope: !5299)
!5342 = !DILocation(line: 338, column: 9, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5299, file: !4786, line: 338, column: 6)
!5344 = !DILocation(line: 338, column: 6, scope: !5299)
!5345 = !DILocation(line: 341, column: 17, scope: !5299)
!5346 = !DILocation(line: 344, column: 20, scope: !5299)
!5347 = !DILocation(line: 344, column: 8, scope: !5299)
!5348 = !DILocation(line: 344, column: 47, scope: !5299)
!5349 = !DILocation(line: 345, column: 39, scope: !5299)
!5350 = !DILocation(line: 348, column: 16, scope: !5299)
!5351 = !DILocation(line: 349, column: 26, scope: !5299)
!5352 = !DILocation(line: 349, column: 24, scope: !5299)
!5353 = !DILocation(line: 353, column: 8, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5299, file: !4786, line: 353, column: 6)
!5355 = !DILocation(line: 353, column: 6, scope: !5299)
!5356 = !DILocation(line: 354, column: 3, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5354, file: !4786, line: 353, column: 14)
!5358 = !DILocation(line: 355, column: 3, scope: !5357)
!5359 = !DILocation(line: 356, column: 2, scope: !5357)
!5360 = !DILocation(line: 359, column: 6, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5299, file: !4786, line: 359, column: 6)
!5362 = !DILocation(line: 359, column: 24, scope: !5361)
!5363 = !DILocation(line: 359, column: 6, scope: !5299)
!5364 = !DILocation(line: 360, column: 3, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5361, file: !4786, line: 359, column: 33)
!5366 = !DILocation(line: 361, column: 3, scope: !5365)
!5367 = !DILocation(line: 362, column: 2, scope: !5365)
!5368 = !DILocation(line: 364, column: 2, scope: !5299)
!5369 = !DILocation(line: 377, column: 1, scope: !5299)
!5370 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4786, file: !4786, line: 379, type: !5371, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5373)
!5371 = !DISubroutineType(types: !5372)
!5372 = !{!102, !4789, !102, !132, !132}
!5373 = !{!5374, !5375, !5376, !5377, !5378, !5379, !5380, !5381, !5382, !5383, !5389, !5390}
!5374 = !DILocalVariable(name: "heap", arg: 1, scope: !5370, file: !4786, line: 379, type: !4789)
!5375 = !DILocalVariable(name: "ptr", arg: 2, scope: !5370, file: !4786, line: 379, type: !102)
!5376 = !DILocalVariable(name: "align", arg: 3, scope: !5370, file: !4786, line: 380, type: !132)
!5377 = !DILocalVariable(name: "bytes", arg: 4, scope: !5370, file: !4786, line: 380, type: !132)
!5378 = !DILocalVariable(name: "h", scope: !5370, file: !4786, line: 382, type: !2677)
!5379 = !DILocalVariable(name: "c", scope: !5370, file: !4786, line: 399, type: !2682)
!5380 = !DILocalVariable(name: "rc", scope: !5370, file: !4786, line: 400, type: !2682)
!5381 = !DILocalVariable(name: "align_gap", scope: !5370, file: !4786, line: 401, type: !132)
!5382 = !DILocalVariable(name: "chunks_need", scope: !5370, file: !4786, line: 402, type: !4912)
!5383 = !DILocalVariable(name: "split_size", scope: !5384, file: !4786, line: 435, type: !4912)
!5384 = distinct !DILexicalBlock(scope: !5385, file: !4786, line: 433, column: 61)
!5385 = distinct !DILexicalBlock(scope: !5386, file: !4786, line: 432, column: 13)
!5386 = distinct !DILexicalBlock(scope: !5387, file: !4786, line: 409, column: 13)
!5387 = distinct !DILexicalBlock(scope: !5388, file: !4786, line: 406, column: 13)
!5388 = distinct !DILexicalBlock(scope: !5370, file: !4786, line: 404, column: 6)
!5389 = !DILocalVariable(name: "ptr2", scope: !5370, file: !4786, line: 474, type: !102)
!5390 = !DILocalVariable(name: "prev_size", scope: !5391, file: !4786, line: 477, type: !132)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !4786, line: 476, column: 20)
!5392 = distinct !DILexicalBlock(scope: !5370, file: !4786, line: 476, column: 6)
!5393 = !DILocation(line: 0, scope: !5370)
!5394 = !DILocation(line: 382, column: 27, scope: !5370)
!5395 = !DILocation(line: 385, column: 10, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5370, file: !4786, line: 385, column: 6)
!5397 = !DILocation(line: 385, column: 6, scope: !5370)
!5398 = !DILocation(line: 386, column: 10, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5396, file: !4786, line: 385, column: 19)
!5400 = !DILocation(line: 386, column: 3, scope: !5399)
!5401 = !DILocation(line: 388, column: 12, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5370, file: !4786, line: 388, column: 6)
!5403 = !DILocation(line: 388, column: 6, scope: !5370)
!5404 = !DILocation(line: 389, column: 3, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5402, file: !4786, line: 388, column: 18)
!5406 = !DILocation(line: 390, column: 3, scope: !5405)
!5407 = !DILocation(line: 395, column: 6, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5370, file: !4786, line: 395, column: 6)
!5409 = !DILocation(line: 395, column: 6, scope: !5370)
!5410 = !DILocation(line: 399, column: 16, scope: !5370)
!5411 = !DILocation(line: 400, column: 17, scope: !5370)
!5412 = !DILocation(line: 401, column: 49, scope: !5370)
!5413 = !DILocation(line: 401, column: 36, scope: !5370)
!5414 = !DILocation(line: 402, column: 52, scope: !5370)
!5415 = !DILocation(line: 402, column: 26, scope: !5370)
!5416 = !DILocation(line: 404, column: 6, scope: !5388)
!5417 = !DILocation(line: 404, column: 12, scope: !5388)
!5418 = !DILocation(line: 404, column: 40, scope: !5388)
!5419 = !DILocation(line: 404, column: 31, scope: !5388)
!5420 = !DILocation(line: 404, column: 6, scope: !5370)
!5421 = !DILocation(line: 406, column: 13, scope: !5387)
!5422 = !DILocation(line: 406, column: 30, scope: !5387)
!5423 = !DILocation(line: 406, column: 13, scope: !5388)
!5424 = !DILocation(line: 409, column: 30, scope: !5386)
!5425 = !DILocation(line: 409, column: 13, scope: !5387)
!5426 = !DILocation(line: 420, column: 24, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5386, file: !4786, line: 409, column: 45)
!5428 = !DILocation(line: 420, column: 3, scope: !5427)
!5429 = !DILocation(line: 421, column: 3, scope: !5427)
!5430 = !DILocation(line: 422, column: 3, scope: !5427)
!5431 = !DILocation(line: 431, column: 3, scope: !5427)
!5432 = !DILocation(line: 432, column: 14, scope: !5385)
!5433 = !DILocation(line: 432, column: 32, scope: !5385)
!5434 = !DILocation(line: 433, column: 26, scope: !5385)
!5435 = !DILocation(line: 433, column: 24, scope: !5385)
!5436 = !DILocation(line: 433, column: 44, scope: !5385)
!5437 = !DILocation(line: 432, column: 13, scope: !5386)
!5438 = !DILocation(line: 435, column: 38, scope: !5384)
!5439 = !DILocation(line: 0, scope: !5384)
!5440 = !DILocation(line: 445, column: 3, scope: !5384)
!5441 = !DILocation(line: 447, column: 20, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5384, file: !4786, line: 447, column: 7)
!5443 = !DILocation(line: 447, column: 18, scope: !5442)
!5444 = !DILocation(line: 447, column: 7, scope: !5384)
!5445 = !DILocation(line: 448, column: 27, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5442, file: !4786, line: 447, column: 39)
!5447 = !DILocation(line: 448, column: 4, scope: !5446)
!5448 = !DILocation(line: 449, column: 4, scope: !5446)
!5449 = !DILocation(line: 450, column: 3, scope: !5446)
!5450 = !DILocation(line: 452, column: 3, scope: !5384)
!5451 = !DILocation(line: 453, column: 3, scope: !5384)
!5452 = !DILocation(line: 474, column: 15, scope: !5370)
!5453 = !DILocation(line: 476, column: 11, scope: !5392)
!5454 = !DILocation(line: 476, column: 6, scope: !5370)
!5455 = !DILocation(line: 477, column: 42, scope: !5391)
!5456 = !DILocation(line: 477, column: 22, scope: !5391)
!5457 = !DILocation(line: 477, column: 60, scope: !5391)
!5458 = !DILocation(line: 0, scope: !5391)
!5459 = !DILocation(line: 479, column: 21, scope: !5391)
!5460 = !DILocation(line: 479, column: 3, scope: !5391)
!5461 = !DILocation(line: 480, column: 3, scope: !5391)
!5462 = !DILocation(line: 481, column: 2, scope: !5391)
!5463 = !DILocation(line: 483, column: 1, scope: !5370)
!5464 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2664, file: !2664, line: 245, type: !5465, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5467)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{!132, !2677, !4912}
!5467 = !{!5468, !5469}
!5468 = !DILocalVariable(name: "h", arg: 1, scope: !5464, file: !2664, line: 245, type: !2677)
!5469 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5464, file: !2664, line: 245, type: !4912)
!5470 = !DILocation(line: 0, scope: !5464)
!5471 = !DILocation(line: 247, column: 20, scope: !5464)
!5472 = !DILocation(line: 247, column: 33, scope: !5464)
!5473 = !DILocation(line: 247, column: 2, scope: !5464)
!5474 = distinct !DISubprogram(name: "sys_heap_init", scope: !4786, file: !4786, line: 485, type: !5475, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2660, retainedNodes: !5477)
!5475 = !DISubroutineType(types: !5476)
!5476 = !{null, !4789, !102, !132}
!5477 = !{!5478, !5479, !5480, !5481, !5482, !5483, !5484, !5485, !5486, !5487}
!5478 = !DILocalVariable(name: "heap", arg: 1, scope: !5474, file: !4786, line: 485, type: !4789)
!5479 = !DILocalVariable(name: "mem", arg: 2, scope: !5474, file: !4786, line: 485, type: !102)
!5480 = !DILocalVariable(name: "bytes", arg: 3, scope: !5474, file: !4786, line: 485, type: !132)
!5481 = !DILocalVariable(name: "addr", scope: !5474, file: !4786, line: 502, type: !22)
!5482 = !DILocalVariable(name: "end", scope: !5474, file: !4786, line: 503, type: !22)
!5483 = !DILocalVariable(name: "heap_sz", scope: !5474, file: !4786, line: 504, type: !4912)
!5484 = !DILocalVariable(name: "h", scope: !5474, file: !4786, line: 509, type: !2677)
!5485 = !DILocalVariable(name: "nb_buckets", scope: !5474, file: !4786, line: 520, type: !103)
!5486 = !DILocalVariable(name: "chunk0_size", scope: !5474, file: !4786, line: 521, type: !4912)
!5487 = !DILocalVariable(name: "i", scope: !5488, file: !4786, line: 526, type: !103)
!5488 = distinct !DILexicalBlock(scope: !5474, file: !4786, line: 526, column: 2)
!5489 = !DILocation(line: 0, scope: !5474)
!5490 = !DILocation(line: 499, column: 8, scope: !5474)
!5491 = !DILocation(line: 502, column: 19, scope: !5474)
!5492 = !DILocation(line: 503, column: 18, scope: !5474)
!5493 = !DILocation(line: 504, column: 27, scope: !5474)
!5494 = !DILocation(line: 504, column: 35, scope: !5474)
!5495 = !DILocation(line: 509, column: 21, scope: !5474)
!5496 = !DILocation(line: 510, column: 8, scope: !5474)
!5497 = !DILocation(line: 510, column: 13, scope: !5474)
!5498 = !DILocation(line: 511, column: 5, scope: !5474)
!5499 = !DILocation(line: 511, column: 15, scope: !5474)
!5500 = !DILocation(line: 512, column: 5, scope: !5474)
!5501 = !DILocation(line: 512, column: 19, scope: !5474)
!5502 = !DILocation(line: 520, column: 19, scope: !5474)
!5503 = !DILocation(line: 522, column: 21, scope: !5474)
!5504 = !DILocation(line: 521, column: 56, scope: !5474)
!5505 = !DILocation(line: 521, column: 26, scope: !5474)
!5506 = !DILocation(line: 0, scope: !5488)
!5507 = !DILocation(line: 526, column: 20, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5488, file: !4786, line: 526, column: 2)
!5509 = !DILocation(line: 526, column: 2, scope: !5488)
!5510 = !DILocation(line: 531, column: 2, scope: !5474)
!5511 = !DILocation(line: 532, column: 2, scope: !5474)
!5512 = !DILocation(line: 533, column: 2, scope: !5474)
!5513 = !DILocation(line: 536, column: 41, scope: !5474)
!5514 = !DILocation(line: 536, column: 2, scope: !5474)
!5515 = !DILocation(line: 537, column: 2, scope: !5474)
!5516 = !DILocation(line: 540, column: 2, scope: !5474)
!5517 = !DILocation(line: 541, column: 2, scope: !5474)
!5518 = !DILocation(line: 542, column: 2, scope: !5474)
!5519 = !DILocation(line: 544, column: 2, scope: !5474)
!5520 = !DILocation(line: 545, column: 1, scope: !5474)
!5521 = !DILocation(line: 527, column: 17, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5508, file: !4786, line: 526, column: 39)
!5523 = !DILocation(line: 527, column: 22, scope: !5522)
!5524 = !DILocation(line: 526, column: 35, scope: !5508)
!5525 = distinct !{!5525, !5509, !5526}
!5526 = !DILocation(line: 528, column: 2, scope: !5488)
!5527 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2697, file: !2697, line: 1338, type: !5528, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5536)
!5528 = !DISubroutineType(types: !5529)
!5529 = !{!103, !3984, !102, !337, !5530, !108}
!5530 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3623, line: 99, baseType: !5531)
!5531 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3623, line: 40, baseType: !5532)
!5532 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2697, baseType: !5533)
!5533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5534)
!5534 = !{!5535}
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5533, file: !2697, baseType: !102, size: 32)
!5536 = !{!5537, !5538, !5539, !5540, !5541, !5542, !5546, !5547, !5548, !5550, !5555, !5598, !5601, !5604, !5605, !5606, !5607, !5608, !5609, !5610, !5613, !5614, !5615, !5619, !5622, !5624, !5627, !5628, !5629, !5634, !5640, !5643, !5647, !5653, !5657, !5660, !5662, !5665}
!5537 = !DILocalVariable(name: "out", arg: 1, scope: !5527, file: !2697, line: 1338, type: !3984)
!5538 = !DILocalVariable(name: "ctx", arg: 2, scope: !5527, file: !2697, line: 1338, type: !102)
!5539 = !DILocalVariable(name: "fp", arg: 3, scope: !5527, file: !2697, line: 1338, type: !337)
!5540 = !DILocalVariable(name: "ap", arg: 4, scope: !5527, file: !2697, line: 1339, type: !5530)
!5541 = !DILocalVariable(name: "flags", arg: 5, scope: !5527, file: !2697, line: 1339, type: !108)
!5542 = !DILocalVariable(name: "buf", scope: !5527, file: !2697, line: 1341, type: !5543)
!5543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 176, elements: !5544)
!5544 = !{!5545}
!5545 = !DISubrange(count: 22)
!5546 = !DILocalVariable(name: "count", scope: !5527, file: !2697, line: 1342, type: !132)
!5547 = !DILocalVariable(name: "sint", scope: !5527, file: !2697, line: 1343, type: !2716)
!5548 = !DILocalVariable(name: "tagged_ap", scope: !5527, file: !2697, line: 1345, type: !5549)
!5549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!5550 = !DILocalVariable(name: "rc", scope: !5551, file: !2697, line: 1377, type: !103)
!5551 = distinct !DILexicalBlock(scope: !5552, file: !2697, line: 1377, column: 4)
!5552 = distinct !DILexicalBlock(scope: !5553, file: !2697, line: 1376, column: 19)
!5553 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1376, column: 7)
!5554 = distinct !DILexicalBlock(scope: !5527, file: !2697, line: 1375, column: 19)
!5555 = !DILocalVariable(name: "state", scope: !5554, file: !2697, line: 1395, type: !5556)
!5556 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5527, file: !2697, line: 1392, size: 192, elements: !5557)
!5557 = !{!5558, !5566}
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5556, file: !2697, line: 1393, baseType: !5559, size: 64)
!5559 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2697, line: 166, size: 64, elements: !5560)
!5560 = !{!5561, !5562, !5563, !5564, !5565}
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5559, file: !2697, line: 168, baseType: !2716, size: 64)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5559, file: !2697, line: 171, baseType: !2719, size: 64)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5559, file: !2697, line: 174, baseType: !372, size: 64)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5559, file: !2697, line: 177, baseType: !370, size: 64)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5559, file: !2697, line: 180, baseType: !102, size: 32)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5556, file: !2697, line: 1394, baseType: !5567, size: 96, offset: 64)
!5567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2697, line: 189, size: 96, elements: !5568)
!5568 = !{!5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5593}
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5567, file: !2697, line: 191, baseType: !131, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5567, file: !2697, line: 194, baseType: !131, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5567, file: !2697, line: 197, baseType: !131, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5567, file: !2697, line: 200, baseType: !131, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5567, file: !2697, line: 203, baseType: !131, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5567, file: !2697, line: 206, baseType: !131, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5567, file: !2697, line: 209, baseType: !131, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5567, file: !2697, line: 212, baseType: !131, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5567, file: !2697, line: 219, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5567, file: !2697, line: 222, baseType: !131, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5567, file: !2697, line: 229, baseType: !131, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5567, file: !2697, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5567, file: !2697, line: 238, baseType: !131, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5567, file: !2697, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5567, file: !2697, line: 244, baseType: !131, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5567, file: !2697, line: 247, baseType: !131, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5567, file: !2697, line: 252, baseType: !131, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5567, file: !2697, line: 257, baseType: !131, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5567, file: !2697, line: 260, baseType: !186, size: 8, offset: 24)
!5588 = !DIDerivedType(tag: DW_TAG_member, scope: !5567, file: !2697, line: 262, baseType: !5589, size: 32, offset: 32)
!5589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5567, file: !2697, line: 262, size: 32, elements: !5590)
!5590 = !{!5591, !5592}
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5589, file: !2697, line: 267, baseType: !103, size: 32)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5589, file: !2697, line: 289, baseType: !103, size: 32)
!5593 = !DIDerivedType(tag: DW_TAG_member, scope: !5567, file: !2697, line: 292, baseType: !5594, size: 32, offset: 64)
!5594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5567, file: !2697, line: 292, size: 32, elements: !5595)
!5595 = !{!5596, !5597}
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5594, file: !2697, line: 297, baseType: !103, size: 32)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5594, file: !2697, line: 306, baseType: !103, size: 32)
!5598 = !DILocalVariable(name: "conv", scope: !5554, file: !2697, line: 1400, type: !5599)
!5599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5600)
!5600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5567, size: 32)
!5601 = !DILocalVariable(name: "value", scope: !5554, file: !2697, line: 1401, type: !5602)
!5602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5603)
!5603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5559, size: 32)
!5604 = !DILocalVariable(name: "sp", scope: !5554, file: !2697, line: 1402, type: !337)
!5605 = !DILocalVariable(name: "width", scope: !5554, file: !2697, line: 1403, type: !103)
!5606 = !DILocalVariable(name: "precision", scope: !5554, file: !2697, line: 1404, type: !103)
!5607 = !DILocalVariable(name: "bps", scope: !5554, file: !2697, line: 1405, type: !337)
!5608 = !DILocalVariable(name: "bpe", scope: !5554, file: !2697, line: 1406, type: !337)
!5609 = !DILocalVariable(name: "sign", scope: !5554, file: !2697, line: 1407, type: !278)
!5610 = !DILocalVariable(name: "arg", scope: !5611, file: !2697, line: 1432, type: !103)
!5611 = distinct !DILexicalBlock(scope: !5612, file: !2697, line: 1431, column: 24)
!5612 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1431, column: 7)
!5613 = !DILocalVariable(name: "specifier_cat", scope: !5554, file: !2697, line: 1468, type: !2696)
!5614 = !DILocalVariable(name: "length_mod", scope: !5554, file: !2697, line: 1470, type: !2704)
!5615 = !DILocalVariable(name: "rc", scope: !5616, file: !2697, line: 1575, type: !103)
!5616 = distinct !DILexicalBlock(scope: !5617, file: !2697, line: 1575, column: 4)
!5617 = distinct !DILexicalBlock(scope: !5618, file: !2697, line: 1574, column: 43)
!5618 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1574, column: 7)
!5619 = !DILocalVariable(name: "rc", scope: !5620, file: !2697, line: 1584, type: !103)
!5620 = distinct !DILexicalBlock(scope: !5621, file: !2697, line: 1584, column: 4)
!5621 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1582, column: 28)
!5622 = !DILocalVariable(name: "len", scope: !5623, file: !2697, line: 1589, type: !132)
!5623 = distinct !DILexicalBlock(scope: !5621, file: !2697, line: 1586, column: 13)
!5624 = !DILocalVariable(name: "len", scope: !5625, file: !2697, line: 1641, type: !132)
!5625 = distinct !DILexicalBlock(scope: !5626, file: !2697, line: 1640, column: 24)
!5626 = distinct !DILexicalBlock(scope: !5621, file: !2697, line: 1640, column: 8)
!5627 = !DILocalVariable(name: "nj_len", scope: !5554, file: !2697, line: 1722, type: !132)
!5628 = !DILocalVariable(name: "pad_len", scope: !5554, file: !2697, line: 1723, type: !103)
!5629 = !DILocalVariable(name: "pad", scope: !5630, file: !2697, line: 1751, type: !278)
!5630 = distinct !DILexicalBlock(scope: !5631, file: !2697, line: 1750, column: 26)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !2697, line: 1750, column: 8)
!5632 = distinct !DILexicalBlock(scope: !5633, file: !2697, line: 1747, column: 18)
!5633 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1747, column: 7)
!5634 = !DILocalVariable(name: "rc", scope: !5635, file: !2697, line: 1758, type: !103)
!5635 = distinct !DILexicalBlock(scope: !5636, file: !2697, line: 1758, column: 7)
!5636 = distinct !DILexicalBlock(scope: !5637, file: !2697, line: 1757, column: 21)
!5637 = distinct !DILexicalBlock(scope: !5638, file: !2697, line: 1757, column: 10)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !2697, line: 1756, column: 26)
!5639 = distinct !DILexicalBlock(scope: !5630, file: !2697, line: 1756, column: 9)
!5640 = !DILocalVariable(name: "rc", scope: !5641, file: !2697, line: 1765, type: !103)
!5641 = distinct !DILexicalBlock(scope: !5642, file: !2697, line: 1765, column: 6)
!5642 = distinct !DILexicalBlock(scope: !5630, file: !2697, line: 1764, column: 25)
!5643 = !DILocalVariable(name: "rc", scope: !5644, file: !2697, line: 1774, type: !103)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !2697, line: 1774, column: 4)
!5645 = distinct !DILexicalBlock(scope: !5646, file: !2697, line: 1773, column: 18)
!5646 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1773, column: 7)
!5647 = !DILocalVariable(name: "rc", scope: !5648, file: !2697, line: 1819, type: !103)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !2697, line: 1819, column: 5)
!5649 = distinct !DILexicalBlock(scope: !5650, file: !2697, line: 1818, column: 44)
!5650 = distinct !DILexicalBlock(scope: !5651, file: !2697, line: 1818, column: 8)
!5651 = distinct !DILexicalBlock(scope: !5652, file: !2697, line: 1817, column: 10)
!5652 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1777, column: 7)
!5653 = !DILocalVariable(name: "rc", scope: !5654, file: !2697, line: 1823, type: !103)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !2697, line: 1823, column: 5)
!5655 = distinct !DILexicalBlock(scope: !5656, file: !2697, line: 1822, column: 26)
!5656 = distinct !DILexicalBlock(scope: !5651, file: !2697, line: 1822, column: 8)
!5657 = !DILocalVariable(name: "rc", scope: !5658, file: !2697, line: 1828, type: !103)
!5658 = distinct !DILexicalBlock(scope: !5659, file: !2697, line: 1828, column: 5)
!5659 = distinct !DILexicalBlock(scope: !5651, file: !2697, line: 1827, column: 26)
!5660 = !DILocalVariable(name: "rc", scope: !5661, file: !2697, line: 1831, type: !103)
!5661 = distinct !DILexicalBlock(scope: !5651, file: !2697, line: 1831, column: 4)
!5662 = !DILocalVariable(name: "rc", scope: !5663, file: !2697, line: 1836, type: !103)
!5663 = distinct !DILexicalBlock(scope: !5664, file: !2697, line: 1836, column: 4)
!5664 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1835, column: 21)
!5665 = !DILabel(scope: !5621, name: "prec_int_pad0", file: !2697, line: 1634)
!5666 = !DILocation(line: 0, scope: !5527)
!5667 = !DILocation(line: 1341, column: 2, scope: !5527)
!5668 = !DILocation(line: 1341, column: 7, scope: !5527)
!5669 = !DILocation(line: 1375, column: 2, scope: !5527)
!5670 = !DILocation(line: 1342, column: 9, scope: !5527)
!5671 = !DILocation(line: 1375, column: 9, scope: !5527)
!5672 = !DILocation(line: 1377, column: 4, scope: !5551)
!5673 = !DILocation(line: 0, scope: !5551)
!5674 = !DILocation(line: 1377, column: 4, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5551, file: !2697, line: 1377, column: 4)
!5676 = distinct !{!5676, !5669, !5677}
!5677 = !DILocation(line: 1839, column: 2, scope: !5527)
!5678 = !DILocation(line: 1392, column: 3, scope: !5554)
!5679 = !DILocation(line: 1395, column: 5, scope: !5554)
!5680 = !DILocation(line: 0, scope: !5554)
!5681 = !DILocation(line: 1409, column: 8, scope: !5554)
!5682 = !DILocation(line: 1414, column: 13, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1414, column: 7)
!5684 = !DILocation(line: 1414, column: 7, scope: !5554)
!5685 = !DILocation(line: 1415, column: 12, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5683, file: !2697, line: 1414, column: 25)
!5687 = !DILocation(line: 1417, column: 14, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5686, file: !2697, line: 1417, column: 8)
!5689 = !DILocation(line: 1417, column: 8, scope: !5686)
!5690 = !DILocation(line: 1418, column: 21, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5688, file: !2697, line: 1417, column: 19)
!5692 = !DILocation(line: 1419, column: 13, scope: !5691)
!5693 = !DILocation(line: 1420, column: 4, scope: !5691)
!5694 = !DILocation(line: 1421, column: 20, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5683, file: !2697, line: 1421, column: 14)
!5696 = !DILocation(line: 1421, column: 14, scope: !5683)
!5697 = !DILocation(line: 1431, column: 13, scope: !5612)
!5698 = !DILocation(line: 1431, column: 7, scope: !5554)
!5699 = !DILocation(line: 1432, column: 14, scope: !5611)
!5700 = !DILocation(line: 0, scope: !5611)
!5701 = !DILocation(line: 1434, column: 12, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5611, file: !2697, line: 1434, column: 8)
!5703 = !DILocation(line: 1434, column: 8, scope: !5611)
!5704 = !DILocation(line: 1435, column: 24, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5702, file: !2697, line: 1434, column: 17)
!5706 = !DILocation(line: 1436, column: 4, scope: !5705)
!5707 = !DILocation(line: 1439, column: 20, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5612, file: !2697, line: 1439, column: 14)
!5709 = !DILocation(line: 1439, column: 14, scope: !5612)
!5710 = !DILocation(line: 1469, column: 37, scope: !5554)
!5711 = !DILocation(line: 1448, column: 20, scope: !5554)
!5712 = !DILocation(line: 1449, column: 22, scope: !5554)
!5713 = !DILocation(line: 1471, column: 34, scope: !5554)
!5714 = !DILocation(line: 1478, column: 7, scope: !5554)
!5715 = !DILocation(line: 1479, column: 4, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5717, file: !2697, line: 1478, column: 40)
!5717 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1478, column: 7)
!5718 = !DILocation(line: 1484, column: 19, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5716, file: !2697, line: 1479, column: 24)
!5720 = !DILocation(line: 1484, column: 17, scope: !5719)
!5721 = !DILocation(line: 1485, column: 5, scope: !5719)
!5722 = !DILocation(line: 1492, column: 20, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5724, file: !2697, line: 1491, column: 12)
!5724 = distinct !DILexicalBlock(scope: !5719, file: !2697, line: 1487, column: 9)
!5725 = !DILocation(line: 1492, column: 18, scope: !5723)
!5726 = !DILocation(line: 1494, column: 5, scope: !5719)
!5727 = !DILocation(line: 1497, column: 23, scope: !5719)
!5728 = !DILocation(line: 1496, column: 17, scope: !5719)
!5729 = !DILocation(line: 1498, column: 5, scope: !5719)
!5730 = !DILocation(line: 1501, column: 23, scope: !5719)
!5731 = !DILocation(line: 1500, column: 17, scope: !5719)
!5732 = !DILocation(line: 1502, column: 5, scope: !5719)
!5733 = !DILocation(line: 1513, column: 23, scope: !5719)
!5734 = !DILocation(line: 1513, column: 6, scope: !5719)
!5735 = !DILocation(line: 1512, column: 17, scope: !5719)
!5736 = !DILocation(line: 1514, column: 5, scope: !5719)
!5737 = !DILocation(line: 0, scope: !5719)
!5738 = !DILocation(line: 1516, column: 8, scope: !5716)
!5739 = !DILocation(line: 1517, column: 19, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !2697, line: 1516, column: 33)
!5741 = distinct !DILexicalBlock(scope: !5716, file: !2697, line: 1516, column: 8)
!5742 = !DILocation(line: 1517, column: 17, scope: !5740)
!5743 = !DILocation(line: 1518, column: 4, scope: !5740)
!5744 = !DILocation(line: 1519, column: 19, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !2697, line: 1518, column: 39)
!5746 = distinct !DILexicalBlock(scope: !5741, file: !2697, line: 1518, column: 15)
!5747 = !DILocation(line: 1519, column: 17, scope: !5745)
!5748 = !DILocation(line: 1520, column: 4, scope: !5745)
!5749 = !DILocation(line: 1522, column: 4, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !2697, line: 1521, column: 47)
!5751 = distinct !DILexicalBlock(scope: !5717, file: !2697, line: 1521, column: 14)
!5752 = !DILocation(line: 1527, column: 19, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5750, file: !2697, line: 1522, column: 24)
!5754 = !DILocation(line: 1527, column: 17, scope: !5753)
!5755 = !DILocation(line: 1528, column: 5, scope: !5753)
!5756 = !DILocation(line: 0, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5753, file: !2697, line: 1530, column: 9)
!5758 = !DILocation(line: 1540, column: 23, scope: !5753)
!5759 = !DILocation(line: 1539, column: 17, scope: !5753)
!5760 = !DILocation(line: 1542, column: 5, scope: !5753)
!5761 = !DILocation(line: 1545, column: 23, scope: !5753)
!5762 = !DILocation(line: 1544, column: 17, scope: !5753)
!5763 = !DILocation(line: 1547, column: 5, scope: !5753)
!5764 = !DILocation(line: 1551, column: 23, scope: !5753)
!5765 = !DILocation(line: 1551, column: 6, scope: !5753)
!5766 = !DILocation(line: 1550, column: 17, scope: !5753)
!5767 = !DILocation(line: 1552, column: 5, scope: !5753)
!5768 = !DILocation(line: 0, scope: !5753)
!5769 = !DILocation(line: 1554, column: 8, scope: !5750)
!5770 = !DILocation(line: 1555, column: 19, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5772, file: !2697, line: 1554, column: 33)
!5772 = distinct !DILexicalBlock(scope: !5750, file: !2697, line: 1554, column: 8)
!5773 = !DILocation(line: 1555, column: 17, scope: !5771)
!5774 = !DILocation(line: 1556, column: 4, scope: !5771)
!5775 = !DILocation(line: 1557, column: 19, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5777, file: !2697, line: 1556, column: 39)
!5777 = distinct !DILexicalBlock(scope: !5772, file: !2697, line: 1556, column: 15)
!5778 = !DILocation(line: 1557, column: 17, scope: !5776)
!5779 = !DILocation(line: 1558, column: 4, scope: !5776)
!5780 = !DILocation(line: 0, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5782, file: !2697, line: 1560, column: 8)
!5782 = distinct !DILexicalBlock(scope: !5783, file: !2697, line: 1559, column: 45)
!5783 = distinct !DILexicalBlock(scope: !5751, file: !2697, line: 1559, column: 14)
!5784 = !DILocation(line: 1566, column: 17, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5786, file: !2697, line: 1565, column: 46)
!5786 = distinct !DILexicalBlock(scope: !5783, file: !2697, line: 1565, column: 14)
!5787 = !DILocation(line: 1566, column: 15, scope: !5785)
!5788 = !DILocation(line: 1567, column: 3, scope: !5785)
!5789 = !DILocation(line: 1574, column: 21, scope: !5618)
!5790 = !DILocation(line: 1575, column: 4, scope: !5616)
!5791 = !DILocation(line: 0, scope: !5616)
!5792 = !DILocation(line: 1575, column: 4, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5616, file: !2697, line: 1575, column: 4)
!5794 = !DILocation(line: 1582, column: 17, scope: !5554)
!5795 = !DILocation(line: 1582, column: 3, scope: !5554)
!5796 = !DILocation(line: 1584, column: 4, scope: !5620)
!5797 = !DILocation(line: 0, scope: !5620)
!5798 = !DILocation(line: 1584, column: 4, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5620, file: !2697, line: 1584, column: 4)
!5800 = !DILocation(line: 1587, column: 31, scope: !5623)
!5801 = !DILocation(line: 1591, column: 18, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5623, file: !2697, line: 1591, column: 8)
!5803 = !DILocation(line: 1591, column: 8, scope: !5623)
!5804 = !DILocation(line: 1592, column: 11, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5802, file: !2697, line: 1591, column: 24)
!5806 = !DILocation(line: 0, scope: !5623)
!5807 = !DILocation(line: 1593, column: 4, scope: !5805)
!5808 = !DILocation(line: 1594, column: 11, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5802, file: !2697, line: 1593, column: 11)
!5810 = !DILocation(line: 1604, column: 51, scope: !5621)
!5811 = !DILocation(line: 1604, column: 13, scope: !5621)
!5812 = !DILocation(line: 1604, column: 11, scope: !5621)
!5813 = !DILocation(line: 1606, column: 4, scope: !5621)
!5814 = !DILocation(line: 1609, column: 14, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5621, file: !2697, line: 1609, column: 8)
!5816 = !DILocation(line: 1609, column: 8, scope: !5621)
!5817 = !DILocation(line: 1619, column: 18, scope: !5621)
!5818 = !DILocation(line: 1620, column: 13, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5621, file: !2697, line: 1620, column: 8)
!5820 = !DILocation(line: 1620, column: 8, scope: !5621)
!5821 = !DILocation(line: 1622, column: 36, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5819, file: !2697, line: 1620, column: 18)
!5823 = !DILocation(line: 1622, column: 17, scope: !5822)
!5824 = !DILocation(line: 1623, column: 4, scope: !5822)
!5825 = !DILocation(line: 1632, column: 29, scope: !5621)
!5826 = !DILocation(line: 1632, column: 10, scope: !5621)
!5827 = !DILocation(line: 1632, column: 4, scope: !5621)
!5828 = !DILocation(line: 1407, column: 8, scope: !5554)
!5829 = !DILocation(line: 0, scope: !5621)
!5830 = !DILocation(line: 1634, column: 3, scope: !5621)
!5831 = !DILocation(line: 1640, column: 18, scope: !5626)
!5832 = !DILocation(line: 1640, column: 8, scope: !5621)
!5833 = !DILocation(line: 1729, column: 13, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1729, column: 7)
!5835 = !DILocation(line: 1641, column: 22, scope: !5625)
!5836 = !DILocation(line: 0, scope: !5625)
!5837 = !DILocation(line: 1646, column: 21, scope: !5625)
!5838 = !DILocation(line: 1649, column: 13, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5625, file: !2697, line: 1649, column: 9)
!5840 = !DILocation(line: 1649, column: 9, scope: !5625)
!5841 = !DILocation(line: 1650, column: 35, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5839, file: !2697, line: 1649, column: 34)
!5843 = !DILocation(line: 1650, column: 23, scope: !5842)
!5844 = !DILocation(line: 1651, column: 5, scope: !5842)
!5845 = !DILocation(line: 1660, column: 15, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5621, file: !2697, line: 1660, column: 8)
!5847 = !DILocation(line: 1660, column: 19, scope: !5846)
!5848 = !DILocation(line: 1660, column: 8, scope: !5621)
!5849 = !DILocation(line: 1661, column: 23, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5846, file: !2697, line: 1660, column: 28)
!5851 = !DILocation(line: 1661, column: 11, scope: !5850)
!5852 = !DILocation(line: 1665, column: 22, scope: !5850)
!5853 = !DILocation(line: 1666, column: 21, scope: !5850)
!5854 = !DILocation(line: 1668, column: 5, scope: !5850)
!5855 = !DILocation(line: 1677, column: 30, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5857, file: !2697, line: 1676, column: 49)
!5857 = distinct !DILexicalBlock(scope: !5621, file: !2697, line: 1676, column: 8)
!5858 = !DILocation(line: 1677, column: 5, scope: !5856)
!5859 = !DILocation(line: 1680, column: 4, scope: !5621)
!5860 = !DILocation(line: 0, scope: !5802)
!5861 = !DILocation(line: 1597, column: 14, scope: !5623)
!5862 = !DILocation(line: 1699, column: 11, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1699, column: 7)
!5864 = !DILocation(line: 1699, column: 7, scope: !5554)
!5865 = !DILocation(line: 1725, column: 7, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1725, column: 7)
!5867 = !DILocation(line: 1725, column: 12, scope: !5866)
!5868 = !DILocation(line: 1747, column: 13, scope: !5633)
!5869 = !DILocation(line: 1747, column: 7, scope: !5554)
!5870 = !DILocation(line: 1722, column: 24, scope: !5554)
!5871 = !DILocation(line: 1725, column: 7, scope: !5554)
!5872 = !DILocation(line: 1729, column: 7, scope: !5554)
!5873 = !DILocation(line: 1736, column: 13, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5554, file: !2697, line: 1736, column: 7)
!5875 = !DILocation(line: 1735, column: 19, scope: !5554)
!5876 = !DILocation(line: 1736, column: 7, scope: !5554)
!5877 = !DILocation(line: 1748, column: 10, scope: !5632)
!5878 = !DILocation(line: 1750, column: 15, scope: !5631)
!5879 = !DILocation(line: 1750, column: 8, scope: !5632)
!5880 = !DILocation(line: 0, scope: !5630)
!5881 = !DILocation(line: 1756, column: 15, scope: !5639)
!5882 = !DILocation(line: 1756, column: 9, scope: !5630)
!5883 = !DILocation(line: 1758, column: 7, scope: !5635)
!5884 = !DILocation(line: 0, scope: !5635)
!5885 = !DILocation(line: 1758, column: 7, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5635, file: !2697, line: 1758, column: 7)
!5887 = !DILocation(line: 1764, column: 5, scope: !5630)
!5888 = !DILocation(line: 0, scope: !5632)
!5889 = !DILocation(line: 1764, column: 20, scope: !5630)
!5890 = !DILocation(line: 1764, column: 17, scope: !5630)
!5891 = !DILocation(line: 1765, column: 6, scope: !5641)
!5892 = !DILocation(line: 0, scope: !5641)
!5893 = !DILocation(line: 1765, column: 6, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5641, file: !2697, line: 1765, column: 6)
!5895 = distinct !{!5895, !5887, !5896}
!5896 = !DILocation(line: 1766, column: 5, scope: !5630)
!5897 = !DILocation(line: 1773, column: 12, scope: !5646)
!5898 = !DILocation(line: 1773, column: 7, scope: !5554)
!5899 = !DILocation(line: 1773, column: 7, scope: !5646)
!5900 = !DILocation(line: 1774, column: 4, scope: !5644)
!5901 = !DILocation(line: 0, scope: !5644)
!5902 = !DILocation(line: 1774, column: 4, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5644, file: !2697, line: 1774, column: 4)
!5904 = !DILocation(line: 1818, column: 8, scope: !5650)
!5905 = !DILocation(line: 1818, column: 27, scope: !5650)
!5906 = !DILocation(line: 1818, column: 25, scope: !5650)
!5907 = !DILocation(line: 1818, column: 8, scope: !5651)
!5908 = !DILocation(line: 1819, column: 5, scope: !5648)
!5909 = !DILocation(line: 0, scope: !5648)
!5910 = !DILocation(line: 1819, column: 5, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5648, file: !2697, line: 1819, column: 5)
!5912 = !DILocation(line: 1822, column: 14, scope: !5656)
!5913 = !DILocation(line: 1822, column: 8, scope: !5651)
!5914 = !DILocation(line: 1823, column: 5, scope: !5654)
!5915 = !DILocation(line: 0, scope: !5654)
!5916 = !DILocation(line: 1823, column: 5, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5654, file: !2697, line: 1823, column: 5)
!5918 = !DILocation(line: 1826, column: 20, scope: !5651)
!5919 = !DILocation(line: 1827, column: 4, scope: !5651)
!5920 = !DILocation(line: 0, scope: !5651)
!5921 = !DILocation(line: 1827, column: 21, scope: !5651)
!5922 = !DILocation(line: 1827, column: 18, scope: !5651)
!5923 = !DILocation(line: 1828, column: 5, scope: !5658)
!5924 = !DILocation(line: 0, scope: !5658)
!5925 = !DILocation(line: 1828, column: 5, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5658, file: !2697, line: 1828, column: 5)
!5927 = distinct !{!5927, !5919, !5928}
!5928 = !DILocation(line: 1829, column: 4, scope: !5651)
!5929 = !DILocation(line: 1831, column: 4, scope: !5661)
!5930 = !DILocation(line: 0, scope: !5661)
!5931 = !DILocation(line: 1831, column: 4, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5661, file: !2697, line: 1831, column: 4)
!5933 = !DILocation(line: 1835, column: 16, scope: !5554)
!5934 = !DILocation(line: 1835, column: 3, scope: !5554)
!5935 = !DILocation(line: 1836, column: 4, scope: !5663)
!5936 = !DILocation(line: 0, scope: !5663)
!5937 = !DILocation(line: 1836, column: 4, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5663, file: !2697, line: 1836, column: 4)
!5939 = !DILocation(line: 1837, column: 4, scope: !5664)
!5940 = distinct !{!5940, !5934, !5941}
!5941 = !DILocation(line: 1838, column: 3, scope: !5554)
!5942 = !DILocation(line: 1844, column: 1, scope: !5527)
!5943 = distinct !DISubprogram(name: "extract_conversion", scope: !2697, file: !2697, line: 642, type: !5944, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5946)
!5944 = !DISubroutineType(types: !5945)
!5945 = !{!337, !5600, !337}
!5946 = !{!5947, !5948}
!5947 = !DILocalVariable(name: "conv", arg: 1, scope: !5943, file: !2697, line: 642, type: !5600)
!5948 = !DILocalVariable(name: "sp", arg: 2, scope: !5943, file: !2697, line: 643, type: !337)
!5949 = !DILocation(line: 0, scope: !5943)
!5950 = !DILocation(line: 645, column: 10, scope: !5943)
!5951 = !DILocation(line: 653, column: 2, scope: !5943)
!5952 = !DILocation(line: 654, column: 6, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5943, file: !2697, line: 654, column: 6)
!5954 = !DILocation(line: 654, column: 10, scope: !5953)
!5955 = !DILocation(line: 654, column: 6, scope: !5943)
!5956 = !DILocation(line: 655, column: 24, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5953, file: !2697, line: 654, column: 18)
!5958 = !DILocation(line: 655, column: 19, scope: !5957)
!5959 = !DILocation(line: 656, column: 3, scope: !5957)
!5960 = !DILocation(line: 659, column: 7, scope: !5943)
!5961 = !DILocation(line: 660, column: 7, scope: !5943)
!5962 = !DILocation(line: 661, column: 7, scope: !5943)
!5963 = !DILocation(line: 662, column: 7, scope: !5943)
!5964 = !DILocation(line: 663, column: 7, scope: !5943)
!5965 = !DILocation(line: 665, column: 2, scope: !5943)
!5966 = !DILocation(line: 666, column: 1, scope: !5943)
!5967 = distinct !DISubprogram(name: "outs", scope: !2697, file: !2697, line: 1319, type: !5968, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5970)
!5968 = !DISubroutineType(types: !5969)
!5969 = !{!103, !3984, !102, !337, !337}
!5970 = !{!5971, !5972, !5973, !5974, !5975, !5976}
!5971 = !DILocalVariable(name: "out", arg: 1, scope: !5967, file: !2697, line: 1319, type: !3984)
!5972 = !DILocalVariable(name: "ctx", arg: 2, scope: !5967, file: !2697, line: 1320, type: !102)
!5973 = !DILocalVariable(name: "sp", arg: 3, scope: !5967, file: !2697, line: 1321, type: !337)
!5974 = !DILocalVariable(name: "ep", arg: 4, scope: !5967, file: !2697, line: 1322, type: !337)
!5975 = !DILocalVariable(name: "count", scope: !5967, file: !2697, line: 1324, type: !132)
!5976 = !DILocalVariable(name: "rc", scope: !5977, file: !2697, line: 1327, type: !103)
!5977 = distinct !DILexicalBlock(scope: !5967, file: !2697, line: 1326, column: 45)
!5978 = !DILocation(line: 0, scope: !5967)
!5979 = !DILocation(line: 1326, column: 2, scope: !5967)
!5980 = !DILocation(line: 1324, column: 9, scope: !5967)
!5981 = !DILocation(line: 1326, column: 13, scope: !5967)
!5982 = !DILocation(line: 1326, column: 19, scope: !5967)
!5983 = !DILocation(line: 1327, column: 21, scope: !5977)
!5984 = !DILocation(line: 1326, column: 36, scope: !5967)
!5985 = !DILocation(line: 1326, column: 39, scope: !5967)
!5986 = !DILocation(line: 1327, column: 24, scope: !5977)
!5987 = !DILocation(line: 1327, column: 16, scope: !5977)
!5988 = !DILocation(line: 1327, column: 12, scope: !5977)
!5989 = !DILocation(line: 0, scope: !5977)
!5990 = !DILocation(line: 1329, column: 10, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5977, file: !2697, line: 1329, column: 7)
!5992 = !DILocation(line: 1329, column: 7, scope: !5977)
!5993 = distinct !{!5993, !5979, !5994}
!5994 = !DILocation(line: 1333, column: 2, scope: !5967)
!5995 = !DILocation(line: 1336, column: 1, scope: !5967)
!5996 = distinct !DISubprogram(name: "encode_uint", scope: !2697, file: !2697, line: 788, type: !5997, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !5999)
!5997 = !DISubroutineType(types: !5998)
!5998 = !{!277, !2719, !5600, !277, !337}
!5999 = !{!6000, !6001, !6002, !6003, !6004, !6005, !6007, !6008}
!6000 = !DILocalVariable(name: "value", arg: 1, scope: !5996, file: !2697, line: 788, type: !2719)
!6001 = !DILocalVariable(name: "conv", arg: 2, scope: !5996, file: !2697, line: 789, type: !5600)
!6002 = !DILocalVariable(name: "bps", arg: 3, scope: !5996, file: !2697, line: 790, type: !277)
!6003 = !DILocalVariable(name: "bpe", arg: 4, scope: !5996, file: !2697, line: 791, type: !337)
!6004 = !DILocalVariable(name: "upcase", scope: !5996, file: !2697, line: 793, type: !131)
!6005 = !DILocalVariable(name: "radix", scope: !5996, file: !2697, line: 794, type: !6006)
!6006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6007 = !DILocalVariable(name: "bp", scope: !5996, file: !2697, line: 795, type: !277)
!6008 = !DILocalVariable(name: "lsv", scope: !6009, file: !2697, line: 798, type: !32)
!6009 = distinct !DILexicalBlock(scope: !5996, file: !2697, line: 797, column: 5)
!6010 = !DILocation(line: 0, scope: !5996)
!6011 = !DILocation(line: 793, column: 35, scope: !5996)
!6012 = !DILocation(line: 793, column: 24, scope: !5996)
!6013 = !DILocation(line: 793, column: 16, scope: !5996)
!6014 = !DILocation(line: 794, column: 29, scope: !5996)
!6015 = !DILocation(line: 795, column: 24, scope: !5996)
!6016 = !DILocation(line: 795, column: 17, scope: !5996)
!6017 = !DILocation(line: 797, column: 2, scope: !5996)
!6018 = !DILocation(line: 802, column: 9, scope: !6009)
!6019 = !DILocation(line: 798, column: 22, scope: !6009)
!6020 = !DILocation(line: 0, scope: !6009)
!6021 = !DILocation(line: 800, column: 16, scope: !6009)
!6022 = !DILocation(line: 800, column: 11, scope: !6009)
!6023 = !DILocation(line: 800, column: 4, scope: !6009)
!6024 = !DILocation(line: 800, column: 9, scope: !6009)
!6025 = !DILocation(line: 803, column: 18, scope: !5996)
!6026 = !DILocation(line: 803, column: 24, scope: !5996)
!6027 = !DILocation(line: 803, column: 2, scope: !6009)
!6028 = distinct !{!6028, !6017, !6029}
!6029 = !DILocation(line: 803, column: 37, scope: !5996)
!6030 = !DILocation(line: 808, column: 12, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !5996, file: !2697, line: 808, column: 6)
!6032 = !DILocation(line: 808, column: 6, scope: !5996)
!6033 = !DILocation(line: 809, column: 7, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6031, file: !2697, line: 808, column: 23)
!6035 = !DILocation(line: 813, column: 3, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6037, file: !2697, line: 811, column: 27)
!6037 = distinct !DILexicalBlock(scope: !6038, file: !2697, line: 811, column: 14)
!6038 = distinct !DILexicalBlock(scope: !6034, file: !2697, line: 809, column: 7)
!6039 = !DILocation(line: 0, scope: !6038)
!6040 = !DILocation(line: 818, column: 2, scope: !5996)
!6041 = distinct !DISubprogram(name: "store_count", scope: !2697, file: !2697, line: 1280, type: !6042, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6046)
!6042 = !DISubroutineType(types: !6043)
!6043 = !{null, !6044, !102, !103}
!6044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 32)
!6045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5567)
!6046 = !{!6047, !6048, !6049}
!6047 = !DILocalVariable(name: "conv", arg: 1, scope: !6041, file: !2697, line: 1280, type: !6044)
!6048 = !DILocalVariable(name: "dp", arg: 2, scope: !6041, file: !2697, line: 1281, type: !102)
!6049 = !DILocalVariable(name: "count", arg: 3, scope: !6041, file: !2697, line: 1282, type: !103)
!6050 = !DILocation(line: 0, scope: !6041)
!6051 = !DILocation(line: 1284, column: 38, scope: !6041)
!6052 = !DILocation(line: 1284, column: 2, scope: !6041)
!6053 = !DILocation(line: 1286, column: 4, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6041, file: !2697, line: 1284, column: 50)
!6055 = !DILocation(line: 1286, column: 14, scope: !6054)
!6056 = !DILocation(line: 1287, column: 3, scope: !6054)
!6057 = !DILocation(line: 1289, column: 24, scope: !6054)
!6058 = !DILocation(line: 1289, column: 22, scope: !6054)
!6059 = !DILocation(line: 1290, column: 3, scope: !6054)
!6060 = !DILocation(line: 1292, column: 18, scope: !6054)
!6061 = !DILocation(line: 1292, column: 4, scope: !6054)
!6062 = !DILocation(line: 1292, column: 16, scope: !6054)
!6063 = !DILocation(line: 1293, column: 3, scope: !6054)
!6064 = !DILocation(line: 1295, column: 4, scope: !6054)
!6065 = !DILocation(line: 1295, column: 15, scope: !6054)
!6066 = !DILocation(line: 1296, column: 3, scope: !6054)
!6067 = !DILocation(line: 1298, column: 22, scope: !6054)
!6068 = !DILocation(line: 1298, column: 4, scope: !6054)
!6069 = !DILocation(line: 1298, column: 20, scope: !6054)
!6070 = !DILocation(line: 1299, column: 3, scope: !6054)
!6071 = !DILocation(line: 1301, column: 21, scope: !6054)
!6072 = !DILocation(line: 1301, column: 4, scope: !6054)
!6073 = !DILocation(line: 1301, column: 19, scope: !6054)
!6074 = !DILocation(line: 1302, column: 3, scope: !6054)
!6075 = !DILocation(line: 1304, column: 4, scope: !6054)
!6076 = !DILocation(line: 1304, column: 17, scope: !6054)
!6077 = !DILocation(line: 1305, column: 3, scope: !6054)
!6078 = !DILocation(line: 1307, column: 4, scope: !6054)
!6079 = !DILocation(line: 1307, column: 20, scope: !6054)
!6080 = !DILocation(line: 1308, column: 3, scope: !6054)
!6081 = !DILocation(line: 1316, column: 1, scope: !6041)
!6082 = distinct !DISubprogram(name: "isupper", scope: !6083, file: !6083, line: 16, type: !396, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6084)
!6083 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6084 = !{!6085}
!6085 = !DILocalVariable(name: "a", arg: 1, scope: !6082, file: !6083, line: 16, type: !103)
!6086 = !DILocation(line: 0, scope: !6082)
!6087 = !DILocation(line: 18, column: 29, scope: !6082)
!6088 = !DILocation(line: 18, column: 45, scope: !6082)
!6089 = !DILocation(line: 18, column: 2, scope: !6082)
!6090 = distinct !DISubprogram(name: "conversion_radix", scope: !2697, file: !2697, line: 761, type: !6091, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6093)
!6091 = !DISubroutineType(types: !6092)
!6092 = !{!132, !278}
!6093 = !{!6094}
!6094 = !DILocalVariable(name: "specifier", arg: 1, scope: !6090, file: !2697, line: 761, type: !278)
!6095 = !DILocation(line: 0, scope: !6090)
!6096 = !DILocation(line: 763, column: 2, scope: !6090)
!6097 = !DILocation(line: 770, column: 3, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6090, file: !2697, line: 763, column: 21)
!6099 = !DILocation(line: 774, column: 3, scope: !6098)
!6100 = !DILocation(line: 0, scope: !6098)
!6101 = !DILocation(line: 776, column: 1, scope: !6090)
!6102 = distinct !DISubprogram(name: "extract_flags", scope: !2697, file: !2697, line: 339, type: !5944, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6103)
!6103 = !{!6104, !6105, !6106}
!6104 = !DILocalVariable(name: "conv", arg: 1, scope: !6102, file: !2697, line: 339, type: !5600)
!6105 = !DILocalVariable(name: "sp", arg: 2, scope: !6102, file: !2697, line: 340, type: !337)
!6106 = !DILocalVariable(name: "loop", scope: !6102, file: !2697, line: 342, type: !131)
!6107 = !DILocation(line: 0, scope: !6102)
!6108 = !DILocation(line: 344, column: 2, scope: !6102)
!6109 = !DILocation(line: 345, column: 11, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6102, file: !2697, line: 344, column: 5)
!6111 = !DILocation(line: 345, column: 3, scope: !6110)
!6112 = !DILocation(line: 351, column: 4, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6110, file: !2697, line: 345, column: 16)
!6114 = !DILocation(line: 354, column: 4, scope: !6113)
!6115 = !DILocation(line: 357, column: 4, scope: !6113)
!6116 = !DILocation(line: 360, column: 4, scope: !6113)
!6117 = !DILocation(line: 0, scope: !6113)
!6118 = !DILocation(line: 370, column: 12, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6102, file: !2697, line: 370, column: 6)
!6120 = !DILocation(line: 370, column: 22, scope: !6119)
!6121 = !DILocation(line: 371, column: 19, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6119, file: !2697, line: 370, column: 42)
!6123 = !DILocation(line: 372, column: 2, scope: !6122)
!6124 = !DILocation(line: 376, column: 2, scope: !6102)
!6125 = distinct !DISubprogram(name: "extract_width", scope: !2697, file: !2697, line: 388, type: !5944, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6126)
!6126 = !{!6127, !6128, !6129, !6130}
!6127 = !DILocalVariable(name: "conv", arg: 1, scope: !6125, file: !2697, line: 388, type: !5600)
!6128 = !DILocalVariable(name: "sp", arg: 2, scope: !6125, file: !2697, line: 389, type: !337)
!6129 = !DILocalVariable(name: "wp", scope: !6125, file: !2697, line: 398, type: !337)
!6130 = !DILocalVariable(name: "width", scope: !6125, file: !2697, line: 399, type: !132)
!6131 = !DILocation(line: 0, scope: !6125)
!6132 = !DILocation(line: 391, column: 8, scope: !6125)
!6133 = !DILocation(line: 391, column: 22, scope: !6125)
!6134 = !DILocation(line: 393, column: 6, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6125, file: !2697, line: 393, column: 6)
!6136 = !DILocation(line: 393, column: 10, scope: !6135)
!6137 = !DILocation(line: 393, column: 6, scope: !6125)
!6138 = !DILocation(line: 394, column: 20, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6135, file: !2697, line: 393, column: 18)
!6140 = !DILocation(line: 395, column: 10, scope: !6139)
!6141 = !DILocation(line: 395, column: 3, scope: !6139)
!6142 = !DILocation(line: 399, column: 17, scope: !6125)
!6143 = !DILocation(line: 401, column: 6, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6125, file: !2697, line: 401, column: 6)
!6145 = !DILocation(line: 401, column: 9, scope: !6144)
!6146 = !DILocation(line: 401, column: 6, scope: !6125)
!6147 = !DILocation(line: 402, column: 23, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6144, file: !2697, line: 401, column: 16)
!6149 = !DILocation(line: 403, column: 9, scope: !6148)
!6150 = !DILocation(line: 403, column: 21, scope: !6148)
!6151 = !DILocation(line: 405, column: 11, scope: !6148)
!6152 = !DILocation(line: 404, column: 21, scope: !6148)
!6153 = !DILocation(line: 406, column: 2, scope: !6148)
!6154 = !DILocation(line: 409, column: 1, scope: !6125)
!6155 = distinct !DISubprogram(name: "extract_prec", scope: !2697, file: !2697, line: 420, type: !5944, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6156)
!6156 = !{!6157, !6158, !6159}
!6157 = !DILocalVariable(name: "conv", arg: 1, scope: !6155, file: !2697, line: 420, type: !5600)
!6158 = !DILocalVariable(name: "sp", arg: 2, scope: !6155, file: !2697, line: 421, type: !337)
!6159 = !DILocalVariable(name: "prec", scope: !6155, file: !2697, line: 435, type: !132)
!6160 = !DILocation(line: 0, scope: !6155)
!6161 = !DILocation(line: 423, column: 24, scope: !6155)
!6162 = !DILocation(line: 423, column: 28, scope: !6155)
!6163 = !DILocation(line: 423, column: 8, scope: !6155)
!6164 = !DILocation(line: 423, column: 21, scope: !6155)
!6165 = !DILocation(line: 425, column: 6, scope: !6155)
!6166 = !DILocation(line: 428, column: 2, scope: !6155)
!6167 = !DILocation(line: 430, column: 6, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6155, file: !2697, line: 430, column: 6)
!6169 = !DILocation(line: 430, column: 10, scope: !6168)
!6170 = !DILocation(line: 430, column: 6, scope: !6155)
!6171 = !DILocation(line: 431, column: 19, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6168, file: !2697, line: 430, column: 18)
!6173 = !DILocation(line: 432, column: 10, scope: !6172)
!6174 = !DILocation(line: 432, column: 3, scope: !6172)
!6175 = !DILocation(line: 435, column: 16, scope: !6155)
!6176 = !DILocation(line: 437, column: 8, scope: !6155)
!6177 = !DILocation(line: 437, column: 19, scope: !6155)
!6178 = !DILocation(line: 439, column: 10, scope: !6155)
!6179 = !DILocation(line: 438, column: 20, scope: !6155)
!6180 = !DILocation(line: 441, column: 9, scope: !6155)
!6181 = !DILocation(line: 442, column: 1, scope: !6155)
!6182 = distinct !DISubprogram(name: "extract_length", scope: !2697, file: !2697, line: 453, type: !5944, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6183)
!6183 = !{!6184, !6185}
!6184 = !DILocalVariable(name: "conv", arg: 1, scope: !6182, file: !2697, line: 453, type: !5600)
!6185 = !DILocalVariable(name: "sp", arg: 2, scope: !6182, file: !2697, line: 454, type: !337)
!6186 = !DILocation(line: 0, scope: !6182)
!6187 = !DILocation(line: 456, column: 10, scope: !6182)
!6188 = !DILocation(line: 456, column: 2, scope: !6182)
!6189 = !DILocation(line: 458, column: 8, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !2697, line: 458, column: 7)
!6191 = distinct !DILexicalBlock(scope: !6182, file: !2697, line: 456, column: 15)
!6192 = !DILocation(line: 458, column: 7, scope: !6190)
!6193 = !DILocation(line: 458, column: 13, scope: !6190)
!6194 = !DILocation(line: 0, scope: !6190)
!6195 = !DILocation(line: 458, column: 7, scope: !6191)
!6196 = !DILocation(line: 459, column: 21, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6190, file: !2697, line: 458, column: 21)
!6198 = !DILocation(line: 460, column: 4, scope: !6197)
!6199 = !DILocation(line: 461, column: 3, scope: !6197)
!6200 = !DILocation(line: 462, column: 21, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6190, file: !2697, line: 461, column: 10)
!6202 = !DILocation(line: 466, column: 8, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6191, file: !2697, line: 466, column: 7)
!6204 = !DILocation(line: 466, column: 7, scope: !6203)
!6205 = !DILocation(line: 466, column: 13, scope: !6203)
!6206 = !DILocation(line: 0, scope: !6203)
!6207 = !DILocation(line: 466, column: 7, scope: !6191)
!6208 = !DILocation(line: 467, column: 21, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6203, file: !2697, line: 466, column: 21)
!6210 = !DILocation(line: 468, column: 4, scope: !6209)
!6211 = !DILocation(line: 469, column: 3, scope: !6209)
!6212 = !DILocation(line: 470, column: 21, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6203, file: !2697, line: 469, column: 10)
!6214 = !DILocation(line: 474, column: 9, scope: !6191)
!6215 = !DILocation(line: 474, column: 20, scope: !6191)
!6216 = !DILocation(line: 475, column: 3, scope: !6191)
!6217 = !DILocation(line: 476, column: 3, scope: !6191)
!6218 = !DILocation(line: 478, column: 9, scope: !6191)
!6219 = !DILocation(line: 478, column: 20, scope: !6191)
!6220 = !DILocation(line: 479, column: 3, scope: !6191)
!6221 = !DILocation(line: 480, column: 3, scope: !6191)
!6222 = !DILocation(line: 482, column: 9, scope: !6191)
!6223 = !DILocation(line: 482, column: 20, scope: !6191)
!6224 = !DILocation(line: 483, column: 3, scope: !6191)
!6225 = !DILocation(line: 484, column: 3, scope: !6191)
!6226 = !DILocation(line: 486, column: 9, scope: !6191)
!6227 = !DILocation(line: 486, column: 20, scope: !6191)
!6228 = !DILocation(line: 487, column: 3, scope: !6191)
!6229 = !DILocation(line: 492, column: 21, scope: !6191)
!6230 = !DILocation(line: 493, column: 3, scope: !6191)
!6231 = !DILocation(line: 495, column: 9, scope: !6191)
!6232 = !DILocation(line: 495, column: 20, scope: !6191)
!6233 = !DILocation(line: 496, column: 3, scope: !6191)
!6234 = !DILocation(line: 498, column: 2, scope: !6182)
!6235 = distinct !DISubprogram(name: "extract_specifier", scope: !2697, file: !2697, line: 513, type: !5944, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6236)
!6236 = !{!6237, !6238, !6239, !6240}
!6237 = !DILocalVariable(name: "conv", arg: 1, scope: !6235, file: !2697, line: 513, type: !5600)
!6238 = !DILocalVariable(name: "sp", arg: 2, scope: !6235, file: !2697, line: 514, type: !337)
!6239 = !DILocalVariable(name: "unsupported", scope: !6235, file: !2697, line: 516, type: !131)
!6240 = !DILabel(scope: !6241, name: "int_conv", file: !2697, line: 526)
!6241 = distinct !DILexicalBlock(scope: !6235, file: !2697, line: 520, column: 27)
!6242 = !DILocation(line: 0, scope: !6235)
!6243 = !DILocation(line: 518, column: 20, scope: !6235)
!6244 = !DILocation(line: 518, column: 8, scope: !6235)
!6245 = !DILocation(line: 518, column: 18, scope: !6235)
!6246 = !DILocation(line: 520, column: 2, scope: !6235)
!6247 = !DILocation(line: 525, column: 3, scope: !6241)
!6248 = !DILocation(line: 0, scope: !6241)
!6249 = !DILocation(line: 526, column: 1, scope: !6241)
!6250 = !DILocation(line: 528, column: 24, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6241, file: !2697, line: 528, column: 7)
!6252 = !DILocation(line: 528, column: 7, scope: !6241)
!6253 = !DILocation(line: 535, column: 23, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6241, file: !2697, line: 535, column: 7)
!6255 = !DILocation(line: 535, column: 7, scope: !6241)
!6256 = !DILocation(line: 536, column: 36, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6254, file: !2697, line: 535, column: 31)
!6258 = !DILocation(line: 537, column: 3, scope: !6257)
!6259 = !DILocation(line: 570, column: 9, scope: !6241)
!6260 = !DILocation(line: 570, column: 23, scope: !6241)
!6261 = !DILocation(line: 575, column: 4, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6263, file: !2697, line: 573, column: 48)
!6263 = distinct !DILexicalBlock(scope: !6241, file: !2697, line: 573, column: 7)
!6264 = !DILocation(line: 603, column: 9, scope: !6241)
!6265 = !DILocation(line: 603, column: 23, scope: !6241)
!6266 = !DILocation(line: 605, column: 24, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6241, file: !2697, line: 605, column: 7)
!6268 = !DILocation(line: 605, column: 7, scope: !6241)
!6269 = !DILocation(line: 612, column: 9, scope: !6241)
!6270 = !DILocation(line: 612, column: 23, scope: !6241)
!6271 = !DILocation(line: 619, column: 24, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6241, file: !2697, line: 619, column: 7)
!6273 = !DILocation(line: 619, column: 7, scope: !6241)
!6274 = !DILocation(line: 625, column: 9, scope: !6241)
!6275 = !DILocation(line: 625, column: 17, scope: !6241)
!6276 = !DILocation(line: 626, column: 3, scope: !6241)
!6277 = !DILocation(line: 629, column: 20, scope: !6235)
!6278 = !DILocation(line: 629, column: 8, scope: !6235)
!6279 = !DILocation(line: 518, column: 23, scope: !6235)
!6280 = !DILocation(line: 631, column: 2, scope: !6235)
!6281 = distinct !DISubprogram(name: "extract_decimal", scope: !2697, file: !2697, line: 318, type: !6282, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6284)
!6282 = !DISubroutineType(types: !6283)
!6283 = !{!132, !373}
!6284 = !{!6285, !6286, !6287}
!6285 = !DILocalVariable(name: "str", arg: 1, scope: !6281, file: !2697, line: 318, type: !373)
!6286 = !DILocalVariable(name: "sp", scope: !6281, file: !2697, line: 320, type: !337)
!6287 = !DILocalVariable(name: "val", scope: !6281, file: !2697, line: 321, type: !132)
!6288 = !DILocation(line: 0, scope: !6281)
!6289 = !DILocation(line: 320, column: 19, scope: !6281)
!6290 = !DILocation(line: 323, column: 37, scope: !6281)
!6291 = !DILocation(line: 323, column: 17, scope: !6281)
!6292 = !DILocation(line: 323, column: 9, scope: !6281)
!6293 = !DILocation(line: 323, column: 2, scope: !6281)
!6294 = !DILocation(line: 324, column: 13, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6281, file: !2697, line: 323, column: 43)
!6296 = !DILocation(line: 324, column: 24, scope: !6295)
!6297 = !DILocation(line: 324, column: 19, scope: !6295)
!6298 = !DILocation(line: 324, column: 27, scope: !6295)
!6299 = distinct !{!6299, !6293, !6300}
!6300 = !DILocation(line: 325, column: 2, scope: !6281)
!6301 = !DILocation(line: 326, column: 7, scope: !6281)
!6302 = !DILocation(line: 327, column: 2, scope: !6281)
!6303 = distinct !DISubprogram(name: "isdigit", scope: !6083, file: !6083, line: 43, type: !396, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6304)
!6304 = !{!6305}
!6305 = !DILocalVariable(name: "a", arg: 1, scope: !6303, file: !6083, line: 43, type: !103)
!6306 = !DILocation(line: 0, scope: !6303)
!6307 = !DILocation(line: 45, column: 29, scope: !6303)
!6308 = !DILocation(line: 45, column: 45, scope: !6303)
!6309 = !DILocation(line: 45, column: 2, scope: !6303)
!6310 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6311, file: !6311, line: 9, type: !334, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !251)
!6311 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!6312 = !DILocation(line: 11, column: 1, scope: !6310)
!6313 = !{i64 2147564263, i64 2147564306, i64 2147564346}
!6314 = !DILocation(line: 12, column: 1, scope: !6310)
!6315 = !{i64 2147568525, i64 2147568568, i64 2147568608}
!6316 = !DILocation(line: 13, column: 1, scope: !6310)
!6317 = !{i64 2147568706, i64 2147568749, i64 2147568789}
!6318 = !DILocation(line: 14, column: 1, scope: !6310)
!6319 = !{i64 2147568872, i64 2147568915, i64 2147568955}
!6320 = !DILocation(line: 15, column: 1, scope: !6310)
!6321 = !{i64 2147569081, i64 2147569124, i64 2147569164}
!6322 = !DILocation(line: 16, column: 1, scope: !6310)
!6323 = !{i64 2147569250, i64 2147569293, i64 2147569333}
!6324 = !DILocation(line: 17, column: 1, scope: !6310)
!6325 = !{i64 2147569413, i64 2147569456, i64 2147569496}
!6326 = !DILocation(line: 18, column: 1, scope: !6310)
!6327 = !{i64 2147569597, i64 2147569640, i64 2147569680}
!6328 = !DILocation(line: 19, column: 1, scope: !6310)
!6329 = !{i64 2147569776, i64 2147569819, i64 2147569859}
!6330 = !DILocation(line: 20, column: 1, scope: !6310)
!6331 = !{i64 2147570018, i64 2147570061, i64 2147570101}
!6332 = !DILocation(line: 21, column: 1, scope: !6310)
!6333 = !{i64 2147570253, i64 2147570296, i64 2147570336}
!6334 = !DILocation(line: 22, column: 1, scope: !6310)
!6335 = !{i64 2147570439, i64 2147570482, i64 2147570522}
!6336 = !DILocation(line: 23, column: 1, scope: !6310)
!6337 = !{i64 2147570655, i64 2147570698, i64 2147570738}
!6338 = !DILocation(line: 24, column: 1, scope: !6310)
!6339 = !{i64 2147570858, i64 2147570901, i64 2147570941}
!6340 = !DILocation(line: 25, column: 1, scope: !6310)
!6341 = !{i64 2147571061, i64 2147571104, i64 2147571144}
!6342 = !DILocation(line: 26, column: 1, scope: !6310)
!6343 = !{i64 2147571236, i64 2147571279, i64 2147571319}
!6344 = !DILocation(line: 27, column: 1, scope: !6310)
!6345 = !{i64 2147571447, i64 2147571490, i64 2147571530}
!6346 = !DILocation(line: 28, column: 1, scope: !6310)
!6347 = !{i64 2147571651, i64 2147571694, i64 2147571734}
!6348 = !DILocation(line: 29, column: 1, scope: !6310)
!6349 = !{i64 2147571844, i64 2147571887, i64 2147571927}
!6350 = !DILocation(line: 30, column: 1, scope: !6310)
!6351 = !{i64 2147572046, i64 2147572089, i64 2147572129}
!6352 = !DILocation(line: 31, column: 1, scope: !6310)
!6353 = !{i64 2147572245, i64 2147572288, i64 2147572328}
!6354 = !DILocation(line: 32, column: 1, scope: !6310)
!6355 = !{i64 2147572472, i64 2147572515, i64 2147572555}
!6356 = !DILocation(line: 33, column: 1, scope: !6310)
!6357 = !{i64 2147572674, i64 2147572717, i64 2147572757}
!6358 = !DILocation(line: 34, column: 1, scope: !6310)
!6359 = !{i64 2147572889, i64 2147572932, i64 2147572972}
!6360 = !DILocation(line: 35, column: 1, scope: !6310)
!6361 = !{i64 2147573061, i64 2147573104, i64 2147573144}
!6362 = !DILocation(line: 36, column: 1, scope: !6310)
!6363 = !{i64 2147573263, i64 2147573306, i64 2147573346}
!6364 = !DILocation(line: 37, column: 1, scope: !6310)
!6365 = !{i64 2147573489, i64 2147573532, i64 2147573572}
!6366 = !DILocation(line: 38, column: 1, scope: !6310)
!6367 = !{i64 2147573688, i64 2147573731, i64 2147573771}
!6368 = !DILocation(line: 39, column: 1, scope: !6310)
!6369 = !{i64 2147573863, i64 2147573906, i64 2147573946}
!6370 = !DILocation(line: 40, column: 1, scope: !6310)
!6371 = !{i64 2147574116, i64 2147574159, i64 2147574199}
!6372 = !DILocation(line: 41, column: 1, scope: !6310)
!6373 = !{i64 2147574354, i64 2147574397, i64 2147574437}
!6374 = !DILocation(line: 42, column: 1, scope: !6310)
!6375 = !{i64 2147574589, i64 2147574632, i64 2147574672}
!6376 = !DILocation(line: 43, column: 1, scope: !6310)
!6377 = !{i64 2147574821, i64 2147574864, i64 2147574904}
!6378 = !DILocation(line: 44, column: 1, scope: !6310)
!6379 = !{i64 2147575047, i64 2147575090, i64 2147575130}
!6380 = !DILocation(line: 45, column: 1, scope: !6310)
!6381 = !{i64 2147575306, i64 2147575349, i64 2147575389}
!6382 = !DILocation(line: 46, column: 1, scope: !6310)
!6383 = !{i64 2147575532, i64 2147575575, i64 2147575615}
!6384 = !DILocation(line: 47, column: 1, scope: !6310)
!6385 = !{i64 2147575773, i64 2147575816, i64 2147575856}
!6386 = !DILocation(line: 48, column: 1, scope: !6310)
!6387 = !{i64 2147576017, i64 2147576060, i64 2147576100}
!6388 = !DILocation(line: 49, column: 1, scope: !6310)
!6389 = !{i64 2147576258, i64 2147576301, i64 2147576341}
!6390 = !DILocation(line: 50, column: 1, scope: !6310)
!6391 = !{i64 2147576493, i64 2147576536, i64 2147576576}
!6392 = !DILocation(line: 51, column: 1, scope: !6310)
!6393 = !{i64 2147576719, i64 2147576762, i64 2147576802}
!6394 = !DILocation(line: 52, column: 1, scope: !6310)
!6395 = !{i64 2147576945, i64 2147576988, i64 2147577028}
!6396 = !DILocation(line: 53, column: 1, scope: !6310)
!6397 = !{i64 2147577189, i64 2147577232, i64 2147577272}
!6398 = !DILocation(line: 54, column: 1, scope: !6310)
!6399 = !{i64 2147581488, i64 2147581531, i64 2147581571}
!6400 = !DILocation(line: 55, column: 1, scope: !6310)
!6401 = !{i64 2147581762, i64 2147581805, i64 2147581845}
!6402 = !DILocation(line: 56, column: 1, scope: !6310)
!6403 = !{i64 2147582000, i64 2147582043, i64 2147582083}
!6404 = !DILocation(line: 57, column: 1, scope: !6310)
!6405 = !{i64 2147582244, i64 2147582287, i64 2147582327}
!6406 = !DILocation(line: 58, column: 1, scope: !6310)
!6407 = !{i64 2147582494, i64 2147582537, i64 2147582577}
!6408 = !DILocation(line: 59, column: 1, scope: !6310)
!6409 = !{i64 2147582741, i64 2147582784, i64 2147582824}
!6410 = !DILocation(line: 60, column: 1, scope: !6310)
!6411 = !{i64 2147582976, i64 2147583019, i64 2147583059}
!6412 = !DILocation(line: 61, column: 1, scope: !6310)
!6413 = !{i64 2147583211, i64 2147583254, i64 2147583294}
!6414 = !DILocation(line: 62, column: 1, scope: !6310)
!6415 = !{i64 2147583446, i64 2147583489, i64 2147583529}
!6416 = !DILocation(line: 63, column: 1, scope: !6310)
!6417 = !{i64 2147583684, i64 2147583727, i64 2147583767}
!6418 = !DILocation(line: 64, column: 1, scope: !6310)
!6419 = !{i64 2147583925, i64 2147583968, i64 2147584008}
!6420 = !DILocation(line: 65, column: 1, scope: !6310)
!6421 = !{i64 2147584184, i64 2147584227, i64 2147584267}
!6422 = !DILocation(line: 66, column: 1, scope: !6310)
!6423 = !{i64 2147584464, i64 2147584507, i64 2147584547}
!6424 = !DILocation(line: 67, column: 1, scope: !6310)
!6425 = !{i64 2147584693, i64 2147584736, i64 2147584776}
!6426 = !DILocation(line: 68, column: 1, scope: !6310)
!6427 = !{i64 2147584901, i64 2147584944, i64 2147584984}
!6428 = !DILocation(line: 69, column: 1, scope: !6310)
!6429 = !{i64 2147585112, i64 2147585155, i64 2147585195}
!6430 = !DILocation(line: 70, column: 1, scope: !6310)
!6431 = !{i64 2147585347, i64 2147585390, i64 2147585430}
!6432 = !DILocation(line: 71, column: 1, scope: !6310)
!6433 = !{i64 2147585576, i64 2147585619, i64 2147585659}
!6434 = !DILocation(line: 72, column: 1, scope: !6310)
!6435 = !{i64 2147585793, i64 2147585836, i64 2147585876}
!6436 = !DILocation(line: 73, column: 1, scope: !6310)
!6437 = !{i64 2147586022, i64 2147586065, i64 2147586105}
!6438 = !DILocation(line: 74, column: 1, scope: !6310)
!6439 = !{i64 2147586260, i64 2147586303, i64 2147586343}
!6440 = !DILocation(line: 75, column: 1, scope: !6310)
!6441 = !{i64 2147586492, i64 2147586535, i64 2147586575}
!6442 = !DILocation(line: 76, column: 1, scope: !6310)
!6443 = !{i64 2147586718, i64 2147586761, i64 2147586801}
!6444 = !DILocation(line: 77, column: 1, scope: !6310)
!6445 = !{i64 2147586935, i64 2147586978, i64 2147587018}
!6446 = !DILocation(line: 78, column: 1, scope: !6310)
!6447 = !{i64 2147587167, i64 2147587210, i64 2147587250}
!6448 = !DILocation(line: 79, column: 1, scope: !6310)
!6449 = !{i64 2147587393, i64 2147587436, i64 2147587476}
!6450 = !DILocation(line: 80, column: 1, scope: !6310)
!6451 = !{i64 2147587607, i64 2147587650, i64 2147587690}
!6452 = !DILocation(line: 81, column: 1, scope: !6310)
!6453 = !{i64 2147587827, i64 2147587870, i64 2147587910}
!6454 = !DILocation(line: 82, column: 1, scope: !6310)
!6455 = !{i64 2147588059, i64 2147588102, i64 2147588142}
!6456 = !DILocation(line: 83, column: 1, scope: !6310)
!6457 = !{i64 2147588267, i64 2147588310, i64 2147588350}
!6458 = !DILocation(line: 84, column: 1, scope: !6310)
!6459 = !{i64 2147588472, i64 2147588515, i64 2147588555}
!6460 = !DILocation(line: 85, column: 1, scope: !6310)
!6461 = !{i64 2147588689, i64 2147588732, i64 2147588772}
!6462 = !DILocation(line: 86, column: 1, scope: !6310)
!6463 = !{i64 2147588903, i64 2147588946, i64 2147588986}
!6464 = !DILocation(line: 87, column: 1, scope: !6310)
!6465 = !{i64 2147589129, i64 2147589172, i64 2147589212}
!6466 = !DILocation(line: 88, column: 1, scope: !6310)
!6467 = !{i64 2147589349, i64 2147589392, i64 2147589432}
!6468 = !DILocation(line: 89, column: 1, scope: !6310)
!6469 = !{i64 2147593615, i64 2147593658, i64 2147593698}
!6470 = !DILocation(line: 90, column: 1, scope: !6310)
!6471 = !{i64 2147593847, i64 2147593890, i64 2147593930}
!6472 = !DILocation(line: 91, column: 1, scope: !6310)
!6473 = !{i64 2147594082, i64 2147594125, i64 2147594165}
!6474 = !DILocation(line: 92, column: 1, scope: !6310)
!6475 = !{i64 2147594332, i64 2147594375, i64 2147594415}
!6476 = !DILocation(line: 93, column: 1, scope: !6310)
!6477 = !{i64 2147594582, i64 2147594625, i64 2147594665}
!6478 = !DILocation(line: 94, column: 1, scope: !6310)
!6479 = !{i64 2147594820, i64 2147594863, i64 2147594903}
!6480 = !DILocation(line: 95, column: 1, scope: !6310)
!6481 = !{i64 2147595031, i64 2147595074, i64 2147595114}
!6482 = !DILocation(line: 96, column: 1, scope: !6310)
!6483 = !{i64 2147595248, i64 2147595291, i64 2147595331}
!6484 = !DILocation(line: 97, column: 1, scope: !6310)
!6485 = !{i64 2147595444, i64 2147595487, i64 2147595527}
!6486 = !DILocation(line: 98, column: 1, scope: !6310)
!6487 = !{i64 2147595646, i64 2147595689, i64 2147595729}
!6488 = !DILocation(line: 99, column: 1, scope: !6310)
!6489 = !{i64 2147595839, i64 2147595882, i64 2147595922}
!6490 = !DILocation(line: 100, column: 1, scope: !6310)
!6491 = !{i64 2147596047, i64 2147596090, i64 2147596130}
!6492 = !DILocation(line: 101, column: 1, scope: !6310)
!6493 = !{i64 2147596243, i64 2147596286, i64 2147596326}
!6494 = !DILocation(line: 102, column: 1, scope: !6310)
!6495 = !{i64 2147596448, i64 2147596491, i64 2147596531}
!6496 = !DILocation(line: 103, column: 1, scope: !6310)
!6497 = !{i64 2147596659, i64 2147596702, i64 2147596742}
!6498 = !DILocation(line: 104, column: 1, scope: !6310)
!6499 = !{i64 2147596858, i64 2147596901, i64 2147596941}
!6500 = !DILocation(line: 105, column: 1, scope: !6310)
!6501 = !{i64 2147597033, i64 2147597076, i64 2147597116}
!6502 = !DILocation(line: 106, column: 1, scope: !6310)
!6503 = !{i64 2147597217, i64 2147597260, i64 2147597300}
!6504 = !DILocation(line: 107, column: 1, scope: !6310)
!6505 = !{i64 2147597419, i64 2147597462, i64 2147597502}
!6506 = !DILocation(line: 108, column: 1, scope: !6310)
!6507 = !{i64 2147597621, i64 2147597664, i64 2147597704}
!6508 = !DILocation(line: 109, column: 1, scope: !6310)
!6509 = !{i64 2147597826, i64 2147597869, i64 2147597909}
!6510 = !DILocation(line: 110, column: 1, scope: !6310)
!6511 = !{i64 2147598019, i64 2147598062, i64 2147598102}
!6512 = !DILocation(line: 111, column: 1, scope: !6310)
!6513 = !{i64 2147598185, i64 2147598228, i64 2147598268}
!6514 = !DILocation(line: 112, column: 1, scope: !6310)
!6515 = !{i64 2147598369, i64 2147598412, i64 2147598452}
!6516 = !DILocation(line: 113, column: 1, scope: !6310)
!6517 = !{i64 2147598559, i64 2147598602, i64 2147598642}
!6518 = !DILocation(line: 114, column: 1, scope: !6310)
!6519 = !{i64 2147598743, i64 2147598786, i64 2147598826}
!6520 = !DILocation(line: 115, column: 1, scope: !6310)
!6521 = !{i64 2147598957, i64 2147599000, i64 2147599040}
!6522 = !DILocation(line: 116, column: 1, scope: !6310)
!6523 = !{i64 2147599168, i64 2147599211, i64 2147599251}
!6524 = !DILocation(line: 117, column: 1, scope: !6310)
!6525 = !{i64 2147599391, i64 2147599434, i64 2147599474}
!6526 = !DILocation(line: 118, column: 1, scope: !6310)
!6527 = !{i64 2147599575, i64 2147599618, i64 2147599658}
!6528 = !DILocation(line: 119, column: 1, scope: !6310)
!6529 = !{i64 2147599789, i64 2147599832, i64 2147599872}
!6530 = !DILocation(line: 120, column: 1, scope: !6310)
!6531 = !{i64 2147599955, i64 2147599998, i64 2147600038}
!6532 = !DILocation(line: 121, column: 1, scope: !6310)
!6533 = !{i64 2147600136, i64 2147600179, i64 2147600219}
!6534 = !DILocation(line: 122, column: 1, scope: !6310)
!6535 = !{i64 2147600329, i64 2147600372, i64 2147600412}
!6536 = !DILocation(line: 123, column: 1, scope: !6310)
!6537 = !{i64 2147600555, i64 2147600598, i64 2147600638}
!6538 = !DILocation(line: 124, column: 1, scope: !6310)
!6539 = !{i64 2147600769, i64 2147600812, i64 2147600852}
!6540 = !DILocation(line: 125, column: 1, scope: !6310)
!6541 = !{i64 2147600995, i64 2147601038, i64 2147601078}
!6542 = !DILocation(line: 126, column: 1, scope: !6310)
!6543 = !{i64 2147601212, i64 2147601255, i64 2147601295}
!6544 = !DILocation(line: 127, column: 1, scope: !6310)
!6545 = !{i64 2147601489, i64 2147601532, i64 2147601572}
!6546 = !DILocation(line: 128, column: 1, scope: !6310)
!6547 = !{i64 2147601715, i64 2147601758, i64 2147601798}
!6548 = !DILocation(line: 129, column: 1, scope: !6310)
!6549 = !{i64 2147601911, i64 2147601954, i64 2147601994}
!6550 = !DILocation(line: 130, column: 1, scope: !6310)
!6551 = !{i64 2147602176, i64 2147602219, i64 2147602259}
!6552 = !DILocation(line: 131, column: 1, scope: !6310)
!6553 = !{i64 2147602390, i64 2147602433, i64 2147602473}
!6554 = !DILocation(line: 132, column: 1, scope: !6310)
!6555 = !{i64 2147602565, i64 2147602608, i64 2147602648}
!6556 = !DILocation(line: 133, column: 1, scope: !6310)
!6557 = !{i64 2147606880, i64 2147606923, i64 2147606963}
!6558 = !DILocation(line: 134, column: 1, scope: !6310)
!6559 = !{i64 2147607079, i64 2147607122, i64 2147607162}
!6560 = !DILocation(line: 135, column: 1, scope: !6310)
!6561 = !{i64 2147607321, i64 2147607364, i64 2147607404}
!6562 = !DILocation(line: 136, column: 1, scope: !6310)
!6563 = !{i64 2147607484, i64 2147607527, i64 2147607567}
!6564 = !DILocation(line: 137, column: 1, scope: !6310)
!6565 = !{i64 2147607671, i64 2147607714, i64 2147607754}
!6566 = !DILocation(line: 138, column: 1, scope: !6310)
!6567 = !{i64 2147607879, i64 2147607922, i64 2147607962}
!6568 = !DILocation(line: 139, column: 1, scope: !6310)
!6569 = !{i64 2147608075, i64 2147608118, i64 2147608158}
!6570 = !DILocation(line: 140, column: 1, scope: !6310)
!6571 = !{i64 2147608268, i64 2147608311, i64 2147608351}
!6572 = !DILocation(line: 141, column: 1, scope: !6310)
!6573 = !{i64 2147608450, i64 2147608493, i64 2147608533}
!6574 = !DILocation(line: 142, column: 1, scope: !6310)
!6575 = !{i64 2147608664, i64 2147608707, i64 2147608747}
!6576 = !DILocation(line: 143, column: 1, scope: !6310)
!6577 = !{i64 2147608875, i64 2147608918, i64 2147608958}
!6578 = !DILocation(line: 144, column: 1, scope: !6310)
!6579 = !{i64 2147609095, i64 2147609138, i64 2147609178}
!6580 = !DILocation(line: 145, column: 1, scope: !6310)
!6581 = !{i64 2147609302, i64 2147609345, i64 2147609385}
!6582 = !DILocation(line: 146, column: 1, scope: !6310)
!6583 = !{i64 2147609575, i64 2147609618, i64 2147609658}
!6584 = !DILocation(line: 147, column: 1, scope: !6310)
!6585 = !{i64 2147609823, i64 2147609866, i64 2147609906}
!6586 = !DILocation(line: 148, column: 1, scope: !6310)
!6587 = !{i64 2147610022, i64 2147610065, i64 2147610105}
!6588 = !DILocation(line: 149, column: 1, scope: !6310)
!6589 = !{i64 2147610257, i64 2147610300, i64 2147610340}
!6590 = !DILocation(line: 150, column: 1, scope: !6310)
!6591 = !{i64 2147610507, i64 2147610550, i64 2147610590}
!6592 = !DILocation(line: 151, column: 1, scope: !6310)
!6593 = !{i64 2147610709, i64 2147610752, i64 2147610792}
!6594 = !DILocation(line: 152, column: 1, scope: !6310)
!6595 = !{i64 2147610932, i64 2147610975, i64 2147611015}
!6596 = !DILocation(line: 153, column: 1, scope: !6310)
!6597 = !{i64 2147611146, i64 2147611189, i64 2147611229}
!6598 = !DILocation(line: 154, column: 1, scope: !6310)
!6599 = !{i64 2147611390, i64 2147611433, i64 2147611473}
!6600 = !DILocation(line: 155, column: 1, scope: !6310)
!6601 = !{i64 2147611619, i64 2147611662, i64 2147611702}
!6602 = !DILocation(line: 156, column: 1, scope: !6310)
!6603 = !{i64 2147611848, i64 2147611891, i64 2147611931}
!6604 = !DILocation(line: 157, column: 1, scope: !6310)
!6605 = !{i64 2147612056, i64 2147612099, i64 2147612139}
!6606 = !DILocation(line: 158, column: 1, scope: !6310)
!6607 = !{i64 2147612294, i64 2147612337, i64 2147612377}
!6608 = !DILocation(line: 159, column: 1, scope: !6310)
!6609 = !{i64 2147612520, i64 2147612563, i64 2147612603}
!6610 = !DILocation(line: 160, column: 1, scope: !6310)
!6611 = !{i64 2147612779, i64 2147612822, i64 2147612862}
!6612 = !DILocation(line: 161, column: 1, scope: !6310)
!6613 = !{i64 2147612999, i64 2147613042, i64 2147613082}
!6614 = !DILocation(line: 162, column: 1, scope: !6310)
!6615 = !{i64 2147613231, i64 2147613274, i64 2147613314}
!6616 = !DILocation(line: 163, column: 1, scope: !6310)
!6617 = !{i64 2147613472, i64 2147613515, i64 2147613555}
!6618 = !DILocation(line: 164, column: 1, scope: !6310)
!6619 = !{i64 2147613713, i64 2147613756, i64 2147613796}
!6620 = !DILocation(line: 165, column: 1, scope: !6310)
!6621 = !{i64 2147613936, i64 2147613979, i64 2147614019}
!6622 = !DILocation(line: 166, column: 1, scope: !6310)
!6623 = !{i64 2147614153, i64 2147614196, i64 2147614236}
!6624 = !DILocation(line: 167, column: 1, scope: !6310)
!6625 = !{i64 2147614394, i64 2147614437, i64 2147614477}
!6626 = !DILocation(line: 168, column: 1, scope: !6310)
!6627 = !{i64 2147614581, i64 2147614624, i64 2147614664}
!6628 = !DILocation(line: 169, column: 1, scope: !6310)
!6629 = !{i64 2147614744, i64 2147614787, i64 2147614827}
!6630 = !DILocation(line: 170, column: 1, scope: !6310)
!6631 = !{i64 2147614949, i64 2147614992, i64 2147615032}
!6632 = !DILocation(line: 171, column: 1, scope: !6310)
!6633 = !{i64 2147615142, i64 2147615185, i64 2147615225}
!6634 = !DILocation(line: 172, column: 1, scope: !6310)
!6635 = !{i64 2147619462, i64 2147619505, i64 2147619545}
!6636 = !DILocation(line: 173, column: 1, scope: !6310)
!6637 = !{i64 2147619685, i64 2147619728, i64 2147619768}
!6638 = !DILocation(line: 174, column: 1, scope: !6310)
!6639 = !{i64 2147619914, i64 2147619957, i64 2147619997}
!6640 = !DILocation(line: 175, column: 1, scope: !6310)
!6641 = !{i64 2147620128, i64 2147620171, i64 2147620211}
!6642 = !DILocation(line: 176, column: 1, scope: !6310)
!6643 = !{i64 2147620330, i64 2147620373, i64 2147620413}
!6644 = !DILocation(line: 177, column: 1, scope: !6310)
!6645 = !{i64 2147620526, i64 2147620569, i64 2147620609}
!6646 = !DILocation(line: 178, column: 1, scope: !6310)
!6647 = !{i64 2147620738, i64 2147620781, i64 2147620821}
!6648 = !DILocation(line: 179, column: 1, scope: !6310)
!6649 = !{i64 2147620959, i64 2147621002, i64 2147621042}
!6650 = !DILocation(line: 180, column: 1, scope: !6310)
!6651 = !{i64 2147621173, i64 2147621216, i64 2147621256}
!6652 = !DILocation(line: 181, column: 1, scope: !6310)
!6653 = !{i64 2147621363, i64 2147621406, i64 2147621446}
!6654 = !DILocation(line: 182, column: 1, scope: !6310)
!6655 = !{i64 2147621562, i64 2147621605, i64 2147621645}
!6656 = !DILocation(line: 183, column: 1, scope: !6310)
!6657 = !{i64 2147621767, i64 2147621810, i64 2147621850}
!6658 = !DILocation(line: 184, column: 1, scope: !6310)
!6659 = !{i64 2147621987, i64 2147622030, i64 2147622070}
!6660 = !DILocation(line: 185, column: 1, scope: !6310)
!6661 = !{i64 2147622188, i64 2147622231, i64 2147622271}
!6662 = !DILocation(line: 186, column: 1, scope: !6310)
!6663 = !{i64 2147622387, i64 2147622430, i64 2147622470}
!6664 = !DILocation(line: 187, column: 1, scope: !6310)
!6665 = !{i64 2147622592, i64 2147622635, i64 2147622675}
!6666 = !DILocation(line: 188, column: 1, scope: !6310)
!6667 = !{i64 2147622761, i64 2147622804, i64 2147622844}
!6668 = !DILocation(line: 189, column: 1, scope: !6310)
!6669 = !{i64 2147622945, i64 2147622988, i64 2147623028}
!6670 = !DILocation(line: 190, column: 1, scope: !6310)
!6671 = !{i64 2147623129, i64 2147623172, i64 2147623212}
!6672 = !DILocation(line: 191, column: 1, scope: !6310)
!6673 = !{i64 2147623316, i64 2147623359, i64 2147623399}
!6674 = !DILocation(line: 192, column: 1, scope: !6310)
!6675 = !{i64 2147623500, i64 2147623543, i64 2147623583}
!6676 = !DILocation(line: 193, column: 1, scope: !6310)
!6677 = !{i64 2147623738, i64 2147623781, i64 2147623821}
!6678 = !DILocation(line: 194, column: 1, scope: !6310)
!6679 = !{i64 2147623968, i64 2147624011, i64 2147624051}
!6680 = !DILocation(line: 195, column: 1, scope: !6310)
!6681 = !{i64 2147624197, i64 2147624240, i64 2147624280}
!6682 = !DILocation(line: 196, column: 1, scope: !6310)
!6683 = !{i64 2147624384, i64 2147624427, i64 2147624467}
!6684 = !DILocation(line: 197, column: 1, scope: !6310)
!6685 = !{i64 2147624580, i64 2147624623, i64 2147624663}
!6686 = !DILocation(line: 198, column: 1, scope: !6310)
!6687 = !{i64 2147624788, i64 2147624831, i64 2147624871}
!6688 = !DILocation(line: 199, column: 1, scope: !6310)
!6689 = !{i64 2147625000, i64 2147625043, i64 2147625083}
!6690 = !DILocation(line: 200, column: 1, scope: !6310)
!6691 = !{i64 2147625199, i64 2147625242, i64 2147625282}
!6692 = !DILocation(line: 201, column: 1, scope: !6310)
!6693 = !{i64 2147625437, i64 2147625480, i64 2147625520}
!6694 = !DILocation(line: 202, column: 1, scope: !6310)
!6695 = !{i64 2147625633, i64 2147625676, i64 2147625716}
!6696 = !DILocation(line: 203, column: 1, scope: !6310)
!6697 = !{i64 2147625835, i64 2147625878, i64 2147625918}
!6698 = !DILocation(line: 204, column: 1, scope: !6310)
!6699 = !{i64 2147626028, i64 2147626071, i64 2147626111}
!6700 = !DILocation(line: 205, column: 1, scope: !6310)
!6701 = !{i64 2147626262, i64 2147626305, i64 2147626345}
!6702 = !DILocation(line: 206, column: 1, scope: !6310)
!6703 = !{i64 2147626425, i64 2147626468, i64 2147626508}
!6704 = !DILocation(line: 207, column: 1, scope: !6310)
!6705 = !{i64 2147626664, i64 2147626707, i64 2147626747}
!6706 = !DILocation(line: 208, column: 1, scope: !6310)
!6707 = !{i64 2147626903, i64 2147626946, i64 2147626986}
!6708 = !DILocation(line: 209, column: 1, scope: !6310)
!6709 = !{i64 2147627139, i64 2147627182, i64 2147627222}
!6710 = !DILocation(line: 210, column: 1, scope: !6310)
!6711 = !{i64 2147627369, i64 2147627412, i64 2147627452}
!6712 = !DILocation(line: 211, column: 1, scope: !6310)
!6713 = !{i64 2147627556, i64 2147627599, i64 2147627639}
!6714 = !DILocation(line: 212, column: 1, scope: !6310)
!6715 = !{i64 2147627755, i64 2147627798, i64 2147627838}
!6716 = !DILocation(line: 213, column: 1, scope: !6310)
!6717 = !{i64 2147628026, i64 2147628069, i64 2147628109}
!6718 = !DILocation(line: 214, column: 1, scope: !6310)
!6719 = !{i64 2147628201, i64 2147628244, i64 2147628284}
!6720 = !DILocation(line: 215, column: 1, scope: !6310)
!6721 = !{i64 2147628435, i64 2147628478, i64 2147628518}
!6722 = !DILocation(line: 216, column: 1, scope: !6310)
!6723 = !{i64 2147632704, i64 2147632747, i64 2147632787}
!6724 = !DILocation(line: 217, column: 1, scope: !6310)
!6725 = !{i64 2147632922, i64 2147632965, i64 2147633005}
!6726 = !DILocation(line: 218, column: 1, scope: !6310)
!6727 = !{i64 2147633112, i64 2147633155, i64 2147633195}
!6728 = !DILocation(line: 219, column: 1, scope: !6310)
!6729 = !{i64 2147633344, i64 2147633387, i64 2147633427}
!6730 = !DILocation(line: 220, column: 1, scope: !6310)
!6731 = !{i64 2147633564, i64 2147633607, i64 2147633647}
!6732 = !DILocation(line: 221, column: 1, scope: !6310)
!6733 = !{i64 2147633760, i64 2147633803, i64 2147633843}
!6734 = !DILocation(line: 222, column: 1, scope: !6310)
!6735 = !{i64 2147633966, i64 2147634009, i64 2147634049}
!6736 = !DILocation(line: 223, column: 1, scope: !6310)
!6737 = !{i64 2147634171, i64 2147634214, i64 2147634254}
!6738 = !DILocation(line: 224, column: 1, scope: !6310)
!6739 = !{i64 2147634397, i64 2147634440, i64 2147634480}
!6740 = !DILocation(line: 225, column: 1, scope: !6310)
!6741 = !{i64 2147634605, i64 2147634648, i64 2147634688}
!6742 = !DILocation(line: 226, column: 1, scope: !6310)
!6743 = !{i64 2147634801, i64 2147634844, i64 2147634884}
!6744 = !DILocation(line: 227, column: 1, scope: !6310)
!6745 = !{i64 2147635033, i64 2147635076, i64 2147635116}
!6746 = !DILocation(line: 228, column: 1, scope: !6310)
!6747 = !{i64 2147635217, i64 2147635260, i64 2147635300}
!6748 = !DILocation(line: 229, column: 1, scope: !6310)
!6749 = !{i64 2147635426, i64 2147635469, i64 2147635509}
!6750 = !DILocation(line: 230, column: 1, scope: !6310)
!6751 = !{i64 2147635634, i64 2147635677, i64 2147635717}
!6752 = !DILocation(line: 231, column: 1, scope: !6310)
!6753 = !{i64 2147635830, i64 2147635873, i64 2147635913}
!6754 = !DILocation(line: 232, column: 1, scope: !6310)
!6755 = !{i64 2147636014, i64 2147636057, i64 2147636097}
!6756 = !DILocation(line: 233, column: 1, scope: !6310)
!6757 = !{i64 2147636240, i64 2147636283, i64 2147636323}
!6758 = !DILocation(line: 234, column: 1, scope: !6310)
!6759 = !{i64 2147636466, i64 2147636509, i64 2147636549}
!6760 = !DILocation(line: 235, column: 1, scope: !6310)
!6761 = !{i64 2147636692, i64 2147636735, i64 2147636775}
!6762 = !DILocation(line: 236, column: 1, scope: !6310)
!6763 = !{i64 2147636918, i64 2147636961, i64 2147637001}
!6764 = !DILocation(line: 237, column: 1, scope: !6310)
!6765 = !{i64 2147637144, i64 2147637187, i64 2147637227}
!6766 = !DILocation(line: 238, column: 1, scope: !6310)
!6767 = !{i64 2147637376, i64 2147637419, i64 2147637459}
!6768 = !DILocation(line: 239, column: 1, scope: !6310)
!6769 = !{i64 2147637614, i64 2147637657, i64 2147637697}
!6770 = !DILocation(line: 240, column: 1, scope: !6310)
!6771 = !{i64 2147637846, i64 2147637889, i64 2147637929}
!6772 = !DILocation(line: 241, column: 1, scope: !6310)
!6773 = !{i64 2147638048, i64 2147638091, i64 2147638131}
!6774 = !DILocation(line: 242, column: 1, scope: !6310)
!6775 = !{i64 2147638298, i64 2147638341, i64 2147638381}
!6776 = !DILocation(line: 243, column: 1, scope: !6310)
!6777 = !{i64 2147638536, i64 2147638579, i64 2147638619}
!6778 = !DILocation(line: 244, column: 1, scope: !6310)
!6779 = !{i64 2147638744, i64 2147638787, i64 2147638827}
!6780 = !DILocation(line: 245, column: 1, scope: !6310)
!6781 = !{i64 2147638940, i64 2147638983, i64 2147639023}
!6782 = !DILocation(line: 246, column: 1, scope: !6310)
!6783 = !{i64 2147639124, i64 2147639167, i64 2147639207}
!6784 = !DILocation(line: 247, column: 1, scope: !6310)
!6785 = !{i64 2147639341, i64 2147639384, i64 2147639424}
!6786 = !DILocation(line: 248, column: 1, scope: !6310)
!6787 = !{i64 2147639546, i64 2147639589, i64 2147639629}
!6788 = !DILocation(line: 249, column: 1, scope: !6310)
!6789 = !{i64 2147639781, i64 2147639824, i64 2147639864}
!6790 = !DILocation(line: 250, column: 1, scope: !6310)
!6791 = !{i64 2147640004, i64 2147640047, i64 2147640087}
!6792 = !DILocation(line: 251, column: 1, scope: !6310)
!6793 = !{i64 2147640227, i64 2147640270, i64 2147640310}
!6794 = !DILocation(line: 252, column: 1, scope: !6310)
!6795 = !{i64 2147640465, i64 2147640508, i64 2147640548}
!6796 = !DILocation(line: 253, column: 1, scope: !6310)
!6797 = !{i64 2147640703, i64 2147640746, i64 2147640786}
!6798 = !DILocation(line: 254, column: 1, scope: !6310)
!6799 = !{i64 2147640920, i64 2147640963, i64 2147641003}
!6800 = !DILocation(line: 255, column: 1, scope: !6310)
!6801 = !{i64 2147641125, i64 2147641168, i64 2147641208}
!6802 = !DILocation(line: 256, column: 1, scope: !6310)
!6803 = !{i64 2147641318, i64 2147641361, i64 2147641401}
!6804 = !DILocation(line: 257, column: 1, scope: !6310)
!6805 = !{i64 2147645632, i64 2147645675, i64 2147645715}
!6806 = !DILocation(line: 258, column: 1, scope: !6310)
!6807 = !{i64 2147645840, i64 2147645883, i64 2147645923}
!6808 = !DILocation(line: 259, column: 1, scope: !6310)
!6809 = !{i64 2147646036, i64 2147646079, i64 2147646119}
!6810 = !DILocation(line: 260, column: 1, scope: !6310)
!6811 = !{i64 2147646250, i64 2147646293, i64 2147646333}
!6812 = !DILocation(line: 261, column: 1, scope: !6310)
!6813 = !{i64 2147646458, i64 2147646501, i64 2147646541}
!6814 = !DILocation(line: 262, column: 1, scope: !6310)
!6815 = !{i64 2147646648, i64 2147646691, i64 2147646731}
!6816 = !DILocation(line: 263, column: 1, scope: !6310)
!6817 = !{i64 2147646862, i64 2147646905, i64 2147646945}
!6818 = !DILocation(line: 264, column: 1, scope: !6310)
!6819 = !{i64 2147647124, i64 2147647167, i64 2147647207}
!6820 = !DILocation(line: 265, column: 1, scope: !6310)
!6821 = !{i64 2147647335, i64 2147647378, i64 2147647418}
!6822 = !DILocation(line: 266, column: 1, scope: !6310)
!6823 = !{i64 2147647579, i64 2147647622, i64 2147647662}
!6824 = !DILocation(line: 267, column: 1, scope: !6310)
!6825 = !{i64 2147647790, i64 2147647833, i64 2147647873}
!6826 = !DILocation(line: 268, column: 1, scope: !6310)
!6827 = !{i64 2147648019, i64 2147648062, i64 2147648102}
!6828 = !DILocation(line: 269, column: 1, scope: !6310)
!6829 = !{i64 2147648284, i64 2147648327, i64 2147648367}
!6830 = !DILocation(line: 270, column: 1, scope: !6310)
!6831 = !{i64 2147648489, i64 2147648532, i64 2147648572}
!6832 = !DILocation(line: 271, column: 1, scope: !6310)
!6833 = !{i64 2147648685, i64 2147648728, i64 2147648768}
!6834 = !DILocation(line: 272, column: 1, scope: !6310)
!6835 = !{i64 2147648908, i64 2147648951, i64 2147648991}
!6836 = !DILocation(line: 273, column: 1, scope: !6310)
!6837 = !{i64 2147649071, i64 2147649114, i64 2147649154}
!6838 = !DILocation(line: 274, column: 1, scope: !6310)
!6839 = !{i64 2147649276, i64 2147649319, i64 2147649359}
!6840 = !DILocation(line: 275, column: 1, scope: !6310)
!6841 = !{i64 2147649496, i64 2147649539, i64 2147649579}
!6842 = !DILocation(line: 276, column: 1, scope: !6310)
!6843 = !{i64 2147649710, i64 2147649753, i64 2147649793}
!6844 = !DILocation(line: 277, column: 1, scope: !6310)
!6845 = !{i64 2147649954, i64 2147649997, i64 2147650037}
!6846 = !DILocation(line: 278, column: 1, scope: !6310)
!6847 = !{i64 2147650186, i64 2147650229, i64 2147650269}
!6848 = !DILocation(line: 279, column: 1, scope: !6310)
!6849 = !{i64 2147650400, i64 2147650443, i64 2147650483}
!6850 = !DILocation(line: 280, column: 1, scope: !6310)
!6851 = !{i64 2147650611, i64 2147650654, i64 2147650694}
!6852 = !DILocation(line: 281, column: 1, scope: !6310)
!6853 = !{i64 2147650804, i64 2147650847, i64 2147650887}
!6854 = !DILocation(line: 282, column: 1, scope: !6310)
!6855 = !{i64 2147651003, i64 2147651046, i64 2147651086}
!6856 = !DILocation(line: 283, column: 1, scope: !6310)
!6857 = !{i64 2147651175, i64 2147651218, i64 2147651258}
!6858 = !DILocation(line: 284, column: 1, scope: !6310)
!6859 = !{i64 2147651368, i64 2147651411, i64 2147651451}
!6860 = !DILocation(line: 285, column: 1, scope: !6310)
!6861 = !{i64 2147651564, i64 2147651607, i64 2147651647}
!6862 = !DILocation(line: 286, column: 1, scope: !6310)
!6863 = !{i64 2147651727, i64 2147651770, i64 2147651810}
!6864 = !DILocation(line: 287, column: 1, scope: !6310)
!6865 = !{i64 2147651929, i64 2147651972, i64 2147652012}
!6866 = !DILocation(line: 288, column: 1, scope: !6310)
!6867 = !{i64 2147652134, i64 2147652177, i64 2147652217}
!6868 = !DILocation(line: 289, column: 1, scope: !6310)
!6869 = !{i64 2147652342, i64 2147652385, i64 2147652425}
!6870 = !DILocation(line: 290, column: 1, scope: !6310)
!6871 = !{i64 2147652535, i64 2147652578, i64 2147652618}
!6872 = !DILocation(line: 291, column: 1, scope: !6310)
!6873 = !{i64 2147652722, i64 2147652765, i64 2147652805}
!6874 = !DILocation(line: 292, column: 1, scope: !6310)
!6875 = !{i64 2147652949, i64 2147652992, i64 2147653032}
!6876 = !DILocation(line: 293, column: 1, scope: !6310)
!6877 = !{i64 2147653115, i64 2147653158, i64 2147653198}
!6878 = !DILocation(line: 294, column: 1, scope: !6310)
!6879 = !{i64 2147653353, i64 2147653396, i64 2147653436}
!6880 = !DILocation(line: 295, column: 1, scope: !6310)
!6881 = !{i64 2147653603, i64 2147653646, i64 2147653686}
!6882 = !DILocation(line: 296, column: 1, scope: !6310)
!6883 = !{i64 2147653811, i64 2147653854, i64 2147653894}
!6884 = !DILocation(line: 297, column: 1, scope: !6310)
!6885 = !{i64 2147654007, i64 2147654050, i64 2147654090}
!6886 = !DILocation(line: 298, column: 1, scope: !6310)
!6887 = !{i64 2147654224, i64 2147654267, i64 2147654307}
!6888 = !DILocation(line: 299, column: 1, scope: !6310)
!6889 = !{i64 2147658577, i64 2147658620, i64 2147658660}
!6890 = !DILocation(line: 300, column: 1, scope: !6310)
!6891 = !{i64 2147658809, i64 2147658852, i64 2147658892}
!6892 = !DILocation(line: 301, column: 1, scope: !6310)
!6893 = !{i64 2147659026, i64 2147659069, i64 2147659109}
!6894 = !DILocation(line: 302, column: 1, scope: !6310)
!6895 = !{i64 2147659233, i64 2147659276, i64 2147659316}
!6896 = !DILocation(line: 303, column: 1, scope: !6310)
!6897 = !{i64 2147659434, i64 2147659477, i64 2147659517}
!6898 = !DILocation(line: 304, column: 1, scope: !6310)
!6899 = !{i64 2147659666, i64 2147659709, i64 2147659749}
!6900 = !DILocation(line: 305, column: 1, scope: !6310)
!6901 = !{i64 2147659874, i64 2147659917, i64 2147659957}
!6902 = !DILocation(line: 306, column: 1, scope: !6310)
!6903 = !{i64 2147660064, i64 2147660107, i64 2147660147}
!6904 = !DILocation(line: 307, column: 1, scope: !6310)
!6905 = !{i64 2147660290, i64 2147660333, i64 2147660373}
!6906 = !DILocation(line: 308, column: 1, scope: !6310)
!6907 = !{i64 2147660479, i64 2147660522, i64 2147660562}
!6908 = !DILocation(line: 309, column: 1, scope: !6310)
!6909 = !{i64 2147660750, i64 2147660793, i64 2147660833}
!6910 = !DILocation(line: 310, column: 1, scope: !6310)
!6911 = !{i64 2147660970, i64 2147661013, i64 2147661053}
!6912 = !DILocation(line: 311, column: 1, scope: !6310)
!6913 = !{i64 2147661223, i64 2147661266, i64 2147661306}
!6914 = !DILocation(line: 312, column: 1, scope: !6310)
!6915 = !{i64 2147661431, i64 2147661474, i64 2147661514}
!6916 = !DILocation(line: 313, column: 1, scope: !6310)
!6917 = !{i64 2147661663, i64 2147661706, i64 2147661746}
!6918 = !DILocation(line: 314, column: 1, scope: !6310)
!6919 = !{i64 2147661874, i64 2147661917, i64 2147661957}
!6920 = !DILocation(line: 315, column: 1, scope: !6310)
!6921 = !{i64 2147662064, i64 2147662107, i64 2147662147}
!6922 = !DILocation(line: 316, column: 1, scope: !6310)
!6923 = !{i64 2147662278, i64 2147662321, i64 2147662361}
!6924 = !DILocation(line: 317, column: 1, scope: !6310)
!6925 = !{i64 2147662477, i64 2147662520, i64 2147662560}
!6926 = !DILocation(line: 318, column: 1, scope: !6310)
!6927 = !{i64 2147662664, i64 2147662707, i64 2147662747}
!6928 = !DILocation(line: 319, column: 1, scope: !6310)
!6929 = !{i64 2147662872, i64 2147662915, i64 2147662955}
!6930 = !DILocation(line: 320, column: 1, scope: !6310)
!6931 = !{i64 2147663101, i64 2147663144, i64 2147663184}
!6932 = !DILocation(line: 321, column: 1, scope: !6310)
!6933 = !{i64 2147663303, i64 2147663346, i64 2147663386}
!6934 = !DILocation(line: 322, column: 1, scope: !6310)
!6935 = !{i64 2147663502, i64 2147663545, i64 2147663585}
!6936 = !DILocation(line: 323, column: 1, scope: !6310)
!6937 = !{i64 2147663719, i64 2147663762, i64 2147663802}
!6938 = !DILocation(line: 325, column: 1, scope: !6310)
!6939 = distinct !DISubprogram(name: "stm32l1_init", scope: !430, file: !430, line: 31, type: !437, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6940)
!6940 = !{!6941, !6942}
!6941 = !DILocalVariable(name: "arg", arg: 1, scope: !6939, file: !430, line: 31, type: !439)
!6942 = !DILocalVariable(name: "key", scope: !6939, file: !430, line: 33, type: !108)
!6943 = !DILocation(line: 0, scope: !6939)
!6944 = !DILocation(line: 55, column: 2, scope: !6945, inlinedAt: !6952)
!6945 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6946, file: !6946, line: 42, type: !6947, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6949)
!6946 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6947 = !DISubroutineType(types: !6948)
!6948 = !{!32}
!6949 = !{!6950, !6951}
!6950 = !DILocalVariable(name: "key", scope: !6945, file: !6946, line: 44, type: !32)
!6951 = !DILocalVariable(name: "tmp", scope: !6945, file: !6946, line: 53, type: !32)
!6952 = distinct !DILocation(line: 37, column: 8, scope: !6939)
!6953 = !{i64 1524739}
!6954 = !DILocation(line: 0, scope: !6945, inlinedAt: !6952)
!6955 = !DILocalVariable(name: "key", arg: 1, scope: !6956, file: !6946, line: 84, type: !32)
!6956 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6946, file: !6946, line: 84, type: !6957, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6959)
!6957 = !DISubroutineType(types: !6958)
!6958 = !{null, !32}
!6959 = !{!6955}
!6960 = !DILocation(line: 0, scope: !6956, inlinedAt: !6961)
!6961 = distinct !DILocation(line: 44, column: 2, scope: !6939)
!6962 = !DILocation(line: 95, column: 2, scope: !6956, inlinedAt: !6961)
!6963 = !{i64 1525556}
!6964 = !DILocation(line: 48, column: 18, scope: !6939)
!6965 = !DILocation(line: 54, column: 2, scope: !6939)
!6966 = !DILocation(line: 55, column: 2, scope: !6939)
!6967 = !DILocation(line: 57, column: 2, scope: !6939)
!6968 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !6969, file: !6969, line: 531, type: !6970, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6972)
!6969 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6970 = !DISubroutineType(types: !6971)
!6971 = !{null, !108}
!6972 = !{!6973, !6974}
!6973 = !DILocalVariable(name: "Periphs", arg: 1, scope: !6968, file: !6969, line: 531, type: !108)
!6974 = !DILocalVariable(name: "tmpreg", scope: !6968, file: !6969, line: 533, type: !409)
!6975 = !DILocation(line: 0, scope: !6968)
!6976 = !DILocation(line: 533, column: 3, scope: !6968)
!6977 = !DILocation(line: 533, column: 17, scope: !6968)
!6978 = !DILocation(line: 534, column: 3, scope: !6968)
!6979 = !DILocation(line: 536, column: 12, scope: !6968)
!6980 = !DILocation(line: 536, column: 10, scope: !6968)
!6981 = !DILocation(line: 537, column: 9, scope: !6968)
!6982 = !DILocation(line: 538, column: 1, scope: !6968)
!6983 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !6984, file: !6984, line: 272, type: !6970, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6985)
!6984 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6985 = !{!6986}
!6986 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !6983, file: !6984, line: 272, type: !108)
!6987 = !DILocation(line: 0, scope: !6983)
!6988 = !DILocation(line: 274, column: 3, scope: !6983)
!6989 = !DILocation(line: 275, column: 1, scope: !6983)
!6990 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !466, file: !466, line: 26, type: !472, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !463, retainedNodes: !6991)
!6991 = !{!6992}
!6992 = !DILocalVariable(name: "dev", arg: 1, scope: !6990, file: !466, line: 26, type: !474)
!6993 = !DILocation(line: 0, scope: !6990)
!6994 = !DILocation(line: 68, column: 2, scope: !6990)
!6995 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6996, file: !6996, line: 14, type: !4554, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !6997)
!6996 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6997 = !{!6998, !6999}
!6998 = !DILocalVariable(name: "fmt", arg: 1, scope: !6995, file: !6996, line: 14, type: !337)
!6999 = !DILocalVariable(name: "ap", scope: !6995, file: !6996, line: 16, type: !7000)
!7000 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3623, line: 99, baseType: !7001)
!7001 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3623, line: 40, baseType: !7002)
!7002 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6996, baseType: !7003)
!7003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7004)
!7004 = !{!7005}
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7003, file: !6996, line: 16, baseType: !102, size: 32)
!7006 = !DILocation(line: 0, scope: !6995)
!7007 = !DILocation(line: 16, column: 2, scope: !6995)
!7008 = !DILocation(line: 16, column: 10, scope: !6995)
!7009 = !DILocation(line: 18, column: 2, scope: !6995)
!7010 = !DILocation(line: 19, column: 2, scope: !6995)
!7011 = !DILocation(line: 20, column: 2, scope: !6995)
!7012 = !DILocation(line: 21, column: 1, scope: !6995)
!7013 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6996, file: !6996, line: 23, type: !7014, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7016)
!7014 = !DISubroutineType(types: !7015)
!7015 = !{null, !337, !7000}
!7016 = !{!7017, !7018}
!7017 = !DILocalVariable(name: "fmt", arg: 1, scope: !7013, file: !6996, line: 23, type: !337)
!7018 = !DILocalVariable(name: "ap", arg: 2, scope: !7013, file: !6996, line: 23, type: !7000)
!7019 = !DILocation(line: 0, scope: !7013)
!7020 = !DILocation(line: 25, column: 2, scope: !7013)
!7021 = !DILocation(line: 26, column: 1, scope: !7013)
!7022 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6996, file: !6996, line: 52, type: !7023, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7025)
!7023 = !DISubroutineType(types: !7024)
!7024 = !{null, !103, !13, !132}
!7025 = !{!7026, !7027, !7028, !7029}
!7026 = !DILocalVariable(name: "level", arg: 1, scope: !7022, file: !6996, line: 52, type: !103)
!7027 = !DILocalVariable(name: "data", arg: 2, scope: !7022, file: !6996, line: 52, type: !13)
!7028 = !DILocalVariable(name: "size", arg: 3, scope: !7022, file: !6996, line: 52, type: !132)
!7029 = !DILocalVariable(name: "data_buffer", scope: !7022, file: !6996, line: 54, type: !337)
!7030 = !DILocation(line: 0, scope: !7022)
!7031 = !DILocation(line: 55, column: 14, scope: !7022)
!7032 = !DILocation(line: 55, column: 2, scope: !7022)
!7033 = !DILocation(line: 56, column: 3, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7022, file: !6996, line: 55, column: 20)
!7035 = !DILocation(line: 57, column: 3, scope: !7034)
!7036 = !DILocation(line: 59, column: 7, scope: !7034)
!7037 = distinct !{!7037, !7032, !7038}
!7038 = !DILocation(line: 65, column: 2, scope: !7022)
!7039 = !DILocation(line: 66, column: 1, scope: !7022)
!7040 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3555, file: !3555, line: 175, type: !3556, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7041)
!7041 = !{!7042}
!7042 = !DILocalVariable(name: "level", arg: 1, scope: !7040, file: !3555, line: 175, type: !103)
!7043 = !DILocation(line: 0, scope: !7040)
!7044 = !DILocation(line: 177, column: 2, scope: !7040)
!7045 = !DILocation(line: 189, column: 1, scope: !7040)
!7046 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6996, file: !6996, line: 28, type: !7047, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7049)
!7047 = !DISubroutineType(types: !7048)
!7048 = !{null, !337, !132}
!7049 = !{!7050, !7051, !7052, !7054, !7056}
!7050 = !DILocalVariable(name: "data", arg: 1, scope: !7046, file: !6996, line: 28, type: !337)
!7051 = !DILocalVariable(name: "length", arg: 2, scope: !7046, file: !6996, line: 28, type: !132)
!7052 = !DILocalVariable(name: "i", scope: !7053, file: !6996, line: 30, type: !132)
!7053 = distinct !DILexicalBlock(scope: !7046, file: !6996, line: 30, column: 2)
!7054 = !DILocalVariable(name: "i", scope: !7055, file: !6996, line: 40, type: !132)
!7055 = distinct !DILexicalBlock(scope: !7046, file: !6996, line: 40, column: 2)
!7056 = !DILocalVariable(name: "c", scope: !7057, file: !6996, line: 42, type: !186)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !6996, line: 41, column: 19)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !6996, line: 41, column: 7)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !6996, line: 40, column: 54)
!7060 = distinct !DILexicalBlock(scope: !7055, file: !6996, line: 40, column: 2)
!7061 = !DILocation(line: 0, scope: !7046)
!7062 = !DILocation(line: 0, scope: !7053)
!7063 = !DILocation(line: 30, column: 2, scope: !7053)
!7064 = !DILocation(line: 38, column: 2, scope: !7046)
!7065 = !DILocation(line: 0, scope: !7055)
!7066 = !DILocation(line: 40, column: 2, scope: !7055)
!7067 = !DILocation(line: 31, column: 9, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !6996, line: 31, column: 7)
!7069 = distinct !DILexicalBlock(scope: !7070, file: !6996, line: 30, column: 54)
!7070 = distinct !DILexicalBlock(scope: !7053, file: !6996, line: 30, column: 2)
!7071 = !DILocation(line: 31, column: 7, scope: !7069)
!7072 = !DILocation(line: 32, column: 35, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7068, file: !6996, line: 31, column: 19)
!7074 = !DILocation(line: 32, column: 20, scope: !7073)
!7075 = !DILocation(line: 32, column: 4, scope: !7073)
!7076 = !DILocation(line: 33, column: 3, scope: !7073)
!7077 = !DILocation(line: 34, column: 4, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7068, file: !6996, line: 33, column: 10)
!7079 = !DILocation(line: 30, column: 50, scope: !7070)
!7080 = !DILocation(line: 30, column: 24, scope: !7070)
!7081 = distinct !{!7081, !7063, !7082}
!7082 = !DILocation(line: 36, column: 2, scope: !7053)
!7083 = !DILocation(line: 49, column: 2, scope: !7046)
!7084 = !DILocation(line: 50, column: 1, scope: !7046)
!7085 = !DILocation(line: 41, column: 9, scope: !7058)
!7086 = !DILocation(line: 41, column: 7, scope: !7059)
!7087 = !DILocation(line: 42, column: 22, scope: !7057)
!7088 = !DILocation(line: 0, scope: !7057)
!7089 = !DILocation(line: 44, column: 25, scope: !7057)
!7090 = !DILocation(line: 44, column: 17, scope: !7057)
!7091 = !DILocation(line: 44, column: 33, scope: !7057)
!7092 = !DILocation(line: 44, column: 4, scope: !7057)
!7093 = !DILocation(line: 45, column: 3, scope: !7057)
!7094 = !DILocation(line: 46, column: 4, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7058, file: !6996, line: 45, column: 10)
!7096 = !DILocation(line: 40, column: 50, scope: !7060)
!7097 = !DILocation(line: 40, column: 24, scope: !7060)
!7098 = distinct !{!7098, !7066, !7099}
!7099 = !DILocation(line: 48, column: 2, scope: !7055)
!7100 = distinct !DISubprogram(name: "isprint", scope: !6083, file: !6083, line: 37, type: !396, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !7101)
!7101 = !{!7102}
!7102 = !DILocalVariable(name: "c", arg: 1, scope: !7100, file: !6083, line: 37, type: !103)
!7103 = !DILocation(line: 0, scope: !7100)
!7104 = !DILocation(line: 39, column: 38, scope: !7100)
!7105 = !DILocation(line: 39, column: 2, scope: !7100)
!7106 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7107, file: !7107, line: 57, type: !7108, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !7154)
!7107 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7108 = !DISubroutineType(types: !7109)
!7109 = !{null, !32, !7110}
!7110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7111, size: 32)
!7111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7112)
!7112 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2852, line: 141, baseType: !7113)
!7113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2852, line: 97, size: 256, elements: !7114)
!7114 = !{!7115}
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7113, file: !2852, line: 107, baseType: !7116, size: 256)
!7116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2852, line: 98, size: 256, elements: !7117)
!7117 = !{!7118, !7123, !7128, !7133, !7138, !7143, !7148, !7153}
!7118 = !DIDerivedType(tag: DW_TAG_member, scope: !7116, file: !2852, line: 99, baseType: !7119, size: 32)
!7119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7116, file: !2852, line: 99, size: 32, elements: !7120)
!7120 = !{!7121, !7122}
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7119, file: !2852, line: 99, baseType: !108, size: 32)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7119, file: !2852, line: 99, baseType: !108, size: 32)
!7123 = !DIDerivedType(tag: DW_TAG_member, scope: !7116, file: !2852, line: 100, baseType: !7124, size: 32, offset: 32)
!7124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7116, file: !2852, line: 100, size: 32, elements: !7125)
!7125 = !{!7126, !7127}
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7124, file: !2852, line: 100, baseType: !108, size: 32)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7124, file: !2852, line: 100, baseType: !108, size: 32)
!7128 = !DIDerivedType(tag: DW_TAG_member, scope: !7116, file: !2852, line: 101, baseType: !7129, size: 32, offset: 64)
!7129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7116, file: !2852, line: 101, size: 32, elements: !7130)
!7130 = !{!7131, !7132}
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7129, file: !2852, line: 101, baseType: !108, size: 32)
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7129, file: !2852, line: 101, baseType: !108, size: 32)
!7133 = !DIDerivedType(tag: DW_TAG_member, scope: !7116, file: !2852, line: 102, baseType: !7134, size: 32, offset: 96)
!7134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7116, file: !2852, line: 102, size: 32, elements: !7135)
!7135 = !{!7136, !7137}
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7134, file: !2852, line: 102, baseType: !108, size: 32)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7134, file: !2852, line: 102, baseType: !108, size: 32)
!7138 = !DIDerivedType(tag: DW_TAG_member, scope: !7116, file: !2852, line: 103, baseType: !7139, size: 32, offset: 128)
!7139 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7116, file: !2852, line: 103, size: 32, elements: !7140)
!7140 = !{!7141, !7142}
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7139, file: !2852, line: 103, baseType: !108, size: 32)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7139, file: !2852, line: 103, baseType: !108, size: 32)
!7143 = !DIDerivedType(tag: DW_TAG_member, scope: !7116, file: !2852, line: 104, baseType: !7144, size: 32, offset: 160)
!7144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7116, file: !2852, line: 104, size: 32, elements: !7145)
!7145 = !{!7146, !7147}
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7144, file: !2852, line: 104, baseType: !108, size: 32)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7144, file: !2852, line: 104, baseType: !108, size: 32)
!7148 = !DIDerivedType(tag: DW_TAG_member, scope: !7116, file: !2852, line: 105, baseType: !7149, size: 32, offset: 192)
!7149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7116, file: !2852, line: 105, size: 32, elements: !7150)
!7150 = !{!7151, !7152}
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7149, file: !2852, line: 105, baseType: !108, size: 32)
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7149, file: !2852, line: 105, baseType: !108, size: 32)
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7116, file: !2852, line: 106, baseType: !108, size: 32, offset: 224)
!7154 = !{!7155, !7156}
!7155 = !DILocalVariable(name: "reason", arg: 1, scope: !7106, file: !7107, line: 57, type: !32)
!7156 = !DILocalVariable(name: "esf", arg: 2, scope: !7106, file: !7107, line: 57, type: !7110)
!7157 = !DILocation(line: 0, scope: !7106)
!7158 = !DILocation(line: 60, column: 10, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7106, file: !7107, line: 60, column: 6)
!7160 = !DILocation(line: 60, column: 6, scope: !7106)
!7161 = !DILocation(line: 61, column: 3, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7159, file: !7107, line: 60, column: 19)
!7163 = !DILocation(line: 62, column: 2, scope: !7162)
!7164 = !DILocation(line: 63, column: 2, scope: !7106)
!7165 = !DILocation(line: 64, column: 1, scope: !7106)
!7166 = distinct !DISubprogram(name: "esf_dump", scope: !7107, file: !7107, line: 20, type: !7167, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !7169)
!7167 = !DISubroutineType(types: !7168)
!7168 = !{null, !7110}
!7169 = !{!7170}
!7170 = !DILocalVariable(name: "esf", arg: 1, scope: !7166, file: !7107, line: 20, type: !7110)
!7171 = !DILocation(line: 0, scope: !7166)
!7172 = !DILocation(line: 22, column: 2, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !7107, line: 22, column: 2)
!7174 = distinct !DILexicalBlock(scope: !7175, file: !7107, line: 22, column: 2)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !7107, line: 22, column: 2)
!7176 = distinct !DILexicalBlock(scope: !7166, file: !7107, line: 22, column: 2)
!7177 = !DILocation(line: 24, column: 2, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !7107, line: 24, column: 2)
!7179 = distinct !DILexicalBlock(scope: !7180, file: !7107, line: 24, column: 2)
!7180 = distinct !DILexicalBlock(scope: !7181, file: !7107, line: 24, column: 2)
!7181 = distinct !DILexicalBlock(scope: !7166, file: !7107, line: 24, column: 2)
!7182 = !DILocation(line: 26, column: 2, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7184, file: !7107, line: 26, column: 2)
!7184 = distinct !DILexicalBlock(scope: !7185, file: !7107, line: 26, column: 2)
!7185 = distinct !DILexicalBlock(scope: !7186, file: !7107, line: 26, column: 2)
!7186 = distinct !DILexicalBlock(scope: !7166, file: !7107, line: 26, column: 2)
!7187 = !DILocation(line: 53, column: 2, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !7107, line: 53, column: 2)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !7107, line: 53, column: 2)
!7190 = distinct !DILexicalBlock(scope: !7191, file: !7107, line: 53, column: 2)
!7191 = distinct !DILexicalBlock(scope: !7166, file: !7107, line: 53, column: 2)
!7192 = !DILocation(line: 55, column: 1, scope: !7166)
!7193 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7107, file: !7107, line: 82, type: !7194, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !7209)
!7194 = !DISubroutineType(types: !7195)
!7195 = !{null, !7110, !7196}
!7196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7197, size: 32)
!7197 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7198)
!7198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7199)
!7199 = !{!7200, !7201, !7202, !7203, !7204, !7205, !7206, !7207, !7208}
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7198, file: !214, line: 26, baseType: !108, size: 32)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7198, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7198, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7198, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7198, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7198, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7198, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7198, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7198, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7209 = !{!7210, !7211, !7212}
!7210 = !DILocalVariable(name: "esf", arg: 1, scope: !7193, file: !7107, line: 82, type: !7110)
!7211 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7193, file: !7107, line: 82, type: !7196)
!7212 = !DILocalVariable(name: "reason", scope: !7193, file: !7107, line: 88, type: !32)
!7213 = !DILocation(line: 0, scope: !7193)
!7214 = !DILocation(line: 88, column: 35, scope: !7193)
!7215 = !DILocation(line: 108, column: 2, scope: !7193)
!7216 = !DILocation(line: 131, column: 1, scope: !7193)
!7217 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7107, file: !7107, line: 133, type: !7218, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !7220)
!7218 = !DISubroutineType(types: !7219)
!7219 = !{null, !102}
!7220 = !{!7221, !7222, !7223}
!7221 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7217, file: !7107, line: 133, type: !102)
!7222 = !DILocalVariable(name: "ssf_contents", scope: !7217, file: !7107, line: 135, type: !1045)
!7223 = !DILocalVariable(name: "oops_esf", scope: !7217, file: !7107, line: 136, type: !7112)
!7224 = !DILocation(line: 0, scope: !7217)
!7225 = !DILocation(line: 136, column: 2, scope: !7217)
!7226 = !DILocation(line: 136, column: 15, scope: !7217)
!7227 = !DILocation(line: 139, column: 22, scope: !7217)
!7228 = !DILocation(line: 139, column: 17, scope: !7217)
!7229 = !DILocation(line: 139, column: 20, scope: !7217)
!7230 = !DILocation(line: 141, column: 2, scope: !7217)
!7231 = !DILocation(line: 142, column: 2, scope: !7217)
!7232 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7233, file: !7233, line: 40, type: !6957, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !7234)
!7233 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7234 = !{!7235}
!7235 = !DILocalVariable(name: "irq", arg: 1, scope: !7232, file: !7233, line: 40, type: !32)
!7236 = !DILocation(line: 0, scope: !7232)
!7237 = !DILocation(line: 42, column: 2, scope: !7232)
!7238 = !DILocation(line: 43, column: 1, scope: !7232)
!7239 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !637, file: !637, line: 1508, type: !7240, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !7242)
!7240 = !DISubroutineType(types: !7241)
!7241 = !{null, !972}
!7242 = !{!7243}
!7243 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7239, file: !637, line: 1508, type: !972)
!7244 = !DILocation(line: 0, scope: !7239)
!7245 = !DILocation(line: 1510, column: 23, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7239, file: !637, line: 1510, column: 7)
!7247 = !DILocation(line: 1510, column: 7, scope: !7239)
!7248 = !DILocation(line: 1512, column: 5, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7246, file: !637, line: 1511, column: 3)
!7250 = !{i64 2149970536}
!7251 = !DILocation(line: 1513, column: 81, scope: !7249)
!7252 = !DILocation(line: 1513, column: 60, scope: !7249)
!7253 = !DILocation(line: 1513, column: 34, scope: !7249)
!7254 = !DILocation(line: 1513, column: 5, scope: !7249)
!7255 = !DILocation(line: 1513, column: 43, scope: !7249)
!7256 = !DILocation(line: 1514, column: 5, scope: !7249)
!7257 = !{i64 2149970650}
!7258 = !DILocation(line: 1515, column: 3, scope: !7249)
!7259 = !DILocation(line: 1516, column: 1, scope: !7239)
!7260 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7233, file: !7233, line: 45, type: !6957, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !7261)
!7261 = !{!7262}
!7262 = !DILocalVariable(name: "irq", arg: 1, scope: !7260, file: !7233, line: 45, type: !32)
!7263 = !DILocation(line: 0, scope: !7260)
!7264 = !DILocation(line: 47, column: 2, scope: !7260)
!7265 = !DILocation(line: 48, column: 1, scope: !7260)
!7266 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !637, file: !637, line: 1546, type: !7240, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !7267)
!7267 = !{!7268}
!7268 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7266, file: !637, line: 1546, type: !972)
!7269 = !DILocation(line: 0, scope: !7266)
!7270 = !DILocation(line: 1548, column: 23, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7266, file: !637, line: 1548, column: 7)
!7272 = !DILocation(line: 1548, column: 7, scope: !7266)
!7273 = !DILocation(line: 1550, column: 81, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7271, file: !637, line: 1549, column: 3)
!7275 = !DILocation(line: 1550, column: 60, scope: !7274)
!7276 = !DILocation(line: 1550, column: 34, scope: !7274)
!7277 = !DILocation(line: 1550, column: 5, scope: !7274)
!7278 = !DILocation(line: 1550, column: 43, scope: !7274)
!7279 = !DILocation(line: 271, column: 3, scope: !7280, inlinedAt: !7282)
!7280 = distinct !DISubprogram(name: "__DSB", scope: !7281, file: !7281, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !251)
!7281 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7282 = distinct !DILocation(line: 1551, column: 5, scope: !7274)
!7283 = !{i64 2428038}
!7284 = !DILocation(line: 260, column: 3, scope: !7285, inlinedAt: !7286)
!7285 = distinct !DISubprogram(name: "__ISB", scope: !7281, file: !7281, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !251)
!7286 = distinct !DILocation(line: 1552, column: 5, scope: !7274)
!7287 = !{i64 2427755}
!7288 = !DILocation(line: 1553, column: 3, scope: !7274)
!7289 = !DILocation(line: 1554, column: 1, scope: !7266)
!7290 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7233, file: !7233, line: 50, type: !7291, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !7293)
!7291 = !DISubroutineType(types: !7292)
!7292 = !{!103, !32}
!7293 = !{!7294}
!7294 = !DILocalVariable(name: "irq", arg: 1, scope: !7290, file: !7233, line: 50, type: !32)
!7295 = !DILocation(line: 0, scope: !7290)
!7296 = !DILocation(line: 52, column: 20, scope: !7290)
!7297 = !DILocation(line: 52, column: 9, scope: !7290)
!7298 = !DILocation(line: 52, column: 41, scope: !7290)
!7299 = !DILocation(line: 52, column: 39, scope: !7290)
!7300 = !DILocation(line: 52, column: 2, scope: !7290)
!7301 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7233, file: !7233, line: 64, type: !7302, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !7304)
!7302 = !DISubroutineType(types: !7303)
!7303 = !{null, !32, !32, !108}
!7304 = !{!7305, !7306, !7307}
!7305 = !DILocalVariable(name: "irq", arg: 1, scope: !7301, file: !7233, line: 64, type: !32)
!7306 = !DILocalVariable(name: "prio", arg: 2, scope: !7301, file: !7233, line: 64, type: !32)
!7307 = !DILocalVariable(name: "flags", arg: 3, scope: !7301, file: !7233, line: 64, type: !108)
!7308 = !DILocation(line: 0, scope: !7301)
!7309 = !DILocation(line: 83, column: 8, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7311, file: !7233, line: 82, column: 9)
!7311 = distinct !DILexicalBlock(scope: !7301, file: !7233, line: 76, column: 6)
!7312 = !DILocation(line: 95, column: 2, scope: !7301)
!7313 = !DILocation(line: 96, column: 1, scope: !7301)
!7314 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !637, file: !637, line: 1638, type: !7315, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !7317)
!7315 = !DISubroutineType(types: !7316)
!7316 = !{null, !972, !108}
!7317 = !{!7318, !7319}
!7318 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7314, file: !637, line: 1638, type: !972)
!7319 = !DILocalVariable(name: "priority", arg: 2, scope: !7314, file: !637, line: 1638, type: !108)
!7320 = !DILocation(line: 0, scope: !7314)
!7321 = !DILocation(line: 0, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7314, file: !637, line: 1640, column: 7)
!7323 = !DILocation(line: 1640, column: 7, scope: !7314)
!7324 = !DILocation(line: 1648, column: 1, scope: !7314)
!7325 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7233, file: !7233, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2743, retainedNodes: !7326)
!7326 = !{!7327}
!7327 = !DILocalVariable(name: "unused", arg: 1, scope: !7325, file: !7233, line: 155, type: !13)
!7328 = !DILocation(line: 0, scope: !7325)
!7329 = !DILocation(line: 159, column: 2, scope: !7325)
!7330 = !DILocation(line: 160, column: 1, scope: !7325)
!7331 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7332, file: !7332, line: 87, type: !334, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2789, retainedNodes: !251)
!7332 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7333 = !DILocation(line: 89, column: 2, scope: !7331)
!7334 = !DILocation(line: 90, column: 2, scope: !7331)
!7335 = !DILocation(line: 91, column: 1, scope: !7331)
!7336 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7332, file: !7332, line: 23, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!7337 = !DISubprogram(name: "z_arm_int_exit", scope: !7338, file: !7338, line: 153, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!7338 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7339 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7340, file: !7340, line: 256, type: !334, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !251)
!7340 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7341 = !DILocation(line: 258, column: 2, scope: !7339)
!7342 = !DILocation(line: 262, column: 2, scope: !7339)
!7343 = !DILocation(line: 263, column: 2, scope: !7339)
!7344 = !DILocation(line: 267, column: 2, scope: !7339)
!7345 = !DILocation(line: 268, column: 2, scope: !7339)
!7346 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7340, file: !7340, line: 53, type: !334, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !251)
!7347 = !DILocation(line: 55, column: 12, scope: !7346)
!7348 = !DILocation(line: 271, column: 3, scope: !7349, inlinedAt: !7350)
!7349 = distinct !DISubprogram(name: "__DSB", scope: !7281, file: !7281, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !251)
!7350 = distinct !DILocation(line: 56, column: 2, scope: !7346)
!7351 = !{i64 2426709}
!7352 = !DILocation(line: 260, column: 3, scope: !7353, inlinedAt: !7354)
!7353 = distinct !DISubprogram(name: "__ISB", scope: !7281, file: !7281, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2791, retainedNodes: !251)
!7354 = distinct !DILocation(line: 57, column: 2, scope: !7346)
!7355 = !{i64 2426426}
!7356 = !DILocation(line: 58, column: 1, scope: !7346)
!7357 = distinct !DISubprogram(name: "arch_swap", scope: !7358, file: !7358, line: 33, type: !7291, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !7359)
!7358 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7359 = !{!7360}
!7360 = !DILocalVariable(name: "key", arg: 1, scope: !7357, file: !7358, line: 33, type: !32)
!7361 = !DILocation(line: 0, scope: !7357)
!7362 = !DILocation(line: 36, column: 2, scope: !7357)
!7363 = !DILocation(line: 36, column: 17, scope: !7357)
!7364 = !DILocation(line: 36, column: 25, scope: !7357)
!7365 = !DILocation(line: 37, column: 37, scope: !7357)
!7366 = !DILocation(line: 37, column: 17, scope: !7357)
!7367 = !DILocation(line: 37, column: 35, scope: !7357)
!7368 = !DILocation(line: 41, column: 12, scope: !7357)
!7369 = !DILocalVariable(name: "key", arg: 1, scope: !7370, file: !6946, line: 84, type: !32)
!7370 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6946, file: !6946, line: 84, type: !6957, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !7371)
!7371 = !{!7369}
!7372 = !DILocation(line: 0, scope: !7370, inlinedAt: !7373)
!7373 = distinct !DILocation(line: 44, column: 2, scope: !7357)
!7374 = !DILocation(line: 95, column: 2, scope: !7370, inlinedAt: !7373)
!7375 = !{i64 1649709}
!7376 = !DILocation(line: 53, column: 9, scope: !7357)
!7377 = !DILocation(line: 53, column: 24, scope: !7357)
!7378 = !DILocation(line: 53, column: 2, scope: !7357)
!7379 = distinct !DISubprogram(name: "arch_new_thread", scope: !7380, file: !7380, line: 56, type: !7381, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !7488)
!7380 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7381 = !DISubroutineType(types: !7382)
!7382 = !{null, !7383, !7483, !277, !321, !102, !102, !102}
!7383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7384, size: 32)
!7384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !7385)
!7385 = !{!7386, !7444, !7456, !7457, !7458, !7459, !7465, !7478}
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7384, file: !163, line: 247, baseType: !7387, size: 384)
!7387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !7388)
!7388 = !{!7389, !7413, !7420, !7421, !7422, !7431, !7432, !7433}
!7389 = !DIDerivedType(tag: DW_TAG_member, scope: !7387, file: !163, line: 60, baseType: !7390, size: 64)
!7390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7387, file: !163, line: 60, size: 64, elements: !7391)
!7391 = !{!7392, !7407}
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7390, file: !163, line: 61, baseType: !7393, size: 64)
!7393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !7394)
!7394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !7395)
!7395 = !{!7396, !7402}
!7396 = !DIDerivedType(tag: DW_TAG_member, scope: !7394, file: !146, line: 38, baseType: !7397, size: 32)
!7397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7394, file: !146, line: 38, size: 32, elements: !7398)
!7398 = !{!7399, !7401}
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7397, file: !146, line: 39, baseType: !7400, size: 32)
!7400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7394, size: 32)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7397, file: !146, line: 40, baseType: !7400, size: 32)
!7402 = !DIDerivedType(tag: DW_TAG_member, scope: !7394, file: !146, line: 42, baseType: !7403, size: 32, offset: 32)
!7403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7394, file: !146, line: 42, size: 32, elements: !7404)
!7404 = !{!7405, !7406}
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7403, file: !146, line: 43, baseType: !7400, size: 32)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7403, file: !146, line: 44, baseType: !7400, size: 32)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7390, file: !163, line: 62, baseType: !7408, size: 64)
!7408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !7409)
!7409 = !{!7410}
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7408, file: !175, line: 50, baseType: !7411, size: 64)
!7411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7412, size: 64, elements: !180)
!7412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7408, size: 32)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7387, file: !163, line: 68, baseType: !7414, size: 32, offset: 64)
!7414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7415, size: 32)
!7415 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !7416)
!7416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !7417)
!7417 = !{!7418}
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7416, file: !141, line: 232, baseType: !7419, size: 64)
!7419 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !7394)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7387, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7387, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!7422 = !DIDerivedType(tag: DW_TAG_member, scope: !7387, file: !163, line: 90, baseType: !7423, size: 16, offset: 112)
!7423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7387, file: !163, line: 90, size: 16, elements: !7424)
!7424 = !{!7425, !7430}
!7425 = !DIDerivedType(tag: DW_TAG_member, scope: !7423, file: !163, line: 91, baseType: !7426, size: 16)
!7426 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7423, file: !163, line: 91, size: 16, elements: !7427)
!7427 = !{!7428, !7429}
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7426, file: !163, line: 96, baseType: !195, size: 8)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7426, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7423, file: !163, line: 100, baseType: !121, size: 16)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7387, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7387, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7387, file: !163, line: 131, baseType: !7434, size: 192, offset: 192)
!7434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !7435)
!7435 = !{!7436, !7437, !7443}
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7434, file: !141, line: 245, baseType: !7393, size: 64)
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7434, file: !141, line: 246, baseType: !7438, size: 32, offset: 64)
!7438 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !7439)
!7439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7440, size: 32)
!7440 = !DISubroutineType(types: !7441)
!7441 = !{null, !7442}
!7442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7434, size: 32)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7434, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7384, file: !163, line: 250, baseType: !7445, size: 288, offset: 384)
!7445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7446)
!7446 = !{!7447, !7448, !7449, !7450, !7451, !7452, !7453, !7454, !7455}
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7445, file: !214, line: 26, baseType: !108, size: 32)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7445, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7445, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7445, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7445, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7445, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7445, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7445, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7445, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7384, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7384, file: !163, line: 256, baseType: !7415, size: 64, offset: 704)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7384, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7384, file: !163, line: 300, baseType: !7460, size: 96, offset: 800)
!7460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !7461)
!7461 = !{!7462, !7463, !7464}
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7460, file: !163, line: 153, baseType: !22, size: 32)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7460, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7460, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7384, file: !163, line: 325, baseType: !7466, size: 32, offset: 896)
!7466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7467, size: 32)
!7467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !7468)
!7468 = !{!7469, !7475, !7476}
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7467, file: !137, line: 5074, baseType: !7470, size: 96)
!7470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !7471)
!7471 = !{!7472, !7473, !7474}
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7470, file: !240, line: 57, baseType: !243, size: 32)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7470, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7470, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7467, file: !137, line: 5075, baseType: !7415, size: 64, offset: 96)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7467, file: !137, line: 5076, baseType: !7477, offset: 160)
!7477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7384, file: !163, line: 343, baseType: !7479, size: 64, offset: 928)
!7479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !7480)
!7480 = !{!7481, !7482}
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7479, file: !214, line: 63, baseType: !108, size: 32)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7479, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!7483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7484, size: 32)
!7484 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !7485)
!7485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !7486)
!7486 = !{!7487}
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7485, file: !316, line: 48, baseType: !278, size: 8)
!7488 = !{!7489, !7490, !7491, !7492, !7493, !7494, !7495, !7496}
!7489 = !DILocalVariable(name: "thread", arg: 1, scope: !7379, file: !7380, line: 56, type: !7383)
!7490 = !DILocalVariable(name: "stack", arg: 2, scope: !7379, file: !7380, line: 56, type: !7483)
!7491 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7379, file: !7380, line: 57, type: !277)
!7492 = !DILocalVariable(name: "entry", arg: 4, scope: !7379, file: !7380, line: 57, type: !321)
!7493 = !DILocalVariable(name: "p1", arg: 5, scope: !7379, file: !7380, line: 58, type: !102)
!7494 = !DILocalVariable(name: "p2", arg: 6, scope: !7379, file: !7380, line: 58, type: !102)
!7495 = !DILocalVariable(name: "p3", arg: 7, scope: !7379, file: !7380, line: 58, type: !102)
!7496 = !DILocalVariable(name: "iframe", scope: !7379, file: !7380, line: 60, type: !2850)
!7497 = !DILocation(line: 0, scope: !7379)
!7498 = !DILocation(line: 85, column: 11, scope: !7379)
!7499 = !DILocation(line: 93, column: 10, scope: !7379)
!7500 = !DILocation(line: 98, column: 13, scope: !7379)
!7501 = !DILocation(line: 100, column: 15, scope: !7379)
!7502 = !DILocation(line: 100, column: 10, scope: !7379)
!7503 = !DILocation(line: 100, column: 13, scope: !7379)
!7504 = !DILocation(line: 101, column: 15, scope: !7379)
!7505 = !DILocation(line: 101, column: 10, scope: !7379)
!7506 = !DILocation(line: 101, column: 13, scope: !7379)
!7507 = !DILocation(line: 102, column: 15, scope: !7379)
!7508 = !DILocation(line: 102, column: 10, scope: !7379)
!7509 = !DILocation(line: 102, column: 13, scope: !7379)
!7510 = !DILocation(line: 103, column: 15, scope: !7379)
!7511 = !DILocation(line: 103, column: 10, scope: !7379)
!7512 = !DILocation(line: 103, column: 13, scope: !7379)
!7513 = !DILocation(line: 106, column: 10, scope: !7379)
!7514 = !DILocation(line: 106, column: 15, scope: !7379)
!7515 = !DILocation(line: 122, column: 29, scope: !7379)
!7516 = !DILocation(line: 122, column: 23, scope: !7379)
!7517 = !DILocation(line: 122, column: 27, scope: !7379)
!7518 = !DILocation(line: 123, column: 15, scope: !7379)
!7519 = !DILocation(line: 123, column: 23, scope: !7379)
!7520 = !DILocation(line: 143, column: 1, scope: !7379)
!7521 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7380, file: !7380, line: 385, type: !7522, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !7525)
!7522 = !DISubroutineType(types: !7523)
!7523 = !{!108, !7524, !7524}
!7524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!7525 = !{!7526, !7527, !7528, !7531}
!7526 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7521, file: !7380, line: 385, type: !7524)
!7527 = !DILocalVariable(name: "psp", arg: 2, scope: !7521, file: !7380, line: 385, type: !7524)
!7528 = !DILocalVariable(name: "thread", scope: !7521, file: !7380, line: 388, type: !7529)
!7529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7530, size: 32)
!7530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7384)
!7531 = !DILocalVariable(name: "guard_len", scope: !7521, file: !7380, line: 405, type: !108)
!7532 = !DILocation(line: 0, scope: !7521)
!7533 = !DILocation(line: 388, column: 34, scope: !7521)
!7534 = !DILocation(line: 390, column: 13, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7521, file: !7380, line: 390, column: 6)
!7536 = !DILocation(line: 390, column: 6, scope: !7521)
!7537 = !DILocation(line: 438, column: 6, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7521, file: !7380, line: 438, column: 6)
!7539 = !DILocation(line: 438, column: 6, scope: !7521)
!7540 = !DILocation(line: 442, column: 3, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7538, file: !7380, line: 440, column: 22)
!7542 = !DILocation(line: 455, column: 1, scope: !7521)
!7543 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7380, file: !7380, line: 530, type: !7544, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !7546)
!7544 = !DISubroutineType(types: !7545)
!7545 = !{null, !7383, !277, !321}
!7546 = !{!7547, !7548, !7549}
!7547 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7543, file: !7380, line: 530, type: !7383)
!7548 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7543, file: !7380, line: 530, type: !277)
!7549 = !DILocalVariable(name: "_main", arg: 3, scope: !7543, file: !7380, line: 531, type: !321)
!7550 = !DILocation(line: 0, scope: !7543)
!7551 = !DILocation(line: 535, column: 11, scope: !7543)
!7552 = !DILocation(line: 560, column: 2, scope: !7543)
!7553 = !DILocation(line: 576, column: 2, scope: !7543)
!7554 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7555 = !DILocation(line: 603, column: 2, scope: !7543)
!7556 = distinct !DISubprogram(name: "z_arm_fault", scope: !7557, file: !7557, line: 1036, type: !7558, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7573)
!7557 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7558 = !DISubroutineType(types: !7559)
!7559 = !{null, !108, !108, !108, !7560}
!7560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7561, size: 32)
!7561 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7562)
!7562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7563)
!7563 = !{!7564, !7565, !7566, !7567, !7568, !7569, !7570, !7571, !7572}
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7562, file: !214, line: 26, baseType: !108, size: 32)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7562, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7562, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7562, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7562, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7562, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7562, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7562, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7562, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7573 = !{!7574, !7575, !7576, !7577, !7578, !7579, !7580, !7581, !7582, !7583}
!7574 = !DILocalVariable(name: "msp", arg: 1, scope: !7556, file: !7557, line: 1036, type: !108)
!7575 = !DILocalVariable(name: "psp", arg: 2, scope: !7556, file: !7557, line: 1036, type: !108)
!7576 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7556, file: !7557, line: 1036, type: !108)
!7577 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7556, file: !7557, line: 1037, type: !7560)
!7578 = !DILocalVariable(name: "reason", scope: !7556, file: !7557, line: 1039, type: !108)
!7579 = !DILocalVariable(name: "fault", scope: !7556, file: !7557, line: 1040, type: !103)
!7580 = !DILocalVariable(name: "recoverable", scope: !7556, file: !7557, line: 1041, type: !131)
!7581 = !DILocalVariable(name: "nested_exc", scope: !7556, file: !7557, line: 1041, type: !131)
!7582 = !DILocalVariable(name: "esf", scope: !7556, file: !7557, line: 1042, type: !2918)
!7583 = !DILocalVariable(name: "esf_copy", scope: !7556, file: !7557, line: 1047, type: !2919)
!7584 = !DILocation(line: 0, scope: !7556)
!7585 = !DILocation(line: 1040, column: 19, scope: !7556)
!7586 = !DILocation(line: 1040, column: 24, scope: !7556)
!7587 = !DILocation(line: 1041, column: 2, scope: !7556)
!7588 = !DILocation(line: 1047, column: 2, scope: !7556)
!7589 = !DILocation(line: 1047, column: 15, scope: !7556)
!7590 = !DILocalVariable(name: "key", arg: 1, scope: !7591, file: !6946, line: 84, type: !32)
!7591 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6946, file: !6946, line: 84, type: !6957, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7592)
!7592 = !{!7590}
!7593 = !DILocation(line: 0, scope: !7591, inlinedAt: !7594)
!7594 = distinct !DILocation(line: 1050, column: 2, scope: !7556)
!7595 = !DILocation(line: 95, column: 2, scope: !7591, inlinedAt: !7594)
!7596 = !{i64 1682953}
!7597 = !DILocation(line: 1055, column: 9, scope: !7556)
!7598 = !DILocation(line: 1063, column: 11, scope: !7556)
!7599 = !DILocation(line: 1064, column: 6, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7556, file: !7557, line: 1064, column: 6)
!7601 = !{i8 0, i8 2}
!7602 = !DILocation(line: 1064, column: 6, scope: !7556)
!7603 = !DILocation(line: 1070, column: 20, scope: !7556)
!7604 = !DILocation(line: 1070, column: 2, scope: !7556)
!7605 = !DILocation(line: 1089, column: 6, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7556, file: !7557, line: 1089, column: 6)
!7607 = !DILocation(line: 0, scope: !7606)
!7608 = !DILocation(line: 1089, column: 6, scope: !7556)
!7609 = !DILocation(line: 1090, column: 28, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7611, file: !7557, line: 1090, column: 7)
!7611 = distinct !DILexicalBlock(scope: !7606, file: !7557, line: 1089, column: 18)
!7612 = !DILocation(line: 1090, column: 44, scope: !7610)
!7613 = !DILocation(line: 1090, column: 7, scope: !7611)
!7614 = !DILocation(line: 1091, column: 24, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7610, file: !7557, line: 1090, column: 50)
!7616 = !DILocation(line: 1092, column: 3, scope: !7615)
!7617 = !DILocation(line: 1094, column: 23, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7606, file: !7557, line: 1093, column: 9)
!7619 = !DILocation(line: 1097, column: 2, scope: !7556)
!7620 = !DILocation(line: 1098, column: 1, scope: !7556)
!7621 = distinct !DISubprogram(name: "get_esf", scope: !7557, file: !7557, line: 894, type: !7622, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7625)
!7622 = !DISubroutineType(types: !7623)
!7623 = !{!2918, !108, !108, !108, !7624}
!7624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!7625 = !{!7626, !7627, !7628, !7629, !7630, !7631}
!7626 = !DILocalVariable(name: "msp", arg: 1, scope: !7621, file: !7557, line: 894, type: !108)
!7627 = !DILocalVariable(name: "psp", arg: 2, scope: !7621, file: !7557, line: 894, type: !108)
!7628 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7621, file: !7557, line: 894, type: !108)
!7629 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7621, file: !7557, line: 895, type: !7624)
!7630 = !DILocalVariable(name: "alternative_state_exc", scope: !7621, file: !7557, line: 897, type: !131)
!7631 = !DILocalVariable(name: "ptr_esf", scope: !7621, file: !7557, line: 898, type: !2918)
!7632 = !DILocation(line: 0, scope: !7621)
!7633 = !DILocation(line: 900, column: 14, scope: !7621)
!7634 = !DILocation(line: 902, column: 49, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7621, file: !7557, line: 902, column: 6)
!7636 = !DILocation(line: 902, column: 6, scope: !7621)
!7637 = !DILocation(line: 983, column: 44, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7621, file: !7557, line: 983, column: 6)
!7639 = !DILocation(line: 985, column: 3, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !7557, line: 985, column: 3)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !7557, line: 985, column: 3)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !7557, line: 985, column: 3)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !7557, line: 985, column: 3)
!7644 = distinct !DILexicalBlock(scope: !7638, file: !7557, line: 984, column: 47)
!7645 = !DILocation(line: 986, column: 3, scope: !7644)
!7646 = !DILocation(line: 983, column: 18, scope: !7638)
!7647 = !DILocation(line: 991, column: 7, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !7557, line: 990, column: 30)
!7649 = distinct !DILexicalBlock(scope: !7621, file: !7557, line: 990, column: 6)
!7650 = !DILocation(line: 998, column: 16, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !7557, line: 995, column: 10)
!7652 = distinct !DILexicalBlock(scope: !7648, file: !7557, line: 991, column: 7)
!7653 = !DILocation(line: 1002, column: 2, scope: !7621)
!7654 = !DILocation(line: 1003, column: 1, scope: !7621)
!7655 = distinct !DISubprogram(name: "fault_handle", scope: !7557, file: !7557, line: 786, type: !7656, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7658)
!7656 = !DISubroutineType(types: !7657)
!7657 = !{!108, !2918, !103, !7624}
!7658 = !{!7659, !7660, !7661, !7662}
!7659 = !DILocalVariable(name: "esf", arg: 1, scope: !7655, file: !7557, line: 786, type: !2918)
!7660 = !DILocalVariable(name: "fault", arg: 2, scope: !7655, file: !7557, line: 786, type: !103)
!7661 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7655, file: !7557, line: 786, type: !7624)
!7662 = !DILocalVariable(name: "reason", scope: !7655, file: !7557, line: 788, type: !108)
!7663 = !DILocation(line: 0, scope: !7655)
!7664 = !DILocation(line: 790, column: 15, scope: !7655)
!7665 = !DILocation(line: 792, column: 2, scope: !7655)
!7666 = !DILocation(line: 794, column: 12, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7655, file: !7557, line: 792, column: 17)
!7668 = !DILocation(line: 795, column: 3, scope: !7667)
!7669 = !DILocation(line: 800, column: 12, scope: !7667)
!7670 = !DILocation(line: 801, column: 3, scope: !7667)
!7671 = !DILocation(line: 803, column: 12, scope: !7667)
!7672 = !DILocation(line: 804, column: 3, scope: !7667)
!7673 = !DILocation(line: 806, column: 12, scope: !7667)
!7674 = !DILocation(line: 807, column: 3, scope: !7667)
!7675 = !DILocation(line: 814, column: 3, scope: !7667)
!7676 = !DILocation(line: 815, column: 3, scope: !7667)
!7677 = !DILocation(line: 820, column: 3, scope: !7667)
!7678 = !DILocation(line: 821, column: 3, scope: !7667)
!7679 = !DILocation(line: 829, column: 2, scope: !7655)
!7680 = distinct !DISubprogram(name: "hard_fault", scope: !7557, file: !7557, line: 709, type: !7681, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7683)
!7681 = !DISubroutineType(types: !7682)
!7682 = !{!108, !2918, !7624}
!7683 = !{!7684, !7685, !7686}
!7684 = !DILocalVariable(name: "esf", arg: 1, scope: !7680, file: !7557, line: 709, type: !2918)
!7685 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7680, file: !7557, line: 709, type: !7624)
!7686 = !DILocalVariable(name: "reason", scope: !7680, file: !7557, line: 711, type: !108)
!7687 = !DILocation(line: 0, scope: !7680)
!7688 = !DILocation(line: 713, column: 2, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7690, file: !7557, line: 713, column: 2)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !7557, line: 713, column: 2)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !7557, line: 713, column: 2)
!7692 = distinct !DILexicalBlock(scope: !7680, file: !7557, line: 713, column: 2)
!7693 = !DILocation(line: 732, column: 15, scope: !7680)
!7694 = !DILocation(line: 734, column: 12, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7680, file: !7557, line: 734, column: 6)
!7696 = !DILocation(line: 734, column: 17, scope: !7695)
!7697 = !DILocation(line: 734, column: 41, scope: !7695)
!7698 = !DILocation(line: 734, column: 6, scope: !7680)
!7699 = !DILocation(line: 735, column: 3, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7701, file: !7557, line: 735, column: 3)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !7557, line: 735, column: 3)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !7557, line: 735, column: 3)
!7703 = distinct !DILexicalBlock(scope: !7704, file: !7557, line: 735, column: 3)
!7704 = distinct !DILexicalBlock(scope: !7695, file: !7557, line: 734, column: 47)
!7705 = !DILocation(line: 736, column: 2, scope: !7704)
!7706 = !DILocation(line: 736, column: 19, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7695, file: !7557, line: 736, column: 13)
!7708 = !DILocation(line: 736, column: 49, scope: !7707)
!7709 = !DILocation(line: 736, column: 13, scope: !7695)
!7710 = !DILocation(line: 737, column: 3, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !7557, line: 737, column: 3)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !7557, line: 737, column: 3)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !7557, line: 737, column: 3)
!7714 = distinct !DILexicalBlock(scope: !7715, file: !7557, line: 737, column: 3)
!7715 = distinct !DILexicalBlock(scope: !7707, file: !7557, line: 736, column: 55)
!7716 = !DILocation(line: 738, column: 2, scope: !7715)
!7717 = !DILocation(line: 738, column: 19, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7707, file: !7557, line: 738, column: 13)
!7719 = !DILocation(line: 738, column: 24, scope: !7718)
!7720 = !DILocation(line: 738, column: 47, scope: !7718)
!7721 = !DILocation(line: 738, column: 13, scope: !7707)
!7722 = !DILocation(line: 739, column: 3, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7724, file: !7557, line: 739, column: 3)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !7557, line: 739, column: 3)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !7557, line: 739, column: 3)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !7557, line: 739, column: 3)
!7727 = distinct !DILexicalBlock(scope: !7718, file: !7557, line: 738, column: 53)
!7728 = !DILocation(line: 740, column: 7, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7727, file: !7557, line: 740, column: 7)
!7730 = !DILocation(line: 740, column: 7, scope: !7727)
!7731 = !DILocation(line: 741, column: 4, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7733, file: !7557, line: 741, column: 4)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !7557, line: 741, column: 4)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !7557, line: 741, column: 4)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !7557, line: 741, column: 4)
!7736 = distinct !DILexicalBlock(scope: !7729, file: !7557, line: 740, column: 38)
!7737 = !DILocation(line: 742, column: 24, scope: !7736)
!7738 = !DILocation(line: 743, column: 3, scope: !7736)
!7739 = !DILocation(line: 743, column: 20, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7729, file: !7557, line: 743, column: 14)
!7741 = !DILocation(line: 743, column: 25, scope: !7740)
!7742 = !DILocation(line: 743, column: 52, scope: !7740)
!7743 = !DILocation(line: 743, column: 14, scope: !7729)
!7744 = !DILocation(line: 744, column: 13, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7740, file: !7557, line: 743, column: 58)
!7746 = !DILocation(line: 745, column: 3, scope: !7745)
!7747 = !DILocation(line: 745, column: 20, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7740, file: !7557, line: 745, column: 14)
!7749 = !DILocation(line: 745, column: 25, scope: !7748)
!7750 = !DILocation(line: 745, column: 52, scope: !7748)
!7751 = !DILocation(line: 745, column: 14, scope: !7740)
!7752 = !DILocation(line: 746, column: 13, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7748, file: !7557, line: 745, column: 58)
!7754 = !DILocation(line: 747, column: 3, scope: !7753)
!7755 = !DILocation(line: 747, column: 20, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7748, file: !7557, line: 747, column: 14)
!7757 = !DILocation(line: 747, column: 52, scope: !7756)
!7758 = !DILocation(line: 747, column: 14, scope: !7748)
!7759 = !DILocation(line: 748, column: 13, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7756, file: !7557, line: 747, column: 58)
!7761 = !DILocation(line: 753, column: 3, scope: !7760)
!7762 = !DILocation(line: 766, column: 2, scope: !7680)
!7763 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7557, file: !7557, line: 229, type: !7656, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7764)
!7764 = !{!7765, !7766, !7767, !7768, !7769, !7770, !7773}
!7765 = !DILocalVariable(name: "esf", arg: 1, scope: !7763, file: !7557, line: 229, type: !2918)
!7766 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7763, file: !7557, line: 229, type: !103)
!7767 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7763, file: !7557, line: 230, type: !7624)
!7768 = !DILocalVariable(name: "reason", scope: !7763, file: !7557, line: 232, type: !108)
!7769 = !DILocalVariable(name: "mmfar", scope: !7763, file: !7557, line: 233, type: !108)
!7770 = !DILocalVariable(name: "temp", scope: !7771, file: !7557, line: 254, type: !108)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !7557, line: 244, column: 48)
!7772 = distinct !DILexicalBlock(scope: !7763, file: !7557, line: 244, column: 6)
!7773 = !DILocalVariable(name: "min_stack_ptr", scope: !7774, file: !7557, line: 309, type: !108)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !7557, line: 308, column: 43)
!7775 = distinct !DILexicalBlock(scope: !7776, file: !7557, line: 308, column: 7)
!7776 = distinct !DILexicalBlock(scope: !7777, file: !7557, line: 289, column: 40)
!7777 = distinct !DILexicalBlock(scope: !7763, file: !7557, line: 288, column: 6)
!7778 = !DILocation(line: 0, scope: !7763)
!7779 = !DILocation(line: 235, column: 2, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !7557, line: 235, column: 2)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !7557, line: 235, column: 2)
!7782 = distinct !DILexicalBlock(scope: !7783, file: !7557, line: 235, column: 2)
!7783 = distinct !DILexicalBlock(scope: !7763, file: !7557, line: 235, column: 2)
!7784 = !DILocation(line: 237, column: 12, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7763, file: !7557, line: 237, column: 6)
!7786 = !DILocation(line: 237, column: 17, scope: !7785)
!7787 = !DILocation(line: 237, column: 41, scope: !7785)
!7788 = !DILocation(line: 237, column: 6, scope: !7763)
!7789 = !DILocation(line: 238, column: 3, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !7557, line: 238, column: 3)
!7791 = distinct !DILexicalBlock(scope: !7792, file: !7557, line: 238, column: 3)
!7792 = distinct !DILexicalBlock(scope: !7793, file: !7557, line: 238, column: 3)
!7793 = distinct !DILexicalBlock(scope: !7794, file: !7557, line: 238, column: 3)
!7794 = distinct !DILexicalBlock(scope: !7785, file: !7557, line: 237, column: 47)
!7795 = !DILocation(line: 240, column: 2, scope: !7794)
!7796 = !DILocation(line: 241, column: 12, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7763, file: !7557, line: 241, column: 6)
!7798 = !DILocation(line: 241, column: 17, scope: !7797)
!7799 = !DILocation(line: 241, column: 43, scope: !7797)
!7800 = !DILocation(line: 241, column: 6, scope: !7763)
!7801 = !DILocation(line: 242, column: 3, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !7557, line: 242, column: 3)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !7557, line: 242, column: 3)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !7557, line: 242, column: 3)
!7805 = distinct !DILexicalBlock(scope: !7806, file: !7557, line: 242, column: 3)
!7806 = distinct !DILexicalBlock(scope: !7797, file: !7557, line: 241, column: 49)
!7807 = !DILocation(line: 243, column: 2, scope: !7806)
!7808 = !DILocation(line: 244, column: 12, scope: !7772)
!7809 = !DILocation(line: 244, column: 17, scope: !7772)
!7810 = !DILocation(line: 244, column: 42, scope: !7772)
!7811 = !DILocation(line: 244, column: 6, scope: !7763)
!7812 = !DILocation(line: 245, column: 3, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7814, file: !7557, line: 245, column: 3)
!7814 = distinct !DILexicalBlock(scope: !7815, file: !7557, line: 245, column: 3)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !7557, line: 245, column: 3)
!7816 = distinct !DILexicalBlock(scope: !7771, file: !7557, line: 245, column: 3)
!7817 = !DILocation(line: 254, column: 24, scope: !7771)
!7818 = !DILocation(line: 0, scope: !7771)
!7819 = !DILocation(line: 256, column: 13, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7771, file: !7557, line: 256, column: 7)
!7821 = !DILocation(line: 256, column: 18, scope: !7820)
!7822 = !DILocation(line: 256, column: 44, scope: !7820)
!7823 = !DILocation(line: 256, column: 7, scope: !7771)
!7824 = !DILocation(line: 258, column: 4, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !7557, line: 258, column: 4)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !7557, line: 258, column: 4)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !7557, line: 258, column: 4)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !7557, line: 258, column: 4)
!7829 = distinct !DILexicalBlock(scope: !7820, file: !7557, line: 256, column: 50)
!7830 = !DILocation(line: 259, column: 24, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7829, file: !7557, line: 259, column: 8)
!7832 = !DILocation(line: 259, column: 8, scope: !7829)
!7833 = !DILocation(line: 261, column: 15, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7831, file: !7557, line: 259, column: 30)
!7835 = !DILocation(line: 262, column: 4, scope: !7834)
!7836 = !DILocation(line: 265, column: 12, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7763, file: !7557, line: 265, column: 6)
!7838 = !DILocation(line: 265, column: 17, scope: !7837)
!7839 = !DILocation(line: 265, column: 42, scope: !7837)
!7840 = !DILocation(line: 265, column: 6, scope: !7763)
!7841 = !DILocation(line: 266, column: 3, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !7557, line: 266, column: 3)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !7557, line: 266, column: 3)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !7557, line: 266, column: 3)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !7557, line: 266, column: 3)
!7846 = distinct !DILexicalBlock(scope: !7837, file: !7557, line: 265, column: 48)
!7847 = !DILocation(line: 267, column: 2, scope: !7846)
!7848 = !DILocation(line: 288, column: 12, scope: !7777)
!7849 = !DILocation(line: 288, column: 17, scope: !7777)
!7850 = !DILocation(line: 288, column: 41, scope: !7777)
!7851 = !DILocation(line: 289, column: 9, scope: !7777)
!7852 = !DILocation(line: 289, column: 14, scope: !7777)
!7853 = !DILocation(line: 288, column: 6, scope: !7763)
!7854 = !DILocation(line: 308, column: 12, scope: !7775)
!7855 = !DILocation(line: 308, column: 17, scope: !7775)
!7856 = !DILocation(line: 308, column: 7, scope: !7776)
!7857 = !DILocation(line: 310, column: 6, scope: !7774)
!7858 = !DILocation(line: 309, column: 29, scope: !7774)
!7859 = !DILocation(line: 0, scope: !7774)
!7860 = !DILocation(line: 312, column: 8, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7774, file: !7557, line: 312, column: 8)
!7862 = !DILocation(line: 312, column: 8, scope: !7774)
!7863 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7864, file: !7281, line: 1099, type: !108)
!7864 = distinct !DISubprogram(name: "__set_PSP", scope: !7281, file: !7281, line: 1099, type: !6970, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7865)
!7865 = !{!7863}
!7866 = !DILocation(line: 0, scope: !7864, inlinedAt: !7867)
!7867 = distinct !DILocation(line: 338, column: 5, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7861, file: !7557, line: 312, column: 23)
!7869 = !DILocation(line: 1101, column: 3, scope: !7864, inlinedAt: !7867)
!7870 = !{i64 2477678}
!7871 = !DILocation(line: 341, column: 4, scope: !7868)
!7872 = !DILocation(line: 366, column: 12, scope: !7763)
!7873 = !DILocation(line: 369, column: 15, scope: !7763)
!7874 = !DILocation(line: 371, column: 2, scope: !7763)
!7875 = distinct !DISubprogram(name: "bus_fault", scope: !7557, file: !7557, line: 383, type: !7876, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7878)
!7876 = !DISubroutineType(types: !7877)
!7877 = !{!103, !2918, !103, !7624}
!7878 = !{!7879, !7880, !7881, !7882, !7883}
!7879 = !DILocalVariable(name: "esf", arg: 1, scope: !7875, file: !7557, line: 383, type: !2918)
!7880 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7875, file: !7557, line: 383, type: !103)
!7881 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7875, file: !7557, line: 383, type: !7624)
!7882 = !DILocalVariable(name: "reason", scope: !7875, file: !7557, line: 385, type: !108)
!7883 = !DILocalVariable(name: "bfar", scope: !7884, file: !7557, line: 405, type: !108)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !7557, line: 395, column: 42)
!7885 = distinct !DILexicalBlock(scope: !7875, file: !7557, line: 395, column: 6)
!7886 = !DILocation(line: 0, scope: !7875)
!7887 = !DILocation(line: 387, column: 2, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7889, file: !7557, line: 387, column: 2)
!7889 = distinct !DILexicalBlock(scope: !7890, file: !7557, line: 387, column: 2)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !7557, line: 387, column: 2)
!7891 = distinct !DILexicalBlock(scope: !7875, file: !7557, line: 387, column: 2)
!7892 = !DILocation(line: 389, column: 11, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7875, file: !7557, line: 389, column: 6)
!7894 = !DILocation(line: 389, column: 16, scope: !7893)
!7895 = !DILocation(line: 389, column: 6, scope: !7875)
!7896 = !DILocation(line: 390, column: 3, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7898, file: !7557, line: 390, column: 3)
!7898 = distinct !DILexicalBlock(scope: !7899, file: !7557, line: 390, column: 3)
!7899 = distinct !DILexicalBlock(scope: !7900, file: !7557, line: 390, column: 3)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !7557, line: 390, column: 3)
!7901 = distinct !DILexicalBlock(scope: !7893, file: !7557, line: 389, column: 39)
!7902 = !DILocation(line: 391, column: 2, scope: !7901)
!7903 = !DILocation(line: 392, column: 11, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7875, file: !7557, line: 392, column: 6)
!7905 = !DILocation(line: 392, column: 16, scope: !7904)
!7906 = !DILocation(line: 392, column: 6, scope: !7875)
!7907 = !DILocation(line: 393, column: 3, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7909, file: !7557, line: 393, column: 3)
!7909 = distinct !DILexicalBlock(scope: !7910, file: !7557, line: 393, column: 3)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !7557, line: 393, column: 3)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !7557, line: 393, column: 3)
!7912 = distinct !DILexicalBlock(scope: !7904, file: !7557, line: 392, column: 41)
!7913 = !DILocation(line: 394, column: 2, scope: !7912)
!7914 = !DILocation(line: 395, column: 11, scope: !7885)
!7915 = !DILocation(line: 395, column: 16, scope: !7885)
!7916 = !DILocation(line: 395, column: 6, scope: !7875)
!7917 = !DILocation(line: 396, column: 3, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !7557, line: 396, column: 3)
!7919 = distinct !DILexicalBlock(scope: !7920, file: !7557, line: 396, column: 3)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !7557, line: 396, column: 3)
!7921 = distinct !DILexicalBlock(scope: !7884, file: !7557, line: 396, column: 3)
!7922 = !DILocation(line: 405, column: 3, scope: !7884)
!7923 = !DILocation(line: 0, scope: !7884)
!7924 = !DILocation(line: 407, column: 13, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7884, file: !7557, line: 407, column: 7)
!7926 = !DILocation(line: 407, column: 18, scope: !7925)
!7927 = !DILocation(line: 407, column: 44, scope: !7925)
!7928 = !DILocation(line: 407, column: 7, scope: !7884)
!7929 = !DILocation(line: 408, column: 4, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7931, file: !7557, line: 408, column: 4)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !7557, line: 408, column: 4)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !7557, line: 408, column: 4)
!7933 = distinct !DILexicalBlock(scope: !7934, file: !7557, line: 408, column: 4)
!7934 = distinct !DILexicalBlock(scope: !7925, file: !7557, line: 407, column: 50)
!7935 = !DILocation(line: 409, column: 24, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7934, file: !7557, line: 409, column: 8)
!7937 = !DILocation(line: 409, column: 8, scope: !7934)
!7938 = !DILocation(line: 411, column: 15, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7936, file: !7557, line: 409, column: 30)
!7940 = !DILocation(line: 412, column: 4, scope: !7939)
!7941 = !DILocation(line: 415, column: 11, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7875, file: !7557, line: 415, column: 6)
!7943 = !DILocation(line: 415, column: 16, scope: !7942)
!7944 = !DILocation(line: 415, column: 6, scope: !7875)
!7945 = !DILocation(line: 416, column: 3, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !7557, line: 416, column: 3)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !7557, line: 416, column: 3)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !7557, line: 416, column: 3)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !7557, line: 416, column: 3)
!7950 = distinct !DILexicalBlock(scope: !7942, file: !7557, line: 415, column: 44)
!7951 = !DILocation(line: 417, column: 2, scope: !7950)
!7952 = !DILocation(line: 418, column: 12, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7875, file: !7557, line: 418, column: 6)
!7954 = !DILocation(line: 418, column: 17, scope: !7953)
!7955 = !DILocation(line: 418, column: 41, scope: !7953)
!7956 = !DILocation(line: 418, column: 6, scope: !7875)
!7957 = !DILocation(line: 419, column: 3, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7959, file: !7557, line: 419, column: 3)
!7959 = distinct !DILexicalBlock(scope: !7960, file: !7557, line: 419, column: 3)
!7960 = distinct !DILexicalBlock(scope: !7961, file: !7557, line: 419, column: 3)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !7557, line: 419, column: 3)
!7962 = distinct !DILexicalBlock(scope: !7953, file: !7557, line: 418, column: 47)
!7963 = !DILocation(line: 421, column: 2, scope: !7962)
!7964 = !DILocation(line: 524, column: 12, scope: !7875)
!7965 = !DILocation(line: 526, column: 15, scope: !7875)
!7966 = !DILocation(line: 528, column: 2, scope: !7875)
!7967 = distinct !DISubprogram(name: "usage_fault", scope: !7557, file: !7557, line: 539, type: !7968, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !7972)
!7968 = !DISubroutineType(types: !7969)
!7969 = !{!108, !7970}
!7970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7971, size: 32)
!7971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2919)
!7972 = !{!7973, !7974}
!7973 = !DILocalVariable(name: "esf", arg: 1, scope: !7967, file: !7557, line: 539, type: !7970)
!7974 = !DILocalVariable(name: "reason", scope: !7967, file: !7557, line: 541, type: !108)
!7975 = !DILocation(line: 0, scope: !7967)
!7976 = !DILocation(line: 543, column: 2, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7978, file: !7557, line: 543, column: 2)
!7978 = distinct !DILexicalBlock(scope: !7979, file: !7557, line: 543, column: 2)
!7979 = distinct !DILexicalBlock(scope: !7980, file: !7557, line: 543, column: 2)
!7980 = distinct !DILexicalBlock(scope: !7967, file: !7557, line: 543, column: 2)
!7981 = !DILocation(line: 546, column: 12, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7967, file: !7557, line: 546, column: 6)
!7983 = !DILocation(line: 546, column: 17, scope: !7982)
!7984 = !DILocation(line: 546, column: 43, scope: !7982)
!7985 = !DILocation(line: 546, column: 6, scope: !7967)
!7986 = !DILocation(line: 547, column: 3, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !7557, line: 547, column: 3)
!7988 = distinct !DILexicalBlock(scope: !7989, file: !7557, line: 547, column: 3)
!7989 = distinct !DILexicalBlock(scope: !7990, file: !7557, line: 547, column: 3)
!7990 = distinct !DILexicalBlock(scope: !7991, file: !7557, line: 547, column: 3)
!7991 = distinct !DILexicalBlock(scope: !7982, file: !7557, line: 546, column: 49)
!7992 = !DILocation(line: 548, column: 2, scope: !7991)
!7993 = !DILocation(line: 549, column: 12, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7967, file: !7557, line: 549, column: 6)
!7995 = !DILocation(line: 549, column: 17, scope: !7994)
!7996 = !DILocation(line: 549, column: 43, scope: !7994)
!7997 = !DILocation(line: 549, column: 6, scope: !7967)
!7998 = !DILocation(line: 550, column: 3, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !8000, file: !7557, line: 550, column: 3)
!8000 = distinct !DILexicalBlock(scope: !8001, file: !7557, line: 550, column: 3)
!8001 = distinct !DILexicalBlock(scope: !8002, file: !7557, line: 550, column: 3)
!8002 = distinct !DILexicalBlock(scope: !8003, file: !7557, line: 550, column: 3)
!8003 = distinct !DILexicalBlock(scope: !7994, file: !7557, line: 549, column: 49)
!8004 = !DILocation(line: 551, column: 2, scope: !8003)
!8005 = !DILocation(line: 567, column: 12, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7967, file: !7557, line: 567, column: 6)
!8007 = !DILocation(line: 567, column: 17, scope: !8006)
!8008 = !DILocation(line: 567, column: 38, scope: !8006)
!8009 = !DILocation(line: 567, column: 6, scope: !7967)
!8010 = !DILocation(line: 568, column: 3, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8012, file: !7557, line: 568, column: 3)
!8012 = distinct !DILexicalBlock(scope: !8013, file: !7557, line: 568, column: 3)
!8013 = distinct !DILexicalBlock(scope: !8014, file: !7557, line: 568, column: 3)
!8014 = distinct !DILexicalBlock(scope: !8015, file: !7557, line: 568, column: 3)
!8015 = distinct !DILexicalBlock(scope: !8006, file: !7557, line: 567, column: 44)
!8016 = !DILocation(line: 569, column: 2, scope: !8015)
!8017 = !DILocation(line: 570, column: 12, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !7967, file: !7557, line: 570, column: 6)
!8019 = !DILocation(line: 570, column: 17, scope: !8018)
!8020 = !DILocation(line: 570, column: 39, scope: !8018)
!8021 = !DILocation(line: 570, column: 6, scope: !7967)
!8022 = !DILocation(line: 571, column: 3, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8024, file: !7557, line: 571, column: 3)
!8024 = distinct !DILexicalBlock(scope: !8025, file: !7557, line: 571, column: 3)
!8025 = distinct !DILexicalBlock(scope: !8026, file: !7557, line: 571, column: 3)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !7557, line: 571, column: 3)
!8027 = distinct !DILexicalBlock(scope: !8018, file: !7557, line: 570, column: 45)
!8028 = !DILocation(line: 572, column: 2, scope: !8027)
!8029 = !DILocation(line: 573, column: 12, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !7967, file: !7557, line: 573, column: 6)
!8031 = !DILocation(line: 573, column: 17, scope: !8030)
!8032 = !DILocation(line: 573, column: 42, scope: !8030)
!8033 = !DILocation(line: 573, column: 6, scope: !7967)
!8034 = !DILocation(line: 574, column: 3, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8036, file: !7557, line: 574, column: 3)
!8036 = distinct !DILexicalBlock(scope: !8037, file: !7557, line: 574, column: 3)
!8037 = distinct !DILexicalBlock(scope: !8038, file: !7557, line: 574, column: 3)
!8038 = distinct !DILexicalBlock(scope: !8039, file: !7557, line: 574, column: 3)
!8039 = distinct !DILexicalBlock(scope: !8030, file: !7557, line: 573, column: 48)
!8040 = !DILocation(line: 575, column: 2, scope: !8039)
!8041 = !DILocation(line: 576, column: 12, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !7967, file: !7557, line: 576, column: 6)
!8043 = !DILocation(line: 576, column: 17, scope: !8042)
!8044 = !DILocation(line: 576, column: 44, scope: !8042)
!8045 = !DILocation(line: 576, column: 6, scope: !7967)
!8046 = !DILocation(line: 577, column: 3, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8048, file: !7557, line: 577, column: 3)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !7557, line: 577, column: 3)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !7557, line: 577, column: 3)
!8050 = distinct !DILexicalBlock(scope: !8051, file: !7557, line: 577, column: 3)
!8051 = distinct !DILexicalBlock(scope: !8042, file: !7557, line: 576, column: 50)
!8052 = !DILocation(line: 578, column: 2, scope: !8051)
!8053 = !DILocation(line: 581, column: 12, scope: !7967)
!8054 = !DILocation(line: 583, column: 2, scope: !7967)
!8055 = distinct !DISubprogram(name: "debug_monitor", scope: !7557, file: !7557, line: 632, type: !8056, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !8058)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{null, !2918, !7624}
!8058 = !{!8059, !8060}
!8059 = !DILocalVariable(name: "esf", arg: 1, scope: !8055, file: !7557, line: 632, type: !2918)
!8060 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8055, file: !7557, line: 632, type: !7624)
!8061 = !DILocation(line: 0, scope: !8055)
!8062 = !DILocation(line: 634, column: 15, scope: !8055)
!8063 = !DILocation(line: 636, column: 2, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !7557, line: 636, column: 2)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !7557, line: 636, column: 2)
!8066 = distinct !DILexicalBlock(scope: !8067, file: !7557, line: 636, column: 2)
!8067 = distinct !DILexicalBlock(scope: !8055, file: !7557, line: 636, column: 2)
!8068 = !DILocation(line: 652, column: 1, scope: !8055)
!8069 = distinct !DISubprogram(name: "reserved_exception", scope: !7557, file: !7557, line: 776, type: !8070, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !8072)
!8070 = !DISubroutineType(types: !8071)
!8071 = !{null, !7970, !103}
!8072 = !{!8073, !8074}
!8073 = !DILocalVariable(name: "esf", arg: 1, scope: !8069, file: !7557, line: 776, type: !7970)
!8074 = !DILocalVariable(name: "fault", arg: 2, scope: !8069, file: !7557, line: 776, type: !103)
!8075 = !DILocation(line: 0, scope: !8069)
!8076 = !DILocation(line: 780, column: 2, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8078, file: !7557, line: 780, column: 2)
!8078 = distinct !DILexicalBlock(scope: !8079, file: !7557, line: 780, column: 2)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !7557, line: 780, column: 2)
!8080 = distinct !DILexicalBlock(scope: !8069, file: !7557, line: 780, column: 2)
!8081 = !DILocation(line: 783, column: 1, scope: !8069)
!8082 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7557, file: !7557, line: 658, type: !8083, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !8085)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{!131, !2918}
!8085 = !{!8086, !8087, !8088}
!8086 = !DILocalVariable(name: "esf", arg: 1, scope: !8082, file: !7557, line: 658, type: !2918)
!8087 = !DILocalVariable(name: "ret_addr", scope: !8082, file: !7557, line: 660, type: !2692)
!8088 = !DILocalVariable(name: "fault_insn", scope: !8082, file: !7557, line: 686, type: !121)
!8089 = !DILocation(line: 0, scope: !8082)
!8090 = !DILocation(line: 660, column: 46, scope: !8082)
!8091 = !DILocation(line: 660, column: 23, scope: !8082)
!8092 = !DILocation(line: 682, column: 11, scope: !8082)
!8093 = !DILocation(line: 271, column: 3, scope: !8094, inlinedAt: !8095)
!8094 = distinct !DISubprogram(name: "__DSB", scope: !7281, file: !7281, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !251)
!8095 = distinct !DILocation(line: 683, column: 2, scope: !8082)
!8096 = !{i64 2453813}
!8097 = !DILocation(line: 260, column: 3, scope: !8098, inlinedAt: !8099)
!8098 = distinct !DISubprogram(name: "__ISB", scope: !7281, file: !7281, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !251)
!8099 = distinct !DILocation(line: 684, column: 2, scope: !8082)
!8100 = !{i64 2453530}
!8101 = !DILocation(line: 686, column: 35, scope: !8082)
!8102 = !DILocation(line: 686, column: 24, scope: !8082)
!8103 = !DILocation(line: 688, column: 11, scope: !8082)
!8104 = !DILocation(line: 271, column: 3, scope: !8094, inlinedAt: !8105)
!8105 = distinct !DILocation(line: 689, column: 2, scope: !8082)
!8106 = !DILocation(line: 260, column: 3, scope: !8098, inlinedAt: !8107)
!8107 = distinct !DILocation(line: 690, column: 2, scope: !8082)
!8108 = !DILocation(line: 693, column: 45, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8082, file: !7557, line: 693, column: 6)
!8110 = !DILocation(line: 699, column: 1, scope: !8082)
!8111 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7557, file: !7557, line: 1107, type: !334, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !251)
!8112 = !DILocation(line: 1111, column: 11, scope: !8111)
!8113 = !DILocation(line: 1136, column: 1, scope: !8111)
!8114 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8115, file: !8115, line: 26, type: !334, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2961, retainedNodes: !8116)
!8115 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8116 = !{!8117}
!8117 = !DILocalVariable(name: "irq", scope: !8114, file: !8115, line: 28, type: !103)
!8118 = !DILocation(line: 0, scope: !8114)
!8119 = !DILocation(line: 30, column: 2, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8114, file: !8115, line: 30, column: 2)
!8121 = !DILocation(line: 31, column: 3, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !8115, line: 30, column: 39)
!8123 = distinct !DILexicalBlock(scope: !8120, file: !8115, line: 30, column: 2)
!8124 = !DILocation(line: 30, column: 35, scope: !8123)
!8125 = !DILocation(line: 30, column: 13, scope: !8123)
!8126 = distinct !{!8126, !8119, !8127}
!8127 = !DILocation(line: 32, column: 2, scope: !8120)
!8128 = !DILocation(line: 33, column: 1, scope: !8114)
!8129 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !637, file: !637, line: 1638, type: !7315, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2961, retainedNodes: !8130)
!8130 = !{!8131, !8132}
!8131 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8129, file: !637, line: 1638, type: !972)
!8132 = !DILocalVariable(name: "priority", arg: 2, scope: !8129, file: !637, line: 1638, type: !108)
!8133 = !DILocation(line: 0, scope: !8129)
!8134 = !DILocation(line: 1640, column: 7, scope: !8129)
!8135 = !DILocation(line: 0, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8129, file: !637, line: 1640, column: 7)
!8137 = !DILocation(line: 1648, column: 1, scope: !8129)
!8138 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8139, file: !8139, line: 27, type: !8140, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !8243)
!8139 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8140 = !DISubroutineType(types: !8141)
!8141 = !{null, !8142}
!8142 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !8143)
!8143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8144, size: 32)
!8144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !8145)
!8145 = !{!8146, !8204, !8216, !8217, !8218, !8219, !8225, !8238}
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8144, file: !163, line: 247, baseType: !8147, size: 384)
!8147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !8148)
!8148 = !{!8149, !8173, !8180, !8181, !8182, !8191, !8192, !8193}
!8149 = !DIDerivedType(tag: DW_TAG_member, scope: !8147, file: !163, line: 60, baseType: !8150, size: 64)
!8150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8147, file: !163, line: 60, size: 64, elements: !8151)
!8151 = !{!8152, !8167}
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8150, file: !163, line: 61, baseType: !8153, size: 64)
!8153 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !8154)
!8154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !8155)
!8155 = !{!8156, !8162}
!8156 = !DIDerivedType(tag: DW_TAG_member, scope: !8154, file: !146, line: 38, baseType: !8157, size: 32)
!8157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8154, file: !146, line: 38, size: 32, elements: !8158)
!8158 = !{!8159, !8161}
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8157, file: !146, line: 39, baseType: !8160, size: 32)
!8160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8154, size: 32)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8157, file: !146, line: 40, baseType: !8160, size: 32)
!8162 = !DIDerivedType(tag: DW_TAG_member, scope: !8154, file: !146, line: 42, baseType: !8163, size: 32, offset: 32)
!8163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8154, file: !146, line: 42, size: 32, elements: !8164)
!8164 = !{!8165, !8166}
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8163, file: !146, line: 43, baseType: !8160, size: 32)
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8163, file: !146, line: 44, baseType: !8160, size: 32)
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8150, file: !163, line: 62, baseType: !8168, size: 64)
!8168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !8169)
!8169 = !{!8170}
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8168, file: !175, line: 50, baseType: !8171, size: 64)
!8171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8172, size: 64, elements: !180)
!8172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8168, size: 32)
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8147, file: !163, line: 68, baseType: !8174, size: 32, offset: 64)
!8174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8175, size: 32)
!8175 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !8176)
!8176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !8177)
!8177 = !{!8178}
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8176, file: !141, line: 232, baseType: !8179, size: 64)
!8179 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !8154)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8147, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8147, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!8182 = !DIDerivedType(tag: DW_TAG_member, scope: !8147, file: !163, line: 90, baseType: !8183, size: 16, offset: 112)
!8183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8147, file: !163, line: 90, size: 16, elements: !8184)
!8184 = !{!8185, !8190}
!8185 = !DIDerivedType(tag: DW_TAG_member, scope: !8183, file: !163, line: 91, baseType: !8186, size: 16)
!8186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8183, file: !163, line: 91, size: 16, elements: !8187)
!8187 = !{!8188, !8189}
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8186, file: !163, line: 96, baseType: !195, size: 8)
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8186, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8183, file: !163, line: 100, baseType: !121, size: 16)
!8191 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8147, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!8192 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8147, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!8193 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8147, file: !163, line: 131, baseType: !8194, size: 192, offset: 192)
!8194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !8195)
!8195 = !{!8196, !8197, !8203}
!8196 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8194, file: !141, line: 245, baseType: !8153, size: 64)
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8194, file: !141, line: 246, baseType: !8198, size: 32, offset: 64)
!8198 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !8199)
!8199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8200, size: 32)
!8200 = !DISubroutineType(types: !8201)
!8201 = !{null, !8202}
!8202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8194, size: 32)
!8203 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8194, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!8204 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8144, file: !163, line: 250, baseType: !8205, size: 288, offset: 384)
!8205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !8206)
!8206 = !{!8207, !8208, !8209, !8210, !8211, !8212, !8213, !8214, !8215}
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8205, file: !214, line: 26, baseType: !108, size: 32)
!8208 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8205, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8205, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!8210 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8205, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!8211 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8205, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!8212 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8205, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!8213 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8205, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!8214 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8205, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!8215 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8205, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8144, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8144, file: !163, line: 256, baseType: !8175, size: 64, offset: 704)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8144, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8144, file: !163, line: 300, baseType: !8220, size: 96, offset: 800)
!8220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !8221)
!8221 = !{!8222, !8223, !8224}
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8220, file: !163, line: 153, baseType: !22, size: 32)
!8223 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8220, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!8224 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8220, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8144, file: !163, line: 325, baseType: !8226, size: 32, offset: 896)
!8226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8227, size: 32)
!8227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !8228)
!8228 = !{!8229, !8235, !8236}
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8227, file: !137, line: 5074, baseType: !8230, size: 96)
!8230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !8231)
!8231 = !{!8232, !8233, !8234}
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8230, file: !240, line: 57, baseType: !243, size: 32)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8230, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8230, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8227, file: !137, line: 5075, baseType: !8175, size: 64, offset: 96)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8227, file: !137, line: 5076, baseType: !8237, offset: 160)
!8237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8144, file: !163, line: 343, baseType: !8239, size: 64, offset: 928)
!8239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !8240)
!8240 = !{!8241, !8242}
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8239, file: !214, line: 63, baseType: !108, size: 32)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8239, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!8243 = !{!8244}
!8244 = !DILocalVariable(name: "thread", arg: 1, scope: !8138, file: !8139, line: 27, type: !8142)
!8245 = !DILocation(line: 0, scope: !8138)
!8246 = !DILocation(line: 29, column: 6, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8138, file: !8139, line: 29, column: 6)
!8248 = !DILocation(line: 29, column: 15, scope: !8247)
!8249 = !DILocation(line: 29, column: 6, scope: !8138)
!8250 = !DILocation(line: 1031, column: 3, scope: !8251, inlinedAt: !8254)
!8251 = distinct !DISubprogram(name: "__get_IPSR", scope: !7281, file: !7281, line: 1027, type: !3564, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !8252)
!8252 = !{!8253}
!8253 = !DILocalVariable(name: "result", scope: !8251, file: !7281, line: 1029, type: !108)
!8254 = distinct !DILocation(line: 48, column: 10, scope: !8255, inlinedAt: !8259)
!8255 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8256, file: !8256, line: 46, type: !8257, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3006, retainedNodes: !251)
!8256 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8257 = !DISubroutineType(types: !8258)
!8258 = !{!131}
!8259 = distinct !DILocation(line: 30, column: 7, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8261, file: !8139, line: 30, column: 7)
!8261 = distinct !DILexicalBlock(scope: !8247, file: !8139, line: 29, column: 26)
!8262 = !{i64 2442661}
!8263 = !DILocation(line: 0, scope: !8251, inlinedAt: !8254)
!8264 = !DILocation(line: 48, column: 9, scope: !8255, inlinedAt: !8259)
!8265 = !DILocation(line: 30, column: 7, scope: !8261)
!8266 = !DILocation(line: 42, column: 14, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8260, file: !8139, line: 30, column: 25)
!8268 = !DILocation(line: 48, column: 15, scope: !8267)
!8269 = !DILocation(line: 49, column: 3, scope: !8267)
!8270 = !DILocation(line: 52, column: 2, scope: !8138)
!8271 = !DILocation(line: 53, column: 1, scope: !8138)
!8272 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !499, file: !499, line: 127, type: !334, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !251)
!8273 = !DILocation(line: 134, column: 2, scope: !8272)
!8274 = !DILocation(line: 156, column: 1, scope: !8272)
!8275 = !DILocation(line: 0, scope: !498)
!8276 = !DILocation(line: 289, column: 36, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !498, file: !499, line: 285, column: 2)
!8278 = !DILocation(line: 289, column: 42, scope: !8277)
!8279 = !DILocation(line: 300, column: 36, scope: !498)
!8280 = !DILocation(line: 301, column: 35, scope: !498)
!8281 = !DILocation(line: 302, column: 37, scope: !498)
!8282 = !DILocation(line: 311, column: 2, scope: !498)
!8283 = !DILocation(line: 316, column: 1, scope: !498)
!8284 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !665, file: !665, line: 180, type: !334, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !251)
!8285 = !DILocation(line: 188, column: 12, scope: !8284)
!8286 = !DILocation(line: 271, column: 3, scope: !8287, inlinedAt: !8288)
!8287 = distinct !DISubprogram(name: "__DSB", scope: !7281, file: !7281, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !251)
!8288 = distinct !DILocation(line: 192, column: 2, scope: !8284)
!8289 = !{i64 2598512}
!8290 = !DILocation(line: 260, column: 3, scope: !8291, inlinedAt: !8292)
!8291 = distinct !DISubprogram(name: "__ISB", scope: !7281, file: !7281, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !251)
!8292 = distinct !DILocation(line: 193, column: 2, scope: !8284)
!8293 = !{i64 2598229}
!8294 = !DILocation(line: 194, column: 1, scope: !8284)
!8295 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !665, file: !665, line: 199, type: !334, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !251)
!8296 = !DILocation(line: 282, column: 3, scope: !8297, inlinedAt: !8298)
!8297 = distinct !DISubprogram(name: "__DMB", scope: !7281, file: !7281, line: 280, type: !334, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !251)
!8298 = distinct !DILocation(line: 202, column: 2, scope: !8295)
!8299 = !{i64 2598788}
!8300 = !DILocation(line: 205, column: 12, scope: !8295)
!8301 = !DILocation(line: 206, column: 1, scope: !8295)
!8302 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !665, file: !665, line: 275, type: !8303, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8316)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{null, !8305, !1924, !7524, !7524}
!8305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8306, size: 32)
!8306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8307)
!8307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !609, line: 52, size: 96, elements: !8308)
!8308 = !{!8309, !8310, !8311}
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8307, file: !609, line: 53, baseType: !22, size: 32)
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8307, file: !609, line: 54, baseType: !132, size: 32, offset: 32)
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8307, file: !609, line: 55, baseType: !8312, size: 32, offset: 64)
!8312 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !615, line: 151, baseType: !8313)
!8313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !615, line: 149, size: 32, elements: !8314)
!8314 = !{!8315}
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8313, file: !615, line: 150, baseType: !108, size: 32)
!8316 = !{!8317, !8318, !8319, !8320}
!8317 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8302, file: !665, line: 276, type: !8305)
!8318 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8302, file: !665, line: 276, type: !1924)
!8319 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8302, file: !665, line: 277, type: !7524)
!8320 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8302, file: !665, line: 277, type: !7524)
!8321 = !DILocation(line: 0, scope: !8302)
!8322 = !DILocation(line: 279, column: 6, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8302, file: !665, line: 279, column: 6)
!8324 = !DILocation(line: 285, column: 1, scope: !8302)
!8325 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8326, file: !8326, line: 220, type: !8327, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8329)
!8326 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8327 = !DISubroutineType(types: !8328)
!8328 = !{!103, !8305, !1924, !7524, !7524}
!8329 = !{!8330, !8331, !8332, !8333, !8334}
!8330 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8325, file: !8326, line: 221, type: !8305)
!8331 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8325, file: !8326, line: 221, type: !1924)
!8332 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8325, file: !8326, line: 222, type: !7524)
!8333 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8325, file: !8326, line: 223, type: !7524)
!8334 = !DILocalVariable(name: "mpu_reg_index", scope: !8325, file: !8326, line: 225, type: !103)
!8335 = !DILocation(line: 0, scope: !8325)
!8336 = !DILocation(line: 225, column: 22, scope: !8325)
!8337 = !DILocation(line: 233, column: 18, scope: !8325)
!8338 = !DILocation(line: 236, column: 23, scope: !8325)
!8339 = !DILocation(line: 236, column: 21, scope: !8325)
!8340 = !DILocation(line: 238, column: 2, scope: !8325)
!8341 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !665, file: !665, line: 105, type: !8342, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8344)
!8342 = !DISubroutineType(types: !8343)
!8343 = !{!103, !8305, !185, !185, !131}
!8344 = !{!8345, !8346, !8347, !8348, !8349, !8350}
!8345 = !DILocalVariable(name: "regions", arg: 1, scope: !8341, file: !665, line: 106, type: !8305)
!8346 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8341, file: !665, line: 106, type: !185)
!8347 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8341, file: !665, line: 106, type: !185)
!8348 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8341, file: !665, line: 107, type: !131)
!8349 = !DILocalVariable(name: "i", scope: !8341, file: !665, line: 109, type: !103)
!8350 = !DILocalVariable(name: "reg_index", scope: !8341, file: !665, line: 110, type: !103)
!8351 = !DILocation(line: 0, scope: !8341)
!8352 = !DILocation(line: 110, column: 18, scope: !8341)
!8353 = !DILocation(line: 112, column: 16, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8355, file: !665, line: 112, column: 2)
!8355 = distinct !DILexicalBlock(scope: !8341, file: !665, line: 112, column: 2)
!8356 = !DILocation(line: 112, column: 2, scope: !8355)
!8357 = !DILocation(line: 113, column: 7, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !665, line: 113, column: 7)
!8359 = distinct !DILexicalBlock(scope: !8354, file: !665, line: 112, column: 36)
!8360 = !DILocation(line: 113, column: 18, scope: !8358)
!8361 = !DILocation(line: 113, column: 23, scope: !8358)
!8362 = !DILocation(line: 113, column: 7, scope: !8359)
!8363 = !DILocation(line: 118, column: 23, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8359, file: !665, line: 118, column: 7)
!8365 = !DILocation(line: 119, column: 7, scope: !8364)
!8366 = !DILocation(line: 118, column: 7, scope: !8359)
!8367 = !DILocation(line: 120, column: 4, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !665, line: 120, column: 4)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !665, line: 120, column: 4)
!8370 = distinct !DILexicalBlock(scope: !8371, file: !665, line: 120, column: 4)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !665, line: 120, column: 4)
!8372 = distinct !DILexicalBlock(scope: !8364, file: !665, line: 119, column: 45)
!8373 = !DILocation(line: 121, column: 4, scope: !8372)
!8374 = !DILocation(line: 124, column: 36, scope: !8359)
!8375 = !DILocation(line: 124, column: 15, scope: !8359)
!8376 = !DILocation(line: 126, column: 17, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8359, file: !665, line: 126, column: 7)
!8378 = !DILocation(line: 126, column: 7, scope: !8359)
!8379 = !DILocation(line: 131, column: 12, scope: !8359)
!8380 = !DILocation(line: 132, column: 2, scope: !8359)
!8381 = !DILocation(line: 112, column: 32, scope: !8354)
!8382 = distinct !{!8382, !8356, !8383}
!8383 = !DILocation(line: 132, column: 2, scope: !8355)
!8384 = !DILocation(line: 135, column: 1, scope: !8341)
!8385 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8326, file: !8326, line: 63, type: !8386, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8388)
!8386 = !DISubroutineType(types: !8387)
!8387 = !{!103, !8305}
!8388 = !{!8389, !8390}
!8389 = !DILocalVariable(name: "part", arg: 1, scope: !8385, file: !8326, line: 63, type: !8305)
!8390 = !DILocalVariable(name: "partition_is_valid", scope: !8385, file: !8326, line: 70, type: !103)
!8391 = !DILocation(line: 0, scope: !8385)
!8392 = !DILocation(line: 71, column: 11, scope: !8385)
!8393 = !DILocation(line: 71, column: 37, scope: !8385)
!8394 = !DILocation(line: 72, column: 3, scope: !8385)
!8395 = !DILocation(line: 71, column: 30, scope: !8385)
!8396 = !DILocation(line: 75, column: 11, scope: !8385)
!8397 = !DILocation(line: 75, column: 17, scope: !8385)
!8398 = !DILocation(line: 75, column: 38, scope: !8385)
!8399 = !DILocation(line: 77, column: 2, scope: !8385)
!8400 = distinct !DISubprogram(name: "mpu_configure_region", scope: !665, file: !665, line: 79, type: !8401, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8403)
!8401 = !DISubroutineType(types: !8402)
!8402 = !{!103, !1924, !8305}
!8403 = !{!8404, !8405, !8406}
!8404 = !DILocalVariable(name: "index", arg: 1, scope: !8400, file: !665, line: 79, type: !1924)
!8405 = !DILocalVariable(name: "new_region", arg: 2, scope: !8400, file: !665, line: 80, type: !8305)
!8406 = !DILocalVariable(name: "region_conf", scope: !8400, file: !665, line: 82, type: !654)
!8407 = !DILocation(line: 0, scope: !8400)
!8408 = !DILocation(line: 82, column: 2, scope: !8400)
!8409 = !DILocation(line: 82, column: 24, scope: !8400)
!8410 = !DILocation(line: 87, column: 33, scope: !8400)
!8411 = !DILocation(line: 87, column: 14, scope: !8400)
!8412 = !DILocation(line: 87, column: 19, scope: !8400)
!8413 = !DILocation(line: 91, column: 55, scope: !8400)
!8414 = !DILocation(line: 92, column: 16, scope: !8400)
!8415 = !DILocation(line: 92, column: 53, scope: !8400)
!8416 = !DILocation(line: 91, column: 2, scope: !8400)
!8417 = !DILocation(line: 95, column: 9, scope: !8400)
!8418 = !DILocation(line: 97, column: 1, scope: !8400)
!8419 = !DILocation(line: 95, column: 2, scope: !8400)
!8420 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8326, file: !8326, line: 113, type: !8421, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8426)
!8421 = !DISubroutineType(types: !8422)
!8422 = !{null, !8423, !8424, !108, !108}
!8423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 32)
!8424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8425, size: 32)
!8425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8312)
!8426 = !{!8427, !8428, !8429, !8430}
!8427 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8420, file: !8326, line: 114, type: !8423)
!8428 = !DILocalVariable(name: "attr", arg: 2, scope: !8420, file: !8326, line: 115, type: !8424)
!8429 = !DILocalVariable(name: "base", arg: 3, scope: !8420, file: !8326, line: 115, type: !108)
!8430 = !DILocalVariable(name: "size", arg: 4, scope: !8420, file: !8326, line: 115, type: !108)
!8431 = !DILocation(line: 0, scope: !8420)
!8432 = !DILocation(line: 127, column: 23, scope: !8420)
!8433 = !DILocation(line: 127, column: 35, scope: !8420)
!8434 = !DILocation(line: 127, column: 33, scope: !8420)
!8435 = !DILocation(line: 127, column: 10, scope: !8420)
!8436 = !DILocation(line: 127, column: 15, scope: !8420)
!8437 = !DILocation(line: 129, column: 1, scope: !8420)
!8438 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !665, file: !665, line: 57, type: !8439, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8441)
!8439 = !DISubroutineType(types: !8440)
!8440 = !{!103, !1924, !652}
!8441 = !{!8442, !8443}
!8442 = !DILocalVariable(name: "index", arg: 1, scope: !8438, file: !665, line: 57, type: !1924)
!8443 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8438, file: !665, line: 58, type: !652)
!8444 = !DILocation(line: 0, scope: !8438)
!8445 = !DILocation(line: 61, column: 6, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8438, file: !665, line: 61, column: 6)
!8447 = !DILocation(line: 61, column: 12, scope: !8446)
!8448 = !DILocation(line: 61, column: 6, scope: !8438)
!8449 = !DILocation(line: 64, column: 3, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !665, line: 64, column: 3)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !665, line: 64, column: 3)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !665, line: 64, column: 3)
!8453 = distinct !DILexicalBlock(scope: !8454, file: !665, line: 64, column: 3)
!8454 = distinct !DILexicalBlock(scope: !8446, file: !665, line: 61, column: 40)
!8455 = !DILocation(line: 65, column: 3, scope: !8454)
!8456 = !DILocation(line: 71, column: 2, scope: !8438)
!8457 = !DILocation(line: 73, column: 2, scope: !8438)
!8458 = !DILocation(line: 74, column: 1, scope: !8438)
!8459 = distinct !DISubprogram(name: "region_init", scope: !8326, file: !8326, line: 29, type: !8460, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8462)
!8460 = !DISubroutineType(types: !8461)
!8461 = !{null, !7524, !652}
!8462 = !{!8463, !8464}
!8463 = !DILocalVariable(name: "index", arg: 1, scope: !8459, file: !8326, line: 29, type: !7524)
!8464 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8459, file: !8326, line: 30, type: !652)
!8465 = !DILocation(line: 0, scope: !8459)
!8466 = !DILocation(line: 33, column: 2, scope: !8459)
!8467 = !DILocation(line: 47, column: 28, scope: !8459)
!8468 = !DILocation(line: 47, column: 33, scope: !8459)
!8469 = !DILocation(line: 48, column: 26, scope: !8459)
!8470 = !DILocation(line: 47, column: 12, scope: !8459)
!8471 = !DILocation(line: 49, column: 32, scope: !8459)
!8472 = !DILocation(line: 49, column: 37, scope: !8459)
!8473 = !DILocation(line: 49, column: 12, scope: !8459)
!8474 = !DILocation(line: 53, column: 1, scope: !8459)
!8475 = distinct !DISubprogram(name: "set_region_number", scope: !8476, file: !8476, line: 32, type: !6970, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8477)
!8476 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8477 = !{!8478}
!8478 = !DILocalVariable(name: "index", arg: 1, scope: !8475, file: !8476, line: 32, type: !108)
!8479 = !DILocation(line: 0, scope: !8475)
!8480 = !DILocation(line: 34, column: 11, scope: !8475)
!8481 = !DILocation(line: 35, column: 1, scope: !8475)
!8482 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8326, file: !8326, line: 88, type: !8483, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8485)
!8483 = !DISubroutineType(types: !8484)
!8484 = !{!108, !108}
!8485 = !{!8486}
!8486 = !DILocalVariable(name: "size", arg: 1, scope: !8482, file: !8326, line: 88, type: !108)
!8487 = !DILocation(line: 0, scope: !8482)
!8488 = !DILocation(line: 91, column: 11, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8482, file: !8326, line: 91, column: 6)
!8490 = !DILocation(line: 91, column: 6, scope: !8482)
!8491 = !DILocation(line: 100, column: 11, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8482, file: !8326, line: 100, column: 6)
!8493 = !DILocation(line: 100, column: 6, scope: !8482)
!8494 = !DILocation(line: 104, column: 35, scope: !8482)
!8495 = !DILocation(line: 104, column: 16, scope: !8482)
!8496 = !DILocation(line: 104, column: 50, scope: !8482)
!8497 = !DILocation(line: 104, column: 72, scope: !8482)
!8498 = !DILocation(line: 104, column: 2, scope: !8482)
!8499 = !DILocation(line: 106, column: 1, scope: !8482)
!8500 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !665, file: !665, line: 307, type: !8501, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8503)
!8501 = !DISubroutineType(types: !8502)
!8502 = !{null, !8305, !185}
!8503 = !{!8504, !8505}
!8504 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8500, file: !665, line: 308, type: !8305)
!8505 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8500, file: !665, line: 308, type: !185)
!8506 = !DILocation(line: 0, scope: !8500)
!8507 = !DILocation(line: 310, column: 6, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8500, file: !665, line: 310, column: 6)
!8509 = !DILocation(line: 316, column: 1, scope: !8500)
!8510 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8326, file: !8326, line: 249, type: !8511, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8513)
!8511 = !DISubroutineType(types: !8512)
!8512 = !{!103, !8305, !185}
!8513 = !{!8514, !8515, !8516, !8517}
!8514 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8510, file: !8326, line: 250, type: !8305)
!8515 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8510, file: !8326, line: 250, type: !185)
!8516 = !DILocalVariable(name: "mpu_reg_index", scope: !8510, file: !8326, line: 252, type: !103)
!8517 = !DILocalVariable(name: "i", scope: !8518, file: !8326, line: 264, type: !103)
!8518 = distinct !DILexicalBlock(scope: !8519, file: !8326, line: 264, column: 3)
!8519 = distinct !DILexicalBlock(scope: !8520, file: !8326, line: 261, column: 32)
!8520 = distinct !DILexicalBlock(scope: !8510, file: !8326, line: 261, column: 6)
!8521 = !DILocation(line: 0, scope: !8510)
!8522 = !DILocation(line: 252, column: 22, scope: !8510)
!8523 = !DILocation(line: 258, column: 18, scope: !8510)
!8524 = !DILocation(line: 261, column: 20, scope: !8520)
!8525 = !DILocation(line: 261, column: 6, scope: !8510)
!8526 = !DILocation(line: 0, scope: !8518)
!8527 = !DILocation(line: 265, column: 4, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !8326, line: 264, column: 59)
!8529 = distinct !DILexicalBlock(scope: !8518, file: !8326, line: 264, column: 3)
!8530 = !DILocation(line: 264, column: 55, scope: !8529)
!8531 = !DILocation(line: 264, column: 33, scope: !8529)
!8532 = !DILocation(line: 264, column: 3, scope: !8518)
!8533 = distinct !{!8533, !8532, !8534}
!8534 = !DILocation(line: 266, column: 3, scope: !8518)
!8535 = !DILocation(line: 269, column: 2, scope: !8510)
!8536 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8537, file: !8537, line: 218, type: !6970, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8538)
!8537 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8538 = !{!8539}
!8539 = !DILocalVariable(name: "rnr", arg: 1, scope: !8536, file: !8537, line: 218, type: !108)
!8540 = !DILocation(line: 0, scope: !8536)
!8541 = !DILocation(line: 220, column: 12, scope: !8536)
!8542 = !DILocation(line: 221, column: 13, scope: !8536)
!8543 = !DILocation(line: 222, column: 1, scope: !8536)
!8544 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !665, file: !665, line: 326, type: !8545, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !632, retainedNodes: !8547)
!8545 = !DISubroutineType(types: !8546)
!8546 = !{!103}
!8547 = !{!8548}
!8548 = !DILocalVariable(name: "r_index", scope: !8544, file: !665, line: 328, type: !108)
!8549 = !DILocation(line: 330, column: 17, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8544, file: !665, line: 330, column: 6)
!8551 = !DILocation(line: 330, column: 29, scope: !8550)
!8552 = !DILocation(line: 330, column: 6, scope: !8544)
!8553 = !DILocation(line: 347, column: 2, scope: !8544)
!8554 = !DILocation(line: 0, scope: !8544)
!8555 = !DILocation(line: 364, column: 29, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8557, file: !665, line: 364, column: 2)
!8557 = distinct !DILexicalBlock(scope: !8544, file: !665, line: 364, column: 2)
!8558 = !DILocation(line: 364, column: 2, scope: !8557)
!8559 = !DILocation(line: 365, column: 25, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8556, file: !665, line: 364, column: 66)
!8561 = !DILocation(line: 365, column: 3, scope: !8560)
!8562 = !DILocation(line: 364, column: 62, scope: !8556)
!8563 = distinct !{!8563, !8558, !8564}
!8564 = !DILocation(line: 366, column: 2, scope: !8557)
!8565 = !DILocation(line: 369, column: 23, scope: !8544)
!8566 = !DILocation(line: 369, column: 21, scope: !8544)
!8567 = !DILocation(line: 372, column: 2, scope: !8544)
!8568 = !DILocation(line: 443, column: 2, scope: !8544)
!8569 = !DILocation(line: 444, column: 1, scope: !8544)
!8570 = distinct !DISubprogram(name: "strcpy", scope: !8571, file: !8571, line: 20, type: !8572, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8576)
!8571 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8572 = !DISubroutineType(types: !8573)
!8573 = !{!277, !8574, !8575}
!8574 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !277)
!8575 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !337)
!8576 = !{!8577, !8578, !8579}
!8577 = !DILocalVariable(name: "d", arg: 1, scope: !8570, file: !8571, line: 20, type: !8574)
!8578 = !DILocalVariable(name: "s", arg: 2, scope: !8570, file: !8571, line: 20, type: !8575)
!8579 = !DILocalVariable(name: "dest", scope: !8570, file: !8571, line: 22, type: !277)
!8580 = !DILocation(line: 0, scope: !8570)
!8581 = !DILocation(line: 24, column: 9, scope: !8570)
!8582 = !DILocation(line: 24, column: 12, scope: !8570)
!8583 = !DILocation(line: 24, column: 2, scope: !8570)
!8584 = !DILocation(line: 25, column: 6, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8570, file: !8571, line: 24, column: 21)
!8586 = !DILocation(line: 26, column: 4, scope: !8585)
!8587 = !DILocation(line: 27, column: 4, scope: !8585)
!8588 = distinct !{!8588, !8583, !8589}
!8589 = !DILocation(line: 28, column: 2, scope: !8570)
!8590 = !DILocation(line: 30, column: 5, scope: !8570)
!8591 = !DILocation(line: 32, column: 2, scope: !8570)
!8592 = distinct !DISubprogram(name: "strncpy", scope: !8571, file: !8571, line: 42, type: !8593, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8595)
!8593 = !DISubroutineType(types: !8594)
!8594 = !{!277, !8574, !8575, !132}
!8595 = !{!8596, !8597, !8598, !8599}
!8596 = !DILocalVariable(name: "d", arg: 1, scope: !8592, file: !8571, line: 42, type: !8574)
!8597 = !DILocalVariable(name: "s", arg: 2, scope: !8592, file: !8571, line: 42, type: !8575)
!8598 = !DILocalVariable(name: "n", arg: 3, scope: !8592, file: !8571, line: 42, type: !132)
!8599 = !DILocalVariable(name: "dest", scope: !8592, file: !8571, line: 44, type: !277)
!8600 = !DILocation(line: 0, scope: !8592)
!8601 = !DILocation(line: 46, column: 12, scope: !8592)
!8602 = !DILocation(line: 46, column: 17, scope: !8592)
!8603 = !DILocation(line: 46, column: 20, scope: !8592)
!8604 = !DILocation(line: 46, column: 23, scope: !8592)
!8605 = !DILocation(line: 46, column: 2, scope: !8592)
!8606 = !DILocation(line: 47, column: 6, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8592, file: !8571, line: 46, column: 32)
!8608 = !DILocation(line: 48, column: 4, scope: !8607)
!8609 = !DILocation(line: 49, column: 4, scope: !8607)
!8610 = !DILocation(line: 50, column: 4, scope: !8607)
!8611 = distinct !{!8611, !8605, !8612}
!8612 = !DILocation(line: 51, column: 2, scope: !8592)
!8613 = !DILocation(line: 54, column: 6, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8592, file: !8571, line: 53, column: 16)
!8615 = !DILocation(line: 55, column: 4, scope: !8614)
!8616 = !DILocation(line: 56, column: 4, scope: !8614)
!8617 = !DILocation(line: 53, column: 11, scope: !8592)
!8618 = !DILocation(line: 53, column: 2, scope: !8592)
!8619 = distinct !{!8619, !8618, !8620}
!8620 = !DILocation(line: 57, column: 2, scope: !8592)
!8621 = !DILocation(line: 59, column: 2, scope: !8592)
!8622 = distinct !DISubprogram(name: "strchr", scope: !8571, file: !8571, line: 69, type: !8623, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8625)
!8623 = !DISubroutineType(types: !8624)
!8624 = !{!277, !337, !103}
!8625 = !{!8626, !8627, !8628}
!8626 = !DILocalVariable(name: "s", arg: 1, scope: !8622, file: !8571, line: 69, type: !337)
!8627 = !DILocalVariable(name: "c", arg: 2, scope: !8622, file: !8571, line: 69, type: !103)
!8628 = !DILocalVariable(name: "tmp", scope: !8622, file: !8571, line: 71, type: !278)
!8629 = !DILocation(line: 0, scope: !8622)
!8630 = !DILocation(line: 73, column: 2, scope: !8622)
!8631 = !DILocation(line: 73, column: 10, scope: !8622)
!8632 = !DILocation(line: 73, column: 13, scope: !8622)
!8633 = !DILocation(line: 73, column: 21, scope: !8622)
!8634 = !DILocation(line: 74, column: 4, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8622, file: !8571, line: 73, column: 38)
!8636 = distinct !{!8636, !8630, !8637}
!8637 = !DILocation(line: 75, column: 2, scope: !8622)
!8638 = !DILocation(line: 77, column: 9, scope: !8622)
!8639 = !DILocation(line: 77, column: 2, scope: !8622)
!8640 = distinct !DISubprogram(name: "strrchr", scope: !8571, file: !8571, line: 87, type: !8623, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8641)
!8641 = !{!8642, !8643, !8644}
!8642 = !DILocalVariable(name: "s", arg: 1, scope: !8640, file: !8571, line: 87, type: !337)
!8643 = !DILocalVariable(name: "c", arg: 2, scope: !8640, file: !8571, line: 87, type: !103)
!8644 = !DILocalVariable(name: "match", scope: !8640, file: !8571, line: 89, type: !277)
!8645 = !DILocation(line: 0, scope: !8640)
!8646 = !DILocation(line: 91, column: 2, scope: !8640)
!8647 = !DILocation(line: 92, column: 7, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8649, file: !8571, line: 92, column: 7)
!8649 = distinct !DILexicalBlock(scope: !8640, file: !8571, line: 91, column: 5)
!8650 = !DILocation(line: 92, column: 10, scope: !8648)
!8651 = !DILocation(line: 92, column: 7, scope: !8649)
!8652 = !DILocation(line: 95, column: 13, scope: !8640)
!8653 = !DILocation(line: 95, column: 2, scope: !8649)
!8654 = distinct !{!8654, !8646, !8655}
!8655 = !DILocation(line: 95, column: 15, scope: !8640)
!8656 = !DILocation(line: 97, column: 2, scope: !8640)
!8657 = distinct !DISubprogram(name: "strlen", scope: !8571, file: !8571, line: 107, type: !8658, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8660)
!8658 = !DISubroutineType(types: !8659)
!8659 = !{!132, !337}
!8660 = !{!8661, !8662}
!8661 = !DILocalVariable(name: "s", arg: 1, scope: !8657, file: !8571, line: 107, type: !337)
!8662 = !DILocalVariable(name: "n", scope: !8657, file: !8571, line: 109, type: !132)
!8663 = !DILocation(line: 0, scope: !8657)
!8664 = !DILocation(line: 111, column: 9, scope: !8657)
!8665 = !DILocation(line: 111, column: 12, scope: !8657)
!8666 = !DILocation(line: 111, column: 2, scope: !8657)
!8667 = !DILocation(line: 112, column: 4, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8657, file: !8571, line: 111, column: 21)
!8669 = !DILocation(line: 113, column: 4, scope: !8668)
!8670 = distinct !{!8670, !8666, !8671}
!8671 = !DILocation(line: 114, column: 2, scope: !8657)
!8672 = !DILocation(line: 116, column: 2, scope: !8657)
!8673 = distinct !DISubprogram(name: "strnlen", scope: !8571, file: !8571, line: 126, type: !8674, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8676)
!8674 = !DISubroutineType(types: !8675)
!8675 = !{!132, !337, !132}
!8676 = !{!8677, !8678, !8679}
!8677 = !DILocalVariable(name: "s", arg: 1, scope: !8673, file: !8571, line: 126, type: !337)
!8678 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8673, file: !8571, line: 126, type: !132)
!8679 = !DILocalVariable(name: "n", scope: !8673, file: !8571, line: 128, type: !132)
!8680 = !DILocation(line: 0, scope: !8673)
!8681 = !DILocation(line: 130, column: 9, scope: !8673)
!8682 = !DILocation(line: 130, column: 12, scope: !8673)
!8683 = !DILocation(line: 130, column: 20, scope: !8673)
!8684 = !DILocation(line: 130, column: 2, scope: !8673)
!8685 = !DILocation(line: 131, column: 4, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8673, file: !8571, line: 130, column: 35)
!8687 = !DILocation(line: 132, column: 4, scope: !8686)
!8688 = distinct !{!8688, !8684, !8689}
!8689 = !DILocation(line: 133, column: 2, scope: !8673)
!8690 = !DILocation(line: 135, column: 2, scope: !8673)
!8691 = distinct !DISubprogram(name: "strcmp", scope: !8571, file: !8571, line: 145, type: !8692, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8694)
!8692 = !DISubroutineType(types: !8693)
!8693 = !{!103, !337, !337}
!8694 = !{!8695, !8696}
!8695 = !DILocalVariable(name: "s1", arg: 1, scope: !8691, file: !8571, line: 145, type: !337)
!8696 = !DILocalVariable(name: "s2", arg: 2, scope: !8691, file: !8571, line: 145, type: !337)
!8697 = !DILocation(line: 0, scope: !8691)
!8698 = !DILocation(line: 147, column: 10, scope: !8691)
!8699 = !DILocation(line: 147, column: 17, scope: !8691)
!8700 = !DILocation(line: 147, column: 14, scope: !8691)
!8701 = !DILocation(line: 147, column: 22, scope: !8691)
!8702 = !DILocation(line: 148, column: 5, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8691, file: !8571, line: 147, column: 40)
!8704 = !DILocation(line: 149, column: 5, scope: !8703)
!8705 = distinct !{!8705, !8706, !8707}
!8706 = !DILocation(line: 147, column: 2, scope: !8691)
!8707 = !DILocation(line: 150, column: 2, scope: !8691)
!8708 = !DILocation(line: 152, column: 9, scope: !8691)
!8709 = !DILocation(line: 152, column: 15, scope: !8691)
!8710 = !DILocation(line: 152, column: 13, scope: !8691)
!8711 = !DILocation(line: 152, column: 2, scope: !8691)
!8712 = distinct !DISubprogram(name: "strncmp", scope: !8571, file: !8571, line: 162, type: !8713, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8715)
!8713 = !DISubroutineType(types: !8714)
!8714 = !{!103, !337, !337, !132}
!8715 = !{!8716, !8717, !8718}
!8716 = !DILocalVariable(name: "s1", arg: 1, scope: !8712, file: !8571, line: 162, type: !337)
!8717 = !DILocalVariable(name: "s2", arg: 2, scope: !8712, file: !8571, line: 162, type: !337)
!8718 = !DILocalVariable(name: "n", arg: 3, scope: !8712, file: !8571, line: 162, type: !132)
!8719 = !DILocation(line: 0, scope: !8712)
!8720 = !DILocation(line: 164, column: 17, scope: !8712)
!8721 = !DILocation(line: 164, column: 21, scope: !8712)
!8722 = !DILocation(line: 164, column: 28, scope: !8712)
!8723 = !DILocation(line: 164, column: 25, scope: !8712)
!8724 = !DILocation(line: 164, column: 33, scope: !8712)
!8725 = !DILocation(line: 165, column: 5, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8712, file: !8571, line: 164, column: 51)
!8727 = !DILocation(line: 166, column: 5, scope: !8726)
!8728 = !DILocation(line: 167, column: 4, scope: !8726)
!8729 = distinct !{!8729, !8730, !8731}
!8730 = !DILocation(line: 164, column: 2, scope: !8712)
!8731 = !DILocation(line: 168, column: 2, scope: !8712)
!8732 = !DILocation(line: 170, column: 25, scope: !8712)
!8733 = !DILocation(line: 170, column: 31, scope: !8712)
!8734 = !DILocation(line: 170, column: 29, scope: !8712)
!8735 = !DILocation(line: 170, column: 9, scope: !8712)
!8736 = !DILocation(line: 170, column: 2, scope: !8712)
!8737 = distinct !DISubprogram(name: "strtok_r", scope: !8571, file: !8571, line: 180, type: !8738, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8740)
!8738 = !DISubroutineType(types: !8739)
!8739 = !{!277, !277, !337, !378}
!8740 = !{!8741, !8742, !8743, !8744, !8745}
!8741 = !DILocalVariable(name: "str", arg: 1, scope: !8737, file: !8571, line: 180, type: !277)
!8742 = !DILocalVariable(name: "sep", arg: 2, scope: !8737, file: !8571, line: 180, type: !337)
!8743 = !DILocalVariable(name: "state", arg: 3, scope: !8737, file: !8571, line: 180, type: !378)
!8744 = !DILocalVariable(name: "start", scope: !8737, file: !8571, line: 182, type: !277)
!8745 = !DILocalVariable(name: "end", scope: !8737, file: !8571, line: 182, type: !277)
!8746 = !DILocation(line: 0, scope: !8737)
!8747 = !DILocation(line: 184, column: 10, scope: !8737)
!8748 = !DILocation(line: 184, column: 22, scope: !8737)
!8749 = !DILocation(line: 187, column: 9, scope: !8737)
!8750 = !DILocation(line: 187, column: 16, scope: !8737)
!8751 = !DILocation(line: 187, column: 19, scope: !8737)
!8752 = !DILocation(line: 187, column: 2, scope: !8737)
!8753 = !DILocation(line: 188, column: 8, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8737, file: !8571, line: 187, column: 40)
!8755 = distinct !{!8755, !8752, !8756}
!8756 = !DILocation(line: 189, column: 2, scope: !8737)
!8757 = !DILocation(line: 198, column: 9, scope: !8737)
!8758 = !DILocation(line: 198, column: 18, scope: !8737)
!8759 = !DILocation(line: 198, column: 17, scope: !8737)
!8760 = !DILocation(line: 198, column: 2, scope: !8737)
!8761 = !DILocation(line: 199, column: 6, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8737, file: !8571, line: 198, column: 37)
!8763 = !DILocation(line: 198, column: 14, scope: !8737)
!8764 = distinct !{!8764, !8760, !8765}
!8765 = !DILocation(line: 200, column: 2, scope: !8737)
!8766 = !DILocation(line: 203, column: 8, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8768, file: !8571, line: 202, column: 20)
!8768 = distinct !DILexicalBlock(scope: !8737, file: !8571, line: 202, column: 6)
!8769 = !DILocation(line: 204, column: 16, scope: !8767)
!8770 = !DILocation(line: 205, column: 2, scope: !8767)
!8771 = !DILocation(line: 210, column: 1, scope: !8737)
!8772 = distinct !DISubprogram(name: "strcat", scope: !8571, file: !8571, line: 212, type: !8572, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8773)
!8773 = !{!8774, !8775}
!8774 = !DILocalVariable(name: "dest", arg: 1, scope: !8772, file: !8571, line: 212, type: !8574)
!8775 = !DILocalVariable(name: "src", arg: 2, scope: !8772, file: !8571, line: 212, type: !8575)
!8776 = !DILocation(line: 0, scope: !8772)
!8777 = !DILocation(line: 214, column: 16, scope: !8772)
!8778 = !DILocation(line: 214, column: 14, scope: !8772)
!8779 = !DILocation(line: 214, column: 2, scope: !8772)
!8780 = !DILocation(line: 215, column: 2, scope: !8772)
!8781 = distinct !DISubprogram(name: "strncat", scope: !8571, file: !8571, line: 218, type: !8593, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8782)
!8782 = !{!8783, !8784, !8785, !8786, !8787}
!8783 = !DILocalVariable(name: "dest", arg: 1, scope: !8781, file: !8571, line: 218, type: !8574)
!8784 = !DILocalVariable(name: "src", arg: 2, scope: !8781, file: !8571, line: 218, type: !8575)
!8785 = !DILocalVariable(name: "n", arg: 3, scope: !8781, file: !8571, line: 219, type: !132)
!8786 = !DILocalVariable(name: "orig_dest", scope: !8781, file: !8571, line: 221, type: !277)
!8787 = !DILocalVariable(name: "len", scope: !8781, file: !8571, line: 222, type: !132)
!8788 = !DILocation(line: 0, scope: !8781)
!8789 = !DILocation(line: 222, column: 15, scope: !8781)
!8790 = !DILocation(line: 224, column: 7, scope: !8781)
!8791 = !DILocation(line: 225, column: 14, scope: !8781)
!8792 = !DILocation(line: 225, column: 19, scope: !8781)
!8793 = !DILocation(line: 225, column: 11, scope: !8781)
!8794 = !DILocation(line: 225, column: 23, scope: !8781)
!8795 = !DILocation(line: 225, column: 28, scope: !8781)
!8796 = !DILocation(line: 225, column: 2, scope: !8781)
!8797 = !DILocation(line: 226, column: 17, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8781, file: !8571, line: 225, column: 38)
!8799 = !DILocation(line: 226, column: 8, scope: !8798)
!8800 = !DILocation(line: 226, column: 11, scope: !8798)
!8801 = distinct !{!8801, !8796, !8802}
!8802 = !DILocation(line: 227, column: 2, scope: !8781)
!8803 = !DILocation(line: 228, column: 8, scope: !8781)
!8804 = !DILocation(line: 230, column: 2, scope: !8781)
!8805 = distinct !DISubprogram(name: "memcmp", scope: !8571, file: !8571, line: 239, type: !8806, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8808)
!8806 = !DISubroutineType(types: !8807)
!8807 = !{!103, !13, !13, !132}
!8808 = !{!8809, !8810, !8811, !8812, !8813}
!8809 = !DILocalVariable(name: "m1", arg: 1, scope: !8805, file: !8571, line: 239, type: !13)
!8810 = !DILocalVariable(name: "m2", arg: 2, scope: !8805, file: !8571, line: 239, type: !13)
!8811 = !DILocalVariable(name: "n", arg: 3, scope: !8805, file: !8571, line: 239, type: !132)
!8812 = !DILocalVariable(name: "c1", scope: !8805, file: !8571, line: 241, type: !337)
!8813 = !DILocalVariable(name: "c2", scope: !8805, file: !8571, line: 242, type: !337)
!8814 = !DILocation(line: 0, scope: !8805)
!8815 = !DILocation(line: 244, column: 7, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8805, file: !8571, line: 244, column: 6)
!8817 = !DILocation(line: 244, column: 6, scope: !8805)
!8818 = !DILocation(line: 248, column: 10, scope: !8805)
!8819 = !DILocation(line: 248, column: 14, scope: !8805)
!8820 = !DILocation(line: 248, column: 19, scope: !8805)
!8821 = !DILocation(line: 248, column: 2, scope: !8805)
!8822 = !DILocation(line: 248, column: 23, scope: !8805)
!8823 = !DILocation(line: 248, column: 30, scope: !8805)
!8824 = !DILocation(line: 248, column: 27, scope: !8805)
!8825 = !DILocation(line: 249, column: 5, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8805, file: !8571, line: 248, column: 36)
!8827 = !DILocation(line: 250, column: 5, scope: !8826)
!8828 = distinct !{!8828, !8821, !8829}
!8829 = !DILocation(line: 251, column: 2, scope: !8805)
!8830 = !DILocation(line: 253, column: 9, scope: !8805)
!8831 = !DILocation(line: 253, column: 15, scope: !8805)
!8832 = !DILocation(line: 253, column: 13, scope: !8805)
!8833 = !DILocation(line: 253, column: 2, scope: !8805)
!8834 = !DILocation(line: 254, column: 1, scope: !8805)
!8835 = distinct !DISubprogram(name: "memmove", scope: !8571, file: !8571, line: 263, type: !8836, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8838)
!8836 = !DISubroutineType(types: !8837)
!8837 = !{!102, !102, !13, !132}
!8838 = !{!8839, !8840, !8841, !8842, !8843}
!8839 = !DILocalVariable(name: "d", arg: 1, scope: !8835, file: !8571, line: 263, type: !102)
!8840 = !DILocalVariable(name: "s", arg: 2, scope: !8835, file: !8571, line: 263, type: !13)
!8841 = !DILocalVariable(name: "n", arg: 3, scope: !8835, file: !8571, line: 263, type: !132)
!8842 = !DILocalVariable(name: "dest", scope: !8835, file: !8571, line: 265, type: !277)
!8843 = !DILocalVariable(name: "src", scope: !8835, file: !8571, line: 266, type: !337)
!8844 = !DILocation(line: 0, scope: !8835)
!8845 = !DILocation(line: 268, column: 21, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8835, file: !8571, line: 268, column: 6)
!8847 = !DILocation(line: 268, column: 28, scope: !8846)
!8848 = !DILocation(line: 268, column: 6, scope: !8835)
!8849 = !DILocation(line: 280, column: 12, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8846, file: !8571, line: 278, column: 9)
!8851 = !DILocation(line: 280, column: 3, scope: !8850)
!8852 = !DILocation(line: 275, column: 5, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8854, file: !8571, line: 274, column: 17)
!8854 = distinct !DILexicalBlock(scope: !8846, file: !8571, line: 268, column: 33)
!8855 = !DILocation(line: 276, column: 14, scope: !8853)
!8856 = !DILocation(line: 276, column: 4, scope: !8853)
!8857 = !DILocation(line: 276, column: 12, scope: !8853)
!8858 = !DILocation(line: 274, column: 12, scope: !8854)
!8859 = !DILocation(line: 274, column: 3, scope: !8854)
!8860 = distinct !{!8860, !8859, !8861}
!8861 = !DILocation(line: 277, column: 3, scope: !8854)
!8862 = !DILocation(line: 281, column: 12, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8850, file: !8571, line: 280, column: 17)
!8864 = !DILocation(line: 281, column: 10, scope: !8863)
!8865 = !DILocation(line: 282, column: 8, scope: !8863)
!8866 = !DILocation(line: 283, column: 7, scope: !8863)
!8867 = !DILocation(line: 284, column: 5, scope: !8863)
!8868 = distinct !{!8868, !8851, !8869}
!8869 = !DILocation(line: 285, column: 3, scope: !8850)
!8870 = !DILocation(line: 288, column: 2, scope: !8835)
!8871 = distinct !DISubprogram(name: "memcpy", scope: !8571, file: !8571, line: 298, type: !8872, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8876)
!8872 = !DISubroutineType(types: !8873)
!8873 = !{!102, !8874, !8875, !132}
!8874 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8875 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8876 = !{!8877, !8878, !8879, !8880, !8881}
!8877 = !DILocalVariable(name: "d", arg: 1, scope: !8871, file: !8571, line: 298, type: !8874)
!8878 = !DILocalVariable(name: "s", arg: 2, scope: !8871, file: !8571, line: 298, type: !8875)
!8879 = !DILocalVariable(name: "n", arg: 3, scope: !8871, file: !8571, line: 298, type: !132)
!8880 = !DILocalVariable(name: "d_byte", scope: !8871, file: !8571, line: 302, type: !1150)
!8881 = !DILocalVariable(name: "s_byte", scope: !8871, file: !8571, line: 303, type: !3037)
!8882 = !DILocation(line: 0, scope: !8871)
!8883 = !DILocation(line: 337, column: 11, scope: !8871)
!8884 = !DILocation(line: 337, column: 2, scope: !8871)
!8885 = !DILocation(line: 338, column: 25, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8871, file: !8571, line: 337, column: 16)
!8887 = !DILocation(line: 338, column: 17, scope: !8886)
!8888 = !DILocation(line: 338, column: 11, scope: !8886)
!8889 = !DILocation(line: 338, column: 15, scope: !8886)
!8890 = !DILocation(line: 339, column: 4, scope: !8886)
!8891 = distinct !{!8891, !8884, !8892}
!8892 = !DILocation(line: 340, column: 2, scope: !8871)
!8893 = !DILocation(line: 342, column: 2, scope: !8871)
!8894 = distinct !DISubprogram(name: "memset", scope: !8571, file: !8571, line: 352, type: !8895, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8897)
!8895 = !DISubroutineType(types: !8896)
!8896 = !{!102, !102, !103, !132}
!8897 = !{!8898, !8899, !8900, !8901, !8902}
!8898 = !DILocalVariable(name: "buf", arg: 1, scope: !8894, file: !8571, line: 352, type: !102)
!8899 = !DILocalVariable(name: "c", arg: 2, scope: !8894, file: !8571, line: 352, type: !103)
!8900 = !DILocalVariable(name: "n", arg: 3, scope: !8894, file: !8571, line: 352, type: !132)
!8901 = !DILocalVariable(name: "d_byte", scope: !8894, file: !8571, line: 356, type: !1150)
!8902 = !DILocalVariable(name: "c_byte", scope: !8894, file: !8571, line: 357, type: !186)
!8903 = !DILocation(line: 0, scope: !8894)
!8904 = !DILocation(line: 357, column: 25, scope: !8894)
!8905 = !DILocation(line: 389, column: 11, scope: !8894)
!8906 = !DILocation(line: 389, column: 2, scope: !8894)
!8907 = !DILocation(line: 390, column: 11, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8894, file: !8571, line: 389, column: 16)
!8909 = !DILocation(line: 390, column: 15, scope: !8908)
!8910 = !DILocation(line: 391, column: 4, scope: !8908)
!8911 = distinct !{!8911, !8906, !8912}
!8912 = !DILocation(line: 392, column: 2, scope: !8894)
!8913 = !DILocation(line: 394, column: 2, scope: !8894)
!8914 = distinct !DISubprogram(name: "memchr", scope: !8571, file: !8571, line: 404, type: !8915, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8917)
!8915 = !DISubroutineType(types: !8916)
!8916 = !{!102, !13, !103, !132}
!8917 = !{!8918, !8919, !8920, !8921}
!8918 = !DILocalVariable(name: "s", arg: 1, scope: !8914, file: !8571, line: 404, type: !13)
!8919 = !DILocalVariable(name: "c", arg: 2, scope: !8914, file: !8571, line: 404, type: !103)
!8920 = !DILocalVariable(name: "n", arg: 3, scope: !8914, file: !8571, line: 404, type: !132)
!8921 = !DILocalVariable(name: "p", scope: !8922, file: !8571, line: 407, type: !3037)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !8571, line: 406, column: 14)
!8923 = distinct !DILexicalBlock(scope: !8914, file: !8571, line: 406, column: 6)
!8924 = !DILocation(line: 0, scope: !8914)
!8925 = !DILocation(line: 406, column: 8, scope: !8923)
!8926 = !DILocation(line: 406, column: 6, scope: !8914)
!8927 = !DILocation(line: 409, column: 3, scope: !8922)
!8928 = !DILocation(line: 0, scope: !8922)
!8929 = !DILocation(line: 410, column: 8, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !8571, line: 410, column: 8)
!8931 = distinct !DILexicalBlock(scope: !8922, file: !8571, line: 409, column: 6)
!8932 = !DILocation(line: 410, column: 13, scope: !8930)
!8933 = !DILocation(line: 410, column: 8, scope: !8931)
!8934 = distinct !{!8934, !8927, !8935}
!8935 = !DILocation(line: 414, column: 20, scope: !8922)
!8936 = !DILocation(line: 417, column: 2, scope: !8914)
!8937 = !DILocation(line: 418, column: 1, scope: !8914)
!8938 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !675, file: !675, line: 23, type: !4478, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !668, retainedNodes: !8939)
!8939 = !{!8940}
!8940 = !DILocalVariable(name: "hook", arg: 1, scope: !8938, file: !675, line: 23, type: !395)
!8941 = !DILocation(line: 0, scope: !8938)
!8942 = !DILocation(line: 25, column: 15, scope: !8938)
!8943 = !DILocation(line: 26, column: 1, scope: !8938)
!8944 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !675, file: !675, line: 14, type: !396, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !668, retainedNodes: !8945)
!8945 = !{!8946}
!8946 = !DILocalVariable(name: "c", arg: 1, scope: !8944, file: !675, line: 14, type: !103)
!8947 = !DILocation(line: 0, scope: !8944)
!8948 = !DILocation(line: 18, column: 2, scope: !8944)
!8949 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !675, file: !675, line: 28, type: !8950, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !668, retainedNodes: !8952)
!8950 = !DISubroutineType(types: !8951)
!8951 = !{!103, !103, !671}
!8952 = !{!8953, !8954}
!8953 = !DILocalVariable(name: "c", arg: 1, scope: !8949, file: !675, line: 28, type: !103)
!8954 = !DILocalVariable(name: "stream", arg: 2, scope: !8949, file: !675, line: 28, type: !671)
!8955 = !DILocation(line: 0, scope: !8949)
!8956 = !DILocation(line: 30, column: 27, scope: !8949)
!8957 = !DILocation(line: 30, column: 50, scope: !8949)
!8958 = !DILocation(line: 30, column: 9, scope: !8949)
!8959 = !DILocation(line: 30, column: 2, scope: !8949)
!8960 = distinct !DISubprogram(name: "fputc", scope: !675, file: !675, line: 41, type: !8950, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !668, retainedNodes: !8961)
!8961 = !{!8962, !8963}
!8962 = !DILocalVariable(name: "c", arg: 1, scope: !8960, file: !675, line: 41, type: !103)
!8963 = !DILocalVariable(name: "stream", arg: 2, scope: !8960, file: !675, line: 41, type: !671)
!8964 = !DILocation(line: 0, scope: !8960)
!8965 = !DILocation(line: 43, column: 9, scope: !8960)
!8966 = !DILocation(line: 43, column: 2, scope: !8960)
!8967 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8968, file: !8968, line: 72, type: !8950, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !668, retainedNodes: !8969)
!8968 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!8969 = !{!8970, !8971}
!8970 = !DILocalVariable(name: "c", arg: 1, scope: !8967, file: !8968, line: 72, type: !103)
!8971 = !DILocalVariable(name: "stream", arg: 2, scope: !8967, file: !8968, line: 72, type: !671)
!8972 = !DILocation(line: 0, scope: !8967)
!8973 = !DILocation(line: 81, column: 2, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8967, file: !8968, line: 81, column: 2)
!8975 = !{i64 2152279375}
!8976 = !DILocation(line: 82, column: 9, scope: !8967)
!8977 = !DILocation(line: 82, column: 2, scope: !8967)
!8978 = distinct !DISubprogram(name: "fputs", scope: !675, file: !675, line: 46, type: !8979, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !668, retainedNodes: !8982)
!8979 = !DISubroutineType(types: !8980)
!8980 = !{!103, !8575, !8981}
!8981 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !671)
!8982 = !{!8983, !8984, !8985, !8986}
!8983 = !DILocalVariable(name: "s", arg: 1, scope: !8978, file: !675, line: 46, type: !8575)
!8984 = !DILocalVariable(name: "stream", arg: 2, scope: !8978, file: !675, line: 46, type: !8981)
!8985 = !DILocalVariable(name: "len", scope: !8978, file: !675, line: 48, type: !103)
!8986 = !DILocalVariable(name: "ret", scope: !8978, file: !675, line: 49, type: !103)
!8987 = !DILocation(line: 0, scope: !8978)
!8988 = !DILocation(line: 48, column: 12, scope: !8978)
!8989 = !DILocation(line: 51, column: 8, scope: !8978)
!8990 = !DILocation(line: 53, column: 13, scope: !8978)
!8991 = !DILocation(line: 53, column: 9, scope: !8978)
!8992 = !DILocation(line: 53, column: 2, scope: !8978)
!8993 = distinct !DISubprogram(name: "fwrite", scope: !675, file: !675, line: 99, type: !8994, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !668, retainedNodes: !8996)
!8994 = !DISubroutineType(types: !8995)
!8995 = !{!132, !8875, !132, !132, !8981}
!8996 = !{!8997, !8998, !8999, !9000}
!8997 = !DILocalVariable(name: "ptr", arg: 1, scope: !8993, file: !675, line: 99, type: !8875)
!8998 = !DILocalVariable(name: "size", arg: 2, scope: !8993, file: !675, line: 99, type: !132)
!8999 = !DILocalVariable(name: "nitems", arg: 3, scope: !8993, file: !675, line: 99, type: !132)
!9000 = !DILocalVariable(name: "stream", arg: 4, scope: !8993, file: !675, line: 100, type: !8981)
!9001 = !DILocation(line: 0, scope: !8993)
!9002 = !DILocation(line: 102, column: 9, scope: !8993)
!9003 = !DILocation(line: 102, column: 2, scope: !8993)
!9004 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8968, file: !8968, line: 96, type: !8994, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !668, retainedNodes: !9005)
!9005 = !{!9006, !9007, !9008, !9009}
!9006 = !DILocalVariable(name: "ptr", arg: 1, scope: !9004, file: !8968, line: 96, type: !8875)
!9007 = !DILocalVariable(name: "size", arg: 2, scope: !9004, file: !8968, line: 96, type: !132)
!9008 = !DILocalVariable(name: "nitems", arg: 3, scope: !9004, file: !8968, line: 96, type: !132)
!9009 = !DILocalVariable(name: "stream", arg: 4, scope: !9004, file: !8968, line: 96, type: !8981)
!9010 = !DILocation(line: 0, scope: !9004)
!9011 = !DILocation(line: 107, column: 2, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9004, file: !8968, line: 107, column: 2)
!9013 = !{i64 2152279479}
!9014 = !DILocation(line: 108, column: 9, scope: !9004)
!9015 = !DILocation(line: 108, column: 2, scope: !9004)
!9016 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !675, file: !675, line: 56, type: !8994, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !668, retainedNodes: !9017)
!9017 = !{!9018, !9019, !9020, !9021, !9022, !9023, !9024, !9025}
!9018 = !DILocalVariable(name: "ptr", arg: 1, scope: !9016, file: !675, line: 56, type: !8875)
!9019 = !DILocalVariable(name: "size", arg: 2, scope: !9016, file: !675, line: 56, type: !132)
!9020 = !DILocalVariable(name: "nitems", arg: 3, scope: !9016, file: !675, line: 57, type: !132)
!9021 = !DILocalVariable(name: "stream", arg: 4, scope: !9016, file: !675, line: 57, type: !8981)
!9022 = !DILocalVariable(name: "i", scope: !9016, file: !675, line: 59, type: !132)
!9023 = !DILocalVariable(name: "j", scope: !9016, file: !675, line: 60, type: !132)
!9024 = !DILocalVariable(name: "p", scope: !9016, file: !675, line: 61, type: !3037)
!9025 = !DILabel(scope: !9016, name: "done", file: !675, line: 82)
!9026 = !DILocation(line: 0, scope: !9016)
!9027 = !DILocation(line: 63, column: 14, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9016, file: !675, line: 63, column: 6)
!9029 = !DILocation(line: 63, column: 24, scope: !9028)
!9030 = !DILocation(line: 72, column: 3, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9016, file: !675, line: 70, column: 5)
!9032 = !DILocation(line: 0, scope: !9031)
!9033 = !DILocation(line: 73, column: 8, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !675, line: 73, column: 8)
!9035 = distinct !DILexicalBlock(scope: !9031, file: !675, line: 72, column: 6)
!9036 = !DILocation(line: 73, column: 29, scope: !9034)
!9037 = !DILocation(line: 73, column: 27, scope: !9034)
!9038 = !DILocation(line: 73, column: 21, scope: !9034)
!9039 = !DILocation(line: 73, column: 33, scope: !9034)
!9040 = !DILocation(line: 73, column: 8, scope: !9035)
!9041 = !DILocation(line: 76, column: 5, scope: !9035)
!9042 = !DILocation(line: 77, column: 14, scope: !9031)
!9043 = !DILocation(line: 77, column: 3, scope: !9035)
!9044 = distinct !{!9044, !9030, !9045}
!9045 = !DILocation(line: 77, column: 17, scope: !9031)
!9046 = !DILocation(line: 79, column: 4, scope: !9031)
!9047 = !DILocation(line: 80, column: 13, scope: !9016)
!9048 = !DILocation(line: 80, column: 2, scope: !9031)
!9049 = distinct !{!9049, !9050, !9051}
!9050 = !DILocation(line: 70, column: 2, scope: !9016)
!9051 = !DILocation(line: 80, column: 16, scope: !9016)
!9052 = !DILocation(line: 82, column: 1, scope: !9016)
!9053 = !DILocation(line: 83, column: 17, scope: !9016)
!9054 = !DILocation(line: 83, column: 2, scope: !9016)
!9055 = !DILocation(line: 84, column: 1, scope: !9016)
!9056 = distinct !DISubprogram(name: "puts", scope: !675, file: !675, line: 106, type: !9057, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !668, retainedNodes: !9059)
!9057 = !DISubroutineType(types: !9058)
!9058 = !{!103, !337}
!9059 = !{!9060}
!9060 = !DILocalVariable(name: "s", arg: 1, scope: !9056, file: !675, line: 106, type: !337)
!9061 = !DILocation(line: 0, scope: !9056)
!9062 = !DILocation(line: 108, column: 6, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9056, file: !675, line: 108, column: 6)
!9064 = !DILocation(line: 108, column: 23, scope: !9063)
!9065 = !DILocation(line: 108, column: 6, scope: !9056)
!9066 = !DILocation(line: 112, column: 9, scope: !9056)
!9067 = !DILocation(line: 112, column: 29, scope: !9056)
!9068 = !DILocation(line: 112, column: 2, scope: !9056)
!9069 = !DILocation(line: 113, column: 1, scope: !9056)
!9070 = distinct !DISubprogram(name: "rf_init", scope: !800, file: !800, line: 10, type: !806, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !703, retainedNodes: !9071)
!9071 = !{!9072, !9073, !9081, !9082}
!9072 = !DILocalVariable(name: "dev", arg: 1, scope: !9070, file: !800, line: 10, type: !726)
!9073 = !DILocalVariable(name: "rf1", scope: !9070, file: !800, line: 12, type: !9074)
!9074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9075)
!9075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !707, line: 271, size: 64, elements: !9076)
!9076 = !{!9077, !9078, !9079}
!9077 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !9075, file: !707, line: 273, baseType: !726, size: 32)
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !9075, file: !707, line: 275, baseType: !741, size: 8, offset: 32)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !9075, file: !707, line: 277, baseType: !9080, size: 16, offset: 48)
!9080 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !707, line: 249, baseType: !121)
!9081 = !DILocalVariable(name: "rf2", scope: !9070, file: !800, line: 14, type: !9074)
!9082 = !DILocalVariable(name: "rf3", scope: !9070, file: !800, line: 16, type: !9074)
!9083 = !DILocation(line: 0, scope: !9070)
!9084 = !DILocation(line: 12, column: 2, scope: !9070)
!9085 = !DILocation(line: 12, column: 28, scope: !9070)
!9086 = !DILocation(line: 14, column: 2, scope: !9070)
!9087 = !DILocation(line: 14, column: 28, scope: !9070)
!9088 = !DILocation(line: 16, column: 2, scope: !9070)
!9089 = !DILocation(line: 16, column: 28, scope: !9070)
!9090 = !DILocation(line: 22, column: 27, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9070, file: !800, line: 22, column: 6)
!9092 = !DILocation(line: 22, column: 7, scope: !9091)
!9093 = !DILocation(line: 22, column: 33, scope: !9091)
!9094 = !DILocation(line: 23, column: 7, scope: !9091)
!9095 = !DILocation(line: 23, column: 33, scope: !9091)
!9096 = !DILocation(line: 24, column: 7, scope: !9091)
!9097 = !DILocation(line: 22, column: 6, scope: !9070)
!9098 = !DILocation(line: 28, column: 8, scope: !9070)
!9099 = !DILocation(line: 29, column: 8, scope: !9070)
!9100 = !DILocation(line: 30, column: 8, scope: !9070)
!9101 = !DILocation(line: 32, column: 2, scope: !9070)
!9102 = !DILocation(line: 33, column: 1, scope: !9070)
!9103 = distinct !DISubprogram(name: "device_is_ready", scope: !9104, file: !9104, line: 47, type: !9105, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !703, retainedNodes: !9107)
!9104 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!9105 = !DISubroutineType(types: !9106)
!9106 = !{!131, !726}
!9107 = !{!9108}
!9108 = !DILocalVariable(name: "dev", arg: 1, scope: !9103, file: !9104, line: 47, type: !726)
!9109 = !DILocation(line: 0, scope: !9103)
!9110 = !DILocation(line: 55, column: 2, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9103, file: !9104, line: 55, column: 2)
!9112 = !{i64 2148927149}
!9113 = !DILocation(line: 56, column: 9, scope: !9103)
!9114 = !DILocation(line: 56, column: 2, scope: !9103)
!9115 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !707, file: !707, line: 731, type: !9116, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !703, retainedNodes: !9119)
!9116 = !DISubroutineType(types: !9117)
!9117 = !{!103, !9118, !742}
!9118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9074, size: 32)
!9119 = !{!9120, !9121}
!9120 = !DILocalVariable(name: "spec", arg: 1, scope: !9115, file: !707, line: 731, type: !9118)
!9121 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !9115, file: !707, line: 732, type: !742)
!9122 = !DILocation(line: 0, scope: !9115)
!9123 = !DILocation(line: 734, column: 34, scope: !9115)
!9124 = !DILocation(line: 735, column: 13, scope: !9115)
!9125 = !DILocation(line: 736, column: 13, scope: !9115)
!9126 = !DILocation(line: 736, column: 7, scope: !9115)
!9127 = !DILocation(line: 736, column: 22, scope: !9115)
!9128 = !DILocation(line: 734, column: 9, scope: !9115)
!9129 = !DILocation(line: 734, column: 2, scope: !9115)
!9130 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !9131, file: !9131, line: 49, type: !724, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !703, retainedNodes: !9132)
!9131 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!9132 = !{!9133, !9134, !9135}
!9133 = !DILocalVariable(name: "port", arg: 1, scope: !9130, file: !9131, line: 49, type: !726)
!9134 = !DILocalVariable(name: "pin", arg: 2, scope: !9130, file: !9131, line: 49, type: !741)
!9135 = !DILocalVariable(name: "flags", arg: 3, scope: !9130, file: !9131, line: 49, type: !742)
!9136 = !DILocation(line: 0, scope: !9130)
!9137 = !DILocation(line: 59, column: 2, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9130, file: !9131, line: 59, column: 2)
!9139 = !{i64 2148941519}
!9140 = !DILocation(line: 60, column: 9, scope: !9130)
!9141 = !DILocation(line: 60, column: 2, scope: !9130)
!9142 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !707, file: !707, line: 667, type: !724, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !703, retainedNodes: !9143)
!9143 = !{!9144, !9145, !9146, !9147, !9148, !9150}
!9144 = !DILocalVariable(name: "port", arg: 1, scope: !9142, file: !707, line: 667, type: !726)
!9145 = !DILocalVariable(name: "pin", arg: 2, scope: !9142, file: !707, line: 668, type: !741)
!9146 = !DILocalVariable(name: "flags", arg: 3, scope: !9142, file: !707, line: 669, type: !742)
!9147 = !DILocalVariable(name: "api", scope: !9142, file: !707, line: 671, type: !718)
!9148 = !DILocalVariable(name: "cfg", scope: !9142, file: !707, line: 673, type: !9149)
!9149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !788)
!9150 = !DILocalVariable(name: "data", scope: !9142, file: !707, line: 675, type: !798)
!9151 = !DILocation(line: 0, scope: !9142)
!9152 = !DILocation(line: 672, column: 41, scope: !9142)
!9153 = !DILocation(line: 676, column: 36, scope: !9142)
!9154 = !DILocation(line: 701, column: 6, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9142, file: !707, line: 700, column: 6)
!9156 = !DILocation(line: 711, column: 13, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9142, file: !707, line: 711, column: 6)
!9158 = !DILocation(line: 711, column: 32, scope: !9157)
!9159 = !DILocation(line: 0, scope: !9157)
!9160 = !DILocation(line: 711, column: 6, scope: !9142)
!9161 = !DILocation(line: 712, column: 9, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9157, file: !707, line: 711, column: 38)
!9163 = !DILocation(line: 712, column: 16, scope: !9162)
!9164 = !DILocation(line: 713, column: 2, scope: !9162)
!9165 = !DILocation(line: 714, column: 19, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9157, file: !707, line: 713, column: 9)
!9167 = !DILocation(line: 714, column: 9, scope: !9166)
!9168 = !DILocation(line: 714, column: 16, scope: !9166)
!9169 = !DILocation(line: 706, column: 8, scope: !9142)
!9170 = !DILocation(line: 717, column: 14, scope: !9142)
!9171 = !DILocation(line: 717, column: 9, scope: !9142)
!9172 = !DILocation(line: 717, column: 2, scope: !9142)
!9173 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !442, file: !442, line: 730, type: !9105, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !703, retainedNodes: !9174)
!9174 = !{!9175}
!9175 = !DILocalVariable(name: "dev", arg: 1, scope: !9173, file: !442, line: 730, type: !726)
!9176 = !DILocation(line: 0, scope: !9173)
!9177 = !DILocation(line: 732, column: 9, scope: !9173)
!9178 = !DILocation(line: 732, column: 2, scope: !9173)
!9179 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !815, file: !815, line: 12, type: !9180, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !811, retainedNodes: !9186)
!9180 = !DISubroutineType(types: !9181)
!9181 = !{!9182, !109}
!9182 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !9183)
!9183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !9184)
!9184 = !{!9185}
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9183, file: !105, line: 66, baseType: !104, size: 64)
!9186 = !{!9187, !9188}
!9187 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9179, file: !815, line: 12, type: !109)
!9188 = !DILocalVariable(name: "now_ticks", scope: !9179, file: !815, line: 14, type: !106)
!9189 = !DILocation(line: 0, scope: !9179)
!9190 = !DILocation(line: 14, column: 22, scope: !9179)
!9191 = !DILocation(line: 16, column: 9, scope: !9179)
!9192 = !DILocation(line: 17, column: 1, scope: !9179)
!9193 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !815, file: !815, line: 103, type: !9194, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !811, retainedNodes: !9340)
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!103, !9196, !13, !9182}
!9196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9197, size: 32)
!9197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9198)
!9198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !9199)
!9199 = !{!9200, !9201, !9202, !9203, !9204, !9312}
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9198, file: !117, line: 35, baseType: !120, size: 16)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9198, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9198, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9198, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9198, file: !117, line: 56, baseType: !9205, size: 32, offset: 128)
!9205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9206, size: 32)
!9206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !9207)
!9207 = !{!9208, !9227, !9310, !9311}
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9206, file: !137, line: 2722, baseType: !9209, size: 64)
!9209 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !9210)
!9210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !9211)
!9211 = !{!9212}
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9210, file: !141, line: 232, baseType: !9213, size: 64)
!9213 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !9214)
!9214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !9215)
!9215 = !{!9216, !9222}
!9216 = !DIDerivedType(tag: DW_TAG_member, scope: !9214, file: !146, line: 38, baseType: !9217, size: 32)
!9217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9214, file: !146, line: 38, size: 32, elements: !9218)
!9218 = !{!9219, !9221}
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9217, file: !146, line: 39, baseType: !9220, size: 32)
!9220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9214, size: 32)
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9217, file: !146, line: 40, baseType: !9220, size: 32)
!9222 = !DIDerivedType(tag: DW_TAG_member, scope: !9214, file: !146, line: 42, baseType: !9223, size: 32, offset: 32)
!9223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9214, file: !146, line: 42, size: 32, elements: !9224)
!9224 = !{!9225, !9226}
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9223, file: !146, line: 43, baseType: !9220, size: 32)
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9223, file: !146, line: 44, baseType: !9220, size: 32)
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9206, file: !137, line: 2724, baseType: !9228, size: 32, offset: 64)
!9228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9229, size: 32)
!9229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !9230)
!9230 = !{!9231, !9271, !9283, !9284, !9285, !9286, !9292, !9305}
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9229, file: !163, line: 247, baseType: !9232, size: 384)
!9232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !9233)
!9233 = !{!9234, !9245, !9247, !9248, !9249, !9258, !9259, !9260}
!9234 = !DIDerivedType(tag: DW_TAG_member, scope: !9232, file: !163, line: 60, baseType: !9235, size: 64)
!9235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9232, file: !163, line: 60, size: 64, elements: !9236)
!9236 = !{!9237, !9239}
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9235, file: !163, line: 61, baseType: !9238, size: 64)
!9238 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !9214)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9235, file: !163, line: 62, baseType: !9240, size: 64)
!9240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !9241)
!9241 = !{!9242}
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9240, file: !175, line: 50, baseType: !9243, size: 64)
!9243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9244, size: 64, elements: !180)
!9244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9240, size: 32)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9232, file: !163, line: 68, baseType: !9246, size: 32, offset: 64)
!9246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9209, size: 32)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9232, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9232, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!9249 = !DIDerivedType(tag: DW_TAG_member, scope: !9232, file: !163, line: 90, baseType: !9250, size: 16, offset: 112)
!9250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9232, file: !163, line: 90, size: 16, elements: !9251)
!9251 = !{!9252, !9257}
!9252 = !DIDerivedType(tag: DW_TAG_member, scope: !9250, file: !163, line: 91, baseType: !9253, size: 16)
!9253 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9250, file: !163, line: 91, size: 16, elements: !9254)
!9254 = !{!9255, !9256}
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9253, file: !163, line: 96, baseType: !195, size: 8)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9253, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9250, file: !163, line: 100, baseType: !121, size: 16)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9232, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9232, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9232, file: !163, line: 131, baseType: !9261, size: 192, offset: 192)
!9261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !9262)
!9262 = !{!9263, !9264, !9270}
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9261, file: !141, line: 245, baseType: !9238, size: 64)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9261, file: !141, line: 246, baseType: !9265, size: 32, offset: 64)
!9265 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !9266)
!9266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9267, size: 32)
!9267 = !DISubroutineType(types: !9268)
!9268 = !{null, !9269}
!9269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9261, size: 32)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9261, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9229, file: !163, line: 250, baseType: !9272, size: 288, offset: 384)
!9272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !9273)
!9273 = !{!9274, !9275, !9276, !9277, !9278, !9279, !9280, !9281, !9282}
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9272, file: !214, line: 26, baseType: !108, size: 32)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9272, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9272, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9272, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9272, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9272, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9272, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9272, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9272, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9229, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9229, file: !163, line: 256, baseType: !9209, size: 64, offset: 704)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9229, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9229, file: !163, line: 300, baseType: !9287, size: 96, offset: 800)
!9287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !9288)
!9288 = !{!9289, !9290, !9291}
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9287, file: !163, line: 153, baseType: !22, size: 32)
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9287, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9287, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9229, file: !163, line: 325, baseType: !9293, size: 32, offset: 896)
!9293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9294, size: 32)
!9294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !9295)
!9295 = !{!9296, !9302, !9303}
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9294, file: !137, line: 5074, baseType: !9297, size: 96)
!9297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !9298)
!9298 = !{!9299, !9300, !9301}
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9297, file: !240, line: 57, baseType: !243, size: 32)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9297, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9297, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9294, file: !137, line: 5075, baseType: !9209, size: 64, offset: 96)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9294, file: !137, line: 5076, baseType: !9304, offset: 160)
!9304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9229, file: !163, line: 343, baseType: !9306, size: 64, offset: 928)
!9306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !9307)
!9307 = !{!9308, !9309}
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9306, file: !214, line: 63, baseType: !108, size: 32)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9306, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9206, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9206, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9198, file: !117, line: 67, baseType: !9313, size: 32, offset: 160)
!9313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9314, size: 32)
!9314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9315)
!9315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9316, size: 32)
!9316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9317)
!9317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !9318)
!9318 = !{!9319, !9320, !9335}
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9317, file: !117, line: 91, baseType: !131, size: 8)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9317, file: !117, line: 93, baseType: !9321, size: 32, offset: 32)
!9321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9322)
!9322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9323, size: 32)
!9323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !9324)
!9324 = !{!9325, !9326, !9327, !9328, !9329, !9330, !9331, !9332, !9333, !9334}
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9323, file: !137, line: 4206, baseType: !9209, size: 64)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9323, file: !137, line: 4208, baseType: !9304, offset: 64)
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9323, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!9328 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9323, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9323, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9323, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!9331 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9323, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9323, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!9333 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9323, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9323, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!9335 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9317, file: !117, line: 96, baseType: !9336, size: 32, offset: 64)
!9336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9337)
!9337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9338, size: 32)
!9338 = !DISubroutineType(types: !9339)
!9339 = !{null, !9196}
!9340 = !{!9341, !9342, !9343, !9344, !9345}
!9341 = !DILocalVariable(name: "chan", arg: 1, scope: !9193, file: !815, line: 103, type: !9196)
!9342 = !DILocalVariable(name: "msg", arg: 2, scope: !9193, file: !815, line: 103, type: !13)
!9343 = !DILocalVariable(name: "timeout", arg: 3, scope: !9193, file: !815, line: 103, type: !9182)
!9344 = !DILocalVariable(name: "err", scope: !9193, file: !815, line: 105, type: !103)
!9345 = !DILocalVariable(name: "end_ticks", scope: !9193, file: !815, line: 106, type: !109)
!9346 = !DILocation(line: 0, scope: !9193)
!9347 = !DILocation(line: 106, column: 23, scope: !9193)
!9348 = !DILocation(line: 112, column: 12, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9193, file: !815, line: 112, column: 6)
!9350 = !DILocation(line: 112, column: 22, scope: !9349)
!9351 = !DILocation(line: 112, column: 30, scope: !9349)
!9352 = !DILocation(line: 112, column: 61, scope: !9349)
!9353 = !DILocation(line: 112, column: 55, scope: !9349)
!9354 = !DILocation(line: 112, column: 34, scope: !9349)
!9355 = !DILocation(line: 112, column: 6, scope: !9193)
!9356 = !DILocation(line: 116, column: 27, scope: !9193)
!9357 = !DILocation(line: 116, column: 8, scope: !9193)
!9358 = !DILocation(line: 117, column: 6, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9193, file: !815, line: 117, column: 6)
!9360 = !DILocation(line: 117, column: 6, scope: !9193)
!9361 = !DILocation(line: 121, column: 15, scope: !9193)
!9362 = !DILocation(line: 121, column: 35, scope: !9193)
!9363 = !DILocation(line: 121, column: 29, scope: !9193)
!9364 = !DILocation(line: 121, column: 2, scope: !9193)
!9365 = !DILocation(line: 123, column: 8, scope: !9193)
!9366 = !DILocation(line: 125, column: 23, scope: !9193)
!9367 = !DILocation(line: 125, column: 2, scope: !9193)
!9368 = !DILocation(line: 127, column: 2, scope: !9193)
!9369 = !DILocation(line: 128, column: 1, scope: !9193)
!9370 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3584, file: !3584, line: 927, type: !9371, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !811, retainedNodes: !9373)
!9371 = !DISubroutineType(types: !9372)
!9372 = !{!103, !9205, !9182}
!9373 = !{!9374, !9375}
!9374 = !DILocalVariable(name: "mutex", arg: 1, scope: !9370, file: !3584, line: 927, type: !9205)
!9375 = !DILocalVariable(name: "timeout", arg: 2, scope: !9370, file: !3584, line: 927, type: !9182)
!9376 = !DILocation(line: 0, scope: !9370)
!9377 = !DILocation(line: 936, column: 2, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9370, file: !3584, line: 936, column: 2)
!9379 = !{i64 2152220936}
!9380 = !DILocation(line: 937, column: 9, scope: !9370)
!9381 = !DILocation(line: 937, column: 2, scope: !9370)
!9382 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !815, file: !815, line: 66, type: !9383, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !811, retainedNodes: !9385)
!9383 = !DISubroutineType(types: !9384)
!9384 = !{!103, !9196, !109}
!9385 = !{!9386, !9387, !9388, !9389, !9390, !9392}
!9386 = !DILocalVariable(name: "chan", arg: 1, scope: !9382, file: !815, line: 66, type: !9196)
!9387 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9382, file: !815, line: 66, type: !109)
!9388 = !DILocalVariable(name: "last_error", scope: !9382, file: !815, line: 68, type: !103)
!9389 = !DILocalVariable(name: "err", scope: !9382, file: !815, line: 68, type: !103)
!9390 = !DILocalVariable(name: "obs", scope: !9391, file: !815, line: 70, type: !9313)
!9391 = distinct !DILexicalBlock(scope: !9382, file: !815, line: 70, column: 2)
!9392 = !DILocalVariable(name: "obs", scope: !9393, file: !815, line: 81, type: !9313)
!9393 = distinct !DILexicalBlock(scope: !9382, file: !815, line: 81, column: 2)
!9394 = !DILocation(line: 0, scope: !9382)
!9395 = !DILocation(line: 70, column: 54, scope: !9391)
!9396 = !DILocation(line: 0, scope: !9391)
!9397 = !DILocation(line: 70, column: 65, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9391, file: !815, line: 70, column: 2)
!9399 = !DILocation(line: 70, column: 70, scope: !9398)
!9400 = !DILocation(line: 70, column: 2, scope: !9391)
!9401 = !DILocation(line: 81, column: 54, scope: !9393)
!9402 = !DILocation(line: 81, column: 65, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9393, file: !815, line: 81, column: 2)
!9404 = !DILocation(line: 0, scope: !9393)
!9405 = !DILocation(line: 81, column: 70, scope: !9403)
!9406 = !DILocation(line: 81, column: 2, scope: !9393)
!9407 = !DILocation(line: 71, column: 15, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9409, file: !815, line: 71, column: 7)
!9409 = distinct !DILexicalBlock(scope: !9398, file: !815, line: 70, column: 86)
!9410 = !DILocation(line: 71, column: 23, scope: !9408)
!9411 = !DILocation(line: 71, column: 35, scope: !9408)
!9412 = !DILocation(line: 71, column: 44, scope: !9408)
!9413 = !DILocation(line: 71, column: 7, scope: !9409)
!9414 = !DILocation(line: 72, column: 4, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9408, file: !815, line: 71, column: 54)
!9416 = !DILocation(line: 73, column: 3, scope: !9415)
!9417 = !DILocation(line: 70, column: 79, scope: !9398)
!9418 = distinct !{!9418, !9400, !9419}
!9419 = !DILocation(line: 74, column: 2, scope: !9391)
!9420 = !DILocation(line: 100, column: 2, scope: !9382)
!9421 = !DILocation(line: 82, column: 15, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9423, file: !815, line: 82, column: 7)
!9423 = distinct !DILexicalBlock(scope: !9403, file: !815, line: 81, column: 86)
!9424 = !DILocation(line: 82, column: 23, scope: !9422)
!9425 = !DILocation(line: 82, column: 35, scope: !9422)
!9426 = !DILocation(line: 82, column: 41, scope: !9422)
!9427 = !DILocation(line: 82, column: 7, scope: !9423)
!9428 = !DILocation(line: 83, column: 43, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9422, file: !815, line: 82, column: 51)
!9430 = !DILocation(line: 83, column: 10, scope: !9429)
!9431 = !DILocation(line: 86, column: 8, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9429, file: !815, line: 86, column: 8)
!9433 = !DILocation(line: 86, column: 8, scope: !9429)
!9434 = !DILocation(line: 87, column: 5, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9436, file: !815, line: 87, column: 5)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !815, line: 87, column: 5)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !815, line: 87, column: 5)
!9438 = distinct !DILexicalBlock(scope: !9439, file: !815, line: 87, column: 5)
!9439 = distinct !DILexicalBlock(scope: !9432, file: !815, line: 86, column: 13)
!9440 = !DILocation(line: 90, column: 4, scope: !9439)
!9441 = !DILocation(line: 81, column: 79, scope: !9403)
!9442 = distinct !{!9442, !9406, !9443}
!9443 = !DILocation(line: 92, column: 2, scope: !9393)
!9444 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3584, file: !3584, line: 944, type: !9445, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !811, retainedNodes: !9447)
!9445 = !DISubroutineType(types: !9446)
!9446 = !{!103, !9205}
!9447 = !{!9448}
!9448 = !DILocalVariable(name: "mutex", arg: 1, scope: !9444, file: !3584, line: 944, type: !9205)
!9449 = !DILocation(line: 0, scope: !9444)
!9450 = !DILocation(line: 952, column: 2, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9444, file: !3584, line: 952, column: 2)
!9452 = !{i64 2152221004}
!9453 = !DILocation(line: 953, column: 9, scope: !9444)
!9454 = !DILocation(line: 953, column: 2, scope: !9444)
!9455 = distinct !DISubprogram(name: "k_msgq_put", scope: !3584, file: !3584, line: 1129, type: !9456, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !811, retainedNodes: !9458)
!9456 = !DISubroutineType(types: !9457)
!9457 = !{!103, !9322, !13, !9182}
!9458 = !{!9459, !9460, !9461}
!9459 = !DILocalVariable(name: "msgq", arg: 1, scope: !9455, file: !3584, line: 1129, type: !9322)
!9460 = !DILocalVariable(name: "data", arg: 2, scope: !9455, file: !3584, line: 1129, type: !13)
!9461 = !DILocalVariable(name: "timeout", arg: 3, scope: !9455, file: !3584, line: 1129, type: !9182)
!9462 = !DILocation(line: 0, scope: !9455)
!9463 = !DILocation(line: 1139, column: 2, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9455, file: !3584, line: 1139, column: 2)
!9465 = !{i64 2152221752}
!9466 = !DILocation(line: 1140, column: 9, scope: !9455)
!9467 = !DILocation(line: 1140, column: 2, scope: !9455)
!9468 = distinct !DISubprogram(name: "zbus_chan_read", scope: !815, file: !815, line: 130, type: !9469, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !811, retainedNodes: !9471)
!9469 = !DISubroutineType(types: !9470)
!9470 = !{!103, !9196, !102, !9182}
!9471 = !{!9472, !9473, !9474, !9475}
!9472 = !DILocalVariable(name: "chan", arg: 1, scope: !9468, file: !815, line: 130, type: !9196)
!9473 = !DILocalVariable(name: "msg", arg: 2, scope: !9468, file: !815, line: 130, type: !102)
!9474 = !DILocalVariable(name: "timeout", arg: 3, scope: !9468, file: !815, line: 130, type: !9182)
!9475 = !DILocalVariable(name: "err", scope: !9468, file: !815, line: 132, type: !103)
!9476 = !DILocation(line: 0, scope: !9468)
!9477 = !DILocation(line: 138, column: 27, scope: !9468)
!9478 = !DILocation(line: 138, column: 8, scope: !9468)
!9479 = !DILocation(line: 139, column: 6, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9468, file: !815, line: 139, column: 6)
!9481 = !DILocation(line: 139, column: 6, scope: !9468)
!9482 = !DILocation(line: 143, column: 20, scope: !9468)
!9483 = !DILocation(line: 143, column: 35, scope: !9468)
!9484 = !DILocation(line: 143, column: 29, scope: !9468)
!9485 = !DILocation(line: 143, column: 2, scope: !9468)
!9486 = !DILocation(line: 145, column: 30, scope: !9468)
!9487 = !DILocation(line: 145, column: 9, scope: !9468)
!9488 = !DILocation(line: 145, column: 2, scope: !9468)
!9489 = !DILocation(line: 146, column: 1, scope: !9468)
!9490 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !815, file: !815, line: 148, type: !9491, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !811, retainedNodes: !9493)
!9491 = !DISubroutineType(types: !9492)
!9492 = !{!103, !9196, !9182}
!9493 = !{!9494, !9495, !9496, !9497}
!9494 = !DILocalVariable(name: "chan", arg: 1, scope: !9490, file: !815, line: 148, type: !9196)
!9495 = !DILocalVariable(name: "timeout", arg: 2, scope: !9490, file: !815, line: 148, type: !9182)
!9496 = !DILocalVariable(name: "err", scope: !9490, file: !815, line: 150, type: !103)
!9497 = !DILocalVariable(name: "end_ticks", scope: !9490, file: !815, line: 151, type: !109)
!9498 = !DILocation(line: 0, scope: !9490)
!9499 = !DILocation(line: 151, column: 23, scope: !9490)
!9500 = !DILocation(line: 156, column: 27, scope: !9490)
!9501 = !DILocation(line: 156, column: 8, scope: !9490)
!9502 = !DILocation(line: 157, column: 6, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9490, file: !815, line: 157, column: 6)
!9504 = !DILocation(line: 157, column: 6, scope: !9490)
!9505 = !DILocation(line: 161, column: 8, scope: !9490)
!9506 = !DILocation(line: 163, column: 23, scope: !9490)
!9507 = !DILocation(line: 163, column: 2, scope: !9490)
!9508 = !DILocation(line: 165, column: 2, scope: !9490)
!9509 = !DILocation(line: 166, column: 1, scope: !9490)
!9510 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !815, file: !815, line: 168, type: !9491, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !811, retainedNodes: !9511)
!9511 = !{!9512, !9513, !9514}
!9512 = !DILocalVariable(name: "chan", arg: 1, scope: !9510, file: !815, line: 168, type: !9196)
!9513 = !DILocalVariable(name: "timeout", arg: 2, scope: !9510, file: !815, line: 168, type: !9182)
!9514 = !DILocalVariable(name: "err", scope: !9510, file: !815, line: 173, type: !103)
!9515 = !DILocation(line: 0, scope: !9510)
!9516 = !DILocation(line: 173, column: 31, scope: !9510)
!9517 = !DILocation(line: 173, column: 12, scope: !9510)
!9518 = !DILocation(line: 180, column: 1, scope: !9510)
!9519 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !815, file: !815, line: 182, type: !9520, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !811, retainedNodes: !9522)
!9520 = !DISubroutineType(types: !9521)
!9521 = !{!103, !9196}
!9522 = !{!9523, !9524}
!9523 = !DILocalVariable(name: "chan", arg: 1, scope: !9519, file: !815, line: 182, type: !9196)
!9524 = !DILocalVariable(name: "err", scope: !9519, file: !815, line: 187, type: !103)
!9525 = !DILocation(line: 0, scope: !9519)
!9526 = !DILocation(line: 187, column: 33, scope: !9519)
!9527 = !DILocation(line: 187, column: 12, scope: !9519)
!9528 = !DILocation(line: 189, column: 2, scope: !9519)
!9529 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !815, file: !815, line: 192, type: !9530, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !811, retainedNodes: !9533)
!9530 = !DISubroutineType(types: !9531)
!9531 = !{!103, !9315, !9532, !9182}
!9532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9196, size: 32)
!9533 = !{!9534, !9535, !9536}
!9534 = !DILocalVariable(name: "sub", arg: 1, scope: !9529, file: !815, line: 192, type: !9315)
!9535 = !DILocalVariable(name: "chan", arg: 2, scope: !9529, file: !815, line: 192, type: !9532)
!9536 = !DILocalVariable(name: "timeout", arg: 3, scope: !9529, file: !815, line: 193, type: !9182)
!9537 = !DILocation(line: 0, scope: !9529)
!9538 = !DILocation(line: 199, column: 11, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9529, file: !815, line: 199, column: 6)
!9540 = !DILocation(line: 199, column: 17, scope: !9539)
!9541 = !DILocation(line: 199, column: 6, scope: !9529)
!9542 = !DILocation(line: 203, column: 32, scope: !9529)
!9543 = !DILocation(line: 203, column: 9, scope: !9529)
!9544 = !DILocation(line: 203, column: 2, scope: !9529)
!9545 = !DILocation(line: 204, column: 1, scope: !9529)
!9546 = distinct !DISubprogram(name: "k_msgq_get", scope: !3584, file: !3584, line: 1147, type: !9547, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !811, retainedNodes: !9549)
!9547 = !DISubroutineType(types: !9548)
!9548 = !{!103, !9322, !102, !9182}
!9549 = !{!9550, !9551, !9552}
!9550 = !DILocalVariable(name: "msgq", arg: 1, scope: !9546, file: !3584, line: 1147, type: !9322)
!9551 = !DILocalVariable(name: "data", arg: 2, scope: !9546, file: !3584, line: 1147, type: !102)
!9552 = !DILocalVariable(name: "timeout", arg: 3, scope: !9546, file: !3584, line: 1147, type: !9182)
!9553 = !DILocation(line: 0, scope: !9546)
!9554 = !DILocation(line: 1157, column: 2, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9546, file: !3584, line: 1157, column: 2)
!9556 = !{i64 2152221820}
!9557 = !DILocation(line: 1158, column: 9, scope: !9546)
!9558 = !DILocation(line: 1158, column: 2, scope: !9546)
!9559 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !895, file: !895, line: 368, type: !948, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9560)
!9560 = !{!9561}
!9561 = !DILocalVariable(name: "dev", arg: 1, scope: !9559, file: !895, line: 368, type: !924)
!9562 = !DILocation(line: 0, scope: !9559)
!9563 = !DILocation(line: 370, column: 2, scope: !9559)
!9564 = !DILocation(line: 371, column: 1, scope: !9559)
!9565 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !895, file: !895, line: 243, type: !9566, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9568)
!9566 = !DISubroutineType(types: !9567)
!9567 = !{null, !103, !103, !924}
!9568 = !{!9569, !9570, !9571, !9572, !9574}
!9569 = !DILocalVariable(name: "min", arg: 1, scope: !9565, file: !895, line: 243, type: !103)
!9570 = !DILocalVariable(name: "max", arg: 2, scope: !9565, file: !895, line: 243, type: !103)
!9571 = !DILocalVariable(name: "dev", arg: 3, scope: !9565, file: !895, line: 243, type: !924)
!9572 = !DILocalVariable(name: "data", scope: !9565, file: !895, line: 245, type: !9573)
!9573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!9574 = !DILocalVariable(name: "line", scope: !9565, file: !895, line: 246, type: !103)
!9575 = !DILocation(line: 0, scope: !9565)
!9576 = !DILocation(line: 245, column: 38, scope: !9565)
!9577 = !DILocation(line: 249, column: 24, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9579, file: !895, line: 249, column: 2)
!9579 = distinct !DILexicalBlock(scope: !9565, file: !895, line: 249, column: 2)
!9580 = !DILocation(line: 249, column: 2, scope: !9579)
!9581 = !DILocation(line: 251, column: 7, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9583, file: !895, line: 251, column: 7)
!9583 = distinct !DILexicalBlock(scope: !9578, file: !895, line: 249, column: 39)
!9584 = !DILocation(line: 251, column: 7, scope: !9583)
!9585 = !DILocation(line: 253, column: 4, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9582, file: !895, line: 251, column: 36)
!9587 = !DILocation(line: 256, column: 24, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9586, file: !895, line: 256, column: 8)
!9589 = !DILocation(line: 256, column: 9, scope: !9588)
!9590 = !DILocation(line: 256, column: 8, scope: !9586)
!9591 = !DILocation(line: 260, column: 43, scope: !9586)
!9592 = !DILocation(line: 260, column: 4, scope: !9586)
!9593 = !DILocation(line: 261, column: 3, scope: !9586)
!9594 = !DILocation(line: 249, column: 35, scope: !9578)
!9595 = distinct !{!9595, !9580, !9596}
!9596 = !DILocation(line: 262, column: 2, scope: !9579)
!9597 = !DILocation(line: 263, column: 1, scope: !9565)
!9598 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !895, file: !895, line: 158, type: !396, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9599)
!9599 = !{!9600}
!9600 = !DILocalVariable(name: "line", arg: 1, scope: !9598, file: !895, line: 158, type: !103)
!9601 = !DILocation(line: 0, scope: !9598)
!9602 = !DILocation(line: 170, column: 38, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9604, file: !895, line: 160, column: 17)
!9604 = distinct !DILexicalBlock(scope: !9598, file: !895, line: 160, column: 6)
!9605 = !DILocation(line: 170, column: 10, scope: !9603)
!9606 = !DILocation(line: 176, column: 1, scope: !9598)
!9607 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !895, file: !895, line: 183, type: !9608, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9610)
!9608 = !DISubroutineType(types: !9609)
!9609 = !{null, !103}
!9610 = !{!9611}
!9611 = !DILocalVariable(name: "line", arg: 1, scope: !9607, file: !895, line: 183, type: !103)
!9612 = !DILocation(line: 0, scope: !9607)
!9613 = !DILocation(line: 195, column: 28, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9615, file: !895, line: 185, column: 17)
!9615 = distinct !DILexicalBlock(scope: !9607, file: !895, line: 185, column: 6)
!9616 = !DILocation(line: 195, column: 3, scope: !9614)
!9617 = !DILocation(line: 200, column: 1, scope: !9607)
!9618 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9619, file: !9619, line: 971, type: !6970, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9620)
!9619 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9620 = !{!9621}
!9621 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9618, file: !9619, line: 971, type: !108)
!9622 = !DILocation(line: 0, scope: !9618)
!9623 = !DILocation(line: 973, column: 3, scope: !9618)
!9624 = !DILocation(line: 974, column: 1, scope: !9618)
!9625 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9619, file: !9619, line: 891, type: !8483, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9626)
!9626 = !{!9627}
!9627 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9625, file: !9619, line: 891, type: !108)
!9628 = !DILocation(line: 0, scope: !9625)
!9629 = !DILocation(line: 893, column: 11, scope: !9625)
!9630 = !DILocation(line: 893, column: 40, scope: !9625)
!9631 = !DILocation(line: 893, column: 3, scope: !9625)
!9632 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !895, file: !895, line: 304, type: !948, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9633)
!9633 = !{!9634}
!9634 = !DILocalVariable(name: "dev", arg: 1, scope: !9632, file: !895, line: 304, type: !924)
!9635 = !DILocation(line: 0, scope: !9632)
!9636 = !DILocation(line: 306, column: 2, scope: !9632)
!9637 = !DILocation(line: 307, column: 1, scope: !9632)
!9638 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !895, file: !895, line: 299, type: !948, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9639)
!9639 = !{!9640}
!9640 = !DILocalVariable(name: "dev", arg: 1, scope: !9638, file: !895, line: 299, type: !924)
!9641 = !DILocation(line: 0, scope: !9638)
!9642 = !DILocation(line: 301, column: 2, scope: !9638)
!9643 = !DILocation(line: 302, column: 1, scope: !9638)
!9644 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !895, file: !895, line: 294, type: !948, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9645)
!9645 = !{!9646}
!9646 = !DILocalVariable(name: "dev", arg: 1, scope: !9644, file: !895, line: 294, type: !924)
!9647 = !DILocation(line: 0, scope: !9644)
!9648 = !DILocation(line: 296, column: 2, scope: !9644)
!9649 = !DILocation(line: 297, column: 1, scope: !9644)
!9650 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !895, file: !895, line: 289, type: !948, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9651)
!9651 = !{!9652}
!9652 = !DILocalVariable(name: "dev", arg: 1, scope: !9650, file: !895, line: 289, type: !924)
!9653 = !DILocation(line: 0, scope: !9650)
!9654 = !DILocation(line: 291, column: 2, scope: !9650)
!9655 = !DILocation(line: 292, column: 1, scope: !9650)
!9656 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !895, file: !895, line: 373, type: !948, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9657)
!9657 = !{!9658}
!9658 = !DILocalVariable(name: "dev", arg: 1, scope: !9656, file: !895, line: 373, type: !924)
!9659 = !DILocation(line: 0, scope: !9656)
!9660 = !DILocation(line: 375, column: 2, scope: !9656)
!9661 = !DILocation(line: 376, column: 1, scope: !9656)
!9662 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !895, file: !895, line: 284, type: !948, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9663)
!9663 = !{!9664}
!9664 = !DILocalVariable(name: "dev", arg: 1, scope: !9662, file: !895, line: 284, type: !924)
!9665 = !DILocation(line: 0, scope: !9662)
!9666 = !DILocation(line: 286, column: 2, scope: !9662)
!9667 = !DILocation(line: 287, column: 1, scope: !9662)
!9668 = distinct !DISubprogram(name: "stm32_exti_init", scope: !895, file: !895, line: 416, type: !922, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9669)
!9669 = !{!9670}
!9670 = !DILocalVariable(name: "dev", arg: 1, scope: !9668, file: !895, line: 416, type: !924)
!9671 = !DILocation(line: 0, scope: !9668)
!9672 = !DILocation(line: 418, column: 2, scope: !9668)
!9673 = !DILocation(line: 420, column: 2, scope: !9668)
!9674 = !DILocation(line: 0, scope: !947)
!9675 = !DILocation(line: 493, column: 2, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !947, file: !895, line: 493, column: 2)
!9677 = !DILocation(line: 497, column: 2, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !947, file: !895, line: 497, column: 2)
!9679 = !DILocation(line: 507, column: 2, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !947, file: !895, line: 507, column: 2)
!9681 = !DILocation(line: 512, column: 2, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !947, file: !895, line: 512, column: 2)
!9683 = !DILocation(line: 516, column: 2, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !947, file: !895, line: 516, column: 2)
!9685 = !DILocation(line: 523, column: 2, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !947, file: !895, line: 523, column: 2)
!9687 = !DILocation(line: 527, column: 2, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !947, file: !895, line: 527, column: 2)
!9689 = !DILocation(line: 607, column: 1, scope: !947)
!9690 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !895, file: !895, line: 112, type: !9608, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9691)
!9691 = !{!9692, !9693}
!9692 = !DILocalVariable(name: "line", arg: 1, scope: !9690, file: !895, line: 112, type: !103)
!9693 = !DILocalVariable(name: "irqnum", scope: !9690, file: !895, line: 114, type: !103)
!9694 = !DILocation(line: 0, scope: !9690)
!9695 = !DILocation(line: 121, column: 11, scope: !9690)
!9696 = !DILocation(line: 130, column: 26, scope: !9690)
!9697 = !DILocation(line: 130, column: 2, scope: !9690)
!9698 = !DILocation(line: 134, column: 2, scope: !9690)
!9699 = !DILocation(line: 135, column: 1, scope: !9690)
!9700 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9619, file: !9619, line: 274, type: !6970, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9701)
!9701 = !{!9702}
!9702 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9700, file: !9619, line: 274, type: !108)
!9703 = !DILocation(line: 0, scope: !9700)
!9704 = !DILocation(line: 276, column: 3, scope: !9700)
!9705 = !DILocation(line: 277, column: 1, scope: !9700)
!9706 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !895, file: !895, line: 137, type: !9608, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9707)
!9707 = !{!9708}
!9708 = !DILocalVariable(name: "line", arg: 1, scope: !9706, file: !895, line: 137, type: !103)
!9709 = !DILocation(line: 0, scope: !9706)
!9710 = !DILocation(line: 141, column: 11, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9706, file: !895, line: 141, column: 6)
!9712 = !DILocation(line: 141, column: 6, scope: !9706)
!9713 = !DILocation(line: 145, column: 28, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9711, file: !895, line: 141, column: 17)
!9715 = !DILocation(line: 145, column: 3, scope: !9714)
!9716 = !DILocation(line: 147, column: 2, scope: !9714)
!9717 = !DILocation(line: 151, column: 1, scope: !9706)
!9718 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9619, file: !9619, line: 322, type: !6970, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9719)
!9719 = !{!9720}
!9720 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9718, file: !9619, line: 322, type: !108)
!9721 = !DILocation(line: 0, scope: !9718)
!9722 = !DILocation(line: 324, column: 3, scope: !9718)
!9723 = !DILocation(line: 325, column: 1, scope: !9718)
!9724 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !895, file: !895, line: 202, type: !9725, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9727)
!9725 = !DISubroutineType(types: !9726)
!9726 = !{null, !103, !103}
!9727 = !{!9728, !9729}
!9728 = !DILocalVariable(name: "line", arg: 1, scope: !9724, file: !895, line: 202, type: !103)
!9729 = !DILocalVariable(name: "trigger", arg: 2, scope: !9724, file: !895, line: 202, type: !103)
!9730 = !DILocation(line: 0, scope: !9724)
!9731 = !DILocation(line: 211, column: 2, scope: !9724)
!9732 = !DILocation(line: 213, column: 36, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9724, file: !895, line: 211, column: 19)
!9734 = !DILocation(line: 213, column: 3, scope: !9733)
!9735 = !DILocation(line: 214, column: 3, scope: !9733)
!9736 = !DILocation(line: 215, column: 3, scope: !9733)
!9737 = !DILocation(line: 217, column: 35, scope: !9733)
!9738 = !DILocation(line: 217, column: 3, scope: !9733)
!9739 = !DILocation(line: 218, column: 3, scope: !9733)
!9740 = !DILocation(line: 219, column: 3, scope: !9733)
!9741 = !DILocation(line: 221, column: 36, scope: !9733)
!9742 = !DILocation(line: 221, column: 3, scope: !9733)
!9743 = !DILocation(line: 222, column: 3, scope: !9733)
!9744 = !DILocation(line: 223, column: 3, scope: !9733)
!9745 = !DILocation(line: 225, column: 35, scope: !9733)
!9746 = !DILocation(line: 225, column: 3, scope: !9733)
!9747 = !DILocation(line: 226, column: 3, scope: !9733)
!9748 = !DILocation(line: 227, column: 3, scope: !9733)
!9749 = !DILocation(line: 232, column: 1, scope: !9724)
!9750 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9619, file: !9619, line: 618, type: !6970, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9751)
!9751 = !{!9752}
!9752 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9750, file: !9619, line: 618, type: !108)
!9753 = !DILocation(line: 0, scope: !9750)
!9754 = !DILocation(line: 620, column: 3, scope: !9750)
!9755 = !DILocation(line: 622, column: 1, scope: !9750)
!9756 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9619, file: !9619, line: 754, type: !6970, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9757)
!9757 = !{!9758}
!9758 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9756, file: !9619, line: 754, type: !108)
!9759 = !DILocation(line: 0, scope: !9756)
!9760 = !DILocation(line: 756, column: 3, scope: !9756)
!9761 = !DILocation(line: 757, column: 1, scope: !9756)
!9762 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9619, file: !9619, line: 572, type: !6970, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9763)
!9763 = !{!9764}
!9764 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9762, file: !9619, line: 572, type: !108)
!9765 = !DILocation(line: 0, scope: !9762)
!9766 = !DILocation(line: 574, column: 3, scope: !9762)
!9767 = !DILocation(line: 576, column: 1, scope: !9762)
!9768 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9619, file: !9619, line: 710, type: !6970, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9769)
!9769 = !{!9770}
!9770 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9768, file: !9619, line: 710, type: !108)
!9771 = !DILocation(line: 0, scope: !9768)
!9772 = !DILocation(line: 712, column: 3, scope: !9768)
!9773 = !DILocation(line: 713, column: 1, scope: !9768)
!9774 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !895, file: !895, line: 433, type: !9775, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9777)
!9775 = !DISubroutineType(types: !9776)
!9776 = !{!103, !103, !935, !102}
!9777 = !{!9778, !9779, !9780, !9781, !9783}
!9778 = !DILocalVariable(name: "line", arg: 1, scope: !9774, file: !895, line: 433, type: !103)
!9779 = !DILocalVariable(name: "cb", arg: 2, scope: !9774, file: !895, line: 433, type: !935)
!9780 = !DILocalVariable(name: "arg", arg: 3, scope: !9774, file: !895, line: 433, type: !102)
!9781 = !DILocalVariable(name: "dev", scope: !9774, file: !895, line: 435, type: !9782)
!9782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!9783 = !DILocalVariable(name: "data", scope: !9774, file: !895, line: 436, type: !9573)
!9784 = !DILocation(line: 0, scope: !9774)
!9785 = !DILocation(line: 438, column: 21, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9774, file: !895, line: 438, column: 6)
!9787 = !DILocation(line: 438, column: 6, scope: !9786)
!9788 = !DILocation(line: 438, column: 6, scope: !9774)
!9789 = !DILocation(line: 442, column: 20, scope: !9774)
!9790 = !DILocation(line: 443, column: 17, scope: !9774)
!9791 = !DILocation(line: 443, column: 22, scope: !9774)
!9792 = !DILocation(line: 445, column: 2, scope: !9774)
!9793 = !DILocation(line: 446, column: 1, scope: !9774)
!9794 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !895, file: !895, line: 448, type: !9608, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !823, retainedNodes: !9795)
!9795 = !{!9796, !9797, !9798}
!9796 = !DILocalVariable(name: "line", arg: 1, scope: !9794, file: !895, line: 448, type: !103)
!9797 = !DILocalVariable(name: "dev", scope: !9794, file: !895, line: 450, type: !9782)
!9798 = !DILocalVariable(name: "data", scope: !9794, file: !895, line: 451, type: !9573)
!9799 = !DILocation(line: 0, scope: !9794)
!9800 = !DILocation(line: 453, column: 17, scope: !9794)
!9801 = !DILocation(line: 453, column: 20, scope: !9794)
!9802 = !DILocation(line: 454, column: 17, scope: !9794)
!9803 = !DILocation(line: 454, column: 22, scope: !9794)
!9804 = !DILocation(line: 455, column: 1, scope: !9794)
!9805 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1049, file: !1049, line: 183, type: !1087, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !9806)
!9806 = !{!9807, !9808, !9809, !9810, !9811}
!9807 = !DILocalVariable(name: "dev", arg: 1, scope: !9805, file: !1049, line: 183, type: !1078)
!9808 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9805, file: !1049, line: 184, type: !1089)
!9809 = !DILocalVariable(name: "pclken", scope: !9805, file: !1049, line: 186, type: !1039)
!9810 = !DILocalVariable(name: "reg", scope: !9805, file: !1049, line: 187, type: !3099)
!9811 = !DILocalVariable(name: "reg_val", scope: !9805, file: !1049, line: 188, type: !108)
!9812 = !DILocation(line: 0, scope: !9805)
!9813 = !DILocation(line: 192, column: 6, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9805, file: !1049, line: 192, column: 6)
!9815 = !DILocation(line: 192, column: 6, scope: !9805)
!9816 = !DILocation(line: 197, column: 52, scope: !9805)
!9817 = !DILocation(line: 197, column: 8, scope: !9805)
!9818 = !DILocation(line: 198, column: 12, scope: !9805)
!9819 = !DILocation(line: 199, column: 21, scope: !9805)
!9820 = !DILocation(line: 199, column: 10, scope: !9805)
!9821 = !DILocation(line: 200, column: 7, scope: !9805)
!9822 = !DILocation(line: 202, column: 2, scope: !9805)
!9823 = !DILocation(line: 203, column: 1, scope: !9805)
!9824 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1049, file: !1049, line: 205, type: !1087, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !9825)
!9825 = !{!9826, !9827, !9828, !9829, !9830}
!9826 = !DILocalVariable(name: "dev", arg: 1, scope: !9824, file: !1049, line: 205, type: !1078)
!9827 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9824, file: !1049, line: 206, type: !1089)
!9828 = !DILocalVariable(name: "pclken", scope: !9824, file: !1049, line: 208, type: !1039)
!9829 = !DILocalVariable(name: "reg", scope: !9824, file: !1049, line: 209, type: !3099)
!9830 = !DILocalVariable(name: "reg_val", scope: !9824, file: !1049, line: 210, type: !108)
!9831 = !DILocation(line: 0, scope: !9824)
!9832 = !DILocation(line: 214, column: 6, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9824, file: !1049, line: 214, column: 6)
!9834 = !DILocation(line: 214, column: 6, scope: !9824)
!9835 = !DILocation(line: 219, column: 52, scope: !9824)
!9836 = !DILocation(line: 219, column: 8, scope: !9824)
!9837 = !DILocation(line: 220, column: 12, scope: !9824)
!9838 = !DILocation(line: 221, column: 22, scope: !9824)
!9839 = !DILocation(line: 221, column: 13, scope: !9824)
!9840 = !DILocation(line: 221, column: 10, scope: !9824)
!9841 = !DILocation(line: 222, column: 7, scope: !9824)
!9842 = !DILocation(line: 224, column: 2, scope: !9824)
!9843 = !DILocation(line: 225, column: 1, scope: !9824)
!9844 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1049, file: !1049, line: 262, type: !1103, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !9845)
!9845 = !{!9846, !9847, !9848, !9849, !9850, !9851, !9852}
!9846 = !DILocalVariable(name: "clock", arg: 1, scope: !9844, file: !1049, line: 262, type: !1078)
!9847 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9844, file: !1049, line: 263, type: !1089)
!9848 = !DILocalVariable(name: "rate", arg: 3, scope: !9844, file: !1049, line: 264, type: !1045)
!9849 = !DILocalVariable(name: "pclken", scope: !9844, file: !1049, line: 266, type: !1039)
!9850 = !DILocalVariable(name: "ahb_clock", scope: !9844, file: !1049, line: 273, type: !108)
!9851 = !DILocalVariable(name: "apb1_clock", scope: !9844, file: !1049, line: 274, type: !108)
!9852 = !DILocalVariable(name: "apb2_clock", scope: !9844, file: !1049, line: 276, type: !108)
!9853 = !DILocation(line: 0, scope: !9844)
!9854 = !DILocation(line: 273, column: 23, scope: !9844)
!9855 = !DILocation(line: 299, column: 18, scope: !9844)
!9856 = !DILocation(line: 299, column: 2, scope: !9844)
!9857 = !DILocation(line: 374, column: 3, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9844, file: !1049, line: 299, column: 23)
!9859 = !DILocation(line: 379, column: 3, scope: !9858)
!9860 = !DILocation(line: 389, column: 3, scope: !9858)
!9861 = !DILocation(line: 0, scope: !9858)
!9862 = !DILocation(line: 396, column: 1, scope: !9844)
!9863 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1049, file: !1049, line: 227, type: !1119, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !9864)
!9864 = !{!9865, !9866, !9867, !9868, !9869, !9870, !9871, !9872}
!9865 = !DILocalVariable(name: "dev", arg: 1, scope: !9863, file: !1049, line: 227, type: !1078)
!9866 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9863, file: !1049, line: 228, type: !1089)
!9867 = !DILocalVariable(name: "data", arg: 3, scope: !9863, file: !1049, line: 229, type: !102)
!9868 = !DILocalVariable(name: "pclken", scope: !9863, file: !1049, line: 233, type: !1039)
!9869 = !DILocalVariable(name: "reg", scope: !9863, file: !1049, line: 234, type: !3099)
!9870 = !DILocalVariable(name: "reg_val", scope: !9863, file: !1049, line: 235, type: !108)
!9871 = !DILocalVariable(name: "dt_val", scope: !9863, file: !1049, line: 235, type: !108)
!9872 = !DILocalVariable(name: "err", scope: !9863, file: !1049, line: 236, type: !103)
!9873 = !DILocation(line: 0, scope: !9863)
!9874 = !DILocation(line: 241, column: 30, scope: !9863)
!9875 = !DILocation(line: 241, column: 8, scope: !9863)
!9876 = !DILocation(line: 242, column: 10, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9863, file: !1049, line: 242, column: 6)
!9878 = !DILocation(line: 242, column: 6, scope: !9863)
!9879 = !DILocation(line: 247, column: 11, scope: !9863)
!9880 = !DILocation(line: 248, column: 6, scope: !9863)
!9881 = !DILocation(line: 247, column: 44, scope: !9863)
!9882 = !DILocation(line: 250, column: 6, scope: !9863)
!9883 = !DILocation(line: 249, column: 52, scope: !9863)
!9884 = !DILocation(line: 249, column: 8, scope: !9863)
!9885 = !DILocation(line: 251, column: 12, scope: !9863)
!9886 = !DILocation(line: 252, column: 10, scope: !9863)
!9887 = !DILocation(line: 253, column: 7, scope: !9863)
!9888 = !DILocation(line: 255, column: 2, scope: !9863)
!9889 = !DILocation(line: 260, column: 1, scope: !9863)
!9890 = distinct !DISubprogram(name: "enabled_clock", scope: !1049, file: !1049, line: 100, type: !9891, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !9893)
!9891 = !DISubroutineType(types: !9892)
!9892 = !{!103, !108}
!9893 = !{!9894, !9895}
!9894 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9890, file: !1049, line: 100, type: !108)
!9895 = !DILocalVariable(name: "r", scope: !9890, file: !1049, line: 102, type: !103)
!9896 = !DILocation(line: 0, scope: !9890)
!9897 = !DILocation(line: 104, column: 2, scope: !9890)
!9898 = !DILocation(line: 180, column: 2, scope: !9890)
!9899 = !DILocation(line: 181, column: 1, scope: !9890)
!9900 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1049, file: !1049, line: 641, type: !1076, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !9901)
!9901 = !{!9902, !9903, !9904}
!9902 = !DILocalVariable(name: "dev", arg: 1, scope: !9900, file: !1049, line: 641, type: !1078)
!9903 = !DILocalVariable(name: "old_flash_freq", scope: !9900, file: !1049, line: 664, type: !108)
!9904 = !DILocalVariable(name: "new_flash_freq", scope: !9900, file: !1049, line: 665, type: !108)
!9905 = !DILocation(line: 0, scope: !9900)
!9906 = !DILocation(line: 646, column: 2, scope: !9900)
!9907 = !DILocation(line: 667, column: 19, scope: !9900)
!9908 = !DILocation(line: 674, column: 21, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9900, file: !1049, line: 674, column: 6)
!9910 = !DILocation(line: 674, column: 6, scope: !9900)
!9911 = !DILocation(line: 675, column: 3, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9909, file: !1049, line: 674, column: 59)
!9913 = !DILocation(line: 676, column: 2, scope: !9912)
!9914 = !DILocation(line: 680, column: 2, scope: !9900)
!9915 = !DILocation(line: 683, column: 2, scope: !9900)
!9916 = !DILocation(line: 690, column: 3, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9918, file: !1049, line: 689, column: 9)
!9918 = distinct !DILexicalBlock(scope: !9900, file: !1049, line: 685, column: 6)
!9919 = !DILocation(line: 695, column: 2, scope: !9900)
!9920 = !DILocation(line: 696, column: 2, scope: !9900)
!9921 = !DILocation(line: 696, column: 9, scope: !9900)
!9922 = !DILocation(line: 696, column: 34, scope: !9900)
!9923 = distinct !{!9923, !9920, !9924}
!9924 = !DILocation(line: 697, column: 2, scope: !9900)
!9925 = !DILocation(line: 720, column: 21, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9900, file: !1049, line: 720, column: 6)
!9927 = !DILocation(line: 720, column: 6, scope: !9900)
!9928 = !DILocation(line: 721, column: 3, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9926, file: !1049, line: 720, column: 60)
!9930 = !DILocation(line: 722, column: 2, scope: !9929)
!9931 = !DILocation(line: 725, column: 18, scope: !9900)
!9932 = !DILocation(line: 728, column: 2, scope: !9900)
!9933 = !DILocation(line: 730, column: 2, scope: !9900)
!9934 = !DILocation(line: 745, column: 2, scope: !9900)
!9935 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9936, file: !9936, line: 995, type: !3564, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !251)
!9936 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9937 = !DILocation(line: 997, column: 21, scope: !9935)
!9938 = !DILocation(line: 997, column: 3, scope: !9935)
!9939 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1049, file: !1049, line: 507, type: !334, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !251)
!9940 = !DILocation(line: 534, column: 7, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9942, file: !1049, line: 534, column: 7)
!9942 = distinct !DILexicalBlock(scope: !9943, file: !1049, line: 532, column: 37)
!9943 = distinct !DILexicalBlock(scope: !9939, file: !1049, line: 532, column: 6)
!9944 = !DILocation(line: 534, column: 28, scope: !9941)
!9945 = !DILocation(line: 534, column: 7, scope: !9942)
!9946 = !DILocation(line: 536, column: 4, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9941, file: !1049, line: 534, column: 34)
!9948 = !DILocation(line: 537, column: 4, scope: !9947)
!9949 = !DILocation(line: 537, column: 11, scope: !9947)
!9950 = !DILocation(line: 537, column: 32, scope: !9947)
!9951 = distinct !{!9951, !9948, !9952}
!9952 = !DILocation(line: 539, column: 4, scope: !9947)
!9953 = !DILocation(line: 583, column: 3, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9955, file: !1049, line: 577, column: 37)
!9955 = distinct !DILexicalBlock(scope: !9939, file: !1049, line: 577, column: 6)
!9956 = !DILocation(line: 584, column: 3, scope: !9954)
!9957 = !DILocation(line: 584, column: 10, scope: !9954)
!9958 = !DILocation(line: 584, column: 31, scope: !9954)
!9959 = distinct !{!9959, !9956, !9960}
!9960 = !DILocation(line: 585, column: 3, scope: !9954)
!9961 = !DILocation(line: 627, column: 1, scope: !9939)
!9962 = distinct !DISubprogram(name: "set_up_plls", scope: !1049, file: !1049, line: 448, type: !334, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !251)
!9963 = !DILocation(line: 460, column: 6, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9962, file: !1049, line: 460, column: 6)
!9965 = !DILocation(line: 460, column: 31, scope: !9964)
!9966 = !DILocation(line: 460, column: 6, scope: !9962)
!9967 = !DILocation(line: 461, column: 3, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9964, file: !1049, line: 460, column: 67)
!9969 = !DILocation(line: 462, column: 3, scope: !9968)
!9970 = !DILocation(line: 463, column: 2, scope: !9968)
!9971 = !DILocation(line: 464, column: 2, scope: !9962)
!9972 = !DILocation(line: 496, column: 2, scope: !9962)
!9973 = !DILocation(line: 499, column: 2, scope: !9962)
!9974 = !DILocation(line: 500, column: 2, scope: !9962)
!9975 = !DILocation(line: 500, column: 9, scope: !9962)
!9976 = !DILocation(line: 500, column: 30, scope: !9962)
!9977 = distinct !{!9977, !9974, !9978}
!9978 = !DILocation(line: 502, column: 2, scope: !9962)
!9979 = !DILocation(line: 505, column: 1, scope: !9962)
!9980 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9936, file: !9936, line: 944, type: !6970, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !9981)
!9981 = !{!9982}
!9982 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9980, file: !9936, line: 944, type: !108)
!9983 = !DILocation(line: 0, scope: !9980)
!9984 = !DILocation(line: 946, column: 3, scope: !9980)
!9985 = !DILocation(line: 947, column: 1, scope: !9980)
!9986 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9936, file: !9936, line: 910, type: !6970, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !9987)
!9987 = !{!9988}
!9988 = !DILocalVariable(name: "Source", arg: 1, scope: !9986, file: !9936, line: 910, type: !108)
!9989 = !DILocation(line: 0, scope: !9986)
!9990 = !DILocation(line: 912, column: 3, scope: !9986)
!9991 = !DILocation(line: 913, column: 1, scope: !9986)
!9992 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9936, file: !9936, line: 924, type: !3564, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !251)
!9993 = !DILocation(line: 926, column: 21, scope: !9992)
!9994 = !DILocation(line: 926, column: 3, scope: !9992)
!9995 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9936, file: !9936, line: 960, type: !6970, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !9996)
!9996 = !{!9997}
!9997 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9995, file: !9936, line: 960, type: !108)
!9998 = !DILocation(line: 0, scope: !9995)
!9999 = !DILocation(line: 962, column: 3, scope: !9995)
!10000 = !DILocation(line: 963, column: 1, scope: !9995)
!10001 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9936, file: !9936, line: 976, type: !6970, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !10002)
!10002 = !{!10003}
!10003 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10001, file: !9936, line: 976, type: !108)
!10004 = !DILocation(line: 0, scope: !10001)
!10005 = !DILocation(line: 978, column: 3, scope: !10001)
!10006 = !DILocation(line: 979, column: 1, scope: !10001)
!10007 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1049, file: !1049, line: 409, type: !334, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !251)
!10008 = !DILocation(line: 412, column: 6, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10007, file: !1049, line: 412, column: 6)
!10010 = !DILocation(line: 412, column: 27, scope: !10009)
!10011 = !DILocation(line: 412, column: 6, scope: !10007)
!10012 = !DILocation(line: 414, column: 3, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10009, file: !1049, line: 412, column: 33)
!10014 = !DILocation(line: 415, column: 3, scope: !10013)
!10015 = !DILocation(line: 415, column: 10, scope: !10013)
!10016 = !DILocation(line: 415, column: 31, scope: !10013)
!10017 = distinct !{!10017, !10014, !10018}
!10018 = !DILocation(line: 417, column: 3, scope: !10013)
!10019 = !DILocation(line: 421, column: 2, scope: !10007)
!10020 = !DILocation(line: 422, column: 2, scope: !10007)
!10021 = !DILocation(line: 422, column: 9, scope: !10007)
!10022 = !DILocation(line: 422, column: 34, scope: !10007)
!10023 = distinct !{!10023, !10020, !10024}
!10024 = !DILocation(line: 423, column: 2, scope: !10007)
!10025 = !DILocation(line: 424, column: 1, scope: !10007)
!10026 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9936, file: !9936, line: 1180, type: !334, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !251)
!10027 = !DILocation(line: 1182, column: 3, scope: !10026)
!10028 = !DILocation(line: 1183, column: 1, scope: !10026)
!10029 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9936, file: !9936, line: 1169, type: !334, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !251)
!10030 = !DILocation(line: 1171, column: 3, scope: !10029)
!10031 = !DILocation(line: 1172, column: 1, scope: !10029)
!10032 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9936, file: !9936, line: 1190, type: !3564, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !251)
!10033 = !DILocation(line: 1192, column: 12, scope: !10032)
!10034 = !DILocation(line: 1192, column: 11, scope: !10032)
!10035 = !DILocation(line: 1192, column: 3, scope: !10032)
!10036 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9936, file: !9936, line: 612, type: !3564, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !251)
!10037 = !DILocation(line: 614, column: 12, scope: !10036)
!10038 = !DILocation(line: 614, column: 11, scope: !10036)
!10039 = !DILocation(line: 614, column: 3, scope: !10036)
!10040 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9936, file: !9936, line: 592, type: !334, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !251)
!10041 = !DILocation(line: 594, column: 3, scope: !10040)
!10042 = !DILocation(line: 595, column: 1, scope: !10040)
!10043 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9936, file: !9936, line: 760, type: !334, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !251)
!10044 = !DILocation(line: 762, column: 3, scope: !10043)
!10045 = !DILocation(line: 763, column: 1, scope: !10043)
!10046 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9936, file: !9936, line: 780, type: !3564, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1005, retainedNodes: !251)
!10047 = !DILocation(line: 782, column: 12, scope: !10046)
!10048 = !DILocation(line: 782, column: 11, scope: !10046)
!10049 = !DILocation(line: 782, column: 3, scope: !10046)
!10050 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10051, file: !10051, line: 48, type: !3564, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !251)
!10051 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10052 = !DILocation(line: 51, column: 3, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10054, file: !10051, line: 50, column: 37)
!10054 = distinct !DILexicalBlock(scope: !10050, file: !10051, line: 50, column: 6)
!10055 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10051, file: !10051, line: 64, type: !334, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !251)
!10056 = !DILocation(line: 66, column: 2, scope: !10055)
!10057 = !DILocation(line: 69, column: 1, scope: !10055)
!10058 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9936, file: !9936, line: 1219, type: !10059, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !10061)
!10059 = !DISubroutineType(types: !10060)
!10060 = !{null, !108, !108, !108}
!10061 = !{!10062, !10063, !10064}
!10062 = !DILocalVariable(name: "Source", arg: 1, scope: !10058, file: !9936, line: 1219, type: !108)
!10063 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !10058, file: !9936, line: 1219, type: !108)
!10064 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !10058, file: !9936, line: 1219, type: !108)
!10065 = !DILocation(line: 0, scope: !10058)
!10066 = !DILocation(line: 1221, column: 3, scope: !10058)
!10067 = !DILocation(line: 1222, column: 1, scope: !10058)
!10068 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !10051, file: !10051, line: 75, type: !3564, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !251)
!10069 = !DILocation(line: 77, column: 9, scope: !10068)
!10070 = !DILocation(line: 77, column: 2, scope: !10068)
!10071 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10051, file: !10051, line: 87, type: !334, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !251)
!10072 = !DILocation(line: 93, column: 2, scope: !10071)
!10073 = !DILocation(line: 95, column: 1, scope: !10071)
!10074 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !6969, file: !6969, line: 895, type: !6970, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3039, retainedNodes: !10075)
!10075 = !{!10076, !10077}
!10076 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10074, file: !6969, line: 895, type: !108)
!10077 = !DILocalVariable(name: "tmpreg", scope: !10074, file: !6969, line: 897, type: !409)
!10078 = !DILocation(line: 0, scope: !10074)
!10079 = !DILocation(line: 897, column: 3, scope: !10074)
!10080 = !DILocation(line: 897, column: 17, scope: !10074)
!10081 = !DILocation(line: 898, column: 3, scope: !10074)
!10082 = !DILocation(line: 900, column: 12, scope: !10074)
!10083 = !DILocation(line: 900, column: 10, scope: !10074)
!10084 = !DILocation(line: 901, column: 9, scope: !10074)
!10085 = !DILocation(line: 902, column: 1, scope: !10074)
!10086 = distinct !DISubprogram(name: "uart_console_init", scope: !1180, file: !1180, line: 588, type: !1157, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10087)
!10087 = !{!10088}
!10088 = !DILocalVariable(name: "arg", arg: 1, scope: !10086, file: !1180, line: 588, type: !1135)
!10089 = !DILocation(line: 0, scope: !10086)
!10090 = !DILocation(line: 593, column: 7, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10086, file: !1180, line: 593, column: 6)
!10092 = !DILocation(line: 593, column: 6, scope: !10086)
!10093 = !DILocation(line: 597, column: 2, scope: !10086)
!10094 = !DILocation(line: 599, column: 2, scope: !10086)
!10095 = !DILocation(line: 600, column: 1, scope: !10086)
!10096 = distinct !DISubprogram(name: "device_is_ready", scope: !9104, file: !9104, line: 47, type: !10097, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10099)
!10097 = !DISubroutineType(types: !10098)
!10098 = !{!131, !1135}
!10099 = !{!10100}
!10100 = !DILocalVariable(name: "dev", arg: 1, scope: !10096, file: !9104, line: 47, type: !1135)
!10101 = !DILocation(line: 0, scope: !10096)
!10102 = !DILocation(line: 55, column: 2, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10096, file: !9104, line: 55, column: 2)
!10104 = !{i64 2152410417}
!10105 = !DILocation(line: 56, column: 9, scope: !10096)
!10106 = !DILocation(line: 56, column: 2, scope: !10096)
!10107 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1180, file: !1180, line: 573, type: !334, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !251)
!10108 = !DILocation(line: 576, column: 2, scope: !10107)
!10109 = !DILocation(line: 579, column: 2, scope: !10107)
!10110 = !DILocation(line: 581, column: 1, scope: !10107)
!10111 = distinct !DISubprogram(name: "console_out", scope: !1180, file: !1180, line: 77, type: !396, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10112)
!10112 = !{!10113}
!10113 = !DILocalVariable(name: "c", arg: 1, scope: !10111, file: !1180, line: 77, type: !103)
!10114 = !DILocation(line: 0, scope: !10111)
!10115 = !DILocation(line: 89, column: 11, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10111, file: !1180, line: 89, column: 6)
!10117 = !DILocation(line: 89, column: 6, scope: !10111)
!10118 = !DILocation(line: 90, column: 3, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10116, file: !1180, line: 89, column: 17)
!10120 = !DILocation(line: 91, column: 2, scope: !10119)
!10121 = !DILocation(line: 92, column: 34, scope: !10111)
!10122 = !DILocation(line: 92, column: 2, scope: !10111)
!10123 = !DILocation(line: 94, column: 2, scope: !10111)
!10124 = distinct !DISubprogram(name: "uart_poll_out", scope: !10125, file: !10125, line: 95, type: !1153, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10126)
!10125 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/benchmark")
!10126 = !{!10127, !10128}
!10127 = !DILocalVariable(name: "dev", arg: 1, scope: !10124, file: !10125, line: 95, type: !1135)
!10128 = !DILocalVariable(name: "out_char", arg: 2, scope: !10124, file: !10125, line: 95, type: !186)
!10129 = !DILocation(line: 0, scope: !10124)
!10130 = !DILocation(line: 105, column: 2, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10124, file: !10125, line: 105, column: 2)
!10132 = !{i64 2152493808}
!10133 = !DILocation(line: 106, column: 2, scope: !10124)
!10134 = !DILocation(line: 107, column: 1, scope: !10124)
!10135 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1129, file: !1129, line: 574, type: !1153, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10136)
!10136 = !{!10137, !10138, !10139}
!10137 = !DILocalVariable(name: "dev", arg: 1, scope: !10135, file: !1129, line: 574, type: !1135)
!10138 = !DILocalVariable(name: "out_char", arg: 2, scope: !10135, file: !1129, line: 575, type: !186)
!10139 = !DILocalVariable(name: "api", scope: !10135, file: !1129, line: 577, type: !1126)
!10140 = !DILocation(line: 0, scope: !10135)
!10141 = !DILocation(line: 578, column: 40, scope: !10135)
!10142 = !DILocation(line: 580, column: 7, scope: !10135)
!10143 = !DILocation(line: 580, column: 2, scope: !10135)
!10144 = !DILocation(line: 581, column: 1, scope: !10135)
!10145 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !442, file: !442, line: 730, type: !10097, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10146)
!10146 = !{!10147}
!10147 = !DILocalVariable(name: "dev", arg: 1, scope: !10145, file: !442, line: 730, type: !1135)
!10148 = !DILocation(line: 0, scope: !10145)
!10149 = !DILocation(line: 732, column: 9, scope: !10145)
!10150 = !DILocation(line: 732, column: 2, scope: !10145)
!10151 = distinct !DISubprogram(name: "uart_register_input", scope: !1180, file: !1180, line: 560, type: !10152, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1123, retainedNodes: !10197)
!10152 = !DISubroutineType(types: !10153)
!10153 = !{null, !10154, !10154, !10194}
!10154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10155, size: 32)
!10155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !137, line: 2208, size: 128, elements: !10156)
!10156 = !{!10157}
!10157 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10155, file: !137, line: 2209, baseType: !10158, size: 128)
!10158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !137, line: 1709, size: 128, elements: !10159)
!10159 = !{!10160, !10173, !10175}
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10158, file: !137, line: 1710, baseType: !10161, size: 64)
!10161 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10162, line: 46, baseType: !10163)
!10162 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10162, line: 41, size: 64, elements: !10164)
!10164 = !{!10165, !10172}
!10165 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10163, file: !10162, line: 42, baseType: !10166, size: 32)
!10166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10167, size: 32)
!10167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10162, line: 39, baseType: !10168)
!10168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10162, line: 35, size: 32, elements: !10169)
!10169 = !{!10170}
!10170 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10168, file: !10162, line: 36, baseType: !10171, size: 32)
!10171 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10162, line: 32, baseType: !108)
!10172 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10163, file: !10162, line: 43, baseType: !10166, size: 32, offset: 32)
!10173 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10158, file: !137, line: 1711, baseType: !10174, offset: 64)
!10174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!10175 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10158, file: !137, line: 1712, baseType: !10176, size: 64, offset: 64)
!10176 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !10177)
!10177 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !10178)
!10178 = !{!10179}
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10177, file: !141, line: 232, baseType: !10180, size: 64)
!10180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !10181)
!10181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !10182)
!10182 = !{!10183, !10189}
!10183 = !DIDerivedType(tag: DW_TAG_member, scope: !10181, file: !146, line: 38, baseType: !10184, size: 32)
!10184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10181, file: !146, line: 38, size: 32, elements: !10185)
!10185 = !{!10186, !10188}
!10186 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10184, file: !146, line: 39, baseType: !10187, size: 32)
!10187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10181, size: 32)
!10188 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10184, file: !146, line: 40, baseType: !10187, size: 32)
!10189 = !DIDerivedType(tag: DW_TAG_member, scope: !10181, file: !146, line: 42, baseType: !10190, size: 32, offset: 32)
!10190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10181, file: !146, line: 42, size: 32, elements: !10191)
!10191 = !{!10192, !10193}
!10192 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10190, file: !146, line: 43, baseType: !10187, size: 32)
!10193 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10190, file: !146, line: 44, baseType: !10187, size: 32)
!10194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10195, size: 32)
!10195 = !DISubroutineType(types: !10196)
!10196 = !{!185, !277, !185}
!10197 = !{!10198, !10199, !10200}
!10198 = !DILocalVariable(name: "avail", arg: 1, scope: !10151, file: !1180, line: 560, type: !10154)
!10199 = !DILocalVariable(name: "lines", arg: 2, scope: !10151, file: !1180, line: 560, type: !10154)
!10200 = !DILocalVariable(name: "completion", arg: 3, scope: !10151, file: !1180, line: 561, type: !10194)
!10201 = !DILocation(line: 0, scope: !10151)
!10202 = !DILocation(line: 566, column: 1, scope: !10151)
!10203 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1339, file: !1339, line: 523, type: !1205, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10204)
!10204 = !{!10205, !10206, !10207, !10208, !10209}
!10205 = !DILocalVariable(name: "dev", arg: 1, scope: !10203, file: !1339, line: 523, type: !1207)
!10206 = !DILocalVariable(name: "pin", arg: 2, scope: !10203, file: !1339, line: 524, type: !741)
!10207 = !DILocalVariable(name: "flags", arg: 3, scope: !10203, file: !1339, line: 524, type: !742)
!10208 = !DILocalVariable(name: "err", scope: !10203, file: !1339, line: 526, type: !103)
!10209 = !DILocalVariable(name: "pincfg", scope: !10203, file: !1339, line: 527, type: !103)
!10210 = !DILocation(line: 0, scope: !10203)
!10211 = !DILocation(line: 527, column: 2, scope: !10203)
!10212 = !DILocation(line: 532, column: 8, scope: !10203)
!10213 = !DILocation(line: 533, column: 10, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10203, file: !1339, line: 533, column: 6)
!10215 = !DILocation(line: 533, column: 6, scope: !10203)
!10216 = !DILocation(line: 543, column: 13, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10203, file: !1339, line: 543, column: 6)
!10218 = !DILocation(line: 543, column: 28, scope: !10217)
!10219 = !DILocation(line: 543, column: 6, scope: !10203)
!10220 = !DILocation(line: 544, column: 14, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10222, file: !1339, line: 544, column: 7)
!10222 = distinct !DILexicalBlock(scope: !10217, file: !1339, line: 543, column: 34)
!10223 = !DILocation(line: 544, column: 39, scope: !10221)
!10224 = !DILocation(line: 544, column: 7, scope: !10222)
!10225 = !DILocation(line: 545, column: 38, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10221, file: !1339, line: 544, column: 45)
!10227 = !DILocation(line: 545, column: 4, scope: !10226)
!10228 = !DILocation(line: 546, column: 3, scope: !10226)
!10229 = !DILocation(line: 546, column: 21, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10221, file: !1339, line: 546, column: 14)
!10231 = !DILocation(line: 546, column: 45, scope: !10230)
!10232 = !DILocation(line: 546, column: 14, scope: !10221)
!10233 = !DILocation(line: 547, column: 40, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10230, file: !1339, line: 546, column: 51)
!10235 = !DILocation(line: 547, column: 4, scope: !10234)
!10236 = !DILocation(line: 548, column: 3, scope: !10234)
!10237 = !DILocation(line: 551, column: 32, scope: !10203)
!10238 = !DILocation(line: 551, column: 37, scope: !10203)
!10239 = !DILocation(line: 551, column: 2, scope: !10203)
!10240 = !DILocation(line: 554, column: 6, scope: !10203)
!10241 = !DILocation(line: 562, column: 1, scope: !10203)
!10242 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1339, file: !1339, line: 410, type: !10243, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10245)
!10243 = !DISubroutineType(types: !10244)
!10244 = !{!103, !1207, !1045}
!10245 = !{!10246, !10247, !10248, !10250}
!10246 = !DILocalVariable(name: "dev", arg: 1, scope: !10242, file: !1339, line: 410, type: !1207)
!10247 = !DILocalVariable(name: "value", arg: 2, scope: !10242, file: !1339, line: 410, type: !1045)
!10248 = !DILocalVariable(name: "cfg", scope: !10242, file: !1339, line: 412, type: !10249)
!10249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!10250 = !DILocalVariable(name: "gpio", scope: !10242, file: !1339, line: 413, type: !1274)
!10251 = !DILocation(line: 0, scope: !10242)
!10252 = !DILocation(line: 412, column: 45, scope: !10242)
!10253 = !DILocation(line: 413, column: 44, scope: !10242)
!10254 = !DILocation(line: 415, column: 11, scope: !10242)
!10255 = !DILocation(line: 415, column: 9, scope: !10242)
!10256 = !DILocation(line: 417, column: 2, scope: !10242)
!10257 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1339, file: !1339, line: 420, type: !1228, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10258)
!10258 = !{!10259, !10260, !10261, !10262, !10263, !10264}
!10259 = !DILocalVariable(name: "dev", arg: 1, scope: !10257, file: !1339, line: 420, type: !1207)
!10260 = !DILocalVariable(name: "mask", arg: 2, scope: !10257, file: !1339, line: 421, type: !753)
!10261 = !DILocalVariable(name: "value", arg: 3, scope: !10257, file: !1339, line: 422, type: !748)
!10262 = !DILocalVariable(name: "cfg", scope: !10257, file: !1339, line: 424, type: !10249)
!10263 = !DILocalVariable(name: "gpio", scope: !10257, file: !1339, line: 425, type: !1274)
!10264 = !DILocalVariable(name: "port_value", scope: !10257, file: !1339, line: 426, type: !108)
!10265 = !DILocation(line: 0, scope: !10257)
!10266 = !DILocation(line: 424, column: 45, scope: !10257)
!10267 = !DILocation(line: 425, column: 44, scope: !10257)
!10268 = !DILocation(line: 430, column: 15, scope: !10257)
!10269 = !DILocation(line: 431, column: 46, scope: !10257)
!10270 = !DILocation(line: 431, column: 44, scope: !10257)
!10271 = !DILocation(line: 431, column: 61, scope: !10257)
!10272 = !DILocation(line: 431, column: 53, scope: !10257)
!10273 = !DILocation(line: 431, column: 2, scope: !10257)
!10274 = !DILocation(line: 435, column: 2, scope: !10257)
!10275 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1339, file: !1339, line: 438, type: !1232, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10276)
!10276 = !{!10277, !10278, !10279, !10280}
!10277 = !DILocalVariable(name: "dev", arg: 1, scope: !10275, file: !1339, line: 438, type: !1207)
!10278 = !DILocalVariable(name: "pins", arg: 2, scope: !10275, file: !1339, line: 439, type: !753)
!10279 = !DILocalVariable(name: "cfg", scope: !10275, file: !1339, line: 441, type: !10249)
!10280 = !DILocalVariable(name: "gpio", scope: !10275, file: !1339, line: 442, type: !1274)
!10281 = !DILocation(line: 0, scope: !10275)
!10282 = !DILocation(line: 441, column: 45, scope: !10275)
!10283 = !DILocation(line: 442, column: 44, scope: !10275)
!10284 = !DILocation(line: 448, column: 2, scope: !10275)
!10285 = !DILocation(line: 450, column: 2, scope: !10275)
!10286 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1339, file: !1339, line: 453, type: !1232, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10287)
!10287 = !{!10288, !10289, !10290, !10291}
!10288 = !DILocalVariable(name: "dev", arg: 1, scope: !10286, file: !1339, line: 453, type: !1207)
!10289 = !DILocalVariable(name: "pins", arg: 2, scope: !10286, file: !1339, line: 454, type: !753)
!10290 = !DILocalVariable(name: "cfg", scope: !10286, file: !1339, line: 456, type: !10249)
!10291 = !DILocalVariable(name: "gpio", scope: !10286, file: !1339, line: 457, type: !1274)
!10292 = !DILocation(line: 0, scope: !10286)
!10293 = !DILocation(line: 456, column: 45, scope: !10286)
!10294 = !DILocation(line: 457, column: 44, scope: !10286)
!10295 = !DILocation(line: 467, column: 2, scope: !10286)
!10296 = !DILocation(line: 470, column: 2, scope: !10286)
!10297 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1339, file: !1339, line: 473, type: !1232, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10298)
!10298 = !{!10299, !10300, !10301, !10302}
!10299 = !DILocalVariable(name: "dev", arg: 1, scope: !10297, file: !1339, line: 473, type: !1207)
!10300 = !DILocalVariable(name: "pins", arg: 2, scope: !10297, file: !1339, line: 474, type: !753)
!10301 = !DILocalVariable(name: "cfg", scope: !10297, file: !1339, line: 476, type: !10249)
!10302 = !DILocalVariable(name: "gpio", scope: !10297, file: !1339, line: 477, type: !1274)
!10303 = !DILocation(line: 0, scope: !10297)
!10304 = !DILocation(line: 476, column: 45, scope: !10297)
!10305 = !DILocation(line: 477, column: 44, scope: !10297)
!10306 = !DILocation(line: 484, column: 2, scope: !10297)
!10307 = !DILocation(line: 487, column: 2, scope: !10297)
!10308 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1339, file: !1339, line: 594, type: !1238, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10309)
!10309 = !{!10310, !10311, !10312, !10313, !10314, !10315, !10317, !10318, !10319}
!10310 = !DILocalVariable(name: "dev", arg: 1, scope: !10308, file: !1339, line: 594, type: !1207)
!10311 = !DILocalVariable(name: "pin", arg: 2, scope: !10308, file: !1339, line: 595, type: !741)
!10312 = !DILocalVariable(name: "mode", arg: 3, scope: !10308, file: !1339, line: 596, type: !706)
!10313 = !DILocalVariable(name: "trig", arg: 4, scope: !10308, file: !1339, line: 597, type: !712)
!10314 = !DILocalVariable(name: "cfg", scope: !10308, file: !1339, line: 599, type: !10249)
!10315 = !DILocalVariable(name: "data", scope: !10308, file: !1339, line: 600, type: !10316)
!10316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 32)
!10317 = !DILocalVariable(name: "edge", scope: !10308, file: !1339, line: 601, type: !103)
!10318 = !DILocalVariable(name: "err", scope: !10308, file: !1339, line: 602, type: !103)
!10319 = !DILabel(scope: !10308, name: "exit", file: !1339, line: 643)
!10320 = !DILocation(line: 0, scope: !10308)
!10321 = !DILocation(line: 599, column: 45, scope: !10308)
!10322 = !DILocation(line: 604, column: 6, scope: !10308)
!10323 = !DILocation(line: 605, column: 34, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10325, file: !1339, line: 605, column: 7)
!10325 = distinct !DILexicalBlock(scope: !10326, file: !1339, line: 604, column: 38)
!10326 = distinct !DILexicalBlock(scope: !10308, file: !1339, line: 604, column: 6)
!10327 = !DILocation(line: 605, column: 7, scope: !10324)
!10328 = !DILocation(line: 605, column: 47, scope: !10324)
!10329 = !DILocation(line: 605, column: 39, scope: !10324)
!10330 = !DILocation(line: 605, column: 7, scope: !10325)
!10331 = !DILocation(line: 606, column: 4, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10324, file: !1339, line: 605, column: 53)
!10333 = !DILocation(line: 607, column: 4, scope: !10332)
!10334 = !DILocation(line: 608, column: 4, scope: !10332)
!10335 = !DILocation(line: 609, column: 3, scope: !10332)
!10336 = !DILocation(line: 600, column: 38, scope: !10308)
!10337 = !DILocation(line: 620, column: 30, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10308, file: !1339, line: 620, column: 6)
!10339 = !DILocation(line: 620, column: 6, scope: !10338)
!10340 = !DILocation(line: 620, column: 57, scope: !10338)
!10341 = !DILocation(line: 620, column: 6, scope: !10308)
!10342 = !DILocation(line: 625, column: 29, scope: !10308)
!10343 = !DILocation(line: 625, column: 2, scope: !10308)
!10344 = !DILocation(line: 627, column: 2, scope: !10308)
!10345 = !DILocation(line: 630, column: 3, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10308, file: !1339, line: 627, column: 16)
!10347 = !DILocation(line: 633, column: 3, scope: !10346)
!10348 = !DILocation(line: 636, column: 3, scope: !10346)
!10349 = !DILocation(line: 639, column: 2, scope: !10308)
!10350 = !DILocation(line: 641, column: 2, scope: !10308)
!10351 = !DILocation(line: 643, column: 1, scope: !10308)
!10352 = !DILocation(line: 644, column: 2, scope: !10308)
!10353 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1339, file: !1339, line: 647, type: !1242, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10354)
!10354 = !{!10355, !10356, !10357, !10358}
!10355 = !DILocalVariable(name: "dev", arg: 1, scope: !10353, file: !1339, line: 647, type: !1207)
!10356 = !DILocalVariable(name: "callback", arg: 2, scope: !10353, file: !1339, line: 648, type: !1244)
!10357 = !DILocalVariable(name: "set", arg: 3, scope: !10353, file: !1339, line: 649, type: !131)
!10358 = !DILocalVariable(name: "data", scope: !10353, file: !1339, line: 651, type: !10316)
!10359 = !DILocation(line: 0, scope: !10353)
!10360 = !DILocation(line: 651, column: 38, scope: !10353)
!10361 = !DILocation(line: 653, column: 37, scope: !10353)
!10362 = !DILocation(line: 653, column: 9, scope: !10353)
!10363 = !DILocation(line: 653, column: 2, scope: !10353)
!10364 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10365, file: !10365, line: 38, type: !10366, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10369)
!10365 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10366 = !DISubroutineType(types: !10367)
!10367 = !{!103, !10368, !1244, !131}
!10368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!10369 = !{!10370, !10371, !10372}
!10370 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10364, file: !10365, line: 38, type: !10368)
!10371 = !DILocalVariable(name: "callback", arg: 2, scope: !10364, file: !10365, line: 39, type: !1244)
!10372 = !DILocalVariable(name: "set", arg: 3, scope: !10364, file: !10365, line: 40, type: !131)
!10373 = !DILocation(line: 0, scope: !10364)
!10374 = !DILocation(line: 45, column: 7, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10364, file: !10365, line: 45, column: 6)
!10376 = !DILocation(line: 45, column: 6, scope: !10364)
!10377 = !DILocation(line: 46, column: 56, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10379, file: !10365, line: 46, column: 7)
!10379 = distinct !DILexicalBlock(scope: !10375, file: !10365, line: 45, column: 38)
!10380 = !DILocation(line: 46, column: 8, scope: !10378)
!10381 = !DILocation(line: 46, column: 7, scope: !10379)
!10382 = !DILocation(line: 51, column: 13, scope: !10375)
!10383 = !DILocation(line: 56, column: 43, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10385, file: !10365, line: 55, column: 11)
!10385 = distinct !DILexicalBlock(scope: !10364, file: !10365, line: 55, column: 6)
!10386 = !DILocation(line: 56, column: 3, scope: !10384)
!10387 = !DILocation(line: 57, column: 2, scope: !10384)
!10388 = !DILocation(line: 60, column: 1, scope: !10364)
!10389 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !773, file: !773, line: 261, type: !10390, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10392)
!10390 = !DISubroutineType(types: !10391)
!10391 = !{!131, !10368}
!10392 = !{!10393}
!10393 = !DILocalVariable(name: "list", arg: 1, scope: !10389, file: !773, line: 261, type: !10368)
!10394 = !DILocation(line: 0, scope: !10389)
!10395 = !DILocation(line: 261, column: 1, scope: !10389)
!10396 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !773, file: !773, line: 417, type: !10397, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10399)
!10397 = !DISubroutineType(types: !10398)
!10398 = !{!131, !10368, !1407}
!10399 = !{!10400, !10401, !10402, !10403}
!10400 = !DILocalVariable(name: "list", arg: 1, scope: !10396, file: !773, line: 417, type: !10368)
!10401 = !DILocalVariable(name: "node", arg: 2, scope: !10396, file: !773, line: 417, type: !1407)
!10402 = !DILocalVariable(name: "prev", scope: !10396, file: !773, line: 417, type: !1407)
!10403 = !DILocalVariable(name: "test", scope: !10396, file: !773, line: 417, type: !1407)
!10404 = !DILocation(line: 0, scope: !10396)
!10405 = !DILocation(line: 417, column: 1, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10396, file: !773, line: 417, column: 1)
!10407 = !DILocation(line: 417, column: 1, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10406, file: !773, line: 417, column: 1)
!10409 = !DILocation(line: 417, column: 1, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10411, file: !773, line: 417, column: 1)
!10411 = distinct !DILexicalBlock(scope: !10408, file: !773, line: 417, column: 1)
!10412 = !DILocation(line: 417, column: 1, scope: !10411)
!10413 = distinct !{!10413, !10405, !10405}
!10414 = !DILocation(line: 417, column: 1, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10410, file: !773, line: 417, column: 1)
!10416 = !DILocation(line: 417, column: 1, scope: !10396)
!10417 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !773, file: !773, line: 298, type: !10418, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10420)
!10418 = !DISubroutineType(types: !10419)
!10419 = !{null, !10368, !1407}
!10420 = !{!10421, !10422}
!10421 = !DILocalVariable(name: "list", arg: 1, scope: !10417, file: !773, line: 298, type: !10368)
!10422 = !DILocalVariable(name: "node", arg: 2, scope: !10417, file: !773, line: 298, type: !1407)
!10423 = !DILocation(line: 0, scope: !10417)
!10424 = !DILocation(line: 298, column: 1, scope: !10417)
!10425 = !DILocation(line: 298, column: 1, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10417, file: !773, line: 298, column: 1)
!10427 = !DILocation(line: 298, column: 1, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10426, file: !773, line: 298, column: 1)
!10429 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !773, file: !773, line: 231, type: !10430, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10432)
!10430 = !DISubroutineType(types: !10431)
!10431 = !{!1407, !10368}
!10432 = !{!10433}
!10433 = !DILocalVariable(name: "list", arg: 1, scope: !10429, file: !773, line: 231, type: !10368)
!10434 = !DILocation(line: 0, scope: !10429)
!10435 = !DILocation(line: 233, column: 15, scope: !10429)
!10436 = !DILocation(line: 233, column: 2, scope: !10429)
!10437 = distinct !DISubprogram(name: "z_snode_next_set", scope: !773, file: !773, line: 209, type: !10438, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10440)
!10438 = !DISubroutineType(types: !10439)
!10439 = !{null, !1407, !1407}
!10440 = !{!10441, !10442}
!10441 = !DILocalVariable(name: "parent", arg: 1, scope: !10437, file: !773, line: 209, type: !1407)
!10442 = !DILocalVariable(name: "child", arg: 2, scope: !10437, file: !773, line: 209, type: !1407)
!10443 = !DILocation(line: 0, scope: !10437)
!10444 = !DILocation(line: 211, column: 10, scope: !10437)
!10445 = !DILocation(line: 211, column: 15, scope: !10437)
!10446 = !DILocation(line: 212, column: 1, scope: !10437)
!10447 = distinct !DISubprogram(name: "z_slist_head_set", scope: !773, file: !773, line: 214, type: !10418, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10448)
!10448 = !{!10449, !10450}
!10449 = !DILocalVariable(name: "list", arg: 1, scope: !10447, file: !773, line: 214, type: !10368)
!10450 = !DILocalVariable(name: "node", arg: 2, scope: !10447, file: !773, line: 214, type: !1407)
!10451 = !DILocation(line: 0, scope: !10447)
!10452 = !DILocation(line: 216, column: 8, scope: !10447)
!10453 = !DILocation(line: 216, column: 13, scope: !10447)
!10454 = !DILocation(line: 217, column: 1, scope: !10447)
!10455 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !773, file: !773, line: 243, type: !10430, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10456)
!10456 = !{!10457}
!10457 = !DILocalVariable(name: "list", arg: 1, scope: !10455, file: !773, line: 243, type: !10368)
!10458 = !DILocation(line: 0, scope: !10455)
!10459 = !DILocation(line: 245, column: 15, scope: !10455)
!10460 = !DILocation(line: 245, column: 2, scope: !10455)
!10461 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !773, file: !773, line: 219, type: !10418, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10462)
!10462 = !{!10463, !10464}
!10463 = !DILocalVariable(name: "list", arg: 1, scope: !10461, file: !773, line: 219, type: !10368)
!10464 = !DILocalVariable(name: "node", arg: 2, scope: !10461, file: !773, line: 219, type: !1407)
!10465 = !DILocation(line: 0, scope: !10461)
!10466 = !DILocation(line: 221, column: 8, scope: !10461)
!10467 = !DILocation(line: 221, column: 13, scope: !10461)
!10468 = !DILocation(line: 222, column: 1, scope: !10461)
!10469 = distinct !DISubprogram(name: "sys_slist_remove", scope: !773, file: !773, line: 401, type: !10470, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10472)
!10470 = !DISubroutineType(types: !10471)
!10471 = !{null, !10368, !1407, !1407}
!10472 = !{!10473, !10474, !10475}
!10473 = !DILocalVariable(name: "list", arg: 1, scope: !10469, file: !773, line: 401, type: !10368)
!10474 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10469, file: !773, line: 401, type: !1407)
!10475 = !DILocalVariable(name: "node", arg: 3, scope: !10469, file: !773, line: 401, type: !1407)
!10476 = !DILocation(line: 0, scope: !10469)
!10477 = !DILocation(line: 401, column: 1, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10469, file: !773, line: 401, column: 1)
!10479 = !DILocation(line: 0, scope: !10478)
!10480 = !DILocation(line: 401, column: 1, scope: !10469)
!10481 = !DILocation(line: 401, column: 1, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10478, file: !773, line: 401, column: 1)
!10483 = !DILocation(line: 401, column: 1, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10482, file: !773, line: 401, column: 1)
!10485 = !DILocation(line: 401, column: 1, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10484, file: !773, line: 401, column: 1)
!10487 = !DILocation(line: 401, column: 1, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10478, file: !773, line: 401, column: 1)
!10489 = !DILocation(line: 401, column: 1, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10488, file: !773, line: 401, column: 1)
!10491 = !DILocation(line: 401, column: 1, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10490, file: !773, line: 401, column: 1)
!10493 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !773, file: !773, line: 285, type: !10494, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10496)
!10494 = !DISubroutineType(types: !10495)
!10495 = !{!1407, !1407}
!10496 = !{!10497}
!10497 = !DILocalVariable(name: "node", arg: 1, scope: !10493, file: !773, line: 285, type: !1407)
!10498 = !DILocation(line: 0, scope: !10493)
!10499 = !DILocation(line: 285, column: 1, scope: !10493)
!10500 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !773, file: !773, line: 274, type: !10494, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10501)
!10501 = !{!10502}
!10502 = !DILocalVariable(name: "node", arg: 1, scope: !10500, file: !773, line: 274, type: !1407)
!10503 = !DILocation(line: 0, scope: !10500)
!10504 = !DILocation(line: 274, column: 1, scope: !10500)
!10505 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !773, file: !773, line: 204, type: !10494, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10506)
!10506 = !{!10507}
!10507 = !DILocalVariable(name: "node", arg: 1, scope: !10505, file: !773, line: 204, type: !1407)
!10508 = !DILocation(line: 0, scope: !10505)
!10509 = !DILocation(line: 206, column: 15, scope: !10505)
!10510 = !DILocation(line: 206, column: 2, scope: !10505)
!10511 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1339, file: !1339, line: 342, type: !396, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10512)
!10512 = !{!10513, !10514, !10515}
!10513 = !DILocalVariable(name: "pin", arg: 1, scope: !10511, file: !1339, line: 342, type: !103)
!10514 = !DILocalVariable(name: "line", scope: !10511, file: !1339, line: 344, type: !108)
!10515 = !DILocalVariable(name: "port", scope: !10511, file: !1339, line: 345, type: !103)
!10516 = !DILocation(line: 0, scope: !10511)
!10517 = !DILocation(line: 344, column: 18, scope: !10511)
!10518 = !{i32 983040, i32 0}
!10519 = !DILocation(line: 356, column: 9, scope: !10511)
!10520 = !DILocation(line: 370, column: 2, scope: !10511)
!10521 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1339, file: !1339, line: 37, type: !938, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10522)
!10522 = !{!10523, !10524, !10525}
!10523 = !DILocalVariable(name: "line", arg: 1, scope: !10521, file: !1339, line: 37, type: !103)
!10524 = !DILocalVariable(name: "arg", arg: 2, scope: !10521, file: !1339, line: 37, type: !102)
!10525 = !DILocalVariable(name: "data", scope: !10521, file: !1339, line: 39, type: !10316)
!10526 = !DILocation(line: 0, scope: !10521)
!10527 = !DILocation(line: 41, column: 29, scope: !10521)
!10528 = !DILocation(line: 41, column: 39, scope: !10521)
!10529 = !DILocation(line: 41, column: 44, scope: !10521)
!10530 = !DILocation(line: 41, column: 2, scope: !10521)
!10531 = !DILocation(line: 42, column: 1, scope: !10521)
!10532 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1339, file: !1339, line: 376, type: !10533, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10535)
!10533 = !DISubroutineType(types: !10534)
!10534 = !{!103, !103, !103}
!10535 = !{!10536, !10537, !10538, !10540, !10541}
!10536 = !DILocalVariable(name: "port", arg: 1, scope: !10532, file: !1339, line: 376, type: !103)
!10537 = !DILocalVariable(name: "pin", arg: 2, scope: !10532, file: !1339, line: 376, type: !103)
!10538 = !DILocalVariable(name: "clk", scope: !10532, file: !1339, line: 386, type: !10539)
!10539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1207)
!10540 = !DILocalVariable(name: "pclken", scope: !10532, file: !1339, line: 387, type: !1442)
!10541 = !DILocalVariable(name: "ret", scope: !10532, file: !1339, line: 396, type: !103)
!10542 = !DILocation(line: 0, scope: !10532)
!10543 = !DILocation(line: 387, column: 2, scope: !10532)
!10544 = !DILocation(line: 387, column: 22, scope: !10532)
!10545 = !DILocation(line: 399, column: 8, scope: !10532)
!10546 = !DILocation(line: 400, column: 10, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10532, file: !1339, line: 400, column: 6)
!10548 = !DILocation(line: 400, column: 6, scope: !10532)
!10549 = !DILocation(line: 405, column: 2, scope: !10532)
!10550 = !DILocation(line: 407, column: 2, scope: !10532)
!10551 = !DILocation(line: 408, column: 1, scope: !10532)
!10552 = distinct !DISubprogram(name: "clock_control_on", scope: !1014, file: !1014, line: 123, type: !1304, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10553)
!10553 = !{!10554, !10555, !10556}
!10554 = !DILocalVariable(name: "dev", arg: 1, scope: !10552, file: !1014, line: 123, type: !1207)
!10555 = !DILocalVariable(name: "sys", arg: 2, scope: !10552, file: !1014, line: 124, type: !1089)
!10556 = !DILocalVariable(name: "api", scope: !10552, file: !1014, line: 126, type: !1297)
!10557 = !DILocation(line: 0, scope: !10552)
!10558 = !DILocation(line: 127, column: 49, scope: !10552)
!10559 = !DILocation(line: 129, column: 14, scope: !10552)
!10560 = !DILocation(line: 129, column: 9, scope: !10552)
!10561 = !DILocation(line: 129, column: 2, scope: !10552)
!10562 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1339, file: !1339, line: 311, type: !9725, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10563)
!10563 = !{!10564, !10565, !10566}
!10564 = !DILocalVariable(name: "port", arg: 1, scope: !10562, file: !1339, line: 311, type: !103)
!10565 = !DILocalVariable(name: "pin", arg: 2, scope: !10562, file: !1339, line: 311, type: !103)
!10566 = !DILocalVariable(name: "line", scope: !10562, file: !1339, line: 313, type: !108)
!10567 = !DILocation(line: 0, scope: !10562)
!10568 = !DILocation(line: 313, column: 18, scope: !10562)
!10569 = !DILocation(line: 337, column: 2, scope: !10562)
!10570 = !DILocation(line: 340, column: 1, scope: !10562)
!10571 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1339, file: !1339, line: 295, type: !10572, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10574)
!10572 = !DISubroutineType(types: !10573)
!10573 = !{!108, !103}
!10574 = !{!10575}
!10575 = !DILocalVariable(name: "pin", arg: 1, scope: !10571, file: !1339, line: 295, type: !103)
!10576 = !DILocation(line: 0, scope: !10571)
!10577 = !DILocation(line: 307, column: 46, scope: !10571)
!10578 = !DILocation(line: 307, column: 27, scope: !10571)
!10579 = !DILocation(line: 307, column: 32, scope: !10571)
!10580 = !DILocation(line: 307, column: 14, scope: !10571)
!10581 = !DILocation(line: 307, column: 39, scope: !10571)
!10582 = !DILocation(line: 307, column: 2, scope: !10571)
!10583 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !10584, file: !10584, line: 621, type: !10585, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10587)
!10584 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10585 = !DISubroutineType(types: !10586)
!10586 = !{null, !108, !108}
!10587 = !{!10588, !10589}
!10588 = !DILocalVariable(name: "Port", arg: 1, scope: !10583, file: !10584, line: 621, type: !108)
!10589 = !DILocalVariable(name: "Line", arg: 2, scope: !10583, file: !10584, line: 621, type: !108)
!10590 = !DILocation(line: 0, scope: !10583)
!10591 = !DILocation(line: 623, column: 3, scope: !10583)
!10592 = !DILocalVariable(name: "value", arg: 1, scope: !10593, file: !7281, line: 373, type: !108)
!10593 = distinct !DISubprogram(name: "__RBIT", scope: !7281, file: !7281, line: 373, type: !8483, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10594)
!10594 = !{!10592, !10595}
!10595 = !DILocalVariable(name: "result", scope: !10593, file: !7281, line: 375, type: !108)
!10596 = !DILocation(line: 0, scope: !10593, inlinedAt: !10597)
!10597 = distinct !DILocation(line: 623, column: 3, scope: !10583)
!10598 = !DILocation(line: 380, column: 4, scope: !10593, inlinedAt: !10597)
!10599 = !{i64 2449961}
!10600 = !DILocalVariable(name: "value", arg: 1, scope: !10601, file: !7281, line: 403, type: !108)
!10601 = distinct !DISubprogram(name: "__CLZ", scope: !7281, file: !7281, line: 403, type: !10602, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10604)
!10602 = !DISubroutineType(types: !10603)
!10603 = !{!185, !108}
!10604 = !{!10600}
!10605 = !DILocation(line: 0, scope: !10601, inlinedAt: !10606)
!10606 = distinct !DILocation(line: 623, column: 3, scope: !10583)
!10607 = !DILocation(line: 414, column: 7, scope: !10601, inlinedAt: !10606)
!10608 = !DILocation(line: 624, column: 1, scope: !10583)
!10609 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10365, file: !10365, line: 69, type: !10610, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10612)
!10610 = !DISubroutineType(types: !10611)
!10611 = !{null, !10368, !1207, !108}
!10612 = !{!10613, !10614, !10615, !10616, !10617}
!10613 = !DILocalVariable(name: "list", arg: 1, scope: !10609, file: !10365, line: 69, type: !10368)
!10614 = !DILocalVariable(name: "port", arg: 2, scope: !10609, file: !10365, line: 70, type: !1207)
!10615 = !DILocalVariable(name: "pins", arg: 3, scope: !10609, file: !10365, line: 71, type: !108)
!10616 = !DILocalVariable(name: "cb", scope: !10609, file: !10365, line: 73, type: !1244)
!10617 = !DILocalVariable(name: "tmp", scope: !10609, file: !10365, line: 73, type: !1244)
!10618 = !DILocation(line: 0, scope: !10609)
!10619 = !DILocation(line: 75, column: 2, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10609, file: !10365, line: 75, column: 2)
!10621 = !DILocation(line: 0, scope: !10620)
!10622 = !DILocation(line: 76, column: 11, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10624, file: !10365, line: 76, column: 7)
!10624 = distinct !DILexicalBlock(scope: !10625, file: !10365, line: 75, column: 57)
!10625 = distinct !DILexicalBlock(scope: !10620, file: !10365, line: 75, column: 2)
!10626 = !DILocation(line: 76, column: 20, scope: !10623)
!10627 = !DILocation(line: 76, column: 7, scope: !10624)
!10628 = !DILocation(line: 78, column: 8, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10623, file: !10365, line: 76, column: 28)
!10630 = !DILocation(line: 78, column: 4, scope: !10629)
!10631 = !DILocation(line: 79, column: 3, scope: !10629)
!10632 = !DILocation(line: 75, column: 2, scope: !10625)
!10633 = !DILocation(line: 81, column: 1, scope: !10609)
!10634 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !10584, file: !10584, line: 721, type: !8483, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10635)
!10635 = !{!10636}
!10636 = !DILocalVariable(name: "Line", arg: 1, scope: !10634, file: !10584, line: 721, type: !108)
!10637 = !DILocation(line: 0, scope: !10634)
!10638 = !DILocation(line: 723, column: 21, scope: !10634)
!10639 = !DILocation(line: 0, scope: !10593, inlinedAt: !10640)
!10640 = distinct !DILocation(line: 723, column: 76, scope: !10634)
!10641 = !DILocation(line: 380, column: 4, scope: !10593, inlinedAt: !10640)
!10642 = !DILocation(line: 0, scope: !10601, inlinedAt: !10643)
!10643 = distinct !DILocation(line: 723, column: 76, scope: !10634)
!10644 = !DILocation(line: 414, column: 7, scope: !10601, inlinedAt: !10643)
!10645 = !DILocation(line: 723, column: 73, scope: !10634)
!10646 = !DILocation(line: 723, column: 3, scope: !10634)
!10647 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10648, file: !10648, line: 913, type: !10649, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10651)
!10648 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10649 = !DISubroutineType(types: !10650)
!10650 = !{null, !1274, !108}
!10651 = !{!10652, !10653}
!10652 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10647, file: !10648, line: 913, type: !1274)
!10653 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10647, file: !10648, line: 913, type: !108)
!10654 = !DILocation(line: 0, scope: !10647)
!10655 = !DILocation(line: 918, column: 3, scope: !10647)
!10656 = !DILocation(line: 920, column: 1, scope: !10647)
!10657 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10648, file: !10648, line: 825, type: !10658, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10660)
!10658 = !DISubroutineType(types: !10659)
!10659 = !{!108, !1274}
!10660 = !{!10661}
!10661 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10657, file: !10648, line: 825, type: !1274)
!10662 = !DILocation(line: 0, scope: !10657)
!10663 = !DILocation(line: 827, column: 21, scope: !10657)
!10664 = !DILocation(line: 827, column: 3, scope: !10657)
!10665 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10648, file: !10648, line: 814, type: !10649, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10666)
!10666 = !{!10667, !10668}
!10667 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10665, file: !10648, line: 814, type: !1274)
!10668 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10665, file: !10648, line: 814, type: !108)
!10669 = !DILocation(line: 0, scope: !10665)
!10670 = !DILocation(line: 816, column: 3, scope: !10665)
!10671 = !DILocation(line: 817, column: 1, scope: !10665)
!10672 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10648, file: !10648, line: 773, type: !10658, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10673)
!10673 = !{!10674}
!10674 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10672, file: !10648, line: 773, type: !1274)
!10675 = !DILocation(line: 0, scope: !10672)
!10676 = !DILocation(line: 775, column: 21, scope: !10672)
!10677 = !DILocation(line: 775, column: 3, scope: !10672)
!10678 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1339, file: !1339, line: 47, type: !10679, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10681)
!10679 = !DISubroutineType(types: !10680)
!10680 = !{!103, !742, !374}
!10681 = !{!10682, !10683}
!10682 = !DILocalVariable(name: "flags", arg: 1, scope: !10678, file: !1339, line: 47, type: !742)
!10683 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10678, file: !1339, line: 47, type: !374)
!10684 = !DILocation(line: 0, scope: !10678)
!10685 = !DILocation(line: 50, column: 13, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10678, file: !1339, line: 50, column: 6)
!10687 = !DILocation(line: 50, column: 28, scope: !10686)
!10688 = !DILocation(line: 50, column: 6, scope: !10678)
!10689 = !DILocation(line: 53, column: 11, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10686, file: !1339, line: 50, column: 34)
!10691 = !DILocation(line: 55, column: 14, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10690, file: !1339, line: 55, column: 7)
!10693 = !DILocation(line: 55, column: 35, scope: !10692)
!10694 = !DILocation(line: 55, column: 7, scope: !10690)
!10695 = !DILocation(line: 56, column: 14, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10697, file: !1339, line: 56, column: 8)
!10697 = distinct !DILexicalBlock(scope: !10692, file: !1339, line: 55, column: 41)
!10698 = !DILocation(line: 56, column: 8, scope: !10697)
!10699 = !DILocation(line: 0, scope: !10692)
!10700 = !DILocation(line: 66, column: 14, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10690, file: !1339, line: 66, column: 7)
!10702 = !DILocation(line: 66, column: 30, scope: !10701)
!10703 = !DILocation(line: 66, column: 7, scope: !10690)
!10704 = !DILocation(line: 67, column: 12, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10701, file: !1339, line: 66, column: 36)
!10706 = !DILocation(line: 68, column: 3, scope: !10705)
!10707 = !DILocation(line: 68, column: 21, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10701, file: !1339, line: 68, column: 14)
!10709 = !DILocation(line: 68, column: 39, scope: !10708)
!10710 = !DILocation(line: 68, column: 14, scope: !10701)
!10711 = !DILocation(line: 69, column: 12, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10708, file: !1339, line: 68, column: 45)
!10713 = !DILocation(line: 70, column: 3, scope: !10712)
!10714 = !DILocation(line: 72, column: 21, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10686, file: !1339, line: 72, column: 14)
!10716 = !DILocation(line: 72, column: 35, scope: !10715)
!10717 = !DILocation(line: 72, column: 14, scope: !10686)
!10718 = !DILocation(line: 77, column: 14, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10720, file: !1339, line: 77, column: 7)
!10720 = distinct !DILexicalBlock(scope: !10715, file: !1339, line: 72, column: 41)
!10721 = !DILocation(line: 77, column: 30, scope: !10719)
!10722 = !DILocation(line: 77, column: 7, scope: !10720)
!10723 = !DILocation(line: 0, scope: !10686)
!10724 = !DILocation(line: 90, column: 1, scope: !10678)
!10725 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1339, file: !1339, line: 157, type: !10726, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10728)
!10726 = !DISubroutineType(types: !10727)
!10727 = !{null, !1207, !103, !103, !103}
!10728 = !{!10729, !10730, !10731, !10732, !10733, !10734, !10735, !10736, !10737, !10738, !10739}
!10729 = !DILocalVariable(name: "dev", arg: 1, scope: !10725, file: !1339, line: 157, type: !1207)
!10730 = !DILocalVariable(name: "pin", arg: 2, scope: !10725, file: !1339, line: 157, type: !103)
!10731 = !DILocalVariable(name: "conf", arg: 3, scope: !10725, file: !1339, line: 158, type: !103)
!10732 = !DILocalVariable(name: "func", arg: 4, scope: !10725, file: !1339, line: 158, type: !103)
!10733 = !DILocalVariable(name: "cfg", scope: !10725, file: !1339, line: 160, type: !10249)
!10734 = !DILocalVariable(name: "gpio", scope: !10725, file: !1339, line: 161, type: !1274)
!10735 = !DILocalVariable(name: "pin_ll", scope: !10725, file: !1339, line: 163, type: !103)
!10736 = !DILocalVariable(name: "mode", scope: !10725, file: !1339, line: 227, type: !32)
!10737 = !DILocalVariable(name: "otype", scope: !10725, file: !1339, line: 227, type: !32)
!10738 = !DILocalVariable(name: "ospeed", scope: !10725, file: !1339, line: 227, type: !32)
!10739 = !DILocalVariable(name: "pupd", scope: !10725, file: !1339, line: 227, type: !32)
!10740 = !DILocation(line: 0, scope: !10725)
!10741 = !DILocation(line: 160, column: 45, scope: !10725)
!10742 = !DILocation(line: 161, column: 44, scope: !10725)
!10743 = !DILocation(line: 163, column: 15, scope: !10725)
!10744 = !DILocation(line: 229, column: 14, scope: !10725)
!10745 = !DILocation(line: 246, column: 47, scope: !10725)
!10746 = !DILocation(line: 246, column: 2, scope: !10725)
!10747 = !DILocation(line: 248, column: 43, scope: !10725)
!10748 = !DILocation(line: 248, column: 2, scope: !10725)
!10749 = !DILocation(line: 250, column: 40, scope: !10725)
!10750 = !DILocation(line: 250, column: 2, scope: !10725)
!10751 = !DILocation(line: 252, column: 11, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10725, file: !1339, line: 252, column: 6)
!10753 = !DILocation(line: 252, column: 6, scope: !10725)
!10754 = !DILocation(line: 253, column: 11, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10756, file: !1339, line: 253, column: 7)
!10756 = distinct !DILexicalBlock(scope: !10752, file: !1339, line: 252, column: 36)
!10757 = !DILocation(line: 253, column: 7, scope: !10756)
!10758 = !DILocation(line: 254, column: 4, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10755, file: !1339, line: 253, column: 16)
!10760 = !DILocation(line: 255, column: 3, scope: !10759)
!10761 = !DILocation(line: 256, column: 4, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10755, file: !1339, line: 255, column: 10)
!10763 = !DILocation(line: 260, column: 40, scope: !10725)
!10764 = !DILocation(line: 260, column: 2, scope: !10725)
!10765 = !DILocation(line: 265, column: 1, scope: !10725)
!10766 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1339, file: !1339, line: 137, type: !10572, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10767)
!10767 = !{!10768, !10769}
!10768 = !DILocalVariable(name: "pin", arg: 1, scope: !10766, file: !1339, line: 137, type: !103)
!10769 = !DILocalVariable(name: "pinval", scope: !10766, file: !1339, line: 139, type: !108)
!10770 = !DILocation(line: 0, scope: !10766)
!10771 = !DILocation(line: 149, column: 13, scope: !10766)
!10772 = !DILocation(line: 151, column: 2, scope: !10766)
!10773 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10648, file: !10648, line: 343, type: !10774, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10776)
!10774 = !DISubroutineType(types: !10775)
!10775 = !{null, !1274, !108, !108}
!10776 = !{!10777, !10778, !10779}
!10777 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10773, file: !10648, line: 343, type: !1274)
!10778 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10773, file: !10648, line: 343, type: !108)
!10779 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10773, file: !10648, line: 343, type: !108)
!10780 = !DILocation(line: 0, scope: !10773)
!10781 = !DILocation(line: 345, column: 3, scope: !10773)
!10782 = !DILocation(line: 346, column: 1, scope: !10773)
!10783 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10648, file: !10648, line: 414, type: !10774, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10784)
!10784 = !{!10785, !10786, !10787}
!10785 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10783, file: !10648, line: 414, type: !1274)
!10786 = !DILocalVariable(name: "Pin", arg: 2, scope: !10783, file: !10648, line: 414, type: !108)
!10787 = !DILocalVariable(name: "Speed", arg: 3, scope: !10783, file: !10648, line: 414, type: !108)
!10788 = !DILocation(line: 0, scope: !10783)
!10789 = !DILocation(line: 416, column: 3, scope: !10783)
!10790 = !DILocation(line: 0, scope: !10593, inlinedAt: !10791)
!10791 = distinct !DILocation(line: 416, column: 3, scope: !10783)
!10792 = !DILocation(line: 380, column: 4, scope: !10593, inlinedAt: !10791)
!10793 = !DILocation(line: 0, scope: !10601, inlinedAt: !10794)
!10794 = distinct !DILocation(line: 416, column: 3, scope: !10783)
!10795 = !DILocation(line: 414, column: 7, scope: !10601, inlinedAt: !10794)
!10796 = !DILocation(line: 0, scope: !10593, inlinedAt: !10797)
!10797 = distinct !DILocation(line: 416, column: 3, scope: !10783)
!10798 = !DILocation(line: 0, scope: !10601, inlinedAt: !10799)
!10799 = distinct !DILocation(line: 416, column: 3, scope: !10783)
!10800 = !DILocation(line: 418, column: 1, scope: !10783)
!10801 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10648, file: !10648, line: 485, type: !10774, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10802)
!10802 = !{!10803, !10804, !10805}
!10803 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10801, file: !10648, line: 485, type: !1274)
!10804 = !DILocalVariable(name: "Pin", arg: 2, scope: !10801, file: !10648, line: 485, type: !108)
!10805 = !DILocalVariable(name: "Pull", arg: 3, scope: !10801, file: !10648, line: 485, type: !108)
!10806 = !DILocation(line: 0, scope: !10801)
!10807 = !DILocation(line: 487, column: 3, scope: !10801)
!10808 = !DILocation(line: 0, scope: !10593, inlinedAt: !10809)
!10809 = distinct !DILocation(line: 487, column: 3, scope: !10801)
!10810 = !DILocation(line: 380, column: 4, scope: !10593, inlinedAt: !10809)
!10811 = !DILocation(line: 0, scope: !10601, inlinedAt: !10812)
!10812 = distinct !DILocation(line: 487, column: 3, scope: !10801)
!10813 = !DILocation(line: 414, column: 7, scope: !10601, inlinedAt: !10812)
!10814 = !DILocation(line: 0, scope: !10593, inlinedAt: !10815)
!10815 = distinct !DILocation(line: 487, column: 3, scope: !10801)
!10816 = !DILocation(line: 0, scope: !10601, inlinedAt: !10817)
!10817 = distinct !DILocation(line: 487, column: 3, scope: !10801)
!10818 = !DILocation(line: 488, column: 1, scope: !10801)
!10819 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10648, file: !10648, line: 557, type: !10774, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10820)
!10820 = !{!10821, !10822, !10823}
!10821 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10819, file: !10648, line: 557, type: !1274)
!10822 = !DILocalVariable(name: "Pin", arg: 2, scope: !10819, file: !10648, line: 557, type: !108)
!10823 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10819, file: !10648, line: 557, type: !108)
!10824 = !DILocation(line: 0, scope: !10819)
!10825 = !DILocation(line: 559, column: 3, scope: !10819)
!10826 = !DILocation(line: 0, scope: !10593, inlinedAt: !10827)
!10827 = distinct !DILocation(line: 559, column: 3, scope: !10819)
!10828 = !DILocation(line: 380, column: 4, scope: !10593, inlinedAt: !10827)
!10829 = !DILocation(line: 0, scope: !10601, inlinedAt: !10830)
!10830 = distinct !DILocation(line: 559, column: 3, scope: !10819)
!10831 = !DILocation(line: 414, column: 7, scope: !10601, inlinedAt: !10830)
!10832 = !DILocation(line: 0, scope: !10593, inlinedAt: !10833)
!10833 = distinct !DILocation(line: 559, column: 3, scope: !10819)
!10834 = !DILocation(line: 0, scope: !10601, inlinedAt: !10835)
!10835 = distinct !DILocation(line: 559, column: 3, scope: !10819)
!10836 = !DILocation(line: 561, column: 1, scope: !10819)
!10837 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10648, file: !10648, line: 634, type: !10774, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10838)
!10838 = !{!10839, !10840, !10841}
!10839 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10837, file: !10648, line: 634, type: !1274)
!10840 = !DILocalVariable(name: "Pin", arg: 2, scope: !10837, file: !10648, line: 634, type: !108)
!10841 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10837, file: !10648, line: 634, type: !108)
!10842 = !DILocation(line: 0, scope: !10837)
!10843 = !DILocation(line: 636, column: 3, scope: !10837)
!10844 = !DILocation(line: 0, scope: !10593, inlinedAt: !10845)
!10845 = distinct !DILocation(line: 636, column: 3, scope: !10837)
!10846 = !DILocation(line: 380, column: 4, scope: !10593, inlinedAt: !10845)
!10847 = !DILocation(line: 0, scope: !10601, inlinedAt: !10848)
!10848 = distinct !DILocation(line: 636, column: 3, scope: !10837)
!10849 = !DILocation(line: 414, column: 7, scope: !10601, inlinedAt: !10848)
!10850 = !DILocation(line: 0, scope: !10593, inlinedAt: !10851)
!10851 = distinct !DILocation(line: 636, column: 3, scope: !10837)
!10852 = !DILocation(line: 0, scope: !10601, inlinedAt: !10853)
!10853 = distinct !DILocation(line: 636, column: 3, scope: !10837)
!10854 = !DILocation(line: 638, column: 1, scope: !10837)
!10855 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10648, file: !10648, line: 274, type: !10774, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10856)
!10856 = !{!10857, !10858, !10859}
!10857 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10855, file: !10648, line: 274, type: !1274)
!10858 = !DILocalVariable(name: "Pin", arg: 2, scope: !10855, file: !10648, line: 274, type: !108)
!10859 = !DILocalVariable(name: "Mode", arg: 3, scope: !10855, file: !10648, line: 274, type: !108)
!10860 = !DILocation(line: 0, scope: !10855)
!10861 = !DILocation(line: 276, column: 3, scope: !10855)
!10862 = !DILocation(line: 0, scope: !10593, inlinedAt: !10863)
!10863 = distinct !DILocation(line: 276, column: 3, scope: !10855)
!10864 = !DILocation(line: 380, column: 4, scope: !10593, inlinedAt: !10863)
!10865 = !DILocation(line: 0, scope: !10601, inlinedAt: !10866)
!10866 = distinct !DILocation(line: 276, column: 3, scope: !10855)
!10867 = !DILocation(line: 414, column: 7, scope: !10601, inlinedAt: !10866)
!10868 = !DILocation(line: 0, scope: !10593, inlinedAt: !10869)
!10869 = distinct !DILocation(line: 276, column: 3, scope: !10855)
!10870 = !DILocation(line: 0, scope: !10601, inlinedAt: !10871)
!10871 = distinct !DILocation(line: 276, column: 3, scope: !10855)
!10872 = !DILocation(line: 277, column: 1, scope: !10855)
!10873 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1339, file: !1339, line: 698, type: !1352, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10874)
!10874 = !{!10875, !10876, !10877}
!10875 = !DILocalVariable(name: "dev", arg: 1, scope: !10873, file: !1339, line: 698, type: !1207)
!10876 = !DILocalVariable(name: "data", scope: !10873, file: !1339, line: 700, type: !10316)
!10877 = !DILocalVariable(name: "ret", scope: !10873, file: !1339, line: 701, type: !103)
!10878 = !DILocation(line: 0, scope: !10873)
!10879 = !DILocation(line: 700, column: 38, scope: !10873)
!10880 = !DILocation(line: 703, column: 8, scope: !10873)
!10881 = !DILocation(line: 703, column: 12, scope: !10873)
!10882 = !DILocation(line: 705, column: 7, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10873, file: !1339, line: 705, column: 6)
!10884 = !DILocation(line: 705, column: 6, scope: !10873)
!10885 = !DILocation(line: 722, column: 8, scope: !10873)
!10886 = !DILocation(line: 723, column: 10, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10873, file: !1339, line: 723, column: 6)
!10888 = !DILocation(line: 723, column: 6, scope: !10873)
!10889 = !DILocation(line: 731, column: 1, scope: !10873)
!10890 = distinct !DISubprogram(name: "device_is_ready", scope: !9104, file: !9104, line: 47, type: !10891, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10893)
!10891 = !DISubroutineType(types: !10892)
!10892 = !{!131, !1207}
!10893 = !{!10894}
!10894 = !DILocalVariable(name: "dev", arg: 1, scope: !10890, file: !9104, line: 47, type: !1207)
!10895 = !DILocation(line: 0, scope: !10890)
!10896 = !DILocation(line: 55, column: 2, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10890, file: !9104, line: 55, column: 2)
!10898 = !{i64 2152401624}
!10899 = !DILocation(line: 56, column: 9, scope: !10890)
!10900 = !DILocation(line: 56, column: 2, scope: !10890)
!10901 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1339, file: !1339, line: 270, type: !10902, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10904)
!10902 = !DISubroutineType(types: !10903)
!10903 = !{!103, !1207, !131}
!10904 = !{!10905, !10906, !10907, !10908, !10909}
!10905 = !DILocalVariable(name: "dev", arg: 1, scope: !10901, file: !1339, line: 270, type: !1207)
!10906 = !DILocalVariable(name: "on", arg: 2, scope: !10901, file: !1339, line: 270, type: !131)
!10907 = !DILocalVariable(name: "cfg", scope: !10901, file: !1339, line: 272, type: !10249)
!10908 = !DILocalVariable(name: "ret", scope: !10901, file: !1339, line: 273, type: !103)
!10909 = !DILocalVariable(name: "clk", scope: !10901, file: !1339, line: 278, type: !10539)
!10910 = !DILocation(line: 0, scope: !10901)
!10911 = !DILocation(line: 272, column: 45, scope: !10901)
!10912 = !DILocation(line: 282, column: 38, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10914, file: !1339, line: 280, column: 10)
!10914 = distinct !DILexicalBlock(scope: !10901, file: !1339, line: 280, column: 6)
!10915 = !DILocation(line: 282, column: 6, scope: !10913)
!10916 = !DILocation(line: 281, column: 9, scope: !10913)
!10917 = !DILocation(line: 293, column: 1, scope: !10901)
!10918 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !442, file: !442, line: 730, type: !10891, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10919)
!10919 = !{!10920}
!10920 = !DILocalVariable(name: "dev", arg: 1, scope: !10918, file: !442, line: 730, type: !1207)
!10921 = !DILocation(line: 0, scope: !10918)
!10922 = !DILocation(line: 732, column: 9, scope: !10918)
!10923 = !DILocation(line: 732, column: 2, scope: !10918)
!10924 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1339, file: !1339, line: 496, type: !10925, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1189, retainedNodes: !10927)
!10925 = !DISubroutineType(types: !10926)
!10926 = !{!103, !1207, !103, !103, !103}
!10927 = !{!10928, !10929, !10930, !10931, !10932, !10933}
!10928 = !DILocalVariable(name: "dev", arg: 1, scope: !10924, file: !1339, line: 496, type: !1207)
!10929 = !DILocalVariable(name: "pin", arg: 2, scope: !10924, file: !1339, line: 496, type: !103)
!10930 = !DILocalVariable(name: "conf", arg: 3, scope: !10924, file: !1339, line: 496, type: !103)
!10931 = !DILocalVariable(name: "func", arg: 4, scope: !10924, file: !1339, line: 496, type: !103)
!10932 = !DILocalVariable(name: "ret", scope: !10924, file: !1339, line: 498, type: !103)
!10933 = !DILocalVariable(name: "gpio_out", scope: !10934, file: !1339, line: 508, type: !108)
!10934 = distinct !DILexicalBlock(scope: !10935, file: !1339, line: 507, column: 27)
!10935 = distinct !DILexicalBlock(scope: !10924, file: !1339, line: 507, column: 6)
!10936 = !DILocation(line: 0, scope: !10924)
!10937 = !DILocation(line: 505, column: 2, scope: !10924)
!10938 = !DILocation(line: 507, column: 11, scope: !10935)
!10939 = !DILocation(line: 507, column: 6, scope: !10924)
!10940 = !DILocation(line: 508, column: 28, scope: !10934)
!10941 = !DILocation(line: 0, scope: !10934)
!10942 = !DILocation(line: 510, column: 16, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10934, file: !1339, line: 510, column: 7)
!10944 = !DILocation(line: 0, scope: !10943)
!10945 = !DILocation(line: 510, column: 7, scope: !10934)
!10946 = !DILocation(line: 511, column: 4, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10943, file: !1339, line: 510, column: 32)
!10948 = !DILocation(line: 512, column: 3, scope: !10947)
!10949 = !DILocation(line: 513, column: 4, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10951, file: !1339, line: 512, column: 39)
!10951 = distinct !DILexicalBlock(scope: !10943, file: !1339, line: 512, column: 14)
!10952 = !DILocation(line: 514, column: 3, scope: !10950)
!10953 = !DILocation(line: 518, column: 1, scope: !10924)
!10954 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1594, file: !1594, line: 526, type: !1498, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10955)
!10955 = !{!10956, !10957, !10958}
!10956 = !DILocalVariable(name: "dev", arg: 1, scope: !10954, file: !1594, line: 526, type: !1500)
!10957 = !DILocalVariable(name: "c", arg: 2, scope: !10954, file: !1594, line: 526, type: !1150)
!10958 = !DILocalVariable(name: "config", scope: !10954, file: !1594, line: 528, type: !10959)
!10959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 32)
!10960 = !DILocation(line: 0, scope: !10954)
!10961 = !DILocation(line: 528, column: 48, scope: !10954)
!10962 = !DILocation(line: 531, column: 40, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10954, file: !1594, line: 531, column: 6)
!10964 = !DILocation(line: 531, column: 6, scope: !10963)
!10965 = !DILocation(line: 531, column: 6, scope: !10954)
!10966 = !DILocation(line: 532, column: 34, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10963, file: !1594, line: 531, column: 48)
!10968 = !DILocation(line: 532, column: 3, scope: !10967)
!10969 = !DILocation(line: 533, column: 2, scope: !10967)
!10970 = !DILocation(line: 539, column: 42, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10954, file: !1594, line: 539, column: 6)
!10972 = !DILocation(line: 539, column: 7, scope: !10971)
!10973 = !DILocation(line: 539, column: 6, scope: !10954)
!10974 = !DILocation(line: 543, column: 52, scope: !10954)
!10975 = !DILocation(line: 543, column: 22, scope: !10954)
!10976 = !DILocation(line: 543, column: 5, scope: !10954)
!10977 = !DILocation(line: 545, column: 2, scope: !10954)
!10978 = !DILocation(line: 546, column: 1, scope: !10954)
!10979 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1594, file: !1594, line: 548, type: !1517, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10980)
!10980 = !{!10981, !10982, !10983, !10984}
!10981 = !DILocalVariable(name: "dev", arg: 1, scope: !10979, file: !1594, line: 548, type: !1500)
!10982 = !DILocalVariable(name: "c", arg: 2, scope: !10979, file: !1594, line: 549, type: !186)
!10983 = !DILocalVariable(name: "config", scope: !10979, file: !1594, line: 551, type: !10959)
!10984 = !DILocalVariable(name: "key", scope: !10979, file: !1594, line: 555, type: !32)
!10985 = !DILocation(line: 0, scope: !10979)
!10986 = !DILocation(line: 551, column: 48, scope: !10979)
!10987 = !DILocation(line: 562, column: 2, scope: !10979)
!10988 = !DILocation(line: 563, column: 41, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10990, file: !1594, line: 563, column: 7)
!10990 = distinct !DILexicalBlock(scope: !10979, file: !1594, line: 562, column: 12)
!10991 = !DILocation(line: 563, column: 7, scope: !10989)
!10992 = !DILocation(line: 563, column: 7, scope: !10990)
!10993 = !DILocation(line: 55, column: 2, scope: !10994, inlinedAt: !10998)
!10994 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6946, file: !6946, line: 42, type: !6947, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !10995)
!10995 = !{!10996, !10997}
!10996 = !DILocalVariable(name: "key", scope: !10994, file: !6946, line: 44, type: !32)
!10997 = !DILocalVariable(name: "tmp", scope: !10994, file: !6946, line: 53, type: !32)
!10998 = distinct !DILocation(line: 564, column: 10, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10989, file: !1594, line: 563, column: 49)
!11000 = !{i64 1699310}
!11001 = !DILocation(line: 0, scope: !10994, inlinedAt: !10998)
!11002 = !DILocation(line: 565, column: 42, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10999, file: !1594, line: 565, column: 8)
!11004 = !DILocation(line: 565, column: 8, scope: !11003)
!11005 = !DILocation(line: 565, column: 8, scope: !10999)
!11006 = !DILocalVariable(name: "key", arg: 1, scope: !11007, file: !6946, line: 84, type: !32)
!11007 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6946, file: !6946, line: 84, type: !6957, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11008)
!11008 = !{!11006}
!11009 = !DILocation(line: 0, scope: !11007, inlinedAt: !11010)
!11010 = distinct !DILocation(line: 568, column: 4, scope: !10999)
!11011 = !DILocation(line: 95, column: 2, scope: !11007, inlinedAt: !11010)
!11012 = !{i64 1700127}
!11013 = !DILocation(line: 569, column: 3, scope: !10999)
!11014 = distinct !{!11014, !10987, !11015}
!11015 = !DILocation(line: 570, column: 2, scope: !10979)
!11016 = !DILocation(line: 592, column: 33, scope: !10979)
!11017 = !DILocation(line: 592, column: 2, scope: !10979)
!11018 = !DILocation(line: 0, scope: !11007, inlinedAt: !11019)
!11019 = distinct !DILocation(line: 593, column: 2, scope: !10979)
!11020 = !DILocation(line: 95, column: 2, scope: !11007, inlinedAt: !11019)
!11021 = !DILocation(line: 594, column: 1, scope: !10979)
!11022 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1594, file: !1594, line: 596, type: !1521, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11023)
!11023 = !{!11024, !11025, !11026}
!11024 = !DILocalVariable(name: "dev", arg: 1, scope: !11022, file: !1594, line: 596, type: !1500)
!11025 = !DILocalVariable(name: "config", scope: !11022, file: !1594, line: 598, type: !10959)
!11026 = !DILocalVariable(name: "err", scope: !11022, file: !1594, line: 599, type: !108)
!11027 = !DILocation(line: 0, scope: !11022)
!11028 = !DILocation(line: 598, column: 48, scope: !11022)
!11029 = !DILocation(line: 606, column: 40, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11022, file: !1594, line: 606, column: 6)
!11031 = !DILocation(line: 606, column: 6, scope: !11030)
!11032 = !DILocation(line: 606, column: 6, scope: !11022)
!11033 = !DILocation(line: 610, column: 39, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11022, file: !1594, line: 610, column: 6)
!11035 = !DILocation(line: 610, column: 6, scope: !11034)
!11036 = !DILocation(line: 610, column: 6, scope: !11022)
!11037 = !DILocation(line: 614, column: 39, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11022, file: !1594, line: 614, column: 6)
!11039 = !DILocation(line: 614, column: 6, scope: !11038)
!11040 = !DILocation(line: 614, column: 6, scope: !11022)
!11041 = !DILocation(line: 619, column: 40, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11022, file: !1594, line: 619, column: 6)
!11043 = !DILocation(line: 619, column: 6, scope: !11042)
!11044 = !DILocation(line: 619, column: 6, scope: !11022)
!11045 = !DILocation(line: 623, column: 10, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11022, file: !1594, line: 623, column: 6)
!11047 = !DILocation(line: 623, column: 6, scope: !11022)
!11048 = !DILocation(line: 624, column: 34, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11046, file: !1594, line: 623, column: 24)
!11050 = !DILocation(line: 624, column: 3, scope: !11049)
!11051 = !DILocation(line: 625, column: 2, scope: !11049)
!11052 = !DILocation(line: 632, column: 10, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11022, file: !1594, line: 632, column: 6)
!11054 = !DILocation(line: 632, column: 6, scope: !11022)
!11055 = !DILocation(line: 633, column: 34, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11053, file: !1594, line: 632, column: 32)
!11057 = !DILocation(line: 633, column: 3, scope: !11056)
!11058 = !DILocation(line: 634, column: 2, scope: !11056)
!11059 = !DILocation(line: 636, column: 10, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11022, file: !1594, line: 636, column: 6)
!11061 = !DILocation(line: 636, column: 6, scope: !11022)
!11062 = !DILocation(line: 637, column: 33, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11060, file: !1594, line: 636, column: 31)
!11064 = !DILocation(line: 637, column: 3, scope: !11063)
!11065 = !DILocation(line: 638, column: 2, scope: !11063)
!11066 = !DILocation(line: 640, column: 10, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11022, file: !1594, line: 640, column: 6)
!11068 = !DILocation(line: 640, column: 6, scope: !11022)
!11069 = !DILocation(line: 641, column: 33, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11067, file: !1594, line: 640, column: 32)
!11071 = !DILocation(line: 641, column: 3, scope: !11070)
!11072 = !DILocation(line: 642, column: 2, scope: !11070)
!11073 = !DILocation(line: 646, column: 32, scope: !11022)
!11074 = !DILocation(line: 646, column: 2, scope: !11022)
!11075 = !DILocation(line: 648, column: 2, scope: !11022)
!11076 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1594, file: !1594, line: 419, type: !1525, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11077)
!11077 = !{!11078, !11079, !11080, !11081, !11083, !11084, !11085, !11086}
!11078 = !DILocalVariable(name: "dev", arg: 1, scope: !11076, file: !1594, line: 419, type: !1500)
!11079 = !DILocalVariable(name: "cfg", arg: 2, scope: !11076, file: !1594, line: 420, type: !1527)
!11080 = !DILocalVariable(name: "config", scope: !11076, file: !1594, line: 422, type: !10959)
!11081 = !DILocalVariable(name: "data", scope: !11076, file: !1594, line: 423, type: !11082)
!11082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!11083 = !DILocalVariable(name: "parity", scope: !11076, file: !1594, line: 424, type: !7524)
!11084 = !DILocalVariable(name: "stopbits", scope: !11076, file: !1594, line: 425, type: !7524)
!11085 = !DILocalVariable(name: "databits", scope: !11076, file: !1594, line: 426, type: !7524)
!11086 = !DILocalVariable(name: "flowctrl", scope: !11076, file: !1594, line: 428, type: !7524)
!11087 = !DILocation(line: 0, scope: !11076)
!11088 = !DILocation(line: 422, column: 48, scope: !11076)
!11089 = !DILocation(line: 423, column: 38, scope: !11076)
!11090 = !DILocation(line: 424, column: 56, scope: !11076)
!11091 = !DILocation(line: 424, column: 51, scope: !11076)
!11092 = !DILocation(line: 424, column: 26, scope: !11076)
!11093 = !DILocation(line: 425, column: 60, scope: !11076)
!11094 = !DILocation(line: 425, column: 55, scope: !11076)
!11095 = !DILocation(line: 425, column: 28, scope: !11076)
!11096 = !DILocation(line: 426, column: 60, scope: !11076)
!11097 = !DILocation(line: 426, column: 55, scope: !11076)
!11098 = !DILocation(line: 426, column: 28, scope: !11076)
!11099 = !DILocation(line: 428, column: 58, scope: !11076)
!11100 = !DILocation(line: 428, column: 53, scope: !11076)
!11101 = !DILocation(line: 428, column: 28, scope: !11076)
!11102 = !DILocation(line: 431, column: 44, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11076, file: !1594, line: 431, column: 6)
!11104 = !DILocation(line: 438, column: 22, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11076, file: !1594, line: 437, column: 6)
!11106 = !DILocation(line: 437, column: 6, scope: !11076)
!11107 = !DILocation(line: 448, column: 6, scope: !11076)
!11108 = !DILocation(line: 465, column: 47, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11076, file: !1594, line: 465, column: 6)
!11110 = !DILocation(line: 475, column: 21, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11076, file: !1594, line: 475, column: 6)
!11112 = !DILocation(line: 475, column: 6, scope: !11076)
!11113 = !DILocation(line: 476, column: 8, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11115, file: !1594, line: 476, column: 7)
!11115 = distinct !DILexicalBlock(scope: !11111, file: !1594, line: 475, column: 49)
!11116 = !DILocation(line: 477, column: 34, scope: !11114)
!11117 = !DILocation(line: 476, column: 7, scope: !11115)
!11118 = !DILocation(line: 482, column: 27, scope: !11076)
!11119 = !DILocation(line: 482, column: 2, scope: !11076)
!11120 = !DILocation(line: 484, column: 16, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11076, file: !1594, line: 484, column: 6)
!11122 = !DILocation(line: 484, column: 13, scope: !11121)
!11123 = !DILocation(line: 484, column: 6, scope: !11076)
!11124 = !DILocation(line: 485, column: 3, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11121, file: !1594, line: 484, column: 44)
!11126 = !DILocation(line: 486, column: 2, scope: !11125)
!11127 = !DILocation(line: 488, column: 18, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11076, file: !1594, line: 488, column: 6)
!11129 = !DILocation(line: 488, column: 15, scope: !11128)
!11130 = !DILocation(line: 488, column: 6, scope: !11076)
!11131 = !DILocation(line: 489, column: 3, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11128, file: !1594, line: 488, column: 48)
!11133 = !DILocation(line: 490, column: 2, scope: !11132)
!11134 = !DILocation(line: 492, column: 18, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11076, file: !1594, line: 492, column: 6)
!11136 = !DILocation(line: 492, column: 15, scope: !11135)
!11137 = !DILocation(line: 492, column: 6, scope: !11076)
!11138 = !DILocation(line: 493, column: 3, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11135, file: !1594, line: 492, column: 48)
!11140 = !DILocation(line: 494, column: 2, scope: !11139)
!11141 = !DILocation(line: 496, column: 18, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11076, file: !1594, line: 496, column: 6)
!11143 = !DILocation(line: 496, column: 15, scope: !11142)
!11144 = !DILocation(line: 496, column: 6, scope: !11076)
!11145 = !DILocation(line: 497, column: 3, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11142, file: !1594, line: 496, column: 46)
!11147 = !DILocation(line: 498, column: 2, scope: !11146)
!11148 = !DILocation(line: 500, column: 11, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11076, file: !1594, line: 500, column: 6)
!11150 = !DILocation(line: 500, column: 29, scope: !11149)
!11151 = !DILocation(line: 500, column: 20, scope: !11149)
!11152 = !DILocation(line: 500, column: 6, scope: !11076)
!11153 = !DILocation(line: 501, column: 3, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11149, file: !1594, line: 500, column: 40)
!11155 = !DILocation(line: 502, column: 26, scope: !11154)
!11156 = !DILocation(line: 502, column: 19, scope: !11154)
!11157 = !DILocation(line: 503, column: 2, scope: !11154)
!11158 = !DILocation(line: 505, column: 26, scope: !11076)
!11159 = !DILocation(line: 505, column: 2, scope: !11076)
!11160 = !DILocation(line: 506, column: 2, scope: !11076)
!11161 = !DILocation(line: 507, column: 1, scope: !11076)
!11162 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1594, file: !1594, line: 509, type: !1538, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11163)
!11163 = !{!11164, !11165, !11166}
!11164 = !DILocalVariable(name: "dev", arg: 1, scope: !11162, file: !1594, line: 509, type: !1500)
!11165 = !DILocalVariable(name: "cfg", arg: 2, scope: !11162, file: !1594, line: 510, type: !1540)
!11166 = !DILocalVariable(name: "data", scope: !11162, file: !1594, line: 512, type: !11082)
!11167 = !DILocation(line: 0, scope: !11162)
!11168 = !DILocation(line: 512, column: 38, scope: !11162)
!11169 = !DILocation(line: 514, column: 24, scope: !11162)
!11170 = !DILocation(line: 514, column: 7, scope: !11162)
!11171 = !DILocation(line: 514, column: 16, scope: !11162)
!11172 = !DILocation(line: 515, column: 41, scope: !11162)
!11173 = !{i32 0, i32 1537}
!11174 = !DILocation(line: 515, column: 16, scope: !11162)
!11175 = !DILocation(line: 515, column: 7, scope: !11162)
!11176 = !DILocation(line: 515, column: 14, scope: !11162)
!11177 = !DILocation(line: 517, column: 3, scope: !11162)
!11178 = !{i32 0, i32 12289}
!11179 = !DILocation(line: 516, column: 19, scope: !11162)
!11180 = !DILocation(line: 516, column: 7, scope: !11162)
!11181 = !DILocation(line: 516, column: 17, scope: !11162)
!11182 = !DILocation(line: 519, column: 3, scope: !11162)
!11183 = !DILocation(line: 519, column: 33, scope: !11162)
!11184 = !DILocation(line: 518, column: 19, scope: !11162)
!11185 = !DILocation(line: 518, column: 7, scope: !11162)
!11186 = !DILocation(line: 518, column: 17, scope: !11162)
!11187 = !DILocation(line: 521, column: 3, scope: !11162)
!11188 = !{i32 0, i32 769}
!11189 = !DILocation(line: 520, column: 19, scope: !11162)
!11190 = !DILocation(line: 520, column: 7, scope: !11162)
!11191 = !DILocation(line: 520, column: 17, scope: !11162)
!11192 = !DILocation(line: 522, column: 2, scope: !11162)
!11193 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1594, file: !1594, line: 205, type: !11194, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11196)
!11194 = !DISubroutineType(types: !11195)
!11195 = !{!108, !1500}
!11196 = !{!11197, !11198}
!11197 = !DILocalVariable(name: "dev", arg: 1, scope: !11193, file: !1594, line: 205, type: !1500)
!11198 = !DILocalVariable(name: "config", scope: !11193, file: !1594, line: 207, type: !10959)
!11199 = !DILocation(line: 0, scope: !11193)
!11200 = !DILocation(line: 207, column: 48, scope: !11193)
!11201 = !DILocation(line: 209, column: 36, scope: !11193)
!11202 = !DILocation(line: 209, column: 9, scope: !11193)
!11203 = !DILocation(line: 209, column: 2, scope: !11193)
!11204 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1594, file: !1594, line: 270, type: !11205, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11207)
!11205 = !DISubroutineType(types: !11206)
!11206 = !{!1466, !108}
!11207 = !{!11208}
!11208 = !DILocalVariable(name: "parity", arg: 1, scope: !11204, file: !1594, line: 270, type: !108)
!11209 = !DILocation(line: 0, scope: !11204)
!11210 = !DILocation(line: 272, column: 2, scope: !11204)
!11211 = !DILocation(line: 281, column: 1, scope: !11204)
!11212 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1594, file: !1594, line: 220, type: !11194, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11213)
!11213 = !{!11214, !11215}
!11214 = !DILocalVariable(name: "dev", arg: 1, scope: !11212, file: !1594, line: 220, type: !1500)
!11215 = !DILocalVariable(name: "config", scope: !11212, file: !1594, line: 222, type: !10959)
!11216 = !DILocation(line: 0, scope: !11212)
!11217 = !DILocation(line: 222, column: 48, scope: !11212)
!11218 = !DILocation(line: 224, column: 44, scope: !11212)
!11219 = !DILocation(line: 224, column: 9, scope: !11212)
!11220 = !DILocation(line: 224, column: 2, scope: !11212)
!11221 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1594, file: !1594, line: 304, type: !11222, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11224)
!11222 = !DISubroutineType(types: !11223)
!11223 = !{!1480, !108}
!11224 = !{!11225}
!11225 = !DILocalVariable(name: "sb", arg: 1, scope: !11221, file: !1594, line: 304, type: !108)
!11226 = !DILocation(line: 0, scope: !11221)
!11227 = !DILocation(line: 306, column: 2, scope: !11221)
!11228 = !DILocation(line: 0, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11221, file: !1594, line: 306, column: 14)
!11230 = !DILocation(line: 323, column: 1, scope: !11221)
!11231 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1594, file: !1594, line: 235, type: !11194, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11232)
!11232 = !{!11233, !11234}
!11233 = !DILocalVariable(name: "dev", arg: 1, scope: !11231, file: !1594, line: 235, type: !1500)
!11234 = !DILocalVariable(name: "config", scope: !11231, file: !1594, line: 237, type: !10959)
!11235 = !DILocation(line: 0, scope: !11231)
!11236 = !DILocation(line: 237, column: 48, scope: !11231)
!11237 = !DILocation(line: 239, column: 39, scope: !11231)
!11238 = !DILocation(line: 239, column: 9, scope: !11231)
!11239 = !DILocation(line: 239, column: 2, scope: !11231)
!11240 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1594, file: !1594, line: 355, type: !11241, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11243)
!11241 = !DISubroutineType(types: !11242)
!11242 = !{!1473, !108, !108}
!11243 = !{!11244, !11245}
!11244 = !DILocalVariable(name: "db", arg: 1, scope: !11240, file: !1594, line: 355, type: !108)
!11245 = !DILocalVariable(name: "p", arg: 2, scope: !11240, file: !1594, line: 356, type: !108)
!11246 = !DILocation(line: 0, scope: !11240)
!11247 = !DILocation(line: 358, column: 2, scope: !11240)
!11248 = !DILocation(line: 384, column: 1, scope: !11240)
!11249 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1594, file: !1594, line: 250, type: !11194, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11250)
!11250 = !{!11251, !11252}
!11251 = !DILocalVariable(name: "dev", arg: 1, scope: !11249, file: !1594, line: 250, type: !1500)
!11252 = !DILocalVariable(name: "config", scope: !11249, file: !1594, line: 252, type: !10959)
!11253 = !DILocation(line: 0, scope: !11249)
!11254 = !DILocation(line: 252, column: 48, scope: !11249)
!11255 = !DILocation(line: 254, column: 40, scope: !11249)
!11256 = !DILocation(line: 254, column: 9, scope: !11249)
!11257 = !DILocation(line: 254, column: 2, scope: !11249)
!11258 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1594, file: !1594, line: 409, type: !11259, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11261)
!11259 = !DISubroutineType(types: !11260)
!11260 = !{!1486, !108}
!11261 = !{!11262}
!11262 = !DILocalVariable(name: "fc", arg: 1, scope: !11258, file: !1594, line: 409, type: !108)
!11263 = !DILocation(line: 0, scope: !11258)
!11264 = !DILocation(line: 411, column: 9, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11258, file: !1594, line: 411, column: 6)
!11266 = !DILocation(line: 416, column: 1, scope: !11258)
!11267 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11268, file: !11268, line: 966, type: !11269, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11271)
!11268 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11269 = !DISubroutineType(types: !11270)
!11270 = !{!108, !1541}
!11271 = !{!11272}
!11272 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11267, file: !11268, line: 966, type: !1541)
!11273 = !DILocation(line: 0, scope: !11267)
!11274 = !DILocation(line: 968, column: 21, scope: !11267)
!11275 = !DILocation(line: 968, column: 3, scope: !11267)
!11276 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11268, file: !11268, line: 600, type: !11269, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11277)
!11277 = !{!11278}
!11278 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11276, file: !11268, line: 600, type: !1541)
!11279 = !DILocation(line: 0, scope: !11276)
!11280 = !DILocation(line: 602, column: 21, scope: !11276)
!11281 = !DILocation(line: 602, column: 3, scope: !11276)
!11282 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11268, file: !11268, line: 819, type: !11269, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11283)
!11283 = !{!11284}
!11284 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11282, file: !11268, line: 819, type: !1541)
!11285 = !DILocation(line: 0, scope: !11282)
!11286 = !DILocation(line: 821, column: 21, scope: !11282)
!11287 = !DILocation(line: 821, column: 3, scope: !11282)
!11288 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11268, file: !11268, line: 546, type: !11269, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11289)
!11289 = !{!11290}
!11290 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11288, file: !11268, line: 546, type: !1541)
!11291 = !DILocation(line: 0, scope: !11288)
!11292 = !DILocation(line: 548, column: 21, scope: !11288)
!11293 = !DILocation(line: 548, column: 3, scope: !11288)
!11294 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1594, file: !1594, line: 257, type: !11295, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11297)
!11295 = !DISubroutineType(types: !11296)
!11296 = !{!108, !1466}
!11297 = !{!11298}
!11298 = !DILocalVariable(name: "parity", arg: 1, scope: !11294, file: !1594, line: 257, type: !1466)
!11299 = !DILocation(line: 0, scope: !11294)
!11300 = !DILocation(line: 259, column: 2, scope: !11294)
!11301 = !DILocation(line: 268, column: 1, scope: !11294)
!11302 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1594, file: !1594, line: 283, type: !11303, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11305)
!11303 = !DISubroutineType(types: !11304)
!11304 = !{!108, !1480}
!11305 = !{!11306}
!11306 = !DILocalVariable(name: "sb", arg: 1, scope: !11302, file: !1594, line: 283, type: !1480)
!11307 = !DILocation(line: 0, scope: !11302)
!11308 = !DILocation(line: 285, column: 2, scope: !11302)
!11309 = !DILocation(line: 0, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11302, file: !1594, line: 285, column: 14)
!11311 = !DILocation(line: 302, column: 1, scope: !11302)
!11312 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1594, file: !1594, line: 325, type: !11313, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11315)
!11313 = !DISubroutineType(types: !11314)
!11314 = !{!108, !1473, !1466}
!11315 = !{!11316, !11317}
!11316 = !DILocalVariable(name: "db", arg: 1, scope: !11312, file: !1594, line: 325, type: !1473)
!11317 = !DILocalVariable(name: "p", arg: 2, scope: !11312, file: !1594, line: 326, type: !1466)
!11318 = !DILocation(line: 0, scope: !11312)
!11319 = !DILocation(line: 328, column: 2, scope: !11312)
!11320 = !DILocation(line: 353, column: 1, scope: !11312)
!11321 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1594, file: !1594, line: 393, type: !11322, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11324)
!11322 = !DISubroutineType(types: !11323)
!11323 = !{!108, !1486}
!11324 = !{!11325}
!11325 = !DILocalVariable(name: "fc", arg: 1, scope: !11321, file: !1594, line: 393, type: !1486)
!11326 = !DILocation(line: 0, scope: !11321)
!11327 = !DILocation(line: 395, column: 9, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11321, file: !1594, line: 395, column: 6)
!11329 = !DILocation(line: 400, column: 1, scope: !11321)
!11330 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11268, file: !11268, line: 423, type: !11331, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11333)
!11331 = !DISubroutineType(types: !11332)
!11332 = !{null, !1541}
!11333 = !{!11334}
!11334 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11330, file: !11268, line: 423, type: !1541)
!11335 = !DILocation(line: 0, scope: !11330)
!11336 = !DILocation(line: 425, column: 3, scope: !11330)
!11337 = !DILocation(line: 426, column: 1, scope: !11330)
!11338 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1594, file: !1594, line: 197, type: !11339, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11341)
!11339 = !DISubroutineType(types: !11340)
!11340 = !{null, !1500, !108}
!11341 = !{!11342, !11343, !11344}
!11342 = !DILocalVariable(name: "dev", arg: 1, scope: !11338, file: !1594, line: 197, type: !1500)
!11343 = !DILocalVariable(name: "parity", arg: 2, scope: !11338, file: !1594, line: 198, type: !108)
!11344 = !DILocalVariable(name: "config", scope: !11338, file: !1594, line: 200, type: !10959)
!11345 = !DILocation(line: 0, scope: !11338)
!11346 = !DILocation(line: 200, column: 48, scope: !11338)
!11347 = !DILocation(line: 202, column: 29, scope: !11338)
!11348 = !DILocation(line: 202, column: 2, scope: !11338)
!11349 = !DILocation(line: 203, column: 1, scope: !11338)
!11350 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1594, file: !1594, line: 212, type: !11339, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11351)
!11351 = !{!11352, !11353, !11354}
!11352 = !DILocalVariable(name: "dev", arg: 1, scope: !11350, file: !1594, line: 212, type: !1500)
!11353 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11350, file: !1594, line: 213, type: !108)
!11354 = !DILocalVariable(name: "config", scope: !11350, file: !1594, line: 215, type: !10959)
!11355 = !DILocation(line: 0, scope: !11350)
!11356 = !DILocation(line: 215, column: 48, scope: !11350)
!11357 = !DILocation(line: 217, column: 37, scope: !11350)
!11358 = !DILocation(line: 217, column: 2, scope: !11350)
!11359 = !DILocation(line: 218, column: 1, scope: !11350)
!11360 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1594, file: !1594, line: 227, type: !11339, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11361)
!11361 = !{!11362, !11363, !11364}
!11362 = !DILocalVariable(name: "dev", arg: 1, scope: !11360, file: !1594, line: 227, type: !1500)
!11363 = !DILocalVariable(name: "databits", arg: 2, scope: !11360, file: !1594, line: 228, type: !108)
!11364 = !DILocalVariable(name: "config", scope: !11360, file: !1594, line: 230, type: !10959)
!11365 = !DILocation(line: 0, scope: !11360)
!11366 = !DILocation(line: 230, column: 48, scope: !11360)
!11367 = !DILocation(line: 232, column: 32, scope: !11360)
!11368 = !DILocation(line: 232, column: 2, scope: !11360)
!11369 = !DILocation(line: 233, column: 1, scope: !11360)
!11370 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1594, file: !1594, line: 242, type: !11339, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11371)
!11371 = !{!11372, !11373, !11374}
!11372 = !DILocalVariable(name: "dev", arg: 1, scope: !11370, file: !1594, line: 242, type: !1500)
!11373 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11370, file: !1594, line: 243, type: !108)
!11374 = !DILocalVariable(name: "config", scope: !11370, file: !1594, line: 245, type: !10959)
!11375 = !DILocation(line: 0, scope: !11370)
!11376 = !DILocation(line: 245, column: 48, scope: !11370)
!11377 = !DILocation(line: 247, column: 33, scope: !11370)
!11378 = !DILocation(line: 247, column: 2, scope: !11370)
!11379 = !DILocation(line: 248, column: 1, scope: !11370)
!11380 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1594, file: !1594, line: 107, type: !11339, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11381)
!11381 = !{!11382, !11383, !11384, !11385, !11386}
!11382 = !DILocalVariable(name: "dev", arg: 1, scope: !11380, file: !1594, line: 107, type: !1500)
!11383 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11380, file: !1594, line: 107, type: !108)
!11384 = !DILocalVariable(name: "config", scope: !11380, file: !1594, line: 109, type: !10959)
!11385 = !DILocalVariable(name: "data", scope: !11380, file: !1594, line: 110, type: !11082)
!11386 = !DILocalVariable(name: "clock_rate", scope: !11380, file: !1594, line: 112, type: !108)
!11387 = !DILocation(line: 0, scope: !11380)
!11388 = !DILocation(line: 109, column: 48, scope: !11380)
!11389 = !DILocation(line: 110, column: 38, scope: !11380)
!11390 = !DILocation(line: 112, column: 2, scope: !11380)
!11391 = !DILocation(line: 123, column: 36, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11393, file: !1594, line: 123, column: 7)
!11393 = distinct !DILexicalBlock(scope: !11394, file: !1594, line: 122, column: 9)
!11394 = distinct !DILexicalBlock(scope: !11380, file: !1594, line: 115, column: 6)
!11395 = !DILocation(line: 124, column: 42, scope: !11392)
!11396 = !DILocation(line: 123, column: 7, scope: !11392)
!11397 = !DILocation(line: 125, column: 22, scope: !11392)
!11398 = !DILocation(line: 123, column: 7, scope: !11393)
!11399 = !DILocation(line: 126, column: 4, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !1594, line: 126, column: 4)
!11401 = distinct !DILexicalBlock(scope: !11402, file: !1594, line: 126, column: 4)
!11402 = distinct !DILexicalBlock(scope: !11403, file: !1594, line: 126, column: 4)
!11403 = distinct !DILexicalBlock(scope: !11404, file: !1594, line: 126, column: 4)
!11404 = distinct !DILexicalBlock(scope: !11392, file: !1594, line: 125, column: 27)
!11405 = !DILocation(line: 127, column: 4, scope: !11404)
!11406 = !DILocation(line: 176, column: 36, scope: !11380)
!11407 = !DILocation(line: 176, column: 3, scope: !11380)
!11408 = !DILocation(line: 179, column: 32, scope: !11380)
!11409 = !DILocation(line: 180, column: 10, scope: !11380)
!11410 = !DILocation(line: 179, column: 3, scope: !11380)
!11411 = !DILocation(line: 195, column: 1, scope: !11380)
!11412 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11268, file: !11268, line: 409, type: !11331, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11413)
!11413 = !{!11414}
!11414 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11412, file: !11268, line: 409, type: !1541)
!11415 = !DILocation(line: 0, scope: !11412)
!11416 = !DILocation(line: 411, column: 3, scope: !11412)
!11417 = !DILocation(line: 412, column: 1, scope: !11412)
!11418 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1014, file: !1014, line: 216, type: !1574, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11419)
!11419 = !{!11420, !11421, !11422, !11423}
!11420 = !DILocalVariable(name: "dev", arg: 1, scope: !11418, file: !1014, line: 216, type: !1500)
!11421 = !DILocalVariable(name: "sys", arg: 2, scope: !11418, file: !1014, line: 217, type: !1089)
!11422 = !DILocalVariable(name: "rate", arg: 3, scope: !11418, file: !1014, line: 218, type: !1045)
!11423 = !DILocalVariable(name: "api", scope: !11418, file: !1014, line: 220, type: !1552)
!11424 = !DILocation(line: 0, scope: !11418)
!11425 = !DILocation(line: 221, column: 49, scope: !11418)
!11426 = !DILocation(line: 223, column: 11, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11418, file: !1014, line: 223, column: 6)
!11428 = !DILocation(line: 223, column: 20, scope: !11427)
!11429 = !DILocation(line: 223, column: 6, scope: !11418)
!11430 = !DILocation(line: 227, column: 9, scope: !11418)
!11431 = !DILocation(line: 227, column: 2, scope: !11418)
!11432 = !DILocation(line: 228, column: 1, scope: !11418)
!11433 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3555, file: !3555, line: 175, type: !3556, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11434)
!11434 = !{!11435}
!11435 = !DILocalVariable(name: "level", arg: 1, scope: !11433, file: !3555, line: 175, type: !103)
!11436 = !DILocation(line: 0, scope: !11433)
!11437 = !DILocation(line: 177, column: 2, scope: !11433)
!11438 = !DILocation(line: 189, column: 1, scope: !11433)
!11439 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11268, file: !11268, line: 614, type: !11440, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11442)
!11440 = !DISubroutineType(types: !11441)
!11441 = !{null, !1541, !108}
!11442 = !{!11443, !11444}
!11443 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11439, file: !11268, line: 614, type: !1541)
!11444 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11439, file: !11268, line: 614, type: !108)
!11445 = !DILocation(line: 0, scope: !11439)
!11446 = !DILocation(line: 616, column: 3, scope: !11439)
!11447 = !DILocation(line: 617, column: 1, scope: !11439)
!11448 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11268, file: !11268, line: 1019, type: !11449, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11451)
!11449 = !DISubroutineType(types: !11450)
!11450 = !{null, !1541, !108, !108, !108}
!11451 = !{!11452, !11453, !11454, !11455}
!11452 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11448, file: !11268, line: 1019, type: !1541)
!11453 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11448, file: !11268, line: 1019, type: !108)
!11454 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11448, file: !11268, line: 1019, type: !108)
!11455 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11448, file: !11268, line: 1020, type: !108)
!11456 = !DILocation(line: 0, scope: !11448)
!11457 = !DILocation(line: 1028, column: 30, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11459, file: !11268, line: 1027, column: 3)
!11459 = distinct !DILexicalBlock(scope: !11448, file: !11268, line: 1022, column: 7)
!11460 = !DILocation(line: 1028, column: 19, scope: !11458)
!11461 = !DILocation(line: 1028, column: 13, scope: !11458)
!11462 = !DILocation(line: 1028, column: 17, scope: !11458)
!11463 = !DILocation(line: 1030, column: 1, scope: !11448)
!11464 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11268, file: !11268, line: 948, type: !11440, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11465)
!11465 = !{!11466, !11467}
!11466 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11464, file: !11268, line: 948, type: !1541)
!11467 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11464, file: !11268, line: 948, type: !108)
!11468 = !DILocation(line: 0, scope: !11464)
!11469 = !DILocation(line: 950, column: 3, scope: !11464)
!11470 = !DILocation(line: 951, column: 1, scope: !11464)
!11471 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11268, file: !11268, line: 587, type: !11440, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11472)
!11472 = !{!11473, !11474}
!11473 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11471, file: !11268, line: 587, type: !1541)
!11474 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11471, file: !11268, line: 587, type: !108)
!11475 = !DILocation(line: 0, scope: !11471)
!11476 = !DILocation(line: 589, column: 3, scope: !11471)
!11477 = !DILocation(line: 590, column: 1, scope: !11471)
!11478 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11268, file: !11268, line: 804, type: !11440, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11479)
!11479 = !{!11480, !11481}
!11480 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11478, file: !11268, line: 804, type: !1541)
!11481 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11478, file: !11268, line: 804, type: !108)
!11482 = !DILocation(line: 0, scope: !11478)
!11483 = !DILocation(line: 806, column: 3, scope: !11478)
!11484 = !DILocation(line: 807, column: 1, scope: !11478)
!11485 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11268, file: !11268, line: 531, type: !11440, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11486)
!11486 = !{!11487, !11488}
!11487 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11485, file: !11268, line: 531, type: !1541)
!11488 = !DILocalVariable(name: "Parity", arg: 2, scope: !11485, file: !11268, line: 531, type: !108)
!11489 = !DILocation(line: 0, scope: !11485)
!11490 = !DILocation(line: 533, column: 3, scope: !11485)
!11491 = !DILocation(line: 534, column: 1, scope: !11485)
!11492 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11268, file: !11268, line: 1769, type: !11269, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11493)
!11493 = !{!11494}
!11494 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11492, file: !11268, line: 1769, type: !1541)
!11495 = !DILocation(line: 0, scope: !11492)
!11496 = !DILocation(line: 1771, column: 11, scope: !11492)
!11497 = !DILocation(line: 1771, column: 46, scope: !11492)
!11498 = !DILocation(line: 1771, column: 3, scope: !11492)
!11499 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11268, file: !11268, line: 1736, type: !11269, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11500)
!11500 = !{!11501}
!11501 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11499, file: !11268, line: 1736, type: !1541)
!11502 = !DILocation(line: 0, scope: !11499)
!11503 = !DILocation(line: 1738, column: 11, scope: !11499)
!11504 = !DILocation(line: 1738, column: 3, scope: !11499)
!11505 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11268, file: !11268, line: 1747, type: !11269, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11506)
!11506 = !{!11507}
!11507 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11505, file: !11268, line: 1747, type: !1541)
!11508 = !DILocation(line: 0, scope: !11505)
!11509 = !DILocation(line: 1749, column: 11, scope: !11505)
!11510 = !DILocation(line: 1749, column: 45, scope: !11505)
!11511 = !DILocation(line: 1749, column: 3, scope: !11505)
!11512 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11268, file: !11268, line: 1826, type: !11269, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11513)
!11513 = !{!11514}
!11514 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11512, file: !11268, line: 1826, type: !1541)
!11515 = !DILocation(line: 0, scope: !11512)
!11516 = !DILocation(line: 1828, column: 11, scope: !11512)
!11517 = !DILocation(line: 1828, column: 46, scope: !11512)
!11518 = !DILocation(line: 1828, column: 3, scope: !11512)
!11519 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11268, file: !11268, line: 1991, type: !11331, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11520)
!11520 = !{!11521}
!11521 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11519, file: !11268, line: 1991, type: !1541)
!11522 = !DILocation(line: 0, scope: !11519)
!11523 = !DILocation(line: 1993, column: 3, scope: !11519)
!11524 = !DILocation(line: 1994, column: 1, scope: !11519)
!11525 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11268, file: !11268, line: 1933, type: !11331, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11526)
!11526 = !{!11527, !11528}
!11527 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11525, file: !11268, line: 1933, type: !1541)
!11528 = !DILocalVariable(name: "tmpreg", scope: !11525, file: !11268, line: 1935, type: !409)
!11529 = !DILocation(line: 0, scope: !11525)
!11530 = !DILocation(line: 1935, column: 3, scope: !11525)
!11531 = !DILocation(line: 1935, column: 17, scope: !11525)
!11532 = !DILocation(line: 1936, column: 20, scope: !11525)
!11533 = !DILocation(line: 1936, column: 10, scope: !11525)
!11534 = !DILocation(line: 1937, column: 10, scope: !11525)
!11535 = !DILocation(line: 1938, column: 20, scope: !11525)
!11536 = !DILocation(line: 1938, column: 10, scope: !11525)
!11537 = !DILocation(line: 1939, column: 10, scope: !11525)
!11538 = !DILocation(line: 1940, column: 1, scope: !11525)
!11539 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11268, file: !11268, line: 1876, type: !11331, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11540)
!11540 = !{!11541, !11542}
!11541 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11539, file: !11268, line: 1876, type: !1541)
!11542 = !DILocalVariable(name: "tmpreg", scope: !11539, file: !11268, line: 1878, type: !409)
!11543 = !DILocation(line: 0, scope: !11539)
!11544 = !DILocation(line: 1878, column: 3, scope: !11539)
!11545 = !DILocation(line: 1878, column: 17, scope: !11539)
!11546 = !DILocation(line: 1879, column: 20, scope: !11539)
!11547 = !DILocation(line: 1879, column: 10, scope: !11539)
!11548 = !DILocation(line: 1880, column: 10, scope: !11539)
!11549 = !DILocation(line: 1881, column: 20, scope: !11539)
!11550 = !DILocation(line: 1881, column: 10, scope: !11539)
!11551 = !DILocation(line: 1882, column: 10, scope: !11539)
!11552 = !DILocation(line: 1883, column: 1, scope: !11539)
!11553 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11268, file: !11268, line: 1895, type: !11331, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11554)
!11554 = !{!11555, !11556}
!11555 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11553, file: !11268, line: 1895, type: !1541)
!11556 = !DILocalVariable(name: "tmpreg", scope: !11553, file: !11268, line: 1897, type: !409)
!11557 = !DILocation(line: 0, scope: !11553)
!11558 = !DILocation(line: 1897, column: 3, scope: !11553)
!11559 = !DILocation(line: 1897, column: 17, scope: !11553)
!11560 = !DILocation(line: 1898, column: 20, scope: !11553)
!11561 = !DILocation(line: 1898, column: 10, scope: !11553)
!11562 = !DILocation(line: 1899, column: 10, scope: !11553)
!11563 = !DILocation(line: 1900, column: 20, scope: !11553)
!11564 = !DILocation(line: 1900, column: 10, scope: !11553)
!11565 = !DILocation(line: 1901, column: 10, scope: !11553)
!11566 = !DILocation(line: 1902, column: 1, scope: !11553)
!11567 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11268, file: !11268, line: 1914, type: !11331, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11568)
!11568 = !{!11569, !11570}
!11569 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11567, file: !11268, line: 1914, type: !1541)
!11570 = !DILocalVariable(name: "tmpreg", scope: !11567, file: !11268, line: 1916, type: !409)
!11571 = !DILocation(line: 0, scope: !11567)
!11572 = !DILocation(line: 1916, column: 3, scope: !11567)
!11573 = !DILocation(line: 1916, column: 17, scope: !11567)
!11574 = !DILocation(line: 1917, column: 20, scope: !11567)
!11575 = !DILocation(line: 1917, column: 10, scope: !11567)
!11576 = !DILocation(line: 1918, column: 10, scope: !11567)
!11577 = !DILocation(line: 1919, column: 20, scope: !11567)
!11578 = !DILocation(line: 1919, column: 10, scope: !11567)
!11579 = !DILocation(line: 1920, column: 10, scope: !11567)
!11580 = !DILocation(line: 1921, column: 1, scope: !11567)
!11581 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11268, file: !11268, line: 1813, type: !11269, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11582)
!11582 = !{!11583}
!11583 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11581, file: !11268, line: 1813, type: !1541)
!11584 = !DILocation(line: 0, scope: !11581)
!11585 = !DILocation(line: 1815, column: 11, scope: !11581)
!11586 = !DILocation(line: 1815, column: 46, scope: !11581)
!11587 = !DILocation(line: 1815, column: 3, scope: !11581)
!11588 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11268, file: !11268, line: 2425, type: !11589, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11591)
!11589 = !DISubroutineType(types: !11590)
!11590 = !{null, !1541, !185}
!11591 = !{!11592, !11593}
!11592 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11588, file: !11268, line: 2425, type: !1541)
!11593 = !DILocalVariable(name: "Value", arg: 2, scope: !11588, file: !11268, line: 2425, type: !185)
!11594 = !DILocation(line: 0, scope: !11588)
!11595 = !DILocation(line: 2427, column: 16, scope: !11588)
!11596 = !DILocation(line: 2427, column: 11, scope: !11588)
!11597 = !DILocation(line: 2427, column: 14, scope: !11588)
!11598 = !DILocation(line: 2428, column: 1, scope: !11588)
!11599 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11268, file: !11268, line: 1791, type: !11269, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11600)
!11600 = !{!11601}
!11601 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11599, file: !11268, line: 1791, type: !1541)
!11602 = !DILocation(line: 0, scope: !11599)
!11603 = !DILocation(line: 1793, column: 11, scope: !11599)
!11604 = !DILocation(line: 1793, column: 47, scope: !11599)
!11605 = !DILocation(line: 1793, column: 3, scope: !11599)
!11606 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11268, file: !11268, line: 2402, type: !11607, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11609)
!11607 = !DISubroutineType(types: !11608)
!11608 = !{!185, !1541}
!11609 = !{!11610}
!11610 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11606, file: !11268, line: 2402, type: !1541)
!11611 = !DILocation(line: 0, scope: !11606)
!11612 = !DILocation(line: 2404, column: 20, scope: !11606)
!11613 = !DILocation(line: 2404, column: 10, scope: !11606)
!11614 = !DILocation(line: 2404, column: 3, scope: !11606)
!11615 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1594, file: !1594, line: 1583, type: !1521, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11616)
!11616 = !{!11617, !11618, !11619, !11620, !11621, !11622}
!11617 = !DILocalVariable(name: "dev", arg: 1, scope: !11615, file: !1594, line: 1583, type: !1500)
!11618 = !DILocalVariable(name: "config", scope: !11615, file: !1594, line: 1585, type: !10959)
!11619 = !DILocalVariable(name: "data", scope: !11615, file: !1594, line: 1586, type: !11082)
!11620 = !DILocalVariable(name: "ll_parity", scope: !11615, file: !1594, line: 1587, type: !108)
!11621 = !DILocalVariable(name: "ll_datawidth", scope: !11615, file: !1594, line: 1588, type: !108)
!11622 = !DILocalVariable(name: "err", scope: !11615, file: !1594, line: 1589, type: !103)
!11623 = !DILocation(line: 0, scope: !11615)
!11624 = !DILocation(line: 1585, column: 48, scope: !11615)
!11625 = !DILocation(line: 1586, column: 38, scope: !11615)
!11626 = !DILocation(line: 1591, column: 2, scope: !11615)
!11627 = !DILocation(line: 1593, column: 29, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11615, file: !1594, line: 1593, column: 6)
!11629 = !DILocation(line: 1593, column: 7, scope: !11628)
!11630 = !DILocation(line: 1593, column: 6, scope: !11615)
!11631 = !DILocation(line: 1594, column: 3, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11633, file: !1594, line: 1594, column: 3)
!11633 = distinct !DILexicalBlock(scope: !11634, file: !1594, line: 1594, column: 3)
!11634 = distinct !DILexicalBlock(scope: !11635, file: !1594, line: 1594, column: 3)
!11635 = distinct !DILexicalBlock(scope: !11636, file: !1594, line: 1594, column: 3)
!11636 = distinct !DILexicalBlock(scope: !11628, file: !1594, line: 1593, column: 37)
!11637 = !DILocation(line: 1595, column: 3, scope: !11636)
!11638 = !DILocation(line: 1599, column: 31, scope: !11615)
!11639 = !DILocation(line: 1599, column: 71, scope: !11615)
!11640 = !DILocation(line: 1599, column: 8, scope: !11615)
!11641 = !DILocation(line: 1600, column: 10, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11615, file: !1594, line: 1600, column: 6)
!11643 = !DILocation(line: 1600, column: 6, scope: !11615)
!11644 = !DILocation(line: 1601, column: 3, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11646, file: !1594, line: 1601, column: 3)
!11646 = distinct !DILexicalBlock(scope: !11647, file: !1594, line: 1601, column: 3)
!11647 = distinct !DILexicalBlock(scope: !11648, file: !1594, line: 1601, column: 3)
!11648 = distinct !DILexicalBlock(scope: !11649, file: !1594, line: 1601, column: 3)
!11649 = distinct !DILexicalBlock(scope: !11642, file: !1594, line: 1600, column: 16)
!11650 = !DILocation(line: 1602, column: 3, scope: !11649)
!11651 = !DILocation(line: 1616, column: 36, scope: !11615)
!11652 = !DILocation(line: 1616, column: 8, scope: !11615)
!11653 = !DILocation(line: 1617, column: 10, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11615, file: !1594, line: 1617, column: 6)
!11655 = !DILocation(line: 1617, column: 6, scope: !11615)
!11656 = !DILocation(line: 1621, column: 27, scope: !11615)
!11657 = !DILocation(line: 1621, column: 2, scope: !11615)
!11658 = !DILocation(line: 1624, column: 40, scope: !11615)
!11659 = !DILocation(line: 1624, column: 2, scope: !11615)
!11660 = !DILocation(line: 1630, column: 14, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11615, file: !1594, line: 1630, column: 6)
!11662 = !DILocation(line: 1630, column: 6, scope: !11615)
!11663 = !DILocation(line: 1640, column: 4, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11665, file: !1594, line: 1640, column: 4)
!11665 = distinct !DILexicalBlock(scope: !11666, file: !1594, line: 1640, column: 4)
!11666 = distinct !DILexicalBlock(scope: !11667, file: !1594, line: 1640, column: 4)
!11667 = distinct !DILexicalBlock(scope: !11668, file: !1594, line: 1640, column: 4)
!11668 = distinct !DILexicalBlock(scope: !11669, file: !1594, line: 1639, column: 28)
!11669 = distinct !DILexicalBlock(scope: !11670, file: !1594, line: 1639, column: 7)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !1594, line: 1638, column: 9)
!11671 = distinct !DILexicalBlock(scope: !11661, file: !1594, line: 1634, column: 13)
!11672 = !DILocation(line: 0, scope: !11661)
!11673 = !DILocation(line: 1649, column: 35, scope: !11615)
!11674 = !DILocation(line: 1649, column: 2, scope: !11615)
!11675 = !DILocation(line: 1654, column: 14, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11615, file: !1594, line: 1654, column: 6)
!11677 = !DILocation(line: 1654, column: 6, scope: !11615)
!11678 = !DILocation(line: 1655, column: 3, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11676, file: !1594, line: 1654, column: 31)
!11680 = !DILocation(line: 1656, column: 2, scope: !11679)
!11681 = !DILocation(line: 1659, column: 37, scope: !11615)
!11682 = !DILocation(line: 1659, column: 2, scope: !11615)
!11683 = !DILocation(line: 1662, column: 14, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11615, file: !1594, line: 1662, column: 6)
!11685 = !DILocation(line: 1662, column: 6, scope: !11615)
!11686 = !DILocation(line: 1663, column: 37, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11684, file: !1594, line: 1662, column: 27)
!11688 = !DILocation(line: 1663, column: 3, scope: !11687)
!11689 = !DILocation(line: 1664, column: 2, scope: !11687)
!11690 = !DILocation(line: 1684, column: 26, scope: !11615)
!11691 = !DILocation(line: 1684, column: 2, scope: !11615)
!11692 = !DILocation(line: 1722, column: 2, scope: !11615)
!11693 = !DILocation(line: 1724, column: 1, scope: !11615)
!11694 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1594, file: !1594, line: 651, type: !11695, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11697)
!11695 = !DISubroutineType(types: !11696)
!11696 = !{null, !1500}
!11697 = !{!11698, !11699, !11700}
!11698 = !DILocalVariable(name: "dev", arg: 1, scope: !11694, file: !1594, line: 651, type: !1500)
!11699 = !DILocalVariable(name: "data", scope: !11694, file: !1594, line: 653, type: !11082)
!11700 = !DILocalVariable(name: "clk", scope: !11694, file: !1594, line: 654, type: !11701)
!11701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!11702 = !DILocation(line: 0, scope: !11694)
!11703 = !DILocation(line: 653, column: 38, scope: !11694)
!11704 = !DILocation(line: 656, column: 8, scope: !11694)
!11705 = !DILocation(line: 656, column: 14, scope: !11694)
!11706 = !DILocation(line: 657, column: 1, scope: !11694)
!11707 = distinct !DISubprogram(name: "device_is_ready", scope: !9104, file: !9104, line: 47, type: !11708, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11710)
!11708 = !DISubroutineType(types: !11709)
!11709 = !{!131, !1500}
!11710 = !{!11711}
!11711 = !DILocalVariable(name: "dev", arg: 1, scope: !11707, file: !9104, line: 47, type: !1500)
!11712 = !DILocation(line: 0, scope: !11707)
!11713 = !DILocation(line: 55, column: 2, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11707, file: !9104, line: 55, column: 2)
!11715 = !{i64 2152492787}
!11716 = !DILocation(line: 56, column: 9, scope: !11707)
!11717 = !DILocation(line: 56, column: 2, scope: !11707)
!11718 = distinct !DISubprogram(name: "clock_control_on", scope: !1014, file: !1014, line: 123, type: !1559, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11719)
!11719 = !{!11720, !11721, !11722}
!11720 = !DILocalVariable(name: "dev", arg: 1, scope: !11718, file: !1014, line: 123, type: !1500)
!11721 = !DILocalVariable(name: "sys", arg: 2, scope: !11718, file: !1014, line: 124, type: !1089)
!11722 = !DILocalVariable(name: "api", scope: !11718, file: !1014, line: 126, type: !1552)
!11723 = !DILocation(line: 0, scope: !11718)
!11724 = !DILocation(line: 127, column: 49, scope: !11718)
!11725 = !DILocation(line: 129, column: 14, scope: !11718)
!11726 = !DILocation(line: 129, column: 9, scope: !11718)
!11727 = !DILocation(line: 129, column: 2, scope: !11718)
!11728 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1639, file: !1639, line: 342, type: !11729, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11731)
!11729 = !DISubroutineType(types: !11730)
!11730 = !{!103, !1636, !185}
!11731 = !{!11732, !11733, !11734, !11735}
!11732 = !DILocalVariable(name: "config", arg: 1, scope: !11728, file: !1639, line: 342, type: !1636)
!11733 = !DILocalVariable(name: "id", arg: 2, scope: !11728, file: !1639, line: 343, type: !185)
!11734 = !DILocalVariable(name: "ret", scope: !11728, file: !1639, line: 345, type: !103)
!11735 = !DILocalVariable(name: "state", scope: !11728, file: !1639, line: 346, type: !1642)
!11736 = !DILocation(line: 0, scope: !11728)
!11737 = !DILocation(line: 346, column: 2, scope: !11728)
!11738 = !DILocation(line: 348, column: 8, scope: !11728)
!11739 = !DILocation(line: 349, column: 10, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11728, file: !1639, line: 349, column: 6)
!11741 = !DILocation(line: 349, column: 6, scope: !11728)
!11742 = !DILocation(line: 353, column: 44, scope: !11728)
!11743 = !DILocation(line: 353, column: 9, scope: !11728)
!11744 = !DILocation(line: 353, column: 2, scope: !11728)
!11745 = !DILocation(line: 354, column: 1, scope: !11728)
!11746 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11268, file: !11268, line: 496, type: !11440, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11747)
!11747 = !{!11748, !11749}
!11748 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11746, file: !11268, line: 496, type: !1541)
!11749 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11746, file: !11268, line: 496, type: !108)
!11750 = !DILocation(line: 0, scope: !11746)
!11751 = !DILocation(line: 498, column: 3, scope: !11746)
!11752 = !DILocation(line: 499, column: 1, scope: !11746)
!11753 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11268, file: !11268, line: 849, type: !11449, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11754)
!11754 = !{!11755, !11756, !11757, !11758}
!11755 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11753, file: !11268, line: 849, type: !1541)
!11756 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11753, file: !11268, line: 849, type: !108)
!11757 = !DILocalVariable(name: "Parity", arg: 3, scope: !11753, file: !11268, line: 849, type: !108)
!11758 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11753, file: !11268, line: 850, type: !108)
!11759 = !DILocation(line: 0, scope: !11753)
!11760 = !DILocation(line: 852, column: 3, scope: !11753)
!11761 = !DILocation(line: 853, column: 3, scope: !11753)
!11762 = !DILocation(line: 854, column: 1, scope: !11753)
!11763 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11268, file: !11268, line: 1336, type: !11331, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11764)
!11764 = !{!11765}
!11765 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11763, file: !11268, line: 1336, type: !1541)
!11766 = !DILocation(line: 0, scope: !11763)
!11767 = !DILocation(line: 1338, column: 3, scope: !11763)
!11768 = !DILocation(line: 1339, column: 1, scope: !11763)
!11769 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1639, file: !1639, line: 316, type: !11770, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11772)
!11770 = !DISubroutineType(types: !11771)
!11771 = !{!103, !1636, !1642}
!11772 = !{!11773, !11774, !11775}
!11773 = !DILocalVariable(name: "config", arg: 1, scope: !11769, file: !1639, line: 317, type: !1636)
!11774 = !DILocalVariable(name: "state", arg: 2, scope: !11769, file: !1639, line: 318, type: !1642)
!11775 = !DILocalVariable(name: "reg", scope: !11769, file: !1639, line: 320, type: !22)
!11776 = !DILocation(line: 0, scope: !11769)
!11777 = !DILocation(line: 329, column: 39, scope: !11769)
!11778 = !DILocation(line: 329, column: 52, scope: !11769)
!11779 = !DILocation(line: 329, column: 9, scope: !11769)
!11780 = !DILocation(line: 329, column: 2, scope: !11769)
!11781 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !442, file: !442, line: 730, type: !11708, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !11782)
!11782 = !{!11783}
!11783 = !DILocalVariable(name: "dev", arg: 1, scope: !11781, file: !442, line: 730, type: !1500)
!11784 = !DILocation(line: 0, scope: !11781)
!11785 = !DILocation(line: 732, column: 9, scope: !11781)
!11786 = !DILocation(line: 732, column: 2, scope: !11781)
!11787 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1774, file: !1774, line: 270, type: !1780, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11788)
!11788 = !{!11789}
!11789 = !DILocalVariable(name: "dev", arg: 1, scope: !11787, file: !1774, line: 270, type: !1782)
!11790 = !DILocation(line: 0, scope: !11787)
!11791 = !DILocation(line: 274, column: 2, scope: !11787)
!11792 = !DILocation(line: 275, column: 12, scope: !11787)
!11793 = !DILocation(line: 276, column: 15, scope: !11787)
!11794 = !DILocation(line: 277, column: 16, scope: !11787)
!11795 = !DILocation(line: 278, column: 15, scope: !11787)
!11796 = !DILocation(line: 279, column: 16, scope: !11787)
!11797 = !DILocation(line: 282, column: 2, scope: !11787)
!11798 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !637, file: !637, line: 1638, type: !7315, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11799)
!11799 = !{!11800, !11801}
!11800 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11798, file: !637, line: 1638, type: !972)
!11801 = !DILocalVariable(name: "priority", arg: 2, scope: !11798, file: !637, line: 1638, type: !108)
!11802 = !DILocation(line: 0, scope: !11798)
!11803 = !DILocation(line: 1646, column: 46, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11805, file: !637, line: 1645, column: 3)
!11805 = distinct !DILexicalBlock(scope: !11798, file: !637, line: 1640, column: 7)
!11806 = !DILocation(line: 1648, column: 1, scope: !11798)
!11807 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1774, file: !1774, line: 118, type: !7218, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11808)
!11808 = !{!11809, !11810}
!11809 = !DILocalVariable(name: "arg", arg: 1, scope: !11807, file: !1774, line: 118, type: !102)
!11810 = !DILocalVariable(name: "dticks", scope: !11807, file: !1774, line: 121, type: !108)
!11811 = !DILocation(line: 0, scope: !11807)
!11812 = !DILocation(line: 124, column: 2, scope: !11807)
!11813 = !DILocation(line: 129, column: 17, scope: !11807)
!11814 = !DILocation(line: 129, column: 14, scope: !11807)
!11815 = !DILocation(line: 130, column: 15, scope: !11807)
!11816 = !DILocation(line: 145, column: 27, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11818, file: !1774, line: 132, column: 16)
!11818 = distinct !DILexicalBlock(scope: !11807, file: !1774, line: 132, column: 6)
!11819 = !DILocation(line: 145, column: 25, scope: !11817)
!11820 = !DILocation(line: 145, column: 45, scope: !11817)
!11821 = !DILocation(line: 146, column: 30, scope: !11817)
!11822 = !DILocation(line: 146, column: 20, scope: !11817)
!11823 = !DILocation(line: 147, column: 3, scope: !11817)
!11824 = !DILocation(line: 151, column: 2, scope: !11807)
!11825 = !DILocation(line: 152, column: 1, scope: !11807)
!11826 = distinct !DISubprogram(name: "elapsed", scope: !1774, file: !1774, line: 85, type: !3564, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11827)
!11827 = !{!11828, !11829, !11830}
!11828 = !DILocalVariable(name: "val1", scope: !11826, file: !1774, line: 87, type: !108)
!11829 = !DILocalVariable(name: "ctrl", scope: !11826, file: !1774, line: 88, type: !108)
!11830 = !DILocalVariable(name: "val2", scope: !11826, file: !1774, line: 89, type: !108)
!11831 = !DILocation(line: 87, column: 27, scope: !11826)
!11832 = !DILocation(line: 0, scope: !11826)
!11833 = !DILocation(line: 88, column: 27, scope: !11826)
!11834 = !DILocation(line: 89, column: 27, scope: !11826)
!11835 = !DILocation(line: 105, column: 12, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11826, file: !1774, line: 105, column: 6)
!11837 = !DILocation(line: 106, column: 6, scope: !11836)
!11838 = !DILocation(line: 107, column: 16, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11836, file: !1774, line: 106, column: 24)
!11840 = !DILocation(line: 111, column: 18, scope: !11839)
!11841 = !DILocation(line: 112, column: 2, scope: !11839)
!11842 = !DILocation(line: 114, column: 20, scope: !11826)
!11843 = !DILocation(line: 114, column: 30, scope: !11826)
!11844 = !DILocation(line: 114, column: 28, scope: !11826)
!11845 = !DILocation(line: 114, column: 2, scope: !11826)
!11846 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1774, file: !1774, line: 154, type: !11847, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11849)
!11847 = !DISubroutineType(types: !11848)
!11848 = !{null, !331, !131}
!11849 = !{!11850, !11851, !11852, !11853, !11854, !11855, !11856, !11861, !11862}
!11850 = !DILocalVariable(name: "ticks", arg: 1, scope: !11846, file: !1774, line: 154, type: !331)
!11851 = !DILocalVariable(name: "idle", arg: 2, scope: !11846, file: !1774, line: 154, type: !131)
!11852 = !DILocalVariable(name: "delay", scope: !11846, file: !1774, line: 169, type: !108)
!11853 = !DILocalVariable(name: "val1", scope: !11846, file: !1774, line: 170, type: !108)
!11854 = !DILocalVariable(name: "val2", scope: !11846, file: !1774, line: 170, type: !108)
!11855 = !DILocalVariable(name: "last_load_", scope: !11846, file: !1774, line: 171, type: !108)
!11856 = !DILocalVariable(name: "key", scope: !11846, file: !1774, line: 176, type: !11857)
!11857 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !11858)
!11858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !11859)
!11859 = !{!11860}
!11860 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11858, file: !250, line: 33, baseType: !103, size: 32)
!11861 = !DILocalVariable(name: "pending", scope: !11846, file: !1774, line: 178, type: !108)
!11862 = !DILocalVariable(name: "unannounced", scope: !11846, file: !1774, line: 185, type: !108)
!11863 = !DILocation(line: 0, scope: !11846)
!11864 = !DILocation(line: 162, column: 49, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11846, file: !1774, line: 162, column: 6)
!11866 = !DILocation(line: 163, column: 17, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11865, file: !1774, line: 162, column: 78)
!11868 = !DILocation(line: 164, column: 13, scope: !11867)
!11869 = !DILocation(line: 165, column: 3, scope: !11867)
!11870 = !DILocation(line: 171, column: 24, scope: !11846)
!11871 = !DILocation(line: 173, column: 10, scope: !11846)
!11872 = !DILocation(line: 174, column: 10, scope: !11846)
!11873 = !DILocalVariable(name: "l", arg: 1, scope: !11874, file: !250, line: 136, type: !11877)
!11874 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !11875, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11878)
!11875 = !DISubroutineType(types: !11876)
!11876 = !{!11857, !11877}
!11877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!11878 = !{!11873, !11879}
!11879 = !DILocalVariable(name: "k", scope: !11874, file: !250, line: 139, type: !11857)
!11880 = !DILocation(line: 0, scope: !11874, inlinedAt: !11881)
!11881 = distinct !DILocation(line: 176, column: 25, scope: !11846)
!11882 = !DILocation(line: 55, column: 2, scope: !11883, inlinedAt: !11887)
!11883 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6946, file: !6946, line: 42, type: !6947, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11884)
!11884 = !{!11885, !11886}
!11885 = !DILocalVariable(name: "key", scope: !11883, file: !6946, line: 44, type: !32)
!11886 = !DILocalVariable(name: "tmp", scope: !11883, file: !6946, line: 53, type: !32)
!11887 = distinct !DILocation(line: 145, column: 10, scope: !11874, inlinedAt: !11881)
!11888 = !{i64 1618868}
!11889 = !DILocation(line: 0, scope: !11883, inlinedAt: !11887)
!11890 = !DILocation(line: 178, column: 21, scope: !11846)
!11891 = !DILocation(line: 180, column: 18, scope: !11846)
!11892 = !DILocation(line: 182, column: 14, scope: !11846)
!11893 = !DILocation(line: 183, column: 15, scope: !11846)
!11894 = !DILocation(line: 185, column: 39, scope: !11846)
!11895 = !DILocation(line: 185, column: 37, scope: !11846)
!11896 = !DILocation(line: 187, column: 27, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11846, file: !1774, line: 187, column: 6)
!11898 = !DILocation(line: 187, column: 6, scope: !11846)
!11899 = !DILocation(line: 202, column: 27, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11897, file: !1774, line: 195, column: 9)
!11901 = !DILocation(line: 202, column: 48, scope: !11900)
!11902 = !DILocation(line: 203, column: 9, scope: !11900)
!11903 = !DILocation(line: 204, column: 11, scope: !11900)
!11904 = !DILocation(line: 205, column: 13, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11900, file: !1774, line: 205, column: 7)
!11906 = !DILocation(line: 205, column: 7, scope: !11900)
!11907 = !DILocation(line: 0, scope: !11897)
!11908 = !DILocation(line: 212, column: 18, scope: !11846)
!11909 = !DILocation(line: 214, column: 28, scope: !11846)
!11910 = !DILocation(line: 214, column: 16, scope: !11846)
!11911 = !DILocation(line: 215, column: 15, scope: !11846)
!11912 = !DILocation(line: 227, column: 11, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11846, file: !1774, line: 227, column: 6)
!11914 = !DILocation(line: 227, column: 6, scope: !11846)
!11915 = !DILocation(line: 228, column: 15, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11913, file: !1774, line: 227, column: 19)
!11917 = !DILocation(line: 228, column: 38, scope: !11916)
!11918 = !DILocation(line: 228, column: 24, scope: !11916)
!11919 = !DILocation(line: 229, column: 2, scope: !11916)
!11920 = !DILocation(line: 230, column: 24, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11913, file: !1774, line: 229, column: 9)
!11922 = !DILocation(line: 230, column: 15, scope: !11921)
!11923 = !DILocation(line: 0, scope: !11913)
!11924 = !DILocalVariable(name: "key", arg: 2, scope: !11925, file: !250, line: 190, type: !11857)
!11925 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !11926, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11928)
!11926 = !DISubroutineType(types: !11927)
!11927 = !{null, !11877, !11857}
!11928 = !{!11929, !11924}
!11929 = !DILocalVariable(name: "l", arg: 1, scope: !11925, file: !250, line: 189, type: !11877)
!11930 = !DILocation(line: 0, scope: !11925, inlinedAt: !11931)
!11931 = distinct !DILocation(line: 232, column: 2, scope: !11846)
!11932 = !DILocalVariable(name: "key", arg: 1, scope: !11933, file: !6946, line: 84, type: !32)
!11933 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6946, file: !6946, line: 84, type: !6957, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11934)
!11934 = !{!11932}
!11935 = !DILocation(line: 0, scope: !11933, inlinedAt: !11936)
!11936 = distinct !DILocation(line: 215, column: 2, scope: !11925, inlinedAt: !11931)
!11937 = !DILocation(line: 95, column: 2, scope: !11933, inlinedAt: !11936)
!11938 = !{i64 1619685}
!11939 = !DILocation(line: 234, column: 1, scope: !11846)
!11940 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1774, file: !1774, line: 236, type: !3564, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11941)
!11941 = !{!11942, !11943}
!11942 = !DILocalVariable(name: "key", scope: !11940, file: !1774, line: 242, type: !11857)
!11943 = !DILocalVariable(name: "cyc", scope: !11940, file: !1774, line: 243, type: !108)
!11944 = !DILocation(line: 0, scope: !11874, inlinedAt: !11945)
!11945 = distinct !DILocation(line: 242, column: 25, scope: !11940)
!11946 = !DILocation(line: 55, column: 2, scope: !11883, inlinedAt: !11947)
!11947 = distinct !DILocation(line: 145, column: 10, scope: !11874, inlinedAt: !11945)
!11948 = !DILocation(line: 0, scope: !11883, inlinedAt: !11947)
!11949 = !DILocation(line: 0, scope: !11940)
!11950 = !DILocation(line: 243, column: 17, scope: !11940)
!11951 = !DILocation(line: 243, column: 29, scope: !11940)
!11952 = !DILocation(line: 243, column: 27, scope: !11940)
!11953 = !DILocation(line: 243, column: 43, scope: !11940)
!11954 = !DILocation(line: 243, column: 41, scope: !11940)
!11955 = !DILocation(line: 0, scope: !11925, inlinedAt: !11956)
!11956 = distinct !DILocation(line: 245, column: 2, scope: !11940)
!11957 = !DILocation(line: 0, scope: !11933, inlinedAt: !11958)
!11958 = distinct !DILocation(line: 215, column: 2, scope: !11925, inlinedAt: !11956)
!11959 = !DILocation(line: 95, column: 2, scope: !11933, inlinedAt: !11958)
!11960 = !DILocation(line: 246, column: 13, scope: !11940)
!11961 = !DILocation(line: 246, column: 2, scope: !11940)
!11962 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1774, file: !1774, line: 249, type: !3564, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !11963)
!11963 = !{!11964, !11965}
!11964 = !DILocalVariable(name: "key", scope: !11962, file: !1774, line: 251, type: !11857)
!11965 = !DILocalVariable(name: "ret", scope: !11962, file: !1774, line: 252, type: !108)
!11966 = !DILocation(line: 0, scope: !11874, inlinedAt: !11967)
!11967 = distinct !DILocation(line: 251, column: 25, scope: !11962)
!11968 = !DILocation(line: 55, column: 2, scope: !11883, inlinedAt: !11969)
!11969 = distinct !DILocation(line: 145, column: 10, scope: !11874, inlinedAt: !11967)
!11970 = !DILocation(line: 0, scope: !11883, inlinedAt: !11969)
!11971 = !DILocation(line: 0, scope: !11962)
!11972 = !DILocation(line: 252, column: 17, scope: !11962)
!11973 = !DILocation(line: 252, column: 29, scope: !11962)
!11974 = !DILocation(line: 252, column: 27, scope: !11962)
!11975 = !DILocation(line: 0, scope: !11925, inlinedAt: !11976)
!11976 = distinct !DILocation(line: 254, column: 2, scope: !11962)
!11977 = !DILocation(line: 0, scope: !11933, inlinedAt: !11978)
!11978 = distinct !DILocation(line: 215, column: 2, scope: !11925, inlinedAt: !11976)
!11979 = !DILocation(line: 95, column: 2, scope: !11933, inlinedAt: !11978)
!11980 = !DILocation(line: 255, column: 2, scope: !11962)
!11981 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1774, file: !1774, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !251)
!11982 = !DILocation(line: 260, column: 6, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11981, file: !1774, line: 260, column: 6)
!11984 = !DILocation(line: 260, column: 16, scope: !11983)
!11985 = !DILocation(line: 260, column: 6, scope: !11981)
!11986 = !DILocation(line: 261, column: 17, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11983, file: !1774, line: 260, column: 34)
!11988 = !DILocation(line: 262, column: 2, scope: !11987)
!11989 = !DILocation(line: 263, column: 1, scope: !11981)
!11990 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1774, file: !1774, line: 265, type: !334, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !251)
!11991 = !DILocation(line: 267, column: 16, scope: !11990)
!11992 = !DILocation(line: 268, column: 1, scope: !11990)
!11993 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11994, file: !11994, line: 9, type: !11995, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3060, retainedNodes: !12018)
!11994 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11995 = !DISubroutineType(types: !11996)
!11996 = !{!103, !11997, !185, !12017}
!11997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11998, size: 32)
!11998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11999)
!11999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1639, line: 60, size: 64, elements: !12000)
!12000 = !{!12001, !12016}
!12001 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11999, file: !1639, line: 69, baseType: !12002, size: 32)
!12002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12003, size: 32)
!12003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12004)
!12004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1639, line: 50, size: 64, elements: !12005)
!12005 = !{!12006, !12014, !12015}
!12006 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12004, file: !1639, line: 52, baseType: !12007, size: 32)
!12007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12008, size: 32)
!12008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12009)
!12009 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1650, line: 37, baseType: !12010)
!12010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1650, line: 32, size: 64, elements: !12011)
!12011 = !{!12012, !12013}
!12012 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12010, file: !1650, line: 34, baseType: !108, size: 32)
!12013 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12010, file: !1650, line: 36, baseType: !108, size: 32, offset: 32)
!12014 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12004, file: !1639, line: 54, baseType: !185, size: 8, offset: 32)
!12015 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12004, file: !1639, line: 56, baseType: !185, size: 8, offset: 40)
!12016 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11999, file: !1639, line: 71, baseType: !185, size: 8, offset: 32)
!12017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12002, size: 32)
!12018 = !{!12019, !12020, !12021}
!12019 = !DILocalVariable(name: "config", arg: 1, scope: !11993, file: !11994, line: 9, type: !11997)
!12020 = !DILocalVariable(name: "id", arg: 2, scope: !11993, file: !11994, line: 9, type: !185)
!12021 = !DILocalVariable(name: "state", arg: 3, scope: !11993, file: !11994, line: 10, type: !12017)
!12022 = !DILocation(line: 0, scope: !11993)
!12023 = !DILocation(line: 12, column: 20, scope: !11993)
!12024 = !DILocation(line: 13, column: 27, scope: !11993)
!12025 = !DILocation(line: 13, column: 42, scope: !11993)
!12026 = !DILocation(line: 13, column: 19, scope: !11993)
!12027 = !DILocation(line: 13, column: 16, scope: !11993)
!12028 = !DILocation(line: 13, column: 2, scope: !11993)
!12029 = distinct !{!12029, !12028, !12030}
!12030 = !DILocation(line: 19, column: 2, scope: !11993)
!12031 = !DILocation(line: 14, column: 23, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12033, file: !11994, line: 14, column: 7)
!12033 = distinct !DILexicalBlock(scope: !11993, file: !11994, line: 13, column: 54)
!12034 = !DILocation(line: 14, column: 10, scope: !12032)
!12035 = !DILocation(line: 18, column: 11, scope: !12033)
!12036 = !DILocation(line: 14, column: 7, scope: !12033)
!12037 = !DILocation(line: 22, column: 1, scope: !11993)
!12038 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1890, file: !1890, line: 193, type: !12039, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1809, retainedNodes: !12048)
!12039 = !DISubroutineType(types: !12040)
!12040 = !{!103, !12041, !185, !22}
!12041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12042, size: 32)
!12042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12043)
!12043 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1650, line: 37, baseType: !12044)
!12044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1650, line: 32, size: 64, elements: !12045)
!12045 = !{!12046, !12047}
!12046 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12044, file: !1650, line: 34, baseType: !108, size: 32)
!12047 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12044, file: !1650, line: 36, baseType: !108, size: 32, offset: 32)
!12048 = !{!12049, !12050, !12051, !12052, !12053, !12054, !12055, !12056, !12058}
!12049 = !DILocalVariable(name: "pins", arg: 1, scope: !12038, file: !1890, line: 193, type: !12041)
!12050 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12038, file: !1890, line: 193, type: !185)
!12051 = !DILocalVariable(name: "reg", arg: 3, scope: !12038, file: !1890, line: 194, type: !22)
!12052 = !DILocalVariable(name: "pin", scope: !12038, file: !1890, line: 196, type: !108)
!12053 = !DILocalVariable(name: "mux", scope: !12038, file: !1890, line: 196, type: !108)
!12054 = !DILocalVariable(name: "pin_cgf", scope: !12038, file: !1890, line: 197, type: !108)
!12055 = !DILocalVariable(name: "ret", scope: !12038, file: !1890, line: 198, type: !103)
!12056 = !DILocalVariable(name: "i", scope: !12057, file: !1890, line: 209, type: !185)
!12057 = distinct !DILexicalBlock(scope: !12038, file: !1890, line: 209, column: 2)
!12058 = !DILocalVariable(name: "gpio_out", scope: !12059, file: !1890, line: 239, type: !108)
!12059 = distinct !DILexicalBlock(scope: !12060, file: !1890, line: 238, column: 55)
!12060 = distinct !DILexicalBlock(scope: !12061, file: !1890, line: 238, column: 14)
!12061 = distinct !DILexicalBlock(scope: !12062, file: !1890, line: 236, column: 14)
!12062 = distinct !DILexicalBlock(scope: !12063, file: !1890, line: 234, column: 7)
!12063 = distinct !DILexicalBlock(scope: !12064, file: !1890, line: 209, column: 41)
!12064 = distinct !DILexicalBlock(scope: !12057, file: !1890, line: 209, column: 2)
!12065 = !DILocation(line: 0, scope: !12038)
!12066 = !DILocation(line: 0, scope: !12057)
!12067 = !DILocation(line: 209, column: 25, scope: !12064)
!12068 = !DILocation(line: 209, column: 2, scope: !12057)
!12069 = distinct !{!12069, !12068, !12070}
!12070 = !DILocation(line: 259, column: 2, scope: !12057)
!12071 = !DILocation(line: 210, column: 17, scope: !12063)
!12072 = !DILocation(line: 234, column: 7, scope: !12062)
!12073 = !DILocation(line: 234, column: 33, scope: !12062)
!12074 = !DILocation(line: 234, column: 7, scope: !12063)
!12075 = !DILocation(line: 235, column: 22, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12062, file: !1890, line: 234, column: 49)
!12077 = !DILocation(line: 235, column: 29, scope: !12076)
!12078 = !DILocation(line: 236, column: 3, scope: !12076)
!12079 = !DILocation(line: 236, column: 14, scope: !12062)
!12080 = !DILocation(line: 239, column: 32, scope: !12059)
!12081 = !DILocation(line: 0, scope: !12059)
!12082 = !DILocation(line: 241, column: 8, scope: !12059)
!12083 = !DILocation(line: 246, column: 3, scope: !12059)
!12084 = !DILocation(line: 252, column: 9, scope: !12063)
!12085 = !DILocation(line: 255, column: 9, scope: !12063)
!12086 = !DILocation(line: 256, column: 11, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12063, file: !1890, line: 256, column: 7)
!12088 = !DILocation(line: 209, column: 37, scope: !12064)
!12089 = !DILocation(line: 256, column: 7, scope: !12063)
!12090 = !DILocation(line: 262, column: 1, scope: !12038)
!12091 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1890, file: !1890, line: 176, type: !12092, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1809, retainedNodes: !12094)
!12092 = !DISubroutineType(types: !12093)
!12093 = !{!103, !108, !108, !108}
!12094 = !{!12095, !12096, !12097, !12098}
!12095 = !DILocalVariable(name: "pin", arg: 1, scope: !12091, file: !1890, line: 176, type: !108)
!12096 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12091, file: !1890, line: 176, type: !108)
!12097 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12091, file: !1890, line: 176, type: !108)
!12098 = !DILocalVariable(name: "port_device", scope: !12091, file: !1890, line: 178, type: !1820)
!12099 = !DILocation(line: 0, scope: !12091)
!12100 = !DILocation(line: 180, column: 22, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12091, file: !1890, line: 180, column: 6)
!12102 = !DILocation(line: 180, column: 6, scope: !12091)
!12103 = !DILocation(line: 180, column: 6, scope: !12101)
!12104 = !DILocation(line: 184, column: 16, scope: !12091)
!12105 = !DILocation(line: 186, column: 19, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12091, file: !1890, line: 186, column: 6)
!12107 = !DILocation(line: 186, column: 28, scope: !12106)
!12108 = !DILocation(line: 186, column: 33, scope: !12106)
!12109 = !DILocation(line: 186, column: 6, scope: !12091)
!12110 = !DILocation(line: 190, column: 43, scope: !12091)
!12111 = !DILocation(line: 190, column: 9, scope: !12091)
!12112 = !DILocation(line: 190, column: 2, scope: !12091)
!12113 = !DILocation(line: 191, column: 1, scope: !12091)
!12114 = distinct !DISubprogram(name: "device_is_ready", scope: !9104, file: !9104, line: 47, type: !12115, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1809, retainedNodes: !12117)
!12115 = !DISubroutineType(types: !12116)
!12116 = !{!131, !1820}
!12117 = !{!12118}
!12118 = !DILocalVariable(name: "dev", arg: 1, scope: !12114, file: !9104, line: 47, type: !1820)
!12119 = !DILocation(line: 0, scope: !12114)
!12120 = !DILocation(line: 55, column: 2, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12114, file: !9104, line: 55, column: 2)
!12122 = !{i64 2148852877}
!12123 = !DILocation(line: 56, column: 9, scope: !12114)
!12124 = !DILocation(line: 56, column: 2, scope: !12114)
!12125 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !442, file: !442, line: 730, type: !12115, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1809, retainedNodes: !12126)
!12126 = !{!12127}
!12127 = !DILocalVariable(name: "dev", arg: 1, scope: !12125, file: !442, line: 730, type: !1820)
!12128 = !DILocation(line: 0, scope: !12125)
!12129 = !DILocation(line: 732, column: 9, scope: !12125)
!12130 = !DILocation(line: 732, column: 2, scope: !12125)
!12131 = distinct !DISubprogram(name: "SystemInit", scope: !1920, file: !1920, line: 160, type: !334, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !251)
!12132 = !DILocation(line: 170, column: 1, scope: !12131)
!12133 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1920, file: !1920, line: 210, type: !334, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12134)
!12134 = !{!12135, !12136, !12137, !12138, !12139}
!12135 = !DILocalVariable(name: "tmp", scope: !12133, file: !1920, line: 212, type: !108)
!12136 = !DILocalVariable(name: "pllmul", scope: !12133, file: !1920, line: 212, type: !108)
!12137 = !DILocalVariable(name: "plldiv", scope: !12133, file: !1920, line: 212, type: !108)
!12138 = !DILocalVariable(name: "pllsource", scope: !12133, file: !1920, line: 212, type: !108)
!12139 = !DILocalVariable(name: "msirange", scope: !12133, file: !1920, line: 212, type: !108)
!12140 = !DILocation(line: 0, scope: !12133)
!12141 = !DILocation(line: 215, column: 14, scope: !12133)
!12142 = !DILocation(line: 217, column: 3, scope: !12133)
!12143 = !DILocation(line: 220, column: 24, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12133, file: !1920, line: 218, column: 3)
!12145 = !DILocation(line: 220, column: 52, scope: !12144)
!12146 = !DILocation(line: 221, column: 32, scope: !12144)
!12147 = !DILocation(line: 222, column: 7, scope: !12144)
!12148 = !DILocation(line: 228, column: 7, scope: !12144)
!12149 = !DILocation(line: 231, column: 21, scope: !12144)
!12150 = !DILocation(line: 232, column: 21, scope: !12144)
!12151 = !DILocation(line: 233, column: 36, scope: !12144)
!12152 = !DILocation(line: 233, column: 16, scope: !12144)
!12153 = !DILocation(line: 234, column: 24, scope: !12144)
!12154 = !DILocation(line: 234, column: 31, scope: !12144)
!12155 = !DILocation(line: 236, column: 24, scope: !12144)
!12156 = !DILocation(line: 236, column: 29, scope: !12144)
!12157 = !DILocation(line: 238, column: 21, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12144, file: !1920, line: 238, column: 11)
!12159 = !DILocation(line: 238, column: 11, scope: !12144)
!12160 = !DILocation(line: 241, column: 41, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12158, file: !1920, line: 239, column: 7)
!12162 = !DILocation(line: 241, column: 51, scope: !12161)
!12163 = !DILocation(line: 242, column: 7, scope: !12161)
!12164 = !DILocation(line: 246, column: 41, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12158, file: !1920, line: 244, column: 7)
!12166 = !DILocation(line: 246, column: 51, scope: !12165)
!12167 = !DILocation(line: 0, scope: !12144)
!12168 = !DILocation(line: 256, column: 30, scope: !12133)
!12169 = !DILocation(line: 256, column: 52, scope: !12133)
!12170 = !DILocation(line: 256, column: 9, scope: !12133)
!12171 = !DILocation(line: 258, column: 19, scope: !12133)
!12172 = !DILocation(line: 259, column: 1, scope: !12133)
!12173 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12174, file: !12174, line: 228, type: !12175, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12178)
!12174 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12175 = !DISubroutineType(types: !12176)
!12176 = !{!12177}
!12177 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3066, line: 45, baseType: !3065)
!12178 = !{!12179, !12180}
!12179 = !DILocalVariable(name: "tickstart", scope: !12173, file: !12174, line: 230, type: !108)
!12180 = !DILocalVariable(name: "status", scope: !12173, file: !12174, line: 231, type: !12177)
!12181 = !DILocation(line: 234, column: 3, scope: !12173)
!12182 = !DILocation(line: 238, column: 3, scope: !12173)
!12183 = !DILocation(line: 241, column: 15, scope: !12173)
!12184 = !DILocation(line: 0, scope: !12173)
!12185 = !DILocation(line: 244, column: 3, scope: !12173)
!12186 = !DILocation(line: 244, column: 10, scope: !12173)
!12187 = !DILocation(line: 244, column: 43, scope: !12173)
!12188 = !DILocation(line: 246, column: 10, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12190, file: !12174, line: 246, column: 9)
!12190 = distinct !DILexicalBlock(scope: !12173, file: !12174, line: 245, column: 3)
!12191 = !DILocation(line: 246, column: 24, scope: !12189)
!12192 = !DILocation(line: 246, column: 37, scope: !12189)
!12193 = !DILocation(line: 246, column: 9, scope: !12190)
!12194 = distinct !{!12194, !12185, !12195}
!12195 = !DILocation(line: 250, column: 3, scope: !12173)
!12196 = !DILocation(line: 253, column: 3, scope: !12173)
!12197 = !DILocation(line: 256, column: 3, scope: !12173)
!12198 = !DILocation(line: 256, column: 10, scope: !12173)
!12199 = !DILocation(line: 256, column: 44, scope: !12173)
!12200 = !DILocation(line: 258, column: 10, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12202, file: !12174, line: 258, column: 9)
!12202 = distinct !DILexicalBlock(scope: !12173, file: !12174, line: 257, column: 3)
!12203 = !DILocation(line: 258, column: 24, scope: !12201)
!12204 = !DILocation(line: 258, column: 37, scope: !12201)
!12205 = !DILocation(line: 258, column: 9, scope: !12202)
!12206 = distinct !{!12206, !12197, !12207}
!12207 = !DILocation(line: 262, column: 3, scope: !12173)
!12208 = !DILocation(line: 265, column: 19, scope: !12173)
!12209 = !DILocation(line: 268, column: 25, scope: !12173)
!12210 = !DILocation(line: 268, column: 12, scope: !12173)
!12211 = !DILocation(line: 269, column: 13, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12173, file: !12174, line: 269, column: 6)
!12213 = !DILocation(line: 269, column: 6, scope: !12173)
!12214 = !DILocation(line: 275, column: 3, scope: !12173)
!12215 = !DILocation(line: 277, column: 3, scope: !12173)
!12216 = !DILocation(line: 280, column: 15, scope: !12173)
!12217 = !DILocation(line: 283, column: 3, scope: !12173)
!12218 = !DILocation(line: 283, column: 10, scope: !12173)
!12219 = !DILocation(line: 283, column: 43, scope: !12173)
!12220 = !DILocation(line: 285, column: 10, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12222, file: !12174, line: 285, column: 9)
!12222 = distinct !DILexicalBlock(scope: !12173, file: !12174, line: 284, column: 3)
!12223 = !DILocation(line: 285, column: 24, scope: !12221)
!12224 = !DILocation(line: 285, column: 37, scope: !12221)
!12225 = !DILocation(line: 285, column: 9, scope: !12222)
!12226 = distinct !{!12226, !12217, !12227}
!12227 = !DILocation(line: 289, column: 3, scope: !12173)
!12228 = !DILocation(line: 292, column: 3, scope: !12173)
!12229 = !DILocation(line: 295, column: 3, scope: !12173)
!12230 = !DILocation(line: 299, column: 3, scope: !12173)
!12231 = !DILocation(line: 305, column: 3, scope: !12173)
!12232 = !DILocation(line: 307, column: 3, scope: !12173)
!12233 = !DILocation(line: 308, column: 1, scope: !12173)
!12234 = !DISubprogram(name: "HAL_GetTick", scope: !12235, file: !12235, line: 945, type: !3564, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12235 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12236 = !DISubprogram(name: "HAL_InitTick", scope: !12235, file: !12235, line: 932, type: !12237, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12237 = !DISubroutineType(types: !12238)
!12238 = !{!12177, !108}
!12239 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12174, file: !12174, line: 324, type: !12240, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12264)
!12240 = !DISubroutineType(types: !12241)
!12241 = !{!12177, !12242}
!12242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12243, size: 32)
!12243 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12244, line: 283, baseType: !12245)
!12244 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12244, line: 252, size: 416, elements: !12246)
!12246 = !{!12247, !12248, !12249, !12250, !12251, !12252, !12253, !12254, !12255, !12256}
!12247 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12245, file: !12244, line: 254, baseType: !108, size: 32)
!12248 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12245, file: !12244, line: 257, baseType: !108, size: 32, offset: 32)
!12249 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12245, file: !12244, line: 260, baseType: !108, size: 32, offset: 64)
!12250 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12245, file: !12244, line: 263, baseType: !108, size: 32, offset: 96)
!12251 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12245, file: !12244, line: 266, baseType: !108, size: 32, offset: 128)
!12252 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12245, file: !12244, line: 269, baseType: !108, size: 32, offset: 160)
!12253 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !12245, file: !12244, line: 272, baseType: !108, size: 32, offset: 192)
!12254 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !12245, file: !12244, line: 275, baseType: !108, size: 32, offset: 224)
!12255 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !12245, file: !12244, line: 278, baseType: !108, size: 32, offset: 256)
!12256 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12245, file: !12244, line: 281, baseType: !12257, size: 128, offset: 288)
!12257 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12244, line: 247, baseType: !12258)
!12258 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12244, line: 234, size: 128, elements: !12259)
!12259 = !{!12260, !12261, !12262, !12263}
!12260 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12258, file: !12244, line: 236, baseType: !108, size: 32)
!12261 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12258, file: !12244, line: 239, baseType: !108, size: 32, offset: 32)
!12262 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !12258, file: !12244, line: 242, baseType: !108, size: 32, offset: 64)
!12263 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !12258, file: !12244, line: 245, baseType: !108, size: 32, offset: 96)
!12264 = !{!12265, !12266, !12267, !12268, !12269, !12270, !12274}
!12265 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12239, file: !12174, line: 324, type: !12242)
!12266 = !DILocalVariable(name: "tickstart", scope: !12239, file: !12174, line: 326, type: !108)
!12267 = !DILocalVariable(name: "status", scope: !12239, file: !12174, line: 327, type: !12177)
!12268 = !DILocalVariable(name: "sysclk_source", scope: !12239, file: !12174, line: 328, type: !108)
!12269 = !DILocalVariable(name: "pll_config", scope: !12239, file: !12174, line: 328, type: !108)
!12270 = !DILocalVariable(name: "pwrclkchanged", scope: !12271, file: !12174, line: 613, type: !12273)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !12174, line: 612, column: 3)
!12272 = distinct !DILexicalBlock(scope: !12239, file: !12174, line: 611, column: 6)
!12273 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1009, line: 181, baseType: !3076)
!12274 = !DILocalVariable(name: "tmpreg", scope: !12275, file: !12174, line: 622, type: !409)
!12275 = distinct !DILexicalBlock(scope: !12276, file: !12174, line: 622, column: 7)
!12276 = distinct !DILexicalBlock(scope: !12277, file: !12174, line: 621, column: 5)
!12277 = distinct !DILexicalBlock(scope: !12271, file: !12174, line: 620, column: 8)
!12278 = !DILocation(line: 0, scope: !12239)
!12279 = !DILocation(line: 331, column: 24, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12239, file: !12174, line: 331, column: 6)
!12281 = !DILocation(line: 331, column: 6, scope: !12239)
!12282 = !DILocation(line: 338, column: 19, scope: !12239)
!12283 = !DILocation(line: 339, column: 16, scope: !12239)
!12284 = !DILocation(line: 342, column: 27, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12239, file: !12174, line: 342, column: 6)
!12286 = !DILocation(line: 342, column: 43, scope: !12285)
!12287 = !DILocation(line: 342, column: 69, scope: !12285)
!12288 = !DILocation(line: 342, column: 6, scope: !12239)
!12289 = !DILocation(line: 348, column: 23, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12291, file: !12174, line: 348, column: 8)
!12291 = distinct !DILexicalBlock(scope: !12285, file: !12174, line: 343, column: 3)
!12292 = !DILocation(line: 349, column: 8, scope: !12290)
!12293 = !DILocation(line: 349, column: 27, scope: !12290)
!12294 = !DILocation(line: 349, column: 62, scope: !12290)
!12295 = !DILocation(line: 351, column: 11, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12297, file: !12174, line: 351, column: 10)
!12297 = distinct !DILexicalBlock(scope: !12290, file: !12174, line: 350, column: 5)
!12298 = !DILocation(line: 351, column: 47, scope: !12296)
!12299 = !DILocation(line: 351, column: 54, scope: !12296)
!12300 = !DILocation(line: 351, column: 77, scope: !12296)
!12301 = !DILocation(line: 351, column: 86, scope: !12296)
!12302 = !DILocation(line: 351, column: 10, scope: !12297)
!12303 = !DILocation(line: 359, column: 7, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !12174, line: 359, column: 7)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !12174, line: 359, column: 7)
!12306 = distinct !DILexicalBlock(scope: !12290, file: !12174, line: 357, column: 5)
!12307 = !DILocation(line: 359, column: 7, scope: !12305)
!12308 = !DILocation(line: 359, column: 7, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12304, file: !12174, line: 359, column: 7)
!12310 = !DILocation(line: 359, column: 7, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !12174, line: 359, column: 7)
!12312 = distinct !DILexicalBlock(scope: !12304, file: !12174, line: 359, column: 7)
!12313 = !DILocation(line: 359, column: 7, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12315, file: !12174, line: 359, column: 7)
!12315 = distinct !DILexicalBlock(scope: !12312, file: !12174, line: 359, column: 7)
!12316 = !DILocation(line: 359, column: 7, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12315, file: !12174, line: 359, column: 7)
!12318 = !DILocation(line: 0, scope: !12304)
!12319 = !DILocation(line: 362, column: 29, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12306, file: !12174, line: 362, column: 10)
!12321 = !DILocation(line: 362, column: 38, scope: !12320)
!12322 = !DILocation(line: 0, scope: !12320)
!12323 = !DILocation(line: 362, column: 10, scope: !12306)
!12324 = !DILocation(line: 368, column: 15, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12320, file: !12174, line: 363, column: 7)
!12326 = !DILocation(line: 368, column: 51, scope: !12325)
!12327 = !DILocation(line: 368, column: 9, scope: !12325)
!12328 = !DILocation(line: 370, column: 15, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !12174, line: 370, column: 14)
!12330 = distinct !DILexicalBlock(scope: !12325, file: !12174, line: 369, column: 9)
!12331 = !DILocation(line: 370, column: 29, scope: !12329)
!12332 = !DILocation(line: 370, column: 43, scope: !12329)
!12333 = !DILocation(line: 370, column: 14, scope: !12330)
!12334 = distinct !{!12334, !12327, !12335}
!12335 = !DILocation(line: 374, column: 9, scope: !12325)
!12336 = !DILocation(line: 382, column: 15, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12320, file: !12174, line: 377, column: 7)
!12338 = !DILocation(line: 382, column: 51, scope: !12337)
!12339 = !DILocation(line: 382, column: 9, scope: !12337)
!12340 = !DILocation(line: 384, column: 16, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12342, file: !12174, line: 384, column: 15)
!12342 = distinct !DILexicalBlock(scope: !12337, file: !12174, line: 383, column: 9)
!12343 = !DILocation(line: 384, column: 30, scope: !12341)
!12344 = !DILocation(line: 384, column: 44, scope: !12341)
!12345 = !DILocation(line: 384, column: 15, scope: !12342)
!12346 = distinct !{!12346, !12339, !12347}
!12347 = !DILocation(line: 388, column: 9, scope: !12337)
!12348 = !DILocation(line: 393, column: 27, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12239, file: !12174, line: 393, column: 6)
!12350 = !DILocation(line: 393, column: 43, scope: !12349)
!12351 = !DILocation(line: 393, column: 69, scope: !12349)
!12352 = !DILocation(line: 393, column: 6, scope: !12239)
!12353 = !DILocation(line: 400, column: 23, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12355, file: !12174, line: 400, column: 8)
!12355 = distinct !DILexicalBlock(scope: !12349, file: !12174, line: 394, column: 3)
!12356 = !DILocation(line: 401, column: 8, scope: !12354)
!12357 = !DILocation(line: 401, column: 27, scope: !12354)
!12358 = !DILocation(line: 401, column: 62, scope: !12354)
!12359 = !DILocation(line: 404, column: 11, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12361, file: !12174, line: 404, column: 10)
!12361 = distinct !DILexicalBlock(scope: !12354, file: !12174, line: 402, column: 5)
!12362 = !DILocation(line: 404, column: 47, scope: !12360)
!12363 = !DILocation(line: 404, column: 54, scope: !12360)
!12364 = !DILocation(line: 404, column: 77, scope: !12360)
!12365 = !DILocation(line: 404, column: 86, scope: !12360)
!12366 = !DILocation(line: 404, column: 10, scope: !12361)
!12367 = !DILocation(line: 418, column: 29, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12369, file: !12174, line: 418, column: 10)
!12369 = distinct !DILexicalBlock(scope: !12354, file: !12174, line: 416, column: 5)
!12370 = !DILocation(line: 418, column: 38, scope: !12368)
!12371 = !DILocation(line: 418, column: 10, scope: !12369)
!12372 = !DILocation(line: 421, column: 9, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12368, file: !12174, line: 419, column: 7)
!12374 = !DILocation(line: 424, column: 21, scope: !12373)
!12375 = !DILocation(line: 427, column: 9, scope: !12373)
!12376 = !DILocation(line: 427, column: 15, scope: !12373)
!12377 = !DILocation(line: 427, column: 51, scope: !12373)
!12378 = !DILocation(line: 429, column: 15, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12380, file: !12174, line: 429, column: 14)
!12380 = distinct !DILexicalBlock(scope: !12373, file: !12174, line: 428, column: 9)
!12381 = !DILocation(line: 429, column: 29, scope: !12379)
!12382 = !DILocation(line: 429, column: 43, scope: !12379)
!12383 = !DILocation(line: 429, column: 14, scope: !12380)
!12384 = distinct !{!12384, !12375, !12385}
!12385 = !DILocation(line: 433, column: 9, scope: !12373)
!12386 = !DILocation(line: 441, column: 9, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12368, file: !12174, line: 439, column: 7)
!12388 = !DILocation(line: 444, column: 21, scope: !12387)
!12389 = !DILocation(line: 447, column: 9, scope: !12387)
!12390 = !DILocation(line: 447, column: 15, scope: !12387)
!12391 = !DILocation(line: 447, column: 51, scope: !12387)
!12392 = !DILocation(line: 449, column: 15, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12394, file: !12174, line: 449, column: 14)
!12394 = distinct !DILexicalBlock(scope: !12387, file: !12174, line: 448, column: 9)
!12395 = !DILocation(line: 449, column: 29, scope: !12393)
!12396 = !DILocation(line: 449, column: 43, scope: !12393)
!12397 = !DILocation(line: 449, column: 14, scope: !12394)
!12398 = distinct !{!12398, !12389, !12399}
!12399 = !DILocation(line: 453, column: 9, scope: !12387)
!12400 = !DILocation(line: 0, scope: !12354)
!12401 = !DILocation(line: 458, column: 27, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12239, file: !12174, line: 458, column: 6)
!12403 = !DILocation(line: 458, column: 43, scope: !12402)
!12404 = !DILocation(line: 458, column: 69, scope: !12402)
!12405 = !DILocation(line: 458, column: 6, scope: !12239)
!12406 = !DILocation(line: 461, column: 22, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12408, file: !12174, line: 461, column: 8)
!12408 = distinct !DILexicalBlock(scope: !12402, file: !12174, line: 459, column: 3)
!12409 = !DILocation(line: 461, column: 8, scope: !12408)
!12410 = !DILocation(line: 463, column: 11, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12412, file: !12174, line: 463, column: 10)
!12412 = distinct !DILexicalBlock(scope: !12407, file: !12174, line: 462, column: 5)
!12413 = !DILocation(line: 463, column: 47, scope: !12411)
!12414 = !DILocation(line: 463, column: 54, scope: !12411)
!12415 = !DILocation(line: 463, column: 77, scope: !12411)
!12416 = !DILocation(line: 463, column: 86, scope: !12411)
!12417 = !DILocation(line: 463, column: 10, scope: !12412)
!12418 = !DILocation(line: 477, column: 31, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12420, file: !12174, line: 477, column: 12)
!12420 = distinct !DILexicalBlock(scope: !12411, file: !12174, line: 469, column: 7)
!12421 = !DILocation(line: 477, column: 47, scope: !12419)
!12422 = !DILocation(line: 477, column: 45, scope: !12419)
!12423 = !DILocation(line: 477, column: 12, scope: !12420)
!12424 = !DILocation(line: 480, column: 14, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12426, file: !12174, line: 480, column: 14)
!12426 = distinct !DILexicalBlock(scope: !12419, file: !12174, line: 478, column: 9)
!12427 = !DILocation(line: 480, column: 80, scope: !12425)
!12428 = !DILocation(line: 480, column: 14, scope: !12426)
!12429 = !DILocation(line: 486, column: 11, scope: !12426)
!12430 = !DILocation(line: 488, column: 11, scope: !12426)
!12431 = !DILocation(line: 489, column: 9, scope: !12426)
!12432 = !DILocation(line: 494, column: 11, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12419, file: !12174, line: 491, column: 9)
!12434 = !DILocation(line: 496, column: 11, scope: !12433)
!12435 = !DILocation(line: 499, column: 65, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12433, file: !12174, line: 499, column: 14)
!12437 = !DILocation(line: 499, column: 14, scope: !12436)
!12438 = !DILocation(line: 499, column: 80, scope: !12436)
!12439 = !DILocation(line: 499, column: 14, scope: !12433)
!12440 = !DILocation(line: 506, column: 67, scope: !12420)
!12441 = !DILocation(line: 506, column: 81, scope: !12420)
!12442 = !DILocation(line: 506, column: 36, scope: !12420)
!12443 = !DILocation(line: 507, column: 52, scope: !12420)
!12444 = !DILocation(line: 507, column: 74, scope: !12420)
!12445 = !DILocation(line: 507, column: 31, scope: !12420)
!12446 = !DILocation(line: 507, column: 28, scope: !12420)
!12447 = !DILocation(line: 506, column: 25, scope: !12420)
!12448 = !DILocation(line: 510, column: 31, scope: !12420)
!12449 = !DILocation(line: 510, column: 18, scope: !12420)
!12450 = !DILocation(line: 511, column: 19, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12420, file: !12174, line: 511, column: 12)
!12452 = !DILocation(line: 511, column: 12, scope: !12420)
!12453 = !DILocation(line: 523, column: 29, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12455, file: !12174, line: 523, column: 10)
!12455 = distinct !DILexicalBlock(scope: !12407, file: !12174, line: 518, column: 5)
!12456 = !DILocation(line: 523, column: 38, scope: !12454)
!12457 = !DILocation(line: 523, column: 10, scope: !12455)
!12458 = !DILocation(line: 526, column: 9, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12454, file: !12174, line: 524, column: 7)
!12460 = !DILocation(line: 529, column: 21, scope: !12459)
!12461 = !DILocation(line: 532, column: 9, scope: !12459)
!12462 = !DILocation(line: 532, column: 15, scope: !12459)
!12463 = !DILocation(line: 532, column: 51, scope: !12459)
!12464 = !DILocation(line: 534, column: 15, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12466, file: !12174, line: 534, column: 14)
!12466 = distinct !DILexicalBlock(scope: !12459, file: !12174, line: 533, column: 9)
!12467 = !DILocation(line: 534, column: 29, scope: !12465)
!12468 = !DILocation(line: 534, column: 42, scope: !12465)
!12469 = !DILocation(line: 534, column: 14, scope: !12466)
!12470 = distinct !{!12470, !12461, !12471}
!12471 = !DILocation(line: 538, column: 9, scope: !12459)
!12472 = !DILocation(line: 544, column: 9, scope: !12459)
!12473 = !DILocation(line: 546, column: 9, scope: !12459)
!12474 = !DILocation(line: 548, column: 7, scope: !12459)
!12475 = !DILocation(line: 552, column: 9, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12454, file: !12174, line: 550, column: 7)
!12477 = !DILocation(line: 555, column: 21, scope: !12476)
!12478 = !DILocation(line: 558, column: 9, scope: !12476)
!12479 = !DILocation(line: 558, column: 15, scope: !12476)
!12480 = !DILocation(line: 558, column: 51, scope: !12476)
!12481 = !DILocation(line: 560, column: 15, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12483, file: !12174, line: 560, column: 14)
!12483 = distinct !DILexicalBlock(scope: !12476, file: !12174, line: 559, column: 9)
!12484 = !DILocation(line: 560, column: 29, scope: !12482)
!12485 = !DILocation(line: 560, column: 42, scope: !12482)
!12486 = !DILocation(line: 560, column: 14, scope: !12483)
!12487 = distinct !{!12487, !12478, !12488}
!12488 = !DILocation(line: 564, column: 9, scope: !12476)
!12489 = !DILocation(line: 569, column: 27, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12239, file: !12174, line: 569, column: 6)
!12491 = !DILocation(line: 569, column: 43, scope: !12490)
!12492 = !DILocation(line: 569, column: 69, scope: !12490)
!12493 = !DILocation(line: 569, column: 6, scope: !12239)
!12494 = !DILocation(line: 575, column: 27, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12496, file: !12174, line: 575, column: 8)
!12496 = distinct !DILexicalBlock(scope: !12490, file: !12174, line: 570, column: 3)
!12497 = !DILocation(line: 575, column: 36, scope: !12495)
!12498 = !DILocation(line: 575, column: 8, scope: !12496)
!12499 = !DILocation(line: 578, column: 7, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12495, file: !12174, line: 576, column: 5)
!12501 = !DILocation(line: 581, column: 19, scope: !12500)
!12502 = !DILocation(line: 584, column: 7, scope: !12500)
!12503 = !DILocation(line: 584, column: 13, scope: !12500)
!12504 = !DILocation(line: 584, column: 49, scope: !12500)
!12505 = !DILocation(line: 586, column: 13, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12507, file: !12174, line: 586, column: 12)
!12507 = distinct !DILexicalBlock(scope: !12500, file: !12174, line: 585, column: 7)
!12508 = !DILocation(line: 586, column: 27, scope: !12506)
!12509 = !DILocation(line: 586, column: 41, scope: !12506)
!12510 = !DILocation(line: 586, column: 12, scope: !12507)
!12511 = distinct !{!12511, !12502, !12512}
!12512 = !DILocation(line: 590, column: 7, scope: !12500)
!12513 = !DILocation(line: 595, column: 7, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12495, file: !12174, line: 593, column: 5)
!12515 = !DILocation(line: 598, column: 19, scope: !12514)
!12516 = !DILocation(line: 601, column: 7, scope: !12514)
!12517 = !DILocation(line: 601, column: 13, scope: !12514)
!12518 = !DILocation(line: 601, column: 49, scope: !12514)
!12519 = !DILocation(line: 603, column: 13, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12521, file: !12174, line: 603, column: 12)
!12521 = distinct !DILexicalBlock(scope: !12514, file: !12174, line: 602, column: 7)
!12522 = !DILocation(line: 603, column: 27, scope: !12520)
!12523 = !DILocation(line: 603, column: 41, scope: !12520)
!12524 = !DILocation(line: 603, column: 12, scope: !12521)
!12525 = distinct !{!12525, !12516, !12526}
!12526 = !DILocation(line: 607, column: 7, scope: !12514)
!12527 = !DILocation(line: 611, column: 27, scope: !12272)
!12528 = !DILocation(line: 611, column: 43, scope: !12272)
!12529 = !DILocation(line: 611, column: 69, scope: !12272)
!12530 = !DILocation(line: 611, column: 6, scope: !12239)
!12531 = !DILocation(line: 0, scope: !12271)
!12532 = !DILocation(line: 620, column: 8, scope: !12277)
!12533 = !DILocation(line: 620, column: 8, scope: !12271)
!12534 = !DILocation(line: 622, column: 7, scope: !12275)
!12535 = !DILocation(line: 622, column: 7, scope: !12276)
!12536 = !DILocation(line: 624, column: 5, scope: !12276)
!12537 = !DILocation(line: 626, column: 8, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12271, file: !12174, line: 626, column: 8)
!12539 = !DILocation(line: 626, column: 8, scope: !12271)
!12540 = !DILocation(line: 629, column: 7, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12538, file: !12174, line: 627, column: 5)
!12542 = !DILocation(line: 632, column: 19, scope: !12541)
!12543 = !DILocation(line: 634, column: 7, scope: !12541)
!12544 = !DILocation(line: 634, column: 13, scope: !12541)
!12545 = !DILocation(line: 636, column: 13, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12547, file: !12174, line: 636, column: 12)
!12547 = distinct !DILexicalBlock(scope: !12541, file: !12174, line: 635, column: 7)
!12548 = !DILocation(line: 636, column: 27, scope: !12546)
!12549 = !DILocation(line: 636, column: 40, scope: !12546)
!12550 = !DILocation(line: 636, column: 12, scope: !12547)
!12551 = distinct !{!12551, !12543, !12552}
!12552 = !DILocation(line: 640, column: 7, scope: !12541)
!12553 = !DILocation(line: 644, column: 5, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12555, file: !12174, line: 644, column: 5)
!12555 = distinct !DILexicalBlock(scope: !12271, file: !12174, line: 644, column: 5)
!12556 = !DILocation(line: 644, column: 5, scope: !12555)
!12557 = !DILocation(line: 644, column: 5, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12554, file: !12174, line: 644, column: 5)
!12559 = !DILocation(line: 644, column: 5, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12561, file: !12174, line: 644, column: 5)
!12561 = distinct !DILexicalBlock(scope: !12554, file: !12174, line: 644, column: 5)
!12562 = !DILocation(line: 644, column: 5, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12564, file: !12174, line: 644, column: 5)
!12564 = distinct !DILexicalBlock(scope: !12561, file: !12174, line: 644, column: 5)
!12565 = !DILocation(line: 644, column: 5, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12564, file: !12174, line: 644, column: 5)
!12567 = !DILocation(line: 0, scope: !12554)
!12568 = !DILocation(line: 646, column: 27, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12271, file: !12174, line: 646, column: 8)
!12570 = !DILocation(line: 646, column: 36, scope: !12569)
!12571 = !DILocation(line: 0, scope: !12569)
!12572 = !DILocation(line: 646, column: 8, scope: !12271)
!12573 = !DILocation(line: 652, column: 13, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12569, file: !12174, line: 647, column: 5)
!12575 = !DILocation(line: 652, column: 49, scope: !12574)
!12576 = !DILocation(line: 652, column: 7, scope: !12574)
!12577 = !DILocation(line: 654, column: 13, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12579, file: !12174, line: 654, column: 12)
!12579 = distinct !DILexicalBlock(scope: !12574, file: !12174, line: 653, column: 7)
!12580 = !DILocation(line: 654, column: 27, scope: !12578)
!12581 = !DILocation(line: 654, column: 41, scope: !12578)
!12582 = !DILocation(line: 654, column: 12, scope: !12579)
!12583 = distinct !{!12583, !12576, !12584}
!12584 = !DILocation(line: 658, column: 7, scope: !12574)
!12585 = !DILocation(line: 666, column: 13, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12569, file: !12174, line: 661, column: 5)
!12587 = !DILocation(line: 666, column: 49, scope: !12586)
!12588 = !DILocation(line: 666, column: 7, scope: !12586)
!12589 = !DILocation(line: 668, column: 13, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12591, file: !12174, line: 668, column: 12)
!12591 = distinct !DILexicalBlock(scope: !12586, file: !12174, line: 667, column: 7)
!12592 = !DILocation(line: 668, column: 27, scope: !12590)
!12593 = !DILocation(line: 668, column: 41, scope: !12590)
!12594 = !DILocation(line: 668, column: 12, scope: !12591)
!12595 = distinct !{!12595, !12588, !12596}
!12596 = !DILocation(line: 672, column: 7, scope: !12586)
!12597 = !DILocation(line: 676, column: 8, scope: !12271)
!12598 = !DILocation(line: 678, column: 7, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12600, file: !12174, line: 677, column: 5)
!12600 = distinct !DILexicalBlock(scope: !12271, file: !12174, line: 676, column: 8)
!12601 = !DILocation(line: 679, column: 5, scope: !12599)
!12602 = !DILocation(line: 685, column: 31, scope: !12603)
!12603 = distinct !DILexicalBlock(scope: !12239, file: !12174, line: 685, column: 7)
!12604 = !DILocation(line: 685, column: 41, scope: !12603)
!12605 = !DILocation(line: 685, column: 7, scope: !12239)
!12606 = !DILocation(line: 688, column: 22, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12608, file: !12174, line: 688, column: 8)
!12608 = distinct !DILexicalBlock(scope: !12603, file: !12174, line: 686, column: 3)
!12609 = !DILocation(line: 688, column: 8, scope: !12608)
!12610 = !DILocation(line: 690, column: 44, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12612, file: !12174, line: 690, column: 10)
!12612 = distinct !DILexicalBlock(scope: !12607, file: !12174, line: 689, column: 5)
!12613 = !DILocation(line: 0, scope: !12611)
!12614 = !DILocation(line: 690, column: 10, scope: !12612)
!12615 = !DILocation(line: 704, column: 15, scope: !12616)
!12616 = distinct !DILexicalBlock(scope: !12611, file: !12174, line: 691, column: 7)
!12617 = !DILocation(line: 704, column: 51, scope: !12616)
!12618 = !DILocation(line: 704, column: 9, scope: !12616)
!12619 = !DILocation(line: 706, column: 15, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12621, file: !12174, line: 706, column: 14)
!12621 = distinct !DILexicalBlock(scope: !12616, file: !12174, line: 705, column: 9)
!12622 = !DILocation(line: 706, column: 29, scope: !12620)
!12623 = !DILocation(line: 706, column: 43, scope: !12620)
!12624 = !DILocation(line: 706, column: 14, scope: !12621)
!12625 = distinct !{!12625, !12618, !12626}
!12626 = !DILocation(line: 710, column: 9, scope: !12616)
!12627 = !DILocation(line: 713, column: 9, scope: !12616)
!12628 = !DILocation(line: 717, column: 9, scope: !12616)
!12629 = !DILocation(line: 720, column: 21, scope: !12616)
!12630 = !DILocation(line: 723, column: 9, scope: !12616)
!12631 = !DILocation(line: 723, column: 15, scope: !12616)
!12632 = !DILocation(line: 723, column: 51, scope: !12616)
!12633 = !DILocation(line: 725, column: 15, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12635, file: !12174, line: 725, column: 14)
!12635 = distinct !DILexicalBlock(scope: !12616, file: !12174, line: 724, column: 9)
!12636 = !DILocation(line: 725, column: 29, scope: !12634)
!12637 = !DILocation(line: 725, column: 43, scope: !12634)
!12638 = !DILocation(line: 725, column: 14, scope: !12635)
!12639 = distinct !{!12639, !12630, !12640}
!12640 = !DILocation(line: 729, column: 9, scope: !12616)
!12641 = !DILocation(line: 740, column: 15, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12611, file: !12174, line: 732, column: 7)
!12643 = !DILocation(line: 740, column: 51, scope: !12642)
!12644 = !DILocation(line: 740, column: 9, scope: !12642)
!12645 = !DILocation(line: 742, column: 15, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12647, file: !12174, line: 742, column: 14)
!12647 = distinct !DILexicalBlock(scope: !12642, file: !12174, line: 741, column: 9)
!12648 = !DILocation(line: 742, column: 29, scope: !12646)
!12649 = !DILocation(line: 742, column: 43, scope: !12646)
!12650 = !DILocation(line: 742, column: 14, scope: !12647)
!12651 = distinct !{!12651, !12644, !12652}
!12652 = !DILocation(line: 746, column: 9, scope: !12642)
!12653 = !DILocation(line: 752, column: 44, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12655, file: !12174, line: 752, column: 10)
!12655 = distinct !DILexicalBlock(scope: !12607, file: !12174, line: 750, column: 5)
!12656 = !DILocation(line: 752, column: 10, scope: !12655)
!12657 = !DILocation(line: 759, column: 27, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12654, file: !12174, line: 757, column: 7)
!12659 = !DILocation(line: 760, column: 13, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12658, file: !12174, line: 760, column: 12)
!12661 = !DILocation(line: 760, column: 77, scope: !12660)
!12662 = !DILocation(line: 760, column: 51, scope: !12660)
!12663 = !DILocation(line: 760, column: 88, scope: !12660)
!12664 = !DILocation(line: 761, column: 13, scope: !12660)
!12665 = !DILocation(line: 761, column: 77, scope: !12660)
!12666 = !DILocation(line: 761, column: 51, scope: !12660)
!12667 = !DILocation(line: 761, column: 85, scope: !12660)
!12668 = !DILocation(line: 762, column: 13, scope: !12660)
!12669 = !DILocation(line: 762, column: 77, scope: !12660)
!12670 = !DILocation(line: 762, column: 51, scope: !12660)
!12671 = !DILocation(line: 760, column: 12, scope: !12658)
!12672 = !DILocation(line: 770, column: 3, scope: !12239)
!12673 = !DILocation(line: 771, column: 1, scope: !12239)
!12674 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !12174, file: !12174, line: 1343, type: !12237, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12675)
!12675 = !{!12676, !12677, !12678, !12679}
!12676 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !12674, file: !12174, line: 1343, type: !108)
!12677 = !DILocalVariable(name: "vos", scope: !12674, file: !12174, line: 1345, type: !108)
!12678 = !DILocalVariable(name: "latency", scope: !12674, file: !12174, line: 1346, type: !108)
!12679 = !DILocalVariable(name: "tmpreg", scope: !12680, file: !12174, line: 1357, type: !409)
!12680 = distinct !DILexicalBlock(scope: !12681, file: !12174, line: 1357, column: 7)
!12681 = distinct !DILexicalBlock(scope: !12682, file: !12174, line: 1356, column: 5)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !12174, line: 1351, column: 8)
!12683 = distinct !DILexicalBlock(scope: !12684, file: !12174, line: 1350, column: 3)
!12684 = distinct !DILexicalBlock(scope: !12674, file: !12174, line: 1349, column: 7)
!12685 = !DILocation(line: 0, scope: !12674)
!12686 = !DILocation(line: 1349, column: 7, scope: !12684)
!12687 = !DILocation(line: 1349, column: 42, scope: !12684)
!12688 = !DILocation(line: 1349, column: 7, scope: !12674)
!12689 = !DILocation(line: 1351, column: 8, scope: !12682)
!12690 = !DILocation(line: 1351, column: 8, scope: !12683)
!12691 = !DILocation(line: 1353, column: 13, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12682, file: !12174, line: 1352, column: 5)
!12693 = !DILocation(line: 1354, column: 5, scope: !12692)
!12694 = !DILocation(line: 1357, column: 7, scope: !12680)
!12695 = !DILocation(line: 1357, column: 7, scope: !12681)
!12696 = !DILocation(line: 1358, column: 13, scope: !12681)
!12697 = !DILocation(line: 1359, column: 7, scope: !12681)
!12698 = !DILocation(line: 0, scope: !12682)
!12699 = !DILocation(line: 1363, column: 13, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12683, file: !12174, line: 1363, column: 8)
!12701 = !DILocation(line: 1363, column: 46, scope: !12700)
!12702 = !DILocation(line: 1369, column: 3, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12674, file: !12174, line: 1369, column: 3)
!12704 = !DILocation(line: 1369, column: 3, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12706, file: !12174, line: 1369, column: 3)
!12706 = distinct !DILexicalBlock(scope: !12703, file: !12174, line: 1369, column: 3)
!12707 = !DILocation(line: 1373, column: 6, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12674, file: !12174, line: 1373, column: 6)
!12709 = !DILocation(line: 1379, column: 1, scope: !12674)
!12710 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12174, file: !12174, line: 799, type: !12711, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12722)
!12711 = !DISubroutineType(types: !12712)
!12712 = !{!12177, !12713, !108}
!12713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12714, size: 32)
!12714 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12244, line: 304, baseType: !12715)
!12715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12244, line: 288, size: 160, elements: !12716)
!12716 = !{!12717, !12718, !12719, !12720, !12721}
!12717 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12715, file: !12244, line: 290, baseType: !108, size: 32)
!12718 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12715, file: !12244, line: 293, baseType: !108, size: 32, offset: 32)
!12719 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12715, file: !12244, line: 296, baseType: !108, size: 32, offset: 64)
!12720 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12715, file: !12244, line: 299, baseType: !108, size: 32, offset: 96)
!12721 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12715, file: !12244, line: 302, baseType: !108, size: 32, offset: 128)
!12722 = !{!12723, !12724, !12725, !12726}
!12723 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12710, file: !12174, line: 799, type: !12713)
!12724 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12710, file: !12174, line: 799, type: !108)
!12725 = !DILocalVariable(name: "tickstart", scope: !12710, file: !12174, line: 801, type: !108)
!12726 = !DILocalVariable(name: "status", scope: !12710, file: !12174, line: 802, type: !12177)
!12727 = !DILocation(line: 0, scope: !12710)
!12728 = !DILocation(line: 805, column: 24, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12710, file: !12174, line: 805, column: 6)
!12730 = !DILocation(line: 805, column: 6, scope: !12710)
!12731 = !DILocation(line: 817, column: 17, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12710, file: !12174, line: 817, column: 6)
!12733 = !DILocation(line: 817, column: 15, scope: !12732)
!12734 = !DILocation(line: 817, column: 6, scope: !12710)
!12735 = !DILocation(line: 820, column: 5, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12737, file: !12174, line: 820, column: 5)
!12737 = distinct !DILexicalBlock(scope: !12738, file: !12174, line: 820, column: 5)
!12738 = distinct !DILexicalBlock(scope: !12732, file: !12174, line: 818, column: 3)
!12739 = !DILocation(line: 820, column: 5, scope: !12737)
!12740 = !DILocation(line: 820, column: 5, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12736, file: !12174, line: 820, column: 5)
!12742 = !DILocation(line: 824, column: 8, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12738, file: !12174, line: 824, column: 8)
!12744 = !DILocation(line: 824, column: 34, scope: !12743)
!12745 = !DILocation(line: 824, column: 8, scope: !12738)
!12746 = !DILocation(line: 831, column: 27, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12710, file: !12174, line: 831, column: 6)
!12748 = !DILocation(line: 831, column: 38, scope: !12747)
!12749 = !DILocation(line: 831, column: 60, scope: !12747)
!12750 = !DILocation(line: 831, column: 6, scope: !12710)
!12751 = !DILocation(line: 834, column: 5, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12747, file: !12174, line: 832, column: 3)
!12753 = !DILocation(line: 838, column: 27, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12710, file: !12174, line: 838, column: 6)
!12755 = !DILocation(line: 835, column: 3, scope: !12752)
!12756 = !DILocation(line: 838, column: 38, scope: !12754)
!12757 = !DILocation(line: 838, column: 62, scope: !12754)
!12758 = !DILocation(line: 838, column: 6, scope: !12710)
!12759 = !DILocation(line: 843, column: 27, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12761, file: !12174, line: 843, column: 8)
!12761 = distinct !DILexicalBlock(scope: !12754, file: !12174, line: 839, column: 3)
!12762 = !DILocation(line: 843, column: 8, scope: !12761)
!12763 = !DILocation(line: 846, column: 10, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12765, file: !12174, line: 846, column: 10)
!12765 = distinct !DILexicalBlock(scope: !12760, file: !12174, line: 844, column: 5)
!12766 = !DILocation(line: 846, column: 46, scope: !12764)
!12767 = !DILocation(line: 846, column: 10, scope: !12765)
!12768 = !DILocation(line: 855, column: 10, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12770, file: !12174, line: 855, column: 10)
!12770 = distinct !DILexicalBlock(scope: !12771, file: !12174, line: 853, column: 5)
!12771 = distinct !DILexicalBlock(scope: !12760, file: !12174, line: 852, column: 13)
!12772 = !DILocation(line: 855, column: 46, scope: !12769)
!12773 = !DILocation(line: 855, column: 10, scope: !12770)
!12774 = !DILocation(line: 864, column: 10, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12776, file: !12174, line: 864, column: 10)
!12776 = distinct !DILexicalBlock(scope: !12777, file: !12174, line: 862, column: 5)
!12777 = distinct !DILexicalBlock(scope: !12771, file: !12174, line: 861, column: 13)
!12778 = !DILocation(line: 864, column: 46, scope: !12775)
!12779 = !DILocation(line: 864, column: 10, scope: !12776)
!12780 = !DILocation(line: 873, column: 10, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12782, file: !12174, line: 873, column: 10)
!12782 = distinct !DILexicalBlock(scope: !12777, file: !12174, line: 871, column: 5)
!12783 = !DILocation(line: 873, column: 46, scope: !12781)
!12784 = !DILocation(line: 873, column: 10, scope: !12782)
!12785 = !DILocation(line: 878, column: 5, scope: !12761)
!12786 = !DILocation(line: 881, column: 17, scope: !12761)
!12787 = !DILocation(line: 883, column: 27, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12761, file: !12174, line: 883, column: 8)
!12789 = !DILocation(line: 883, column: 8, scope: !12761)
!12790 = !DILocation(line: 885, column: 14, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12788, file: !12174, line: 884, column: 5)
!12792 = !DILocation(line: 885, column: 44, scope: !12791)
!12793 = !DILocation(line: 885, column: 7, scope: !12791)
!12794 = !DILocation(line: 887, column: 13, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12796, file: !12174, line: 887, column: 12)
!12796 = distinct !DILexicalBlock(scope: !12791, file: !12174, line: 886, column: 7)
!12797 = !DILocation(line: 887, column: 27, scope: !12795)
!12798 = !DILocation(line: 887, column: 41, scope: !12795)
!12799 = !DILocation(line: 887, column: 12, scope: !12796)
!12800 = distinct !{!12800, !12793, !12801}
!12801 = !DILocation(line: 891, column: 7, scope: !12791)
!12802 = !DILocation(line: 895, column: 14, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12804, file: !12174, line: 894, column: 5)
!12804 = distinct !DILexicalBlock(scope: !12788, file: !12174, line: 893, column: 13)
!12805 = !DILocation(line: 895, column: 44, scope: !12803)
!12806 = !DILocation(line: 895, column: 7, scope: !12803)
!12807 = !DILocation(line: 897, column: 13, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12809, file: !12174, line: 897, column: 12)
!12809 = distinct !DILexicalBlock(scope: !12803, file: !12174, line: 896, column: 7)
!12810 = !DILocation(line: 897, column: 27, scope: !12808)
!12811 = !DILocation(line: 897, column: 41, scope: !12808)
!12812 = !DILocation(line: 897, column: 12, scope: !12809)
!12813 = distinct !{!12813, !12806, !12814}
!12814 = !DILocation(line: 901, column: 7, scope: !12803)
!12815 = !DILocation(line: 905, column: 14, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12817, file: !12174, line: 904, column: 5)
!12817 = distinct !DILexicalBlock(scope: !12804, file: !12174, line: 903, column: 13)
!12818 = !DILocation(line: 905, column: 44, scope: !12816)
!12819 = !DILocation(line: 905, column: 7, scope: !12816)
!12820 = !DILocation(line: 907, column: 13, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12822, file: !12174, line: 907, column: 12)
!12822 = distinct !DILexicalBlock(scope: !12816, file: !12174, line: 906, column: 7)
!12823 = !DILocation(line: 907, column: 27, scope: !12821)
!12824 = !DILocation(line: 907, column: 41, scope: !12821)
!12825 = !DILocation(line: 907, column: 12, scope: !12822)
!12826 = distinct !{!12826, !12819, !12827}
!12827 = !DILocation(line: 911, column: 7, scope: !12816)
!12828 = !DILocation(line: 915, column: 13, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12817, file: !12174, line: 914, column: 5)
!12830 = !DILocation(line: 915, column: 43, scope: !12829)
!12831 = !DILocation(line: 915, column: 7, scope: !12829)
!12832 = !DILocation(line: 917, column: 13, scope: !12833)
!12833 = distinct !DILexicalBlock(scope: !12834, file: !12174, line: 917, column: 12)
!12834 = distinct !DILexicalBlock(scope: !12829, file: !12174, line: 916, column: 7)
!12835 = !DILocation(line: 917, column: 27, scope: !12833)
!12836 = !DILocation(line: 917, column: 41, scope: !12833)
!12837 = !DILocation(line: 917, column: 12, scope: !12834)
!12838 = distinct !{!12838, !12831, !12839}
!12839 = !DILocation(line: 921, column: 7, scope: !12829)
!12840 = !DILocation(line: 925, column: 17, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12710, file: !12174, line: 925, column: 6)
!12842 = !DILocation(line: 925, column: 15, scope: !12841)
!12843 = !DILocation(line: 925, column: 6, scope: !12710)
!12844 = !DILocation(line: 928, column: 5, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12846, file: !12174, line: 928, column: 5)
!12846 = distinct !DILexicalBlock(scope: !12841, file: !12174, line: 926, column: 3)
!12847 = !DILocation(line: 932, column: 8, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !12846, file: !12174, line: 932, column: 8)
!12849 = !DILocation(line: 932, column: 34, scope: !12848)
!12850 = !DILocation(line: 932, column: 8, scope: !12846)
!12851 = !DILocation(line: 939, column: 27, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12710, file: !12174, line: 939, column: 6)
!12853 = !DILocation(line: 939, column: 38, scope: !12852)
!12854 = !DILocation(line: 939, column: 61, scope: !12852)
!12855 = !DILocation(line: 939, column: 6, scope: !12710)
!12856 = !DILocation(line: 942, column: 5, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12852, file: !12174, line: 940, column: 3)
!12858 = !DILocation(line: 946, column: 27, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12710, file: !12174, line: 946, column: 6)
!12860 = !DILocation(line: 943, column: 3, scope: !12857)
!12861 = !DILocation(line: 946, column: 38, scope: !12859)
!12862 = !DILocation(line: 946, column: 61, scope: !12859)
!12863 = !DILocation(line: 946, column: 6, scope: !12710)
!12864 = !DILocation(line: 949, column: 5, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12859, file: !12174, line: 947, column: 3)
!12866 = !DILocation(line: 950, column: 3, scope: !12865)
!12867 = !DILocation(line: 953, column: 21, scope: !12710)
!12868 = !DILocation(line: 953, column: 70, scope: !12710)
!12869 = !DILocation(line: 953, column: 91, scope: !12710)
!12870 = !DILocation(line: 953, column: 50, scope: !12710)
!12871 = !DILocation(line: 953, column: 47, scope: !12710)
!12872 = !DILocation(line: 953, column: 19, scope: !12710)
!12873 = !DILocation(line: 956, column: 25, scope: !12710)
!12874 = !DILocation(line: 956, column: 12, scope: !12710)
!12875 = !DILocation(line: 958, column: 3, scope: !12710)
!12876 = !DILocation(line: 959, column: 1, scope: !12710)
!12877 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12174, file: !12174, line: 1083, type: !3564, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12878)
!12878 = !{!12879, !12880, !12881, !12882, !12883, !12884}
!12879 = !DILocalVariable(name: "tmpreg", scope: !12877, file: !12174, line: 1085, type: !108)
!12880 = !DILocalVariable(name: "pllm", scope: !12877, file: !12174, line: 1085, type: !108)
!12881 = !DILocalVariable(name: "plld", scope: !12877, file: !12174, line: 1085, type: !108)
!12882 = !DILocalVariable(name: "pllvco", scope: !12877, file: !12174, line: 1085, type: !108)
!12883 = !DILocalVariable(name: "msiclkrange", scope: !12877, file: !12174, line: 1085, type: !108)
!12884 = !DILocalVariable(name: "sysclockfreq", scope: !12877, file: !12174, line: 1085, type: !108)
!12885 = !DILocation(line: 1087, column: 17, scope: !12877)
!12886 = !DILocation(line: 0, scope: !12877)
!12887 = !DILocation(line: 1090, column: 3, scope: !12877)
!12888 = !DILocation(line: 1100, column: 7, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12890, file: !12174, line: 1098, column: 5)
!12890 = distinct !DILexicalBlock(scope: !12877, file: !12174, line: 1091, column: 3)
!12891 = !DILocation(line: 1104, column: 63, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12890, file: !12174, line: 1103, column: 5)
!12893 = !DILocation(line: 1104, column: 14, scope: !12892)
!12894 = !DILocation(line: 1105, column: 52, scope: !12892)
!12895 = !DILocation(line: 1105, column: 76, scope: !12892)
!12896 = !DILocation(line: 1106, column: 11, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12892, file: !12174, line: 1106, column: 11)
!12898 = !DILocation(line: 1106, column: 41, scope: !12897)
!12899 = !DILocation(line: 1106, column: 11, scope: !12892)
!12900 = !DILocation(line: 0, scope: !12897)
!12901 = !DILocation(line: 1117, column: 7, scope: !12892)
!12902 = !DILocation(line: 1122, column: 27, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12890, file: !12174, line: 1121, column: 5)
!12904 = !DILocation(line: 1122, column: 56, scope: !12903)
!12905 = !DILocation(line: 1123, column: 30, scope: !12903)
!12906 = !DILocation(line: 1124, column: 7, scope: !12903)
!12907 = !DILocation(line: 0, scope: !12890)
!12908 = !DILocation(line: 1127, column: 3, scope: !12877)
!12909 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12174, file: !12174, line: 1005, type: !10059, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12910)
!12910 = !{!12911, !12912, !12913, !12914, !12924}
!12911 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12909, file: !12174, line: 1005, type: !108)
!12912 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12909, file: !12174, line: 1005, type: !108)
!12913 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12909, file: !12174, line: 1005, type: !108)
!12914 = !DILocalVariable(name: "gpio", scope: !12909, file: !12174, line: 1007, type: !12915)
!12915 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12916, line: 64, baseType: !12917)
!12916 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12917 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12916, line: 48, size: 160, elements: !12918)
!12918 = !{!12919, !12920, !12921, !12922, !12923}
!12919 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12917, file: !12916, line: 50, baseType: !108, size: 32)
!12920 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12917, file: !12916, line: 53, baseType: !108, size: 32, offset: 32)
!12921 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12917, file: !12916, line: 56, baseType: !108, size: 32, offset: 64)
!12922 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12917, file: !12916, line: 59, baseType: !108, size: 32, offset: 96)
!12923 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12917, file: !12916, line: 62, baseType: !108, size: 32, offset: 128)
!12924 = !DILocalVariable(name: "tmpreg", scope: !12925, file: !12174, line: 1022, type: !409)
!12925 = distinct !DILexicalBlock(scope: !12909, file: !12174, line: 1022, column: 3)
!12926 = !DILocation(line: 0, scope: !12909)
!12927 = !DILocation(line: 1007, column: 3, scope: !12909)
!12928 = !DILocation(line: 1007, column: 20, scope: !12909)
!12929 = !DILocation(line: 1015, column: 8, scope: !12909)
!12930 = !DILocation(line: 1015, column: 18, scope: !12909)
!12931 = !DILocation(line: 1016, column: 8, scope: !12909)
!12932 = !DILocation(line: 1016, column: 18, scope: !12909)
!12933 = !DILocation(line: 1017, column: 8, scope: !12909)
!12934 = !DILocation(line: 1017, column: 18, scope: !12909)
!12935 = !DILocation(line: 1018, column: 8, scope: !12909)
!12936 = !DILocation(line: 1018, column: 18, scope: !12909)
!12937 = !DILocation(line: 1019, column: 8, scope: !12909)
!12938 = !DILocation(line: 1019, column: 18, scope: !12909)
!12939 = !DILocation(line: 1022, column: 3, scope: !12925)
!12940 = !DILocation(line: 1022, column: 3, scope: !12909)
!12941 = !DILocation(line: 1024, column: 3, scope: !12909)
!12942 = !DILocation(line: 1027, column: 3, scope: !12909)
!12943 = !DILocation(line: 1028, column: 1, scope: !12909)
!12944 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12916, file: !12916, line: 293, type: !12945, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12945 = !DISubroutineType(types: !12946)
!12946 = !{null, !3119, !12947}
!12947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12915, size: 32)
!12948 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12174, file: !12174, line: 1039, type: !334, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !251)
!12949 = !DILocation(line: 1041, column: 38, scope: !12948)
!12950 = !DILocation(line: 1042, column: 1, scope: !12948)
!12951 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12174, file: !12174, line: 1048, type: !334, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !251)
!12952 = !DILocation(line: 1050, column: 38, scope: !12951)
!12953 = !DILocation(line: 1051, column: 1, scope: !12951)
!12954 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12174, file: !12174, line: 1139, type: !3564, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !251)
!12955 = !DILocation(line: 1141, column: 10, scope: !12954)
!12956 = !DILocation(line: 1141, column: 3, scope: !12954)
!12957 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12174, file: !12174, line: 1150, type: !3564, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !251)
!12958 = !DILocation(line: 1153, column: 11, scope: !12957)
!12959 = !DILocation(line: 1153, column: 56, scope: !12957)
!12960 = !DILocation(line: 1153, column: 79, scope: !12957)
!12961 = !DILocation(line: 1153, column: 36, scope: !12957)
!12962 = !DILocation(line: 1153, column: 33, scope: !12957)
!12963 = !DILocation(line: 1153, column: 3, scope: !12957)
!12964 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12174, file: !12174, line: 1162, type: !3564, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !251)
!12965 = !DILocation(line: 1165, column: 11, scope: !12964)
!12966 = !DILocation(line: 1165, column: 55, scope: !12964)
!12967 = !DILocation(line: 1165, column: 78, scope: !12964)
!12968 = !DILocation(line: 1165, column: 35, scope: !12964)
!12969 = !DILocation(line: 1165, column: 32, scope: !12964)
!12970 = !DILocation(line: 1165, column: 3, scope: !12964)
!12971 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12174, file: !12174, line: 1175, type: !12972, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12974)
!12972 = !DISubroutineType(types: !12973)
!12973 = !{null, !12242}
!12974 = !{!12975}
!12975 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12971, file: !12174, line: 1175, type: !12242)
!12976 = !DILocation(line: 0, scope: !12971)
!12977 = !DILocation(line: 1181, column: 22, scope: !12971)
!12978 = !DILocation(line: 1181, column: 37, scope: !12971)
!12979 = !DILocation(line: 1186, column: 12, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12971, file: !12174, line: 1186, column: 6)
!12981 = !DILocation(line: 1186, column: 15, scope: !12980)
!12982 = !DILocation(line: 1186, column: 31, scope: !12980)
!12983 = !DILocation(line: 1186, column: 6, scope: !12971)
!12984 = !DILocation(line: 1188, column: 24, scope: !12985)
!12985 = distinct !DILexicalBlock(scope: !12980, file: !12174, line: 1187, column: 3)
!12986 = !DILocation(line: 1188, column: 33, scope: !12985)
!12987 = !DILocation(line: 1189, column: 3, scope: !12985)
!12988 = !DILocation(line: 1190, column: 17, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12980, file: !12174, line: 1190, column: 11)
!12990 = !DILocation(line: 1190, column: 20, scope: !12989)
!12991 = !DILocation(line: 1190, column: 35, scope: !12989)
!12992 = !DILocation(line: 0, scope: !12989)
!12993 = !DILocation(line: 1190, column: 11, scope: !12980)
!12994 = !DILocation(line: 1192, column: 33, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12989, file: !12174, line: 1191, column: 3)
!12996 = !DILocation(line: 1193, column: 3, scope: !12995)
!12997 = !DILocation(line: 1196, column: 33, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12989, file: !12174, line: 1195, column: 3)
!12999 = !DILocation(line: 1200, column: 12, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12971, file: !12174, line: 1200, column: 6)
!13001 = !DILocation(line: 1200, column: 15, scope: !13000)
!13002 = !DILocation(line: 1206, column: 24, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !13000, file: !12174, line: 1205, column: 3)
!13004 = !DILocation(line: 1206, column: 33, scope: !13003)
!13005 = !DILocation(line: 1209, column: 61, scope: !12971)
!13006 = !DILocation(line: 1209, column: 88, scope: !12971)
!13007 = !DILocation(line: 1209, column: 22, scope: !12971)
!13008 = !DILocation(line: 1209, column: 42, scope: !12971)
!13009 = !DILocation(line: 1212, column: 12, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !12971, file: !12174, line: 1212, column: 6)
!13011 = !DILocation(line: 1212, column: 6, scope: !12971)
!13012 = !DILocation(line: 1218, column: 24, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !13010, file: !12174, line: 1217, column: 3)
!13014 = !DILocation(line: 1218, column: 33, scope: !13013)
!13015 = !DILocation(line: 1221, column: 61, scope: !12971)
!13016 = !DILocation(line: 1221, column: 88, scope: !12971)
!13017 = !DILocation(line: 1221, column: 22, scope: !12971)
!13018 = !DILocation(line: 1221, column: 42, scope: !12971)
!13019 = !DILocation(line: 1222, column: 55, scope: !12971)
!13020 = !DILocation(line: 1222, column: 61, scope: !12971)
!13021 = !DILocation(line: 1222, column: 22, scope: !12971)
!13022 = !DILocation(line: 1222, column: 36, scope: !12971)
!13023 = !DILocation(line: 1225, column: 12, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !12971, file: !12174, line: 1225, column: 6)
!13025 = !DILocation(line: 1225, column: 16, scope: !13024)
!13026 = !DILocation(line: 1225, column: 33, scope: !13024)
!13027 = !DILocation(line: 1225, column: 6, scope: !12971)
!13028 = !DILocation(line: 1227, column: 24, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !13024, file: !12174, line: 1226, column: 3)
!13030 = !DILocation(line: 1227, column: 33, scope: !13029)
!13031 = !DILocation(line: 1228, column: 3, scope: !13029)
!13032 = !DILocation(line: 1229, column: 17, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13024, file: !12174, line: 1229, column: 11)
!13034 = !DILocation(line: 1229, column: 21, scope: !13033)
!13035 = !DILocation(line: 1229, column: 37, scope: !13033)
!13036 = !DILocation(line: 0, scope: !13033)
!13037 = !DILocation(line: 1229, column: 11, scope: !13024)
!13038 = !DILocation(line: 1231, column: 33, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13033, file: !12174, line: 1230, column: 3)
!13040 = !DILocation(line: 1232, column: 3, scope: !13039)
!13041 = !DILocation(line: 1235, column: 33, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13033, file: !12174, line: 1234, column: 3)
!13043 = !DILocation(line: 1239, column: 12, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !12971, file: !12174, line: 1239, column: 6)
!13045 = !DILocation(line: 1239, column: 16, scope: !13044)
!13046 = !DILocation(line: 1245, column: 24, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13044, file: !12174, line: 1244, column: 3)
!13048 = !DILocation(line: 1245, column: 33, scope: !13047)
!13049 = !DILocation(line: 1250, column: 12, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !12971, file: !12174, line: 1250, column: 6)
!13051 = !DILocation(line: 1250, column: 15, scope: !13050)
!13052 = !DILocation(line: 1250, column: 30, scope: !13050)
!13053 = !DILocation(line: 1250, column: 6, scope: !12971)
!13054 = !DILocation(line: 1256, column: 28, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13050, file: !12174, line: 1255, column: 3)
!13056 = !DILocation(line: 1256, column: 37, scope: !13055)
!13057 = !DILocation(line: 1258, column: 54, scope: !12971)
!13058 = !DILocation(line: 1258, column: 59, scope: !12971)
!13059 = !DILocation(line: 1258, column: 26, scope: !12971)
!13060 = !DILocation(line: 1258, column: 36, scope: !12971)
!13061 = !DILocation(line: 1259, column: 51, scope: !12971)
!13062 = !DILocation(line: 1259, column: 56, scope: !12971)
!13063 = !DILocation(line: 1259, column: 26, scope: !12971)
!13064 = !DILocation(line: 1259, column: 33, scope: !12971)
!13065 = !DILocation(line: 1260, column: 51, scope: !12971)
!13066 = !DILocation(line: 1260, column: 56, scope: !12971)
!13067 = !DILocation(line: 1260, column: 26, scope: !12971)
!13068 = !DILocation(line: 1260, column: 33, scope: !12971)
!13069 = !DILocation(line: 1261, column: 1, scope: !12971)
!13070 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12174, file: !12174, line: 1271, type: !13071, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !13073)
!13071 = !DISubroutineType(types: !13072)
!13072 = !{null, !12713, !1045}
!13073 = !{!13074, !13075}
!13074 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13070, file: !12174, line: 1271, type: !12713)
!13075 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13070, file: !12174, line: 1271, type: !1045)
!13076 = !DILocation(line: 0, scope: !13070)
!13077 = !DILocation(line: 1278, column: 22, scope: !13070)
!13078 = !DILocation(line: 1278, column: 32, scope: !13070)
!13079 = !DILocation(line: 1281, column: 53, scope: !13070)
!13080 = !DILocation(line: 1281, column: 58, scope: !13070)
!13081 = !DILocation(line: 1281, column: 22, scope: !13070)
!13082 = !DILocation(line: 1281, column: 35, scope: !13070)
!13083 = !DILocation(line: 1284, column: 54, scope: !13070)
!13084 = !DILocation(line: 1284, column: 59, scope: !13070)
!13085 = !DILocation(line: 1284, column: 22, scope: !13070)
!13086 = !DILocation(line: 1284, column: 36, scope: !13070)
!13087 = !DILocation(line: 1287, column: 55, scope: !13070)
!13088 = !DILocation(line: 1287, column: 60, scope: !13070)
!13089 = !DILocation(line: 1287, column: 22, scope: !13070)
!13090 = !DILocation(line: 1287, column: 37, scope: !13070)
!13091 = !DILocation(line: 1290, column: 56, scope: !13070)
!13092 = !DILocation(line: 1290, column: 79, scope: !13070)
!13093 = !DILocation(line: 1290, column: 22, scope: !13070)
!13094 = !DILocation(line: 1290, column: 37, scope: !13070)
!13095 = !DILocation(line: 1293, column: 16, scope: !13070)
!13096 = !DILocation(line: 1293, column: 14, scope: !13070)
!13097 = !DILocation(line: 1294, column: 1, scope: !13070)
!13098 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12174, file: !12174, line: 1301, type: !334, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !251)
!13099 = !DILocation(line: 1304, column: 6, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13098, file: !12174, line: 1304, column: 6)
!13101 = !DILocation(line: 1304, column: 6, scope: !13098)
!13102 = !DILocation(line: 1307, column: 5, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13100, file: !12174, line: 1305, column: 3)
!13104 = !DILocation(line: 1310, column: 5, scope: !13103)
!13105 = !DILocation(line: 1311, column: 3, scope: !13103)
!13106 = !DILocation(line: 1312, column: 1, scope: !13098)
!13107 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12174, file: !12174, line: 1318, type: !334, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !251)
!13108 = !DILocation(line: 1323, column: 1, scope: !13107)
!13109 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13110, file: !13110, line: 147, type: !6970, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13111)
!13110 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13111 = !{!13112}
!13112 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13109, file: !13110, line: 147, type: !108)
!13113 = !DILocation(line: 0, scope: !13109)
!13114 = !DILocation(line: 150, column: 3, scope: !13109)
!13115 = !DILocation(line: 151, column: 1, scope: !13109)
!13116 = distinct !DISubprogram(name: "LL_InitTick", scope: !13117, file: !13117, line: 222, type: !10585, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13118)
!13117 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13118 = !{!13119, !13120}
!13119 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13116, file: !13117, line: 222, type: !108)
!13120 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13116, file: !13117, line: 222, type: !108)
!13121 = !DILocation(line: 0, scope: !13116)
!13122 = !DILocation(line: 225, column: 46, scope: !13116)
!13123 = !DILocation(line: 225, column: 55, scope: !13116)
!13124 = !DILocation(line: 225, column: 18, scope: !13116)
!13125 = !DILocation(line: 226, column: 18, scope: !13116)
!13126 = !DILocation(line: 227, column: 18, scope: !13116)
!13127 = !DILocation(line: 229, column: 1, scope: !13116)
!13128 = distinct !DISubprogram(name: "LL_mDelay", scope: !13110, file: !13110, line: 163, type: !6970, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13129)
!13129 = !{!13130, !13131, !13132}
!13130 = !DILocalVariable(name: "Delay", arg: 1, scope: !13128, file: !13110, line: 163, type: !108)
!13131 = !DILocalVariable(name: "tmp", scope: !13128, file: !13110, line: 165, type: !409)
!13132 = !DILocalVariable(name: "tmpDelay", scope: !13128, file: !13110, line: 166, type: !108)
!13133 = !DILocation(line: 0, scope: !13128)
!13134 = !DILocation(line: 165, column: 3, scope: !13128)
!13135 = !DILocation(line: 165, column: 18, scope: !13128)
!13136 = !DILocation(line: 165, column: 33, scope: !13128)
!13137 = !DILocation(line: 169, column: 10, scope: !13128)
!13138 = !DILocation(line: 172, column: 15, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13128, file: !13110, line: 172, column: 6)
!13140 = !DILocation(line: 177, column: 3, scope: !13128)
!13141 = !DILocation(line: 179, column: 18, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !13143, file: !13110, line: 179, column: 8)
!13143 = distinct !DILexicalBlock(scope: !13128, file: !13110, line: 178, column: 3)
!13144 = !DILocation(line: 177, column: 19, scope: !13128)
!13145 = !DILocation(line: 184, column: 1, scope: !13128)
!13146 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13110, file: !13110, line: 227, type: !6970, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13147)
!13147 = !{!13148}
!13148 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13146, file: !13110, line: 227, type: !108)
!13149 = !DILocation(line: 0, scope: !13146)
!13150 = !DILocation(line: 230, column: 19, scope: !13146)
!13151 = !DILocation(line: 231, column: 1, scope: !13146)
!13152 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13110, file: !13110, line: 242, type: !13153, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13156)
!13153 = !DISubroutineType(types: !13154)
!13154 = !{!13155, !108}
!13155 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1009, line: 194, baseType: !1008)
!13156 = !{!13157, !13158, !13159}
!13157 = !DILocalVariable(name: "Frequency", arg: 1, scope: !13152, file: !13110, line: 242, type: !108)
!13158 = !DILocalVariable(name: "status", scope: !13152, file: !13110, line: 244, type: !13155)
!13159 = !DILocalVariable(name: "latency", scope: !13152, file: !13110, line: 246, type: !108)
!13160 = !DILocation(line: 0, scope: !13152)
!13161 = !DILocation(line: 249, column: 25, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13152, file: !13110, line: 249, column: 7)
!13163 = !DILocation(line: 255, column: 9, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13165, file: !13110, line: 255, column: 9)
!13165 = distinct !DILexicalBlock(scope: !13162, file: !13110, line: 254, column: 3)
!13166 = !DILocation(line: 255, column: 41, scope: !13164)
!13167 = !DILocation(line: 255, column: 9, scope: !13165)
!13168 = !DILocation(line: 257, column: 21, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13170, file: !13110, line: 257, column: 11)
!13170 = distinct !DILexicalBlock(scope: !13164, file: !13110, line: 256, column: 5)
!13171 = !DILocation(line: 284, column: 9, scope: !13165)
!13172 = !DILocation(line: 264, column: 14, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13164, file: !13110, line: 264, column: 14)
!13174 = !DILocation(line: 264, column: 46, scope: !13173)
!13175 = !DILocation(line: 264, column: 14, scope: !13164)
!13176 = !DILocation(line: 266, column: 21, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13178, file: !13110, line: 266, column: 11)
!13178 = distinct !DILexicalBlock(scope: !13173, file: !13110, line: 265, column: 5)
!13179 = !DILocation(line: 275, column: 21, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13181, file: !13110, line: 275, column: 11)
!13181 = distinct !DILexicalBlock(scope: !13173, file: !13110, line: 274, column: 5)
!13182 = !DILocation(line: 286, column: 7, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13184, file: !13110, line: 285, column: 5)
!13184 = distinct !DILexicalBlock(scope: !13165, file: !13110, line: 284, column: 9)
!13185 = !DILocation(line: 287, column: 5, scope: !13183)
!13186 = !DILocation(line: 289, column: 5, scope: !13165)
!13187 = !DILocation(line: 293, column: 9, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13165, file: !13110, line: 293, column: 9)
!13189 = !DILocation(line: 293, column: 31, scope: !13188)
!13190 = !DILocation(line: 293, column: 9, scope: !13165)
!13191 = !DILocation(line: 298, column: 3, scope: !13152)
!13192 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !6984, file: !6984, line: 285, type: !3564, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !251)
!13193 = !DILocation(line: 287, column: 21, scope: !13192)
!13194 = !DILocation(line: 287, column: 3, scope: !13192)
!13195 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !10584, file: !10584, line: 1897, type: !334, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !251)
!13196 = !DILocation(line: 1899, column: 3, scope: !13195)
!13197 = !DILocation(line: 1900, column: 1, scope: !13195)
!13198 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !10584, file: !10584, line: 1843, type: !6970, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13199)
!13199 = !{!13200}
!13200 = !DILocalVariable(name: "Latency", arg: 1, scope: !13198, file: !10584, line: 1843, type: !108)
!13201 = !DILocation(line: 0, scope: !13198)
!13202 = !DILocation(line: 1845, column: 3, scope: !13198)
!13203 = !DILocation(line: 1846, column: 1, scope: !13198)
!13204 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !10584, file: !10584, line: 1855, type: !3564, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !251)
!13205 = !DILocation(line: 1857, column: 21, scope: !13204)
!13206 = !DILocation(line: 1857, column: 3, scope: !13204)
!13207 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13110, file: !13110, line: 323, type: !13208, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13223)
!13208 = !DISubroutineType(types: !13209)
!13209 = !{!13155, !13210, !13216}
!13210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13211, size: 32)
!13211 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13117, line: 103, baseType: !13212)
!13212 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13117, line: 90, size: 64, elements: !13213)
!13213 = !{!13214, !13215}
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !13212, file: !13117, line: 92, baseType: !108, size: 32)
!13215 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !13212, file: !13117, line: 98, baseType: !108, size: 32, offset: 32)
!13216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13217, size: 32)
!13217 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13117, line: 128, baseType: !13218)
!13218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13117, line: 108, size: 96, elements: !13219)
!13219 = !{!13220, !13221, !13222}
!13220 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13218, file: !13117, line: 110, baseType: !108, size: 32)
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13218, file: !13117, line: 116, baseType: !108, size: 32, offset: 32)
!13222 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13218, file: !13117, line: 122, baseType: !108, size: 32, offset: 64)
!13223 = !{!13224, !13225, !13226, !13227}
!13224 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13207, file: !13110, line: 323, type: !13210)
!13225 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13207, file: !13110, line: 324, type: !13216)
!13226 = !DILocalVariable(name: "status", scope: !13207, file: !13110, line: 326, type: !13155)
!13227 = !DILocalVariable(name: "pllfreq", scope: !13207, file: !13110, line: 327, type: !108)
!13228 = !DILocation(line: 0, scope: !13207)
!13229 = !DILocation(line: 330, column: 7, scope: !13230)
!13230 = distinct !DILexicalBlock(scope: !13207, file: !13110, line: 330, column: 7)
!13231 = !DILocation(line: 330, column: 26, scope: !13230)
!13232 = !DILocation(line: 330, column: 7, scope: !13207)
!13233 = !DILocation(line: 333, column: 15, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13230, file: !13110, line: 331, column: 3)
!13235 = !DILocation(line: 336, column: 9, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13234, file: !13110, line: 336, column: 9)
!13237 = !DILocation(line: 336, column: 30, scope: !13236)
!13238 = !DILocation(line: 336, column: 9, scope: !13234)
!13239 = !DILocation(line: 338, column: 7, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13236, file: !13110, line: 337, column: 5)
!13241 = !DILocation(line: 339, column: 7, scope: !13240)
!13242 = !DILocation(line: 339, column: 14, scope: !13240)
!13243 = !DILocation(line: 339, column: 35, scope: !13240)
!13244 = distinct !{!13244, !13241, !13245}
!13245 = !DILocation(line: 342, column: 7, scope: !13240)
!13246 = !DILocation(line: 346, column: 76, scope: !13234)
!13247 = !DILocation(line: 346, column: 105, scope: !13234)
!13248 = !DILocation(line: 346, column: 5, scope: !13234)
!13249 = !DILocation(line: 349, column: 14, scope: !13234)
!13250 = !DILocation(line: 350, column: 3, scope: !13234)
!13251 = !DILocation(line: 0, scope: !13230)
!13252 = !DILocation(line: 357, column: 3, scope: !13207)
!13253 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13110, file: !13110, line: 487, type: !13254, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13256)
!13254 = !DISubroutineType(types: !13255)
!13255 = !{!13155}
!13256 = !{!13257}
!13257 = !DILocalVariable(name: "status", scope: !13253, file: !13110, line: 489, type: !13155)
!13258 = !DILocation(line: 0, scope: !13253)
!13259 = !DILocation(line: 492, column: 7, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13253, file: !13110, line: 492, column: 7)
!13261 = !DILocation(line: 492, column: 28, scope: !13260)
!13262 = !DILocation(line: 492, column: 7, scope: !13253)
!13263 = !DILocation(line: 498, column: 3, scope: !13253)
!13264 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13110, file: !13110, line: 457, type: !13265, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13267)
!13265 = !DISubroutineType(types: !13266)
!13266 = !{!108, !108, !13210}
!13267 = !{!13268, !13269, !13270}
!13268 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13264, file: !13110, line: 457, type: !108)
!13269 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13264, file: !13110, line: 457, type: !13210)
!13270 = !DILocalVariable(name: "pllfreq", scope: !13264, file: !13110, line: 459, type: !108)
!13271 = !DILocation(line: 0, scope: !13264)
!13272 = !DILocation(line: 470, column: 68, scope: !13264)
!13273 = !DILocation(line: 470, column: 75, scope: !13264)
!13274 = !DILocation(line: 470, column: 35, scope: !13264)
!13275 = !DILocation(line: 470, column: 34, scope: !13264)
!13276 = !DILocation(line: 470, column: 32, scope: !13264)
!13277 = !DILocation(line: 475, column: 46, scope: !13264)
!13278 = !DILocation(line: 475, column: 53, scope: !13264)
!13279 = !DILocation(line: 475, column: 76, scope: !13264)
!13280 = !DILocation(line: 475, column: 21, scope: !13264)
!13281 = !DILocation(line: 478, column: 3, scope: !13264)
!13282 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9936, file: !9936, line: 612, type: !3564, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !251)
!13283 = !DILocation(line: 614, column: 12, scope: !13282)
!13284 = !DILocation(line: 614, column: 11, scope: !13282)
!13285 = !DILocation(line: 614, column: 3, scope: !13282)
!13286 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9936, file: !9936, line: 592, type: !334, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !251)
!13287 = !DILocation(line: 594, column: 3, scope: !13286)
!13288 = !DILocation(line: 595, column: 1, scope: !13286)
!13289 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9936, file: !9936, line: 1219, type: !10059, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13290)
!13290 = !{!13291, !13292, !13293}
!13291 = !DILocalVariable(name: "Source", arg: 1, scope: !13289, file: !9936, line: 1219, type: !108)
!13292 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !13289, file: !9936, line: 1219, type: !108)
!13293 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !13289, file: !9936, line: 1219, type: !108)
!13294 = !DILocation(line: 0, scope: !13289)
!13295 = !DILocation(line: 1221, column: 3, scope: !13289)
!13296 = !DILocation(line: 1222, column: 1, scope: !13289)
!13297 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13110, file: !13110, line: 510, type: !13298, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13300)
!13298 = !DISubroutineType(types: !13299)
!13299 = !{!13155, !108, !13216}
!13300 = !{!13301, !13302, !13303, !13304}
!13301 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13297, file: !13110, line: 510, type: !108)
!13302 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13297, file: !13110, line: 510, type: !13216)
!13303 = !DILocalVariable(name: "status", scope: !13297, file: !13110, line: 512, type: !13155)
!13304 = !DILocalVariable(name: "hclk_frequency", scope: !13297, file: !13110, line: 513, type: !108)
!13305 = !DILocation(line: 0, scope: !13297)
!13306 = !DILocation(line: 520, column: 20, scope: !13297)
!13307 = !DILocation(line: 523, column: 7, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13297, file: !13110, line: 523, column: 7)
!13309 = !DILocation(line: 523, column: 23, scope: !13308)
!13310 = !DILocation(line: 523, column: 7, scope: !13297)
!13311 = !DILocation(line: 526, column: 14, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13308, file: !13110, line: 524, column: 3)
!13313 = !DILocation(line: 530, column: 14, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13297, file: !13110, line: 530, column: 7)
!13315 = !DILocation(line: 530, column: 7, scope: !13297)
!13316 = !DILocation(line: 533, column: 5, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13314, file: !13110, line: 531, column: 3)
!13318 = !DILocation(line: 534, column: 5, scope: !13317)
!13319 = !DILocation(line: 534, column: 12, scope: !13317)
!13320 = !DILocation(line: 534, column: 33, scope: !13317)
!13321 = distinct !{!13321, !13318, !13322}
!13322 = !DILocation(line: 537, column: 5, scope: !13317)
!13323 = !DILocation(line: 540, column: 49, scope: !13317)
!13324 = !DILocation(line: 540, column: 5, scope: !13317)
!13325 = !DILocation(line: 541, column: 5, scope: !13317)
!13326 = !DILocation(line: 542, column: 5, scope: !13317)
!13327 = !DILocation(line: 542, column: 12, scope: !13317)
!13328 = !DILocation(line: 542, column: 37, scope: !13317)
!13329 = distinct !{!13329, !13326, !13330}
!13330 = !DILocation(line: 545, column: 5, scope: !13317)
!13331 = !DILocation(line: 548, column: 50, scope: !13317)
!13332 = !DILocation(line: 548, column: 5, scope: !13317)
!13333 = !DILocation(line: 549, column: 50, scope: !13317)
!13334 = !DILocation(line: 549, column: 5, scope: !13317)
!13335 = !DILocation(line: 550, column: 3, scope: !13317)
!13336 = !DILocation(line: 553, column: 7, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13297, file: !13110, line: 553, column: 7)
!13338 = !DILocation(line: 553, column: 23, scope: !13337)
!13339 = !DILocation(line: 553, column: 7, scope: !13297)
!13340 = !DILocation(line: 556, column: 14, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13337, file: !13110, line: 554, column: 3)
!13342 = !DILocation(line: 557, column: 3, scope: !13341)
!13343 = !DILocation(line: 560, column: 14, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13297, file: !13110, line: 560, column: 7)
!13345 = !DILocation(line: 560, column: 7, scope: !13297)
!13346 = !DILocation(line: 562, column: 5, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13344, file: !13110, line: 561, column: 3)
!13348 = !DILocation(line: 563, column: 3, scope: !13347)
!13349 = !DILocation(line: 565, column: 3, scope: !13297)
!13350 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9936, file: !9936, line: 1169, type: !334, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !251)
!13351 = !DILocation(line: 1171, column: 3, scope: !13350)
!13352 = !DILocation(line: 1172, column: 1, scope: !13350)
!13353 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9936, file: !9936, line: 1190, type: !3564, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !251)
!13354 = !DILocation(line: 1192, column: 12, scope: !13353)
!13355 = !DILocation(line: 1192, column: 11, scope: !13353)
!13356 = !DILocation(line: 1192, column: 3, scope: !13353)
!13357 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9936, file: !9936, line: 944, type: !6970, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13358)
!13358 = !{!13359}
!13359 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13357, file: !9936, line: 944, type: !108)
!13360 = !DILocation(line: 0, scope: !13357)
!13361 = !DILocation(line: 946, column: 3, scope: !13357)
!13362 = !DILocation(line: 947, column: 1, scope: !13357)
!13363 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9936, file: !9936, line: 910, type: !6970, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13364)
!13364 = !{!13365}
!13365 = !DILocalVariable(name: "Source", arg: 1, scope: !13363, file: !9936, line: 910, type: !108)
!13366 = !DILocation(line: 0, scope: !13363)
!13367 = !DILocation(line: 912, column: 3, scope: !13363)
!13368 = !DILocation(line: 913, column: 1, scope: !13363)
!13369 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9936, file: !9936, line: 924, type: !3564, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !251)
!13370 = !DILocation(line: 926, column: 21, scope: !13369)
!13371 = !DILocation(line: 926, column: 3, scope: !13369)
!13372 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9936, file: !9936, line: 960, type: !6970, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13373)
!13373 = !{!13374}
!13374 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13372, file: !9936, line: 960, type: !108)
!13375 = !DILocation(line: 0, scope: !13372)
!13376 = !DILocation(line: 962, column: 3, scope: !13372)
!13377 = !DILocation(line: 963, column: 1, scope: !13372)
!13378 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9936, file: !9936, line: 976, type: !6970, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13379)
!13379 = !{!13380}
!13380 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13378, file: !9936, line: 976, type: !108)
!13381 = !DILocation(line: 0, scope: !13378)
!13382 = !DILocation(line: 978, column: 3, scope: !13378)
!13383 = !DILocation(line: 979, column: 1, scope: !13378)
!13384 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13110, file: !13110, line: 385, type: !13385, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !13387)
!13385 = !DISubroutineType(types: !13386)
!13386 = !{!13155, !108, !108, !13210, !13216}
!13387 = !{!13388, !13389, !13390, !13391, !13392, !13393}
!13388 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13384, file: !13110, line: 385, type: !108)
!13389 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13384, file: !13110, line: 385, type: !108)
!13390 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13384, file: !13110, line: 386, type: !13210)
!13391 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13384, file: !13110, line: 386, type: !13216)
!13392 = !DILocalVariable(name: "status", scope: !13384, file: !13110, line: 388, type: !13155)
!13393 = !DILocalVariable(name: "pllfreq", scope: !13384, file: !13110, line: 389, type: !108)
!13394 = !DILocation(line: 0, scope: !13384)
!13395 = !DILocation(line: 396, column: 7, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13384, file: !13110, line: 396, column: 7)
!13397 = !DILocation(line: 396, column: 26, scope: !13396)
!13398 = !DILocation(line: 396, column: 7, scope: !13384)
!13399 = !DILocation(line: 400, column: 15, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13396, file: !13110, line: 397, column: 3)
!13401 = !DILocation(line: 403, column: 9, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13400, file: !13110, line: 403, column: 9)
!13403 = !DILocation(line: 403, column: 30, scope: !13402)
!13404 = !DILocation(line: 403, column: 9, scope: !13400)
!13405 = !DILocation(line: 406, column: 21, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13407, file: !13110, line: 406, column: 11)
!13407 = distinct !DILexicalBlock(scope: !13402, file: !13110, line: 404, column: 5)
!13408 = !DILocation(line: 406, column: 11, scope: !13407)
!13409 = !DILocation(line: 408, column: 9, scope: !13410)
!13410 = distinct !DILexicalBlock(scope: !13406, file: !13110, line: 407, column: 7)
!13411 = !DILocation(line: 409, column: 7, scope: !13410)
!13412 = !DILocation(line: 412, column: 9, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13406, file: !13110, line: 411, column: 7)
!13414 = !DILocation(line: 416, column: 7, scope: !13407)
!13415 = !DILocation(line: 417, column: 7, scope: !13407)
!13416 = !DILocation(line: 417, column: 14, scope: !13407)
!13417 = !DILocation(line: 417, column: 35, scope: !13407)
!13418 = distinct !{!13418, !13415, !13419}
!13419 = !DILocation(line: 420, column: 7, scope: !13407)
!13420 = !DILocation(line: 424, column: 78, scope: !13400)
!13421 = !DILocation(line: 424, column: 107, scope: !13400)
!13422 = !DILocation(line: 424, column: 7, scope: !13400)
!13423 = !DILocation(line: 427, column: 14, scope: !13400)
!13424 = !DILocation(line: 428, column: 3, scope: !13400)
!13425 = !DILocation(line: 0, scope: !13396)
!13426 = !DILocation(line: 435, column: 3, scope: !13384)
!13427 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9936, file: !9936, line: 545, type: !3564, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !251)
!13428 = !DILocation(line: 547, column: 12, scope: !13427)
!13429 = !DILocation(line: 547, column: 11, scope: !13427)
!13430 = !DILocation(line: 547, column: 3, scope: !13427)
!13431 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9936, file: !9936, line: 505, type: !334, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !251)
!13432 = !DILocation(line: 507, column: 3, scope: !13431)
!13433 = !DILocation(line: 508, column: 1, scope: !13431)
!13434 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9936, file: !9936, line: 515, type: !334, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !251)
!13435 = !DILocation(line: 517, column: 3, scope: !13434)
!13436 = !DILocation(line: 518, column: 1, scope: !13434)
!13437 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9936, file: !9936, line: 525, type: !334, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3133, retainedNodes: !251)
!13438 = !DILocation(line: 527, column: 3, scope: !13437)
!13439 = !DILocation(line: 528, column: 1, scope: !13437)
!13440 = distinct !DISubprogram(name: "z_device_state_init", scope: !13441, file: !13441, line: 23, type: !334, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !13442)
!13441 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13442 = !{!13443}
!13443 = !DILocalVariable(name: "dev", scope: !13440, file: !13441, line: 25, type: !13444)
!13444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13445, size: 32)
!13445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13446)
!13446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 378, size: 192, elements: !13447)
!13447 = !{!13448, !13449, !13450, !13451, !13457, !13458}
!13448 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13446, file: !442, line: 380, baseType: !337, size: 32)
!13449 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13446, file: !442, line: 382, baseType: !13, size: 32, offset: 32)
!13450 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13446, file: !442, line: 384, baseType: !13, size: 32, offset: 64)
!13451 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13446, file: !442, line: 386, baseType: !13452, size: 32, offset: 96)
!13452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13453, size: 32)
!13453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !442, line: 351, size: 16, elements: !13454)
!13454 = !{!13455, !13456}
!13455 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13453, file: !442, line: 359, baseType: !185, size: 8)
!13456 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13453, file: !442, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13457 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13446, file: !442, line: 388, baseType: !102, size: 32, offset: 128)
!13458 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13446, file: !442, line: 396, baseType: !455, size: 32, offset: 160)
!13459 = !DILocation(line: 0, scope: !13440)
!13460 = !DILocation(line: 31, column: 1, scope: !13440)
!13461 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13441, file: !13441, line: 33, type: !13462, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !13464)
!13462 = !DISubroutineType(types: !13463)
!13463 = !{!13444, !337}
!13464 = !{!13465, !13466}
!13465 = !DILocalVariable(name: "name", arg: 1, scope: !13461, file: !13441, line: 33, type: !337)
!13466 = !DILocalVariable(name: "dev", scope: !13461, file: !13441, line: 35, type: !13444)
!13467 = !DILocation(line: 0, scope: !13461)
!13468 = !DILocation(line: 40, column: 12, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13461, file: !13441, line: 40, column: 6)
!13470 = !DILocation(line: 40, column: 21, scope: !13469)
!13471 = !DILocation(line: 40, column: 25, scope: !13469)
!13472 = !DILocation(line: 40, column: 33, scope: !13469)
!13473 = !DILocation(line: 40, column: 6, scope: !13461)
!13474 = !DILocation(line: 55, column: 2, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13461, file: !13441, line: 55, column: 2)
!13476 = !DILocation(line: 50, column: 7, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13478, file: !13441, line: 50, column: 7)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !13441, line: 49, column: 57)
!13479 = distinct !DILexicalBlock(scope: !13480, file: !13441, line: 49, column: 2)
!13480 = distinct !DILexicalBlock(scope: !13461, file: !13441, line: 49, column: 2)
!13481 = !DILocation(line: 50, column: 30, scope: !13477)
!13482 = !DILocation(line: 50, column: 39, scope: !13477)
!13483 = !DILocation(line: 50, column: 44, scope: !13477)
!13484 = !DILocation(line: 50, column: 7, scope: !13478)
!13485 = !DILocation(line: 49, column: 53, scope: !13479)
!13486 = !DILocation(line: 49, column: 33, scope: !13479)
!13487 = !DILocation(line: 49, column: 2, scope: !13480)
!13488 = distinct !{!13488, !13487, !13489}
!13489 = !DILocation(line: 53, column: 2, scope: !13480)
!13490 = !DILocation(line: 56, column: 7, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13492, file: !13441, line: 56, column: 7)
!13492 = distinct !DILexicalBlock(scope: !13493, file: !13441, line: 55, column: 57)
!13493 = distinct !DILexicalBlock(scope: !13475, file: !13441, line: 55, column: 2)
!13494 = !DILocation(line: 56, column: 30, scope: !13491)
!13495 = !DILocation(line: 56, column: 52, scope: !13491)
!13496 = !DILocation(line: 56, column: 34, scope: !13491)
!13497 = !DILocation(line: 56, column: 58, scope: !13491)
!13498 = !DILocation(line: 56, column: 7, scope: !13492)
!13499 = !DILocation(line: 55, column: 53, scope: !13493)
!13500 = !DILocation(line: 55, column: 33, scope: !13493)
!13501 = distinct !{!13501, !13474, !13502}
!13502 = !DILocation(line: 59, column: 2, scope: !13475)
!13503 = !DILocation(line: 62, column: 1, scope: !13461)
!13504 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13441, file: !13441, line: 93, type: !13505, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !13507)
!13505 = !DISubroutineType(types: !13506)
!13506 = !{!131, !13444}
!13507 = !{!13508}
!13508 = !DILocalVariable(name: "dev", arg: 1, scope: !13504, file: !13441, line: 93, type: !13444)
!13509 = !DILocation(line: 0, scope: !13504)
!13510 = !DILocation(line: 99, column: 10, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13504, file: !13441, line: 99, column: 6)
!13512 = !DILocation(line: 99, column: 6, scope: !13504)
!13513 = !DILocation(line: 103, column: 14, scope: !13504)
!13514 = !DILocation(line: 103, column: 21, scope: !13504)
!13515 = !DILocation(line: 103, column: 33, scope: !13504)
!13516 = !DILocation(line: 103, column: 49, scope: !13504)
!13517 = !DILocation(line: 103, column: 58, scope: !13504)
!13518 = !DILocation(line: 104, column: 1, scope: !13504)
!13519 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13441, file: !13441, line: 87, type: !13520, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !13523)
!13520 = !DISubroutineType(types: !13521)
!13521 = !{!132, !13522}
!13522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13444, size: 32)
!13523 = !{!13524}
!13524 = !DILocalVariable(name: "devices", arg: 1, scope: !13519, file: !13441, line: 87, type: !13522)
!13525 = !DILocation(line: 0, scope: !13519)
!13526 = !DILocation(line: 89, column: 11, scope: !13519)
!13527 = !DILocation(line: 90, column: 2, scope: !13519)
!13528 = distinct !DISubprogram(name: "device_required_foreach", scope: !13441, file: !13441, line: 125, type: !13529, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !13535)
!13529 = !DISubroutineType(types: !13530)
!13530 = !{!103, !13444, !13531, !102}
!13531 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !442, line: 471, baseType: !13532)
!13532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13533, size: 32)
!13533 = !DISubroutineType(types: !13534)
!13534 = !{!103, !13444, !102}
!13535 = !{!13536, !13537, !13538, !13539, !13540}
!13536 = !DILocalVariable(name: "dev", arg: 1, scope: !13528, file: !13441, line: 125, type: !13444)
!13537 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13528, file: !13441, line: 126, type: !13531)
!13538 = !DILocalVariable(name: "context", arg: 3, scope: !13528, file: !13441, line: 127, type: !102)
!13539 = !DILocalVariable(name: "handle_count", scope: !13528, file: !13441, line: 129, type: !132)
!13540 = !DILocalVariable(name: "handles", scope: !13528, file: !13441, line: 130, type: !455)
!13541 = !DILocation(line: 0, scope: !13528)
!13542 = !DILocation(line: 129, column: 2, scope: !13528)
!13543 = !DILocation(line: 129, column: 9, scope: !13528)
!13544 = !DILocation(line: 130, column: 35, scope: !13528)
!13545 = !DILocation(line: 132, column: 33, scope: !13528)
!13546 = !DILocation(line: 132, column: 9, scope: !13528)
!13547 = !DILocation(line: 133, column: 1, scope: !13528)
!13548 = !DILocation(line: 132, column: 2, scope: !13528)
!13549 = distinct !DISubprogram(name: "device_required_handles_get", scope: !442, file: !442, line: 493, type: !13550, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !13552)
!13550 = !DISubroutineType(types: !13551)
!13551 = !{!455, !13444, !2724}
!13552 = !{!13553, !13554, !13555, !13556}
!13553 = !DILocalVariable(name: "dev", arg: 1, scope: !13549, file: !442, line: 493, type: !13444)
!13554 = !DILocalVariable(name: "count", arg: 2, scope: !13549, file: !442, line: 493, type: !2724)
!13555 = !DILocalVariable(name: "rv", scope: !13549, file: !442, line: 495, type: !455)
!13556 = !DILocalVariable(name: "i", scope: !13557, file: !442, line: 498, type: !132)
!13557 = distinct !DILexicalBlock(scope: !13558, file: !442, line: 497, column: 18)
!13558 = distinct !DILexicalBlock(scope: !13549, file: !442, line: 497, column: 6)
!13559 = !DILocation(line: 0, scope: !13549)
!13560 = !DILocation(line: 495, column: 35, scope: !13549)
!13561 = !DILocation(line: 497, column: 9, scope: !13558)
!13562 = !DILocation(line: 497, column: 6, scope: !13549)
!13563 = !DILocation(line: 0, scope: !13557)
!13564 = !DILocation(line: 500, column: 11, scope: !13557)
!13565 = !DILocation(line: 500, column: 40, scope: !13557)
!13566 = !DILocation(line: 502, column: 4, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13557, file: !442, line: 501, column: 40)
!13568 = distinct !{!13568, !13569, !13570}
!13569 = !DILocation(line: 500, column: 3, scope: !13557)
!13570 = !DILocation(line: 503, column: 3, scope: !13557)
!13571 = !DILocation(line: 504, column: 10, scope: !13557)
!13572 = !DILocation(line: 505, column: 2, scope: !13557)
!13573 = !DILocation(line: 507, column: 2, scope: !13549)
!13574 = distinct !DISubprogram(name: "device_visitor", scope: !13441, file: !13441, line: 106, type: !13575, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !13577)
!13575 = !DISubroutineType(types: !13576)
!13576 = !{!103, !455, !132, !13531, !102}
!13577 = !{!13578, !13579, !13580, !13581, !13582, !13584, !13587, !13588}
!13578 = !DILocalVariable(name: "handles", arg: 1, scope: !13574, file: !13441, line: 106, type: !455)
!13579 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13574, file: !13441, line: 107, type: !132)
!13580 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13574, file: !13441, line: 108, type: !13531)
!13581 = !DILocalVariable(name: "context", arg: 4, scope: !13574, file: !13441, line: 109, type: !102)
!13582 = !DILocalVariable(name: "i", scope: !13583, file: !13441, line: 112, type: !132)
!13583 = distinct !DILexicalBlock(scope: !13574, file: !13441, line: 112, column: 2)
!13584 = !DILocalVariable(name: "dh", scope: !13585, file: !13441, line: 113, type: !457)
!13585 = distinct !DILexicalBlock(scope: !13586, file: !13441, line: 112, column: 44)
!13586 = distinct !DILexicalBlock(scope: !13583, file: !13441, line: 112, column: 2)
!13587 = !DILocalVariable(name: "rdev", scope: !13585, file: !13441, line: 114, type: !13444)
!13588 = !DILocalVariable(name: "rc", scope: !13585, file: !13441, line: 115, type: !103)
!13589 = !DILocation(line: 0, scope: !13574)
!13590 = !DILocation(line: 0, scope: !13583)
!13591 = !DILocation(line: 112, column: 23, scope: !13586)
!13592 = !DILocation(line: 112, column: 2, scope: !13583)
!13593 = distinct !{!13593, !13592, !13594}
!13594 = !DILocation(line: 120, column: 2, scope: !13583)
!13595 = !DILocation(line: 113, column: 24, scope: !13585)
!13596 = !DILocation(line: 0, scope: !13585)
!13597 = !DILocation(line: 114, column: 31, scope: !13585)
!13598 = !DILocation(line: 115, column: 12, scope: !13585)
!13599 = !DILocation(line: 117, column: 10, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13585, file: !13441, line: 117, column: 7)
!13601 = !DILocation(line: 112, column: 39, scope: !13586)
!13602 = !DILocation(line: 123, column: 1, scope: !13574)
!13603 = distinct !DISubprogram(name: "device_from_handle", scope: !442, file: !442, line: 439, type: !13604, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !13606)
!13604 = !DISubroutineType(types: !13605)
!13605 = !{!13444, !457}
!13606 = !{!13607, !13608, !13609}
!13607 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13603, file: !442, line: 439, type: !457)
!13608 = !DILocalVariable(name: "dev", scope: !13603, file: !442, line: 443, type: !13444)
!13609 = !DILocalVariable(name: "numdev", scope: !13603, file: !442, line: 444, type: !132)
!13610 = !DILocation(line: 0, scope: !13603)
!13611 = !DILocation(line: 446, column: 7, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13603, file: !442, line: 446, column: 6)
!13613 = !DILocation(line: 446, column: 18, scope: !13612)
!13614 = !DILocation(line: 446, column: 23, scope: !13612)
!13615 = !DILocation(line: 450, column: 2, scope: !13603)
!13616 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13441, file: !13441, line: 135, type: !13529, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !13617)
!13617 = !{!13618, !13619, !13620, !13621, !13622}
!13618 = !DILocalVariable(name: "dev", arg: 1, scope: !13616, file: !13441, line: 135, type: !13444)
!13619 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13616, file: !13441, line: 136, type: !13531)
!13620 = !DILocalVariable(name: "context", arg: 3, scope: !13616, file: !13441, line: 137, type: !102)
!13621 = !DILocalVariable(name: "handle_count", scope: !13616, file: !13441, line: 139, type: !132)
!13622 = !DILocalVariable(name: "handles", scope: !13616, file: !13441, line: 140, type: !455)
!13623 = !DILocation(line: 0, scope: !13616)
!13624 = !DILocation(line: 139, column: 2, scope: !13616)
!13625 = !DILocation(line: 139, column: 9, scope: !13616)
!13626 = !DILocation(line: 140, column: 35, scope: !13616)
!13627 = !DILocation(line: 142, column: 33, scope: !13616)
!13628 = !DILocation(line: 142, column: 9, scope: !13616)
!13629 = !DILocation(line: 143, column: 1, scope: !13616)
!13630 = !DILocation(line: 142, column: 2, scope: !13616)
!13631 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !442, file: !442, line: 573, type: !13550, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3182, retainedNodes: !13632)
!13632 = !{!13633, !13634, !13635, !13636, !13637}
!13633 = !DILocalVariable(name: "dev", arg: 1, scope: !13631, file: !442, line: 573, type: !13444)
!13634 = !DILocalVariable(name: "count", arg: 2, scope: !13631, file: !442, line: 573, type: !2724)
!13635 = !DILocalVariable(name: "rv", scope: !13631, file: !442, line: 575, type: !455)
!13636 = !DILocalVariable(name: "region", scope: !13631, file: !442, line: 576, type: !132)
!13637 = !DILocalVariable(name: "i", scope: !13631, file: !442, line: 577, type: !132)
!13638 = !DILocation(line: 0, scope: !13631)
!13639 = !DILocation(line: 575, column: 35, scope: !13631)
!13640 = !DILocation(line: 579, column: 9, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13631, file: !442, line: 579, column: 6)
!13642 = !DILocation(line: 579, column: 6, scope: !13631)
!13643 = !DILocation(line: 582, column: 8, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13645, file: !442, line: 582, column: 8)
!13645 = distinct !DILexicalBlock(scope: !13646, file: !442, line: 581, column: 23)
!13646 = distinct !DILexicalBlock(scope: !13641, file: !442, line: 579, column: 18)
!13647 = !DILocation(line: 582, column: 12, scope: !13644)
!13648 = !DILocation(line: 585, column: 6, scope: !13645)
!13649 = !DILocation(line: 0, scope: !13646)
!13650 = !DILocation(line: 581, column: 17, scope: !13646)
!13651 = !DILocation(line: 581, column: 3, scope: !13646)
!13652 = !DILocation(line: 588, column: 10, scope: !13646)
!13653 = !DILocation(line: 588, column: 16, scope: !13646)
!13654 = !DILocation(line: 589, column: 4, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13646, file: !442, line: 588, column: 39)
!13656 = !DILocation(line: 588, column: 3, scope: !13646)
!13657 = distinct !{!13657, !13656, !13658}
!13658 = !DILocation(line: 590, column: 3, scope: !13646)
!13659 = !DILocation(line: 591, column: 10, scope: !13646)
!13660 = !DILocation(line: 592, column: 2, scope: !13646)
!13661 = !DILocation(line: 575, column: 25, scope: !13631)
!13662 = !DILocation(line: 594, column: 2, scope: !13631)
!13663 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1934, file: !1934, line: 49, type: !13664, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1931, retainedNodes: !251)
!13664 = !DISubroutineType(types: !13665)
!13665 = !{!374}
!13666 = !DILocation(line: 51, column: 10, scope: !13663)
!13667 = !DILocation(line: 51, column: 20, scope: !13663)
!13668 = !DILocation(line: 51, column: 2, scope: !13663)
!13669 = distinct !DISubprogram(name: "coredump", scope: !3189, file: !3189, line: 209, type: !13670, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13816)
!13670 = !DISubroutineType(types: !13671)
!13671 = !{null, !32, !13672, !13716}
!13672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13673, size: 32)
!13673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13674)
!13674 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2852, line: 141, baseType: !13675)
!13675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2852, line: 97, size: 256, elements: !13676)
!13676 = !{!13677}
!13677 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13675, file: !2852, line: 107, baseType: !13678, size: 256)
!13678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2852, line: 98, size: 256, elements: !13679)
!13679 = !{!13680, !13685, !13690, !13695, !13700, !13705, !13710, !13715}
!13680 = !DIDerivedType(tag: DW_TAG_member, scope: !13678, file: !2852, line: 99, baseType: !13681, size: 32)
!13681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13678, file: !2852, line: 99, size: 32, elements: !13682)
!13682 = !{!13683, !13684}
!13683 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13681, file: !2852, line: 99, baseType: !108, size: 32)
!13684 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13681, file: !2852, line: 99, baseType: !108, size: 32)
!13685 = !DIDerivedType(tag: DW_TAG_member, scope: !13678, file: !2852, line: 100, baseType: !13686, size: 32, offset: 32)
!13686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13678, file: !2852, line: 100, size: 32, elements: !13687)
!13687 = !{!13688, !13689}
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13686, file: !2852, line: 100, baseType: !108, size: 32)
!13689 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13686, file: !2852, line: 100, baseType: !108, size: 32)
!13690 = !DIDerivedType(tag: DW_TAG_member, scope: !13678, file: !2852, line: 101, baseType: !13691, size: 32, offset: 64)
!13691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13678, file: !2852, line: 101, size: 32, elements: !13692)
!13692 = !{!13693, !13694}
!13693 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13691, file: !2852, line: 101, baseType: !108, size: 32)
!13694 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13691, file: !2852, line: 101, baseType: !108, size: 32)
!13695 = !DIDerivedType(tag: DW_TAG_member, scope: !13678, file: !2852, line: 102, baseType: !13696, size: 32, offset: 96)
!13696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13678, file: !2852, line: 102, size: 32, elements: !13697)
!13697 = !{!13698, !13699}
!13698 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13696, file: !2852, line: 102, baseType: !108, size: 32)
!13699 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13696, file: !2852, line: 102, baseType: !108, size: 32)
!13700 = !DIDerivedType(tag: DW_TAG_member, scope: !13678, file: !2852, line: 103, baseType: !13701, size: 32, offset: 128)
!13701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13678, file: !2852, line: 103, size: 32, elements: !13702)
!13702 = !{!13703, !13704}
!13703 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13701, file: !2852, line: 103, baseType: !108, size: 32)
!13704 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13701, file: !2852, line: 103, baseType: !108, size: 32)
!13705 = !DIDerivedType(tag: DW_TAG_member, scope: !13678, file: !2852, line: 104, baseType: !13706, size: 32, offset: 160)
!13706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13678, file: !2852, line: 104, size: 32, elements: !13707)
!13707 = !{!13708, !13709}
!13708 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13706, file: !2852, line: 104, baseType: !108, size: 32)
!13709 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13706, file: !2852, line: 104, baseType: !108, size: 32)
!13710 = !DIDerivedType(tag: DW_TAG_member, scope: !13678, file: !2852, line: 105, baseType: !13711, size: 32, offset: 192)
!13711 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13678, file: !2852, line: 105, size: 32, elements: !13712)
!13712 = !{!13713, !13714}
!13713 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13711, file: !2852, line: 105, baseType: !108, size: 32)
!13714 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13711, file: !2852, line: 105, baseType: !108, size: 32)
!13715 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13678, file: !2852, line: 106, baseType: !108, size: 32, offset: 224)
!13716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13717, size: 32)
!13717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !13718)
!13718 = !{!13719, !13777, !13789, !13790, !13791, !13792, !13798, !13811}
!13719 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13717, file: !163, line: 247, baseType: !13720, size: 384)
!13720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !13721)
!13721 = !{!13722, !13746, !13753, !13754, !13755, !13764, !13765, !13766}
!13722 = !DIDerivedType(tag: DW_TAG_member, scope: !13720, file: !163, line: 60, baseType: !13723, size: 64)
!13723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13720, file: !163, line: 60, size: 64, elements: !13724)
!13724 = !{!13725, !13740}
!13725 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13723, file: !163, line: 61, baseType: !13726, size: 64)
!13726 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !13727)
!13727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !13728)
!13728 = !{!13729, !13735}
!13729 = !DIDerivedType(tag: DW_TAG_member, scope: !13727, file: !146, line: 38, baseType: !13730, size: 32)
!13730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13727, file: !146, line: 38, size: 32, elements: !13731)
!13731 = !{!13732, !13734}
!13732 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13730, file: !146, line: 39, baseType: !13733, size: 32)
!13733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13727, size: 32)
!13734 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13730, file: !146, line: 40, baseType: !13733, size: 32)
!13735 = !DIDerivedType(tag: DW_TAG_member, scope: !13727, file: !146, line: 42, baseType: !13736, size: 32, offset: 32)
!13736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13727, file: !146, line: 42, size: 32, elements: !13737)
!13737 = !{!13738, !13739}
!13738 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13736, file: !146, line: 43, baseType: !13733, size: 32)
!13739 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13736, file: !146, line: 44, baseType: !13733, size: 32)
!13740 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13723, file: !163, line: 62, baseType: !13741, size: 64)
!13741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !13742)
!13742 = !{!13743}
!13743 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13741, file: !175, line: 50, baseType: !13744, size: 64)
!13744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13745, size: 64, elements: !180)
!13745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13741, size: 32)
!13746 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13720, file: !163, line: 68, baseType: !13747, size: 32, offset: 64)
!13747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13748, size: 32)
!13748 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !13749)
!13749 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !13750)
!13750 = !{!13751}
!13751 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13749, file: !141, line: 232, baseType: !13752, size: 64)
!13752 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !13727)
!13753 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13720, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!13754 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13720, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!13755 = !DIDerivedType(tag: DW_TAG_member, scope: !13720, file: !163, line: 90, baseType: !13756, size: 16, offset: 112)
!13756 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13720, file: !163, line: 90, size: 16, elements: !13757)
!13757 = !{!13758, !13763}
!13758 = !DIDerivedType(tag: DW_TAG_member, scope: !13756, file: !163, line: 91, baseType: !13759, size: 16)
!13759 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13756, file: !163, line: 91, size: 16, elements: !13760)
!13760 = !{!13761, !13762}
!13761 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13759, file: !163, line: 96, baseType: !195, size: 8)
!13762 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13759, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!13763 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13756, file: !163, line: 100, baseType: !121, size: 16)
!13764 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13720, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!13765 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13720, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!13766 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13720, file: !163, line: 131, baseType: !13767, size: 192, offset: 192)
!13767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !13768)
!13768 = !{!13769, !13770, !13776}
!13769 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13767, file: !141, line: 245, baseType: !13726, size: 64)
!13770 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13767, file: !141, line: 246, baseType: !13771, size: 32, offset: 64)
!13771 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !13772)
!13772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13773, size: 32)
!13773 = !DISubroutineType(types: !13774)
!13774 = !{null, !13775}
!13775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13767, size: 32)
!13776 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13767, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!13777 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13717, file: !163, line: 250, baseType: !13778, size: 288, offset: 384)
!13778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !13779)
!13779 = !{!13780, !13781, !13782, !13783, !13784, !13785, !13786, !13787, !13788}
!13780 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13778, file: !214, line: 26, baseType: !108, size: 32)
!13781 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13778, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!13782 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13778, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!13783 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13778, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!13784 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13778, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!13785 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13778, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!13786 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13778, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!13787 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13778, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!13788 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13778, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!13789 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13717, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!13790 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13717, file: !163, line: 256, baseType: !13748, size: 64, offset: 704)
!13791 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13717, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!13792 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13717, file: !163, line: 300, baseType: !13793, size: 96, offset: 800)
!13793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !13794)
!13794 = !{!13795, !13796, !13797}
!13795 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13793, file: !163, line: 153, baseType: !22, size: 32)
!13796 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13793, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!13797 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13793, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!13798 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13717, file: !163, line: 325, baseType: !13799, size: 32, offset: 896)
!13799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13800, size: 32)
!13800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !13801)
!13801 = !{!13802, !13808, !13809}
!13802 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13800, file: !137, line: 5074, baseType: !13803, size: 96)
!13803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !13804)
!13804 = !{!13805, !13806, !13807}
!13805 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13803, file: !240, line: 57, baseType: !243, size: 32)
!13806 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13803, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!13807 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13803, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!13808 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13800, file: !137, line: 5075, baseType: !13748, size: 64, offset: 96)
!13809 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13800, file: !137, line: 5076, baseType: !13810, offset: 160)
!13810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!13811 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13717, file: !163, line: 343, baseType: !13812, size: 64, offset: 928)
!13812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !13813)
!13813 = !{!13814, !13815}
!13814 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13812, file: !214, line: 63, baseType: !108, size: 32)
!13815 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13812, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!13816 = !{!13817, !13818, !13819}
!13817 = !DILocalVariable(name: "reason", arg: 1, scope: !13669, file: !3189, line: 209, type: !32)
!13818 = !DILocalVariable(name: "esf", arg: 2, scope: !13669, file: !3189, line: 209, type: !13672)
!13819 = !DILocalVariable(name: "thread", arg: 3, scope: !13669, file: !3189, line: 210, type: !13716)
!13820 = !DILocation(line: 0, scope: !13669)
!13821 = !DILocation(line: 212, column: 1, scope: !13669)
!13822 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3189, file: !3189, line: 214, type: !13823, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13825)
!13823 = !DISubroutineType(types: !13824)
!13824 = !{null, !22, !22}
!13825 = !{!13826, !13827}
!13826 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13822, file: !3189, line: 214, type: !22)
!13827 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13822, file: !3189, line: 214, type: !22)
!13828 = !DILocation(line: 0, scope: !13822)
!13829 = !DILocation(line: 216, column: 1, scope: !13822)
!13830 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3189, file: !3189, line: 218, type: !13831, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13833)
!13831 = !DISubroutineType(types: !13832)
!13832 = !{null, !379, !132}
!13833 = !{!13834, !13835}
!13834 = !DILocalVariable(name: "buf", arg: 1, scope: !13830, file: !3189, line: 218, type: !379)
!13835 = !DILocalVariable(name: "buflen", arg: 2, scope: !13830, file: !3189, line: 218, type: !132)
!13836 = !DILocation(line: 0, scope: !13830)
!13837 = !DILocation(line: 220, column: 1, scope: !13830)
!13838 = distinct !DISubprogram(name: "coredump_query", scope: !3189, file: !3189, line: 222, type: !13839, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13841)
!13839 = !DISubroutineType(types: !13840)
!13840 = !{!103, !3188, !102}
!13841 = !{!13842, !13843}
!13842 = !DILocalVariable(name: "query_id", arg: 1, scope: !13838, file: !3189, line: 222, type: !3188)
!13843 = !DILocalVariable(name: "arg", arg: 2, scope: !13838, file: !3189, line: 222, type: !102)
!13844 = !DILocation(line: 0, scope: !13838)
!13845 = !DILocation(line: 224, column: 2, scope: !13838)
!13846 = distinct !DISubprogram(name: "coredump_cmd", scope: !3189, file: !3189, line: 227, type: !13847, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13849)
!13847 = !DISubroutineType(types: !13848)
!13848 = !{!103, !3195, !102}
!13849 = !{!13850, !13851}
!13850 = !DILocalVariable(name: "query_id", arg: 1, scope: !13846, file: !3189, line: 227, type: !3195)
!13851 = !DILocalVariable(name: "arg", arg: 2, scope: !13846, file: !3189, line: 227, type: !102)
!13852 = !DILocation(line: 0, scope: !13846)
!13853 = !DILocation(line: 229, column: 2, scope: !13846)
!13854 = distinct !DISubprogram(name: "arch_system_halt", scope: !13855, file: !13855, line: 23, type: !6957, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13856)
!13855 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13856 = !{!13857}
!13857 = !DILocalVariable(name: "reason", arg: 1, scope: !13854, file: !13855, line: 23, type: !32)
!13858 = !DILocation(line: 0, scope: !13854)
!13859 = !DILocation(line: 55, column: 2, scope: !13860, inlinedAt: !13864)
!13860 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6946, file: !6946, line: 42, type: !6947, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13861)
!13861 = !{!13862, !13863}
!13862 = !DILocalVariable(name: "key", scope: !13860, file: !6946, line: 44, type: !32)
!13863 = !DILocalVariable(name: "tmp", scope: !13860, file: !6946, line: 53, type: !32)
!13864 = distinct !DILocation(line: 31, column: 8, scope: !13854)
!13865 = !{i64 1651870}
!13866 = !DILocation(line: 0, scope: !13860, inlinedAt: !13864)
!13867 = !DILocation(line: 32, column: 2, scope: !13854)
!13868 = !DILocation(line: 32, column: 2, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13870, file: !13855, line: 32, column: 2)
!13870 = distinct !DILexicalBlock(scope: !13854, file: !13855, line: 32, column: 2)
!13871 = distinct !{!13871, !13872, !13873}
!13872 = !DILocation(line: 32, column: 2, scope: !13870)
!13873 = !DILocation(line: 34, column: 2, scope: !13870)
!13874 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13855, file: !13855, line: 39, type: !13875, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13877)
!13875 = !DISubroutineType(types: !13876)
!13876 = !{null, !32, !13672}
!13877 = !{!13878, !13879}
!13878 = !DILocalVariable(name: "reason", arg: 1, scope: !13874, file: !13855, line: 39, type: !32)
!13879 = !DILocalVariable(name: "esf", arg: 2, scope: !13874, file: !13855, line: 40, type: !13672)
!13880 = !DILocation(line: 0, scope: !13874)
!13881 = !DILocation(line: 45, column: 2, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13883, file: !13855, line: 45, column: 2)
!13883 = distinct !DILexicalBlock(scope: !13884, file: !13855, line: 45, column: 2)
!13884 = distinct !DILexicalBlock(scope: !13885, file: !13855, line: 45, column: 2)
!13885 = distinct !DILexicalBlock(scope: !13874, file: !13855, line: 45, column: 2)
!13886 = !DILocation(line: 46, column: 2, scope: !13874)
!13887 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13855, file: !13855, line: 81, type: !6957, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13888)
!13888 = !{!13889}
!13889 = !DILocalVariable(name: "reason", arg: 1, scope: !13887, file: !13855, line: 81, type: !32)
!13890 = !DILocation(line: 0, scope: !13887)
!13891 = !DILocation(line: 83, column: 2, scope: !13887)
!13892 = distinct !DISubprogram(name: "z_fatal_error", scope: !13855, file: !13855, line: 96, type: !13875, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13893)
!13893 = !{!13894, !13895, !13896, !13897}
!13894 = !DILocalVariable(name: "reason", arg: 1, scope: !13892, file: !13855, line: 96, type: !32)
!13895 = !DILocalVariable(name: "esf", arg: 2, scope: !13892, file: !13855, line: 96, type: !13672)
!13896 = !DILocalVariable(name: "key", scope: !13892, file: !13855, line: 102, type: !32)
!13897 = !DILocalVariable(name: "thread", scope: !13892, file: !13855, line: 103, type: !13716)
!13898 = !DILocation(line: 0, scope: !13892)
!13899 = !DILocation(line: 55, column: 2, scope: !13860, inlinedAt: !13900)
!13900 = distinct !DILocation(line: 102, column: 21, scope: !13892)
!13901 = !DILocation(line: 0, scope: !13860, inlinedAt: !13900)
!13902 = !DILocation(line: 104, column: 4, scope: !13892)
!13903 = !DILocation(line: 109, column: 2, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13905, file: !13855, line: 109, column: 2)
!13905 = distinct !DILexicalBlock(scope: !13906, file: !13855, line: 109, column: 2)
!13906 = distinct !DILexicalBlock(scope: !13907, file: !13855, line: 109, column: 2)
!13907 = distinct !DILexicalBlock(scope: !13892, file: !13855, line: 109, column: 2)
!13908 = !DILocation(line: 119, column: 11, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13892, file: !13855, line: 119, column: 6)
!13910 = !DILocation(line: 119, column: 20, scope: !13909)
!13911 = !DILocalVariable(name: "esf", arg: 1, scope: !13912, file: !8256, line: 71, type: !13672)
!13912 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8256, file: !8256, line: 71, type: !13913, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13915)
!13913 = !DISubroutineType(types: !13914)
!13914 = !{!131, !13672}
!13915 = !{!13911}
!13916 = !DILocation(line: 0, scope: !13912, inlinedAt: !13917)
!13917 = distinct !DILocation(line: 119, column: 23, scope: !13909)
!13918 = !DILocation(line: 73, column: 21, scope: !13912, inlinedAt: !13917)
!13919 = !DILocation(line: 73, column: 26, scope: !13912, inlinedAt: !13917)
!13920 = !DILocation(line: 73, column: 9, scope: !13912, inlinedAt: !13917)
!13921 = !DILocation(line: 119, column: 6, scope: !13892)
!13922 = !DILocation(line: 120, column: 3, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13924, file: !13855, line: 120, column: 3)
!13924 = distinct !DILexicalBlock(scope: !13925, file: !13855, line: 120, column: 3)
!13925 = distinct !DILexicalBlock(scope: !13926, file: !13855, line: 120, column: 3)
!13926 = distinct !DILexicalBlock(scope: !13927, file: !13855, line: 120, column: 3)
!13927 = distinct !DILexicalBlock(scope: !13909, file: !13855, line: 119, column: 57)
!13928 = !DILocation(line: 121, column: 2, scope: !13927)
!13929 = !DILocation(line: 124, column: 2, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13931, file: !13855, line: 124, column: 2)
!13931 = distinct !DILexicalBlock(scope: !13932, file: !13855, line: 124, column: 2)
!13932 = distinct !DILexicalBlock(scope: !13933, file: !13855, line: 124, column: 2)
!13933 = distinct !DILexicalBlock(scope: !13892, file: !13855, line: 124, column: 2)
!13934 = !DILocation(line: 131, column: 2, scope: !13892)
!13935 = !DILocation(line: 0, scope: !13912, inlinedAt: !13936)
!13936 = distinct !DILocation(line: 151, column: 24, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13938, file: !13855, line: 151, column: 7)
!13938 = distinct !DILexicalBlock(scope: !13939, file: !13855, line: 146, column: 32)
!13939 = distinct !DILexicalBlock(scope: !13892, file: !13855, line: 146, column: 6)
!13940 = !DILocation(line: 151, column: 7, scope: !13938)
!13941 = !DILocation(line: 151, column: 21, scope: !13937)
!13942 = !DILocalVariable(name: "key", arg: 1, scope: !13943, file: !6946, line: 84, type: !32)
!13943 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6946, file: !6946, line: 84, type: !6957, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13944)
!13944 = !{!13942}
!13945 = !DILocation(line: 0, scope: !13943, inlinedAt: !13946)
!13946 = distinct !DILocation(line: 186, column: 2, scope: !13892)
!13947 = !DILocation(line: 95, column: 2, scope: !13943, inlinedAt: !13946)
!13948 = !{i64 1652687}
!13949 = !DILocation(line: 189, column: 3, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13951, file: !13855, line: 188, column: 41)
!13951 = distinct !DILexicalBlock(scope: !13892, file: !13855, line: 188, column: 6)
!13952 = !DILocation(line: 191, column: 1, scope: !13892)
!13953 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !13954, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !251)
!13954 = !DISubroutineType(types: !13955)
!13955 = !{!13956}
!13956 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !13716)
!13957 = !DILocation(line: 535, column: 9, scope: !13953)
!13958 = !DILocation(line: 535, column: 2, scope: !13953)
!13959 = distinct !DISubprogram(name: "reason_to_str", scope: !13855, file: !13855, line: 62, type: !13960, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13962)
!13960 = !DISubroutineType(types: !13961)
!13961 = !{!337, !32}
!13962 = !{!13963}
!13963 = !DILocalVariable(name: "reason", arg: 1, scope: !13959, file: !13855, line: 62, type: !32)
!13964 = !DILocation(line: 0, scope: !13959)
!13965 = !DILocation(line: 64, column: 2, scope: !13959)
!13966 = !DILocation(line: 0, scope: !13967)
!13967 = distinct !DILexicalBlock(scope: !13959, file: !13855, line: 64, column: 18)
!13968 = !DILocation(line: 78, column: 1, scope: !13959)
!13969 = distinct !DISubprogram(name: "thread_name_get", scope: !13855, file: !13855, line: 51, type: !13970, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13972)
!13970 = !DISubroutineType(types: !13971)
!13971 = !{!337, !13716}
!13972 = !{!13973, !13974}
!13973 = !DILocalVariable(name: "thread", arg: 1, scope: !13969, file: !13855, line: 51, type: !13716)
!13974 = !DILocalVariable(name: "thread_name", scope: !13969, file: !13855, line: 53, type: !337)
!13975 = !DILocation(line: 0, scope: !13969)
!13976 = !DILocation(line: 53, column: 36, scope: !13969)
!13977 = !DILocation(line: 53, column: 28, scope: !13969)
!13978 = !DILocation(line: 53, column: 47, scope: !13969)
!13979 = !DILocation(line: 55, column: 19, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13969, file: !13855, line: 55, column: 6)
!13981 = !DILocation(line: 55, column: 28, scope: !13980)
!13982 = !DILocation(line: 55, column: 32, scope: !13980)
!13983 = !DILocation(line: 55, column: 47, scope: !13980)
!13984 = !DILocation(line: 55, column: 6, scope: !13969)
!13985 = !DILocation(line: 57, column: 2, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13980, file: !13855, line: 55, column: 57)
!13987 = !DILocation(line: 59, column: 2, scope: !13969)
!13988 = distinct !DISubprogram(name: "k_thread_abort", scope: !3584, file: !3584, line: 188, type: !13989, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !13991)
!13989 = !DISubroutineType(types: !13990)
!13990 = !{null, !13956}
!13991 = !{!13992}
!13992 = !DILocalVariable(name: "thread", arg: 1, scope: !13988, file: !3584, line: 188, type: !13956)
!13993 = !DILocation(line: 0, scope: !13988)
!13994 = !DILocation(line: 197, column: 2, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13988, file: !3584, line: 197, column: 2)
!13996 = !{i64 2152217531}
!13997 = !DILocation(line: 198, column: 2, scope: !13988)
!13998 = !DILocation(line: 199, column: 1, scope: !13988)
!13999 = distinct !DISubprogram(name: "z_current_get", scope: !3584, file: !3584, line: 173, type: !13954, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3185, retainedNodes: !251)
!14000 = !DILocation(line: 180, column: 2, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13999, file: !3584, line: 180, column: 2)
!14002 = !{i64 2152217463}
!14003 = !DILocation(line: 181, column: 9, scope: !13999)
!14004 = !DILocation(line: 181, column: 2, scope: !13999)
!14005 = distinct !DISubprogram(name: "z_early_memset", scope: !1942, file: !1942, line: 108, type: !14006, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14008)
!14006 = !DISubroutineType(types: !14007)
!14007 = !{null, !102, !103, !132}
!14008 = !{!14009, !14010, !14011}
!14009 = !DILocalVariable(name: "dst", arg: 1, scope: !14005, file: !1942, line: 108, type: !102)
!14010 = !DILocalVariable(name: "c", arg: 2, scope: !14005, file: !1942, line: 108, type: !103)
!14011 = !DILocalVariable(name: "n", arg: 3, scope: !14005, file: !1942, line: 108, type: !132)
!14012 = !DILocation(line: 0, scope: !14005)
!14013 = !DILocation(line: 110, column: 9, scope: !14005)
!14014 = !DILocation(line: 111, column: 1, scope: !14005)
!14015 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1942, file: !1942, line: 121, type: !14016, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14018)
!14016 = !DISubroutineType(types: !14017)
!14017 = !{null, !102, !13, !132}
!14018 = !{!14019, !14020, !14021}
!14019 = !DILocalVariable(name: "dst", arg: 1, scope: !14015, file: !1942, line: 121, type: !102)
!14020 = !DILocalVariable(name: "src", arg: 2, scope: !14015, file: !1942, line: 121, type: !13)
!14021 = !DILocalVariable(name: "n", arg: 3, scope: !14015, file: !1942, line: 121, type: !132)
!14022 = !DILocation(line: 0, scope: !14015)
!14023 = !DILocation(line: 123, column: 9, scope: !14015)
!14024 = !DILocation(line: 124, column: 1, scope: !14015)
!14025 = distinct !DISubprogram(name: "z_bss_zero", scope: !1942, file: !1942, line: 132, type: !334, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !251)
!14026 = !DILocation(line: 143, column: 2, scope: !14025)
!14027 = !DILocation(line: 168, column: 1, scope: !14025)
!14028 = distinct !DISubprogram(name: "z_init_cpu", scope: !1942, file: !1942, line: 372, type: !9608, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14029)
!14029 = !{!14030}
!14030 = !DILocalVariable(name: "id", arg: 1, scope: !14028, file: !1942, line: 372, type: !103)
!14031 = !DILocation(line: 0, scope: !14028)
!14032 = !DILocation(line: 374, column: 2, scope: !14028)
!14033 = !DILocation(line: 375, column: 34, scope: !14028)
!14034 = !DILocation(line: 375, column: 19, scope: !14028)
!14035 = !DILocation(line: 375, column: 31, scope: !14028)
!14036 = !DILocation(line: 376, column: 24, scope: !14028)
!14037 = !DILocation(line: 376, column: 19, scope: !14028)
!14038 = !DILocation(line: 376, column: 22, scope: !14028)
!14039 = !DILocation(line: 378, column: 26, scope: !14028)
!14040 = !DILocation(line: 378, column: 4, scope: !14028)
!14041 = !DILocation(line: 378, column: 50, scope: !14028)
!14042 = !DILocation(line: 377, column: 19, scope: !14028)
!14043 = !DILocation(line: 377, column: 29, scope: !14028)
!14044 = !DILocation(line: 384, column: 1, scope: !14028)
!14045 = distinct !DISubprogram(name: "init_idle_thread", scope: !1942, file: !1942, line: 343, type: !9608, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14046)
!14046 = !{!14047, !14048, !14049, !14052}
!14047 = !DILocalVariable(name: "i", arg: 1, scope: !14045, file: !1942, line: 343, type: !103)
!14048 = !DILocalVariable(name: "thread", scope: !14045, file: !1942, line: 345, type: !2034)
!14049 = !DILocalVariable(name: "stack", scope: !14045, file: !1942, line: 346, type: !14050)
!14050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14051, size: 32)
!14051 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !2148)
!14052 = !DILocalVariable(name: "tname", scope: !14045, file: !1942, line: 358, type: !277)
!14053 = !DILocation(line: 0, scope: !14045)
!14054 = !DILocation(line: 345, column: 29, scope: !14045)
!14055 = !DILocation(line: 346, column: 28, scope: !14045)
!14056 = !DILocation(line: 362, column: 37, scope: !14045)
!14057 = !DILocation(line: 362, column: 36, scope: !14045)
!14058 = !DILocation(line: 361, column: 2, scope: !14045)
!14059 = !DILocation(line: 365, column: 2, scope: !14045)
!14060 = !DILocation(line: 370, column: 1, scope: !14045)
!14061 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !316, file: !316, line: 331, type: !14062, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14064)
!14062 = !DISubroutineType(types: !14063)
!14063 = !{!277, !14050}
!14064 = !{!14065}
!14065 = !DILocalVariable(name: "sym", arg: 1, scope: !14061, file: !316, line: 331, type: !14050)
!14066 = !DILocation(line: 0, scope: !14061)
!14067 = !DILocation(line: 333, column: 21, scope: !14061)
!14068 = !DILocation(line: 333, column: 2, scope: !14061)
!14069 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14070, file: !14070, line: 155, type: !14071, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14073)
!14070 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14071 = !DISubroutineType(types: !14072)
!14072 = !{null, !2034}
!14073 = !{!14074}
!14074 = !DILocalVariable(name: "thread", arg: 1, scope: !14069, file: !14070, line: 155, type: !2034)
!14075 = !DILocation(line: 0, scope: !14069)
!14076 = !DILocation(line: 157, column: 15, scope: !14069)
!14077 = !DILocation(line: 157, column: 28, scope: !14069)
!14078 = !DILocation(line: 158, column: 1, scope: !14069)
!14079 = distinct !DISubprogram(name: "z_cstart", scope: !1942, file: !1942, line: 501, type: !334, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14080)
!14080 = !{!14081}
!14081 = !DILocalVariable(name: "dummy_thread", scope: !14079, file: !1942, line: 518, type: !2035)
!14082 = !DILocation(line: 507, column: 2, scope: !14079)
!14083 = !DILocation(line: 43, column: 14, scope: !14084, inlinedAt: !14088)
!14084 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14085, file: !14085, line: 40, type: !334, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14086)
!14085 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14086 = !{!14087}
!14087 = !DILocalVariable(name: "msp", scope: !14084, file: !14085, line: 42, type: !108)
!14088 = distinct !DILocation(line: 44, column: 2, scope: !14089, inlinedAt: !14091)
!14089 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14090, file: !14090, line: 42, type: !334, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !251)
!14090 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14091 = distinct !DILocation(line: 510, column: 2, scope: !14079)
!14092 = !DILocation(line: 43, column: 3, scope: !14084, inlinedAt: !14088)
!14093 = !DILocation(line: 43, column: 60, scope: !14084, inlinedAt: !14088)
!14094 = !DILocation(line: 0, scope: !14084, inlinedAt: !14088)
!14095 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14096, file: !7281, line: 1153, type: !108)
!14096 = distinct !DISubprogram(name: "__set_MSP", scope: !7281, file: !7281, line: 1153, type: !6970, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14097)
!14097 = !{!14095}
!14098 = !DILocation(line: 0, scope: !14096, inlinedAt: !14099)
!14099 = distinct !DILocation(line: 46, column: 2, scope: !14084, inlinedAt: !14088)
!14100 = !DILocation(line: 1155, column: 3, scope: !14096, inlinedAt: !14099)
!14101 = !{i64 2465310}
!14102 = !DILocation(line: 62, column: 11, scope: !14084, inlinedAt: !14088)
!14103 = !DILocation(line: 102, column: 2, scope: !14104, inlinedAt: !14105)
!14104 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8256, file: !8256, line: 97, type: !334, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !251)
!14105 = distinct !DILocation(line: 45, column: 2, scope: !14089, inlinedAt: !14091)
!14106 = !DILocation(line: 108, column: 2, scope: !14104, inlinedAt: !14105)
!14107 = !DILocation(line: 112, column: 2, scope: !14104, inlinedAt: !14105)
!14108 = !DILocation(line: 113, column: 2, scope: !14104, inlinedAt: !14105)
!14109 = !DILocation(line: 114, column: 2, scope: !14104, inlinedAt: !14105)
!14110 = !DILocation(line: 116, column: 2, scope: !14104, inlinedAt: !14105)
!14111 = !DILocation(line: 123, column: 13, scope: !14104, inlinedAt: !14105)
!14112 = !DILocation(line: 46, column: 2, scope: !14089, inlinedAt: !14091)
!14113 = !DILocation(line: 47, column: 2, scope: !14089, inlinedAt: !14091)
!14114 = !DILocation(line: 174, column: 12, scope: !14115, inlinedAt: !14116)
!14115 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8256, file: !8256, line: 169, type: !334, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !251)
!14116 = distinct !DILocation(line: 48, column: 2, scope: !14089, inlinedAt: !14091)
!14117 = !DILocation(line: 179, column: 12, scope: !14115, inlinedAt: !14116)
!14118 = !DILocation(line: 50, column: 2, scope: !14089, inlinedAt: !14091)
!14119 = !DILocation(line: 57, column: 2, scope: !14089, inlinedAt: !14091)
!14120 = !DILocation(line: 518, column: 2, scope: !14079)
!14121 = !DILocation(line: 518, column: 18, scope: !14079)
!14122 = !DILocation(line: 520, column: 2, scope: !14079)
!14123 = !DILocation(line: 523, column: 2, scope: !14079)
!14124 = !DILocation(line: 526, column: 2, scope: !14079)
!14125 = !DILocation(line: 527, column: 2, scope: !14079)
!14126 = !DILocation(line: 543, column: 24, scope: !14079)
!14127 = !DILocation(line: 543, column: 2, scope: !14079)
!14128 = !DILocation(line: 0, scope: !2170)
!14129 = !DILocation(line: 246, column: 15, scope: !2188)
!14130 = !DILocation(line: 246, column: 36, scope: !2187)
!14131 = !DILocation(line: 246, column: 2, scope: !2188)
!14132 = !DILocation(line: 247, column: 37, scope: !2186)
!14133 = !DILocation(line: 0, scope: !2186)
!14134 = !DILocation(line: 248, column: 19, scope: !2186)
!14135 = !DILocation(line: 248, column: 12, scope: !2186)
!14136 = !DILocation(line: 250, column: 11, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !2186, file: !1942, line: 250, column: 7)
!14138 = !DILocation(line: 250, column: 7, scope: !2186)
!14139 = !DILocation(line: 254, column: 11, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14141, file: !1942, line: 254, column: 8)
!14141 = distinct !DILexicalBlock(scope: !14137, file: !1942, line: 250, column: 20)
!14142 = !DILocation(line: 254, column: 8, scope: !14141)
!14143 = !DILocation(line: 255, column: 9, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14140, file: !1942, line: 254, column: 17)
!14145 = !DILocation(line: 258, column: 9, scope: !14144)
!14146 = !DILocation(line: 261, column: 28, scope: !14144)
!14147 = !DILocation(line: 261, column: 10, scope: !14144)
!14148 = !DILocation(line: 261, column: 17, scope: !14144)
!14149 = !DILocation(line: 261, column: 26, scope: !14144)
!14150 = !DILocation(line: 262, column: 4, scope: !14144)
!14151 = !DILocation(line: 263, column: 9, scope: !14141)
!14152 = !DILocation(line: 263, column: 16, scope: !14141)
!14153 = !DILocation(line: 263, column: 28, scope: !14141)
!14154 = !DILocation(line: 264, column: 3, scope: !14141)
!14155 = !DILocation(line: 246, column: 60, scope: !2187)
!14156 = distinct !{!14156, !14131, !14157}
!14157 = !DILocation(line: 265, column: 2, scope: !2188)
!14158 = !DILocation(line: 266, column: 1, scope: !2170)
!14159 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !637, file: !637, line: 1638, type: !7315, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14160)
!14160 = !{!14161, !14162}
!14161 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14159, file: !637, line: 1638, type: !972)
!14162 = !DILocalVariable(name: "priority", arg: 2, scope: !14159, file: !637, line: 1638, type: !108)
!14163 = !DILocation(line: 0, scope: !14159)
!14164 = !DILocation(line: 1646, column: 48, scope: !14165)
!14165 = distinct !DILexicalBlock(scope: !14166, file: !637, line: 1645, column: 3)
!14166 = distinct !DILexicalBlock(scope: !14159, file: !637, line: 1640, column: 7)
!14167 = !DILocation(line: 1646, column: 32, scope: !14165)
!14168 = !DILocation(line: 1646, column: 40, scope: !14165)
!14169 = !DILocation(line: 1646, column: 5, scope: !14165)
!14170 = !DILocation(line: 1646, column: 46, scope: !14165)
!14171 = !DILocation(line: 1648, column: 1, scope: !14159)
!14172 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14090, file: !14090, line: 32, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14173 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14174, file: !14174, line: 215, type: !14071, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14175)
!14174 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14175 = !{!14176}
!14176 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14173, file: !14174, line: 215, type: !2034)
!14177 = !DILocation(line: 0, scope: !14173)
!14178 = !DILocation(line: 217, column: 21, scope: !14173)
!14179 = !DILocation(line: 217, column: 34, scope: !14173)
!14180 = !DILocation(line: 221, column: 21, scope: !14173)
!14181 = !DILocation(line: 221, column: 34, scope: !14173)
!14182 = !DILocation(line: 223, column: 27, scope: !14173)
!14183 = !DILocation(line: 223, column: 33, scope: !14173)
!14184 = !DILocation(line: 224, column: 27, scope: !14173)
!14185 = !DILocation(line: 224, column: 32, scope: !14173)
!14186 = !DILocation(line: 230, column: 2, scope: !14173)
!14187 = !DILocation(line: 239, column: 24, scope: !14173)
!14188 = !DILocation(line: 240, column: 1, scope: !14173)
!14189 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1942, file: !1942, line: 399, type: !14190, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14192)
!14190 = !DISubroutineType(types: !14191)
!14191 = !{!277}
!14192 = !{!14193}
!14193 = !DILocalVariable(name: "stack_ptr", scope: !14189, file: !1942, line: 401, type: !277)
!14194 = !DILocation(line: 404, column: 2, scope: !14189)
!14195 = !DILocation(line: 416, column: 24, scope: !14189)
!14196 = !DILocation(line: 418, column: 14, scope: !14189)
!14197 = !DILocation(line: 0, scope: !14189)
!14198 = !DILocation(line: 423, column: 2, scope: !14189)
!14199 = !DILocation(line: 424, column: 2, scope: !14189)
!14200 = !DILocation(line: 426, column: 2, scope: !14189)
!14201 = !DILocation(line: 428, column: 2, scope: !14189)
!14202 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1942, file: !1942, line: 432, type: !14203, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14205)
!14203 = !DISubroutineType(types: !14204)
!14204 = !{null, !277}
!14205 = !{!14206}
!14206 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14202, file: !1942, line: 432, type: !277)
!14207 = !DILocation(line: 0, scope: !14202)
!14208 = !DILocation(line: 435, column: 2, scope: !14202)
!14209 = !DILocation(line: 445, column: 2, scope: !14202)
!14210 = distinct !DISubprogram(name: "bg_thread_main", scope: !1942, file: !1942, line: 277, type: !323, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14211)
!14211 = !{!14212, !14213, !14214}
!14212 = !DILocalVariable(name: "unused1", arg: 1, scope: !14210, file: !1942, line: 277, type: !102)
!14213 = !DILocalVariable(name: "unused2", arg: 2, scope: !14210, file: !1942, line: 277, type: !102)
!14214 = !DILocalVariable(name: "unused3", arg: 3, scope: !14210, file: !1942, line: 277, type: !102)
!14215 = !DILocation(line: 0, scope: !14210)
!14216 = !DILocation(line: 291, column: 20, scope: !14210)
!14217 = !DILocation(line: 293, column: 2, scope: !14210)
!14218 = !DILocation(line: 297, column: 2, scope: !14210)
!14219 = !DILocation(line: 305, column: 2, scope: !14210)
!14220 = !DILocation(line: 307, column: 2, scope: !14210)
!14221 = !DILocation(line: 330, column: 8, scope: !14210)
!14222 = !DILocation(line: 333, column: 34, scope: !14210)
!14223 = !DILocation(line: 339, column: 1, scope: !14210)
!14224 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2199, file: !2199, line: 45, type: !14225, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14233)
!14225 = !DISubroutineType(types: !14226)
!14226 = !{null, !14227, !102}
!14227 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !137, line: 103, baseType: !14228)
!14228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14229, size: 32)
!14229 = !DISubroutineType(types: !14230)
!14230 = !{null, !14231, !102}
!14231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14232, size: 32)
!14232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2204)
!14233 = !{!14234, !14235}
!14234 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14224, file: !2199, line: 45, type: !14227)
!14235 = !DILocalVariable(name: "user_data", arg: 2, scope: !14224, file: !2199, line: 45, type: !102)
!14236 = !DILocation(line: 0, scope: !14224)
!14237 = !DILocation(line: 71, column: 1, scope: !14224)
!14238 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2199, file: !2199, line: 73, type: !14225, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14239)
!14239 = !{!14240, !14241}
!14240 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14238, file: !2199, line: 73, type: !14227)
!14241 = !DILocalVariable(name: "user_data", arg: 2, scope: !14238, file: !2199, line: 73, type: !102)
!14242 = !DILocation(line: 0, scope: !14238)
!14243 = !DILocation(line: 95, column: 1, scope: !14238)
!14244 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2199, file: !2199, line: 97, type: !8257, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !251)
!14245 = !DILocation(line: 1031, column: 3, scope: !14246, inlinedAt: !14249)
!14246 = distinct !DISubprogram(name: "__get_IPSR", scope: !7281, file: !7281, line: 1027, type: !3564, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14247)
!14247 = !{!14248}
!14248 = !DILocalVariable(name: "result", scope: !14246, file: !7281, line: 1029, type: !108)
!14249 = distinct !DILocation(line: 48, column: 10, scope: !14250, inlinedAt: !14251)
!14250 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8256, file: !8256, line: 46, type: !8257, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !251)
!14251 = distinct !DILocation(line: 99, column: 9, scope: !14244)
!14252 = !{i64 2470961}
!14253 = !DILocation(line: 0, scope: !14246, inlinedAt: !14249)
!14254 = !DILocation(line: 48, column: 9, scope: !14250, inlinedAt: !14251)
!14255 = !DILocation(line: 99, column: 2, scope: !14244)
!14256 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2199, file: !2199, line: 106, type: !334, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !251)
!14257 = !DILocation(line: 108, column: 2, scope: !14256)
!14258 = !DILocation(line: 108, column: 17, scope: !14256)
!14259 = !DILocation(line: 108, column: 30, scope: !14256)
!14260 = !DILocation(line: 109, column: 1, scope: !14256)
!14261 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2199, file: !2199, line: 116, type: !334, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !251)
!14262 = !DILocation(line: 118, column: 2, scope: !14261)
!14263 = !DILocation(line: 118, column: 17, scope: !14261)
!14264 = !DILocation(line: 118, column: 30, scope: !14261)
!14265 = !DILocation(line: 119, column: 1, scope: !14261)
!14266 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2199, file: !2199, line: 126, type: !8257, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !251)
!14267 = !DILocation(line: 128, column: 10, scope: !14266)
!14268 = !DILocation(line: 128, column: 25, scope: !14266)
!14269 = !DILocation(line: 128, column: 38, scope: !14266)
!14270 = !DILocation(line: 128, column: 53, scope: !14266)
!14271 = !DILocation(line: 128, column: 2, scope: !14266)
!14272 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2199, file: !2199, line: 187, type: !14273, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14275)
!14273 = !DISubroutineType(types: !14274)
!14274 = !{!103, !2203, !337}
!14275 = !{!14276, !14277}
!14276 = !DILocalVariable(name: "thread", arg: 1, scope: !14272, file: !2199, line: 187, type: !2203)
!14277 = !DILocalVariable(name: "value", arg: 2, scope: !14272, file: !2199, line: 187, type: !337)
!14278 = !DILocation(line: 0, scope: !14272)
!14279 = !DILocation(line: 206, column: 2, scope: !14272)
!14280 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2199, file: !2199, line: 238, type: !14281, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14283)
!14281 = !DISubroutineType(types: !14282)
!14282 = !{!337, !2203}
!14283 = !{!14284}
!14284 = !DILocalVariable(name: "thread", arg: 1, scope: !14280, file: !2199, line: 238, type: !2203)
!14285 = !DILocation(line: 0, scope: !14280)
!14286 = !DILocation(line: 244, column: 2, scope: !14280)
!14287 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2199, file: !2199, line: 248, type: !14288, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14290)
!14288 = !DISubroutineType(types: !14289)
!14289 = !{!103, !2202, !277, !132}
!14290 = !{!14291, !14292, !14293}
!14291 = !DILocalVariable(name: "thread", arg: 1, scope: !14287, file: !2199, line: 248, type: !2202)
!14292 = !DILocalVariable(name: "buf", arg: 2, scope: !14287, file: !2199, line: 248, type: !277)
!14293 = !DILocalVariable(name: "size", arg: 3, scope: !14287, file: !2199, line: 248, type: !132)
!14294 = !DILocation(line: 0, scope: !14287)
!14295 = !DILocation(line: 257, column: 2, scope: !14287)
!14296 = !DILocation(line: 0, scope: !2198)
!14297 = !DILocation(line: 281, column: 11, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !2198, file: !2199, line: 281, column: 6)
!14299 = !DILocation(line: 281, column: 20, scope: !14298)
!14300 = !DILocation(line: 275, column: 45, scope: !2198)
!14301 = !DILocation(line: 285, column: 10, scope: !2198)
!14302 = !DILocation(line: 0, scope: !2319)
!14303 = !DILocation(line: 293, column: 39, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !2319, file: !2199, line: 293, column: 2)
!14305 = !DILocation(line: 293, column: 2, scope: !2319)
!14306 = !DILocation(line: 273, column: 14, scope: !2198)
!14307 = !DILocation(line: 309, column: 2, scope: !2198)
!14308 = !DILocation(line: 309, column: 11, scope: !2198)
!14309 = !DILocation(line: 311, column: 2, scope: !2198)
!14310 = !DILocation(line: 293, column: 26, scope: !14304)
!14311 = !DILocation(line: 294, column: 9, scope: !14312)
!14312 = distinct !DILexicalBlock(scope: !14304, file: !2199, line: 293, column: 54)
!14313 = !DILocation(line: 295, column: 21, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14312, file: !2199, line: 295, column: 7)
!14315 = !DILocation(line: 295, column: 28, scope: !14314)
!14316 = !DILocation(line: 295, column: 7, scope: !14312)
!14317 = !DILocation(line: 299, column: 25, scope: !14312)
!14318 = !DILocation(line: 299, column: 41, scope: !14312)
!14319 = !DILocation(line: 300, column: 7, scope: !14312)
!14320 = !DILocation(line: 300, column: 26, scope: !14312)
!14321 = !DILocation(line: 299, column: 10, scope: !14312)
!14322 = !DILocation(line: 299, column: 7, scope: !14312)
!14323 = !DILocation(line: 302, column: 16, scope: !14312)
!14324 = !DILocation(line: 304, column: 20, scope: !14325)
!14325 = distinct !DILexicalBlock(scope: !14312, file: !2199, line: 304, column: 7)
!14326 = !DILocation(line: 304, column: 7, scope: !14312)
!14327 = !DILocation(line: 305, column: 26, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14325, file: !2199, line: 304, column: 26)
!14329 = !DILocation(line: 305, column: 42, scope: !14328)
!14330 = !DILocation(line: 305, column: 11, scope: !14328)
!14331 = !DILocation(line: 305, column: 8, scope: !14328)
!14332 = !DILocation(line: 306, column: 3, scope: !14328)
!14333 = !DILocation(line: 293, column: 50, scope: !14304)
!14334 = !DILocation(line: 312, column: 1, scope: !2198)
!14335 = distinct !DISubprogram(name: "copy_bytes", scope: !2199, file: !2199, line: 261, type: !14336, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14338)
!14336 = !DISubroutineType(types: !14337)
!14337 = !{!132, !277, !132, !337, !132}
!14338 = !{!14339, !14340, !14341, !14342, !14343}
!14339 = !DILocalVariable(name: "dest", arg: 1, scope: !14335, file: !2199, line: 261, type: !277)
!14340 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14335, file: !2199, line: 261, type: !132)
!14341 = !DILocalVariable(name: "src", arg: 3, scope: !14335, file: !2199, line: 261, type: !337)
!14342 = !DILocalVariable(name: "src_size", arg: 4, scope: !14335, file: !2199, line: 261, type: !132)
!14343 = !DILocalVariable(name: "bytes_to_copy", scope: !14335, file: !2199, line: 263, type: !132)
!14344 = !DILocation(line: 0, scope: !14335)
!14345 = !DILocation(line: 265, column: 18, scope: !14335)
!14346 = !DILocation(line: 266, column: 2, scope: !14335)
!14347 = !DILocation(line: 268, column: 2, scope: !14335)
!14348 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2199, file: !2199, line: 383, type: !14349, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14351)
!14349 = !DISubroutineType(types: !14350)
!14350 = !{null, !2203}
!14351 = !{!14352}
!14352 = !DILocalVariable(name: "thread", arg: 1, scope: !14348, file: !2199, line: 383, type: !2203)
!14353 = !DILocation(line: 0, scope: !14348)
!14354 = !DILocation(line: 387, column: 2, scope: !14348)
!14355 = !DILocation(line: 388, column: 1, scope: !14348)
!14356 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2199, file: !2199, line: 528, type: !14357, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14364)
!14357 = !DISubroutineType(types: !14358)
!14358 = !{!277, !2203, !14359, !132, !321, !102, !102, !102, !103, !108, !337}
!14359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14360, size: 32)
!14360 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !14361)
!14361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !14362)
!14362 = !{!14363}
!14363 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14361, file: !316, line: 48, baseType: !278, size: 8)
!14364 = !{!14365, !14366, !14367, !14368, !14369, !14370, !14371, !14372, !14373, !14374, !14375}
!14365 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14356, file: !2199, line: 528, type: !2203)
!14366 = !DILocalVariable(name: "stack", arg: 2, scope: !14356, file: !2199, line: 529, type: !14359)
!14367 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14356, file: !2199, line: 529, type: !132)
!14368 = !DILocalVariable(name: "entry", arg: 4, scope: !14356, file: !2199, line: 530, type: !321)
!14369 = !DILocalVariable(name: "p1", arg: 5, scope: !14356, file: !2199, line: 531, type: !102)
!14370 = !DILocalVariable(name: "p2", arg: 6, scope: !14356, file: !2199, line: 531, type: !102)
!14371 = !DILocalVariable(name: "p3", arg: 7, scope: !14356, file: !2199, line: 531, type: !102)
!14372 = !DILocalVariable(name: "prio", arg: 8, scope: !14356, file: !2199, line: 532, type: !103)
!14373 = !DILocalVariable(name: "options", arg: 9, scope: !14356, file: !2199, line: 532, type: !108)
!14374 = !DILocalVariable(name: "name", arg: 10, scope: !14356, file: !2199, line: 532, type: !337)
!14375 = !DILocalVariable(name: "stack_ptr", scope: !14356, file: !2199, line: 534, type: !277)
!14376 = !DILocation(line: 0, scope: !14356)
!14377 = !DILocation(line: 550, column: 28, scope: !14356)
!14378 = !DILocation(line: 550, column: 2, scope: !14356)
!14379 = !DILocation(line: 553, column: 34, scope: !14356)
!14380 = !DILocation(line: 553, column: 2, scope: !14356)
!14381 = !DILocation(line: 554, column: 14, scope: !14356)
!14382 = !DILocation(line: 564, column: 2, scope: !14356)
!14383 = !DILocation(line: 567, column: 14, scope: !14356)
!14384 = !DILocation(line: 567, column: 24, scope: !14356)
!14385 = !DILocation(line: 612, column: 7, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14356, file: !2199, line: 612, column: 6)
!14387 = !DILocation(line: 612, column: 6, scope: !14356)
!14388 = !DILocation(line: 627, column: 40, scope: !14356)
!14389 = !DILocation(line: 637, column: 2, scope: !14356)
!14390 = !DILocation(line: 613, column: 15, scope: !14391)
!14391 = distinct !DILexicalBlock(scope: !14386, file: !2199, line: 612, column: 17)
!14392 = !DILocation(line: 613, column: 29, scope: !14391)
!14393 = !DILocation(line: 638, column: 1, scope: !14356)
!14394 = distinct !DISubprogram(name: "z_waitq_init", scope: !14395, file: !14395, line: 47, type: !14396, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14398)
!14395 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14396 = !DISubroutineType(types: !14397)
!14397 = !{null, !2234}
!14398 = !{!14399}
!14399 = !DILocalVariable(name: "w", arg: 1, scope: !14394, file: !14395, line: 47, type: !2234)
!14400 = !DILocation(line: 0, scope: !14394)
!14401 = !DILocation(line: 49, column: 21, scope: !14394)
!14402 = !DILocation(line: 49, column: 2, scope: !14394)
!14403 = !DILocation(line: 50, column: 1, scope: !14394)
!14404 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2199, file: !2199, line: 791, type: !14405, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14408)
!14405 = !DISubroutineType(types: !14406)
!14406 = !{null, !14407, !103, !108, !32}
!14407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!14408 = !{!14409, !14410, !14411, !14412}
!14409 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14404, file: !2199, line: 791, type: !14407)
!14410 = !DILocalVariable(name: "priority", arg: 2, scope: !14404, file: !2199, line: 791, type: !103)
!14411 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14404, file: !2199, line: 792, type: !108)
!14412 = !DILocalVariable(name: "options", arg: 4, scope: !14404, file: !2199, line: 792, type: !32)
!14413 = !DILocation(line: 0, scope: !14404)
!14414 = !DILocation(line: 795, column: 15, scope: !14404)
!14415 = !DILocation(line: 795, column: 25, scope: !14404)
!14416 = !DILocation(line: 796, column: 30, scope: !14404)
!14417 = !DILocation(line: 796, column: 15, scope: !14404)
!14418 = !DILocation(line: 796, column: 28, scope: !14404)
!14419 = !DILocation(line: 797, column: 30, scope: !14404)
!14420 = !DILocation(line: 797, column: 15, scope: !14404)
!14421 = !DILocation(line: 797, column: 28, scope: !14404)
!14422 = !DILocation(line: 799, column: 22, scope: !14404)
!14423 = !DILocation(line: 799, column: 15, scope: !14404)
!14424 = !DILocation(line: 799, column: 20, scope: !14404)
!14425 = !DILocation(line: 801, column: 15, scope: !14404)
!14426 = !DILocation(line: 801, column: 28, scope: !14404)
!14427 = !DILocation(line: 814, column: 2, scope: !14404)
!14428 = !DILocation(line: 815, column: 1, scope: !14404)
!14429 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2199, file: !2199, line: 449, type: !14430, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14432)
!14430 = !DISubroutineType(types: !14431)
!14431 = !{!277, !2203, !14359, !132}
!14432 = !{!14433, !14434, !14435, !14436, !14437, !14438, !14439, !14440}
!14433 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14429, file: !2199, line: 449, type: !2203)
!14434 = !DILocalVariable(name: "stack", arg: 2, scope: !14429, file: !2199, line: 450, type: !14359)
!14435 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14429, file: !2199, line: 450, type: !132)
!14436 = !DILocalVariable(name: "stack_obj_size", scope: !14429, file: !2199, line: 452, type: !132)
!14437 = !DILocalVariable(name: "stack_buf_size", scope: !14429, file: !2199, line: 452, type: !132)
!14438 = !DILocalVariable(name: "stack_ptr", scope: !14429, file: !2199, line: 453, type: !277)
!14439 = !DILocalVariable(name: "stack_buf_start", scope: !14429, file: !2199, line: 453, type: !277)
!14440 = !DILocalVariable(name: "delta", scope: !14429, file: !2199, line: 454, type: !132)
!14441 = !DILocation(line: 0, scope: !14429)
!14442 = !DILocation(line: 465, column: 20, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14429, file: !2199, line: 463, column: 2)
!14444 = !DILocation(line: 466, column: 21, scope: !14443)
!14445 = !DILocation(line: 473, column: 28, scope: !14429)
!14446 = !DILocation(line: 514, column: 33, scope: !14429)
!14447 = !DILocation(line: 514, column: 25, scope: !14429)
!14448 = !DILocation(line: 514, column: 31, scope: !14429)
!14449 = !DILocation(line: 515, column: 25, scope: !14429)
!14450 = !DILocation(line: 515, column: 30, scope: !14429)
!14451 = !DILocation(line: 516, column: 25, scope: !14429)
!14452 = !DILocation(line: 516, column: 31, scope: !14429)
!14453 = !DILocation(line: 520, column: 2, scope: !14429)
!14454 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !316, file: !316, line: 331, type: !14455, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14457)
!14455 = !DISubroutineType(types: !14456)
!14456 = !{!277, !14359}
!14457 = !{!14458}
!14458 = !DILocalVariable(name: "sym", arg: 1, scope: !14454, file: !316, line: 331, type: !14359)
!14459 = !DILocation(line: 0, scope: !14454)
!14460 = !DILocation(line: 333, column: 21, scope: !14454)
!14461 = !DILocation(line: 333, column: 2, scope: !14454)
!14462 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14463, file: !14463, line: 40, type: !14464, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14466)
!14463 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14464 = !DISubroutineType(types: !14465)
!14465 = !{null, !14407}
!14466 = !{!14467}
!14467 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14462, file: !14463, line: 40, type: !14407)
!14468 = !DILocation(line: 0, scope: !14462)
!14469 = !DILocation(line: 42, column: 31, scope: !14462)
!14470 = !DILocation(line: 42, column: 2, scope: !14462)
!14471 = !DILocation(line: 43, column: 1, scope: !14462)
!14472 = distinct !DISubprogram(name: "z_init_timeout", scope: !14463, file: !14463, line: 25, type: !2260, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14473)
!14473 = !{!14474}
!14474 = !DILocalVariable(name: "to", arg: 1, scope: !14472, file: !14463, line: 25, type: !2262)
!14475 = !DILocation(line: 0, scope: !14472)
!14476 = !DILocation(line: 27, column: 22, scope: !14472)
!14477 = !DILocation(line: 27, column: 2, scope: !14472)
!14478 = !DILocation(line: 28, column: 1, scope: !14472)
!14479 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !14480, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14482)
!14480 = !DISubroutineType(types: !14481)
!14481 = !{null, !2306}
!14482 = !{!14483}
!14483 = !DILocalVariable(name: "node", arg: 1, scope: !14479, file: !146, line: 211, type: !2306)
!14484 = !DILocation(line: 0, scope: !14479)
!14485 = !DILocation(line: 213, column: 8, scope: !14479)
!14486 = !DILocation(line: 213, column: 13, scope: !14479)
!14487 = !DILocation(line: 214, column: 8, scope: !14479)
!14488 = !DILocation(line: 214, column: 13, scope: !14479)
!14489 = !DILocation(line: 215, column: 1, scope: !14479)
!14490 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !14491, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14494)
!14491 = !DISubroutineType(types: !14492)
!14492 = !{null, !14493}
!14493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!14494 = !{!14495}
!14495 = !DILocalVariable(name: "list", arg: 1, scope: !14490, file: !146, line: 197, type: !14493)
!14496 = !DILocation(line: 0, scope: !14490)
!14497 = !DILocation(line: 199, column: 8, scope: !14490)
!14498 = !DILocation(line: 199, column: 13, scope: !14490)
!14499 = !DILocation(line: 200, column: 8, scope: !14490)
!14500 = !DILocation(line: 200, column: 13, scope: !14490)
!14501 = !DILocation(line: 201, column: 1, scope: !14490)
!14502 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2199, file: !2199, line: 641, type: !14503, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14509)
!14503 = !DISubroutineType(types: !14504)
!14504 = !{!2202, !2203, !14359, !132, !321, !102, !102, !102, !103, !108, !14505}
!14505 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14506)
!14506 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14507)
!14507 = !{!14508}
!14508 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14506, file: !105, line: 66, baseType: !104, size: 64)
!14509 = !{!14510, !14511, !14512, !14513, !14514, !14515, !14516, !14517, !14518, !14519}
!14510 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14502, file: !2199, line: 641, type: !2203)
!14511 = !DILocalVariable(name: "stack", arg: 2, scope: !14502, file: !2199, line: 642, type: !14359)
!14512 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14502, file: !2199, line: 643, type: !132)
!14513 = !DILocalVariable(name: "entry", arg: 4, scope: !14502, file: !2199, line: 643, type: !321)
!14514 = !DILocalVariable(name: "p1", arg: 5, scope: !14502, file: !2199, line: 644, type: !102)
!14515 = !DILocalVariable(name: "p2", arg: 6, scope: !14502, file: !2199, line: 644, type: !102)
!14516 = !DILocalVariable(name: "p3", arg: 7, scope: !14502, file: !2199, line: 644, type: !102)
!14517 = !DILocalVariable(name: "prio", arg: 8, scope: !14502, file: !2199, line: 645, type: !103)
!14518 = !DILocalVariable(name: "options", arg: 9, scope: !14502, file: !2199, line: 645, type: !108)
!14519 = !DILocalVariable(name: "delay", arg: 10, scope: !14502, file: !2199, line: 645, type: !14505)
!14520 = !DILocation(line: 0, scope: !14502)
!14521 = !DILocation(line: 649, column: 2, scope: !14502)
!14522 = !DILocation(line: 652, column: 7, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14502, file: !2199, line: 652, column: 6)
!14524 = !DILocation(line: 652, column: 6, scope: !14502)
!14525 = !DILocation(line: 653, column: 3, scope: !14526)
!14526 = distinct !DILexicalBlock(scope: !14523, file: !2199, line: 652, column: 39)
!14527 = !DILocation(line: 654, column: 2, scope: !14526)
!14528 = !DILocation(line: 656, column: 2, scope: !14502)
!14529 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2199, file: !2199, line: 401, type: !14530, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14532)
!14530 = !DISubroutineType(types: !14531)
!14531 = !{null, !2203, !14505}
!14532 = !{!14533, !14534}
!14533 = !DILocalVariable(name: "thread", arg: 1, scope: !14529, file: !2199, line: 401, type: !2203)
!14534 = !DILocalVariable(name: "delay", arg: 2, scope: !14529, file: !2199, line: 401, type: !14505)
!14535 = !DILocation(line: 0, scope: !14529)
!14536 = !DILocation(line: 404, column: 6, scope: !14537)
!14537 = distinct !DILexicalBlock(scope: !14529, file: !2199, line: 404, column: 6)
!14538 = !DILocation(line: 404, column: 6, scope: !14529)
!14539 = !DILocation(line: 405, column: 3, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14537, file: !2199, line: 404, column: 38)
!14541 = !DILocation(line: 406, column: 2, scope: !14540)
!14542 = !DILocation(line: 407, column: 3, scope: !14543)
!14543 = distinct !DILexicalBlock(scope: !14537, file: !2199, line: 406, column: 9)
!14544 = !DILocation(line: 413, column: 1, scope: !14529)
!14545 = distinct !DISubprogram(name: "k_thread_start", scope: !3584, file: !3584, line: 205, type: !14546, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14548)
!14546 = !DISubroutineType(types: !14547)
!14547 = !{null, !2202}
!14548 = !{!14549}
!14549 = !DILocalVariable(name: "thread", arg: 1, scope: !14545, file: !3584, line: 205, type: !2202)
!14550 = !DILocation(line: 0, scope: !14545)
!14551 = !DILocation(line: 214, column: 2, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14545, file: !3584, line: 214, column: 2)
!14553 = !{i64 2152242755}
!14554 = !DILocation(line: 215, column: 2, scope: !14545)
!14555 = !DILocation(line: 216, column: 1, scope: !14545)
!14556 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14463, file: !14463, line: 47, type: !14530, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14557)
!14557 = !{!14558, !14559}
!14558 = !DILocalVariable(name: "thread", arg: 1, scope: !14556, file: !14463, line: 47, type: !2203)
!14559 = !DILocalVariable(name: "ticks", arg: 2, scope: !14556, file: !14463, line: 47, type: !14505)
!14560 = !DILocation(line: 0, scope: !14556)
!14561 = !DILocation(line: 49, column: 30, scope: !14556)
!14562 = !DILocation(line: 49, column: 2, scope: !14556)
!14563 = !DILocation(line: 50, column: 1, scope: !14556)
!14564 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2199, file: !2199, line: 748, type: !334, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14565)
!14565 = !{!14566, !14583}
!14566 = !DILocalVariable(name: "thread_data", scope: !14567, file: !2199, line: 750, type: !14568)
!14567 = distinct !DILexicalBlock(scope: !14564, file: !2199, line: 750, column: 2)
!14568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14569, size: 32)
!14569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !14570)
!14570 = !{!14571, !14572, !14573, !14574, !14575, !14576, !14577, !14578, !14579, !14580, !14581, !14582}
!14571 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14569, file: !137, line: 621, baseType: !2203, size: 32)
!14572 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14569, file: !137, line: 622, baseType: !14359, size: 32, offset: 32)
!14573 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14569, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!14574 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14569, file: !137, line: 624, baseType: !321, size: 32, offset: 96)
!14575 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14569, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!14576 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14569, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!14577 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14569, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!14578 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14569, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!14579 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14569, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!14580 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14569, file: !137, line: 630, baseType: !331, size: 32, offset: 288)
!14581 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14569, file: !137, line: 631, baseType: !333, size: 32, offset: 320)
!14582 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14569, file: !137, line: 632, baseType: !337, size: 32, offset: 352)
!14583 = !DILocalVariable(name: "thread_data", scope: !14584, file: !2199, line: 781, type: !14568)
!14584 = distinct !DILexicalBlock(scope: !14564, file: !2199, line: 781, column: 2)
!14585 = !DILocation(line: 0, scope: !14567)
!14586 = !DILocation(line: 750, column: 2, scope: !14567)
!14587 = !DILocation(line: 780, column: 2, scope: !14564)
!14588 = !DILocation(line: 0, scope: !14584)
!14589 = !DILocation(line: 781, column: 2, scope: !14584)
!14590 = !DILocation(line: 752, column: 17, scope: !14591)
!14591 = distinct !DILexicalBlock(scope: !14592, file: !2199, line: 750, column: 38)
!14592 = distinct !DILexicalBlock(scope: !14567, file: !2199, line: 750, column: 2)
!14593 = !DILocation(line: 753, column: 17, scope: !14591)
!14594 = !DILocation(line: 754, column: 17, scope: !14591)
!14595 = !DILocation(line: 755, column: 17, scope: !14591)
!14596 = !DILocation(line: 756, column: 17, scope: !14591)
!14597 = !DILocation(line: 757, column: 17, scope: !14591)
!14598 = !DILocation(line: 758, column: 17, scope: !14591)
!14599 = !DILocation(line: 759, column: 17, scope: !14591)
!14600 = !DILocation(line: 760, column: 17, scope: !14591)
!14601 = !DILocation(line: 751, column: 3, scope: !14591)
!14602 = !DILocation(line: 763, column: 16, scope: !14591)
!14603 = !DILocation(line: 763, column: 29, scope: !14591)
!14604 = !DILocation(line: 763, column: 39, scope: !14591)
!14605 = !DILocation(line: 750, column: 2, scope: !14592)
!14606 = !DILocation(line: 750, column: 2, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14592, file: !2199, line: 750, column: 2)
!14608 = distinct !{!14608, !14586, !14609}
!14609 = !DILocation(line: 764, column: 2, scope: !14567)
!14610 = !DILocation(line: 787, column: 2, scope: !14564)
!14611 = !DILocation(line: 788, column: 1, scope: !14564)
!14612 = !DILocation(line: 782, column: 20, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14614, file: !2199, line: 782, column: 7)
!14614 = distinct !DILexicalBlock(scope: !14615, file: !2199, line: 781, column: 38)
!14615 = distinct !DILexicalBlock(scope: !14584, file: !2199, line: 781, column: 2)
!14616 = !DILocation(line: 782, column: 31, scope: !14613)
!14617 = !DILocation(line: 782, column: 7, scope: !14614)
!14618 = !DILocation(line: 783, column: 37, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !14613, file: !2199, line: 782, column: 51)
!14620 = !DILocation(line: 784, column: 10, scope: !14619)
!14621 = !DILocation(line: 783, column: 4, scope: !14619)
!14622 = !DILocation(line: 785, column: 3, scope: !14619)
!14623 = !DILocation(line: 781, column: 2, scope: !14615)
!14624 = !DILocation(line: 781, column: 2, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14615, file: !2199, line: 781, column: 2)
!14626 = distinct !{!14626, !14589, !14627}
!14627 = !DILocation(line: 786, column: 2, scope: !14584)
!14628 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3570, file: !3570, line: 403, type: !3571, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14629)
!14629 = !{!14630}
!14630 = !DILocalVariable(name: "t", arg: 1, scope: !14628, file: !3570, line: 403, type: !109)
!14631 = !DILocation(line: 0, scope: !14628)
!14632 = !DILocalVariable(name: "t", arg: 1, scope: !14633, file: !3570, line: 102, type: !109)
!14633 = distinct !DISubprogram(name: "z_tmcvt", scope: !3570, file: !3570, line: 102, type: !3596, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14634)
!14634 = !{!14632, !14635, !14636, !14637, !14638, !14639, !14640, !14641, !14642, !14643, !14644}
!14635 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14633, file: !3570, line: 102, type: !108)
!14636 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14633, file: !3570, line: 103, type: !108)
!14637 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14633, file: !3570, line: 103, type: !131)
!14638 = !DILocalVariable(name: "result32", arg: 5, scope: !14633, file: !3570, line: 104, type: !131)
!14639 = !DILocalVariable(name: "round_up", arg: 6, scope: !14633, file: !3570, line: 104, type: !131)
!14640 = !DILocalVariable(name: "round_off", arg: 7, scope: !14633, file: !3570, line: 105, type: !131)
!14641 = !DILocalVariable(name: "mul_ratio", scope: !14633, file: !3570, line: 107, type: !131)
!14642 = !DILocalVariable(name: "div_ratio", scope: !14633, file: !3570, line: 109, type: !131)
!14643 = !DILocalVariable(name: "off", scope: !14633, file: !3570, line: 116, type: !109)
!14644 = !DILocalVariable(name: "rdivisor", scope: !14645, file: !3570, line: 119, type: !108)
!14645 = distinct !DILexicalBlock(scope: !14646, file: !3570, line: 118, column: 18)
!14646 = distinct !DILexicalBlock(scope: !14633, file: !3570, line: 118, column: 6)
!14647 = !DILocation(line: 0, scope: !14633, inlinedAt: !14648)
!14648 = distinct !DILocation(line: 406, column: 9, scope: !14628)
!14649 = !DILocation(line: 145, column: 13, scope: !14650, inlinedAt: !14648)
!14650 = distinct !DILexicalBlock(scope: !14651, file: !3570, line: 144, column: 10)
!14651 = distinct !DILexicalBlock(scope: !14652, file: !3570, line: 142, column: 7)
!14652 = distinct !DILexicalBlock(scope: !14653, file: !3570, line: 141, column: 24)
!14653 = distinct !DILexicalBlock(scope: !14654, file: !3570, line: 141, column: 13)
!14654 = distinct !DILexicalBlock(scope: !14633, file: !3570, line: 134, column: 6)
!14655 = !DILocation(line: 406, column: 2, scope: !14628)
!14656 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2199, file: !2199, line: 817, type: !4650, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14657)
!14657 = !{!14658, !14659, !14660, !14661}
!14658 = !DILocalVariable(name: "entry", arg: 1, scope: !14656, file: !2199, line: 817, type: !321)
!14659 = !DILocalVariable(name: "p1", arg: 2, scope: !14656, file: !2199, line: 818, type: !102)
!14660 = !DILocalVariable(name: "p2", arg: 3, scope: !14656, file: !2199, line: 818, type: !102)
!14661 = !DILocalVariable(name: "p3", arg: 4, scope: !14656, file: !2199, line: 818, type: !102)
!14662 = !DILocation(line: 0, scope: !14656)
!14663 = !DILocation(line: 822, column: 2, scope: !14656)
!14664 = !DILocation(line: 822, column: 17, scope: !14656)
!14665 = !DILocation(line: 822, column: 30, scope: !14656)
!14666 = !DILocation(line: 823, column: 2, scope: !14656)
!14667 = !DILocation(line: 845, column: 2, scope: !14656)
!14668 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2199, file: !2199, line: 888, type: !14669, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14671)
!14669 = !DISubroutineType(types: !14670)
!14670 = !{!103, !2203}
!14671 = !{!14672}
!14672 = !DILocalVariable(name: "thread", arg: 1, scope: !14668, file: !2199, line: 888, type: !2203)
!14673 = !DILocation(line: 0, scope: !14668)
!14674 = !DILocation(line: 893, column: 2, scope: !14668)
!14675 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2199, file: !2199, line: 897, type: !14676, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14678)
!14676 = !DISubroutineType(types: !14677)
!14677 = !{!103, !2203, !32}
!14678 = !{!14679, !14680}
!14679 = !DILocalVariable(name: "thread", arg: 1, scope: !14675, file: !2199, line: 897, type: !2203)
!14680 = !DILocalVariable(name: "options", arg: 2, scope: !14675, file: !2199, line: 897, type: !32)
!14681 = !DILocation(line: 0, scope: !14675)
!14682 = !DILocation(line: 902, column: 2, scope: !14675)
!14683 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2199, file: !2199, line: 1072, type: !14684, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14689)
!14684 = !DISubroutineType(types: !14685)
!14685 = !{!103, !2202, !14686}
!14686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14687, size: 32)
!14687 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !163, line: 234, baseType: !14688)
!14688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !163, line: 192, elements: !251)
!14689 = !{!14690, !14691}
!14690 = !DILocalVariable(name: "thread", arg: 1, scope: !14683, file: !2199, line: 1072, type: !2202)
!14691 = !DILocalVariable(name: "stats", arg: 2, scope: !14683, file: !2199, line: 1073, type: !14686)
!14692 = !DILocation(line: 0, scope: !14683)
!14693 = !DILocation(line: 1075, column: 14, scope: !14694)
!14694 = distinct !DILexicalBlock(scope: !14683, file: !2199, line: 1075, column: 6)
!14695 = !DILocation(line: 1075, column: 23, scope: !14694)
!14696 = !DILocation(line: 1086, column: 1, scope: !14683)
!14697 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2199, file: !2199, line: 1088, type: !14698, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14700)
!14698 = !DISubroutineType(types: !14699)
!14699 = !{!103, !14686}
!14700 = !{!14701}
!14701 = !DILocalVariable(name: "stats", arg: 1, scope: !14697, file: !2199, line: 1088, type: !14686)
!14702 = !DILocation(line: 0, scope: !14697)
!14703 = !DILocation(line: 1094, column: 12, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !14697, file: !2199, line: 1094, column: 6)
!14705 = !DILocation(line: 1120, column: 1, scope: !14697)
!14706 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14707, file: !14707, line: 20, type: !334, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !251)
!14707 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14708 = !DILocation(line: 30, column: 2, scope: !14706)
!14709 = !DILocation(line: 31, column: 1, scope: !14706)
!14710 = distinct !DISubprogram(name: "idle", scope: !14707, file: !14707, line: 33, type: !323, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !14711)
!14711 = !{!14712, !14713, !14714}
!14712 = !DILocalVariable(name: "unused1", arg: 1, scope: !14710, file: !14707, line: 33, type: !102)
!14713 = !DILocalVariable(name: "unused2", arg: 2, scope: !14710, file: !14707, line: 33, type: !102)
!14714 = !DILocalVariable(name: "unused3", arg: 3, scope: !14710, file: !14707, line: 33, type: !102)
!14715 = !DILocation(line: 0, scope: !14710)
!14716 = !DILocation(line: 41, column: 2, scope: !14710)
!14717 = !DILocation(line: 55, column: 2, scope: !14718, inlinedAt: !14722)
!14718 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6946, file: !6946, line: 42, type: !6947, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !14719)
!14719 = !{!14720, !14721}
!14720 = !DILocalVariable(name: "key", scope: !14718, file: !6946, line: 44, type: !32)
!14721 = !DILocalVariable(name: "tmp", scope: !14718, file: !6946, line: 53, type: !32)
!14722 = distinct !DILocation(line: 62, column: 10, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14710, file: !14707, line: 41, column: 15)
!14724 = !{i64 1650212}
!14725 = !DILocation(line: 0, scope: !14718, inlinedAt: !14722)
!14726 = !DILocation(line: 86, column: 3, scope: !14723)
!14727 = distinct !{!14727, !14716, !14728}
!14728 = !DILocation(line: 105, column: 2, scope: !14710)
!14729 = distinct !DISubprogram(name: "k_cpu_idle", scope: !137, file: !137, line: 5627, type: !334, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !251)
!14730 = !DILocation(line: 5629, column: 2, scope: !14729)
!14731 = !DILocation(line: 5630, column: 1, scope: !14729)
!14732 = !DISubprogram(name: "arch_cpu_idle", scope: !314, file: !314, line: 167, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14733 = distinct !DISubprogram(name: "k_msgq_init", scope: !14734, file: !14734, line: 35, type: !14735, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14750)
!14734 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14735 = !DISubroutineType(types: !14736)
!14736 = !{null, !14737, !277, !132, !108}
!14737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14738, size: 32)
!14738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !14739)
!14739 = !{!14740, !14741, !14742, !14743, !14744, !14745, !14746, !14747, !14748, !14749}
!14740 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14738, file: !137, line: 4206, baseType: !3241, size: 64)
!14741 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14738, file: !137, line: 4208, baseType: !3303, offset: 64)
!14742 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14738, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!14743 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14738, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!14744 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !14738, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!14745 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !14738, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!14746 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !14738, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!14747 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !14738, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!14748 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14738, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!14749 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14738, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!14750 = !{!14751, !14752, !14753, !14754}
!14751 = !DILocalVariable(name: "msgq", arg: 1, scope: !14733, file: !14734, line: 35, type: !14737)
!14752 = !DILocalVariable(name: "buffer", arg: 2, scope: !14733, file: !14734, line: 35, type: !277)
!14753 = !DILocalVariable(name: "msg_size", arg: 3, scope: !14733, file: !14734, line: 35, type: !132)
!14754 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !14733, file: !14734, line: 36, type: !108)
!14755 = !DILocation(line: 0, scope: !14733)
!14756 = !DILocation(line: 38, column: 8, scope: !14733)
!14757 = !DILocation(line: 38, column: 17, scope: !14733)
!14758 = !DILocation(line: 39, column: 8, scope: !14733)
!14759 = !DILocation(line: 39, column: 17, scope: !14733)
!14760 = !DILocation(line: 40, column: 8, scope: !14733)
!14761 = !DILocation(line: 40, column: 21, scope: !14733)
!14762 = !DILocation(line: 41, column: 40, scope: !14733)
!14763 = !DILocation(line: 41, column: 28, scope: !14733)
!14764 = !DILocation(line: 41, column: 8, scope: !14733)
!14765 = !DILocation(line: 41, column: 19, scope: !14733)
!14766 = !DILocation(line: 42, column: 8, scope: !14733)
!14767 = !DILocation(line: 42, column: 17, scope: !14733)
!14768 = !DILocation(line: 43, column: 8, scope: !14733)
!14769 = !DILocation(line: 43, column: 18, scope: !14733)
!14770 = !DILocation(line: 44, column: 8, scope: !14733)
!14771 = !DILocation(line: 44, column: 18, scope: !14733)
!14772 = !DILocation(line: 45, column: 8, scope: !14733)
!14773 = !DILocation(line: 45, column: 14, scope: !14733)
!14774 = !DILocation(line: 46, column: 22, scope: !14733)
!14775 = !DILocation(line: 46, column: 2, scope: !14733)
!14776 = !DILocation(line: 55, column: 1, scope: !14733)
!14777 = distinct !DISubprogram(name: "z_waitq_init", scope: !14395, file: !14395, line: 47, type: !14778, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14780)
!14778 = !DISubroutineType(types: !14779)
!14779 = !{null, !3240}
!14780 = !{!14781}
!14781 = !DILocalVariable(name: "w", arg: 1, scope: !14777, file: !14395, line: 47, type: !3240)
!14782 = !DILocation(line: 0, scope: !14777)
!14783 = !DILocation(line: 49, column: 21, scope: !14777)
!14784 = !DILocation(line: 49, column: 2, scope: !14777)
!14785 = !DILocation(line: 50, column: 1, scope: !14777)
!14786 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !14787, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14790)
!14787 = !DISubroutineType(types: !14788)
!14788 = !{null, !14789}
!14789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3245, size: 32)
!14790 = !{!14791}
!14791 = !DILocalVariable(name: "list", arg: 1, scope: !14786, file: !146, line: 197, type: !14789)
!14792 = !DILocation(line: 0, scope: !14786)
!14793 = !DILocation(line: 199, column: 8, scope: !14786)
!14794 = !DILocation(line: 199, column: 13, scope: !14786)
!14795 = !DILocation(line: 200, column: 8, scope: !14786)
!14796 = !DILocation(line: 200, column: 13, scope: !14786)
!14797 = !DILocation(line: 201, column: 1, scope: !14786)
!14798 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !14734, file: !14734, line: 57, type: !14799, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14801)
!14799 = !DISubroutineType(types: !14800)
!14800 = !{!103, !14737, !132, !108}
!14801 = !{!14802, !14803, !14804, !14805, !14806, !14807}
!14802 = !DILocalVariable(name: "msgq", arg: 1, scope: !14798, file: !14734, line: 57, type: !14737)
!14803 = !DILocalVariable(name: "msg_size", arg: 2, scope: !14798, file: !14734, line: 57, type: !132)
!14804 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !14798, file: !14734, line: 58, type: !108)
!14805 = !DILocalVariable(name: "buffer", scope: !14798, file: !14734, line: 60, type: !102)
!14806 = !DILocalVariable(name: "ret", scope: !14798, file: !14734, line: 61, type: !103)
!14807 = !DILocalVariable(name: "total_size", scope: !14798, file: !14734, line: 62, type: !132)
!14808 = !DILocation(line: 0, scope: !14798)
!14809 = !DILocation(line: 62, column: 2, scope: !14798)
!14810 = !DILocation(line: 66, column: 6, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14798, file: !14734, line: 66, column: 6)
!14812 = !DILocation(line: 66, column: 6, scope: !14798)
!14813 = !DILocation(line: 69, column: 28, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14811, file: !14734, line: 68, column: 9)
!14815 = !DILocation(line: 69, column: 12, scope: !14814)
!14816 = !DILocation(line: 70, column: 14, scope: !14817)
!14817 = distinct !DILexicalBlock(scope: !14814, file: !14734, line: 70, column: 7)
!14818 = !DILocation(line: 70, column: 7, scope: !14814)
!14819 = !DILocation(line: 71, column: 4, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14817, file: !14734, line: 70, column: 23)
!14821 = !DILocation(line: 72, column: 10, scope: !14820)
!14822 = !DILocation(line: 72, column: 16, scope: !14820)
!14823 = !DILocation(line: 74, column: 3, scope: !14820)
!14824 = !DILocation(line: 0, scope: !14811)
!14825 = !DILocation(line: 82, column: 1, scope: !14798)
!14826 = !DILocation(line: 81, column: 2, scope: !14798)
!14827 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14828, file: !14828, line: 105, type: !14829, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14831)
!14828 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14829 = !DISubroutineType(types: !14830)
!14830 = !{!131, !132, !132, !2724}
!14831 = !{!14832, !14833, !14834}
!14832 = !DILocalVariable(name: "a", arg: 1, scope: !14827, file: !14828, line: 105, type: !132)
!14833 = !DILocalVariable(name: "b", arg: 2, scope: !14827, file: !14828, line: 105, type: !132)
!14834 = !DILocalVariable(name: "result", arg: 3, scope: !14827, file: !14828, line: 105, type: !2724)
!14835 = !DILocation(line: 0, scope: !14827)
!14836 = !DILocation(line: 107, column: 9, scope: !14827)
!14837 = !DILocation(line: 107, column: 2, scope: !14827)
!14838 = distinct !DISubprogram(name: "z_thread_malloc", scope: !14839, file: !14839, line: 102, type: !14840, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14841)
!14839 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14840 = !DISubroutineType(types: !3184)
!14841 = !{!14842}
!14842 = !DILocalVariable(name: "size", arg: 1, scope: !14838, file: !14839, line: 102, type: !132)
!14843 = !DILocation(line: 0, scope: !14838)
!14844 = !DILocation(line: 104, column: 9, scope: !14838)
!14845 = !DILocation(line: 104, column: 2, scope: !14838)
!14846 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !14734, file: !14734, line: 95, type: !14847, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14849)
!14847 = !DISubroutineType(types: !14848)
!14848 = !{!103, !14737}
!14849 = !{!14850}
!14850 = !DILocalVariable(name: "msgq", arg: 1, scope: !14846, file: !14734, line: 95, type: !14737)
!14851 = !DILocation(line: 0, scope: !14846)
!14852 = !DILocation(line: 99, column: 2, scope: !14853)
!14853 = distinct !DILexicalBlock(scope: !14846, file: !14734, line: 99, column: 2)
!14854 = !DILocation(line: 99, column: 2, scope: !14846)
!14855 = !DILocation(line: 105, column: 13, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14846, file: !14734, line: 105, column: 6)
!14857 = !DILocation(line: 105, column: 19, scope: !14856)
!14858 = !DILocation(line: 105, column: 40, scope: !14856)
!14859 = !DILocation(line: 105, column: 6, scope: !14846)
!14860 = !DILocation(line: 106, column: 16, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14856, file: !14734, line: 105, column: 47)
!14862 = !DILocation(line: 106, column: 3, scope: !14861)
!14863 = !DILocation(line: 107, column: 15, scope: !14861)
!14864 = !DILocation(line: 108, column: 2, scope: !14861)
!14865 = !DILocation(line: 113, column: 1, scope: !14846)
!14866 = distinct !DISubprogram(name: "z_waitq_head", scope: !14395, file: !14395, line: 52, type: !14867, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14869)
!14867 = !DISubroutineType(types: !14868)
!14868 = !{!3223, !3240}
!14869 = !{!14870}
!14870 = !DILocalVariable(name: "w", arg: 1, scope: !14866, file: !14395, line: 52, type: !3240)
!14871 = !DILocation(line: 0, scope: !14866)
!14872 = !DILocation(line: 54, column: 52, scope: !14866)
!14873 = !DILocation(line: 54, column: 28, scope: !14866)
!14874 = !DILocation(line: 54, column: 9, scope: !14866)
!14875 = !DILocation(line: 54, column: 2, scope: !14866)
!14876 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !14877, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14879)
!14877 = !DISubroutineType(types: !14878)
!14878 = !{!3208, !14789}
!14879 = !{!14880}
!14880 = !DILocalVariable(name: "list", arg: 1, scope: !14876, file: !146, line: 294, type: !14789)
!14881 = !DILocation(line: 0, scope: !14876)
!14882 = !DILocation(line: 296, column: 9, scope: !14876)
!14883 = !DILocation(line: 296, column: 49, scope: !14876)
!14884 = !DILocation(line: 296, column: 2, scope: !14876)
!14885 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !14886, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14888)
!14886 = !DISubroutineType(types: !14887)
!14887 = !{!131, !14789}
!14888 = !{!14889}
!14889 = !DILocalVariable(name: "list", arg: 1, scope: !14885, file: !146, line: 266, type: !14789)
!14890 = !DILocation(line: 0, scope: !14885)
!14891 = !DILocation(line: 268, column: 15, scope: !14885)
!14892 = !DILocation(line: 268, column: 20, scope: !14885)
!14893 = !DILocation(line: 268, column: 2, scope: !14885)
!14894 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !14734, file: !14734, line: 116, type: !14895, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14901)
!14895 = !DISubroutineType(types: !14896)
!14896 = !{!103, !14737, !13, !14897}
!14897 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14898)
!14898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14899)
!14899 = !{!14900}
!14900 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14898, file: !105, line: 66, baseType: !104, size: 64)
!14901 = !{!14902, !14903, !14904, !14905, !14906, !14911}
!14902 = !DILocalVariable(name: "msgq", arg: 1, scope: !14894, file: !14734, line: 116, type: !14737)
!14903 = !DILocalVariable(name: "data", arg: 2, scope: !14894, file: !14734, line: 116, type: !13)
!14904 = !DILocalVariable(name: "timeout", arg: 3, scope: !14894, file: !14734, line: 116, type: !14897)
!14905 = !DILocalVariable(name: "pending_thread", scope: !14894, file: !14734, line: 120, type: !3223)
!14906 = !DILocalVariable(name: "key", scope: !14894, file: !14734, line: 121, type: !14907)
!14907 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !14908)
!14908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !14909)
!14909 = !{!14910}
!14910 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14908, file: !250, line: 33, baseType: !103, size: 32)
!14911 = !DILocalVariable(name: "result", scope: !14894, file: !14734, line: 122, type: !103)
!14912 = !DILocation(line: 0, scope: !14894)
!14913 = !DILocation(line: 124, column: 27, scope: !14894)
!14914 = !DILocalVariable(name: "l", arg: 1, scope: !14915, file: !250, line: 136, type: !14918)
!14915 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !14916, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14919)
!14916 = !DISubroutineType(types: !14917)
!14917 = !{!14907, !14918}
!14918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 32)
!14919 = !{!14914, !14920}
!14920 = !DILocalVariable(name: "k", scope: !14915, file: !250, line: 139, type: !14907)
!14921 = !DILocation(line: 0, scope: !14915, inlinedAt: !14922)
!14922 = distinct !DILocation(line: 124, column: 8, scope: !14894)
!14923 = !DILocation(line: 55, column: 2, scope: !14924, inlinedAt: !14928)
!14924 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6946, file: !6946, line: 42, type: !6947, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14925)
!14925 = !{!14926, !14927}
!14926 = !DILocalVariable(name: "key", scope: !14924, file: !6946, line: 44, type: !32)
!14927 = !DILocalVariable(name: "tmp", scope: !14924, file: !6946, line: 53, type: !32)
!14928 = distinct !DILocation(line: 145, column: 10, scope: !14915, inlinedAt: !14922)
!14929 = !{i64 1656349}
!14930 = !DILocation(line: 0, scope: !14924, inlinedAt: !14928)
!14931 = !DILocation(line: 128, column: 12, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14894, file: !14734, line: 128, column: 6)
!14933 = !DILocation(line: 128, column: 30, scope: !14932)
!14934 = !DILocation(line: 128, column: 22, scope: !14932)
!14935 = !DILocation(line: 128, column: 6, scope: !14894)
!14936 = !DILocation(line: 130, column: 49, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14932, file: !14734, line: 128, column: 40)
!14938 = !DILocation(line: 130, column: 20, scope: !14937)
!14939 = !DILocation(line: 131, column: 22, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14937, file: !14734, line: 131, column: 7)
!14941 = !DILocation(line: 131, column: 7, scope: !14937)
!14942 = !DILocation(line: 135, column: 38, scope: !14943)
!14943 = distinct !DILexicalBlock(scope: !14940, file: !14734, line: 131, column: 31)
!14944 = !DILocation(line: 136, column: 17, scope: !14943)
!14945 = !DILocation(line: 135, column: 10, scope: !14943)
!14946 = !DILocalVariable(name: "thread", arg: 1, scope: !14947, file: !14090, line: 65, type: !3223)
!14947 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14090, file: !14090, line: 65, type: !14948, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14950)
!14948 = !DISubroutineType(types: !14949)
!14949 = !{null, !3223, !32}
!14950 = !{!14946, !14951}
!14951 = !DILocalVariable(name: "value", arg: 2, scope: !14947, file: !14090, line: 65, type: !32)
!14952 = !DILocation(line: 0, scope: !14947, inlinedAt: !14953)
!14953 = distinct !DILocation(line: 138, column: 4, scope: !14943)
!14954 = !DILocation(line: 67, column: 15, scope: !14947, inlinedAt: !14953)
!14955 = !DILocation(line: 67, column: 33, scope: !14947, inlinedAt: !14953)
!14956 = !DILocation(line: 139, column: 4, scope: !14943)
!14957 = !DILocation(line: 140, column: 4, scope: !14943)
!14958 = !DILocation(line: 141, column: 4, scope: !14943)
!14959 = !DILocation(line: 144, column: 23, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14940, file: !14734, line: 142, column: 10)
!14961 = !DILocation(line: 144, column: 46, scope: !14960)
!14962 = !DILocation(line: 144, column: 10, scope: !14960)
!14963 = !DILocation(line: 145, column: 29, scope: !14960)
!14964 = !DILocation(line: 145, column: 20, scope: !14960)
!14965 = !DILocation(line: 146, column: 33, scope: !14966)
!14966 = distinct !DILexicalBlock(scope: !14960, file: !14734, line: 146, column: 8)
!14967 = !DILocation(line: 146, column: 24, scope: !14966)
!14968 = !DILocation(line: 146, column: 8, scope: !14960)
!14969 = !DILocation(line: 147, column: 29, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14966, file: !14734, line: 146, column: 45)
!14971 = !DILocation(line: 147, column: 21, scope: !14970)
!14972 = !DILocation(line: 148, column: 4, scope: !14970)
!14973 = !DILocation(line: 149, column: 19, scope: !14960)
!14974 = !DILocation(line: 155, column: 2, scope: !14937)
!14975 = !DILocation(line: 155, column: 13, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14932, file: !14734, line: 155, column: 13)
!14977 = !DILocation(line: 155, column: 13, scope: !14932)
!14978 = !DILocation(line: 162, column: 3, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !14976, file: !14734, line: 158, column: 9)
!14980 = !DILocation(line: 162, column: 18, scope: !14979)
!14981 = !DILocation(line: 162, column: 28, scope: !14979)
!14982 = !DILocation(line: 164, column: 49, scope: !14979)
!14983 = !DILocation(line: 164, column: 12, scope: !14979)
!14984 = !DILocation(line: 166, column: 3, scope: !14979)
!14985 = !DILocation(line: 0, scope: !14932)
!14986 = !DILocalVariable(name: "key", arg: 2, scope: !14987, file: !250, line: 190, type: !14907)
!14987 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !14988, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14990)
!14988 = !DISubroutineType(types: !14989)
!14989 = !{null, !14918, !14907}
!14990 = !{!14991, !14986}
!14991 = !DILocalVariable(name: "l", arg: 1, scope: !14987, file: !250, line: 189, type: !14918)
!14992 = !DILocation(line: 0, scope: !14987, inlinedAt: !14993)
!14993 = distinct !DILocation(line: 171, column: 2, scope: !14894)
!14994 = !DILocalVariable(name: "key", arg: 1, scope: !14995, file: !6946, line: 84, type: !32)
!14995 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6946, file: !6946, line: 84, type: !6957, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !14996)
!14996 = !{!14994}
!14997 = !DILocation(line: 0, scope: !14995, inlinedAt: !14998)
!14998 = distinct !DILocation(line: 215, column: 2, scope: !14987, inlinedAt: !14993)
!14999 = !DILocation(line: 95, column: 2, scope: !14995, inlinedAt: !14998)
!15000 = !{i64 1657166}
!15001 = !DILocation(line: 173, column: 2, scope: !14894)
!15002 = !DILocation(line: 174, column: 1, scope: !14894)
!15003 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !14734, file: !14734, line: 188, type: !15004, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !15012)
!15004 = !DISubroutineType(types: !15005)
!15005 = !{null, !14737, !15006}
!15006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15007, size: 32)
!15007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !137, line: 4259, size: 96, elements: !15008)
!15008 = !{!15009, !15010, !15011}
!15009 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15007, file: !137, line: 4261, baseType: !132, size: 32)
!15010 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15007, file: !137, line: 4263, baseType: !108, size: 32, offset: 32)
!15011 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15007, file: !137, line: 4265, baseType: !108, size: 32, offset: 64)
!15012 = !{!15013, !15014}
!15013 = !DILocalVariable(name: "msgq", arg: 1, scope: !15003, file: !14734, line: 188, type: !14737)
!15014 = !DILocalVariable(name: "attrs", arg: 2, scope: !15003, file: !14734, line: 188, type: !15006)
!15015 = !DILocation(line: 0, scope: !15003)
!15016 = !DILocation(line: 190, column: 26, scope: !15003)
!15017 = !DILocation(line: 190, column: 9, scope: !15003)
!15018 = !DILocation(line: 190, column: 18, scope: !15003)
!15019 = !DILocation(line: 191, column: 26, scope: !15003)
!15020 = !DILocation(line: 191, column: 9, scope: !15003)
!15021 = !DILocation(line: 191, column: 18, scope: !15003)
!15022 = !DILocation(line: 192, column: 27, scope: !15003)
!15023 = !DILocation(line: 192, column: 9, scope: !15003)
!15024 = !DILocation(line: 192, column: 19, scope: !15003)
!15025 = !DILocation(line: 193, column: 1, scope: !15003)
!15026 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !14734, file: !14734, line: 206, type: !15027, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !15029)
!15027 = !DISubroutineType(types: !15028)
!15028 = !{!103, !14737, !102, !14897}
!15029 = !{!15030, !15031, !15032, !15033, !15034, !15035}
!15030 = !DILocalVariable(name: "msgq", arg: 1, scope: !15026, file: !14734, line: 206, type: !14737)
!15031 = !DILocalVariable(name: "data", arg: 2, scope: !15026, file: !14734, line: 206, type: !102)
!15032 = !DILocalVariable(name: "timeout", arg: 3, scope: !15026, file: !14734, line: 206, type: !14897)
!15033 = !DILocalVariable(name: "key", scope: !15026, file: !14734, line: 210, type: !14907)
!15034 = !DILocalVariable(name: "pending_thread", scope: !15026, file: !14734, line: 211, type: !3223)
!15035 = !DILocalVariable(name: "result", scope: !15026, file: !14734, line: 212, type: !103)
!15036 = !DILocation(line: 0, scope: !15026)
!15037 = !DILocation(line: 214, column: 27, scope: !15026)
!15038 = !DILocation(line: 0, scope: !14915, inlinedAt: !15039)
!15039 = distinct !DILocation(line: 214, column: 8, scope: !15026)
!15040 = !DILocation(line: 55, column: 2, scope: !14924, inlinedAt: !15041)
!15041 = distinct !DILocation(line: 145, column: 10, scope: !14915, inlinedAt: !15039)
!15042 = !DILocation(line: 0, scope: !14924, inlinedAt: !15041)
!15043 = !DILocation(line: 218, column: 12, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !15026, file: !14734, line: 218, column: 6)
!15045 = !DILocation(line: 218, column: 22, scope: !15044)
!15046 = !DILocation(line: 218, column: 6, scope: !15026)
!15047 = !DILocation(line: 220, column: 28, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !15044, file: !14734, line: 218, column: 28)
!15049 = !DILocation(line: 220, column: 44, scope: !15048)
!15050 = !DILocation(line: 220, column: 9, scope: !15048)
!15051 = !DILocation(line: 221, column: 27, scope: !15048)
!15052 = !DILocation(line: 221, column: 18, scope: !15048)
!15053 = !DILocation(line: 222, column: 31, scope: !15054)
!15054 = distinct !DILexicalBlock(scope: !15048, file: !14734, line: 222, column: 7)
!15055 = !DILocation(line: 222, column: 22, scope: !15054)
!15056 = !DILocation(line: 222, column: 7, scope: !15048)
!15057 = !DILocation(line: 223, column: 27, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !15054, file: !14734, line: 222, column: 43)
!15059 = !DILocation(line: 223, column: 19, scope: !15058)
!15060 = !DILocation(line: 224, column: 3, scope: !15058)
!15061 = !DILocation(line: 225, column: 18, scope: !15048)
!15062 = !DILocation(line: 228, column: 49, scope: !15048)
!15063 = !DILocation(line: 228, column: 20, scope: !15048)
!15064 = !DILocation(line: 229, column: 22, scope: !15065)
!15065 = distinct !DILexicalBlock(scope: !15048, file: !14734, line: 229, column: 7)
!15066 = !DILocation(line: 229, column: 7, scope: !15048)
!15067 = !DILocation(line: 233, column: 23, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !15065, file: !14734, line: 229, column: 31)
!15069 = !DILocation(line: 233, column: 55, scope: !15068)
!15070 = !DILocation(line: 234, column: 17, scope: !15068)
!15071 = !DILocation(line: 233, column: 10, scope: !15068)
!15072 = !DILocation(line: 235, column: 29, scope: !15068)
!15073 = !DILocation(line: 235, column: 20, scope: !15068)
!15074 = !DILocation(line: 236, column: 33, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15068, file: !14734, line: 236, column: 8)
!15076 = !DILocation(line: 236, column: 24, scope: !15075)
!15077 = !DILocation(line: 236, column: 8, scope: !15068)
!15078 = !DILocation(line: 237, column: 29, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !15075, file: !14734, line: 236, column: 45)
!15080 = !DILocation(line: 237, column: 21, scope: !15079)
!15081 = !DILocation(line: 238, column: 4, scope: !15079)
!15082 = !DILocation(line: 239, column: 19, scope: !15068)
!15083 = !DILocation(line: 0, scope: !14947, inlinedAt: !15084)
!15084 = distinct !DILocation(line: 242, column: 4, scope: !15068)
!15085 = !DILocation(line: 67, column: 15, scope: !14947, inlinedAt: !15084)
!15086 = !DILocation(line: 67, column: 33, scope: !14947, inlinedAt: !15084)
!15087 = !DILocation(line: 243, column: 4, scope: !15068)
!15088 = !DILocation(line: 244, column: 4, scope: !15068)
!15089 = !DILocation(line: 248, column: 4, scope: !15068)
!15090 = !DILocation(line: 251, column: 13, scope: !15091)
!15091 = distinct !DILexicalBlock(scope: !15044, file: !14734, line: 251, column: 13)
!15092 = !DILocation(line: 251, column: 13, scope: !15044)
!15093 = !DILocation(line: 258, column: 3, scope: !15094)
!15094 = distinct !DILexicalBlock(scope: !15091, file: !14734, line: 254, column: 9)
!15095 = !DILocation(line: 258, column: 18, scope: !15094)
!15096 = !DILocation(line: 258, column: 28, scope: !15094)
!15097 = !DILocation(line: 260, column: 49, scope: !15094)
!15098 = !DILocation(line: 260, column: 12, scope: !15094)
!15099 = !DILocation(line: 262, column: 3, scope: !15094)
!15100 = !DILocation(line: 0, scope: !15044)
!15101 = !DILocation(line: 0, scope: !14987, inlinedAt: !15102)
!15102 = distinct !DILocation(line: 267, column: 2, scope: !15026)
!15103 = !DILocation(line: 0, scope: !14995, inlinedAt: !15104)
!15104 = distinct !DILocation(line: 215, column: 2, scope: !14987, inlinedAt: !15102)
!15105 = !DILocation(line: 95, column: 2, scope: !14995, inlinedAt: !15104)
!15106 = !DILocation(line: 269, column: 2, scope: !15026)
!15107 = !DILocation(line: 270, column: 1, scope: !15026)
!15108 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !14734, file: !14734, line: 284, type: !15109, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !15111)
!15109 = !DISubroutineType(types: !15110)
!15110 = !{!103, !14737, !102}
!15111 = !{!15112, !15113, !15114, !15115}
!15112 = !DILocalVariable(name: "msgq", arg: 1, scope: !15108, file: !14734, line: 284, type: !14737)
!15113 = !DILocalVariable(name: "data", arg: 2, scope: !15108, file: !14734, line: 284, type: !102)
!15114 = !DILocalVariable(name: "key", scope: !15108, file: !14734, line: 286, type: !14907)
!15115 = !DILocalVariable(name: "result", scope: !15108, file: !14734, line: 287, type: !103)
!15116 = !DILocation(line: 0, scope: !15108)
!15117 = !DILocation(line: 0, scope: !14915, inlinedAt: !15118)
!15118 = distinct !DILocation(line: 289, column: 8, scope: !15108)
!15119 = !DILocation(line: 55, column: 2, scope: !14924, inlinedAt: !15120)
!15120 = distinct !DILocation(line: 145, column: 10, scope: !14915, inlinedAt: !15118)
!15121 = !DILocation(line: 0, scope: !14924, inlinedAt: !15120)
!15122 = !DILocation(line: 291, column: 12, scope: !15123)
!15123 = distinct !DILexicalBlock(scope: !15108, file: !14734, line: 291, column: 6)
!15124 = !DILocation(line: 291, column: 22, scope: !15123)
!15125 = !DILocation(line: 291, column: 6, scope: !15108)
!15126 = !DILocation(line: 293, column: 28, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15123, file: !14734, line: 291, column: 28)
!15128 = !DILocation(line: 293, column: 44, scope: !15127)
!15129 = !DILocation(line: 293, column: 9, scope: !15127)
!15130 = !DILocation(line: 295, column: 2, scope: !15127)
!15131 = !DILocation(line: 0, scope: !15123)
!15132 = !DILocation(line: 0, scope: !14987, inlinedAt: !15133)
!15133 = distinct !DILocation(line: 302, column: 2, scope: !15108)
!15134 = !DILocation(line: 0, scope: !14995, inlinedAt: !15135)
!15135 = distinct !DILocation(line: 215, column: 2, scope: !14987, inlinedAt: !15133)
!15136 = !DILocation(line: 95, column: 2, scope: !14995, inlinedAt: !15135)
!15137 = !DILocation(line: 304, column: 2, scope: !15108)
!15138 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !14734, file: !14734, line: 318, type: !15139, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !15141)
!15139 = !DISubroutineType(types: !15140)
!15140 = !{null, !14737}
!15141 = !{!15142, !15143, !15144}
!15142 = !DILocalVariable(name: "msgq", arg: 1, scope: !15138, file: !14734, line: 318, type: !14737)
!15143 = !DILocalVariable(name: "key", scope: !15138, file: !14734, line: 320, type: !14907)
!15144 = !DILocalVariable(name: "pending_thread", scope: !15138, file: !14734, line: 321, type: !3223)
!15145 = !DILocation(line: 0, scope: !15138)
!15146 = !DILocation(line: 0, scope: !14915, inlinedAt: !15147)
!15147 = distinct !DILocation(line: 323, column: 8, scope: !15138)
!15148 = !DILocation(line: 55, column: 2, scope: !14924, inlinedAt: !15149)
!15149 = distinct !DILocation(line: 145, column: 10, scope: !14915, inlinedAt: !15147)
!15150 = !DILocation(line: 0, scope: !14924, inlinedAt: !15149)
!15151 = !DILocation(line: 328, column: 27, scope: !15138)
!15152 = !DILocation(line: 328, column: 65, scope: !15138)
!15153 = !DILocation(line: 328, column: 2, scope: !15138)
!15154 = !DILocation(line: 0, scope: !14947, inlinedAt: !15155)
!15155 = distinct !DILocation(line: 329, column: 3, scope: !15156)
!15156 = distinct !DILexicalBlock(scope: !15138, file: !14734, line: 328, column: 74)
!15157 = !DILocation(line: 67, column: 15, scope: !14947, inlinedAt: !15155)
!15158 = !DILocation(line: 67, column: 33, scope: !14947, inlinedAt: !15155)
!15159 = !DILocation(line: 330, column: 3, scope: !15156)
!15160 = distinct !{!15160, !15153, !15161}
!15161 = !DILocation(line: 331, column: 2, scope: !15138)
!15162 = !DILocation(line: 323, column: 27, scope: !15138)
!15163 = !DILocation(line: 333, column: 8, scope: !15138)
!15164 = !DILocation(line: 333, column: 18, scope: !15138)
!15165 = !DILocation(line: 334, column: 25, scope: !15138)
!15166 = !DILocation(line: 334, column: 8, scope: !15138)
!15167 = !DILocation(line: 334, column: 17, scope: !15138)
!15168 = !DILocation(line: 336, column: 2, scope: !15138)
!15169 = !DILocation(line: 337, column: 1, scope: !15138)
!15170 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2428, file: !2428, line: 49, type: !15171, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15180)
!15171 = !DISubroutineType(types: !15172)
!15172 = !{!103, !15173}
!15173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15174, size: 32)
!15174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !15175)
!15175 = !{!15176, !15177, !15178, !15179}
!15176 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15174, file: !137, line: 2722, baseType: !2359, size: 64)
!15177 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !15174, file: !137, line: 2724, baseType: !2341, size: 32, offset: 64)
!15178 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !15174, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!15179 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !15174, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!15180 = !{!15181}
!15181 = !DILocalVariable(name: "mutex", arg: 1, scope: !15170, file: !2428, line: 49, type: !15173)
!15182 = !DILocation(line: 0, scope: !15170)
!15183 = !DILocation(line: 51, column: 9, scope: !15170)
!15184 = !DILocation(line: 51, column: 15, scope: !15170)
!15185 = !DILocation(line: 52, column: 9, scope: !15170)
!15186 = !DILocation(line: 52, column: 20, scope: !15170)
!15187 = !DILocation(line: 54, column: 23, scope: !15170)
!15188 = !DILocation(line: 54, column: 2, scope: !15170)
!15189 = !DILocation(line: 60, column: 2, scope: !15170)
!15190 = distinct !DISubprogram(name: "z_waitq_init", scope: !14395, file: !14395, line: 47, type: !15191, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15193)
!15191 = !DISubroutineType(types: !15192)
!15192 = !{null, !2358}
!15193 = !{!15194}
!15194 = !DILocalVariable(name: "w", arg: 1, scope: !15190, file: !14395, line: 47, type: !2358)
!15195 = !DILocation(line: 0, scope: !15190)
!15196 = !DILocation(line: 49, column: 21, scope: !15190)
!15197 = !DILocation(line: 49, column: 2, scope: !15190)
!15198 = !DILocation(line: 50, column: 1, scope: !15190)
!15199 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !15200, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15203)
!15200 = !DISubroutineType(types: !15201)
!15201 = !{null, !15202}
!15202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!15203 = !{!15204}
!15204 = !DILocalVariable(name: "list", arg: 1, scope: !15199, file: !146, line: 197, type: !15202)
!15205 = !DILocation(line: 0, scope: !15199)
!15206 = !DILocation(line: 199, column: 8, scope: !15199)
!15207 = !DILocation(line: 199, column: 13, scope: !15199)
!15208 = !DILocation(line: 200, column: 8, scope: !15199)
!15209 = !DILocation(line: 200, column: 13, scope: !15199)
!15210 = !DILocation(line: 201, column: 1, scope: !15199)
!15211 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2428, file: !2428, line: 95, type: !15212, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15218)
!15212 = !DISubroutineType(types: !15213)
!15213 = !{!103, !15173, !15214}
!15214 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15215)
!15215 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15216)
!15216 = !{!15217}
!15217 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15215, file: !105, line: 66, baseType: !104, size: 64)
!15218 = !{!15219, !15220, !15221, !15222, !15227, !15228, !15229}
!15219 = !DILocalVariable(name: "mutex", arg: 1, scope: !15211, file: !2428, line: 95, type: !15173)
!15220 = !DILocalVariable(name: "timeout", arg: 2, scope: !15211, file: !2428, line: 95, type: !15214)
!15221 = !DILocalVariable(name: "new_prio", scope: !15211, file: !2428, line: 97, type: !103)
!15222 = !DILocalVariable(name: "key", scope: !15211, file: !2428, line: 98, type: !15223)
!15223 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !15224)
!15224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !15225)
!15225 = !{!15226}
!15226 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15224, file: !250, line: 33, baseType: !103, size: 32)
!15227 = !DILocalVariable(name: "resched", scope: !15211, file: !2428, line: 99, type: !131)
!15228 = !DILocalVariable(name: "got_mutex", scope: !15211, file: !2428, line: 146, type: !103)
!15229 = !DILocalVariable(name: "waiter", scope: !15230, file: !2428, line: 169, type: !2341)
!15230 = distinct !DILexicalBlock(scope: !15231, file: !2428, line: 168, column: 36)
!15231 = distinct !DILexicalBlock(scope: !15211, file: !2428, line: 168, column: 6)
!15232 = !DILocation(line: 0, scope: !15211)
!15233 = !DILocalVariable(name: "l", arg: 1, scope: !15234, file: !250, line: 136, type: !15237)
!15234 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !15235, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15238)
!15235 = !DISubroutineType(types: !15236)
!15236 = !{!15223, !15237}
!15237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!15238 = !{!15233, !15239}
!15239 = !DILocalVariable(name: "k", scope: !15234, file: !250, line: 139, type: !15223)
!15240 = !DILocation(line: 0, scope: !15234, inlinedAt: !15241)
!15241 = distinct !DILocation(line: 105, column: 8, scope: !15211)
!15242 = !DILocation(line: 55, column: 2, scope: !15243, inlinedAt: !15247)
!15243 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6946, file: !6946, line: 42, type: !6947, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15244)
!15244 = !{!15245, !15246}
!15245 = !DILocalVariable(name: "key", scope: !15243, file: !6946, line: 44, type: !32)
!15246 = !DILocalVariable(name: "tmp", scope: !15243, file: !6946, line: 53, type: !32)
!15247 = distinct !DILocation(line: 145, column: 10, scope: !15234, inlinedAt: !15241)
!15248 = !{i64 1654620}
!15249 = !DILocation(line: 0, scope: !15243, inlinedAt: !15247)
!15250 = !DILocation(line: 107, column: 6, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15211, file: !2428, line: 107, column: 6)
!15252 = !DILocation(line: 107, column: 6, scope: !15211)
!15253 = !{!"branch_weights", i32 2000, i32 1}
!15254 = !DILocation(line: 110, column: 6, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15251, file: !2428, line: 107, column: 71)
!15256 = !DILocation(line: 110, column: 21, scope: !15255)
!15257 = !DILocation(line: 109, column: 28, scope: !15255)
!15258 = !DILocation(line: 111, column: 13, scope: !15255)
!15259 = !DILocation(line: 114, column: 18, scope: !15255)
!15260 = !DILocation(line: 109, column: 10, scope: !15255)
!15261 = !DILocation(line: 109, column: 26, scope: !15255)
!15262 = !DILocation(line: 113, column: 20, scope: !15255)
!15263 = !DILocation(line: 114, column: 10, scope: !15255)
!15264 = !DILocation(line: 114, column: 16, scope: !15255)
!15265 = !DILocalVariable(name: "key", arg: 2, scope: !15266, file: !250, line: 190, type: !15223)
!15266 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !15267, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15269)
!15267 = !DISubroutineType(types: !15268)
!15268 = !{null, !15237, !15223}
!15269 = !{!15270, !15265}
!15270 = !DILocalVariable(name: "l", arg: 1, scope: !15266, file: !250, line: 189, type: !15237)
!15271 = !DILocation(line: 0, scope: !15266, inlinedAt: !15272)
!15272 = distinct !DILocation(line: 120, column: 3, scope: !15255)
!15273 = !DILocalVariable(name: "key", arg: 1, scope: !15274, file: !6946, line: 84, type: !32)
!15274 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6946, file: !6946, line: 84, type: !6957, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15275)
!15275 = !{!15273}
!15276 = !DILocation(line: 0, scope: !15274, inlinedAt: !15277)
!15277 = distinct !DILocation(line: 215, column: 2, scope: !15266, inlinedAt: !15272)
!15278 = !DILocation(line: 95, column: 2, scope: !15274, inlinedAt: !15277)
!15279 = !{i64 1655437}
!15280 = !DILocation(line: 124, column: 3, scope: !15255)
!15281 = !DILocation(line: 127, column: 6, scope: !15282)
!15282 = distinct !DILexicalBlock(scope: !15211, file: !2428, line: 127, column: 6)
!15283 = !DILocation(line: 127, column: 6, scope: !15211)
!15284 = !{!"branch_weights", i32 1, i32 2000}
!15285 = !DILocation(line: 0, scope: !15266, inlinedAt: !15286)
!15286 = distinct !DILocation(line: 128, column: 3, scope: !15287)
!15287 = distinct !DILexicalBlock(scope: !15282, file: !2428, line: 127, column: 50)
!15288 = !DILocation(line: 0, scope: !15274, inlinedAt: !15289)
!15289 = distinct !DILocation(line: 215, column: 2, scope: !15266, inlinedAt: !15286)
!15290 = !DILocation(line: 95, column: 2, scope: !15274, inlinedAt: !15289)
!15291 = !DILocation(line: 132, column: 3, scope: !15287)
!15292 = !DILocation(line: 137, column: 53, scope: !15211)
!15293 = !DILocation(line: 137, column: 38, scope: !15211)
!15294 = !DILocation(line: 138, column: 29, scope: !15211)
!15295 = !DILocation(line: 138, column: 10, scope: !15211)
!15296 = !DILocation(line: 137, column: 13, scope: !15211)
!15297 = !DILocation(line: 142, column: 6, scope: !15298)
!15298 = distinct !DILexicalBlock(scope: !15211, file: !2428, line: 142, column: 6)
!15299 = !DILocation(line: 142, column: 6, scope: !15211)
!15300 = !DILocation(line: 143, column: 13, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15298, file: !2428, line: 142, column: 59)
!15302 = !DILocation(line: 144, column: 2, scope: !15301)
!15303 = !DILocation(line: 146, column: 50, scope: !15211)
!15304 = !DILocation(line: 146, column: 18, scope: !15211)
!15305 = !DILocation(line: 153, column: 16, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15211, file: !2428, line: 153, column: 6)
!15307 = !DILocation(line: 153, column: 6, scope: !15211)
!15308 = !DILocation(line: 0, scope: !15234, inlinedAt: !15309)
!15309 = distinct !DILocation(line: 162, column: 8, scope: !15211)
!15310 = !DILocation(line: 55, column: 2, scope: !15243, inlinedAt: !15311)
!15311 = distinct !DILocation(line: 145, column: 10, scope: !15234, inlinedAt: !15309)
!15312 = !DILocation(line: 0, scope: !15243, inlinedAt: !15311)
!15313 = !DILocation(line: 168, column: 6, scope: !15231)
!15314 = !DILocation(line: 168, column: 6, scope: !15211)
!15315 = !DILocation(line: 169, column: 29, scope: !15230)
!15316 = !DILocation(line: 0, scope: !15230)
!15317 = !DILocation(line: 171, column: 22, scope: !15230)
!15318 = !DILocation(line: 171, column: 14, scope: !15230)
!15319 = !DILocation(line: 172, column: 42, scope: !15230)
!15320 = !DILocation(line: 172, column: 29, scope: !15230)
!15321 = !DILocation(line: 172, column: 55, scope: !15230)
!15322 = !DILocation(line: 172, column: 4, scope: !15230)
!15323 = !DILocation(line: 173, column: 11, scope: !15230)
!15324 = !DILocation(line: 177, column: 13, scope: !15230)
!15325 = !DILocation(line: 177, column: 48, scope: !15230)
!15326 = !DILocation(line: 180, column: 6, scope: !15211)
!15327 = !DILocation(line: 181, column: 3, scope: !15328)
!15328 = distinct !DILexicalBlock(scope: !15329, file: !2428, line: 180, column: 15)
!15329 = distinct !DILexicalBlock(scope: !15211, file: !2428, line: 180, column: 6)
!15330 = !DILocation(line: 182, column: 2, scope: !15328)
!15331 = !DILocation(line: 0, scope: !15266, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 183, column: 3, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15329, file: !2428, line: 182, column: 9)
!15334 = !DILocation(line: 0, scope: !15274, inlinedAt: !15335)
!15335 = distinct !DILocation(line: 215, column: 2, scope: !15266, inlinedAt: !15332)
!15336 = !DILocation(line: 95, column: 2, scope: !15274, inlinedAt: !15335)
!15337 = !DILocation(line: 189, column: 1, scope: !15211)
!15338 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2428, file: !2428, line: 72, type: !15339, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15341)
!15339 = !DISubroutineType(types: !15340)
!15340 = !{!331, !331, !331}
!15341 = !{!15342, !15343, !15344}
!15342 = !DILocalVariable(name: "target", arg: 1, scope: !15338, file: !2428, line: 72, type: !331)
!15343 = !DILocalVariable(name: "limit", arg: 2, scope: !15338, file: !2428, line: 72, type: !331)
!15344 = !DILocalVariable(name: "new_prio", scope: !15338, file: !2428, line: 74, type: !103)
!15345 = !DILocation(line: 0, scope: !15338)
!15346 = !DILocation(line: 74, column: 17, scope: !15338)
!15347 = !DILocation(line: 76, column: 13, scope: !15338)
!15348 = !DILocation(line: 78, column: 2, scope: !15338)
!15349 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14070, file: !14070, line: 211, type: !15350, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15352)
!15350 = !DISubroutineType(types: !15351)
!15351 = !{!131, !103, !103}
!15352 = !{!15353, !15354}
!15353 = !DILocalVariable(name: "prio", arg: 1, scope: !15349, file: !14070, line: 211, type: !103)
!15354 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15349, file: !14070, line: 211, type: !103)
!15355 = !DILocation(line: 0, scope: !15349)
!15356 = !DILocation(line: 213, column: 9, scope: !15349)
!15357 = !DILocation(line: 213, column: 2, scope: !15349)
!15358 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2428, file: !2428, line: 81, type: !15359, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15361)
!15359 = !DISubroutineType(types: !15360)
!15360 = !{!131, !15173, !331}
!15361 = !{!15362, !15363}
!15362 = !DILocalVariable(name: "mutex", arg: 1, scope: !15358, file: !2428, line: 81, type: !15173)
!15363 = !DILocalVariable(name: "new_prio", arg: 2, scope: !15358, file: !2428, line: 81, type: !331)
!15364 = !DILocation(line: 0, scope: !15358)
!15365 = !DILocation(line: 83, column: 13, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15358, file: !2428, line: 83, column: 6)
!15367 = !DILocation(line: 83, column: 25, scope: !15366)
!15368 = !DILocation(line: 83, column: 6, scope: !15366)
!15369 = !DILocation(line: 83, column: 30, scope: !15366)
!15370 = !DILocation(line: 83, column: 6, scope: !15358)
!15371 = !DILocation(line: 90, column: 10, scope: !15372)
!15372 = distinct !DILexicalBlock(scope: !15366, file: !2428, line: 83, column: 43)
!15373 = !DILocation(line: 90, column: 3, scope: !15372)
!15374 = !DILocation(line: 93, column: 1, scope: !15358)
!15375 = distinct !DISubprogram(name: "z_waitq_head", scope: !14395, file: !14395, line: 52, type: !15376, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15378)
!15376 = !DISubroutineType(types: !15377)
!15377 = !{!2341, !2358}
!15378 = !{!15379}
!15379 = !DILocalVariable(name: "w", arg: 1, scope: !15375, file: !14395, line: 52, type: !2358)
!15380 = !DILocation(line: 0, scope: !15375)
!15381 = !DILocation(line: 54, column: 52, scope: !15375)
!15382 = !DILocation(line: 54, column: 28, scope: !15375)
!15383 = !DILocation(line: 54, column: 9, scope: !15375)
!15384 = !DILocation(line: 54, column: 2, scope: !15375)
!15385 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15386, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15388)
!15386 = !DISubroutineType(types: !15387)
!15387 = !{!2326, !15202}
!15388 = !{!15389}
!15389 = !DILocalVariable(name: "list", arg: 1, scope: !15385, file: !146, line: 294, type: !15202)
!15390 = !DILocation(line: 0, scope: !15385)
!15391 = !DILocation(line: 296, column: 9, scope: !15385)
!15392 = !DILocation(line: 296, column: 49, scope: !15385)
!15393 = !DILocation(line: 296, column: 2, scope: !15385)
!15394 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15395, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15397)
!15395 = !DISubroutineType(types: !15396)
!15396 = !{!131, !15202}
!15397 = !{!15398}
!15398 = !DILocalVariable(name: "list", arg: 1, scope: !15394, file: !146, line: 266, type: !15202)
!15399 = !DILocation(line: 0, scope: !15394)
!15400 = !DILocation(line: 268, column: 15, scope: !15394)
!15401 = !DILocation(line: 268, column: 20, scope: !15394)
!15402 = !DILocation(line: 268, column: 2, scope: !15394)
!15403 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14070, file: !14070, line: 206, type: !15350, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15404)
!15404 = !{!15405, !15406}
!15405 = !DILocalVariable(name: "prio1", arg: 1, scope: !15403, file: !14070, line: 206, type: !103)
!15406 = !DILocalVariable(name: "prio2", arg: 2, scope: !15403, file: !14070, line: 206, type: !103)
!15407 = !DILocation(line: 0, scope: !15403)
!15408 = !DILocation(line: 208, column: 15, scope: !15403)
!15409 = !DILocation(line: 208, column: 2, scope: !15403)
!15410 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !14070, file: !14070, line: 186, type: !396, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15411)
!15411 = !{!15412}
!15412 = !DILocalVariable(name: "prio", arg: 1, scope: !15410, file: !14070, line: 186, type: !103)
!15413 = !DILocation(line: 0, scope: !15410)
!15414 = !DILocation(line: 188, column: 9, scope: !15410)
!15415 = !DILocation(line: 188, column: 2, scope: !15410)
!15416 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !14070, file: !14070, line: 181, type: !15417, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15419)
!15417 = !DISubroutineType(types: !15418)
!15418 = !{!131, !103}
!15419 = !{!15420}
!15420 = !DILocalVariable(name: "prio", arg: 1, scope: !15416, file: !14070, line: 181, type: !103)
!15421 = !DILocation(line: 0, scope: !15416)
!15422 = !DILocation(line: 183, column: 14, scope: !15416)
!15423 = !DILocation(line: 183, column: 2, scope: !15416)
!15424 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2428, file: !2428, line: 201, type: !15171, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15425)
!15425 = !{!15426, !15427, !15428, !15429}
!15426 = !DILocalVariable(name: "mutex", arg: 1, scope: !15424, file: !2428, line: 201, type: !15173)
!15427 = !DILocalVariable(name: "new_owner", scope: !15424, file: !2428, line: 203, type: !2341)
!15428 = !DILocalVariable(name: "key", scope: !15424, file: !2428, line: 242, type: !15223)
!15429 = !DILabel(scope: !15424, name: "k_mutex_unlock_return", file: !2428, line: 270)
!15430 = !DILocation(line: 0, scope: !15424)
!15431 = !DILocation(line: 209, column: 2, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15424, file: !2428, line: 209, column: 2)
!15433 = !DILocation(line: 209, column: 2, scope: !15424)
!15434 = !DILocation(line: 217, column: 2, scope: !15435)
!15435 = distinct !DILexicalBlock(scope: !15424, file: !2428, line: 217, column: 2)
!15436 = !DILocation(line: 217, column: 2, scope: !15424)
!15437 = !DILocation(line: 237, column: 13, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15424, file: !2428, line: 237, column: 6)
!15439 = !DILocation(line: 237, column: 24, scope: !15438)
!15440 = !DILocation(line: 237, column: 6, scope: !15424)
!15441 = !DILocation(line: 238, column: 20, scope: !15442)
!15442 = distinct !DILexicalBlock(scope: !15438, file: !2428, line: 237, column: 30)
!15443 = !DILocation(line: 239, column: 3, scope: !15442)
!15444 = !DILocation(line: 0, scope: !15234, inlinedAt: !15445)
!15445 = distinct !DILocation(line: 242, column: 25, scope: !15424)
!15446 = !DILocation(line: 55, column: 2, scope: !15243, inlinedAt: !15447)
!15447 = distinct !DILocation(line: 145, column: 10, scope: !15234, inlinedAt: !15445)
!15448 = !DILocation(line: 0, scope: !15243, inlinedAt: !15447)
!15449 = !DILocation(line: 244, column: 34, scope: !15424)
!15450 = !DILocation(line: 244, column: 2, scope: !15424)
!15451 = !DILocation(line: 247, column: 44, scope: !15424)
!15452 = !DILocation(line: 247, column: 14, scope: !15424)
!15453 = !DILocation(line: 249, column: 15, scope: !15424)
!15454 = !DILocation(line: 254, column: 16, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15424, file: !2428, line: 254, column: 6)
!15456 = !DILocation(line: 254, column: 6, scope: !15424)
!15457 = !DILocation(line: 260, column: 44, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15455, file: !2428, line: 254, column: 25)
!15459 = !DILocation(line: 260, column: 28, scope: !15458)
!15460 = !DILocation(line: 260, column: 26, scope: !15458)
!15461 = !DILocalVariable(name: "thread", arg: 1, scope: !15462, file: !14090, line: 65, type: !2341)
!15462 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14090, file: !14090, line: 65, type: !15463, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15465)
!15463 = !DISubroutineType(types: !15464)
!15464 = !{null, !2341, !32}
!15465 = !{!15461, !15466}
!15466 = !DILocalVariable(name: "value", arg: 2, scope: !15462, file: !14090, line: 65, type: !32)
!15467 = !DILocation(line: 0, scope: !15462, inlinedAt: !15468)
!15468 = distinct !DILocation(line: 261, column: 3, scope: !15458)
!15469 = !DILocation(line: 67, column: 15, scope: !15462, inlinedAt: !15468)
!15470 = !DILocation(line: 67, column: 33, scope: !15462, inlinedAt: !15468)
!15471 = !DILocation(line: 262, column: 3, scope: !15458)
!15472 = !DILocation(line: 263, column: 3, scope: !15458)
!15473 = !DILocation(line: 264, column: 2, scope: !15458)
!15474 = !DILocation(line: 265, column: 21, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15455, file: !2428, line: 264, column: 9)
!15476 = !DILocation(line: 0, scope: !15266, inlinedAt: !15477)
!15477 = distinct !DILocation(line: 266, column: 3, scope: !15475)
!15478 = !DILocation(line: 0, scope: !15274, inlinedAt: !15479)
!15479 = distinct !DILocation(line: 215, column: 2, scope: !15266, inlinedAt: !15477)
!15480 = !DILocation(line: 95, column: 2, scope: !15274, inlinedAt: !15479)
!15481 = !DILocation(line: 274, column: 1, scope: !15424)
!15482 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2539, file: !2539, line: 93, type: !15483, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15485)
!15483 = !DISubroutineType(types: !15484)
!15484 = !{!331, !2434, !2434}
!15485 = !{!15486, !15487, !15488, !15489}
!15486 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15482, file: !2539, line: 93, type: !2434)
!15487 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15482, file: !2539, line: 94, type: !2434)
!15488 = !DILocalVariable(name: "b1", scope: !15482, file: !2539, line: 97, type: !331)
!15489 = !DILocalVariable(name: "b2", scope: !15482, file: !2539, line: 98, type: !331)
!15490 = !DILocation(line: 0, scope: !15482)
!15491 = !DILocation(line: 97, column: 30, scope: !15482)
!15492 = !DILocation(line: 98, column: 30, scope: !15482)
!15493 = !DILocation(line: 100, column: 9, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !15482, file: !2539, line: 100, column: 6)
!15495 = !DILocation(line: 100, column: 6, scope: !15482)
!15496 = !DILocation(line: 125, column: 1, scope: !15482)
!15497 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2539, file: !2539, line: 428, type: !15498, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15500)
!15498 = !DISubroutineType(types: !15499)
!15499 = !{null, !2434}
!15500 = !{!15501}
!15501 = !DILocalVariable(name: "curr", arg: 1, scope: !15497, file: !2539, line: 428, type: !2434)
!15502 = !DILocation(line: 0, scope: !15497)
!15503 = !DILocation(line: 434, column: 6, scope: !15504)
!15504 = distinct !DILexicalBlock(scope: !15497, file: !2539, line: 434, column: 6)
!15505 = !DILocation(line: 434, column: 23, scope: !15504)
!15506 = !DILocation(line: 434, column: 6, scope: !15497)
!15507 = !DILocation(line: 435, column: 50, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15504, file: !2539, line: 434, column: 29)
!15509 = !DILocation(line: 435, column: 48, scope: !15508)
!15510 = !DILocation(line: 435, column: 29, scope: !15508)
!15511 = !DILocation(line: 436, column: 24, scope: !15508)
!15512 = !DILocation(line: 436, column: 3, scope: !15508)
!15513 = !DILocation(line: 437, column: 2, scope: !15508)
!15514 = !DILocation(line: 438, column: 1, scope: !15497)
!15515 = distinct !DISubprogram(name: "slice_time", scope: !2539, file: !2539, line: 407, type: !15516, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15518)
!15516 = !DISubroutineType(types: !15517)
!15517 = !{!103, !2434}
!15518 = !{!15519, !15520}
!15519 = !DILocalVariable(name: "curr", arg: 1, scope: !15515, file: !2539, line: 407, type: !2434)
!15520 = !DILocalVariable(name: "ret", scope: !15515, file: !2539, line: 409, type: !103)
!15521 = !DILocation(line: 0, scope: !15515)
!15522 = !DILocation(line: 409, column: 12, scope: !15515)
!15523 = !DILocation(line: 416, column: 2, scope: !15515)
!15524 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2539, file: !2539, line: 440, type: !15525, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15527)
!15525 = !DISubroutineType(types: !15526)
!15526 = !{null, !331, !103}
!15527 = !{!15528, !15529, !15530, !15536}
!15528 = !DILocalVariable(name: "slice", arg: 1, scope: !15524, file: !2539, line: 440, type: !331)
!15529 = !DILocalVariable(name: "prio", arg: 2, scope: !15524, file: !2539, line: 440, type: !103)
!15530 = !DILocalVariable(name: "__i", scope: !15531, file: !2539, line: 442, type: !15532)
!15531 = distinct !DILexicalBlock(scope: !15524, file: !2539, line: 442, column: 2)
!15532 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !15533)
!15533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !15534)
!15534 = !{!15535}
!15535 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15533, file: !250, line: 33, baseType: !103, size: 32)
!15536 = !DILocalVariable(name: "__key", scope: !15531, file: !2539, line: 442, type: !15532)
!15537 = !DILocation(line: 0, scope: !15524)
!15538 = !DILocation(line: 0, scope: !15531)
!15539 = !DILocalVariable(name: "l", arg: 1, scope: !15540, file: !250, line: 136, type: !15543)
!15540 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !15541, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15544)
!15541 = !DISubroutineType(types: !15542)
!15542 = !{!15532, !15543}
!15543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 32)
!15544 = !{!15539, !15545}
!15545 = !DILocalVariable(name: "k", scope: !15540, file: !250, line: 139, type: !15532)
!15546 = !DILocation(line: 0, scope: !15540, inlinedAt: !15547)
!15547 = distinct !DILocation(line: 442, column: 2, scope: !15531)
!15548 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !15553)
!15549 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6946, file: !6946, line: 42, type: !6947, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15550)
!15550 = !{!15551, !15552}
!15551 = !DILocalVariable(name: "key", scope: !15549, file: !6946, line: 44, type: !32)
!15552 = !DILocalVariable(name: "tmp", scope: !15549, file: !6946, line: 53, type: !32)
!15553 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !15547)
!15554 = !{i64 1694183}
!15555 = !DILocation(line: 0, scope: !15549, inlinedAt: !15553)
!15556 = !DILocation(line: 443, column: 29, scope: !15557)
!15557 = distinct !DILexicalBlock(scope: !15558, file: !2539, line: 442, column: 26)
!15558 = distinct !DILexicalBlock(scope: !15531, file: !2539, line: 442, column: 2)
!15559 = !DILocation(line: 444, column: 17, scope: !15557)
!15560 = !DILocation(line: 445, column: 51, scope: !15561)
!15561 = distinct !DILexicalBlock(scope: !15557, file: !2539, line: 445, column: 7)
!15562 = !DILocation(line: 445, column: 7, scope: !15557)
!15563 = !DILocation(line: 0, scope: !15557)
!15564 = !DILocation(line: 451, column: 18, scope: !15557)
!15565 = !DILocation(line: 452, column: 3, scope: !15557)
!15566 = !DILocalVariable(name: "key", arg: 2, scope: !15567, file: !250, line: 190, type: !15532)
!15567 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !15568, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15570)
!15568 = !DISubroutineType(types: !15569)
!15569 = !{null, !15543, !15532}
!15570 = !{!15571, !15566}
!15571 = !DILocalVariable(name: "l", arg: 1, scope: !15567, file: !250, line: 189, type: !15543)
!15572 = !DILocation(line: 0, scope: !15567, inlinedAt: !15573)
!15573 = distinct !DILocation(line: 442, column: 2, scope: !15558)
!15574 = !DILocalVariable(name: "key", arg: 1, scope: !15575, file: !6946, line: 84, type: !32)
!15575 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6946, file: !6946, line: 84, type: !6957, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15576)
!15576 = !{!15574}
!15577 = !DILocation(line: 0, scope: !15575, inlinedAt: !15578)
!15578 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !15573)
!15579 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !15578)
!15580 = !{i64 1695000}
!15581 = !DILocation(line: 454, column: 1, scope: !15524)
!15582 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3570, file: !3570, line: 389, type: !8483, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15583)
!15583 = !{!15584}
!15584 = !DILocalVariable(name: "t", arg: 1, scope: !15582, file: !3570, line: 389, type: !108)
!15585 = !DILocation(line: 0, scope: !15582)
!15586 = !DILocalVariable(name: "t", arg: 1, scope: !15587, file: !3570, line: 102, type: !109)
!15587 = distinct !DISubprogram(name: "z_tmcvt", scope: !3570, file: !3570, line: 102, type: !3596, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15588)
!15588 = !{!15586, !15589, !15590, !15591, !15592, !15593, !15594, !15595, !15596, !15597, !15598}
!15589 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15587, file: !3570, line: 102, type: !108)
!15590 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15587, file: !3570, line: 103, type: !108)
!15591 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15587, file: !3570, line: 103, type: !131)
!15592 = !DILocalVariable(name: "result32", arg: 5, scope: !15587, file: !3570, line: 104, type: !131)
!15593 = !DILocalVariable(name: "round_up", arg: 6, scope: !15587, file: !3570, line: 104, type: !131)
!15594 = !DILocalVariable(name: "round_off", arg: 7, scope: !15587, file: !3570, line: 105, type: !131)
!15595 = !DILocalVariable(name: "mul_ratio", scope: !15587, file: !3570, line: 107, type: !131)
!15596 = !DILocalVariable(name: "div_ratio", scope: !15587, file: !3570, line: 109, type: !131)
!15597 = !DILocalVariable(name: "off", scope: !15587, file: !3570, line: 116, type: !109)
!15598 = !DILocalVariable(name: "rdivisor", scope: !15599, file: !3570, line: 119, type: !108)
!15599 = distinct !DILexicalBlock(scope: !15600, file: !3570, line: 118, column: 18)
!15600 = distinct !DILexicalBlock(scope: !15587, file: !3570, line: 118, column: 6)
!15601 = !DILocation(line: 0, scope: !15587, inlinedAt: !15602)
!15602 = distinct !DILocation(line: 392, column: 9, scope: !15582)
!15603 = !DILocation(line: 143, column: 25, scope: !15604, inlinedAt: !15602)
!15604 = distinct !DILexicalBlock(scope: !15605, file: !3570, line: 142, column: 17)
!15605 = distinct !DILexicalBlock(scope: !15606, file: !3570, line: 142, column: 7)
!15606 = distinct !DILexicalBlock(scope: !15607, file: !3570, line: 141, column: 24)
!15607 = distinct !DILexicalBlock(scope: !15608, file: !3570, line: 141, column: 13)
!15608 = distinct !DILexicalBlock(scope: !15587, file: !3570, line: 134, column: 6)
!15609 = !DILocation(line: 392, column: 2, scope: !15582)
!15610 = distinct !DISubprogram(name: "z_time_slice", scope: !2539, file: !2539, line: 502, type: !9608, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15611)
!15611 = !{!15612, !15613}
!15612 = !DILocalVariable(name: "ticks", arg: 1, scope: !15610, file: !2539, line: 502, type: !103)
!15613 = !DILocalVariable(name: "key", scope: !15610, file: !2539, line: 511, type: !15532)
!15614 = !DILocation(line: 0, scope: !15610)
!15615 = !DILocation(line: 0, scope: !15540, inlinedAt: !15616)
!15616 = distinct !DILocation(line: 511, column: 25, scope: !15610)
!15617 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !15618)
!15618 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !15616)
!15619 = !DILocation(line: 0, scope: !15549, inlinedAt: !15618)
!15620 = !DILocation(line: 514, column: 6, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15610, file: !2539, line: 514, column: 6)
!15622 = !DILocation(line: 514, column: 25, scope: !15621)
!15623 = !DILocation(line: 514, column: 22, scope: !15621)
!15624 = !DILocation(line: 514, column: 6, scope: !15610)
!15625 = !DILocation(line: 515, column: 3, scope: !15626)
!15626 = distinct !DILexicalBlock(scope: !15621, file: !2539, line: 514, column: 35)
!15627 = !DILocation(line: 0, scope: !15567, inlinedAt: !15628)
!15628 = distinct !DILocation(line: 516, column: 3, scope: !15626)
!15629 = !DILocation(line: 0, scope: !15575, inlinedAt: !15630)
!15630 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !15628)
!15631 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !15630)
!15632 = !DILocation(line: 517, column: 3, scope: !15626)
!15633 = !DILocation(line: 519, column: 18, scope: !15610)
!15634 = !DILocation(line: 522, column: 6, scope: !15635)
!15635 = distinct !DILexicalBlock(scope: !15610, file: !2539, line: 522, column: 6)
!15636 = !DILocation(line: 522, column: 27, scope: !15635)
!15637 = !DILocation(line: 522, column: 30, scope: !15635)
!15638 = !DILocation(line: 522, column: 6, scope: !15610)
!15639 = !DILocation(line: 523, column: 30, scope: !15640)
!15640 = distinct !DILexicalBlock(scope: !15641, file: !2539, line: 523, column: 7)
!15641 = distinct !DILexicalBlock(scope: !15635, file: !2539, line: 522, column: 51)
!15642 = !DILocation(line: 523, column: 13, scope: !15640)
!15643 = !DILocation(line: 523, column: 7, scope: !15641)
!15644 = !DILocation(line: 530, column: 10, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15640, file: !2539, line: 523, column: 43)
!15646 = !DILocation(line: 531, column: 3, scope: !15645)
!15647 = !DILocation(line: 532, column: 30, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15640, file: !2539, line: 531, column: 10)
!15649 = !DILocation(line: 535, column: 29, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15635, file: !2539, line: 534, column: 9)
!15651 = !DILocation(line: 0, scope: !15567, inlinedAt: !15652)
!15652 = distinct !DILocation(line: 537, column: 2, scope: !15610)
!15653 = !DILocation(line: 0, scope: !15575, inlinedAt: !15654)
!15654 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !15652)
!15655 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !15654)
!15656 = !DILocation(line: 538, column: 1, scope: !15610)
!15657 = distinct !DISubprogram(name: "sliceable", scope: !2539, file: !2539, line: 468, type: !15658, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15660)
!15658 = !DISubroutineType(types: !15659)
!15659 = !{!131, !2434}
!15660 = !{!15661, !15662}
!15661 = !DILocalVariable(name: "thread", arg: 1, scope: !15657, file: !2539, line: 468, type: !2434)
!15662 = !DILocalVariable(name: "ret", scope: !15657, file: !2539, line: 470, type: !131)
!15663 = !DILocation(line: 0, scope: !15657)
!15664 = !DILocation(line: 470, column: 13, scope: !15657)
!15665 = !DILocation(line: 471, column: 3, scope: !15657)
!15666 = !DILocation(line: 471, column: 7, scope: !15657)
!15667 = !DILocation(line: 472, column: 3, scope: !15657)
!15668 = !DILocation(line: 472, column: 37, scope: !15657)
!15669 = !DILocation(line: 472, column: 24, scope: !15657)
!15670 = !DILocation(line: 472, column: 43, scope: !15657)
!15671 = !DILocation(line: 472, column: 7, scope: !15657)
!15672 = !DILocation(line: 473, column: 3, scope: !15657)
!15673 = !DILocation(line: 473, column: 7, scope: !15657)
!15674 = !DILocation(line: 473, column: 6, scope: !15657)
!15675 = !DILocation(line: 479, column: 2, scope: !15657)
!15676 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2539, file: !2539, line: 482, type: !15677, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15679)
!15677 = !DISubroutineType(types: !15678)
!15678 = !{!15532, !15532}
!15679 = !{!15680, !15681}
!15680 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15676, file: !2539, line: 482, type: !15532)
!15681 = !DILocalVariable(name: "curr", scope: !15676, file: !2539, line: 484, type: !2434)
!15682 = !DILocation(line: 0, scope: !15676)
!15683 = !DILocation(line: 484, column: 26, scope: !15676)
!15684 = !DILocation(line: 493, column: 7, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15676, file: !2539, line: 493, column: 6)
!15686 = !DILocation(line: 493, column: 6, scope: !15676)
!15687 = !DILocation(line: 494, column: 3, scope: !15688)
!15688 = distinct !DILexicalBlock(scope: !15685, file: !2539, line: 493, column: 49)
!15689 = !DILocation(line: 495, column: 2, scope: !15688)
!15690 = !DILocation(line: 496, column: 2, scope: !15676)
!15691 = !DILocation(line: 499, column: 1, scope: !15676)
!15692 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14070, file: !14070, line: 106, type: !15658, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15693)
!15693 = !{!15694, !15695}
!15694 = !DILocalVariable(name: "thread", arg: 1, scope: !15692, file: !14070, line: 106, type: !2434)
!15695 = !DILocalVariable(name: "state", scope: !15692, file: !14070, line: 108, type: !185)
!15696 = !DILocation(line: 0, scope: !15692)
!15697 = !DILocation(line: 108, column: 31, scope: !15692)
!15698 = !DILocation(line: 110, column: 16, scope: !15692)
!15699 = !DILocation(line: 111, column: 41, scope: !15692)
!15700 = !DILocation(line: 110, column: 2, scope: !15692)
!15701 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2539, file: !2539, line: 393, type: !15498, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15702)
!15702 = !{!15703}
!15703 = !DILocalVariable(name: "thread", arg: 1, scope: !15701, file: !2539, line: 393, type: !2434)
!15704 = !DILocation(line: 0, scope: !15701)
!15705 = !DILocation(line: 395, column: 6, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15701, file: !2539, line: 395, column: 6)
!15707 = !DILocation(line: 395, column: 6, scope: !15701)
!15708 = !DILocalVariable(name: "thread", arg: 1, scope: !15709, file: !2539, line: 264, type: !2434)
!15709 = distinct !DISubprogram(name: "dequeue_thread", scope: !2539, file: !2539, line: 264, type: !15498, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15710)
!15710 = !{!15708}
!15711 = !DILocation(line: 0, scope: !15709, inlinedAt: !15712)
!15712 = distinct !DILocation(line: 396, column: 3, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15706, file: !2539, line: 395, column: 34)
!15714 = !DILocation(line: 266, column: 15, scope: !15709, inlinedAt: !15712)
!15715 = !DILocation(line: 266, column: 28, scope: !15709, inlinedAt: !15712)
!15716 = !DILocalVariable(name: "thread", arg: 1, scope: !15717, file: !2539, line: 232, type: !2434)
!15717 = distinct !DISubprogram(name: "runq_remove", scope: !2539, file: !2539, line: 232, type: !15498, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15718)
!15718 = !{!15716}
!15719 = !DILocation(line: 0, scope: !15717, inlinedAt: !15720)
!15720 = distinct !DILocation(line: 268, column: 3, scope: !15721, inlinedAt: !15712)
!15721 = distinct !DILexicalBlock(scope: !15722, file: !2539, line: 267, column: 35)
!15722 = distinct !DILexicalBlock(scope: !15709, file: !2539, line: 267, column: 6)
!15723 = !DILocation(line: 234, column: 2, scope: !15717, inlinedAt: !15720)
!15724 = !DILocation(line: 397, column: 2, scope: !15713)
!15725 = !DILocalVariable(name: "thread", arg: 1, scope: !15726, file: !2539, line: 250, type: !2434)
!15726 = distinct !DISubprogram(name: "queue_thread", scope: !2539, file: !2539, line: 250, type: !15498, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15727)
!15727 = !{!15725}
!15728 = !DILocation(line: 0, scope: !15726, inlinedAt: !15729)
!15729 = distinct !DILocation(line: 398, column: 2, scope: !15701)
!15730 = !DILocation(line: 252, column: 15, scope: !15726, inlinedAt: !15729)
!15731 = !DILocation(line: 252, column: 28, scope: !15726, inlinedAt: !15729)
!15732 = !DILocalVariable(name: "thread", arg: 1, scope: !15733, file: !2539, line: 227, type: !2434)
!15733 = distinct !DISubprogram(name: "runq_add", scope: !2539, file: !2539, line: 227, type: !15498, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15734)
!15734 = !{!15732}
!15735 = !DILocation(line: 0, scope: !15733, inlinedAt: !15736)
!15736 = distinct !DILocation(line: 254, column: 3, scope: !15737, inlinedAt: !15729)
!15737 = distinct !DILexicalBlock(scope: !15738, file: !2539, line: 253, column: 35)
!15738 = distinct !DILexicalBlock(scope: !15726, file: !2539, line: 253, column: 6)
!15739 = !DILocalVariable(name: "pq", arg: 1, scope: !15740, file: !2539, line: 181, type: !15743)
!15740 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2539, file: !2539, line: 181, type: !15741, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15744)
!15741 = !DISubroutineType(types: !15742)
!15742 = !{null, !15743, !2434}
!15743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!15744 = !{!15739, !15745, !15746}
!15745 = !DILocalVariable(name: "thread", arg: 2, scope: !15740, file: !2539, line: 182, type: !2434)
!15746 = !DILocalVariable(name: "t", scope: !15740, file: !2539, line: 184, type: !2434)
!15747 = !DILocation(line: 0, scope: !15740, inlinedAt: !15748)
!15748 = distinct !DILocation(line: 229, column: 2, scope: !15733, inlinedAt: !15736)
!15749 = !DILocation(line: 188, column: 2, scope: !15750, inlinedAt: !15748)
!15750 = distinct !DILexicalBlock(scope: !15740, file: !2539, line: 188, column: 2)
!15751 = !DILocation(line: 188, column: 2, scope: !15752, inlinedAt: !15748)
!15752 = distinct !DILexicalBlock(scope: !15750, file: !2539, line: 188, column: 2)
!15753 = !DILocation(line: 0, scope: !15750, inlinedAt: !15748)
!15754 = !DILocation(line: 189, column: 7, scope: !15755, inlinedAt: !15748)
!15755 = distinct !DILexicalBlock(scope: !15756, file: !2539, line: 189, column: 7)
!15756 = distinct !DILexicalBlock(scope: !15752, file: !2539, line: 188, column: 56)
!15757 = !DILocation(line: 189, column: 35, scope: !15755, inlinedAt: !15748)
!15758 = !DILocation(line: 189, column: 7, scope: !15756, inlinedAt: !15748)
!15759 = !DILocation(line: 191, column: 21, scope: !15760, inlinedAt: !15748)
!15760 = distinct !DILexicalBlock(scope: !15755, file: !2539, line: 189, column: 40)
!15761 = !DILocation(line: 190, column: 4, scope: !15760, inlinedAt: !15748)
!15762 = !DILocation(line: 192, column: 4, scope: !15760, inlinedAt: !15748)
!15763 = distinct !{!15763, !15749, !15764}
!15764 = !DILocation(line: 194, column: 2, scope: !15750, inlinedAt: !15748)
!15765 = !DILocation(line: 196, column: 37, scope: !15740, inlinedAt: !15748)
!15766 = !DILocation(line: 196, column: 2, scope: !15740, inlinedAt: !15748)
!15767 = !DILocation(line: 197, column: 1, scope: !15740, inlinedAt: !15748)
!15768 = !DILocation(line: 399, column: 25, scope: !15701)
!15769 = !DILocation(line: 399, column: 22, scope: !15701)
!15770 = !DILocation(line: 399, column: 2, scope: !15701)
!15771 = !DILocation(line: 400, column: 1, scope: !15701)
!15772 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14070, file: !14070, line: 136, type: !15658, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15773)
!15773 = !{!15774}
!15774 = !DILocalVariable(name: "thread", arg: 1, scope: !15772, file: !14070, line: 136, type: !2434)
!15775 = !DILocation(line: 0, scope: !15772)
!15776 = !DILocation(line: 138, column: 9, scope: !15772)
!15777 = !DILocation(line: 138, column: 2, scope: !15772)
!15778 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2539, file: !2539, line: 1137, type: !15741, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15779)
!15779 = !{!15780, !15781}
!15780 = !DILocalVariable(name: "pq", arg: 1, scope: !15778, file: !2539, line: 1137, type: !15743)
!15781 = !DILocalVariable(name: "thread", arg: 2, scope: !15778, file: !2539, line: 1137, type: !2434)
!15782 = !DILocation(line: 0, scope: !15778)
!15783 = !DILocation(line: 1141, column: 33, scope: !15778)
!15784 = !DILocation(line: 1141, column: 2, scope: !15778)
!15785 = !DILocation(line: 1142, column: 1, scope: !15778)
!15786 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15787, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15789)
!15787 = !DISubroutineType(types: !15788)
!15788 = !{!2535, !15743}
!15789 = !{!15790}
!15790 = !DILocalVariable(name: "list", arg: 1, scope: !15786, file: !146, line: 294, type: !15743)
!15791 = !DILocation(line: 0, scope: !15786)
!15792 = !DILocation(line: 296, column: 9, scope: !15786)
!15793 = !DILocation(line: 296, column: 49, scope: !15786)
!15794 = !DILocation(line: 296, column: 2, scope: !15786)
!15795 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !15796, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15798)
!15796 = !DISubroutineType(types: !15797)
!15797 = !{null, !2535, !2535}
!15798 = !{!15799, !15800, !15801}
!15799 = !DILocalVariable(name: "successor", arg: 1, scope: !15795, file: !146, line: 443, type: !2535)
!15800 = !DILocalVariable(name: "node", arg: 2, scope: !15795, file: !146, line: 443, type: !2535)
!15801 = !DILocalVariable(name: "prev", scope: !15795, file: !146, line: 445, type: !15802)
!15802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2535)
!15803 = !DILocation(line: 0, scope: !15795)
!15804 = !DILocation(line: 445, column: 39, scope: !15795)
!15805 = !DILocation(line: 447, column: 8, scope: !15795)
!15806 = !DILocation(line: 447, column: 13, scope: !15795)
!15807 = !DILocation(line: 448, column: 8, scope: !15795)
!15808 = !DILocation(line: 448, column: 13, scope: !15795)
!15809 = !DILocation(line: 449, column: 8, scope: !15795)
!15810 = !DILocation(line: 449, column: 13, scope: !15795)
!15811 = !DILocation(line: 450, column: 18, scope: !15795)
!15812 = !DILocation(line: 451, column: 1, scope: !15795)
!15813 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !15814, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15816)
!15814 = !DISubroutineType(types: !15815)
!15815 = !{!2535, !15743, !2535}
!15816 = !{!15817, !15818}
!15817 = !DILocalVariable(name: "list", arg: 1, scope: !15813, file: !146, line: 341, type: !15743)
!15818 = !DILocalVariable(name: "node", arg: 2, scope: !15813, file: !146, line: 342, type: !2535)
!15819 = !DILocation(line: 0, scope: !15813)
!15820 = !DILocation(line: 344, column: 15, scope: !15813)
!15821 = !DILocation(line: 344, column: 9, scope: !15813)
!15822 = !DILocation(line: 344, column: 26, scope: !15813)
!15823 = !DILocation(line: 344, column: 2, scope: !15813)
!15824 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !15825, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15827)
!15825 = !DISubroutineType(types: !15826)
!15826 = !{null, !15743, !2535}
!15827 = !{!15828, !15829, !15830}
!15828 = !DILocalVariable(name: "list", arg: 1, scope: !15824, file: !146, line: 404, type: !15743)
!15829 = !DILocalVariable(name: "node", arg: 2, scope: !15824, file: !146, line: 404, type: !2535)
!15830 = !DILocalVariable(name: "tail", scope: !15824, file: !146, line: 406, type: !15802)
!15831 = !DILocation(line: 0, scope: !15824)
!15832 = !DILocation(line: 406, column: 34, scope: !15824)
!15833 = !DILocation(line: 408, column: 8, scope: !15824)
!15834 = !DILocation(line: 408, column: 13, scope: !15824)
!15835 = !DILocation(line: 409, column: 8, scope: !15824)
!15836 = !DILocation(line: 409, column: 13, scope: !15824)
!15837 = !DILocation(line: 411, column: 8, scope: !15824)
!15838 = !DILocation(line: 411, column: 13, scope: !15824)
!15839 = !DILocation(line: 412, column: 13, scope: !15824)
!15840 = !DILocation(line: 413, column: 1, scope: !15824)
!15841 = distinct !DISubprogram(name: "update_cache", scope: !2539, file: !2539, line: 559, type: !9608, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15842)
!15842 = !{!15843, !15844}
!15843 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15841, file: !2539, line: 559, type: !103)
!15844 = !DILocalVariable(name: "thread", scope: !15841, file: !2539, line: 562, type: !2434)
!15845 = !DILocation(line: 0, scope: !15841)
!15846 = !DILocation(line: 239, column: 9, scope: !15847, inlinedAt: !15850)
!15847 = distinct !DISubprogram(name: "runq_best", scope: !2539, file: !2539, line: 237, type: !15848, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !251)
!15848 = !DISubroutineType(types: !15849)
!15849 = !{!2434}
!15850 = distinct !DILocation(line: 314, column: 28, scope: !15851, inlinedAt: !15854)
!15851 = distinct !DISubprogram(name: "next_up", scope: !2539, file: !2539, line: 312, type: !15848, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15852)
!15852 = !{!15853}
!15853 = !DILocalVariable(name: "thread", scope: !15851, file: !2539, line: 314, type: !2434)
!15854 = distinct !DILocation(line: 562, column: 28, scope: !15841)
!15855 = !DILocation(line: 0, scope: !15851, inlinedAt: !15854)
!15856 = !DILocation(line: 340, column: 17, scope: !15851, inlinedAt: !15854)
!15857 = !DILocation(line: 340, column: 9, scope: !15851, inlinedAt: !15854)
!15858 = !DILocalVariable(name: "thread", arg: 1, scope: !15859, file: !2539, line: 127, type: !2434)
!15859 = distinct !DISubprogram(name: "should_preempt", scope: !2539, file: !2539, line: 127, type: !15860, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15862)
!15860 = !DISubroutineType(types: !15861)
!15861 = !{!131, !2434, !103}
!15862 = !{!15858, !15863}
!15863 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15859, file: !2539, line: 128, type: !103)
!15864 = !DILocation(line: 0, scope: !15859, inlinedAt: !15865)
!15865 = distinct !DILocation(line: 564, column: 6, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15841, file: !2539, line: 564, column: 6)
!15867 = !DILocation(line: 133, column: 17, scope: !15868, inlinedAt: !15865)
!15868 = distinct !DILexicalBlock(scope: !15859, file: !2539, line: 133, column: 6)
!15869 = !DILocation(line: 0, scope: !15866)
!15870 = !DILocation(line: 133, column: 6, scope: !15859, inlinedAt: !15865)
!15871 = !DILocation(line: 140, column: 6, scope: !15872, inlinedAt: !15865)
!15872 = distinct !DILexicalBlock(scope: !15859, file: !2539, line: 140, column: 6)
!15873 = !DILocation(line: 140, column: 6, scope: !15859, inlinedAt: !15865)
!15874 = !DILocation(line: 150, column: 9, scope: !15875, inlinedAt: !15865)
!15875 = distinct !DILexicalBlock(scope: !15859, file: !2539, line: 149, column: 6)
!15876 = !DILocation(line: 149, column: 6, scope: !15859, inlinedAt: !15865)
!15877 = !DILocation(line: 157, column: 6, scope: !15878, inlinedAt: !15865)
!15878 = distinct !DILexicalBlock(scope: !15859, file: !2539, line: 157, column: 6)
!15879 = !DILocation(line: 564, column: 6, scope: !15841)
!15880 = !DILocation(line: 566, column: 14, scope: !15881)
!15881 = distinct !DILexicalBlock(scope: !15882, file: !2539, line: 566, column: 7)
!15882 = distinct !DILexicalBlock(scope: !15866, file: !2539, line: 564, column: 42)
!15883 = !DILocation(line: 566, column: 7, scope: !15882)
!15884 = !DILocation(line: 567, column: 4, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15881, file: !2539, line: 566, column: 27)
!15886 = !DILocation(line: 568, column: 3, scope: !15885)
!15887 = !DILocation(line: 585, column: 1, scope: !15841)
!15888 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2539, file: !2539, line: 1144, type: !15889, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15891)
!15889 = !DISubroutineType(types: !15890)
!15890 = !{!2434, !15743}
!15891 = !{!15892, !15893, !15894}
!15892 = !DILocalVariable(name: "pq", arg: 1, scope: !15888, file: !2539, line: 1144, type: !15743)
!15893 = !DILocalVariable(name: "thread", scope: !15888, file: !2539, line: 1146, type: !2434)
!15894 = !DILocalVariable(name: "n", scope: !15888, file: !2539, line: 1147, type: !2535)
!15895 = !DILocation(line: 0, scope: !15888)
!15896 = !DILocation(line: 1147, column: 19, scope: !15888)
!15897 = !DILocation(line: 1152, column: 2, scope: !15888)
!15898 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14070, file: !14070, line: 115, type: !15658, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15899)
!15899 = !{!15900}
!15900 = !DILocalVariable(name: "thread", arg: 1, scope: !15898, file: !14070, line: 115, type: !2434)
!15901 = !DILocation(line: 0, scope: !15898)
!15902 = !DILocation(line: 117, column: 46, scope: !15898)
!15903 = !DILocation(line: 117, column: 10, scope: !15898)
!15904 = !DILocation(line: 117, column: 9, scope: !15898)
!15905 = !DILocation(line: 117, column: 2, scope: !15898)
!15906 = distinct !DISubprogram(name: "is_preempt", scope: !2539, file: !2539, line: 62, type: !15516, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15907)
!15907 = !{!15908}
!15908 = !DILocalVariable(name: "thread", arg: 1, scope: !15906, file: !2539, line: 62, type: !2434)
!15909 = !DILocation(line: 0, scope: !15906)
!15910 = !DILocation(line: 65, column: 22, scope: !15906)
!15911 = !DILocation(line: 65, column: 30, scope: !15906)
!15912 = !DILocation(line: 65, column: 2, scope: !15906)
!15913 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14463, file: !14463, line: 35, type: !15914, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15918)
!15914 = !DISubroutineType(types: !15915)
!15915 = !{!131, !15916}
!15916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15917, size: 32)
!15917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2485)
!15918 = !{!15919}
!15919 = !DILocalVariable(name: "to", arg: 1, scope: !15913, file: !14463, line: 35, type: !15916)
!15920 = !DILocation(line: 0, scope: !15913)
!15921 = !DILocation(line: 37, column: 35, scope: !15913)
!15922 = !DILocation(line: 37, column: 10, scope: !15913)
!15923 = !DILocation(line: 37, column: 9, scope: !15913)
!15924 = !DILocation(line: 37, column: 2, scope: !15913)
!15925 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !15926, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15930)
!15926 = !DISubroutineType(types: !15927)
!15927 = !{!131, !15928}
!15928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15929, size: 32)
!15929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2444)
!15930 = !{!15931}
!15931 = !DILocalVariable(name: "node", arg: 1, scope: !15925, file: !146, line: 225, type: !15928)
!15932 = !DILocation(line: 0, scope: !15925)
!15933 = !DILocation(line: 227, column: 15, scope: !15925)
!15934 = !DILocation(line: 227, column: 20, scope: !15925)
!15935 = !DILocation(line: 227, column: 2, scope: !15925)
!15936 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !15814, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15937)
!15937 = !{!15938, !15939}
!15938 = !DILocalVariable(name: "list", arg: 1, scope: !15936, file: !146, line: 325, type: !15743)
!15939 = !DILocalVariable(name: "node", arg: 2, scope: !15936, file: !146, line: 326, type: !2535)
!15940 = !DILocation(line: 0, scope: !15936)
!15941 = !DILocation(line: 328, column: 24, scope: !15936)
!15942 = !DILocation(line: 328, column: 15, scope: !15936)
!15943 = !DILocation(line: 328, column: 9, scope: !15936)
!15944 = !DILocation(line: 328, column: 45, scope: !15936)
!15945 = !DILocation(line: 328, column: 2, scope: !15936)
!15946 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15947, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15949)
!15947 = !DISubroutineType(types: !15948)
!15948 = !{!131, !15743}
!15949 = !{!15950}
!15950 = !DILocalVariable(name: "list", arg: 1, scope: !15946, file: !146, line: 266, type: !15743)
!15951 = !DILocation(line: 0, scope: !15946)
!15952 = !DILocation(line: 268, column: 15, scope: !15946)
!15953 = !DILocation(line: 268, column: 20, scope: !15946)
!15954 = !DILocation(line: 268, column: 2, scope: !15946)
!15955 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !15956, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15958)
!15956 = !DISubroutineType(types: !15957)
!15957 = !{null, !2535}
!15958 = !{!15959, !15960, !15961}
!15959 = !DILocalVariable(name: "node", arg: 1, scope: !15955, file: !146, line: 496, type: !2535)
!15960 = !DILocalVariable(name: "prev", scope: !15955, file: !146, line: 498, type: !15802)
!15961 = !DILocalVariable(name: "next", scope: !15955, file: !146, line: 499, type: !15802)
!15962 = !DILocation(line: 0, scope: !15955)
!15963 = !DILocation(line: 498, column: 34, scope: !15955)
!15964 = !DILocation(line: 499, column: 34, scope: !15955)
!15965 = !DILocation(line: 501, column: 8, scope: !15955)
!15966 = !DILocation(line: 501, column: 13, scope: !15955)
!15967 = !DILocation(line: 502, column: 8, scope: !15955)
!15968 = !DILocation(line: 502, column: 13, scope: !15955)
!15969 = !DILocation(line: 503, column: 2, scope: !15955)
!15970 = !DILocation(line: 504, column: 1, scope: !15955)
!15971 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !15956, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15972)
!15972 = !{!15973}
!15973 = !DILocalVariable(name: "node", arg: 1, scope: !15971, file: !146, line: 211, type: !2535)
!15974 = !DILocation(line: 0, scope: !15971)
!15975 = !DILocation(line: 213, column: 8, scope: !15971)
!15976 = !DILocation(line: 213, column: 13, scope: !15971)
!15977 = !DILocation(line: 214, column: 8, scope: !15971)
!15978 = !DILocation(line: 214, column: 13, scope: !15971)
!15979 = !DILocation(line: 215, column: 1, scope: !15971)
!15980 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14070, file: !14070, line: 131, type: !15981, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15983)
!15981 = !DISubroutineType(types: !15982)
!15982 = !{!131, !2434, !108}
!15983 = !{!15984, !15985}
!15984 = !DILocalVariable(name: "thread", arg: 1, scope: !15980, file: !14070, line: 131, type: !2434)
!15985 = !DILocalVariable(name: "state", arg: 2, scope: !15980, file: !14070, line: 131, type: !108)
!15986 = !DILocation(line: 0, scope: !15980)
!15987 = !DILocation(line: 133, column: 23, scope: !15980)
!15988 = !DILocation(line: 133, column: 45, scope: !15980)
!15989 = !DILocation(line: 133, column: 2, scope: !15980)
!15990 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14070, file: !14070, line: 211, type: !15350, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15991)
!15991 = !{!15992, !15993}
!15992 = !DILocalVariable(name: "prio", arg: 1, scope: !15990, file: !14070, line: 211, type: !103)
!15993 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15990, file: !14070, line: 211, type: !103)
!15994 = !DILocation(line: 0, scope: !15990)
!15995 = !DILocation(line: 213, column: 9, scope: !15990)
!15996 = !DILocation(line: 213, column: 2, scope: !15990)
!15997 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14070, file: !14070, line: 83, type: !15658, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !15998)
!15998 = !{!15999}
!15999 = !DILocalVariable(name: "thread", arg: 1, scope: !15997, file: !14070, line: 83, type: !2434)
!16000 = !DILocation(line: 0, scope: !15997)
!16001 = !DILocation(line: 89, column: 16, scope: !15997)
!16002 = !DILocation(line: 89, column: 2, scope: !15997)
!16003 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14070, file: !14070, line: 206, type: !15350, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16004)
!16004 = !{!16005, !16006}
!16005 = !DILocalVariable(name: "prio1", arg: 1, scope: !16003, file: !14070, line: 206, type: !103)
!16006 = !DILocalVariable(name: "prio2", arg: 2, scope: !16003, file: !14070, line: 206, type: !103)
!16007 = !DILocation(line: 0, scope: !16003)
!16008 = !DILocation(line: 208, column: 15, scope: !16003)
!16009 = !DILocation(line: 208, column: 2, scope: !16003)
!16010 = distinct !DISubprogram(name: "z_ready_thread", scope: !2539, file: !2539, line: 635, type: !15498, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16011)
!16011 = !{!16012, !16013, !16015}
!16012 = !DILocalVariable(name: "thread", arg: 1, scope: !16010, file: !2539, line: 635, type: !2434)
!16013 = !DILocalVariable(name: "__i", scope: !16014, file: !2539, line: 637, type: !15532)
!16014 = distinct !DILexicalBlock(scope: !16010, file: !2539, line: 637, column: 2)
!16015 = !DILocalVariable(name: "__key", scope: !16014, file: !2539, line: 637, type: !15532)
!16016 = !DILocation(line: 0, scope: !16010)
!16017 = !DILocation(line: 0, scope: !16014)
!16018 = !DILocation(line: 0, scope: !15540, inlinedAt: !16019)
!16019 = distinct !DILocation(line: 637, column: 2, scope: !16014)
!16020 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16021)
!16021 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16019)
!16022 = !DILocation(line: 0, scope: !15549, inlinedAt: !16021)
!16023 = !DILocation(line: 639, column: 4, scope: !16024)
!16024 = distinct !DILexicalBlock(scope: !16025, file: !2539, line: 638, column: 41)
!16025 = distinct !DILexicalBlock(scope: !16026, file: !2539, line: 638, column: 7)
!16026 = distinct !DILexicalBlock(scope: !16027, file: !2539, line: 637, column: 26)
!16027 = distinct !DILexicalBlock(scope: !16014, file: !2539, line: 637, column: 2)
!16028 = !DILocation(line: 0, scope: !15567, inlinedAt: !16029)
!16029 = distinct !DILocation(line: 637, column: 2, scope: !16027)
!16030 = !DILocation(line: 0, scope: !15575, inlinedAt: !16031)
!16031 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16029)
!16032 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16031)
!16033 = !DILocation(line: 642, column: 1, scope: !16010)
!16034 = distinct !DISubprogram(name: "ready_thread", scope: !2539, file: !2539, line: 617, type: !15498, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16035)
!16035 = !{!16036}
!16036 = !DILocalVariable(name: "thread", arg: 1, scope: !16034, file: !2539, line: 617, type: !2434)
!16037 = !DILocation(line: 0, scope: !16034)
!16038 = !DILocation(line: 626, column: 7, scope: !16039)
!16039 = distinct !DILexicalBlock(scope: !16034, file: !2539, line: 626, column: 6)
!16040 = !DILocation(line: 626, column: 34, scope: !16039)
!16041 = !DILocation(line: 626, column: 37, scope: !16039)
!16042 = !DILocation(line: 626, column: 6, scope: !16034)
!16043 = !DILocation(line: 0, scope: !15726, inlinedAt: !16044)
!16044 = distinct !DILocation(line: 629, column: 3, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16039, file: !2539, line: 626, column: 64)
!16046 = !DILocation(line: 252, column: 15, scope: !15726, inlinedAt: !16044)
!16047 = !DILocation(line: 252, column: 28, scope: !15726, inlinedAt: !16044)
!16048 = !DILocation(line: 0, scope: !15733, inlinedAt: !16049)
!16049 = distinct !DILocation(line: 254, column: 3, scope: !15737, inlinedAt: !16044)
!16050 = !DILocation(line: 0, scope: !15740, inlinedAt: !16051)
!16051 = distinct !DILocation(line: 229, column: 2, scope: !15733, inlinedAt: !16049)
!16052 = !DILocation(line: 188, column: 2, scope: !15750, inlinedAt: !16051)
!16053 = !DILocation(line: 188, column: 2, scope: !15752, inlinedAt: !16051)
!16054 = !DILocation(line: 0, scope: !15750, inlinedAt: !16051)
!16055 = !DILocation(line: 189, column: 7, scope: !15755, inlinedAt: !16051)
!16056 = !DILocation(line: 189, column: 35, scope: !15755, inlinedAt: !16051)
!16057 = !DILocation(line: 189, column: 7, scope: !15756, inlinedAt: !16051)
!16058 = !DILocation(line: 191, column: 21, scope: !15760, inlinedAt: !16051)
!16059 = !DILocation(line: 190, column: 4, scope: !15760, inlinedAt: !16051)
!16060 = !DILocation(line: 192, column: 4, scope: !15760, inlinedAt: !16051)
!16061 = distinct !{!16061, !16052, !16062}
!16062 = !DILocation(line: 194, column: 2, scope: !15750, inlinedAt: !16051)
!16063 = !DILocation(line: 196, column: 37, scope: !15740, inlinedAt: !16051)
!16064 = !DILocation(line: 196, column: 2, scope: !15740, inlinedAt: !16051)
!16065 = !DILocation(line: 197, column: 1, scope: !15740, inlinedAt: !16051)
!16066 = !DILocation(line: 630, column: 3, scope: !16045)
!16067 = !DILocation(line: 632, column: 2, scope: !16045)
!16068 = !DILocation(line: 633, column: 1, scope: !16034)
!16069 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14070, file: !14070, line: 120, type: !15658, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16070)
!16070 = !{!16071}
!16071 = !DILocalVariable(name: "thread", arg: 1, scope: !16069, file: !14070, line: 120, type: !2434)
!16072 = !DILocation(line: 0, scope: !16069)
!16073 = !DILocation(line: 122, column: 12, scope: !16069)
!16074 = !DILocation(line: 122, column: 62, scope: !16069)
!16075 = !DILocation(line: 123, column: 4, scope: !16069)
!16076 = !DILocation(line: 122, column: 2, scope: !16069)
!16077 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2539, file: !2539, line: 644, type: !15498, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16078)
!16078 = !{!16079, !16080, !16082}
!16079 = !DILocalVariable(name: "thread", arg: 1, scope: !16077, file: !2539, line: 644, type: !2434)
!16080 = !DILocalVariable(name: "__i", scope: !16081, file: !2539, line: 646, type: !15532)
!16081 = distinct !DILexicalBlock(scope: !16077, file: !2539, line: 646, column: 2)
!16082 = !DILocalVariable(name: "__key", scope: !16081, file: !2539, line: 646, type: !15532)
!16083 = !DILocation(line: 0, scope: !16077)
!16084 = !DILocation(line: 0, scope: !16081)
!16085 = !DILocation(line: 0, scope: !15540, inlinedAt: !16086)
!16086 = distinct !DILocation(line: 646, column: 2, scope: !16081)
!16087 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16088)
!16088 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16086)
!16089 = !DILocation(line: 0, scope: !15549, inlinedAt: !16088)
!16090 = !DILocation(line: 647, column: 3, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16092, file: !2539, line: 646, column: 26)
!16092 = distinct !DILexicalBlock(scope: !16081, file: !2539, line: 646, column: 2)
!16093 = !DILocation(line: 0, scope: !15567, inlinedAt: !16094)
!16094 = distinct !DILocation(line: 646, column: 2, scope: !16092)
!16095 = !DILocation(line: 0, scope: !15575, inlinedAt: !16096)
!16096 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16094)
!16097 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16096)
!16098 = !DILocation(line: 649, column: 1, scope: !16077)
!16099 = distinct !DISubprogram(name: "z_sched_start", scope: !2539, file: !2539, line: 651, type: !15498, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16100)
!16100 = !{!16101, !16102}
!16101 = !DILocalVariable(name: "thread", arg: 1, scope: !16099, file: !2539, line: 651, type: !2434)
!16102 = !DILocalVariable(name: "key", scope: !16099, file: !2539, line: 653, type: !15532)
!16103 = !DILocation(line: 0, scope: !16099)
!16104 = !DILocation(line: 0, scope: !15540, inlinedAt: !16105)
!16105 = distinct !DILocation(line: 653, column: 25, scope: !16099)
!16106 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16107)
!16107 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16105)
!16108 = !DILocation(line: 0, scope: !15549, inlinedAt: !16107)
!16109 = !DILocation(line: 655, column: 6, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16099, file: !2539, line: 655, column: 6)
!16111 = !DILocation(line: 655, column: 6, scope: !16099)
!16112 = !DILocation(line: 0, scope: !15567, inlinedAt: !16113)
!16113 = distinct !DILocation(line: 656, column: 3, scope: !16114)
!16114 = distinct !DILexicalBlock(scope: !16110, file: !2539, line: 655, column: 36)
!16115 = !DILocation(line: 0, scope: !15575, inlinedAt: !16116)
!16116 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16113)
!16117 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16116)
!16118 = !DILocation(line: 657, column: 3, scope: !16114)
!16119 = !DILocation(line: 660, column: 2, scope: !16099)
!16120 = !DILocation(line: 661, column: 2, scope: !16099)
!16121 = !DILocation(line: 662, column: 2, scope: !16099)
!16122 = !DILocation(line: 663, column: 1, scope: !16099)
!16123 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14070, file: !14070, line: 126, type: !15658, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16124)
!16124 = !{!16125}
!16125 = !DILocalVariable(name: "thread", arg: 1, scope: !16123, file: !14070, line: 126, type: !2434)
!16126 = !DILocation(line: 0, scope: !16123)
!16127 = !DILocation(line: 128, column: 23, scope: !16123)
!16128 = !DILocation(line: 128, column: 36, scope: !16123)
!16129 = !DILocation(line: 128, column: 56, scope: !16123)
!16130 = !DILocation(line: 128, column: 2, scope: !16123)
!16131 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14070, file: !14070, line: 155, type: !15498, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16132)
!16132 = !{!16133}
!16133 = !DILocalVariable(name: "thread", arg: 1, scope: !16131, file: !14070, line: 155, type: !2434)
!16134 = !DILocation(line: 0, scope: !16131)
!16135 = !DILocation(line: 157, column: 15, scope: !16131)
!16136 = !DILocation(line: 157, column: 28, scope: !16131)
!16137 = !DILocation(line: 158, column: 1, scope: !16131)
!16138 = distinct !DISubprogram(name: "z_reschedule", scope: !2539, file: !2539, line: 967, type: !15568, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16139)
!16139 = !{!16140, !16141}
!16140 = !DILocalVariable(name: "lock", arg: 1, scope: !16138, file: !2539, line: 967, type: !15543)
!16141 = !DILocalVariable(name: "key", arg: 2, scope: !16138, file: !2539, line: 967, type: !15532)
!16142 = !DILocation(line: 0, scope: !16138)
!16143 = !DILocation(line: 969, column: 6, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !16138, file: !2539, line: 969, column: 6)
!16145 = !DILocation(line: 969, column: 23, scope: !16144)
!16146 = !DILocation(line: 969, column: 26, scope: !16144)
!16147 = !DILocation(line: 969, column: 6, scope: !16138)
!16148 = !DILocalVariable(name: "key", arg: 2, scope: !16149, file: !14174, line: 193, type: !15532)
!16149 = distinct !DISubprogram(name: "z_swap", scope: !14174, file: !14174, line: 193, type: !16150, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16152)
!16150 = !DISubroutineType(types: !16151)
!16151 = !{!103, !15543, !15532}
!16152 = !{!16153, !16148}
!16153 = !DILocalVariable(name: "lock", arg: 1, scope: !16149, file: !14174, line: 193, type: !15543)
!16154 = !DILocation(line: 0, scope: !16149, inlinedAt: !16155)
!16155 = distinct !DILocation(line: 970, column: 3, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !16144, file: !2539, line: 969, column: 39)
!16157 = !DILocation(line: 196, column: 9, scope: !16149, inlinedAt: !16155)
!16158 = !DILocation(line: 971, column: 2, scope: !16156)
!16159 = !DILocation(line: 0, scope: !15567, inlinedAt: !16160)
!16160 = distinct !DILocation(line: 972, column: 3, scope: !16161)
!16161 = distinct !DILexicalBlock(scope: !16144, file: !2539, line: 971, column: 9)
!16162 = !DILocation(line: 0, scope: !15575, inlinedAt: !16163)
!16163 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16160)
!16164 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16163)
!16165 = !DILocation(line: 975, column: 1, scope: !16138)
!16166 = distinct !DISubprogram(name: "resched", scope: !2539, file: !2539, line: 940, type: !16167, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16169)
!16167 = !DISubroutineType(types: !16168)
!16168 = !{!131, !108}
!16169 = !{!16170}
!16170 = !DILocalVariable(name: "key", arg: 1, scope: !16166, file: !2539, line: 940, type: !108)
!16171 = !DILocation(line: 0, scope: !16166)
!16172 = !DILocalVariable(name: "key", arg: 1, scope: !16173, file: !6946, line: 112, type: !32)
!16173 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6946, file: !6946, line: 112, type: !16174, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16176)
!16174 = !DISubroutineType(types: !16175)
!16175 = !{!131, !32}
!16176 = !{!16172}
!16177 = !DILocation(line: 0, scope: !16173, inlinedAt: !16178)
!16178 = distinct !DILocation(line: 946, column: 9, scope: !16166)
!16179 = !DILocation(line: 115, column: 13, scope: !16173, inlinedAt: !16178)
!16180 = !DILocation(line: 946, column: 32, scope: !16166)
!16181 = !DILocation(line: 1031, column: 3, scope: !16182, inlinedAt: !16185)
!16182 = distinct !DISubprogram(name: "__get_IPSR", scope: !7281, file: !7281, line: 1027, type: !3564, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16183)
!16183 = !{!16184}
!16184 = !DILocalVariable(name: "result", scope: !16182, file: !7281, line: 1029, type: !108)
!16185 = distinct !DILocation(line: 48, column: 10, scope: !16186, inlinedAt: !16187)
!16186 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8256, file: !8256, line: 46, type: !8257, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !251)
!16187 = distinct !DILocation(line: 946, column: 36, scope: !16166)
!16188 = !{i64 2488118}
!16189 = !DILocation(line: 0, scope: !16182, inlinedAt: !16185)
!16190 = !DILocation(line: 48, column: 9, scope: !16186, inlinedAt: !16187)
!16191 = !DILocation(line: 946, column: 2, scope: !16166)
!16192 = distinct !DISubprogram(name: "need_swap", scope: !2539, file: !2539, line: 953, type: !8257, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16193)
!16193 = !{!16194}
!16194 = !DILocalVariable(name: "new_thread", scope: !16192, file: !2539, line: 959, type: !2434)
!16195 = !DILocation(line: 962, column: 31, scope: !16192)
!16196 = !DILocation(line: 0, scope: !16192)
!16197 = !DILocation(line: 963, column: 23, scope: !16192)
!16198 = !DILocation(line: 963, column: 20, scope: !16192)
!16199 = !DILocation(line: 963, column: 2, scope: !16192)
!16200 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14174, file: !14174, line: 181, type: !7291, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16201)
!16201 = !{!16202, !16203}
!16202 = !DILocalVariable(name: "key", arg: 1, scope: !16200, file: !14174, line: 181, type: !32)
!16203 = !DILocalVariable(name: "ret", scope: !16200, file: !14174, line: 183, type: !103)
!16204 = !DILocation(line: 0, scope: !16200)
!16205 = !DILocation(line: 185, column: 8, scope: !16200)
!16206 = !DILocation(line: 186, column: 2, scope: !16200)
!16207 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2539, file: !2539, line: 665, type: !15498, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16208)
!16208 = !{!16209, !16210, !16212}
!16209 = !DILocalVariable(name: "thread", arg: 1, scope: !16207, file: !2539, line: 665, type: !2434)
!16210 = !DILocalVariable(name: "__i", scope: !16211, file: !2539, line: 671, type: !15532)
!16211 = distinct !DILexicalBlock(scope: !16207, file: !2539, line: 671, column: 2)
!16212 = !DILocalVariable(name: "__key", scope: !16211, file: !2539, line: 671, type: !15532)
!16213 = !DILocation(line: 0, scope: !16207)
!16214 = !DILocation(line: 669, column: 8, scope: !16207)
!16215 = !DILocation(line: 0, scope: !16211)
!16216 = !DILocation(line: 0, scope: !15540, inlinedAt: !16217)
!16217 = distinct !DILocation(line: 671, column: 2, scope: !16211)
!16218 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16219)
!16219 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16217)
!16220 = !DILocation(line: 0, scope: !15549, inlinedAt: !16219)
!16221 = !DILocation(line: 672, column: 7, scope: !16222)
!16222 = distinct !DILexicalBlock(scope: !16223, file: !2539, line: 672, column: 7)
!16223 = distinct !DILexicalBlock(scope: !16224, file: !2539, line: 671, column: 26)
!16224 = distinct !DILexicalBlock(scope: !16211, file: !2539, line: 671, column: 2)
!16225 = !DILocation(line: 672, column: 7, scope: !16223)
!16226 = !DILocation(line: 0, scope: !15709, inlinedAt: !16227)
!16227 = distinct !DILocation(line: 673, column: 4, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16222, file: !2539, line: 672, column: 35)
!16229 = !DILocation(line: 266, column: 15, scope: !15709, inlinedAt: !16227)
!16230 = !DILocation(line: 266, column: 28, scope: !15709, inlinedAt: !16227)
!16231 = !DILocation(line: 0, scope: !15717, inlinedAt: !16232)
!16232 = distinct !DILocation(line: 268, column: 3, scope: !15721, inlinedAt: !16227)
!16233 = !DILocation(line: 234, column: 2, scope: !15717, inlinedAt: !16232)
!16234 = !DILocation(line: 674, column: 3, scope: !16228)
!16235 = !DILocation(line: 675, column: 3, scope: !16223)
!16236 = !DILocation(line: 676, column: 26, scope: !16223)
!16237 = !DILocation(line: 676, column: 23, scope: !16223)
!16238 = !DILocation(line: 676, column: 3, scope: !16223)
!16239 = !DILocation(line: 0, scope: !15567, inlinedAt: !16240)
!16240 = distinct !DILocation(line: 671, column: 2, scope: !16224)
!16241 = !DILocation(line: 0, scope: !15575, inlinedAt: !16242)
!16242 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16240)
!16243 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16242)
!16244 = !DILocation(line: 679, column: 16, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16207, file: !2539, line: 679, column: 6)
!16246 = !DILocation(line: 679, column: 13, scope: !16245)
!16247 = !DILocation(line: 679, column: 6, scope: !16207)
!16248 = !DILocation(line: 680, column: 3, scope: !16249)
!16249 = distinct !DILexicalBlock(scope: !16245, file: !2539, line: 679, column: 26)
!16250 = !DILocation(line: 681, column: 2, scope: !16249)
!16251 = !DILocation(line: 684, column: 1, scope: !16207)
!16252 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14463, file: !14463, line: 52, type: !15516, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16253)
!16253 = !{!16254}
!16254 = !DILocalVariable(name: "thread", arg: 1, scope: !16252, file: !14463, line: 52, type: !2434)
!16255 = !DILocation(line: 0, scope: !16252)
!16256 = !DILocation(line: 54, column: 39, scope: !16252)
!16257 = !DILocation(line: 54, column: 9, scope: !16252)
!16258 = !DILocation(line: 54, column: 2, scope: !16252)
!16259 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14070, file: !14070, line: 141, type: !15498, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16260)
!16260 = !{!16261}
!16261 = !DILocalVariable(name: "thread", arg: 1, scope: !16259, file: !14070, line: 141, type: !2434)
!16262 = !DILocation(line: 0, scope: !16259)
!16263 = !DILocation(line: 143, column: 15, scope: !16259)
!16264 = !DILocation(line: 143, column: 28, scope: !16259)
!16265 = !DILocation(line: 146, column: 1, scope: !16259)
!16266 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14070, file: !14070, line: 73, type: !334, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !251)
!16267 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16268)
!16268 = distinct !DILocation(line: 75, column: 30, scope: !16266)
!16269 = !DILocation(line: 0, scope: !15549, inlinedAt: !16268)
!16270 = !DILocation(line: 75, column: 9, scope: !16266)
!16271 = !DILocation(line: 76, column: 1, scope: !16266)
!16272 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2539, file: !2539, line: 977, type: !6970, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16273)
!16273 = !{!16274}
!16274 = !DILocalVariable(name: "key", arg: 1, scope: !16272, file: !2539, line: 977, type: !108)
!16275 = !DILocation(line: 0, scope: !16272)
!16276 = !DILocation(line: 979, column: 6, scope: !16277)
!16277 = distinct !DILexicalBlock(scope: !16272, file: !2539, line: 979, column: 6)
!16278 = !DILocation(line: 979, column: 6, scope: !16272)
!16279 = !DILocation(line: 980, column: 3, scope: !16280)
!16280 = distinct !DILexicalBlock(scope: !16277, file: !2539, line: 979, column: 20)
!16281 = !DILocation(line: 981, column: 2, scope: !16280)
!16282 = !DILocation(line: 0, scope: !15575, inlinedAt: !16283)
!16283 = distinct !DILocation(line: 982, column: 3, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16277, file: !2539, line: 981, column: 9)
!16285 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16283)
!16286 = !DILocation(line: 985, column: 1, scope: !16272)
!16287 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2539, file: !2539, line: 695, type: !15498, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16288)
!16288 = !{!16289, !16290}
!16289 = !DILocalVariable(name: "thread", arg: 1, scope: !16287, file: !2539, line: 695, type: !2434)
!16290 = !DILocalVariable(name: "key", scope: !16287, file: !2539, line: 699, type: !15532)
!16291 = !DILocation(line: 0, scope: !16287)
!16292 = !DILocation(line: 0, scope: !15540, inlinedAt: !16293)
!16293 = distinct !DILocation(line: 699, column: 25, scope: !16287)
!16294 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16295)
!16295 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16293)
!16296 = !DILocation(line: 0, scope: !15549, inlinedAt: !16295)
!16297 = !DILocation(line: 702, column: 7, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16287, file: !2539, line: 702, column: 6)
!16299 = !DILocation(line: 702, column: 6, scope: !16287)
!16300 = !DILocation(line: 0, scope: !15567, inlinedAt: !16301)
!16301 = distinct !DILocation(line: 703, column: 3, scope: !16302)
!16302 = distinct !DILexicalBlock(scope: !16298, file: !2539, line: 702, column: 38)
!16303 = !DILocation(line: 0, scope: !15575, inlinedAt: !16304)
!16304 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16301)
!16305 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16304)
!16306 = !DILocation(line: 704, column: 3, scope: !16302)
!16307 = !DILocation(line: 707, column: 2, scope: !16287)
!16308 = !DILocation(line: 708, column: 2, scope: !16287)
!16309 = !DILocation(line: 710, column: 2, scope: !16287)
!16310 = !DILocation(line: 713, column: 1, scope: !16287)
!16311 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14070, file: !14070, line: 96, type: !15658, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16312)
!16312 = !{!16313}
!16313 = !DILocalVariable(name: "thread", arg: 1, scope: !16311, file: !14070, line: 96, type: !2434)
!16314 = !DILocation(line: 0, scope: !16311)
!16315 = !DILocation(line: 98, column: 23, scope: !16311)
!16316 = !DILocation(line: 98, column: 36, scope: !16311)
!16317 = !DILocation(line: 98, column: 57, scope: !16311)
!16318 = !DILocation(line: 98, column: 2, scope: !16311)
!16319 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14070, file: !14070, line: 148, type: !15498, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16320)
!16320 = !{!16321}
!16321 = !DILocalVariable(name: "thread", arg: 1, scope: !16319, file: !14070, line: 148, type: !2434)
!16322 = !DILocation(line: 0, scope: !16319)
!16323 = !DILocation(line: 150, column: 15, scope: !16319)
!16324 = !DILocation(line: 150, column: 28, scope: !16319)
!16325 = !DILocation(line: 153, column: 1, scope: !16319)
!16326 = distinct !DISubprogram(name: "z_pend_thread", scope: !2539, file: !2539, line: 770, type: !16327, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16333)
!16327 = !DISubroutineType(types: !16328)
!16328 = !{null, !2434, !2465, !16329}
!16329 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16330)
!16330 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16331)
!16331 = !{!16332}
!16332 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16330, file: !105, line: 66, baseType: !104, size: 64)
!16333 = !{!16334, !16335, !16336, !16337, !16339}
!16334 = !DILocalVariable(name: "thread", arg: 1, scope: !16326, file: !2539, line: 770, type: !2434)
!16335 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16326, file: !2539, line: 770, type: !2465)
!16336 = !DILocalVariable(name: "timeout", arg: 3, scope: !16326, file: !2539, line: 771, type: !16329)
!16337 = !DILocalVariable(name: "__i", scope: !16338, file: !2539, line: 774, type: !15532)
!16338 = distinct !DILexicalBlock(scope: !16326, file: !2539, line: 774, column: 2)
!16339 = !DILocalVariable(name: "__key", scope: !16338, file: !2539, line: 774, type: !15532)
!16340 = !DILocation(line: 0, scope: !16326)
!16341 = !DILocation(line: 0, scope: !16338)
!16342 = !DILocation(line: 0, scope: !15540, inlinedAt: !16343)
!16343 = distinct !DILocation(line: 774, column: 2, scope: !16338)
!16344 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16345)
!16345 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16343)
!16346 = !DILocation(line: 0, scope: !15549, inlinedAt: !16345)
!16347 = !DILocation(line: 775, column: 3, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16349, file: !2539, line: 774, column: 26)
!16349 = distinct !DILexicalBlock(scope: !16338, file: !2539, line: 774, column: 2)
!16350 = !DILocation(line: 0, scope: !15567, inlinedAt: !16351)
!16351 = distinct !DILocation(line: 774, column: 2, scope: !16349)
!16352 = !DILocation(line: 0, scope: !15575, inlinedAt: !16353)
!16353 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16351)
!16354 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16353)
!16355 = !DILocation(line: 777, column: 1, scope: !16326)
!16356 = distinct !DISubprogram(name: "pend_locked", scope: !2539, file: !2539, line: 760, type: !16327, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16357)
!16357 = !{!16358, !16359, !16360}
!16358 = !DILocalVariable(name: "thread", arg: 1, scope: !16356, file: !2539, line: 760, type: !2434)
!16359 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16356, file: !2539, line: 760, type: !2465)
!16360 = !DILocalVariable(name: "timeout", arg: 3, scope: !16356, file: !2539, line: 761, type: !16329)
!16361 = !DILocation(line: 0, scope: !16356)
!16362 = !DILocation(line: 766, column: 2, scope: !16356)
!16363 = !DILocation(line: 767, column: 2, scope: !16356)
!16364 = !DILocation(line: 768, column: 1, scope: !16356)
!16365 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2539, file: !2539, line: 740, type: !16366, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16368)
!16366 = !DISubroutineType(types: !16367)
!16367 = !{null, !2434, !2465}
!16368 = !{!16369, !16370}
!16369 = !DILocalVariable(name: "thread", arg: 1, scope: !16365, file: !2539, line: 740, type: !2434)
!16370 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16365, file: !2539, line: 740, type: !2465)
!16371 = !DILocation(line: 0, scope: !16365)
!16372 = !DILocation(line: 742, column: 2, scope: !16365)
!16373 = !DILocation(line: 743, column: 2, scope: !16365)
!16374 = !DILocation(line: 747, column: 13, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !16365, file: !2539, line: 747, column: 6)
!16376 = !DILocation(line: 747, column: 6, scope: !16365)
!16377 = !DILocation(line: 748, column: 16, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !16375, file: !2539, line: 747, column: 22)
!16379 = !DILocation(line: 748, column: 26, scope: !16378)
!16380 = !DILocation(line: 749, column: 28, scope: !16378)
!16381 = !DILocation(line: 0, scope: !15740, inlinedAt: !16382)
!16382 = distinct !DILocation(line: 749, column: 3, scope: !16378)
!16383 = !DILocation(line: 188, column: 2, scope: !15750, inlinedAt: !16382)
!16384 = !DILocation(line: 188, column: 2, scope: !15752, inlinedAt: !16382)
!16385 = !DILocation(line: 0, scope: !15750, inlinedAt: !16382)
!16386 = !DILocation(line: 189, column: 7, scope: !15755, inlinedAt: !16382)
!16387 = !DILocation(line: 189, column: 35, scope: !15755, inlinedAt: !16382)
!16388 = !DILocation(line: 189, column: 7, scope: !15756, inlinedAt: !16382)
!16389 = !DILocation(line: 191, column: 21, scope: !15760, inlinedAt: !16382)
!16390 = !DILocation(line: 190, column: 4, scope: !15760, inlinedAt: !16382)
!16391 = !DILocation(line: 192, column: 4, scope: !15760, inlinedAt: !16382)
!16392 = distinct !{!16392, !16383, !16393}
!16393 = !DILocation(line: 194, column: 2, scope: !15750, inlinedAt: !16382)
!16394 = !DILocation(line: 196, column: 37, scope: !15740, inlinedAt: !16382)
!16395 = !DILocation(line: 196, column: 2, scope: !15740, inlinedAt: !16382)
!16396 = !DILocation(line: 197, column: 1, scope: !15740, inlinedAt: !16382)
!16397 = !DILocation(line: 751, column: 1, scope: !16365)
!16398 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2539, file: !2539, line: 753, type: !16399, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16401)
!16399 = !DISubroutineType(types: !16400)
!16400 = !{null, !2434, !16329}
!16401 = !{!16402, !16403}
!16402 = !DILocalVariable(name: "thread", arg: 1, scope: !16398, file: !2539, line: 753, type: !2434)
!16403 = !DILocalVariable(name: "timeout", arg: 2, scope: !16398, file: !2539, line: 753, type: !16329)
!16404 = !DILocation(line: 0, scope: !16398)
!16405 = !DILocation(line: 755, column: 7, scope: !16406)
!16406 = distinct !DILexicalBlock(scope: !16398, file: !2539, line: 755, column: 6)
!16407 = !DILocation(line: 755, column: 6, scope: !16398)
!16408 = !DILocation(line: 756, column: 3, scope: !16409)
!16409 = distinct !DILexicalBlock(scope: !16406, file: !2539, line: 755, column: 41)
!16410 = !DILocation(line: 757, column: 2, scope: !16409)
!16411 = !DILocation(line: 758, column: 1, scope: !16398)
!16412 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14463, file: !14463, line: 47, type: !16399, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16413)
!16413 = !{!16414, !16415}
!16414 = !DILocalVariable(name: "thread", arg: 1, scope: !16412, file: !14463, line: 47, type: !2434)
!16415 = !DILocalVariable(name: "ticks", arg: 2, scope: !16412, file: !14463, line: 47, type: !16329)
!16416 = !DILocation(line: 0, scope: !16412)
!16417 = !DILocation(line: 49, column: 30, scope: !16412)
!16418 = !DILocation(line: 49, column: 2, scope: !16412)
!16419 = !DILocation(line: 50, column: 1, scope: !16412)
!16420 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2539, file: !2539, line: 795, type: !2491, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16421)
!16421 = !{!16422, !16423, !16424, !16426, !16427}
!16422 = !DILocalVariable(name: "timeout", arg: 1, scope: !16420, file: !2539, line: 795, type: !2493)
!16423 = !DILocalVariable(name: "thread", scope: !16420, file: !2539, line: 797, type: !2434)
!16424 = !DILocalVariable(name: "__i", scope: !16425, file: !2539, line: 800, type: !15532)
!16425 = distinct !DILexicalBlock(scope: !16420, file: !2539, line: 800, column: 2)
!16426 = !DILocalVariable(name: "__key", scope: !16425, file: !2539, line: 800, type: !15532)
!16427 = !DILocalVariable(name: "killed", scope: !16428, file: !2539, line: 801, type: !131)
!16428 = distinct !DILexicalBlock(scope: !16429, file: !2539, line: 800, column: 26)
!16429 = distinct !DILexicalBlock(scope: !16425, file: !2539, line: 800, column: 2)
!16430 = !DILocation(line: 0, scope: !16420)
!16431 = !DILocation(line: 797, column: 28, scope: !16420)
!16432 = !DILocation(line: 0, scope: !16425)
!16433 = !DILocation(line: 0, scope: !15540, inlinedAt: !16434)
!16434 = distinct !DILocation(line: 800, column: 2, scope: !16425)
!16435 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16436)
!16436 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16434)
!16437 = !DILocation(line: 0, scope: !15549, inlinedAt: !16436)
!16438 = !DILocation(line: 801, column: 27, scope: !16428)
!16439 = !DILocation(line: 801, column: 32, scope: !16428)
!16440 = !DILocation(line: 801, column: 61, scope: !16428)
!16441 = !DILocation(line: 0, scope: !16428)
!16442 = !DILocation(line: 804, column: 7, scope: !16428)
!16443 = !DILocation(line: 805, column: 21, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16445, file: !2539, line: 805, column: 8)
!16445 = distinct !DILexicalBlock(scope: !16446, file: !2539, line: 804, column: 16)
!16446 = distinct !DILexicalBlock(scope: !16428, file: !2539, line: 804, column: 7)
!16447 = !DILocation(line: 805, column: 31, scope: !16444)
!16448 = !DILocation(line: 805, column: 8, scope: !16445)
!16449 = !DILocation(line: 806, column: 5, scope: !16450)
!16450 = distinct !DILexicalBlock(scope: !16444, file: !2539, line: 805, column: 40)
!16451 = !DILocation(line: 807, column: 4, scope: !16450)
!16452 = !DILocation(line: 808, column: 4, scope: !16445)
!16453 = !DILocation(line: 809, column: 4, scope: !16445)
!16454 = !DILocation(line: 810, column: 4, scope: !16445)
!16455 = !DILocation(line: 811, column: 3, scope: !16445)
!16456 = !DILocation(line: 0, scope: !15567, inlinedAt: !16457)
!16457 = distinct !DILocation(line: 800, column: 2, scope: !16429)
!16458 = !DILocation(line: 0, scope: !15575, inlinedAt: !16459)
!16459 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16457)
!16460 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16459)
!16461 = !DILocation(line: 813, column: 1, scope: !16420)
!16462 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2539, file: !2539, line: 779, type: !15498, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16463)
!16463 = !{!16464}
!16464 = !DILocalVariable(name: "thread", arg: 1, scope: !16462, file: !2539, line: 779, type: !2434)
!16465 = !DILocation(line: 0, scope: !16462)
!16466 = !DILocation(line: 781, column: 2, scope: !16462)
!16467 = !DILocation(line: 782, column: 2, scope: !16462)
!16468 = !DILocation(line: 783, column: 15, scope: !16462)
!16469 = !DILocation(line: 783, column: 25, scope: !16462)
!16470 = !DILocation(line: 784, column: 1, scope: !16462)
!16471 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14070, file: !14070, line: 165, type: !15498, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16472)
!16472 = !{!16473}
!16473 = !DILocalVariable(name: "thread", arg: 1, scope: !16471, file: !14070, line: 165, type: !2434)
!16474 = !DILocation(line: 0, scope: !16471)
!16475 = !DILocation(line: 167, column: 15, scope: !16471)
!16476 = !DILocation(line: 167, column: 28, scope: !16471)
!16477 = !DILocation(line: 168, column: 1, scope: !16471)
!16478 = distinct !DISubprogram(name: "unready_thread", scope: !2539, file: !2539, line: 731, type: !15498, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16479)
!16479 = !{!16480}
!16480 = !DILocalVariable(name: "thread", arg: 1, scope: !16478, file: !2539, line: 731, type: !2434)
!16481 = !DILocation(line: 0, scope: !16478)
!16482 = !DILocation(line: 733, column: 6, scope: !16483)
!16483 = distinct !DILexicalBlock(scope: !16478, file: !2539, line: 733, column: 6)
!16484 = !DILocation(line: 733, column: 6, scope: !16478)
!16485 = !DILocation(line: 0, scope: !15709, inlinedAt: !16486)
!16486 = distinct !DILocation(line: 734, column: 3, scope: !16487)
!16487 = distinct !DILexicalBlock(scope: !16483, file: !2539, line: 733, column: 34)
!16488 = !DILocation(line: 266, column: 15, scope: !15709, inlinedAt: !16486)
!16489 = !DILocation(line: 266, column: 28, scope: !15709, inlinedAt: !16486)
!16490 = !DILocation(line: 0, scope: !15717, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 268, column: 3, scope: !15721, inlinedAt: !16486)
!16492 = !DILocation(line: 234, column: 2, scope: !15717, inlinedAt: !16491)
!16493 = !DILocation(line: 735, column: 2, scope: !16487)
!16494 = !DILocation(line: 736, column: 25, scope: !16478)
!16495 = !DILocation(line: 736, column: 22, scope: !16478)
!16496 = !DILocation(line: 736, column: 2, scope: !16478)
!16497 = !DILocation(line: 737, column: 1, scope: !16478)
!16498 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14070, file: !14070, line: 160, type: !15498, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16499)
!16499 = !{!16500}
!16500 = !DILocalVariable(name: "thread", arg: 1, scope: !16498, file: !14070, line: 160, type: !2434)
!16501 = !DILocation(line: 0, scope: !16498)
!16502 = !DILocation(line: 162, column: 15, scope: !16498)
!16503 = !DILocation(line: 162, column: 28, scope: !16498)
!16504 = !DILocation(line: 163, column: 1, scope: !16498)
!16505 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2539, file: !2539, line: 786, type: !15498, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16506)
!16506 = !{!16507, !16508, !16510}
!16507 = !DILocalVariable(name: "thread", arg: 1, scope: !16505, file: !2539, line: 786, type: !2434)
!16508 = !DILocalVariable(name: "__i", scope: !16509, file: !2539, line: 788, type: !15532)
!16509 = distinct !DILexicalBlock(scope: !16505, file: !2539, line: 788, column: 2)
!16510 = !DILocalVariable(name: "__key", scope: !16509, file: !2539, line: 788, type: !15532)
!16511 = !DILocation(line: 0, scope: !16505)
!16512 = !DILocation(line: 0, scope: !16509)
!16513 = !DILocation(line: 0, scope: !15540, inlinedAt: !16514)
!16514 = distinct !DILocation(line: 788, column: 2, scope: !16509)
!16515 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16516)
!16516 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16514)
!16517 = !DILocation(line: 0, scope: !15549, inlinedAt: !16516)
!16518 = !DILocation(line: 789, column: 3, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16520, file: !2539, line: 788, column: 26)
!16520 = distinct !DILexicalBlock(scope: !16509, file: !2539, line: 788, column: 2)
!16521 = !DILocation(line: 0, scope: !15567, inlinedAt: !16522)
!16522 = distinct !DILocation(line: 788, column: 2, scope: !16520)
!16523 = !DILocation(line: 0, scope: !15575, inlinedAt: !16524)
!16524 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16522)
!16525 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16524)
!16526 = !DILocation(line: 791, column: 1, scope: !16505)
!16527 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2539, file: !2539, line: 816, type: !16528, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16530)
!16528 = !DISubroutineType(types: !16529)
!16529 = !{!103, !108, !2465, !16329}
!16530 = !{!16531, !16532, !16533, !16534, !16535, !16537}
!16531 = !DILocalVariable(name: "key", arg: 1, scope: !16527, file: !2539, line: 816, type: !108)
!16532 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16527, file: !2539, line: 816, type: !2465)
!16533 = !DILocalVariable(name: "timeout", arg: 3, scope: !16527, file: !2539, line: 816, type: !16329)
!16534 = !DILocalVariable(name: "ret", scope: !16527, file: !2539, line: 828, type: !103)
!16535 = !DILocalVariable(name: "__i", scope: !16536, file: !2539, line: 829, type: !15532)
!16536 = distinct !DILexicalBlock(scope: !16527, file: !2539, line: 829, column: 2)
!16537 = !DILocalVariable(name: "__key", scope: !16536, file: !2539, line: 829, type: !15532)
!16538 = !DILocation(line: 0, scope: !16527)
!16539 = !DILocation(line: 823, column: 14, scope: !16527)
!16540 = !DILocation(line: 823, column: 2, scope: !16527)
!16541 = !DILocation(line: 826, column: 20, scope: !16527)
!16542 = !DILocation(line: 826, column: 18, scope: !16527)
!16543 = !DILocation(line: 828, column: 12, scope: !16527)
!16544 = !DILocation(line: 0, scope: !16536)
!16545 = !DILocation(line: 0, scope: !15540, inlinedAt: !16546)
!16546 = distinct !DILocation(line: 829, column: 2, scope: !16536)
!16547 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16548)
!16548 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16546)
!16549 = !DILocation(line: 0, scope: !15549, inlinedAt: !16548)
!16550 = !DILocation(line: 830, column: 7, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16552, file: !2539, line: 830, column: 7)
!16552 = distinct !DILexicalBlock(scope: !16553, file: !2539, line: 829, column: 26)
!16553 = distinct !DILexicalBlock(scope: !16536, file: !2539, line: 829, column: 2)
!16554 = !DILocation(line: 830, column: 26, scope: !16551)
!16555 = !DILocation(line: 830, column: 23, scope: !16551)
!16556 = !DILocation(line: 830, column: 7, scope: !16552)
!16557 = !DILocation(line: 831, column: 20, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16551, file: !2539, line: 830, column: 36)
!16559 = !DILocation(line: 832, column: 3, scope: !16558)
!16560 = !DILocation(line: 0, scope: !15567, inlinedAt: !16561)
!16561 = distinct !DILocation(line: 829, column: 2, scope: !16553)
!16562 = !DILocation(line: 0, scope: !15575, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16561)
!16564 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16563)
!16565 = !DILocation(line: 834, column: 2, scope: !16527)
!16566 = distinct !DISubprogram(name: "z_pend_curr", scope: !2539, file: !2539, line: 840, type: !16567, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16569)
!16567 = !DISubroutineType(types: !16568)
!16568 = !{!103, !15543, !15532, !2465, !16329}
!16569 = !{!16570, !16571, !16572, !16573}
!16570 = !DILocalVariable(name: "lock", arg: 1, scope: !16566, file: !2539, line: 840, type: !15543)
!16571 = !DILocalVariable(name: "key", arg: 2, scope: !16566, file: !2539, line: 840, type: !15532)
!16572 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16566, file: !2539, line: 841, type: !2465)
!16573 = !DILocalVariable(name: "timeout", arg: 4, scope: !16566, file: !2539, line: 841, type: !16329)
!16574 = !DILocation(line: 0, scope: !16566)
!16575 = !DILocation(line: 844, column: 20, scope: !16566)
!16576 = !DILocation(line: 844, column: 18, scope: !16566)
!16577 = !DILocation(line: 0, scope: !15540, inlinedAt: !16578)
!16578 = distinct !DILocation(line: 856, column: 9, scope: !16566)
!16579 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16580)
!16580 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16578)
!16581 = !DILocation(line: 0, scope: !15549, inlinedAt: !16580)
!16582 = !DILocation(line: 857, column: 14, scope: !16566)
!16583 = !DILocation(line: 857, column: 2, scope: !16566)
!16584 = !DILocation(line: 0, scope: !16149, inlinedAt: !16585)
!16585 = distinct !DILocation(line: 859, column: 9, scope: !16566)
!16586 = !DILocation(line: 196, column: 9, scope: !16149, inlinedAt: !16585)
!16587 = !DILocation(line: 859, column: 2, scope: !16566)
!16588 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2539, file: !2539, line: 862, type: !16589, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16591)
!16589 = !DISubroutineType(types: !16590)
!16590 = !{!2434, !2465}
!16591 = !{!16592, !16593, !16594, !16596}
!16592 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16588, file: !2539, line: 862, type: !2465)
!16593 = !DILocalVariable(name: "thread", scope: !16588, file: !2539, line: 864, type: !2434)
!16594 = !DILocalVariable(name: "__i", scope: !16595, file: !2539, line: 866, type: !15532)
!16595 = distinct !DILexicalBlock(scope: !16588, file: !2539, line: 866, column: 2)
!16596 = !DILocalVariable(name: "__key", scope: !16595, file: !2539, line: 866, type: !15532)
!16597 = !DILocation(line: 0, scope: !16588)
!16598 = !DILocation(line: 0, scope: !16595)
!16599 = !DILocation(line: 0, scope: !15540, inlinedAt: !16600)
!16600 = distinct !DILocation(line: 866, column: 2, scope: !16595)
!16601 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16602)
!16602 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16600)
!16603 = !DILocation(line: 0, scope: !15549, inlinedAt: !16602)
!16604 = !DILocation(line: 867, column: 12, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16606, file: !2539, line: 866, column: 26)
!16606 = distinct !DILexicalBlock(scope: !16595, file: !2539, line: 866, column: 2)
!16607 = !DILocation(line: 869, column: 14, scope: !16608)
!16608 = distinct !DILexicalBlock(scope: !16605, file: !2539, line: 869, column: 7)
!16609 = !DILocation(line: 869, column: 7, scope: !16605)
!16610 = !DILocation(line: 870, column: 4, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16608, file: !2539, line: 869, column: 23)
!16612 = !DILocation(line: 871, column: 3, scope: !16611)
!16613 = !DILocation(line: 0, scope: !15567, inlinedAt: !16614)
!16614 = distinct !DILocation(line: 866, column: 2, scope: !16606)
!16615 = !DILocation(line: 0, scope: !15575, inlinedAt: !16616)
!16616 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16614)
!16617 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16616)
!16618 = !DILocation(line: 874, column: 2, scope: !16588)
!16619 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2539, file: !2539, line: 877, type: !16589, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16620)
!16620 = !{!16621, !16622, !16623, !16625}
!16621 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16619, file: !2539, line: 877, type: !2465)
!16622 = !DILocalVariable(name: "thread", scope: !16619, file: !2539, line: 879, type: !2434)
!16623 = !DILocalVariable(name: "__i", scope: !16624, file: !2539, line: 881, type: !15532)
!16624 = distinct !DILexicalBlock(scope: !16619, file: !2539, line: 881, column: 2)
!16625 = !DILocalVariable(name: "__key", scope: !16624, file: !2539, line: 881, type: !15532)
!16626 = !DILocation(line: 0, scope: !16619)
!16627 = !DILocation(line: 0, scope: !16624)
!16628 = !DILocation(line: 0, scope: !15540, inlinedAt: !16629)
!16629 = distinct !DILocation(line: 881, column: 2, scope: !16624)
!16630 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16631)
!16631 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16629)
!16632 = !DILocation(line: 0, scope: !15549, inlinedAt: !16631)
!16633 = !DILocation(line: 882, column: 12, scope: !16634)
!16634 = distinct !DILexicalBlock(scope: !16635, file: !2539, line: 881, column: 26)
!16635 = distinct !DILexicalBlock(scope: !16624, file: !2539, line: 881, column: 2)
!16636 = !DILocation(line: 884, column: 14, scope: !16637)
!16637 = distinct !DILexicalBlock(scope: !16634, file: !2539, line: 884, column: 7)
!16638 = !DILocation(line: 884, column: 7, scope: !16634)
!16639 = !DILocation(line: 885, column: 4, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16637, file: !2539, line: 884, column: 23)
!16641 = !DILocation(line: 886, column: 10, scope: !16640)
!16642 = !DILocation(line: 887, column: 3, scope: !16640)
!16643 = !DILocation(line: 0, scope: !15567, inlinedAt: !16644)
!16644 = distinct !DILocation(line: 881, column: 2, scope: !16635)
!16645 = !DILocation(line: 0, scope: !15575, inlinedAt: !16646)
!16646 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16644)
!16647 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16646)
!16648 = !DILocation(line: 890, column: 2, scope: !16619)
!16649 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2539, file: !2539, line: 893, type: !15498, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16650)
!16650 = !{!16651}
!16651 = !DILocalVariable(name: "thread", arg: 1, scope: !16649, file: !2539, line: 893, type: !2434)
!16652 = !DILocation(line: 0, scope: !16649)
!16653 = !DILocation(line: 0, scope: !16505, inlinedAt: !16654)
!16654 = distinct !DILocation(line: 895, column: 2, scope: !16649)
!16655 = !DILocation(line: 0, scope: !16509, inlinedAt: !16654)
!16656 = !DILocation(line: 0, scope: !15540, inlinedAt: !16657)
!16657 = distinct !DILocation(line: 788, column: 2, scope: !16509, inlinedAt: !16654)
!16658 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16659)
!16659 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16657)
!16660 = !DILocation(line: 0, scope: !15549, inlinedAt: !16659)
!16661 = !DILocation(line: 789, column: 3, scope: !16519, inlinedAt: !16654)
!16662 = !DILocation(line: 0, scope: !15567, inlinedAt: !16663)
!16663 = distinct !DILocation(line: 788, column: 2, scope: !16520, inlinedAt: !16654)
!16664 = !DILocation(line: 0, scope: !15575, inlinedAt: !16665)
!16665 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16663)
!16666 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16665)
!16667 = !DILocation(line: 896, column: 8, scope: !16649)
!16668 = !DILocation(line: 897, column: 1, scope: !16649)
!16669 = distinct !DISubprogram(name: "z_set_prio", scope: !2539, file: !2539, line: 902, type: !15860, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16670)
!16670 = !{!16671, !16672, !16673, !16674, !16676}
!16671 = !DILocalVariable(name: "thread", arg: 1, scope: !16669, file: !2539, line: 902, type: !2434)
!16672 = !DILocalVariable(name: "prio", arg: 2, scope: !16669, file: !2539, line: 902, type: !103)
!16673 = !DILocalVariable(name: "need_sched", scope: !16669, file: !2539, line: 904, type: !131)
!16674 = !DILocalVariable(name: "__i", scope: !16675, file: !2539, line: 906, type: !15532)
!16675 = distinct !DILexicalBlock(scope: !16669, file: !2539, line: 906, column: 2)
!16676 = !DILocalVariable(name: "__key", scope: !16675, file: !2539, line: 906, type: !15532)
!16677 = !DILocation(line: 0, scope: !16669)
!16678 = !DILocation(line: 0, scope: !16675)
!16679 = !DILocation(line: 0, scope: !15540, inlinedAt: !16680)
!16680 = distinct !DILocation(line: 906, column: 2, scope: !16675)
!16681 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16682)
!16682 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16680)
!16683 = !DILocation(line: 0, scope: !15549, inlinedAt: !16682)
!16684 = !DILocation(line: 907, column: 16, scope: !16685)
!16685 = distinct !DILexicalBlock(scope: !16686, file: !2539, line: 906, column: 26)
!16686 = distinct !DILexicalBlock(scope: !16675, file: !2539, line: 906, column: 2)
!16687 = !DILocation(line: 909, column: 7, scope: !16685)
!16688 = !DILocation(line: 0, scope: !15709, inlinedAt: !16689)
!16689 = distinct !DILocation(line: 912, column: 5, scope: !16690)
!16690 = distinct !DILexicalBlock(scope: !16691, file: !2539, line: 911, column: 63)
!16691 = distinct !DILexicalBlock(scope: !16692, file: !2539, line: 911, column: 8)
!16692 = distinct !DILexicalBlock(scope: !16693, file: !2539, line: 909, column: 19)
!16693 = distinct !DILexicalBlock(scope: !16685, file: !2539, line: 909, column: 7)
!16694 = !DILocation(line: 266, column: 28, scope: !15709, inlinedAt: !16689)
!16695 = !DILocation(line: 0, scope: !15717, inlinedAt: !16696)
!16696 = distinct !DILocation(line: 268, column: 3, scope: !15721, inlinedAt: !16689)
!16697 = !DILocation(line: 234, column: 2, scope: !15717, inlinedAt: !16696)
!16698 = !DILocation(line: 913, column: 23, scope: !16690)
!16699 = !DILocation(line: 0, scope: !15726, inlinedAt: !16700)
!16700 = distinct !DILocation(line: 914, column: 5, scope: !16690)
!16701 = !DILocation(line: 252, column: 28, scope: !15726, inlinedAt: !16700)
!16702 = !DILocation(line: 0, scope: !15733, inlinedAt: !16703)
!16703 = distinct !DILocation(line: 254, column: 3, scope: !15737, inlinedAt: !16700)
!16704 = !DILocation(line: 0, scope: !15740, inlinedAt: !16705)
!16705 = distinct !DILocation(line: 229, column: 2, scope: !15733, inlinedAt: !16703)
!16706 = !DILocation(line: 188, column: 2, scope: !15750, inlinedAt: !16705)
!16707 = !DILocation(line: 188, column: 2, scope: !15752, inlinedAt: !16705)
!16708 = !DILocation(line: 0, scope: !15750, inlinedAt: !16705)
!16709 = !DILocation(line: 189, column: 7, scope: !15755, inlinedAt: !16705)
!16710 = !DILocation(line: 189, column: 35, scope: !15755, inlinedAt: !16705)
!16711 = !DILocation(line: 189, column: 7, scope: !15756, inlinedAt: !16705)
!16712 = !DILocation(line: 190, column: 4, scope: !15760, inlinedAt: !16705)
!16713 = !DILocation(line: 192, column: 4, scope: !15760, inlinedAt: !16705)
!16714 = distinct !{!16714, !16706, !16715}
!16715 = !DILocation(line: 194, column: 2, scope: !15750, inlinedAt: !16705)
!16716 = !DILocation(line: 196, column: 2, scope: !15740, inlinedAt: !16705)
!16717 = !DILocation(line: 197, column: 1, scope: !15740, inlinedAt: !16705)
!16718 = !DILocation(line: 918, column: 4, scope: !16692)
!16719 = !DILocation(line: 919, column: 3, scope: !16692)
!16720 = !DILocation(line: 920, column: 22, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16693, file: !2539, line: 919, column: 10)
!16722 = !DILocation(line: 0, scope: !15567, inlinedAt: !16723)
!16723 = distinct !DILocation(line: 906, column: 2, scope: !16686)
!16724 = !DILocation(line: 0, scope: !15575, inlinedAt: !16725)
!16725 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16723)
!16726 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16725)
!16727 = !DILocation(line: 926, column: 2, scope: !16669)
!16728 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2539, file: !2539, line: 929, type: !16729, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16731)
!16729 = !DISubroutineType(types: !16730)
!16730 = !{null, !2434, !103}
!16731 = !{!16732, !16733, !16734}
!16732 = !DILocalVariable(name: "thread", arg: 1, scope: !16728, file: !2539, line: 929, type: !2434)
!16733 = !DILocalVariable(name: "prio", arg: 2, scope: !16728, file: !2539, line: 929, type: !103)
!16734 = !DILocalVariable(name: "need_sched", scope: !16728, file: !2539, line: 931, type: !131)
!16735 = !DILocation(line: 0, scope: !16728)
!16736 = !DILocation(line: 931, column: 20, scope: !16728)
!16737 = !DILocation(line: 935, column: 17, scope: !16738)
!16738 = distinct !DILexicalBlock(scope: !16728, file: !2539, line: 935, column: 6)
!16739 = !DILocation(line: 935, column: 20, scope: !16738)
!16740 = !DILocation(line: 935, column: 35, scope: !16738)
!16741 = !DILocation(line: 935, column: 48, scope: !16738)
!16742 = !DILocation(line: 935, column: 6, scope: !16728)
!16743 = !DILocation(line: 936, column: 3, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16738, file: !2539, line: 935, column: 55)
!16745 = !DILocation(line: 937, column: 2, scope: !16744)
!16746 = !DILocation(line: 938, column: 1, scope: !16728)
!16747 = distinct !DISubprogram(name: "k_sched_lock", scope: !2539, file: !2539, line: 987, type: !334, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16748)
!16748 = !{!16749, !16751}
!16749 = !DILocalVariable(name: "__i", scope: !16750, file: !2539, line: 989, type: !15532)
!16750 = distinct !DILexicalBlock(scope: !16747, file: !2539, line: 989, column: 2)
!16751 = !DILocalVariable(name: "__key", scope: !16750, file: !2539, line: 989, type: !15532)
!16752 = !DILocation(line: 0, scope: !16750)
!16753 = !DILocation(line: 0, scope: !15540, inlinedAt: !16754)
!16754 = distinct !DILocation(line: 989, column: 2, scope: !16750)
!16755 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16756)
!16756 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16754)
!16757 = !DILocation(line: 0, scope: !15549, inlinedAt: !16756)
!16758 = !DILocation(line: 992, column: 3, scope: !16759)
!16759 = distinct !DILexicalBlock(scope: !16760, file: !2539, line: 989, column: 26)
!16760 = distinct !DILexicalBlock(scope: !16750, file: !2539, line: 989, column: 2)
!16761 = !DILocation(line: 0, scope: !15567, inlinedAt: !16762)
!16762 = distinct !DILocation(line: 989, column: 2, scope: !16760)
!16763 = !DILocation(line: 0, scope: !15575, inlinedAt: !16764)
!16764 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16762)
!16765 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16764)
!16766 = !DILocation(line: 994, column: 1, scope: !16747)
!16767 = distinct !DISubprogram(name: "z_sched_lock", scope: !14070, file: !14070, line: 251, type: !334, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !251)
!16768 = !DILocation(line: 256, column: 4, scope: !16767)
!16769 = !DILocation(line: 256, column: 19, scope: !16767)
!16770 = !DILocation(line: 256, column: 2, scope: !16767)
!16771 = !DILocation(line: 258, column: 2, scope: !16772)
!16772 = distinct !DILexicalBlock(scope: !16767, file: !14070, line: 258, column: 2)
!16773 = !{i64 2152341931}
!16774 = !DILocation(line: 259, column: 1, scope: !16767)
!16775 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2539, file: !2539, line: 996, type: !334, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16776)
!16776 = !{!16777, !16779}
!16777 = !DILocalVariable(name: "__i", scope: !16778, file: !2539, line: 998, type: !15532)
!16778 = distinct !DILexicalBlock(scope: !16775, file: !2539, line: 998, column: 2)
!16779 = !DILocalVariable(name: "__key", scope: !16778, file: !2539, line: 998, type: !15532)
!16780 = !DILocation(line: 0, scope: !16778)
!16781 = !DILocation(line: 0, scope: !15540, inlinedAt: !16782)
!16782 = distinct !DILocation(line: 998, column: 2, scope: !16778)
!16783 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !16784)
!16784 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !16782)
!16785 = !DILocation(line: 0, scope: !15549, inlinedAt: !16784)
!16786 = !DILocation(line: 1002, column: 5, scope: !16787)
!16787 = distinct !DILexicalBlock(scope: !16788, file: !2539, line: 998, column: 26)
!16788 = distinct !DILexicalBlock(scope: !16778, file: !2539, line: 998, column: 2)
!16789 = !DILocation(line: 1002, column: 20, scope: !16787)
!16790 = !DILocation(line: 1002, column: 3, scope: !16787)
!16791 = !DILocation(line: 1003, column: 3, scope: !16787)
!16792 = !DILocation(line: 0, scope: !15567, inlinedAt: !16793)
!16793 = distinct !DILocation(line: 998, column: 2, scope: !16788)
!16794 = !DILocation(line: 0, scope: !15575, inlinedAt: !16795)
!16795 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !16793)
!16796 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !16795)
!16797 = !DILocation(line: 1011, column: 2, scope: !16775)
!16798 = !DILocation(line: 1012, column: 1, scope: !16775)
!16799 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2539, file: !2539, line: 1014, type: !15848, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !251)
!16800 = !DILocation(line: 1028, column: 25, scope: !16799)
!16801 = !DILocation(line: 1028, column: 2, scope: !16799)
!16802 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2539, file: !2539, line: 1155, type: !16803, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16805)
!16803 = !DISubroutineType(types: !16804)
!16804 = !{!131, !2463, !2463}
!16805 = !{!16806, !16807, !16808, !16809, !16810}
!16806 = !DILocalVariable(name: "a", arg: 1, scope: !16802, file: !2539, line: 1155, type: !2463)
!16807 = !DILocalVariable(name: "b", arg: 2, scope: !16802, file: !2539, line: 1155, type: !2463)
!16808 = !DILocalVariable(name: "thread_a", scope: !16802, file: !2539, line: 1157, type: !2434)
!16809 = !DILocalVariable(name: "thread_b", scope: !16802, file: !2539, line: 1157, type: !2434)
!16810 = !DILocalVariable(name: "cmp", scope: !16802, file: !2539, line: 1158, type: !331)
!16811 = !DILocation(line: 0, scope: !16802)
!16812 = !DILocation(line: 1160, column: 13, scope: !16802)
!16813 = !DILocation(line: 1161, column: 13, scope: !16802)
!16814 = !DILocation(line: 1163, column: 8, scope: !16802)
!16815 = !DILocation(line: 1165, column: 10, scope: !16816)
!16816 = distinct !DILexicalBlock(scope: !16802, file: !2539, line: 1165, column: 6)
!16817 = !DILocation(line: 1165, column: 6, scope: !16802)
!16818 = !DILocation(line: 1167, column: 17, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16816, file: !2539, line: 1167, column: 13)
!16820 = !DILocation(line: 1167, column: 13, scope: !16816)
!16821 = !DILocation(line: 1170, column: 25, scope: !16822)
!16822 = distinct !DILexicalBlock(scope: !16819, file: !2539, line: 1169, column: 9)
!16823 = !DILocation(line: 1170, column: 52, scope: !16822)
!16824 = !DILocation(line: 1170, column: 35, scope: !16822)
!16825 = !DILocation(line: 1170, column: 3, scope: !16822)
!16826 = !DILocation(line: 0, scope: !16816)
!16827 = !DILocation(line: 1173, column: 1, scope: !16802)
!16828 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2539, file: !2539, line: 1175, type: !16829, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16844)
!16829 = !DISubroutineType(types: !16830)
!16830 = !{null, !16831, !2434}
!16831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16832, size: 32)
!16832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16833, line: 37, size: 128, elements: !16834)
!16833 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16834 = !{!16835, !16843}
!16835 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16832, file: !16833, line: 38, baseType: !16836, size: 96)
!16836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !175, line: 83, size: 96, elements: !16837)
!16837 = !{!16838, !16839, !16842}
!16838 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16836, file: !175, line: 84, baseType: !2463, size: 32)
!16839 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16836, file: !175, line: 85, baseType: !16840, size: 32, offset: 32)
!16840 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !175, line: 81, baseType: !16841)
!16841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16803, size: 32)
!16842 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16836, file: !175, line: 86, baseType: !103, size: 32, offset: 64)
!16843 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16832, file: !16833, line: 39, baseType: !103, size: 32, offset: 96)
!16844 = !{!16845, !16846, !16847, !16848, !16857}
!16845 = !DILocalVariable(name: "pq", arg: 1, scope: !16828, file: !2539, line: 1175, type: !16831)
!16846 = !DILocalVariable(name: "thread", arg: 2, scope: !16828, file: !2539, line: 1175, type: !2434)
!16847 = !DILocalVariable(name: "t", scope: !16828, file: !2539, line: 1177, type: !2434)
!16848 = !DILocalVariable(name: "__f", scope: !16849, file: !2539, line: 1190, type: !16852)
!16849 = distinct !DILexicalBlock(scope: !16850, file: !2539, line: 1190, column: 3)
!16850 = distinct !DILexicalBlock(scope: !16851, file: !2539, line: 1189, column: 27)
!16851 = distinct !DILexicalBlock(scope: !16828, file: !2539, line: 1189, column: 6)
!16852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !175, line: 155, size: 96, elements: !16853)
!16853 = !{!16854, !16855, !16856}
!16854 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16852, file: !175, line: 156, baseType: !2534, size: 32)
!16855 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16852, file: !175, line: 157, baseType: !379, size: 32, offset: 32)
!16856 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16852, file: !175, line: 158, baseType: !331, size: 32, offset: 64)
!16857 = !DILocalVariable(name: "n", scope: !16858, file: !2539, line: 1190, type: !2463)
!16858 = distinct !DILexicalBlock(scope: !16859, file: !2539, line: 1190, column: 3)
!16859 = distinct !DILexicalBlock(scope: !16849, file: !2539, line: 1190, column: 3)
!16860 = !DILocation(line: 0, scope: !16828)
!16861 = !DILocation(line: 1181, column: 31, scope: !16828)
!16862 = !DILocation(line: 1181, column: 45, scope: !16828)
!16863 = !DILocation(line: 1181, column: 15, scope: !16828)
!16864 = !DILocation(line: 1181, column: 25, scope: !16828)
!16865 = !DILocation(line: 1189, column: 11, scope: !16851)
!16866 = !DILocation(line: 1189, column: 7, scope: !16851)
!16867 = !DILocation(line: 1189, column: 6, scope: !16828)
!16868 = !DILocation(line: 1190, column: 3, scope: !16849)
!16869 = !DILocation(line: 1190, column: 3, scope: !16858)
!16870 = !DILocation(line: 0, scope: !16858)
!16871 = !DILocation(line: 1190, column: 3, scope: !16859)
!16872 = !DILocation(line: 1193, column: 2, scope: !16850)
!16873 = !DILocation(line: 1191, column: 42, scope: !16874)
!16874 = distinct !DILexicalBlock(scope: !16859, file: !2539, line: 1190, column: 54)
!16875 = !DILocation(line: 1191, column: 12, scope: !16874)
!16876 = !DILocation(line: 1191, column: 22, scope: !16874)
!16877 = distinct !{!16877, !16868, !16878}
!16878 = !DILocation(line: 1192, column: 3, scope: !16849)
!16879 = !DILocation(line: 1195, column: 17, scope: !16828)
!16880 = !DILocation(line: 1195, column: 37, scope: !16828)
!16881 = !DILocation(line: 1195, column: 2, scope: !16828)
!16882 = !DILocation(line: 1196, column: 1, scope: !16828)
!16883 = !DISubprogram(name: "z_rb_foreach_next", scope: !175, file: !175, line: 176, type: !16884, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16884 = !DISubroutineType(types: !16885)
!16885 = !{!2463, !16886, !16887}
!16886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16836, size: 32)
!16887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16852, size: 32)
!16888 = !DISubprogram(name: "rb_insert", scope: !175, file: !175, line: 105, type: !16889, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16889 = !DISubroutineType(types: !16890)
!16890 = !{null, !16886, !2463}
!16891 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2539, file: !2539, line: 1198, type: !16829, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16892)
!16892 = !{!16893, !16894}
!16893 = !DILocalVariable(name: "pq", arg: 1, scope: !16891, file: !2539, line: 1198, type: !16831)
!16894 = !DILocalVariable(name: "thread", arg: 2, scope: !16891, file: !2539, line: 1198, type: !2434)
!16895 = !DILocation(line: 0, scope: !16891)
!16896 = !DILocation(line: 1202, column: 17, scope: !16891)
!16897 = !DILocation(line: 1202, column: 37, scope: !16891)
!16898 = !DILocation(line: 1202, column: 2, scope: !16891)
!16899 = !DILocation(line: 1204, column: 16, scope: !16900)
!16900 = distinct !DILexicalBlock(scope: !16891, file: !2539, line: 1204, column: 6)
!16901 = !DILocation(line: 1204, column: 7, scope: !16900)
!16902 = !DILocation(line: 1204, column: 6, scope: !16891)
!16903 = !DILocation(line: 1205, column: 7, scope: !16904)
!16904 = distinct !DILexicalBlock(scope: !16900, file: !2539, line: 1204, column: 22)
!16905 = !DILocation(line: 1205, column: 22, scope: !16904)
!16906 = !DILocation(line: 1206, column: 2, scope: !16904)
!16907 = !DILocation(line: 1207, column: 1, scope: !16891)
!16908 = !DISubprogram(name: "rb_remove", scope: !175, file: !175, line: 110, type: !16889, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16909 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2539, file: !2539, line: 1209, type: !16910, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16912)
!16910 = !DISubroutineType(types: !16911)
!16911 = !{!2434, !16831}
!16912 = !{!16913, !16914, !16915}
!16913 = !DILocalVariable(name: "pq", arg: 1, scope: !16909, file: !2539, line: 1209, type: !16831)
!16914 = !DILocalVariable(name: "thread", scope: !16909, file: !2539, line: 1211, type: !2434)
!16915 = !DILocalVariable(name: "n", scope: !16909, file: !2539, line: 1212, type: !2463)
!16916 = !DILocation(line: 0, scope: !16909)
!16917 = !DILocation(line: 1212, column: 37, scope: !16909)
!16918 = !DILocation(line: 1212, column: 21, scope: !16909)
!16919 = !DILocation(line: 1217, column: 2, scope: !16909)
!16920 = distinct !DISubprogram(name: "rb_get_min", scope: !175, file: !175, line: 115, type: !16921, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16923)
!16921 = !DISubroutineType(types: !16922)
!16922 = !{!2463, !16886}
!16923 = !{!16924}
!16924 = !DILocalVariable(name: "tree", arg: 1, scope: !16920, file: !175, line: 115, type: !16886)
!16925 = !DILocation(line: 0, scope: !16920)
!16926 = !DILocation(line: 117, column: 9, scope: !16920)
!16927 = !DILocation(line: 117, column: 2, scope: !16920)
!16928 = !DISubprogram(name: "z_rb_get_minmax", scope: !175, file: !175, line: 100, type: !16929, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!16929 = !DISubroutineType(types: !16930)
!16930 = !{!2463, !16886, !185}
!16931 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2539, file: !2539, line: 1246, type: !16932, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16940)
!16932 = !DISubroutineType(types: !16933)
!16933 = !{!2434, !16934}
!16934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16935, size: 32)
!16935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16833, line: 53, size: 2080, elements: !16936)
!16936 = !{!16937, !16939}
!16937 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16935, file: !16833, line: 54, baseType: !16938, size: 2048)
!16938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2470, size: 2048, elements: !1051)
!16939 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16935, file: !16833, line: 55, baseType: !32, size: 32, offset: 2048)
!16940 = !{!16941, !16942, !16943, !16944}
!16941 = !DILocalVariable(name: "pq", arg: 1, scope: !16931, file: !2539, line: 1246, type: !16934)
!16942 = !DILocalVariable(name: "thread", scope: !16931, file: !2539, line: 1252, type: !2434)
!16943 = !DILocalVariable(name: "l", scope: !16931, file: !2539, line: 1253, type: !15743)
!16944 = !DILocalVariable(name: "n", scope: !16931, file: !2539, line: 1254, type: !2535)
!16945 = !DILocation(line: 0, scope: !16931)
!16946 = !DILocation(line: 1248, column: 11, scope: !16947)
!16947 = distinct !DILexicalBlock(scope: !16931, file: !2539, line: 1248, column: 6)
!16948 = !DILocation(line: 1248, column: 7, scope: !16947)
!16949 = !DILocation(line: 1248, column: 6, scope: !16931)
!16950 = !DILocation(line: 1253, column: 31, scope: !16931)
!16951 = !DILocation(line: 1253, column: 20, scope: !16931)
!16952 = !DILocation(line: 1254, column: 19, scope: !16931)
!16953 = !DILocation(line: 1260, column: 1, scope: !16931)
!16954 = distinct !DISubprogram(name: "z_unpend_all", scope: !2539, file: !2539, line: 1262, type: !16955, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16957)
!16955 = !DISubroutineType(types: !16956)
!16956 = !{!103, !2465}
!16957 = !{!16958, !16959, !16960}
!16958 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16954, file: !2539, line: 1262, type: !2465)
!16959 = !DILocalVariable(name: "need_sched", scope: !16954, file: !2539, line: 1264, type: !103)
!16960 = !DILocalVariable(name: "thread", scope: !16954, file: !2539, line: 1265, type: !2434)
!16961 = !DILocation(line: 0, scope: !16954)
!16962 = !DILocation(line: 1267, column: 19, scope: !16954)
!16963 = !DILocation(line: 1267, column: 41, scope: !16954)
!16964 = !DILocation(line: 1267, column: 2, scope: !16954)
!16965 = !DILocation(line: 1268, column: 3, scope: !16966)
!16966 = distinct !DILexicalBlock(scope: !16954, file: !2539, line: 1267, column: 50)
!16967 = !DILocation(line: 1269, column: 3, scope: !16966)
!16968 = distinct !{!16968, !16964, !16969}
!16969 = !DILocation(line: 1271, column: 2, scope: !16954)
!16970 = !DILocation(line: 1273, column: 2, scope: !16954)
!16971 = distinct !DISubprogram(name: "z_waitq_head", scope: !14395, file: !14395, line: 52, type: !16589, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16972)
!16972 = !{!16973}
!16973 = !DILocalVariable(name: "w", arg: 1, scope: !16971, file: !14395, line: 52, type: !2465)
!16974 = !DILocation(line: 0, scope: !16971)
!16975 = !DILocation(line: 54, column: 52, scope: !16971)
!16976 = !DILocation(line: 54, column: 28, scope: !16971)
!16977 = !DILocation(line: 54, column: 9, scope: !16971)
!16978 = !DILocation(line: 54, column: 2, scope: !16971)
!16979 = distinct !DISubprogram(name: "init_ready_q", scope: !2539, file: !2539, line: 1276, type: !16980, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16987)
!16980 = !DISubroutineType(types: !16981)
!16981 = !{null, !16982}
!16982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16983, size: 32)
!16983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !16984)
!16984 = !{!16985, !16986}
!16985 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16983, file: !141, line: 86, baseType: !2434, size: 32)
!16986 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16983, file: !141, line: 90, baseType: !2470, size: 64, offset: 32)
!16987 = !{!16988}
!16988 = !DILocalVariable(name: "rq", arg: 1, scope: !16979, file: !2539, line: 1276, type: !16982)
!16989 = !DILocation(line: 0, scope: !16979)
!16990 = !DILocation(line: 1289, column: 22, scope: !16979)
!16991 = !DILocation(line: 1289, column: 2, scope: !16979)
!16992 = !DILocation(line: 1291, column: 1, scope: !16979)
!16993 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !16994, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !16996)
!16994 = !DISubroutineType(types: !16995)
!16995 = !{null, !15743}
!16996 = !{!16997}
!16997 = !DILocalVariable(name: "list", arg: 1, scope: !16993, file: !146, line: 197, type: !15743)
!16998 = !DILocation(line: 0, scope: !16993)
!16999 = !DILocation(line: 199, column: 8, scope: !16993)
!17000 = !DILocation(line: 199, column: 13, scope: !16993)
!17001 = !DILocation(line: 200, column: 8, scope: !16993)
!17002 = !DILocation(line: 200, column: 13, scope: !16993)
!17003 = !DILocation(line: 201, column: 1, scope: !16993)
!17004 = distinct !DISubprogram(name: "z_sched_init", scope: !2539, file: !2539, line: 1293, type: !334, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !251)
!17005 = !DILocation(line: 1302, column: 2, scope: !17004)
!17006 = !DILocation(line: 1306, column: 2, scope: !17004)
!17007 = !DILocation(line: 1309, column: 1, scope: !17004)
!17008 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2539, file: !2539, line: 1311, type: !17009, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17012)
!17009 = !DISubroutineType(types: !17010)
!17010 = !{!103, !17011}
!17011 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2434)
!17012 = !{!17013}
!17013 = !DILocalVariable(name: "thread", arg: 1, scope: !17008, file: !2539, line: 1311, type: !17011)
!17014 = !DILocation(line: 0, scope: !17008)
!17015 = !DILocation(line: 1313, column: 22, scope: !17008)
!17016 = !DILocation(line: 1313, column: 9, scope: !17008)
!17017 = !DILocation(line: 1313, column: 2, scope: !17008)
!17018 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2539, file: !2539, line: 1325, type: !17019, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17021)
!17019 = !DISubroutineType(types: !17020)
!17020 = !{null, !17011, !103}
!17021 = !{!17022, !17023, !17024}
!17022 = !DILocalVariable(name: "thread", arg: 1, scope: !17018, file: !2539, line: 1325, type: !17011)
!17023 = !DILocalVariable(name: "prio", arg: 2, scope: !17018, file: !2539, line: 1325, type: !103)
!17024 = !DILocalVariable(name: "th", scope: !17018, file: !2539, line: 1334, type: !2434)
!17025 = !DILocation(line: 0, scope: !17018)
!17026 = !DILocation(line: 1336, column: 2, scope: !17018)
!17027 = !DILocation(line: 1337, column: 1, scope: !17018)
!17028 = distinct !DISubprogram(name: "k_can_yield", scope: !2539, file: !2539, line: 1384, type: !8257, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !251)
!17029 = !DILocation(line: 1386, column: 11, scope: !17028)
!17030 = !DILocation(line: 1386, column: 29, scope: !17028)
!17031 = !DILocation(line: 1386, column: 32, scope: !17028)
!17032 = !DILocation(line: 1386, column: 46, scope: !17028)
!17033 = !DILocation(line: 1387, column: 28, scope: !17028)
!17034 = !DILocation(line: 1387, column: 4, scope: !17028)
!17035 = !DILocation(line: 1386, column: 2, scope: !17028)
!17036 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !137, file: !137, line: 989, type: !8257, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !251)
!17037 = !DILocation(line: 993, column: 10, scope: !17036)
!17038 = !DILocation(line: 993, column: 2, scope: !17036)
!17039 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2539, file: !2539, line: 1390, type: !334, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17040)
!17040 = !{!17041}
!17041 = !DILocalVariable(name: "key", scope: !17039, file: !2539, line: 1396, type: !15532)
!17042 = !DILocation(line: 0, scope: !15540, inlinedAt: !17043)
!17043 = distinct !DILocation(line: 1396, column: 25, scope: !17039)
!17044 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !17045)
!17045 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !17043)
!17046 = !DILocation(line: 0, scope: !15549, inlinedAt: !17045)
!17047 = !DILocation(line: 0, scope: !17039)
!17048 = !DILocation(line: 1400, column: 18, scope: !17049)
!17049 = distinct !DILexicalBlock(scope: !17050, file: !2539, line: 1399, column: 36)
!17050 = distinct !DILexicalBlock(scope: !17039, file: !2539, line: 1398, column: 6)
!17051 = !DILocation(line: 0, scope: !15709, inlinedAt: !17052)
!17052 = distinct !DILocation(line: 1400, column: 3, scope: !17049)
!17053 = !DILocation(line: 266, column: 15, scope: !15709, inlinedAt: !17052)
!17054 = !DILocation(line: 266, column: 28, scope: !15709, inlinedAt: !17052)
!17055 = !DILocation(line: 0, scope: !15717, inlinedAt: !17056)
!17056 = distinct !DILocation(line: 268, column: 3, scope: !15721, inlinedAt: !17052)
!17057 = !DILocation(line: 234, column: 2, scope: !15717, inlinedAt: !17056)
!17058 = !DILocation(line: 1402, column: 15, scope: !17039)
!17059 = !DILocation(line: 0, scope: !15726, inlinedAt: !17060)
!17060 = distinct !DILocation(line: 1402, column: 2, scope: !17039)
!17061 = !DILocation(line: 252, column: 15, scope: !15726, inlinedAt: !17060)
!17062 = !DILocation(line: 252, column: 28, scope: !15726, inlinedAt: !17060)
!17063 = !DILocation(line: 0, scope: !15733, inlinedAt: !17064)
!17064 = distinct !DILocation(line: 254, column: 3, scope: !15737, inlinedAt: !17060)
!17065 = !DILocation(line: 0, scope: !15740, inlinedAt: !17066)
!17066 = distinct !DILocation(line: 229, column: 2, scope: !15733, inlinedAt: !17064)
!17067 = !DILocation(line: 188, column: 2, scope: !15750, inlinedAt: !17066)
!17068 = !DILocation(line: 188, column: 2, scope: !15752, inlinedAt: !17066)
!17069 = !DILocation(line: 0, scope: !15750, inlinedAt: !17066)
!17070 = !DILocation(line: 189, column: 7, scope: !15755, inlinedAt: !17066)
!17071 = !DILocation(line: 189, column: 35, scope: !15755, inlinedAt: !17066)
!17072 = !DILocation(line: 189, column: 7, scope: !15756, inlinedAt: !17066)
!17073 = !DILocation(line: 191, column: 21, scope: !15760, inlinedAt: !17066)
!17074 = !DILocation(line: 190, column: 4, scope: !15760, inlinedAt: !17066)
!17075 = !DILocation(line: 192, column: 4, scope: !15760, inlinedAt: !17066)
!17076 = distinct !{!17076, !17067, !17077}
!17077 = !DILocation(line: 194, column: 2, scope: !15750, inlinedAt: !17066)
!17078 = !DILocation(line: 196, column: 37, scope: !15740, inlinedAt: !17066)
!17079 = !DILocation(line: 196, column: 2, scope: !15740, inlinedAt: !17066)
!17080 = !DILocation(line: 197, column: 1, scope: !15740, inlinedAt: !17066)
!17081 = !DILocation(line: 1403, column: 2, scope: !17039)
!17082 = !DILocation(line: 0, scope: !16149, inlinedAt: !17083)
!17083 = distinct !DILocation(line: 1404, column: 2, scope: !17039)
!17084 = !DILocation(line: 196, column: 9, scope: !16149, inlinedAt: !17083)
!17085 = !DILocation(line: 1405, column: 1, scope: !17039)
!17086 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2539, file: !2539, line: 1459, type: !17087, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17089)
!17087 = !DISubroutineType(types: !17088)
!17088 = !{!331, !16329}
!17089 = !{!17090, !17091, !17092}
!17090 = !DILocalVariable(name: "timeout", arg: 1, scope: !17086, file: !2539, line: 1459, type: !16329)
!17091 = !DILocalVariable(name: "ticks", scope: !17086, file: !2539, line: 1461, type: !104)
!17092 = !DILocalVariable(name: "ret", scope: !17086, file: !2539, line: 1480, type: !331)
!17093 = !DILocation(line: 0, scope: !17086)
!17094 = !DILocation(line: 1468, column: 6, scope: !17095)
!17095 = distinct !DILexicalBlock(scope: !17086, file: !2539, line: 1468, column: 6)
!17096 = !DILocation(line: 1468, column: 6, scope: !17086)
!17097 = !DILocation(line: 1469, column: 20, scope: !17098)
!17098 = distinct !DILexicalBlock(scope: !17095, file: !2539, line: 1468, column: 40)
!17099 = !DILocation(line: 1469, column: 3, scope: !17098)
!17100 = !DILocation(line: 1473, column: 3, scope: !17098)
!17101 = !DILocation(line: 1478, column: 10, scope: !17086)
!17102 = !DILocation(line: 1480, column: 16, scope: !17086)
!17103 = !DILocation(line: 1485, column: 1, scope: !17086)
!17104 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3584, file: !3584, line: 310, type: !17105, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17107)
!17105 = !DISubroutineType(types: !17106)
!17106 = !{null, !17011}
!17107 = !{!17108}
!17108 = !DILocalVariable(name: "thread", arg: 1, scope: !17104, file: !3584, line: 310, type: !17011)
!17109 = !DILocation(line: 0, scope: !17104)
!17110 = !DILocation(line: 319, column: 2, scope: !17111)
!17111 = distinct !DILexicalBlock(scope: !17104, file: !3584, line: 319, column: 2)
!17112 = !{i64 2152260320}
!17113 = !DILocation(line: 320, column: 2, scope: !17104)
!17114 = !DILocation(line: 321, column: 1, scope: !17104)
!17115 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2539, file: !2539, line: 1415, type: !17116, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17118)
!17116 = !DISubroutineType(types: !17117)
!17117 = !{!331, !104}
!17118 = !{!17119, !17120, !17121, !17122}
!17119 = !DILocalVariable(name: "ticks", arg: 1, scope: !17115, file: !2539, line: 1415, type: !104)
!17120 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17115, file: !2539, line: 1418, type: !108)
!17121 = !DILocalVariable(name: "timeout", scope: !17115, file: !2539, line: 1430, type: !16329)
!17122 = !DILocalVariable(name: "key", scope: !17115, file: !2539, line: 1437, type: !15532)
!17123 = !DILocation(line: 0, scope: !17115)
!17124 = !DILocation(line: 1425, column: 12, scope: !17125)
!17125 = distinct !DILexicalBlock(scope: !17115, file: !2539, line: 1425, column: 6)
!17126 = !DILocation(line: 1425, column: 6, scope: !17115)
!17127 = !DILocation(line: 1426, column: 3, scope: !17128)
!17128 = distinct !DILexicalBlock(scope: !17125, file: !2539, line: 1425, column: 18)
!17129 = !DILocation(line: 1427, column: 3, scope: !17128)
!17130 = !DILocation(line: 1431, column: 24, scope: !17131)
!17131 = distinct !DILexicalBlock(scope: !17115, file: !2539, line: 1431, column: 6)
!17132 = !DILocation(line: 1431, column: 6, scope: !17115)
!17133 = !DILocation(line: 1432, column: 35, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17131, file: !2539, line: 1431, column: 30)
!17135 = !DILocation(line: 1432, column: 27, scope: !17134)
!17136 = !DILocation(line: 1433, column: 2, scope: !17134)
!17137 = !DILocation(line: 1434, column: 27, scope: !17138)
!17138 = distinct !DILexicalBlock(scope: !17131, file: !2539, line: 1433, column: 9)
!17139 = !DILocation(line: 0, scope: !17131)
!17140 = !DILocation(line: 0, scope: !15540, inlinedAt: !17141)
!17141 = distinct !DILocation(line: 1437, column: 25, scope: !17115)
!17142 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !17143)
!17143 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !17141)
!17144 = !DILocation(line: 0, scope: !15549, inlinedAt: !17143)
!17145 = !DILocation(line: 1440, column: 20, scope: !17115)
!17146 = !DILocation(line: 1440, column: 18, scope: !17115)
!17147 = !DILocation(line: 1442, column: 2, scope: !17115)
!17148 = !DILocation(line: 1443, column: 23, scope: !17115)
!17149 = !DILocation(line: 1443, column: 2, scope: !17115)
!17150 = !DILocation(line: 1444, column: 29, scope: !17115)
!17151 = !DILocation(line: 1444, column: 2, scope: !17115)
!17152 = !DILocation(line: 0, scope: !16149, inlinedAt: !17153)
!17153 = distinct !DILocation(line: 1446, column: 8, scope: !17115)
!17154 = !DILocation(line: 196, column: 9, scope: !16149, inlinedAt: !17153)
!17155 = !DILocation(line: 1450, column: 10, scope: !17115)
!17156 = !DILocation(line: 1450, column: 45, scope: !17115)
!17157 = !DILocation(line: 1450, column: 43, scope: !17115)
!17158 = !DILocation(line: 1451, column: 6, scope: !17115)
!17159 = !DILocation(line: 1457, column: 1, scope: !17115)
!17160 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3570, file: !3570, line: 1103, type: !3571, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17161)
!17161 = !{!17162}
!17162 = !DILocalVariable(name: "t", arg: 1, scope: !17160, file: !3570, line: 1103, type: !109)
!17163 = !DILocation(line: 0, scope: !17160)
!17164 = !DILocation(line: 0, scope: !15587, inlinedAt: !17165)
!17165 = distinct !DILocation(line: 1106, column: 9, scope: !17160)
!17166 = !DILocation(line: 139, column: 13, scope: !17167, inlinedAt: !17165)
!17167 = distinct !DILexicalBlock(scope: !17168, file: !3570, line: 138, column: 10)
!17168 = distinct !DILexicalBlock(scope: !17169, file: !3570, line: 136, column: 7)
!17169 = distinct !DILexicalBlock(scope: !15608, file: !3570, line: 134, column: 17)
!17170 = !DILocation(line: 1106, column: 2, scope: !17160)
!17171 = distinct !DISubprogram(name: "k_yield", scope: !3584, file: !3584, line: 140, type: !334, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !251)
!17172 = !DILocation(line: 148, column: 2, scope: !17173)
!17173 = distinct !DILexicalBlock(scope: !17171, file: !3584, line: 148, column: 2)
!17174 = !{i64 2152259640}
!17175 = !DILocation(line: 149, column: 2, scope: !17171)
!17176 = !DILocation(line: 150, column: 1, scope: !17171)
!17177 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2539, file: !2539, line: 1495, type: !17178, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17180)
!17178 = !DISubroutineType(types: !17179)
!17179 = !{!331, !103}
!17180 = !{!17181, !17182}
!17181 = !DILocalVariable(name: "us", arg: 1, scope: !17177, file: !2539, line: 1495, type: !103)
!17182 = !DILocalVariable(name: "ticks", scope: !17177, file: !2539, line: 1497, type: !331)
!17183 = !DILocation(line: 0, scope: !17177)
!17184 = !DILocation(line: 1501, column: 31, scope: !17177)
!17185 = !DILocation(line: 1501, column: 10, scope: !17177)
!17186 = !DILocation(line: 1502, column: 23, scope: !17177)
!17187 = !DILocation(line: 1502, column: 10, scope: !17177)
!17188 = !DILocation(line: 1506, column: 31, scope: !17177)
!17189 = !DILocation(line: 1506, column: 9, scope: !17177)
!17190 = !DILocation(line: 1506, column: 2, scope: !17177)
!17191 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3570, file: !3570, line: 571, type: !3571, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17192)
!17192 = !{!17193}
!17193 = !DILocalVariable(name: "t", arg: 1, scope: !17191, file: !3570, line: 571, type: !109)
!17194 = !DILocation(line: 0, scope: !17191)
!17195 = !DILocation(line: 0, scope: !15587, inlinedAt: !17196)
!17196 = distinct !DILocation(line: 574, column: 9, scope: !17191)
!17197 = !DILocation(line: 135, column: 5, scope: !17169, inlinedAt: !17196)
!17198 = !DILocation(line: 139, column: 13, scope: !17167, inlinedAt: !17196)
!17199 = !DILocation(line: 574, column: 2, scope: !17191)
!17200 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3570, file: !3570, line: 1187, type: !3571, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17201)
!17201 = !{!17202}
!17202 = !DILocalVariable(name: "t", arg: 1, scope: !17200, file: !3570, line: 1187, type: !109)
!17203 = !DILocation(line: 0, scope: !17200)
!17204 = !DILocation(line: 0, scope: !15587, inlinedAt: !17205)
!17205 = distinct !DILocation(line: 1190, column: 9, scope: !17200)
!17206 = !DILocation(line: 145, column: 13, scope: !17207, inlinedAt: !17205)
!17207 = distinct !DILexicalBlock(scope: !15605, file: !3570, line: 144, column: 10)
!17208 = !DILocation(line: 1190, column: 2, scope: !17200)
!17209 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2539, file: !2539, line: 1517, type: !17105, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17210)
!17210 = !{!17211}
!17211 = !DILocalVariable(name: "thread", arg: 1, scope: !17209, file: !2539, line: 1517, type: !17011)
!17212 = !DILocation(line: 0, scope: !17209)
!17213 = !DILocation(line: 1521, column: 6, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17209, file: !2539, line: 1521, column: 6)
!17215 = !DILocation(line: 1521, column: 6, scope: !17209)
!17216 = !DILocation(line: 1525, column: 6, scope: !17217)
!17217 = distinct !DILexicalBlock(scope: !17209, file: !2539, line: 1525, column: 6)
!17218 = !DILocation(line: 1525, column: 37, scope: !17217)
!17219 = !DILocation(line: 1525, column: 6, scope: !17209)
!17220 = !DILocation(line: 1527, column: 20, scope: !17221)
!17221 = distinct !DILexicalBlock(scope: !17222, file: !2539, line: 1527, column: 7)
!17222 = distinct !DILexicalBlock(scope: !17217, file: !2539, line: 1525, column: 42)
!17223 = !DILocation(line: 1527, column: 33, scope: !17221)
!17224 = !DILocation(line: 1527, column: 7, scope: !17222)
!17225 = !DILocation(line: 1532, column: 2, scope: !17209)
!17226 = !DILocation(line: 1533, column: 2, scope: !17209)
!17227 = !DILocation(line: 1031, column: 3, scope: !16182, inlinedAt: !17228)
!17228 = distinct !DILocation(line: 48, column: 10, scope: !16186, inlinedAt: !17229)
!17229 = distinct !DILocation(line: 1537, column: 7, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17209, file: !2539, line: 1537, column: 6)
!17231 = !DILocation(line: 0, scope: !16182, inlinedAt: !17228)
!17232 = !DILocation(line: 48, column: 9, scope: !16186, inlinedAt: !17229)
!17233 = !DILocation(line: 1537, column: 6, scope: !17209)
!17234 = !DILocation(line: 1538, column: 3, scope: !17235)
!17235 = distinct !DILexicalBlock(scope: !17230, file: !2539, line: 1537, column: 25)
!17236 = !DILocation(line: 1539, column: 2, scope: !17235)
!17237 = !DILocation(line: 1540, column: 1, scope: !17209)
!17238 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14070, file: !14070, line: 101, type: !15658, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17239)
!17239 = !{!17240}
!17240 = !DILocalVariable(name: "thread", arg: 1, scope: !17238, file: !14070, line: 101, type: !2434)
!17241 = !DILocation(line: 0, scope: !17238)
!17242 = !DILocation(line: 103, column: 23, scope: !17238)
!17243 = !DILocation(line: 103, column: 36, scope: !17238)
!17244 = !DILocation(line: 103, column: 55, scope: !17238)
!17245 = !DILocation(line: 103, column: 2, scope: !17238)
!17246 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2539, file: !2539, line: 1567, type: !17247, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17249)
!17247 = !DISubroutineType(types: !17248)
!17248 = !{!17011}
!17249 = !{!17250}
!17250 = !DILocalVariable(name: "ret", scope: !17246, file: !2539, line: 1577, type: !17011)
!17251 = !DILocation(line: 1577, column: 30, scope: !17246)
!17252 = !DILocation(line: 0, scope: !17246)
!17253 = !DILocation(line: 1582, column: 2, scope: !17246)
!17254 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2539, file: !2539, line: 1593, type: !8545, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !251)
!17255 = !DILocation(line: 1031, column: 3, scope: !16182, inlinedAt: !17256)
!17256 = distinct !DILocation(line: 48, column: 10, scope: !16186, inlinedAt: !17257)
!17257 = distinct !DILocation(line: 1595, column: 10, scope: !17254)
!17258 = !DILocation(line: 0, scope: !16182, inlinedAt: !17256)
!17259 = !DILocation(line: 48, column: 9, scope: !16186, inlinedAt: !17257)
!17260 = !DILocation(line: 1595, column: 27, scope: !17254)
!17261 = !DILocation(line: 1595, column: 41, scope: !17254)
!17262 = !DILocation(line: 1595, column: 30, scope: !17254)
!17263 = !DILocation(line: 1595, column: 2, scope: !17254)
!17264 = distinct !DISubprogram(name: "z_thread_abort", scope: !2539, file: !2539, line: 1725, type: !15498, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17265)
!17265 = !{!17266, !17267}
!17266 = !DILocalVariable(name: "thread", arg: 1, scope: !17264, file: !2539, line: 1725, type: !2434)
!17267 = !DILocalVariable(name: "key", scope: !17264, file: !2539, line: 1727, type: !15532)
!17268 = !DILocation(line: 0, scope: !17264)
!17269 = !DILocation(line: 0, scope: !15540, inlinedAt: !17270)
!17270 = distinct !DILocation(line: 1727, column: 25, scope: !17264)
!17271 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !17272)
!17272 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !17270)
!17273 = !DILocation(line: 0, scope: !15549, inlinedAt: !17272)
!17274 = !DILocation(line: 1729, column: 20, scope: !17275)
!17275 = distinct !DILexicalBlock(scope: !17264, file: !2539, line: 1729, column: 6)
!17276 = !DILocation(line: 1729, column: 33, scope: !17275)
!17277 = !DILocation(line: 1729, column: 48, scope: !17275)
!17278 = !DILocation(line: 1729, column: 6, scope: !17264)
!17279 = !DILocation(line: 0, scope: !15567, inlinedAt: !17280)
!17280 = distinct !DILocation(line: 1730, column: 3, scope: !17281)
!17281 = distinct !DILexicalBlock(scope: !17275, file: !2539, line: 1729, column: 54)
!17282 = !DILocation(line: 0, scope: !15575, inlinedAt: !17283)
!17283 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !17280)
!17284 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !17283)
!17285 = !DILocation(line: 1732, column: 3, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17281, file: !2539, line: 1732, column: 3)
!17287 = !{i64 2152995636, i64 2152995652, i64 2152995678, i64 2152995706, i64 2152995726}
!17288 = !DILocation(line: 1733, column: 3, scope: !17281)
!17289 = !DILocation(line: 1736, column: 20, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17264, file: !2539, line: 1736, column: 6)
!17291 = !DILocation(line: 1736, column: 33, scope: !17290)
!17292 = !DILocation(line: 1736, column: 49, scope: !17290)
!17293 = !DILocation(line: 1736, column: 6, scope: !17264)
!17294 = !DILocation(line: 0, scope: !15567, inlinedAt: !17295)
!17295 = distinct !DILocation(line: 1737, column: 3, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17290, file: !2539, line: 1736, column: 56)
!17297 = !DILocation(line: 0, scope: !15575, inlinedAt: !17298)
!17298 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !17295)
!17299 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !17298)
!17300 = !DILocation(line: 1738, column: 3, scope: !17296)
!17301 = !DILocation(line: 1775, column: 2, scope: !17264)
!17302 = !DILocation(line: 1776, column: 16, scope: !17303)
!17303 = distinct !DILexicalBlock(scope: !17264, file: !2539, line: 1776, column: 6)
!17304 = !DILocation(line: 1776, column: 13, scope: !17303)
!17305 = !DILocation(line: 1776, column: 25, scope: !17303)
!17306 = !DILocation(line: 1031, column: 3, scope: !16182, inlinedAt: !17307)
!17307 = distinct !DILocation(line: 48, column: 10, scope: !16186, inlinedAt: !17308)
!17308 = distinct !DILocation(line: 1776, column: 29, scope: !17303)
!17309 = !DILocation(line: 0, scope: !16182, inlinedAt: !17307)
!17310 = !DILocation(line: 48, column: 9, scope: !16186, inlinedAt: !17308)
!17311 = !DILocation(line: 1776, column: 6, scope: !17264)
!17312 = !DILocation(line: 0, scope: !16149, inlinedAt: !17313)
!17313 = distinct !DILocation(line: 1777, column: 3, scope: !17314)
!17314 = distinct !DILexicalBlock(scope: !17303, file: !2539, line: 1776, column: 47)
!17315 = !DILocation(line: 196, column: 9, scope: !16149, inlinedAt: !17313)
!17316 = !DILocation(line: 1779, column: 2, scope: !17314)
!17317 = !DILocation(line: 0, scope: !15567, inlinedAt: !17318)
!17318 = distinct !DILocation(line: 1780, column: 2, scope: !17264)
!17319 = !DILocation(line: 0, scope: !15575, inlinedAt: !17320)
!17320 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !17318)
!17321 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !17320)
!17322 = !DILocation(line: 1781, column: 1, scope: !17264)
!17323 = distinct !DISubprogram(name: "end_thread", scope: !2539, file: !2539, line: 1690, type: !15498, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17324)
!17324 = !{!17325}
!17325 = !DILocalVariable(name: "thread", arg: 1, scope: !17323, file: !2539, line: 1690, type: !2434)
!17326 = !DILocation(line: 0, scope: !17323)
!17327 = !DILocation(line: 1695, column: 20, scope: !17328)
!17328 = distinct !DILexicalBlock(scope: !17323, file: !2539, line: 1695, column: 6)
!17329 = !DILocation(line: 1695, column: 33, scope: !17328)
!17330 = !DILocation(line: 1695, column: 49, scope: !17328)
!17331 = !DILocation(line: 1695, column: 6, scope: !17323)
!17332 = !DILocation(line: 1697, column: 29, scope: !17333)
!17333 = distinct !DILexicalBlock(scope: !17328, file: !2539, line: 1695, column: 56)
!17334 = !DILocation(line: 1698, column: 7, scope: !17335)
!17335 = distinct !DILexicalBlock(scope: !17333, file: !2539, line: 1698, column: 7)
!17336 = !DILocation(line: 1698, column: 7, scope: !17333)
!17337 = !DILocation(line: 0, scope: !15709, inlinedAt: !17338)
!17338 = distinct !DILocation(line: 1699, column: 4, scope: !17339)
!17339 = distinct !DILexicalBlock(scope: !17335, file: !2539, line: 1698, column: 35)
!17340 = !DILocation(line: 266, column: 28, scope: !15709, inlinedAt: !17338)
!17341 = !DILocation(line: 0, scope: !15717, inlinedAt: !17342)
!17342 = distinct !DILocation(line: 268, column: 3, scope: !15721, inlinedAt: !17338)
!17343 = !DILocation(line: 234, column: 2, scope: !15717, inlinedAt: !17342)
!17344 = !DILocation(line: 1700, column: 3, scope: !17339)
!17345 = !DILocation(line: 1701, column: 20, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17333, file: !2539, line: 1701, column: 7)
!17347 = !DILocation(line: 1701, column: 30, scope: !17346)
!17348 = !DILocation(line: 1701, column: 7, scope: !17333)
!17349 = !DILocation(line: 1702, column: 4, scope: !17350)
!17350 = distinct !DILexicalBlock(scope: !17346, file: !2539, line: 1701, column: 39)
!17351 = !DILocation(line: 1703, column: 3, scope: !17350)
!17352 = !DILocation(line: 1704, column: 9, scope: !17333)
!17353 = !DILocation(line: 1705, column: 23, scope: !17333)
!17354 = !DILocation(line: 1705, column: 3, scope: !17333)
!17355 = !DILocation(line: 1706, column: 3, scope: !17333)
!17356 = !DILocation(line: 1722, column: 2, scope: !17333)
!17357 = !DILocation(line: 1723, column: 1, scope: !17323)
!17358 = distinct !DISubprogram(name: "unpend_all", scope: !2539, file: !2539, line: 1674, type: !17359, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17361)
!17359 = !DISubroutineType(types: !17360)
!17360 = !{null, !2465}
!17361 = !{!17362, !17363}
!17362 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17358, file: !2539, line: 1674, type: !2465)
!17363 = !DILocalVariable(name: "thread", scope: !17358, file: !2539, line: 1676, type: !2434)
!17364 = !DILocation(line: 0, scope: !17358)
!17365 = !DILocation(line: 1678, column: 19, scope: !17358)
!17366 = !DILocation(line: 1678, column: 41, scope: !17358)
!17367 = !DILocation(line: 1678, column: 2, scope: !17358)
!17368 = !DILocation(line: 1679, column: 3, scope: !17369)
!17369 = distinct !DILexicalBlock(scope: !17358, file: !2539, line: 1678, column: 50)
!17370 = !DILocation(line: 1680, column: 9, scope: !17369)
!17371 = !DILocalVariable(name: "thread", arg: 1, scope: !17372, file: !14090, line: 65, type: !2434)
!17372 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14090, file: !14090, line: 65, type: !17373, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17375)
!17373 = !DISubroutineType(types: !17374)
!17374 = !{null, !2434, !32}
!17375 = !{!17371, !17376}
!17376 = !DILocalVariable(name: "value", arg: 2, scope: !17372, file: !14090, line: 65, type: !32)
!17377 = !DILocation(line: 0, scope: !17372, inlinedAt: !17378)
!17378 = distinct !DILocation(line: 1681, column: 3, scope: !17369)
!17379 = !DILocation(line: 67, column: 15, scope: !17372, inlinedAt: !17378)
!17380 = !DILocation(line: 67, column: 33, scope: !17372, inlinedAt: !17378)
!17381 = !DILocation(line: 1682, column: 3, scope: !17369)
!17382 = distinct !{!17382, !17367, !17383}
!17383 = !DILocation(line: 1683, column: 2, scope: !17358)
!17384 = !DILocation(line: 1684, column: 1, scope: !17358)
!17385 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2539, file: !2539, line: 1794, type: !17386, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17388)
!17386 = !DISubroutineType(types: !17387)
!17387 = !{!103, !2434, !16329}
!17388 = !{!17389, !17390, !17391, !17392}
!17389 = !DILocalVariable(name: "thread", arg: 1, scope: !17385, file: !2539, line: 1794, type: !2434)
!17390 = !DILocalVariable(name: "timeout", arg: 2, scope: !17385, file: !2539, line: 1794, type: !16329)
!17391 = !DILocalVariable(name: "key", scope: !17385, file: !2539, line: 1796, type: !15532)
!17392 = !DILocalVariable(name: "ret", scope: !17385, file: !2539, line: 1797, type: !103)
!17393 = !DILocation(line: 0, scope: !17385)
!17394 = !DILocation(line: 0, scope: !15540, inlinedAt: !17395)
!17395 = distinct !DILocation(line: 1796, column: 25, scope: !17385)
!17396 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !17397)
!17397 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !17395)
!17398 = !DILocation(line: 0, scope: !15549, inlinedAt: !17397)
!17399 = !DILocation(line: 1801, column: 20, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17385, file: !2539, line: 1801, column: 6)
!17401 = !DILocation(line: 1801, column: 33, scope: !17400)
!17402 = !DILocation(line: 1801, column: 49, scope: !17400)
!17403 = !DILocation(line: 1801, column: 6, scope: !17385)
!17404 = !DILocation(line: 1803, column: 13, scope: !17405)
!17405 = distinct !DILexicalBlock(scope: !17400, file: !2539, line: 1803, column: 13)
!17406 = !DILocation(line: 1803, column: 13, scope: !17400)
!17407 = !DILocation(line: 1805, column: 24, scope: !17408)
!17408 = distinct !DILexicalBlock(scope: !17405, file: !2539, line: 1805, column: 13)
!17409 = !DILocation(line: 1805, column: 21, scope: !17408)
!17410 = !DILocation(line: 1805, column: 34, scope: !17408)
!17411 = !DILocation(line: 1806, column: 20, scope: !17408)
!17412 = !DILocation(line: 1806, column: 44, scope: !17408)
!17413 = !DILocation(line: 1806, column: 30, scope: !17408)
!17414 = !DILocation(line: 1805, column: 13, scope: !17405)
!17415 = !DILocation(line: 1810, column: 42, scope: !17416)
!17416 = distinct !DILexicalBlock(scope: !17408, file: !2539, line: 1808, column: 9)
!17417 = !DILocation(line: 1810, column: 3, scope: !17416)
!17418 = !DILocation(line: 1811, column: 22, scope: !17416)
!17419 = !DILocation(line: 1811, column: 3, scope: !17416)
!17420 = !DILocation(line: 0, scope: !16149, inlinedAt: !17421)
!17421 = distinct !DILocation(line: 1814, column: 9, scope: !17416)
!17422 = !DILocation(line: 196, column: 9, scope: !16149, inlinedAt: !17421)
!17423 = !DILocation(line: 1817, column: 3, scope: !17416)
!17424 = !DILocation(line: 0, scope: !17400)
!17425 = !DILocation(line: 0, scope: !15567, inlinedAt: !17426)
!17426 = distinct !DILocation(line: 1822, column: 2, scope: !17385)
!17427 = !DILocation(line: 0, scope: !15575, inlinedAt: !17428)
!17428 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !17426)
!17429 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !17428)
!17430 = !DILocation(line: 1823, column: 2, scope: !17385)
!17431 = !DILocation(line: 1824, column: 1, scope: !17385)
!17432 = distinct !DISubprogram(name: "z_sched_wake", scope: !2539, file: !2539, line: 1882, type: !17433, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17435)
!17433 = !DISubroutineType(types: !17434)
!17434 = !{!131, !2465, !103, !102}
!17435 = !{!17436, !17437, !17438, !17439, !17440, !17441, !17443}
!17436 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17432, file: !2539, line: 1882, type: !2465)
!17437 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17432, file: !2539, line: 1882, type: !103)
!17438 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17432, file: !2539, line: 1882, type: !102)
!17439 = !DILocalVariable(name: "thread", scope: !17432, file: !2539, line: 1884, type: !2434)
!17440 = !DILocalVariable(name: "ret", scope: !17432, file: !2539, line: 1885, type: !131)
!17441 = !DILocalVariable(name: "__i", scope: !17442, file: !2539, line: 1887, type: !15532)
!17442 = distinct !DILexicalBlock(scope: !17432, file: !2539, line: 1887, column: 2)
!17443 = !DILocalVariable(name: "__key", scope: !17442, file: !2539, line: 1887, type: !15532)
!17444 = !DILocation(line: 0, scope: !17432)
!17445 = !DILocation(line: 0, scope: !17442)
!17446 = !DILocation(line: 0, scope: !15540, inlinedAt: !17447)
!17447 = distinct !DILocation(line: 1887, column: 2, scope: !17442)
!17448 = !DILocation(line: 55, column: 2, scope: !15549, inlinedAt: !17449)
!17449 = distinct !DILocation(line: 145, column: 10, scope: !15540, inlinedAt: !17447)
!17450 = !DILocation(line: 0, scope: !15549, inlinedAt: !17449)
!17451 = !DILocation(line: 1888, column: 12, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17453, file: !2539, line: 1887, column: 26)
!17453 = distinct !DILexicalBlock(scope: !17442, file: !2539, line: 1887, column: 2)
!17454 = !DILocation(line: 1890, column: 14, scope: !17455)
!17455 = distinct !DILexicalBlock(scope: !17452, file: !2539, line: 1890, column: 7)
!17456 = !DILocation(line: 1890, column: 7, scope: !17452)
!17457 = !DILocalVariable(name: "thread", arg: 1, scope: !17458, file: !14839, line: 134, type: !2434)
!17458 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14839, file: !14839, line: 134, type: !17459, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17461)
!17459 = !DISubroutineType(types: !17460)
!17460 = !{null, !2434, !32, !102}
!17461 = !{!17457, !17462, !17463}
!17462 = !DILocalVariable(name: "value", arg: 2, scope: !17458, file: !14839, line: 135, type: !32)
!17463 = !DILocalVariable(name: "data", arg: 3, scope: !17458, file: !14839, line: 136, type: !102)
!17464 = !DILocation(line: 0, scope: !17458, inlinedAt: !17465)
!17465 = distinct !DILocation(line: 1891, column: 4, scope: !17466)
!17466 = distinct !DILexicalBlock(scope: !17455, file: !2539, line: 1890, column: 23)
!17467 = !DILocation(line: 0, scope: !17372, inlinedAt: !17468)
!17468 = distinct !DILocation(line: 138, column: 2, scope: !17458, inlinedAt: !17465)
!17469 = !DILocation(line: 67, column: 15, scope: !17372, inlinedAt: !17468)
!17470 = !DILocation(line: 67, column: 33, scope: !17372, inlinedAt: !17468)
!17471 = !DILocation(line: 139, column: 15, scope: !17458, inlinedAt: !17465)
!17472 = !DILocation(line: 139, column: 25, scope: !17458, inlinedAt: !17465)
!17473 = !DILocation(line: 1894, column: 4, scope: !17466)
!17474 = !DILocation(line: 1895, column: 10, scope: !17466)
!17475 = !DILocation(line: 1896, column: 4, scope: !17466)
!17476 = !DILocation(line: 1898, column: 3, scope: !17466)
!17477 = !DILocation(line: 0, scope: !15567, inlinedAt: !17478)
!17478 = distinct !DILocation(line: 1887, column: 2, scope: !17453)
!17479 = !DILocation(line: 0, scope: !15575, inlinedAt: !17480)
!17480 = distinct !DILocation(line: 215, column: 2, scope: !15567, inlinedAt: !17478)
!17481 = !DILocation(line: 95, column: 2, scope: !15575, inlinedAt: !17480)
!17482 = !DILocation(line: 1901, column: 2, scope: !17432)
!17483 = distinct !DISubprogram(name: "z_sched_wait", scope: !2539, file: !2539, line: 1904, type: !17484, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2431, retainedNodes: !17487)
!17484 = !DISubroutineType(types: !17485)
!17485 = !{!103, !15543, !15532, !2465, !16329, !17486}
!17486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!17487 = !{!17488, !17489, !17490, !17491, !17492, !17493}
!17488 = !DILocalVariable(name: "lock", arg: 1, scope: !17483, file: !2539, line: 1904, type: !15543)
!17489 = !DILocalVariable(name: "key", arg: 2, scope: !17483, file: !2539, line: 1904, type: !15532)
!17490 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17483, file: !2539, line: 1905, type: !2465)
!17491 = !DILocalVariable(name: "timeout", arg: 4, scope: !17483, file: !2539, line: 1905, type: !16329)
!17492 = !DILocalVariable(name: "data", arg: 5, scope: !17483, file: !2539, line: 1905, type: !17486)
!17493 = !DILocalVariable(name: "ret", scope: !17483, file: !2539, line: 1907, type: !103)
!17494 = !DILocation(line: 0, scope: !17483)
!17495 = !DILocation(line: 1907, column: 12, scope: !17483)
!17496 = !DILocation(line: 1909, column: 11, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17483, file: !2539, line: 1909, column: 6)
!17498 = !DILocation(line: 1909, column: 6, scope: !17483)
!17499 = !DILocation(line: 1910, column: 11, scope: !17500)
!17500 = distinct !DILexicalBlock(scope: !17497, file: !2539, line: 1909, column: 20)
!17501 = !DILocation(line: 1910, column: 26, scope: !17500)
!17502 = !DILocation(line: 1910, column: 9, scope: !17500)
!17503 = !DILocation(line: 1911, column: 2, scope: !17500)
!17504 = !DILocation(line: 1912, column: 2, scope: !17483)
!17505 = distinct !DISubprogram(name: "z_data_copy", scope: !17506, file: !17506, line: 22, type: !334, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3309, retainedNodes: !251)
!17506 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17507 = !DILocation(line: 24, column: 2, scope: !17505)
!17508 = !DILocation(line: 27, column: 2, scope: !17505)
!17509 = !DILocation(line: 71, column: 1, scope: !17505)
!17510 = distinct !DISubprogram(name: "z_add_timeout", scope: !2576, file: !2576, line: 88, type: !17511, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17517)
!17511 = !DISubroutineType(types: !17512)
!17512 = !{null, !2549, !2568, !17513}
!17513 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17514)
!17514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17515)
!17515 = !{!17516}
!17516 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17514, file: !105, line: 66, baseType: !104, size: 64)
!17517 = !{!17518, !17519, !17520, !17521, !17527, !17528, !17531, !17534}
!17518 = !DILocalVariable(name: "to", arg: 1, scope: !17510, file: !2576, line: 88, type: !2549)
!17519 = !DILocalVariable(name: "fn", arg: 2, scope: !17510, file: !2576, line: 88, type: !2568)
!17520 = !DILocalVariable(name: "timeout", arg: 3, scope: !17510, file: !2576, line: 89, type: !17513)
!17521 = !DILocalVariable(name: "__i", scope: !17522, file: !2576, line: 102, type: !17523)
!17522 = distinct !DILexicalBlock(scope: !17510, file: !2576, line: 102, column: 2)
!17523 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !17524)
!17524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !17525)
!17525 = !{!17526}
!17526 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17524, file: !250, line: 33, baseType: !103, size: 32)
!17527 = !DILocalVariable(name: "__key", scope: !17522, file: !2576, line: 102, type: !17523)
!17528 = !DILocalVariable(name: "t", scope: !17529, file: !2576, line: 103, type: !2549)
!17529 = distinct !DILexicalBlock(scope: !17530, file: !2576, line: 102, column: 24)
!17530 = distinct !DILexicalBlock(scope: !17522, file: !2576, line: 102, column: 2)
!17531 = !DILocalVariable(name: "ticks", scope: !17532, file: !2576, line: 107, type: !104)
!17532 = distinct !DILexicalBlock(scope: !17533, file: !2576, line: 106, column: 39)
!17533 = distinct !DILexicalBlock(scope: !17529, file: !2576, line: 105, column: 7)
!17534 = !DILocalVariable(name: "next_time", scope: !17535, file: !2576, line: 137, type: !331)
!17535 = distinct !DILexicalBlock(scope: !17536, file: !2576, line: 127, column: 22)
!17536 = distinct !DILexicalBlock(scope: !17529, file: !2576, line: 127, column: 7)
!17537 = !DILocation(line: 0, scope: !17510)
!17538 = !DILocation(line: 91, column: 6, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17510, file: !2576, line: 91, column: 6)
!17540 = !DILocation(line: 91, column: 6, scope: !17510)
!17541 = !DILocation(line: 100, column: 6, scope: !17510)
!17542 = !DILocation(line: 100, column: 9, scope: !17510)
!17543 = !DILocation(line: 0, scope: !17522)
!17544 = !DILocalVariable(name: "l", arg: 1, scope: !17545, file: !250, line: 136, type: !17548)
!17545 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !17546, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17549)
!17546 = !DISubroutineType(types: !17547)
!17547 = !{!17523, !17548}
!17548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 32)
!17549 = !{!17544, !17550}
!17550 = !DILocalVariable(name: "k", scope: !17545, file: !250, line: 139, type: !17523)
!17551 = !DILocation(line: 0, scope: !17545, inlinedAt: !17552)
!17552 = distinct !DILocation(line: 102, column: 2, scope: !17522)
!17553 = !DILocation(line: 55, column: 2, scope: !17554, inlinedAt: !17558)
!17554 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6946, file: !6946, line: 42, type: !6947, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17555)
!17555 = !{!17556, !17557}
!17556 = !DILocalVariable(name: "key", scope: !17554, file: !6946, line: 44, type: !32)
!17557 = !DILocalVariable(name: "tmp", scope: !17554, file: !6946, line: 53, type: !32)
!17558 = distinct !DILocation(line: 145, column: 10, scope: !17545, inlinedAt: !17552)
!17559 = !{i64 1655725}
!17560 = !DILocation(line: 0, scope: !17554, inlinedAt: !17558)
!17561 = !DILocation(line: 106, column: 33, scope: !17533)
!17562 = !DILocation(line: 105, column: 7, scope: !17529)
!17563 = !DILocation(line: 107, column: 50, scope: !17532)
!17564 = !DILocation(line: 107, column: 48, scope: !17532)
!17565 = !DILocation(line: 0, scope: !17532)
!17566 = !DILocation(line: 109, column: 17, scope: !17532)
!17567 = !DILocation(line: 110, column: 3, scope: !17532)
!17568 = !DILocation(line: 111, column: 31, scope: !17569)
!17569 = distinct !DILexicalBlock(scope: !17533, file: !2576, line: 110, column: 10)
!17570 = !DILocation(line: 111, column: 37, scope: !17569)
!17571 = !DILocation(line: 111, column: 35, scope: !17569)
!17572 = !DILocation(line: 0, scope: !17533)
!17573 = !DILocation(line: 109, column: 8, scope: !17532)
!17574 = !DILocation(line: 109, column: 15, scope: !17532)
!17575 = !DILocation(line: 114, column: 12, scope: !17576)
!17576 = distinct !DILexicalBlock(scope: !17529, file: !2576, line: 114, column: 3)
!17577 = !DILocation(line: 0, scope: !17529)
!17578 = !DILocation(line: 114, column: 3, scope: !17576)
!17579 = !DILocation(line: 115, column: 24, scope: !17580)
!17580 = distinct !DILexicalBlock(scope: !17581, file: !2576, line: 115, column: 8)
!17581 = distinct !DILexicalBlock(scope: !17582, file: !2576, line: 114, column: 45)
!17582 = distinct !DILexicalBlock(scope: !17576, file: !2576, line: 114, column: 3)
!17583 = !DILocation(line: 115, column: 11, scope: !17580)
!17584 = !DILocation(line: 115, column: 18, scope: !17580)
!17585 = !DILocation(line: 115, column: 8, scope: !17581)
!17586 = !DILocation(line: 116, column: 15, scope: !17587)
!17587 = distinct !DILexicalBlock(scope: !17580, file: !2576, line: 115, column: 32)
!17588 = !DILocation(line: 117, column: 26, scope: !17587)
!17589 = !DILocation(line: 117, column: 37, scope: !17587)
!17590 = !DILocation(line: 117, column: 5, scope: !17587)
!17591 = !DILocation(line: 123, column: 7, scope: !17529)
!17592 = !DILocation(line: 120, column: 15, scope: !17581)
!17593 = !DILocation(line: 114, column: 36, scope: !17582)
!17594 = distinct !{!17594, !17578, !17595}
!17595 = !DILocation(line: 121, column: 3, scope: !17576)
!17596 = !DILocation(line: 124, column: 41, scope: !17597)
!17597 = distinct !DILexicalBlock(scope: !17598, file: !2576, line: 123, column: 18)
!17598 = distinct !DILexicalBlock(scope: !17529, file: !2576, line: 123, column: 7)
!17599 = !DILocation(line: 124, column: 4, scope: !17597)
!17600 = !DILocation(line: 125, column: 3, scope: !17597)
!17601 = !DILocation(line: 127, column: 13, scope: !17536)
!17602 = !DILocation(line: 127, column: 10, scope: !17536)
!17603 = !DILocation(line: 127, column: 7, scope: !17529)
!17604 = !DILocation(line: 137, column: 24, scope: !17535)
!17605 = !DILocation(line: 0, scope: !17535)
!17606 = !DILocation(line: 139, column: 18, scope: !17607)
!17607 = distinct !DILexicalBlock(scope: !17535, file: !2576, line: 139, column: 8)
!17608 = !DILocation(line: 139, column: 23, scope: !17607)
!17609 = !DILocation(line: 141, column: 5, scope: !17610)
!17610 = distinct !DILexicalBlock(scope: !17607, file: !2576, line: 140, column: 48)
!17611 = !DILocation(line: 142, column: 4, scope: !17610)
!17612 = !DILocalVariable(name: "key", arg: 2, scope: !17613, file: !250, line: 190, type: !17523)
!17613 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !17614, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17616)
!17614 = !DISubroutineType(types: !17615)
!17615 = !{null, !17548, !17523}
!17616 = !{!17617, !17612}
!17617 = !DILocalVariable(name: "l", arg: 1, scope: !17613, file: !250, line: 189, type: !17548)
!17618 = !DILocation(line: 0, scope: !17613, inlinedAt: !17619)
!17619 = distinct !DILocation(line: 102, column: 2, scope: !17530)
!17620 = !DILocalVariable(name: "key", arg: 1, scope: !17621, file: !6946, line: 84, type: !32)
!17621 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6946, file: !6946, line: 84, type: !6957, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17622)
!17622 = !{!17620}
!17623 = !DILocation(line: 0, scope: !17621, inlinedAt: !17624)
!17624 = distinct !DILocation(line: 215, column: 2, scope: !17613, inlinedAt: !17619)
!17625 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !17624)
!17626 = !{i64 1656542}
!17627 = !DILocation(line: 148, column: 1, scope: !17510)
!17628 = distinct !DISubprogram(name: "elapsed", scope: !2576, file: !2576, line: 62, type: !17629, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !251)
!17629 = !DISubroutineType(types: !17630)
!17630 = !{!331}
!17631 = !DILocation(line: 64, column: 9, scope: !17628)
!17632 = !DILocation(line: 64, column: 28, scope: !17628)
!17633 = !DILocation(line: 64, column: 35, scope: !17628)
!17634 = !DILocation(line: 64, column: 2, scope: !17628)
!17635 = distinct !DISubprogram(name: "first", scope: !2576, file: !2576, line: 39, type: !17636, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17638)
!17636 = !DISubroutineType(types: !17637)
!17637 = !{!2549}
!17638 = !{!17639}
!17639 = !DILocalVariable(name: "t", scope: !17635, file: !2576, line: 41, type: !17640)
!17640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 32)
!17641 = !DILocation(line: 41, column: 19, scope: !17635)
!17642 = !DILocation(line: 0, scope: !17635)
!17643 = !DILocation(line: 43, column: 9, scope: !17635)
!17644 = !DILocation(line: 43, column: 2, scope: !17635)
!17645 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !17646, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17648)
!17646 = !DISubroutineType(types: !17647)
!17647 = !{null, !17640, !17640}
!17648 = !{!17649, !17650, !17651}
!17649 = !DILocalVariable(name: "successor", arg: 1, scope: !17645, file: !146, line: 443, type: !17640)
!17650 = !DILocalVariable(name: "node", arg: 2, scope: !17645, file: !146, line: 443, type: !17640)
!17651 = !DILocalVariable(name: "prev", scope: !17645, file: !146, line: 445, type: !17652)
!17652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17640)
!17653 = !DILocation(line: 0, scope: !17645)
!17654 = !DILocation(line: 445, column: 39, scope: !17645)
!17655 = !DILocation(line: 447, column: 8, scope: !17645)
!17656 = !DILocation(line: 447, column: 13, scope: !17645)
!17657 = !DILocation(line: 448, column: 8, scope: !17645)
!17658 = !DILocation(line: 448, column: 13, scope: !17645)
!17659 = !DILocation(line: 449, column: 8, scope: !17645)
!17660 = !DILocation(line: 449, column: 13, scope: !17645)
!17661 = !DILocation(line: 450, column: 18, scope: !17645)
!17662 = !DILocation(line: 451, column: 1, scope: !17645)
!17663 = distinct !DISubprogram(name: "next", scope: !2576, file: !2576, line: 46, type: !17664, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17666)
!17664 = !DISubroutineType(types: !17665)
!17665 = !{!2549, !2549}
!17666 = !{!17667, !17668}
!17667 = !DILocalVariable(name: "t", arg: 1, scope: !17663, file: !2576, line: 46, type: !2549)
!17668 = !DILocalVariable(name: "n", scope: !17663, file: !2576, line: 48, type: !17640)
!17669 = !DILocation(line: 0, scope: !17663)
!17670 = !DILocation(line: 48, column: 58, scope: !17663)
!17671 = !DILocation(line: 48, column: 19, scope: !17663)
!17672 = !DILocation(line: 50, column: 9, scope: !17663)
!17673 = !DILocation(line: 50, column: 2, scope: !17663)
!17674 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !17675, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17678)
!17675 = !DISubroutineType(types: !17676)
!17676 = !{null, !17677, !17640}
!17677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 32)
!17678 = !{!17679, !17680, !17681}
!17679 = !DILocalVariable(name: "list", arg: 1, scope: !17674, file: !146, line: 404, type: !17677)
!17680 = !DILocalVariable(name: "node", arg: 2, scope: !17674, file: !146, line: 404, type: !17640)
!17681 = !DILocalVariable(name: "tail", scope: !17674, file: !146, line: 406, type: !17652)
!17682 = !DILocation(line: 0, scope: !17674)
!17683 = !DILocation(line: 406, column: 34, scope: !17674)
!17684 = !DILocation(line: 408, column: 8, scope: !17674)
!17685 = !DILocation(line: 408, column: 13, scope: !17674)
!17686 = !DILocation(line: 409, column: 8, scope: !17674)
!17687 = !DILocation(line: 409, column: 13, scope: !17674)
!17688 = !DILocation(line: 411, column: 8, scope: !17674)
!17689 = !DILocation(line: 411, column: 13, scope: !17674)
!17690 = !DILocation(line: 412, column: 13, scope: !17674)
!17691 = !DILocation(line: 413, column: 1, scope: !17674)
!17692 = distinct !DISubprogram(name: "next_timeout", scope: !2576, file: !2576, line: 67, type: !17629, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17693)
!17693 = !{!17694, !17695, !17696}
!17694 = !DILocalVariable(name: "to", scope: !17692, file: !2576, line: 69, type: !2549)
!17695 = !DILocalVariable(name: "ticks_elapsed", scope: !17692, file: !2576, line: 70, type: !331)
!17696 = !DILocalVariable(name: "ret", scope: !17692, file: !2576, line: 71, type: !331)
!17697 = !DILocation(line: 69, column: 24, scope: !17692)
!17698 = !DILocation(line: 0, scope: !17692)
!17699 = !DILocation(line: 70, column: 26, scope: !17692)
!17700 = !DILocation(line: 73, column: 10, scope: !17701)
!17701 = distinct !DILexicalBlock(scope: !17692, file: !2576, line: 73, column: 6)
!17702 = !DILocation(line: 73, column: 19, scope: !17701)
!17703 = !DILocation(line: 74, column: 21, scope: !17701)
!17704 = !DILocation(line: 74, column: 30, scope: !17701)
!17705 = !DILocation(line: 74, column: 28, scope: !17701)
!17706 = !DILocation(line: 74, column: 45, scope: !17701)
!17707 = !DILocation(line: 73, column: 6, scope: !17692)
!17708 = !DILocation(line: 77, column: 9, scope: !17709)
!17709 = distinct !DILexicalBlock(scope: !17701, file: !2576, line: 76, column: 9)
!17710 = !DILocation(line: 0, scope: !17701)
!17711 = !DILocation(line: 81, column: 20, scope: !17712)
!17712 = distinct !DILexicalBlock(scope: !17692, file: !2576, line: 81, column: 6)
!17713 = !DILocation(line: 81, column: 6, scope: !17712)
!17714 = !DILocation(line: 81, column: 32, scope: !17712)
!17715 = !DILocation(line: 85, column: 2, scope: !17692)
!17716 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !17717, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17719)
!17717 = !DISubroutineType(types: !17718)
!17718 = !{!17640, !17677, !17640}
!17719 = !{!17720, !17721}
!17720 = !DILocalVariable(name: "list", arg: 1, scope: !17716, file: !146, line: 341, type: !17677)
!17721 = !DILocalVariable(name: "node", arg: 2, scope: !17716, file: !146, line: 342, type: !17640)
!17722 = !DILocation(line: 0, scope: !17716)
!17723 = !DILocation(line: 344, column: 15, scope: !17716)
!17724 = !DILocation(line: 344, column: 9, scope: !17716)
!17725 = !DILocation(line: 344, column: 26, scope: !17716)
!17726 = !DILocation(line: 344, column: 2, scope: !17716)
!17727 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !17717, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17728)
!17728 = !{!17729, !17730}
!17729 = !DILocalVariable(name: "list", arg: 1, scope: !17727, file: !146, line: 325, type: !17677)
!17730 = !DILocalVariable(name: "node", arg: 2, scope: !17727, file: !146, line: 326, type: !17640)
!17731 = !DILocation(line: 0, scope: !17727)
!17732 = !DILocation(line: 328, column: 24, scope: !17727)
!17733 = !DILocation(line: 328, column: 15, scope: !17727)
!17734 = !DILocation(line: 328, column: 9, scope: !17727)
!17735 = !DILocation(line: 328, column: 45, scope: !17727)
!17736 = !DILocation(line: 328, column: 2, scope: !17727)
!17737 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !17738, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17740)
!17738 = !DISubroutineType(types: !17739)
!17739 = !{!17640, !17677}
!17740 = !{!17741}
!17741 = !DILocalVariable(name: "list", arg: 1, scope: !17737, file: !146, line: 294, type: !17677)
!17742 = !DILocation(line: 0, scope: !17737)
!17743 = !DILocation(line: 296, column: 9, scope: !17737)
!17744 = !DILocation(line: 296, column: 2, scope: !17737)
!17745 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !17746, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17748)
!17746 = !DISubroutineType(types: !17747)
!17747 = !{!131, !17677}
!17748 = !{!17749}
!17749 = !DILocalVariable(name: "list", arg: 1, scope: !17745, file: !146, line: 266, type: !17677)
!17750 = !DILocation(line: 0, scope: !17745)
!17751 = !DILocation(line: 268, column: 15, scope: !17745)
!17752 = !DILocation(line: 268, column: 20, scope: !17745)
!17753 = !DILocation(line: 268, column: 2, scope: !17745)
!17754 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2576, file: !2576, line: 150, type: !17755, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17757)
!17755 = !DISubroutineType(types: !17756)
!17756 = !{!103, !2549}
!17757 = !{!17758, !17759, !17760, !17762}
!17758 = !DILocalVariable(name: "to", arg: 1, scope: !17754, file: !2576, line: 150, type: !2549)
!17759 = !DILocalVariable(name: "ret", scope: !17754, file: !2576, line: 152, type: !103)
!17760 = !DILocalVariable(name: "__i", scope: !17761, file: !2576, line: 154, type: !17523)
!17761 = distinct !DILexicalBlock(scope: !17754, file: !2576, line: 154, column: 2)
!17762 = !DILocalVariable(name: "__key", scope: !17761, file: !2576, line: 154, type: !17523)
!17763 = !DILocation(line: 0, scope: !17754)
!17764 = !DILocation(line: 0, scope: !17761)
!17765 = !DILocation(line: 0, scope: !17545, inlinedAt: !17766)
!17766 = distinct !DILocation(line: 154, column: 2, scope: !17761)
!17767 = !DILocation(line: 55, column: 2, scope: !17554, inlinedAt: !17768)
!17768 = distinct !DILocation(line: 145, column: 10, scope: !17545, inlinedAt: !17766)
!17769 = !DILocation(line: 0, scope: !17554, inlinedAt: !17768)
!17770 = !DILocation(line: 155, column: 7, scope: !17771)
!17771 = distinct !DILexicalBlock(scope: !17772, file: !2576, line: 155, column: 7)
!17772 = distinct !DILexicalBlock(scope: !17773, file: !2576, line: 154, column: 24)
!17773 = distinct !DILexicalBlock(scope: !17761, file: !2576, line: 154, column: 2)
!17774 = !DILocation(line: 155, column: 7, scope: !17772)
!17775 = !DILocation(line: 156, column: 4, scope: !17776)
!17776 = distinct !DILexicalBlock(scope: !17771, file: !2576, line: 155, column: 39)
!17777 = !DILocation(line: 158, column: 3, scope: !17776)
!17778 = !DILocation(line: 0, scope: !17613, inlinedAt: !17779)
!17779 = distinct !DILocation(line: 154, column: 2, scope: !17773)
!17780 = !DILocation(line: 0, scope: !17621, inlinedAt: !17781)
!17781 = distinct !DILocation(line: 215, column: 2, scope: !17613, inlinedAt: !17779)
!17782 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !17781)
!17783 = !DILocation(line: 161, column: 2, scope: !17754)
!17784 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !17785, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17789)
!17785 = !DISubroutineType(types: !17786)
!17786 = !{!131, !17787}
!17787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17788, size: 32)
!17788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2553)
!17789 = !{!17790}
!17790 = !DILocalVariable(name: "node", arg: 1, scope: !17784, file: !146, line: 225, type: !17787)
!17791 = !DILocation(line: 0, scope: !17784)
!17792 = !DILocation(line: 227, column: 15, scope: !17784)
!17793 = !DILocation(line: 227, column: 20, scope: !17784)
!17794 = !DILocation(line: 227, column: 2, scope: !17784)
!17795 = distinct !DISubprogram(name: "remove_timeout", scope: !2576, file: !2576, line: 53, type: !2570, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17796)
!17796 = !{!17797}
!17797 = !DILocalVariable(name: "t", arg: 1, scope: !17795, file: !2576, line: 53, type: !2549)
!17798 = !DILocation(line: 0, scope: !17795)
!17799 = !DILocation(line: 55, column: 6, scope: !17800)
!17800 = distinct !DILexicalBlock(scope: !17795, file: !2576, line: 55, column: 6)
!17801 = !DILocation(line: 55, column: 14, scope: !17800)
!17802 = !DILocation(line: 55, column: 6, scope: !17795)
!17803 = !DILocation(line: 56, column: 25, scope: !17804)
!17804 = distinct !DILexicalBlock(scope: !17800, file: !2576, line: 55, column: 23)
!17805 = !DILocation(line: 56, column: 12, scope: !17804)
!17806 = !DILocation(line: 56, column: 19, scope: !17804)
!17807 = !DILocation(line: 57, column: 2, scope: !17804)
!17808 = !DILocation(line: 59, column: 23, scope: !17795)
!17809 = !DILocation(line: 59, column: 2, scope: !17795)
!17810 = !DILocation(line: 60, column: 1, scope: !17795)
!17811 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !17812, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17814)
!17812 = !DISubroutineType(types: !17813)
!17813 = !{null, !17640}
!17814 = !{!17815, !17816, !17817}
!17815 = !DILocalVariable(name: "node", arg: 1, scope: !17811, file: !146, line: 496, type: !17640)
!17816 = !DILocalVariable(name: "prev", scope: !17811, file: !146, line: 498, type: !17652)
!17817 = !DILocalVariable(name: "next", scope: !17811, file: !146, line: 499, type: !17652)
!17818 = !DILocation(line: 0, scope: !17811)
!17819 = !DILocation(line: 498, column: 34, scope: !17811)
!17820 = !DILocation(line: 499, column: 34, scope: !17811)
!17821 = !DILocation(line: 501, column: 8, scope: !17811)
!17822 = !DILocation(line: 501, column: 13, scope: !17811)
!17823 = !DILocation(line: 502, column: 8, scope: !17811)
!17824 = !DILocation(line: 502, column: 13, scope: !17811)
!17825 = !DILocation(line: 503, column: 2, scope: !17811)
!17826 = !DILocation(line: 504, column: 1, scope: !17811)
!17827 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !17812, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17828)
!17828 = !{!17829}
!17829 = !DILocalVariable(name: "node", arg: 1, scope: !17827, file: !146, line: 211, type: !17640)
!17830 = !DILocation(line: 0, scope: !17827)
!17831 = !DILocation(line: 213, column: 8, scope: !17827)
!17832 = !DILocation(line: 213, column: 13, scope: !17827)
!17833 = !DILocation(line: 214, column: 8, scope: !17827)
!17834 = !DILocation(line: 214, column: 13, scope: !17827)
!17835 = !DILocation(line: 215, column: 1, scope: !17827)
!17836 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2576, file: !2576, line: 183, type: !17837, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17841)
!17837 = !DISubroutineType(types: !17838)
!17838 = !{!104, !17839}
!17839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17840, size: 32)
!17840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2550)
!17841 = !{!17842, !17843, !17844, !17846}
!17842 = !DILocalVariable(name: "timeout", arg: 1, scope: !17836, file: !2576, line: 183, type: !17839)
!17843 = !DILocalVariable(name: "ticks", scope: !17836, file: !2576, line: 185, type: !104)
!17844 = !DILocalVariable(name: "__i", scope: !17845, file: !2576, line: 187, type: !17523)
!17845 = distinct !DILexicalBlock(scope: !17836, file: !2576, line: 187, column: 2)
!17846 = !DILocalVariable(name: "__key", scope: !17845, file: !2576, line: 187, type: !17523)
!17847 = !DILocation(line: 0, scope: !17836)
!17848 = !DILocation(line: 0, scope: !17845)
!17849 = !DILocation(line: 0, scope: !17545, inlinedAt: !17850)
!17850 = distinct !DILocation(line: 187, column: 2, scope: !17845)
!17851 = !DILocation(line: 55, column: 2, scope: !17554, inlinedAt: !17852)
!17852 = distinct !DILocation(line: 145, column: 10, scope: !17545, inlinedAt: !17850)
!17853 = !DILocation(line: 0, scope: !17554, inlinedAt: !17852)
!17854 = !DILocation(line: 188, column: 11, scope: !17855)
!17855 = distinct !DILexicalBlock(scope: !17856, file: !2576, line: 187, column: 24)
!17856 = distinct !DILexicalBlock(scope: !17845, file: !2576, line: 187, column: 2)
!17857 = !DILocation(line: 0, scope: !17613, inlinedAt: !17858)
!17858 = distinct !DILocation(line: 187, column: 2, scope: !17856)
!17859 = !DILocation(line: 0, scope: !17621, inlinedAt: !17860)
!17860 = distinct !DILocation(line: 215, column: 2, scope: !17613, inlinedAt: !17858)
!17861 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !17860)
!17862 = !DILocation(line: 191, column: 2, scope: !17836)
!17863 = distinct !DISubprogram(name: "timeout_rem", scope: !2576, file: !2576, line: 165, type: !17837, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17864)
!17864 = !{!17865, !17866, !17867}
!17865 = !DILocalVariable(name: "timeout", arg: 1, scope: !17863, file: !2576, line: 165, type: !17839)
!17866 = !DILocalVariable(name: "ticks", scope: !17863, file: !2576, line: 167, type: !104)
!17867 = !DILocalVariable(name: "t", scope: !17868, file: !2576, line: 173, type: !2549)
!17868 = distinct !DILexicalBlock(scope: !17863, file: !2576, line: 173, column: 2)
!17869 = !DILocation(line: 0, scope: !17863)
!17870 = !DILocation(line: 169, column: 6, scope: !17871)
!17871 = distinct !DILexicalBlock(scope: !17863, file: !2576, line: 169, column: 6)
!17872 = !DILocation(line: 169, column: 6, scope: !17863)
!17873 = !DILocation(line: 173, column: 28, scope: !17868)
!17874 = !DILocation(line: 0, scope: !17868)
!17875 = !DILocation(line: 173, column: 39, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17868, file: !2576, line: 173, column: 2)
!17877 = !DILocation(line: 173, column: 2, scope: !17868)
!17878 = !DILocation(line: 174, column: 15, scope: !17879)
!17879 = distinct !DILexicalBlock(scope: !17876, file: !2576, line: 173, column: 61)
!17880 = !DILocation(line: 174, column: 9, scope: !17879)
!17881 = !DILocation(line: 175, column: 15, scope: !17882)
!17882 = distinct !DILexicalBlock(scope: !17879, file: !2576, line: 175, column: 7)
!17883 = !DILocation(line: 175, column: 7, scope: !17879)
!17884 = !DILocation(line: 173, column: 52, scope: !17876)
!17885 = distinct !{!17885, !17877, !17886}
!17886 = !DILocation(line: 178, column: 2, scope: !17868)
!17887 = !DILocation(line: 180, column: 17, scope: !17863)
!17888 = !DILocation(line: 180, column: 15, scope: !17863)
!17889 = !DILocation(line: 180, column: 2, scope: !17863)
!17890 = !DILocation(line: 181, column: 1, scope: !17863)
!17891 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14463, file: !14463, line: 35, type: !17892, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17894)
!17892 = !DISubroutineType(types: !17893)
!17893 = !{!131, !17839}
!17894 = !{!17895}
!17895 = !DILocalVariable(name: "to", arg: 1, scope: !17891, file: !14463, line: 35, type: !17839)
!17896 = !DILocation(line: 0, scope: !17891)
!17897 = !DILocation(line: 37, column: 35, scope: !17891)
!17898 = !DILocation(line: 37, column: 10, scope: !17891)
!17899 = !DILocation(line: 37, column: 9, scope: !17891)
!17900 = !DILocation(line: 37, column: 2, scope: !17891)
!17901 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2576, file: !2576, line: 194, type: !17837, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17902)
!17902 = !{!17903, !17904, !17905, !17907}
!17903 = !DILocalVariable(name: "timeout", arg: 1, scope: !17901, file: !2576, line: 194, type: !17839)
!17904 = !DILocalVariable(name: "ticks", scope: !17901, file: !2576, line: 196, type: !104)
!17905 = !DILocalVariable(name: "__i", scope: !17906, file: !2576, line: 198, type: !17523)
!17906 = distinct !DILexicalBlock(scope: !17901, file: !2576, line: 198, column: 2)
!17907 = !DILocalVariable(name: "__key", scope: !17906, file: !2576, line: 198, type: !17523)
!17908 = !DILocation(line: 0, scope: !17901)
!17909 = !DILocation(line: 0, scope: !17906)
!17910 = !DILocation(line: 0, scope: !17545, inlinedAt: !17911)
!17911 = distinct !DILocation(line: 198, column: 2, scope: !17906)
!17912 = !DILocation(line: 55, column: 2, scope: !17554, inlinedAt: !17913)
!17913 = distinct !DILocation(line: 145, column: 10, scope: !17545, inlinedAt: !17911)
!17914 = !DILocation(line: 0, scope: !17554, inlinedAt: !17913)
!17915 = !DILocation(line: 199, column: 11, scope: !17916)
!17916 = distinct !DILexicalBlock(scope: !17917, file: !2576, line: 198, column: 24)
!17917 = distinct !DILexicalBlock(scope: !17906, file: !2576, line: 198, column: 2)
!17918 = !DILocation(line: 199, column: 23, scope: !17916)
!17919 = !DILocation(line: 0, scope: !17613, inlinedAt: !17920)
!17920 = distinct !DILocation(line: 198, column: 2, scope: !17917)
!17921 = !DILocation(line: 0, scope: !17621, inlinedAt: !17922)
!17922 = distinct !DILocation(line: 215, column: 2, scope: !17613, inlinedAt: !17920)
!17923 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !17922)
!17924 = !DILocation(line: 199, column: 21, scope: !17916)
!17925 = !DILocation(line: 202, column: 2, scope: !17901)
!17926 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2576, file: !2576, line: 205, type: !17629, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17927)
!17927 = !{!17928, !17929, !17931}
!17928 = !DILocalVariable(name: "ret", scope: !17926, file: !2576, line: 207, type: !331)
!17929 = !DILocalVariable(name: "__i", scope: !17930, file: !2576, line: 209, type: !17523)
!17930 = distinct !DILexicalBlock(scope: !17926, file: !2576, line: 209, column: 2)
!17931 = !DILocalVariable(name: "__key", scope: !17930, file: !2576, line: 209, type: !17523)
!17932 = !DILocation(line: 0, scope: !17926)
!17933 = !DILocation(line: 0, scope: !17930)
!17934 = !DILocation(line: 0, scope: !17545, inlinedAt: !17935)
!17935 = distinct !DILocation(line: 209, column: 2, scope: !17930)
!17936 = !DILocation(line: 55, column: 2, scope: !17554, inlinedAt: !17937)
!17937 = distinct !DILocation(line: 145, column: 10, scope: !17545, inlinedAt: !17935)
!17938 = !DILocation(line: 0, scope: !17554, inlinedAt: !17937)
!17939 = !DILocation(line: 210, column: 9, scope: !17940)
!17940 = distinct !DILexicalBlock(scope: !17941, file: !2576, line: 209, column: 24)
!17941 = distinct !DILexicalBlock(scope: !17930, file: !2576, line: 209, column: 2)
!17942 = !DILocation(line: 0, scope: !17613, inlinedAt: !17943)
!17943 = distinct !DILocation(line: 209, column: 2, scope: !17941)
!17944 = !DILocation(line: 0, scope: !17621, inlinedAt: !17945)
!17945 = distinct !DILocation(line: 215, column: 2, scope: !17613, inlinedAt: !17943)
!17946 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !17945)
!17947 = !DILocation(line: 212, column: 2, scope: !17926)
!17948 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2576, file: !2576, line: 215, type: !11847, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17949)
!17949 = !{!17950, !17951, !17952, !17954, !17955, !17958, !17959}
!17950 = !DILocalVariable(name: "ticks", arg: 1, scope: !17948, file: !2576, line: 215, type: !331)
!17951 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17948, file: !2576, line: 215, type: !131)
!17952 = !DILocalVariable(name: "__i", scope: !17953, file: !2576, line: 217, type: !17523)
!17953 = distinct !DILexicalBlock(scope: !17948, file: !2576, line: 217, column: 2)
!17954 = !DILocalVariable(name: "__key", scope: !17953, file: !2576, line: 217, type: !17523)
!17955 = !DILocalVariable(name: "next_to", scope: !17956, file: !2576, line: 218, type: !103)
!17956 = distinct !DILexicalBlock(scope: !17957, file: !2576, line: 217, column: 24)
!17957 = distinct !DILexicalBlock(scope: !17953, file: !2576, line: 217, column: 2)
!17958 = !DILocalVariable(name: "sooner", scope: !17956, file: !2576, line: 219, type: !131)
!17959 = !DILocalVariable(name: "imminent", scope: !17956, file: !2576, line: 221, type: !131)
!17960 = !DILocation(line: 0, scope: !17948)
!17961 = !DILocation(line: 0, scope: !17953)
!17962 = !DILocation(line: 0, scope: !17545, inlinedAt: !17963)
!17963 = distinct !DILocation(line: 217, column: 2, scope: !17953)
!17964 = !DILocation(line: 55, column: 2, scope: !17554, inlinedAt: !17965)
!17965 = distinct !DILocation(line: 145, column: 10, scope: !17545, inlinedAt: !17963)
!17966 = !DILocation(line: 0, scope: !17554, inlinedAt: !17965)
!17967 = !DILocation(line: 218, column: 17, scope: !17956)
!17968 = !DILocation(line: 0, scope: !17956)
!17969 = !DILocation(line: 221, column: 27, scope: !17956)
!17970 = !DILocation(line: 233, column: 17, scope: !17971)
!17971 = distinct !DILexicalBlock(scope: !17956, file: !2576, line: 233, column: 7)
!17972 = !DILocation(line: 234, column: 26, scope: !17973)
!17973 = distinct !DILexicalBlock(scope: !17971, file: !2576, line: 233, column: 56)
!17974 = !DILocation(line: 234, column: 4, scope: !17973)
!17975 = !DILocation(line: 235, column: 3, scope: !17973)
!17976 = !DILocation(line: 0, scope: !17613, inlinedAt: !17977)
!17977 = distinct !DILocation(line: 217, column: 2, scope: !17957)
!17978 = !DILocation(line: 0, scope: !17621, inlinedAt: !17979)
!17979 = distinct !DILocation(line: 215, column: 2, scope: !17613, inlinedAt: !17977)
!17980 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !17979)
!17981 = !DILocation(line: 237, column: 1, scope: !17948)
!17982 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2576, file: !2576, line: 239, type: !17983, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !17985)
!17983 = !DISubroutineType(types: !17984)
!17984 = !{null, !331}
!17985 = !{!17986, !17987, !17988, !17990}
!17986 = !DILocalVariable(name: "ticks", arg: 1, scope: !17982, file: !2576, line: 239, type: !331)
!17987 = !DILocalVariable(name: "key", scope: !17982, file: !2576, line: 245, type: !17523)
!17988 = !DILocalVariable(name: "t", scope: !17989, file: !2576, line: 262, type: !2549)
!17989 = distinct !DILexicalBlock(scope: !17982, file: !2576, line: 261, column: 67)
!17990 = !DILocalVariable(name: "dt", scope: !17989, file: !2576, line: 263, type: !103)
!17991 = !DILocation(line: 0, scope: !17982)
!17992 = !DILocation(line: 242, column: 2, scope: !17982)
!17993 = !DILocation(line: 0, scope: !17545, inlinedAt: !17994)
!17994 = distinct !DILocation(line: 245, column: 25, scope: !17982)
!17995 = !DILocation(line: 55, column: 2, scope: !17554, inlinedAt: !17996)
!17996 = distinct !DILocation(line: 145, column: 10, scope: !17545, inlinedAt: !17994)
!17997 = !DILocation(line: 0, scope: !17554, inlinedAt: !17996)
!17998 = !DILocation(line: 261, column: 9, scope: !17982)
!17999 = !DILocation(line: 261, column: 17, scope: !17982)
!18000 = !DILocation(line: 261, column: 25, scope: !17982)
!18001 = !DILocation(line: 261, column: 37, scope: !17982)
!18002 = !DILocation(line: 261, column: 47, scope: !17982)
!18003 = !DILocation(line: 261, column: 44, scope: !17982)
!18004 = !DILocation(line: 261, column: 2, scope: !17982)
!18005 = !DILocation(line: 0, scope: !17989)
!18006 = !DILocation(line: 263, column: 12, scope: !17989)
!18007 = !DILocation(line: 265, column: 16, scope: !17989)
!18008 = !DILocation(line: 265, column: 13, scope: !17989)
!18009 = !DILocation(line: 266, column: 13, scope: !17989)
!18010 = !DILocation(line: 267, column: 3, scope: !17989)
!18011 = !DILocation(line: 0, scope: !17613, inlinedAt: !18012)
!18012 = distinct !DILocation(line: 269, column: 3, scope: !17989)
!18013 = !DILocation(line: 0, scope: !17621, inlinedAt: !18014)
!18014 = distinct !DILocation(line: 215, column: 2, scope: !17613, inlinedAt: !18012)
!18015 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !18014)
!18016 = !DILocation(line: 270, column: 6, scope: !17989)
!18017 = !DILocation(line: 270, column: 3, scope: !17989)
!18018 = !DILocation(line: 0, scope: !17545, inlinedAt: !18019)
!18019 = distinct !DILocation(line: 271, column: 9, scope: !17989)
!18020 = !DILocation(line: 55, column: 2, scope: !17554, inlinedAt: !18021)
!18021 = distinct !DILocation(line: 145, column: 10, scope: !17545, inlinedAt: !18019)
!18022 = !DILocation(line: 0, scope: !17554, inlinedAt: !18021)
!18023 = !DILocation(line: 272, column: 22, scope: !17989)
!18024 = distinct !{!18024, !18004, !18025}
!18025 = !DILocation(line: 273, column: 2, scope: !17982)
!18026 = !DILocation(line: 276, column: 19, scope: !18027)
!18027 = distinct !DILexicalBlock(scope: !18028, file: !2576, line: 275, column: 23)
!18028 = distinct !DILexicalBlock(scope: !17982, file: !2576, line: 275, column: 6)
!18029 = !DILocation(line: 277, column: 2, scope: !18027)
!18030 = !DILocation(line: 279, column: 15, scope: !17982)
!18031 = !DILocation(line: 279, column: 12, scope: !17982)
!18032 = !DILocation(line: 280, column: 21, scope: !17982)
!18033 = !DILocation(line: 282, column: 24, scope: !17982)
!18034 = !DILocation(line: 282, column: 2, scope: !17982)
!18035 = !DILocation(line: 0, scope: !17613, inlinedAt: !18036)
!18036 = distinct !DILocation(line: 284, column: 2, scope: !17982)
!18037 = !DILocation(line: 0, scope: !17621, inlinedAt: !18038)
!18038 = distinct !DILocation(line: 215, column: 2, scope: !17613, inlinedAt: !18036)
!18039 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !18038)
!18040 = !DILocation(line: 285, column: 1, scope: !17982)
!18041 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2576, file: !2576, line: 287, type: !3578, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !18042)
!18042 = !{!18043, !18044, !18046}
!18043 = !DILocalVariable(name: "t", scope: !18041, file: !2576, line: 289, type: !109)
!18044 = !DILocalVariable(name: "__i", scope: !18045, file: !2576, line: 291, type: !17523)
!18045 = distinct !DILexicalBlock(scope: !18041, file: !2576, line: 291, column: 2)
!18046 = !DILocalVariable(name: "__key", scope: !18045, file: !2576, line: 291, type: !17523)
!18047 = !DILocation(line: 0, scope: !18041)
!18048 = !DILocation(line: 0, scope: !18045)
!18049 = !DILocation(line: 0, scope: !17545, inlinedAt: !18050)
!18050 = distinct !DILocation(line: 291, column: 2, scope: !18045)
!18051 = !DILocation(line: 55, column: 2, scope: !17554, inlinedAt: !18052)
!18052 = distinct !DILocation(line: 145, column: 10, scope: !17545, inlinedAt: !18050)
!18053 = !DILocation(line: 0, scope: !17554, inlinedAt: !18052)
!18054 = !DILocation(line: 292, column: 7, scope: !18055)
!18055 = distinct !DILexicalBlock(scope: !18056, file: !2576, line: 291, column: 24)
!18056 = distinct !DILexicalBlock(scope: !18045, file: !2576, line: 291, column: 2)
!18057 = !DILocation(line: 292, column: 19, scope: !18055)
!18058 = !DILocation(line: 0, scope: !17613, inlinedAt: !18059)
!18059 = distinct !DILocation(line: 291, column: 2, scope: !18056)
!18060 = !DILocation(line: 0, scope: !17621, inlinedAt: !18061)
!18061 = distinct !DILocation(line: 215, column: 2, scope: !17613, inlinedAt: !18059)
!18062 = !DILocation(line: 95, column: 2, scope: !17621, inlinedAt: !18061)
!18063 = !DILocation(line: 292, column: 17, scope: !18055)
!18064 = !DILocation(line: 294, column: 2, scope: !18041)
!18065 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2576, file: !2576, line: 297, type: !3564, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !251)
!18066 = !DILocation(line: 300, column: 19, scope: !18065)
!18067 = !DILocation(line: 300, column: 9, scope: !18065)
!18068 = !DILocation(line: 300, column: 2, scope: !18065)
!18069 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2576, file: !2576, line: 306, type: !3578, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !251)
!18070 = !DILocation(line: 308, column: 9, scope: !18069)
!18071 = !DILocation(line: 308, column: 2, scope: !18069)
!18072 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2576, file: !2576, line: 319, type: !6970, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !18073)
!18073 = !{!18074, !18075, !18076, !18077}
!18074 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18072, file: !2576, line: 319, type: !108)
!18075 = !DILocalVariable(name: "start_cycles", scope: !18072, file: !2576, line: 328, type: !108)
!18076 = !DILocalVariable(name: "cycles_to_wait", scope: !18072, file: !2576, line: 331, type: !108)
!18077 = !DILocalVariable(name: "current_cycles", scope: !18078, file: !2576, line: 338, type: !108)
!18078 = distinct !DILexicalBlock(scope: !18079, file: !2576, line: 337, column: 11)
!18079 = distinct !DILexicalBlock(scope: !18080, file: !2576, line: 337, column: 2)
!18080 = distinct !DILexicalBlock(scope: !18072, file: !2576, line: 337, column: 2)
!18081 = !DILocation(line: 0, scope: !18072)
!18082 = !DILocation(line: 322, column: 19, scope: !18083)
!18083 = distinct !DILexicalBlock(scope: !18072, file: !2576, line: 322, column: 6)
!18084 = !DILocation(line: 322, column: 6, scope: !18072)
!18085 = !DILocation(line: 328, column: 26, scope: !18072)
!18086 = !DILocation(line: 333, column: 43, scope: !18072)
!18087 = !DILocation(line: 337, column: 2, scope: !18072)
!18088 = !DILocation(line: 338, column: 29, scope: !18078)
!18089 = !DILocation(line: 0, scope: !18078)
!18090 = !DILocation(line: 341, column: 23, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18078, file: !2576, line: 341, column: 7)
!18092 = !DILocation(line: 341, column: 39, scope: !18091)
!18093 = !DILocation(line: 349, column: 1, scope: !18072)
!18094 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !137, file: !137, line: 1675, type: !3564, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !251)
!18095 = !DILocation(line: 1677, column: 9, scope: !18094)
!18096 = !DILocation(line: 1677, column: 2, scope: !18094)
!18097 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18098, file: !18098, line: 24, type: !3564, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !251)
!18098 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18099 = !DILocation(line: 26, column: 9, scope: !18097)
!18100 = !DILocation(line: 26, column: 2, scope: !18097)
!18101 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2576, file: !2576, line: 364, type: !18102, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !18104)
!18102 = !DISubroutineType(types: !18103)
!18103 = !{!109, !17513}
!18104 = !{!18105, !18106}
!18105 = !DILocalVariable(name: "timeout", arg: 1, scope: !18101, file: !2576, line: 364, type: !17513)
!18106 = !DILocalVariable(name: "dt", scope: !18101, file: !2576, line: 366, type: !104)
!18107 = !DILocation(line: 0, scope: !18101)
!18108 = !DILocation(line: 368, column: 6, scope: !18101)
!18109 = !DILocation(line: 371, column: 10, scope: !18110)
!18110 = distinct !DILexicalBlock(scope: !18111, file: !2576, line: 370, column: 47)
!18111 = distinct !DILexicalBlock(scope: !18112, file: !2576, line: 370, column: 13)
!18112 = distinct !DILexicalBlock(scope: !18101, file: !2576, line: 368, column: 6)
!18113 = !DILocation(line: 371, column: 3, scope: !18110)
!18114 = !DILocation(line: 376, column: 58, scope: !18115)
!18115 = distinct !DILexicalBlock(scope: !18116, file: !2576, line: 376, column: 7)
!18116 = distinct !DILexicalBlock(scope: !18111, file: !2576, line: 372, column: 9)
!18117 = !DILocation(line: 376, column: 7, scope: !18116)
!18118 = !DILocation(line: 376, column: 43, scope: !18115)
!18119 = !DILocation(line: 377, column: 4, scope: !18120)
!18120 = distinct !DILexicalBlock(scope: !18115, file: !2576, line: 376, column: 64)
!18121 = !DILocation(line: 379, column: 10, scope: !18116)
!18122 = !DILocation(line: 379, column: 33, scope: !18116)
!18123 = !DILocation(line: 379, column: 31, scope: !18116)
!18124 = !DILocation(line: 379, column: 3, scope: !18116)
!18125 = !DILocation(line: 0, scope: !18112)
!18126 = !DILocation(line: 381, column: 1, scope: !18101)
!18127 = distinct !DISubprogram(name: "k_free", scope: !2590, file: !2590, line: 43, type: !7218, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18128)
!18128 = !{!18129, !18130}
!18129 = !DILocalVariable(name: "ptr", arg: 1, scope: !18127, file: !2590, line: 43, type: !102)
!18130 = !DILocalVariable(name: "heap_ref", scope: !18127, file: !2590, line: 45, type: !18131)
!18131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18132, size: 32)
!18132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!18133 = !DILocation(line: 0, scope: !18127)
!18134 = !DILocation(line: 47, column: 10, scope: !18135)
!18135 = distinct !DILexicalBlock(scope: !18127, file: !2590, line: 47, column: 6)
!18136 = !DILocation(line: 47, column: 6, scope: !18127)
!18137 = !DILocation(line: 49, column: 9, scope: !18138)
!18138 = distinct !DILexicalBlock(scope: !18135, file: !2590, line: 47, column: 19)
!18139 = !DILocation(line: 53, column: 15, scope: !18138)
!18140 = !DILocation(line: 53, column: 3, scope: !18138)
!18141 = !DILocation(line: 56, column: 2, scope: !18138)
!18142 = !DILocation(line: 57, column: 1, scope: !18127)
!18143 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2590, file: !2590, line: 64, type: !18144, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18146)
!18144 = !DISubroutineType(types: !18145)
!18145 = !{!102, !132, !132}
!18146 = !{!18147, !18148, !18149}
!18147 = !DILocalVariable(name: "align", arg: 1, scope: !18143, file: !2590, line: 64, type: !132)
!18148 = !DILocalVariable(name: "size", arg: 2, scope: !18143, file: !2590, line: 64, type: !132)
!18149 = !DILocalVariable(name: "ret", scope: !18143, file: !2590, line: 75, type: !102)
!18150 = !DILocation(line: 0, scope: !18143)
!18151 = !DILocation(line: 75, column: 14, scope: !18143)
!18152 = !DILocation(line: 79, column: 2, scope: !18143)
!18153 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2590, file: !2590, line: 12, type: !18154, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18156)
!18154 = !DISubroutineType(types: !18155)
!18155 = !{!102, !18132, !132, !132}
!18156 = !{!18157, !18158, !18159, !18160, !18161, !18162}
!18157 = !DILocalVariable(name: "heap", arg: 1, scope: !18153, file: !2590, line: 12, type: !18132)
!18158 = !DILocalVariable(name: "align", arg: 2, scope: !18153, file: !2590, line: 12, type: !132)
!18159 = !DILocalVariable(name: "size", arg: 3, scope: !18153, file: !2590, line: 12, type: !132)
!18160 = !DILocalVariable(name: "mem", scope: !18153, file: !2590, line: 14, type: !102)
!18161 = !DILocalVariable(name: "heap_ref", scope: !18153, file: !2590, line: 15, type: !18131)
!18162 = !DILocalVariable(name: "__align", scope: !18153, file: !2590, line: 16, type: !132)
!18163 = !DILocation(line: 0, scope: !18153)
!18164 = !DILocation(line: 24, column: 6, scope: !18165)
!18165 = distinct !DILexicalBlock(scope: !18153, file: !2590, line: 24, column: 6)
!18166 = !DILocation(line: 24, column: 6, scope: !18153)
!18167 = !DILocation(line: 27, column: 18, scope: !18153)
!18168 = !DILocation(line: 29, column: 44, scope: !18153)
!18169 = !DILocation(line: 29, column: 8, scope: !18153)
!18170 = !DILocation(line: 30, column: 10, scope: !18171)
!18171 = distinct !DILexicalBlock(scope: !18153, file: !2590, line: 30, column: 6)
!18172 = !DILocation(line: 30, column: 6, scope: !18153)
!18173 = !DILocation(line: 34, column: 13, scope: !18153)
!18174 = !DILocation(line: 35, column: 12, scope: !18153)
!18175 = !DILocation(line: 36, column: 8, scope: !18153)
!18176 = !DILocation(line: 40, column: 2, scope: !18153)
!18177 = !DILocation(line: 41, column: 1, scope: !18153)
!18178 = distinct !DISubprogram(name: "size_add_overflow", scope: !14828, file: !14828, line: 47, type: !14829, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18179)
!18179 = !{!18180, !18181, !18182}
!18180 = !DILocalVariable(name: "a", arg: 1, scope: !18178, file: !14828, line: 47, type: !132)
!18181 = !DILocalVariable(name: "b", arg: 2, scope: !18178, file: !14828, line: 47, type: !132)
!18182 = !DILocalVariable(name: "result", arg: 3, scope: !18178, file: !14828, line: 47, type: !2724)
!18183 = !DILocation(line: 0, scope: !18178)
!18184 = !DILocation(line: 49, column: 9, scope: !18178)
!18185 = !DILocation(line: 49, column: 2, scope: !18178)
!18186 = distinct !DISubprogram(name: "k_malloc", scope: !2590, file: !2590, line: 82, type: !14840, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18187)
!18187 = !{!18188, !18189}
!18188 = !DILocalVariable(name: "size", arg: 1, scope: !18186, file: !2590, line: 82, type: !132)
!18189 = !DILocalVariable(name: "ret", scope: !18186, file: !2590, line: 86, type: !102)
!18190 = !DILocation(line: 0, scope: !18186)
!18191 = !DILocation(line: 86, column: 14, scope: !18186)
!18192 = !DILocation(line: 90, column: 2, scope: !18186)
!18193 = distinct !DISubprogram(name: "k_calloc", scope: !2590, file: !2590, line: 93, type: !18144, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18194)
!18194 = !{!18195, !18196, !18197, !18198}
!18195 = !DILocalVariable(name: "nmemb", arg: 1, scope: !18193, file: !2590, line: 93, type: !132)
!18196 = !DILocalVariable(name: "size", arg: 2, scope: !18193, file: !2590, line: 93, type: !132)
!18197 = !DILocalVariable(name: "ret", scope: !18193, file: !2590, line: 95, type: !102)
!18198 = !DILocalVariable(name: "bounds", scope: !18193, file: !2590, line: 96, type: !132)
!18199 = !DILocation(line: 0, scope: !18193)
!18200 = !DILocation(line: 96, column: 2, scope: !18193)
!18201 = !DILocation(line: 100, column: 6, scope: !18202)
!18202 = distinct !DILexicalBlock(scope: !18193, file: !2590, line: 100, column: 6)
!18203 = !DILocation(line: 100, column: 6, scope: !18193)
!18204 = !DILocation(line: 106, column: 17, scope: !18193)
!18205 = !DILocation(line: 106, column: 8, scope: !18193)
!18206 = !DILocation(line: 107, column: 10, scope: !18207)
!18207 = distinct !DILexicalBlock(scope: !18193, file: !2590, line: 107, column: 6)
!18208 = !DILocation(line: 107, column: 6, scope: !18193)
!18209 = !DILocation(line: 108, column: 9, scope: !18210)
!18210 = distinct !DILexicalBlock(scope: !18207, file: !2590, line: 107, column: 19)
!18211 = !DILocation(line: 109, column: 2, scope: !18210)
!18212 = !DILocation(line: 114, column: 1, scope: !18193)
!18213 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14828, file: !14828, line: 105, type: !14829, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18214)
!18214 = !{!18215, !18216, !18217}
!18215 = !DILocalVariable(name: "a", arg: 1, scope: !18213, file: !14828, line: 105, type: !132)
!18216 = !DILocalVariable(name: "b", arg: 2, scope: !18213, file: !14828, line: 105, type: !132)
!18217 = !DILocalVariable(name: "result", arg: 3, scope: !18213, file: !14828, line: 105, type: !2724)
!18218 = !DILocation(line: 0, scope: !18213)
!18219 = !DILocation(line: 107, column: 9, scope: !18213)
!18220 = !DILocation(line: 107, column: 2, scope: !18213)
!18221 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2590, file: !2590, line: 116, type: !18222, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18294)
!18222 = !DISubroutineType(types: !18223)
!18223 = !{null, !18224}
!18224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18225, size: 32)
!18225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !18226)
!18226 = !{!18227, !18267, !18279, !18280, !18281, !18282, !18288, !18289}
!18227 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !18225, file: !163, line: 247, baseType: !18228, size: 384)
!18228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !18229)
!18229 = !{!18230, !18241, !18243, !18244, !18245, !18254, !18255, !18256}
!18230 = !DIDerivedType(tag: DW_TAG_member, scope: !18228, file: !163, line: 60, baseType: !18231, size: 64)
!18231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18228, file: !163, line: 60, size: 64, elements: !18232)
!18232 = !{!18233, !18235}
!18233 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !18231, file: !163, line: 61, baseType: !18234, size: 64)
!18234 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2605)
!18235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !18231, file: !163, line: 62, baseType: !18236, size: 64)
!18236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !18237)
!18237 = !{!18238}
!18238 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !18236, file: !175, line: 50, baseType: !18239, size: 64)
!18239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18240, size: 64, elements: !180)
!18240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18236, size: 32)
!18241 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !18228, file: !163, line: 68, baseType: !18242, size: 32, offset: 64)
!18242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 32)
!18243 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !18228, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!18244 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !18228, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!18245 = !DIDerivedType(tag: DW_TAG_member, scope: !18228, file: !163, line: 90, baseType: !18246, size: 16, offset: 112)
!18246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18228, file: !163, line: 90, size: 16, elements: !18247)
!18247 = !{!18248, !18253}
!18248 = !DIDerivedType(tag: DW_TAG_member, scope: !18246, file: !163, line: 91, baseType: !18249, size: 16)
!18249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18246, file: !163, line: 91, size: 16, elements: !18250)
!18250 = !{!18251, !18252}
!18251 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !18249, file: !163, line: 96, baseType: !195, size: 8)
!18252 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !18249, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!18253 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !18246, file: !163, line: 100, baseType: !121, size: 16)
!18254 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !18228, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!18255 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !18228, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!18256 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !18228, file: !163, line: 131, baseType: !18257, size: 192, offset: 192)
!18257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !18258)
!18258 = !{!18259, !18260, !18266}
!18259 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !18257, file: !141, line: 245, baseType: !18234, size: 64)
!18260 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !18257, file: !141, line: 246, baseType: !18261, size: 32, offset: 64)
!18261 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !18262)
!18262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18263, size: 32)
!18263 = !DISubroutineType(types: !18264)
!18264 = !{null, !18265}
!18265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18257, size: 32)
!18266 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !18257, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!18267 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !18225, file: !163, line: 250, baseType: !18268, size: 288, offset: 384)
!18268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !18269)
!18269 = !{!18270, !18271, !18272, !18273, !18274, !18275, !18276, !18277, !18278}
!18270 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !18268, file: !214, line: 26, baseType: !108, size: 32)
!18271 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !18268, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!18272 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !18268, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!18273 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !18268, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!18274 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !18268, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!18275 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !18268, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!18276 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !18268, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!18277 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !18268, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!18278 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !18268, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!18279 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !18225, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!18280 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !18225, file: !163, line: 256, baseType: !2600, size: 64, offset: 704)
!18281 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !18225, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!18282 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !18225, file: !163, line: 300, baseType: !18283, size: 96, offset: 800)
!18283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !18284)
!18284 = !{!18285, !18286, !18287}
!18285 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !18283, file: !163, line: 153, baseType: !22, size: 32)
!18286 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !18283, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!18287 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !18283, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!18288 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !18225, file: !163, line: 325, baseType: !18132, size: 32, offset: 896)
!18289 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !18225, file: !163, line: 343, baseType: !18290, size: 64, offset: 928)
!18290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !18291)
!18291 = !{!18292, !18293}
!18292 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !18290, file: !214, line: 63, baseType: !108, size: 32)
!18293 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !18290, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!18294 = !{!18295}
!18295 = !DILocalVariable(name: "thread", arg: 1, scope: !18221, file: !2590, line: 116, type: !18224)
!18296 = !DILocation(line: 0, scope: !18221)
!18297 = !DILocation(line: 118, column: 10, scope: !18221)
!18298 = !DILocation(line: 118, column: 24, scope: !18221)
!18299 = !DILocation(line: 119, column: 1, scope: !18221)
!18300 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2590, file: !2590, line: 124, type: !18144, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !18301)
!18301 = !{!18302, !18303, !18304, !18305}
!18302 = !DILocalVariable(name: "align", arg: 1, scope: !18300, file: !2590, line: 124, type: !132)
!18303 = !DILocalVariable(name: "size", arg: 2, scope: !18300, file: !2590, line: 124, type: !132)
!18304 = !DILocalVariable(name: "ret", scope: !18300, file: !2590, line: 126, type: !102)
!18305 = !DILocalVariable(name: "heap", scope: !18300, file: !2590, line: 127, type: !18132)
!18306 = !DILocation(line: 0, scope: !18300)
!18307 = !DILocation(line: 129, column: 6, scope: !18308)
!18308 = distinct !DILexicalBlock(scope: !18300, file: !2590, line: 129, column: 6)
!18309 = !DILocation(line: 129, column: 6, scope: !18300)
!18310 = !DILocation(line: 132, column: 10, scope: !18311)
!18311 = distinct !DILexicalBlock(scope: !18308, file: !2590, line: 131, column: 9)
!18312 = !DILocation(line: 132, column: 20, scope: !18311)
!18313 = !DILocation(line: 135, column: 11, scope: !18314)
!18314 = distinct !DILexicalBlock(scope: !18300, file: !2590, line: 135, column: 6)
!18315 = !DILocation(line: 135, column: 6, scope: !18300)
!18316 = !DILocation(line: 136, column: 9, scope: !18317)
!18317 = distinct !DILexicalBlock(scope: !18314, file: !2590, line: 135, column: 20)
!18318 = !DILocation(line: 137, column: 2, scope: !18317)
!18319 = !DILocation(line: 0, scope: !18314)
!18320 = !DILocation(line: 141, column: 2, scope: !18300)
!18321 = distinct !DISubprogram(name: "main", scope: !18322, file: !18322, line: 27, type: !334, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3312, retainedNodes: !251)
!18322 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18323 = !DILocation(line: 38, column: 2, scope: !18324, inlinedAt: !18325)
!18324 = distinct !DISubprogram(name: "arch_nop", scope: !18098, file: !18098, line: 36, type: !334, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3312, retainedNodes: !251)
!18325 = distinct !DILocation(line: 31, column: 2, scope: !18321)
!18326 = !{i64 1651636}
!18327 = !DILocation(line: 36, column: 1, scope: !18321)
!18328 = distinct !DISubprogram(name: "boot_banner", scope: !18329, file: !18329, line: 26, type: !334, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3314, retainedNodes: !251)
!18329 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18330 = !DILocation(line: 34, column: 2, scope: !18328)
!18331 = !DILocation(line: 36, column: 1, scope: !18328)
!18332 = distinct !DISubprogram(name: "statics_init", scope: !2644, file: !2644, line: 21, type: !2650, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !18333)
!18333 = !{!18334, !18335}
!18334 = !DILocalVariable(name: "unused", arg: 1, scope: !18332, file: !2644, line: 21, type: !2652)
!18335 = !DILocalVariable(name: "h", scope: !18336, file: !2644, line: 24, type: !18337)
!18336 = distinct !DILexicalBlock(scope: !18332, file: !2644, line: 24, column: 2)
!18337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18338, size: 32)
!18338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !18339)
!18339 = !{!18340, !18346, !18352}
!18340 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18338, file: !137, line: 5074, baseType: !18341, size: 96)
!18341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !18342)
!18342 = !{!18343, !18344, !18345}
!18343 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18341, file: !240, line: 57, baseType: !243, size: 32)
!18344 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18341, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!18345 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18341, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!18346 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18338, file: !137, line: 5075, baseType: !18347, size: 64, offset: 96)
!18347 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !18348)
!18348 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !18349)
!18349 = !{!18350}
!18350 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18348, file: !141, line: 232, baseType: !18351, size: 64)
!18351 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2630)
!18352 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18338, file: !137, line: 5076, baseType: !18353, offset: 160)
!18353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!18354 = !DILocation(line: 0, scope: !18332)
!18355 = !DILocation(line: 0, scope: !18336)
!18356 = !DILocation(line: 24, column: 2, scope: !18336)
!18357 = !DILocation(line: 52, column: 2, scope: !18332)
!18358 = !DILocation(line: 49, column: 27, scope: !18359)
!18359 = distinct !DILexicalBlock(scope: !18360, file: !2644, line: 48, column: 3)
!18360 = distinct !DILexicalBlock(scope: !18361, file: !2644, line: 24, column: 36)
!18361 = distinct !DILexicalBlock(scope: !18336, file: !2644, line: 24, column: 2)
!18362 = !DILocation(line: 49, column: 45, scope: !18359)
!18363 = !DILocation(line: 49, column: 4, scope: !18359)
!18364 = !DILocation(line: 24, column: 2, scope: !18361)
!18365 = !DILocation(line: 24, column: 2, scope: !18366)
!18366 = distinct !DILexicalBlock(scope: !18361, file: !2644, line: 24, column: 2)
!18367 = distinct !{!18367, !18356, !18368}
!18368 = !DILocation(line: 51, column: 2, scope: !18336)
!18369 = distinct !DISubprogram(name: "k_heap_init", scope: !2644, file: !2644, line: 13, type: !18370, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !18372)
!18370 = !DISubroutineType(types: !18371)
!18371 = !{null, !18337, !102, !132}
!18372 = !{!18373, !18374, !18375}
!18373 = !DILocalVariable(name: "h", arg: 1, scope: !18369, file: !2644, line: 13, type: !18337)
!18374 = !DILocalVariable(name: "mem", arg: 2, scope: !18369, file: !2644, line: 13, type: !102)
!18375 = !DILocalVariable(name: "bytes", arg: 3, scope: !18369, file: !2644, line: 13, type: !132)
!18376 = !DILocation(line: 0, scope: !18369)
!18377 = !DILocation(line: 15, column: 19, scope: !18369)
!18378 = !DILocation(line: 15, column: 2, scope: !18369)
!18379 = !DILocation(line: 16, column: 20, scope: !18369)
!18380 = !DILocation(line: 16, column: 2, scope: !18369)
!18381 = !DILocation(line: 19, column: 1, scope: !18369)
!18382 = distinct !DISubprogram(name: "z_waitq_init", scope: !14395, file: !14395, line: 47, type: !18383, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !18386)
!18383 = !DISubroutineType(types: !18384)
!18384 = !{null, !18385}
!18385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18347, size: 32)
!18386 = !{!18387}
!18387 = !DILocalVariable(name: "w", arg: 1, scope: !18382, file: !14395, line: 47, type: !18385)
!18388 = !DILocation(line: 0, scope: !18382)
!18389 = !DILocation(line: 49, column: 21, scope: !18382)
!18390 = !DILocation(line: 49, column: 2, scope: !18382)
!18391 = !DILocation(line: 50, column: 1, scope: !18382)
!18392 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !18393, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !18396)
!18393 = !DISubroutineType(types: !18394)
!18394 = !{null, !18395}
!18395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18351, size: 32)
!18396 = !{!18397}
!18397 = !DILocalVariable(name: "list", arg: 1, scope: !18392, file: !146, line: 197, type: !18395)
!18398 = !DILocation(line: 0, scope: !18392)
!18399 = !DILocation(line: 199, column: 8, scope: !18392)
!18400 = !DILocation(line: 199, column: 13, scope: !18392)
!18401 = !DILocation(line: 200, column: 8, scope: !18392)
!18402 = !DILocation(line: 200, column: 13, scope: !18392)
!18403 = !DILocation(line: 201, column: 1, scope: !18392)
!18404 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2644, file: !2644, line: 64, type: !18405, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !18411)
!18405 = !DISubroutineType(types: !18406)
!18406 = !{!102, !18337, !132, !132, !18407}
!18407 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !18408)
!18408 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !18409)
!18409 = !{!18410}
!18410 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18408, file: !105, line: 66, baseType: !104, size: 64)
!18411 = !{!18412, !18413, !18414, !18415, !18416, !18417, !18418, !18419, !18424}
!18412 = !DILocalVariable(name: "h", arg: 1, scope: !18404, file: !2644, line: 64, type: !18337)
!18413 = !DILocalVariable(name: "align", arg: 2, scope: !18404, file: !2644, line: 64, type: !132)
!18414 = !DILocalVariable(name: "bytes", arg: 3, scope: !18404, file: !2644, line: 64, type: !132)
!18415 = !DILocalVariable(name: "timeout", arg: 4, scope: !18404, file: !2644, line: 65, type: !18407)
!18416 = !DILocalVariable(name: "now", scope: !18404, file: !2644, line: 67, type: !106)
!18417 = !DILocalVariable(name: "end", scope: !18404, file: !2644, line: 67, type: !106)
!18418 = !DILocalVariable(name: "ret", scope: !18404, file: !2644, line: 68, type: !102)
!18419 = !DILocalVariable(name: "key", scope: !18404, file: !2644, line: 72, type: !18420)
!18420 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !18421)
!18421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !18422)
!18422 = !{!18423}
!18423 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18421, file: !250, line: 33, baseType: !103, size: 32)
!18424 = !DILocalVariable(name: "blocked_alloc", scope: !18404, file: !2644, line: 78, type: !131)
!18425 = !DILocation(line: 0, scope: !18404)
!18426 = !DILocation(line: 67, column: 21, scope: !18404)
!18427 = !DILocation(line: 70, column: 8, scope: !18404)
!18428 = !DILocation(line: 72, column: 41, scope: !18404)
!18429 = !DILocalVariable(name: "l", arg: 1, scope: !18430, file: !250, line: 136, type: !18433)
!18430 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !18431, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !18434)
!18431 = !DISubroutineType(types: !18432)
!18432 = !{!18420, !18433}
!18433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18353, size: 32)
!18434 = !{!18429, !18435}
!18435 = !DILocalVariable(name: "k", scope: !18430, file: !250, line: 139, type: !18420)
!18436 = !DILocation(line: 0, scope: !18430, inlinedAt: !18437)
!18437 = distinct !DILocation(line: 72, column: 25, scope: !18404)
!18438 = !DILocation(line: 55, column: 2, scope: !18439, inlinedAt: !18443)
!18439 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6946, file: !6946, line: 42, type: !6947, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !18440)
!18440 = !{!18441, !18442}
!18441 = !DILocalVariable(name: "key", scope: !18439, file: !6946, line: 44, type: !32)
!18442 = !DILocalVariable(name: "tmp", scope: !18439, file: !6946, line: 53, type: !32)
!18443 = distinct !DILocation(line: 145, column: 10, scope: !18430, inlinedAt: !18437)
!18444 = !{i64 1650779}
!18445 = !DILocation(line: 0, scope: !18439, inlinedAt: !18443)
!18446 = !DILocation(line: 81, column: 9, scope: !18447)
!18447 = distinct !DILexicalBlock(scope: !18404, file: !2644, line: 80, column: 22)
!18448 = !DILocation(line: 83, column: 9, scope: !18447)
!18449 = !DILocation(line: 85, column: 12, scope: !18450)
!18450 = distinct !DILexicalBlock(scope: !18447, file: !2644, line: 84, column: 7)
!18451 = !DILocation(line: 85, column: 21, scope: !18450)
!18452 = !DILocation(line: 85, column: 30, scope: !18450)
!18453 = !DILocation(line: 85, column: 37, scope: !18450)
!18454 = !DILocation(line: 84, column: 7, scope: !18447)
!18455 = !DILocation(line: 99, column: 10, scope: !18447)
!18456 = !DILocation(line: 0, scope: !18430, inlinedAt: !18457)
!18457 = distinct !DILocation(line: 101, column: 9, scope: !18447)
!18458 = !DILocation(line: 55, column: 2, scope: !18439, inlinedAt: !18459)
!18459 = distinct !DILocation(line: 145, column: 10, scope: !18430, inlinedAt: !18457)
!18460 = !DILocation(line: 0, scope: !18439, inlinedAt: !18459)
!18461 = distinct !{!18461, !18462, !18463}
!18462 = !DILocation(line: 80, column: 2, scope: !18404)
!18463 = !DILocation(line: 102, column: 2, scope: !18404)
!18464 = !DILocalVariable(name: "key", arg: 2, scope: !18465, file: !250, line: 190, type: !18420)
!18465 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !18466, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !18468)
!18466 = !DISubroutineType(types: !18467)
!18467 = !{null, !18433, !18420}
!18468 = !{!18469, !18464}
!18469 = !DILocalVariable(name: "l", arg: 1, scope: !18465, file: !250, line: 189, type: !18433)
!18470 = !DILocation(line: 0, scope: !18465, inlinedAt: !18471)
!18471 = distinct !DILocation(line: 106, column: 2, scope: !18404)
!18472 = !DILocalVariable(name: "key", arg: 1, scope: !18473, file: !6946, line: 84, type: !32)
!18473 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6946, file: !6946, line: 84, type: !6957, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !18474)
!18474 = !{!18472}
!18475 = !DILocation(line: 0, scope: !18473, inlinedAt: !18476)
!18476 = distinct !DILocation(line: 215, column: 2, scope: !18465, inlinedAt: !18471)
!18477 = !DILocation(line: 95, column: 2, scope: !18473, inlinedAt: !18476)
!18478 = !{i64 1651596}
!18479 = !DILocation(line: 107, column: 2, scope: !18404)
!18480 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2644, file: !2644, line: 110, type: !18481, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !18483)
!18481 = !DISubroutineType(types: !18482)
!18482 = !{!102, !18337, !132, !18407}
!18483 = !{!18484, !18485, !18486, !18487}
!18484 = !DILocalVariable(name: "h", arg: 1, scope: !18480, file: !2644, line: 110, type: !18337)
!18485 = !DILocalVariable(name: "bytes", arg: 2, scope: !18480, file: !2644, line: 110, type: !132)
!18486 = !DILocalVariable(name: "timeout", arg: 3, scope: !18480, file: !2644, line: 110, type: !18407)
!18487 = !DILocalVariable(name: "ret", scope: !18480, file: !2644, line: 114, type: !102)
!18488 = !DILocation(line: 0, scope: !18480)
!18489 = !DILocation(line: 114, column: 14, scope: !18480)
!18490 = !DILocation(line: 118, column: 2, scope: !18480)
!18491 = distinct !DISubprogram(name: "k_heap_free", scope: !2644, file: !2644, line: 121, type: !18492, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !18494)
!18492 = !DISubroutineType(types: !18493)
!18493 = !{null, !18337, !102}
!18494 = !{!18495, !18496, !18497}
!18495 = !DILocalVariable(name: "h", arg: 1, scope: !18491, file: !2644, line: 121, type: !18337)
!18496 = !DILocalVariable(name: "mem", arg: 2, scope: !18491, file: !2644, line: 121, type: !102)
!18497 = !DILocalVariable(name: "key", scope: !18491, file: !2644, line: 123, type: !18420)
!18498 = !DILocation(line: 0, scope: !18491)
!18499 = !DILocation(line: 0, scope: !18430, inlinedAt: !18500)
!18500 = distinct !DILocation(line: 123, column: 25, scope: !18491)
!18501 = !DILocation(line: 55, column: 2, scope: !18439, inlinedAt: !18502)
!18502 = distinct !DILocation(line: 145, column: 10, scope: !18430, inlinedAt: !18500)
!18503 = !DILocation(line: 0, scope: !18439, inlinedAt: !18502)
!18504 = !DILocation(line: 125, column: 20, scope: !18491)
!18505 = !DILocation(line: 125, column: 2, scope: !18491)
!18506 = !DILocation(line: 128, column: 60, scope: !18507)
!18507 = distinct !DILexicalBlock(scope: !18491, file: !2644, line: 128, column: 6)
!18508 = !DILocation(line: 128, column: 43, scope: !18507)
!18509 = !DILocation(line: 128, column: 68, scope: !18507)
!18510 = !DILocation(line: 128, column: 6, scope: !18491)
!18511 = !DILocation(line: 123, column: 41, scope: !18491)
!18512 = !DILocation(line: 129, column: 3, scope: !18513)
!18513 = distinct !DILexicalBlock(scope: !18507, file: !2644, line: 128, column: 74)
!18514 = !DILocation(line: 130, column: 2, scope: !18513)
!18515 = !DILocation(line: 0, scope: !18465, inlinedAt: !18516)
!18516 = distinct !DILocation(line: 131, column: 3, scope: !18517)
!18517 = distinct !DILexicalBlock(scope: !18507, file: !2644, line: 130, column: 9)
!18518 = !DILocation(line: 0, scope: !18473, inlinedAt: !18519)
!18519 = distinct !DILocation(line: 215, column: 2, scope: !18465, inlinedAt: !18516)
!18520 = !DILocation(line: 95, column: 2, scope: !18473, inlinedAt: !18519)
!18521 = !DILocation(line: 133, column: 1, scope: !18491)
